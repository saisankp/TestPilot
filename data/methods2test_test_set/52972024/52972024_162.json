{"test_class": {"identifier": "MessageBusContainerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IStrategyContainer container = new StrategyContainer();", "modifier": "private", "type": "IStrategyContainer", "declarator": "container = new StrategyContainer()", "var_name": "container"}], "file": "CoreFeatures/MessageBus/MessageBusContainerWithScope/src/test/java/info/smart_tools/smartactors/message_bus/message_bus_container_with_scope/MessageBusContainerTest.java"}, "test_case": {"identifier": "checkSendingMessageExceptionOnSendingWithSpecificChainAndReply", "parameters": "()", "modifiers": "@Test (expected = SendingMessageException.class) public", "return": "void", "body": "@Test (expected = SendingMessageException.class)\n    public void checkSendingMessageExceptionOnSendingWithSpecificChainAndReply()\n            throws Exception {\n        IMessageBusContainer messageBusContainer = new MessageBusContainer();\n        messageBusContainer.sendAndReply(null, null, null);\n        fail();\n    }", "signature": "void checkSendingMessageExceptionOnSendingWithSpecificChainAndReply()", "full_signature": "@Test (expected = SendingMessageException.class) public void checkSendingMessageExceptionOnSendingWithSpecificChainAndReply()", "class_method_signature": "MessageBusContainerTest.checkSendingMessageExceptionOnSendingWithSpecificChainAndReply()", "testcase": true, "constructor": false, "invocations": ["sendAndReply", "fail"]}, "focal_class": {"identifier": "MessageBusContainer", "superclass": "", "interfaces": "implements IMessageBusContainer", "fields": [{"original_string": "private IKey messageBusContainerKey;", "modifier": "private", "type": "IKey", "declarator": "messageBusContainerKey", "var_name": "messageBusContainerKey"}], "methods": [{"identifier": "MessageBusContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " MessageBusContainer()", "full_signature": "public  MessageBusContainer()", "class_method_signature": "MessageBusContainer.MessageBusContainer()", "testcase": false, "constructor": true}, {"identifier": "getMessageBusKey", "parameters": "()", "modifiers": "@Override public", "return": "IKey", "signature": "IKey getMessageBusKey()", "full_signature": "@Override public IKey getMessageBusKey()", "class_method_signature": "MessageBusContainer.getMessageBusKey()", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final IObject message)", "modifiers": "@Override public", "return": "void", "signature": "void send(final IObject message)", "full_signature": "@Override public void send(final IObject message)", "class_method_signature": "MessageBusContainer.send(final IObject message)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final IObject message, final Object chainName)", "modifiers": "@Override public", "return": "void", "signature": "void send(final IObject message, final Object chainName)", "full_signature": "@Override public void send(final IObject message, final Object chainName)", "class_method_signature": "MessageBusContainer.send(final IObject message, final Object chainName)", "testcase": false, "constructor": false}, {"identifier": "sendAndReply", "parameters": "(final IObject message, final Object replyToChainName)", "modifiers": "@Override public", "return": "void", "signature": "void sendAndReply(final IObject message, final Object replyToChainName)", "full_signature": "@Override public void sendAndReply(final IObject message, final Object replyToChainName)", "class_method_signature": "MessageBusContainer.sendAndReply(final IObject message, final Object replyToChainName)", "testcase": false, "constructor": false}, {"identifier": "sendAndReply", "parameters": "(final IObject message, final Object chainName, final Object replyToChainName)", "modifiers": "@Override public", "return": "void", "signature": "void sendAndReply(final IObject message, final Object chainName, final Object replyToChainName)", "full_signature": "@Override public void sendAndReply(final IObject message, final Object chainName, final Object replyToChainName)", "class_method_signature": "MessageBusContainer.sendAndReply(final IObject message, final Object chainName, final Object replyToChainName)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageBus/MessageBusContainerWithScope/src/main/java/info/smart_tools/smartactors/message_bus/message_bus_container_with_scope/MessageBusContainer.java"}, "focal_method": {"identifier": "sendAndReply", "parameters": "(final IObject message, final Object replyToChainName)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void sendAndReply(final IObject message, final Object replyToChainName)\n            throws SendingMessageException {\n        try {\n            final IMessageBusHandler handler = (IMessageBusHandler) ScopeProvider\n                    .getCurrentScope()\n                    .getValue(messageBusContainerKey);\n            handler.handleForReply(message, replyToChainName);\n        } catch (ScopeException e) {\n            throw new SendingMessageException(\"Could not get MessageBusContainer with key: \" + messageBusContainerKey + \" from the current scope.\", e);\n        } catch (ScopeProviderException e) {\n            throw new SendingMessageException(\"Could not get current scope.\", e);\n        } catch (Throwable e) {\n            throw new SendingMessageException(\"Could not send message with a reply to chain \" + replyToChainName, e);\n        }\n    }", "signature": "void sendAndReply(final IObject message, final Object replyToChainName)", "full_signature": "@Override public void sendAndReply(final IObject message, final Object replyToChainName)", "class_method_signature": "MessageBusContainer.sendAndReply(final IObject message, final Object replyToChainName)", "testcase": false, "constructor": false, "invocations": ["getValue", "getCurrentScope", "handleForReply"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}