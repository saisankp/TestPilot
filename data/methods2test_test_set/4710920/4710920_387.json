{"test_class": {"identifier": "InmemoryConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InmemoryConfiguration memConfig;", "modifier": "private", "type": "InmemoryConfiguration", "declarator": "memConfig", "var_name": "memConfig"}, {"original_string": "private static final String MOCK_KEY = \"mockKey\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_KEY = \"mockKey\"", "var_name": "MOCK_KEY"}, {"original_string": "private static final String MOCK_VALUE = \"mockValue\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_VALUE = \"mockValue\"", "var_name": "MOCK_VALUE"}, {"original_string": "private static final String MOCK_ONE_KEY = \"one\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_ONE_KEY = \"one\"", "var_name": "MOCK_ONE_KEY"}, {"original_string": "private static final String MOCK_TWO_KEY = \"two\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_TWO_KEY = \"two\"", "var_name": "MOCK_TWO_KEY"}, {"original_string": "private static final String MOCK_THREE_KEY = \"three\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_THREE_KEY = \"three\"", "var_name": "MOCK_THREE_KEY"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/config/InmemoryConfigurationTest.java"}, "test_case": {"identifier": "testGetInt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInt() {\n        memConfig.addProperty(\"a\", \"1\");\n        Assertions.assertEquals(1, memConfig.getInt(\"a\"));\n        Assertions.assertEquals(Integer.valueOf(1), memConfig.getInteger(\"a\", 2));\n        Assertions.assertEquals(2, memConfig.getInt(\"b\", 2));\n    }", "signature": "void testGetInt()", "full_signature": "@Test public void testGetInt()", "class_method_signature": "InmemoryConfigurationTest.testGetInt()", "testcase": true, "constructor": false, "invocations": ["addProperty", "assertEquals", "getInt", "assertEquals", "valueOf", "getInteger", "assertEquals", "getInt"]}, "focal_class": {"identifier": "InmemoryConfiguration", "superclass": "", "interfaces": "implements Configuration", "fields": [{"original_string": "private Map<String, String> store = new LinkedHashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "store = new LinkedHashMap<>()", "var_name": "store"}], "methods": [{"identifier": "getInternalProperty", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object getInternalProperty(String key)", "full_signature": "@Override public Object getInternalProperty(String key)", "class_method_signature": "InmemoryConfiguration.getInternalProperty(String key)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "signature": "void addProperty(String key, String value)", "full_signature": "public void addProperty(String key, String value)", "class_method_signature": "InmemoryConfiguration.addProperty(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "void", "signature": "void addProperties(Map<String, String> properties)", "full_signature": "public void addProperties(Map<String, String> properties)", "class_method_signature": "InmemoryConfiguration.addProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "void", "signature": "void setProperties(Map<String, String> properties)", "full_signature": "public void setProperties(Map<String, String> properties)", "class_method_signature": "InmemoryConfiguration.setProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "InmemoryConfiguration.clear()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/config/InmemoryConfiguration.java"}, "focal_method": {"identifier": "addProperty", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "body": "public void addProperty(String key, String value) {\n        store.put(key, value);\n    }", "signature": "void addProperty(String key, String value)", "full_signature": "public void addProperty(String key, String value)", "class_method_signature": "InmemoryConfiguration.addProperty(String key, String value)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}