{"test_class": {"identifier": "ViewerPreferencesUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/util/ViewerPreferencesUtilsTest.java"}, "test_case": {"identifier": "testGetDirection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDirection() {\n        assertEquals(PDViewerPreferences.READING_DIRECTION.L2R,\n                ViewerPreferencesUtils.getDirection(PdfDirection.LEFT_TO_RIGHT));\n        assertEquals(PDViewerPreferences.READING_DIRECTION.R2L,\n                ViewerPreferencesUtils.getDirection(PdfDirection.RIGHT_TO_LEFT));\n    }", "signature": "void testGetDirection()", "full_signature": "@Test public void testGetDirection()", "class_method_signature": "ViewerPreferencesUtilsTest.testGetDirection()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDirection", "assertEquals", "getDirection"]}, "focal_class": {"identifier": "ViewerPreferencesUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ViewerPreferencesUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ViewerPreferencesUtils.class)", "var_name": "LOG"}, {"original_string": "private static final Map<PdfNonFullScreenPageMode, NON_FULL_SCREEN_PAGE_MODE> NFS_MODE_CACHE;", "modifier": "private static final", "type": "Map<PdfNonFullScreenPageMode, NON_FULL_SCREEN_PAGE_MODE>", "declarator": "NFS_MODE_CACHE", "var_name": "NFS_MODE_CACHE"}, {"original_string": "private static final Map<PdfPageLayout, PageLayout> LAYOUT_CACHE;", "modifier": "private static final", "type": "Map<PdfPageLayout, PageLayout>", "declarator": "LAYOUT_CACHE", "var_name": "LAYOUT_CACHE"}, {"original_string": "private static final Map<PdfPageMode, PageMode> PAGE_MODE_CACHE;", "modifier": "private static final", "type": "Map<PdfPageMode, PageMode>", "declarator": "PAGE_MODE_CACHE", "var_name": "PAGE_MODE_CACHE"}, {"original_string": "private static final Map<PdfDuplex, DUPLEX> DUPLEX_CACHE;", "modifier": "private static final", "type": "Map<PdfDuplex, DUPLEX>", "declarator": "DUPLEX_CACHE", "var_name": "DUPLEX_CACHE"}], "methods": [{"identifier": "ViewerPreferencesUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ViewerPreferencesUtils()", "full_signature": "private  ViewerPreferencesUtils()", "class_method_signature": "ViewerPreferencesUtils.ViewerPreferencesUtils()", "testcase": false, "constructor": true}, {"identifier": "getNFSMode", "parameters": "(PdfNonFullScreenPageMode nfsMode)", "modifiers": "public static", "return": "NON_FULL_SCREEN_PAGE_MODE", "signature": "NON_FULL_SCREEN_PAGE_MODE getNFSMode(PdfNonFullScreenPageMode nfsMode)", "full_signature": "public static NON_FULL_SCREEN_PAGE_MODE getNFSMode(PdfNonFullScreenPageMode nfsMode)", "class_method_signature": "ViewerPreferencesUtils.getNFSMode(PdfNonFullScreenPageMode nfsMode)", "testcase": false, "constructor": false}, {"identifier": "getPageMode", "parameters": "(PdfPageMode mode)", "modifiers": "public static", "return": "PageMode", "signature": "PageMode getPageMode(PdfPageMode mode)", "full_signature": "public static PageMode getPageMode(PdfPageMode mode)", "class_method_signature": "ViewerPreferencesUtils.getPageMode(PdfPageMode mode)", "testcase": false, "constructor": false}, {"identifier": "getPageLayout", "parameters": "(PdfPageLayout layout)", "modifiers": "public static", "return": "PageLayout", "signature": "PageLayout getPageLayout(PdfPageLayout layout)", "full_signature": "public static PageLayout getPageLayout(PdfPageLayout layout)", "class_method_signature": "ViewerPreferencesUtils.getPageLayout(PdfPageLayout layout)", "testcase": false, "constructor": false}, {"identifier": "getDirection", "parameters": "(PdfDirection direction)", "modifiers": "public static", "return": "READING_DIRECTION", "signature": "READING_DIRECTION getDirection(PdfDirection direction)", "full_signature": "public static READING_DIRECTION getDirection(PdfDirection direction)", "class_method_signature": "ViewerPreferencesUtils.getDirection(PdfDirection direction)", "testcase": false, "constructor": false}, {"identifier": "getDuplex", "parameters": "(PdfDuplex duplex)", "modifiers": "public static", "return": "DUPLEX", "signature": "DUPLEX getDuplex(PdfDuplex duplex)", "full_signature": "public static DUPLEX getDuplex(PdfDuplex duplex)", "class_method_signature": "ViewerPreferencesUtils.getDuplex(PdfDuplex duplex)", "testcase": false, "constructor": false}, {"identifier": "getPrintScaling", "parameters": "(PdfPrintScaling scaling)", "modifiers": "public static", "return": "PRINT_SCALING", "signature": "PRINT_SCALING getPrintScaling(PdfPrintScaling scaling)", "full_signature": "public static PRINT_SCALING getPrintScaling(PdfPrintScaling scaling)", "class_method_signature": "ViewerPreferencesUtils.getPrintScaling(PdfPrintScaling scaling)", "testcase": false, "constructor": false}, {"identifier": "setBooleanPreferences", "parameters": "(PDViewerPreferences preferences, Set<PdfBooleanPreference> enabled)", "modifiers": "public static", "return": "void", "signature": "void setBooleanPreferences(PDViewerPreferences preferences, Set<PdfBooleanPreference> enabled)", "full_signature": "public static void setBooleanPreferences(PDViewerPreferences preferences, Set<PdfBooleanPreference> enabled)", "class_method_signature": "ViewerPreferencesUtils.setBooleanPreferences(PDViewerPreferences preferences, Set<PdfBooleanPreference> enabled)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/util/ViewerPreferencesUtils.java"}, "focal_method": {"identifier": "getDirection", "parameters": "(PdfDirection direction)", "modifiers": "public static", "return": "READING_DIRECTION", "body": "public static READING_DIRECTION getDirection(PdfDirection direction) {\n        if (PdfDirection.RIGHT_TO_LEFT.equals(direction)) {\n            return PDViewerPreferences.READING_DIRECTION.R2L;\n        }\n        return PDViewerPreferences.READING_DIRECTION.L2R;\n    }", "signature": "READING_DIRECTION getDirection(PdfDirection direction)", "full_signature": "public static READING_DIRECTION getDirection(PdfDirection direction)", "class_method_signature": "ViewerPreferencesUtils.getDirection(PdfDirection direction)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}