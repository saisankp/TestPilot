{"test_class": {"identifier": "DirectToDbApplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private QueryExecuter queryExecuter;", "modifier": "@Mock private", "type": "QueryExecuter", "declarator": "queryExecuter", "var_name": "queryExecuter"}, {"original_string": "@Mock private DatabaseSchemaVersionManager schemaVersionManager;", "modifier": "@Mock private", "type": "DatabaseSchemaVersionManager", "declarator": "schemaVersionManager", "var_name": "schemaVersionManager"}, {"original_string": "@Mock private QueryStatementSplitter splitter;", "modifier": "@Mock private", "type": "QueryStatementSplitter", "declarator": "splitter", "var_name": "splitter"}, {"original_string": "private DirectToDbApplier applier;", "modifier": "private", "type": "DirectToDbApplier", "declarator": "applier", "var_name": "applier"}], "file": "dbdeploy-core/src/test/java/com/dbdeploy/appliers/DirectToDbApplierTest.java"}, "test_case": {"identifier": "shouldApplyChangeScriptBySplittingContentUsingTheSplitter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldApplyChangeScriptBySplittingContentUsingTheSplitter() throws Exception {\n        when(splitter.split(\"split; content\")).thenReturn(Arrays.asList(\"split\", \"content\"));\n\n\t\tapplier.applyChangeScript(new StubChangeScript(1, \"script\", \"split; content\"));\n\t\t\n\t\tverify(queryExecuter).execute(\"split\");\n\t\tverify(queryExecuter).execute(\"content\");\n\t}", "signature": "void shouldApplyChangeScriptBySplittingContentUsingTheSplitter()", "full_signature": "@Test public void shouldApplyChangeScriptBySplittingContentUsingTheSplitter()", "class_method_signature": "DirectToDbApplierTest.shouldApplyChangeScriptBySplittingContentUsingTheSplitter()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "split", "asList", "applyChangeScript", "execute", "verify", "execute", "verify"]}, "focal_class": {"identifier": "DirectToDbApplier", "superclass": "", "interfaces": "implements ChangeScriptApplier", "fields": [{"original_string": "private final QueryExecuter queryExecuter;", "modifier": "private final", "type": "QueryExecuter", "declarator": "queryExecuter", "var_name": "queryExecuter"}, {"original_string": "private final DatabaseSchemaVersionManager schemaVersionManager;", "modifier": "private final", "type": "DatabaseSchemaVersionManager", "declarator": "schemaVersionManager", "var_name": "schemaVersionManager"}, {"original_string": "private final QueryStatementSplitter splitter;", "modifier": "private final", "type": "QueryStatementSplitter", "declarator": "splitter", "var_name": "splitter"}], "methods": [{"identifier": "DirectToDbApplier", "parameters": "(QueryExecuter queryExecuter, DatabaseSchemaVersionManager schemaVersionManager, QueryStatementSplitter splitter)", "modifiers": "public", "return": "", "signature": " DirectToDbApplier(QueryExecuter queryExecuter, DatabaseSchemaVersionManager schemaVersionManager, QueryStatementSplitter splitter)", "full_signature": "public  DirectToDbApplier(QueryExecuter queryExecuter, DatabaseSchemaVersionManager schemaVersionManager, QueryStatementSplitter splitter)", "class_method_signature": "DirectToDbApplier.DirectToDbApplier(QueryExecuter queryExecuter, DatabaseSchemaVersionManager schemaVersionManager, QueryStatementSplitter splitter)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(List<ChangeScript> changeScript)", "modifiers": "public", "return": "void", "signature": "void apply(List<ChangeScript> changeScript)", "full_signature": "public void apply(List<ChangeScript> changeScript)", "class_method_signature": "DirectToDbApplier.apply(List<ChangeScript> changeScript)", "testcase": false, "constructor": false}, {"identifier": "begin", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void begin()", "full_signature": "public void begin()", "class_method_signature": "DirectToDbApplier.begin()", "testcase": false, "constructor": false}, {"identifier": "applyChangeScript", "parameters": "(ChangeScript script)", "modifiers": "protected", "return": "void", "signature": "void applyChangeScript(ChangeScript script)", "full_signature": "protected void applyChangeScript(ChangeScript script)", "class_method_signature": "DirectToDbApplier.applyChangeScript(ChangeScript script)", "testcase": false, "constructor": false}, {"identifier": "insertToSchemaVersionTable", "parameters": "(ChangeScript changeScript)", "modifiers": "protected", "return": "void", "signature": "void insertToSchemaVersionTable(ChangeScript changeScript)", "full_signature": "protected void insertToSchemaVersionTable(ChangeScript changeScript)", "class_method_signature": "DirectToDbApplier.insertToSchemaVersionTable(ChangeScript changeScript)", "testcase": false, "constructor": false}, {"identifier": "commitTransaction", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void commitTransaction()", "full_signature": "protected void commitTransaction()", "class_method_signature": "DirectToDbApplier.commitTransaction()", "testcase": false, "constructor": false}], "file": "dbdeploy-core/src/main/java/com/dbdeploy/appliers/DirectToDbApplier.java"}, "focal_method": {"identifier": "applyChangeScript", "parameters": "(ChangeScript script)", "modifiers": "protected", "return": "void", "body": "protected void applyChangeScript(ChangeScript script) {\n\t\tList<String> statements = splitter.split(script.getContent());\n\n\t\tfor (int i = 0; i < statements.size(); i++) {\n\t\t\tString statement = statements.get(i);\n\t\t\ttry {\n\t\t\t\tif (statements.size() > 1) {\n\t\t\t\t\tSystem.err.println(\" -> statement \" + (i+1) + \" of \" + statements.size() + \"...\");\n\t\t\t\t}\n\t\t\t\tqueryExecuter.execute(statement);\n\t\t\t} catch (SQLException e) {\n\t\t\t\tthrow new ChangeScriptFailedException(e, script, i+1, statement);\n\t\t\t}\n\t\t}\n\t}", "signature": "void applyChangeScript(ChangeScript script)", "full_signature": "protected void applyChangeScript(ChangeScript script)", "class_method_signature": "DirectToDbApplier.applyChangeScript(ChangeScript script)", "testcase": false, "constructor": false, "invocations": ["split", "getContent", "size", "get", "size", "println", "size", "execute"]}, "repository": {"repo_id": 145875, "url": "https://github.com/tackley/dbdeploy", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 64, "size": 7295, "license": "licensed"}}