{"test_class": {"identifier": "SequenceCleanerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CurrentDateProvider dateProvider;", "modifier": "@Mock\n    private", "type": "CurrentDateProvider", "declarator": "dateProvider", "var_name": "dateProvider"}, {"original_string": "@Mock\n    private SequenceDescriptor descriptor;", "modifier": "@Mock\n    private", "type": "SequenceDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "@Mock\n    private WilmaSequence firstSequence;", "modifier": "@Mock\n    private", "type": "WilmaSequence", "declarator": "firstSequence", "var_name": "firstSequence"}, {"original_string": "@Mock\n    private WilmaSequence secondSequence;", "modifier": "@Mock\n    private", "type": "WilmaSequence", "declarator": "secondSequence", "var_name": "secondSequence"}, {"original_string": "private Map<String, SequenceDescriptor> descriptors;", "modifier": "private", "type": "Map<String, SequenceDescriptor>", "declarator": "descriptors", "var_name": "descriptors"}, {"original_string": "@InjectMocks\n    private SequenceCleaner underTest;", "modifier": "@InjectMocks\n    private", "type": "SequenceCleaner", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-message-sequence/src/test/java/com/epam/wilma/sequence/cleaner/SequenceCleanerTest.java"}, "test_case": {"identifier": "testCleanTheExpiredSequences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCleanTheExpiredSequences() {\n        //GIVEN\n        descriptors.put(\"TestKey1\", descriptor);\n        List<WilmaSequence> sequences = new ArrayList<>();\n        sequences.add(firstSequence);\n        sequences.add(secondSequence);\n        given(descriptor.getSequencesInCollection()).willReturn(sequences);\n        given(firstSequence.isExpired(new Timestamp(1000L))).willReturn(false);\n        given(secondSequence.isExpired(new Timestamp(1000L))).willReturn(true);\n        //WHEN\n        underTest.cleanTheExpiredSequences(descriptors);\n        //THEN\n        Assert.assertEquals(sequences.size(), 1);\n    }", "signature": "void testCleanTheExpiredSequences()", "full_signature": "@Test public void testCleanTheExpiredSequences()", "class_method_signature": "SequenceCleanerTest.testCleanTheExpiredSequences()", "testcase": true, "constructor": false, "invocations": ["put", "add", "add", "willReturn", "given", "getSequencesInCollection", "willReturn", "given", "isExpired", "willReturn", "given", "isExpired", "cleanTheExpiredSequences", "assertEquals", "size"]}, "focal_class": {"identifier": "SequenceCleaner", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private CurrentDateProvider dateProvider;", "modifier": "@Autowired\n    private", "type": "CurrentDateProvider", "declarator": "dateProvider", "var_name": "dateProvider"}], "methods": [{"identifier": "cleanTheExpiredSequences", "parameters": "(final Map<String, SequenceDescriptor> descriptors)", "modifiers": "public", "return": "void", "signature": "void cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "full_signature": "public void cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "class_method_signature": "SequenceCleaner.cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "testcase": false, "constructor": false}, {"identifier": "cleanSequences", "parameters": "(final SequenceDescriptor sequenceDescriptor)", "modifiers": "private", "return": "void", "signature": "void cleanSequences(final SequenceDescriptor sequenceDescriptor)", "full_signature": "private void cleanSequences(final SequenceDescriptor sequenceDescriptor)", "class_method_signature": "SequenceCleaner.cleanSequences(final SequenceDescriptor sequenceDescriptor)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-sequence/src/main/java/com/epam/wilma/sequence/cleaner/SequenceCleaner.java"}, "focal_method": {"identifier": "cleanTheExpiredSequences", "parameters": "(final Map<String, SequenceDescriptor> descriptors)", "modifiers": "public", "return": "void", "body": "public void cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors) {\n        for (SequenceDescriptor descriptor : descriptors.values()) {\n            cleanSequences(descriptor);\n        }\n    }", "signature": "void cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "full_signature": "public void cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "class_method_signature": "SequenceCleaner.cleanTheExpiredSequences(final Map<String, SequenceDescriptor> descriptors)", "testcase": false, "constructor": false, "invocations": ["values", "cleanSequences"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}