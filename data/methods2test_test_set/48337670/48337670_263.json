{"test_class": {"identifier": "HttpServiceUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ORG_OSGI_SERVICE_HTTP_SERVICE = \"org.osgi.service.http.HttpService\";", "modifier": "private static final", "type": "String", "declarator": "ORG_OSGI_SERVICE_HTTP_SERVICE = \"org.osgi.service.http.HttpService\"", "var_name": "ORG_OSGI_SERVICE_HTTP_SERVICE"}, {"original_string": "private static final String HTTP_PORT = \"org.osgi.service.http.port\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_PORT = \"org.osgi.service.http.port\"", "var_name": "HTTP_PORT"}, {"original_string": "private static final String HTTP_PORT_SECURE = \"org.osgi.service.http.port.secure\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_PORT_SECURE = \"org.osgi.service.http.port.secure\"", "var_name": "HTTP_PORT_SECURE"}, {"original_string": "private @Mock BundleContext bundleContext;", "modifier": "private @Mock", "type": "BundleContext", "declarator": "bundleContext", "var_name": "bundleContext"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/net/HttpServiceUtilTest.java"}, "test_case": {"identifier": "shouldReturnUndefinedForException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnUndefinedForException() throws InvalidSyntaxException {\n        when(bundleContext.getAllServiceReferences(ORG_OSGI_SERVICE_HTTP_SERVICE, null))\n                .thenThrow(new InvalidSyntaxException(null, null));\n\n        int undfinedPort = HttpServiceUtil.getHttpServicePort(bundleContext);\n        assertThat(undfinedPort, is(-1));\n    }", "signature": "void shouldReturnUndefinedForException()", "full_signature": "@Test public void shouldReturnUndefinedForException()", "class_method_signature": "HttpServiceUtilTest.shouldReturnUndefinedForException()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "when", "getAllServiceReferences", "getHttpServicePort", "assertThat", "is"]}, "focal_class": {"identifier": "HttpServiceUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HttpServiceUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " HttpServiceUtil()", "full_signature": "private  HttpServiceUtil()", "class_method_signature": "HttpServiceUtil.HttpServiceUtil()", "testcase": false, "constructor": true}, {"identifier": "getHttpServicePort", "parameters": "(final BundleContext bc)", "modifiers": "public static", "return": "int", "signature": "int getHttpServicePort(final BundleContext bc)", "full_signature": "public static int getHttpServicePort(final BundleContext bc)", "class_method_signature": "HttpServiceUtil.getHttpServicePort(final BundleContext bc)", "testcase": false, "constructor": false}, {"identifier": "getHttpServicePortSecure", "parameters": "(final BundleContext bc)", "modifiers": "public static", "return": "int", "signature": "int getHttpServicePortSecure(final BundleContext bc)", "full_signature": "public static int getHttpServicePortSecure(final BundleContext bc)", "class_method_signature": "HttpServiceUtil.getHttpServicePortSecure(final BundleContext bc)", "testcase": false, "constructor": false}, {"identifier": "getHttpServicePortProperty", "parameters": "(final BundleContext bc, final String propertyName)", "modifiers": "private static", "return": "int", "signature": "int getHttpServicePortProperty(final BundleContext bc, final String propertyName)", "full_signature": "private static int getHttpServicePortProperty(final BundleContext bc, final String propertyName)", "class_method_signature": "HttpServiceUtil.getHttpServicePortProperty(final BundleContext bc, final String propertyName)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/net/HttpServiceUtil.java"}, "focal_method": {"identifier": "getHttpServicePort", "parameters": "(final BundleContext bc)", "modifiers": "public static", "return": "int", "body": "public static int getHttpServicePort(final BundleContext bc) {\n        return getHttpServicePortProperty(bc, \"org.osgi.service.http.port\");\n    }", "signature": "int getHttpServicePort(final BundleContext bc)", "full_signature": "public static int getHttpServicePort(final BundleContext bc)", "class_method_signature": "HttpServiceUtil.getHttpServicePort(final BundleContext bc)", "testcase": false, "constructor": false, "invocations": ["getHttpServicePortProperty"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}