{"test_class": {"identifier": "ModifyTransactionRequestBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MemberName memberName = MemberName.forName(\"member-1\");", "modifier": "private final", "type": "MemberName", "declarator": "memberName = MemberName.forName(\"member-1\")", "var_name": "memberName"}, {"original_string": "private final FrontendType frontendType = FrontendType.forName(\"test\");", "modifier": "private final", "type": "FrontendType", "declarator": "frontendType = FrontendType.forName(\"test\")", "var_name": "frontendType"}, {"original_string": "private final FrontendIdentifier frontendId = FrontendIdentifier.create(memberName, frontendType);", "modifier": "private final", "type": "FrontendIdentifier", "declarator": "frontendId = FrontendIdentifier.create(memberName, frontendType)", "var_name": "frontendId"}, {"original_string": "private final ClientIdentifier clientId = ClientIdentifier.create(frontendId, 0);", "modifier": "private final", "type": "ClientIdentifier", "declarator": "clientId = ClientIdentifier.create(frontendId, 0)", "var_name": "clientId"}, {"original_string": "private final TransactionIdentifier transactionIdentifier =\n            new TransactionIdentifier(new LocalHistoryIdentifier(clientId, 0L), 0L);", "modifier": "private final", "type": "TransactionIdentifier", "declarator": "transactionIdentifier =\n            new TransactionIdentifier(new LocalHistoryIdentifier(clientId, 0L), 0L)", "var_name": "transactionIdentifier"}, {"original_string": "private final ActorRef actorRef = ActorSystem.create(\"test\").actorOf(Props.create(TestActors.EchoActor.class));", "modifier": "private final", "type": "ActorRef", "declarator": "actorRef = ActorSystem.create(\"test\").actorOf(Props.create(TestActors.EchoActor.class))", "var_name": "actorRef"}, {"original_string": "private final NormalizedNode<?, ?> node = Builders.containerBuilder().withNodeIdentifier(\n            YangInstanceIdentifier.NodeIdentifier.create(QName.create(\"namespace\", \"localName\"))).build();", "modifier": "private final", "type": "NormalizedNode<?, ?>", "declarator": "node = Builders.containerBuilder().withNodeIdentifier(\n            YangInstanceIdentifier.NodeIdentifier.create(QName.create(\"namespace\", \"localName\"))).build()", "var_name": "node"}, {"original_string": "private final TransactionModification transactionModification =\n            new TransactionWrite(YangInstanceIdentifier.empty(), node);", "modifier": "private final", "type": "TransactionModification", "declarator": "transactionModification =\n            new TransactionWrite(YangInstanceIdentifier.empty(), node)", "var_name": "transactionModification"}, {"original_string": "private final ModifyTransactionRequestBuilder modifyTransactionRequestBuilder =\n            new ModifyTransactionRequestBuilder(transactionIdentifier, actorRef);", "modifier": "private final", "type": "ModifyTransactionRequestBuilder", "declarator": "modifyTransactionRequestBuilder =\n            new ModifyTransactionRequestBuilder(transactionIdentifier, actorRef)", "var_name": "modifyTransactionRequestBuilder"}], "file": "opendaylight/md-sal/cds-access-api/src/test/java/org/opendaylight/controller/cluster/access/commands/ModifyTransactionRequestBuilderTest.java"}, "test_case": {"identifier": "testGetIdentifier", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIdentifier() {\n        final TransactionIdentifier identifier = modifyTransactionRequestBuilder.getIdentifier();\n        Assert.assertEquals(transactionIdentifier, identifier);\n    }", "signature": "void testGetIdentifier()", "full_signature": "@Test public void testGetIdentifier()", "class_method_signature": "ModifyTransactionRequestBuilderTest.testGetIdentifier()", "testcase": true, "constructor": false, "invocations": ["getIdentifier", "assertEquals"]}, "focal_class": {"identifier": "ModifyTransactionRequestBuilder", "superclass": "", "interfaces": "implements Builder<ModifyTransactionRequest>,\n        Identifiable<TransactionIdentifier>", "fields": [{"original_string": "private final List<TransactionModification> modifications = new ArrayList<>(1);", "modifier": "private final", "type": "List<TransactionModification>", "declarator": "modifications = new ArrayList<>(1)", "var_name": "modifications"}, {"original_string": "private final TransactionIdentifier identifier;", "modifier": "private final", "type": "TransactionIdentifier", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private final ActorRef replyTo;", "modifier": "private final", "type": "ActorRef", "declarator": "replyTo", "var_name": "replyTo"}, {"original_string": "private PersistenceProtocol protocol;", "modifier": "private", "type": "PersistenceProtocol", "declarator": "protocol", "var_name": "protocol"}, {"original_string": "private boolean haveSequence;", "modifier": "private", "type": "boolean", "declarator": "haveSequence", "var_name": "haveSequence"}, {"original_string": "private long sequence;", "modifier": "private", "type": "long", "declarator": "sequence", "var_name": "sequence"}], "methods": [{"identifier": "ModifyTransactionRequestBuilder", "parameters": "(final TransactionIdentifier identifier, final ActorRef replyTo)", "modifiers": "public", "return": "", "signature": " ModifyTransactionRequestBuilder(final TransactionIdentifier identifier, final ActorRef replyTo)", "full_signature": "public  ModifyTransactionRequestBuilder(final TransactionIdentifier identifier, final ActorRef replyTo)", "class_method_signature": "ModifyTransactionRequestBuilder.ModifyTransactionRequestBuilder(final TransactionIdentifier identifier, final ActorRef replyTo)", "testcase": false, "constructor": true}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Override public", "return": "TransactionIdentifier", "signature": "TransactionIdentifier getIdentifier()", "full_signature": "@Override public TransactionIdentifier getIdentifier()", "class_method_signature": "ModifyTransactionRequestBuilder.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "checkNotFinished", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkNotFinished()", "full_signature": "private void checkNotFinished()", "class_method_signature": "ModifyTransactionRequestBuilder.checkNotFinished()", "testcase": false, "constructor": false}, {"identifier": "addModification", "parameters": "(final TransactionModification modification)", "modifiers": "public", "return": "void", "signature": "void addModification(final TransactionModification modification)", "full_signature": "public void addModification(final TransactionModification modification)", "class_method_signature": "ModifyTransactionRequestBuilder.addModification(final TransactionModification modification)", "testcase": false, "constructor": false}, {"identifier": "setSequence", "parameters": "(final long sequence)", "modifiers": "public", "return": "void", "signature": "void setSequence(final long sequence)", "full_signature": "public void setSequence(final long sequence)", "class_method_signature": "ModifyTransactionRequestBuilder.setSequence(final long sequence)", "testcase": false, "constructor": false}, {"identifier": "setAbort", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setAbort()", "full_signature": "public void setAbort()", "class_method_signature": "ModifyTransactionRequestBuilder.setAbort()", "testcase": false, "constructor": false}, {"identifier": "setCommit", "parameters": "(final boolean coordinated)", "modifiers": "public", "return": "void", "signature": "void setCommit(final boolean coordinated)", "full_signature": "public void setCommit(final boolean coordinated)", "class_method_signature": "ModifyTransactionRequestBuilder.setCommit(final boolean coordinated)", "testcase": false, "constructor": false}, {"identifier": "setReady", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setReady()", "full_signature": "public void setReady()", "class_method_signature": "ModifyTransactionRequestBuilder.setReady()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "ModifyTransactionRequestBuilder.size()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ModifyTransactionRequest", "signature": "ModifyTransactionRequest build()", "full_signature": "@Override public ModifyTransactionRequest build()", "class_method_signature": "ModifyTransactionRequestBuilder.build()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/cds-access-api/src/main/java/org/opendaylight/controller/cluster/access/commands/ModifyTransactionRequestBuilder.java"}, "focal_method": {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Override public", "return": "TransactionIdentifier", "body": "@Override\n    public TransactionIdentifier getIdentifier() {\n        return identifier;\n    }", "signature": "TransactionIdentifier getIdentifier()", "full_signature": "@Override public TransactionIdentifier getIdentifier()", "class_method_signature": "ModifyTransactionRequestBuilder.getIdentifier()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}