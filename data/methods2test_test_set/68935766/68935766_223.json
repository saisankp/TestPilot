{"test_class": {"identifier": "ProjectTest", "superclass": "", "interfaces": "", "fields": [], "file": "scribe/core/src/test/java/com/karuslabs/scribe/core/ProjectTest.java"}, "test_case": {"identifier": "project", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void project() {\n        var project = Project.EMPTY;\n        \n        assertEquals(\"\", project.name);\n        assertEquals(\"\", project.version);\n        assertTrue(project.authors.isEmpty());\n        assertEquals(\"\", project.api);\n        assertEquals(\"\", project.description);\n        assertEquals(\"\", project.url);\n    }", "signature": "void project()", "full_signature": "@Test void project()", "class_method_signature": "ProjectTest.project()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertTrue", "isEmpty", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "Project", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static Project EMPTY = new Project(\"\", \"\", \"\", List.of(), \"\", \"\");", "modifier": "public static", "type": "Project", "declarator": "EMPTY = new Project(\"\", \"\", \"\", List.of(), \"\", \"\")", "var_name": "EMPTY"}, {"original_string": "public static Map<String, String> DEPENDENCIES = Map.of(\n        \"bukkit\", \"org.bukkit\",\n        \"craftbukkit\", \"org.bukkit\",\n        \"spigot-api\", \"org.spigotmc\",\n        \"spigot\", \"org.spigotmc\",\n        \"paper-api\", \"com.destroystokyo.paper\",\n        \"paper\", \"com.destroystokyo.paper\"\n    );", "modifier": "public static", "type": "Map<String, String>", "declarator": "DEPENDENCIES = Map.of(\n        \"bukkit\", \"org.bukkit\",\n        \"craftbukkit\", \"org.bukkit\",\n        \"spigot-api\", \"org.spigotmc\",\n        \"spigot\", \"org.spigotmc\",\n        \"paper-api\", \"com.destroystokyo.paper\",\n        \"paper\", \"com.destroystokyo.paper\"\n    )", "var_name": "DEPENDENCIES"}, {"original_string": "public final String name;", "modifier": "public final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "public final String version;", "modifier": "public final", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "public final String api;", "modifier": "public final", "type": "String", "declarator": "api", "var_name": "api"}, {"original_string": "public final @Immutable List<String> authors;", "modifier": "public final @Immutable", "type": "List<String>", "declarator": "authors", "var_name": "authors"}, {"original_string": "public final String description;", "modifier": "public final", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "public final String url;", "modifier": "public final", "type": "String", "declarator": "url", "var_name": "url"}], "methods": [{"identifier": "Project", "parameters": "(String name, String version, String api, List<String> authors, String description, String url)", "modifiers": "public", "return": "", "signature": " Project(String name, String version, String api, List<String> authors, String description, String url)", "full_signature": "public  Project(String name, String version, String api, List<String> authors, String description, String url)", "class_method_signature": "Project.Project(String name, String version, String api, List<String> authors, String description, String url)", "testcase": false, "constructor": true}], "file": "scribe/core/src/main/java/com/karuslabs/scribe/core/Project.java"}, "focal_method": {"identifier": "Project", "parameters": "(String name, String version, String api, List<String> authors, String description, String url)", "modifiers": "public", "return": "", "body": "public Project(String name, String version, String api, List<String> authors, String description, String url) {\n        this.name = name;\n        this.version = version;\n        this.api = api;\n        this.authors = authors;\n        this.description = description;\n        this.url = url;\n    }", "signature": " Project(String name, String version, String api, List<String> authors, String description, String url)", "full_signature": "public  Project(String name, String version, String api, List<String> authors, String description, String url)", "class_method_signature": "Project.Project(String name, String version, String api, List<String> authors, String description, String url)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}