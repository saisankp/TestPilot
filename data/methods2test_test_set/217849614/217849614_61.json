{"test_class": {"identifier": "ServerOptionsTest", "superclass": "", "interfaces": "", "fields": [], "file": "filter-service-core/src/test/java/cn/leancloud/filter/service/ServerOptionsTest.java"}, "test_case": {"identifier": "testServerOptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testServerOptions() {\n        final String configFilePath = \"/mnt/avos/logs\";\n        final int port = 10101;\n        final boolean docService = true;\n        ServerOptions options = new ServerOptions(configFilePath, port, docService);\n        assertThat(options.configFilePath()).isEqualTo(configFilePath);\n        assertThat(options.port()).isEqualTo(port);\n        assertThat(options.docServiceEnabled()).isTrue();\n    }", "signature": "void testServerOptions()", "full_signature": "@Test public void testServerOptions()", "class_method_signature": "ServerOptionsTest.testServerOptions()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "configFilePath", "isEqualTo", "assertThat", "port", "isTrue", "assertThat", "docServiceEnabled"]}, "focal_class": {"identifier": "ServerOptions", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Option(names = {\"-c\", \"--configuration-file\"},\n            description = \"The path to a YAML configuration file.\")\n    @Nullable\n    private String configFilePath;", "modifier": "@Option(names = {\"-c\", \"--configuration-file\"},\n            description = \"The path to a YAML configuration file.\")\n    @Nullable\n    private", "type": "String", "declarator": "configFilePath", "var_name": "configFilePath"}, {"original_string": "@Option(names = {\"-p\", \"--port\"},\n            defaultValue = \"8080\",\n            description = \"The http/https port on which filter-service is running.\")\n    private int port;", "modifier": "@Option(names = {\"-p\", \"--port\"},\n            defaultValue = \"8080\",\n            description = \"The http/https port on which filter-service is running.\")\n    private", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "@Option(names = {\"-d\", \"--enable-doc-service\"},\n            defaultValue = \"false\",\n            description = \"true when you want to serve the testing document service under path \\\"/docs\\\".\")\n    private boolean docService;", "modifier": "@Option(names = {\"-d\", \"--enable-doc-service\"},\n            defaultValue = \"false\",\n            description = \"true when you want to serve the testing document service under path \\\"/docs\\\".\")\n    private", "type": "boolean", "declarator": "docService", "var_name": "docService"}], "methods": [{"identifier": "port", "parameters": "()", "modifiers": "", "return": "int", "signature": "int port()", "full_signature": " int port()", "class_method_signature": "ServerOptions.port()", "testcase": false, "constructor": false}, {"identifier": "docServiceEnabled", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean docServiceEnabled()", "full_signature": " boolean docServiceEnabled()", "class_method_signature": "ServerOptions.docServiceEnabled()", "testcase": false, "constructor": false}, {"identifier": "configFilePath", "parameters": "()", "modifiers": "@Nullable", "return": "String", "signature": "String configFilePath()", "full_signature": "@Nullable String configFilePath()", "class_method_signature": "ServerOptions.configFilePath()", "testcase": false, "constructor": false}, {"identifier": "ServerOptions", "parameters": "()", "modifiers": "", "return": "", "signature": " ServerOptions()", "full_signature": "  ServerOptions()", "class_method_signature": "ServerOptions.ServerOptions()", "testcase": false, "constructor": true}, {"identifier": "ServerOptions", "parameters": "(@Nullable String configFilePath, int port, boolean docService)", "modifiers": "", "return": "", "signature": " ServerOptions(@Nullable String configFilePath, int port, boolean docService)", "full_signature": "  ServerOptions(@Nullable String configFilePath, int port, boolean docService)", "class_method_signature": "ServerOptions.ServerOptions(@Nullable String configFilePath, int port, boolean docService)", "testcase": false, "constructor": true}], "file": "filter-service-core/src/main/java/cn/leancloud/filter/service/ServerOptions.java"}, "focal_method": {"identifier": "ServerOptions", "parameters": "()", "modifiers": "", "return": "", "body": "ServerOptions() {\n\n    }", "signature": " ServerOptions()", "full_signature": "  ServerOptions()", "class_method_signature": "ServerOptions.ServerOptions()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 217849614, "url": "https://github.com/leancloud/filter-service", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 14, "size": 2797, "license": "licensed"}}