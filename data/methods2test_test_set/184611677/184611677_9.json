{"test_class": {"identifier": "PayRefundServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private PayRefundService payRefundService;", "modifier": "@Autowired\n    private", "type": "PayRefundService", "declarator": "payRefundService", "var_name": "payRefundService"}], "file": "pay/pay-service-impl/src/test/java/cn/iocoder/mall/pay/biz/service/PayRefundServiceImplTest.java"}, "test_case": {"identifier": "testSubmitRefund", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSubmitRefund() {\n        PayRefundSubmitDTO payRefundSubmitDTO = new PayRefundSubmitDTO()\n                .setAppId(\"POd4RC6a\")\n                .setCreateIp(\"127.0.0.1\")\n                .setOrderId(\"13500000\")\n                .setOrderDescription(\"\u6d4b\u8bd5\u4e0b\u9000\u6b3e\")\n                .setPrice(1);\n        payRefundService.submitRefund(payRefundSubmitDTO);\n    }", "signature": "void testSubmitRefund()", "full_signature": "@Test public void testSubmitRefund()", "class_method_signature": "PayRefundServiceImplTest.testSubmitRefund()", "testcase": true, "constructor": false, "invocations": ["setPrice", "setOrderDescription", "setOrderId", "setCreateIp", "setAppId", "submitRefund"]}, "focal_class": {"identifier": "PayRefundServiceImpl", "superclass": "", "interfaces": "implements PayRefundService", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n    private PayRefundMapper payRefundMapper;", "modifier": "@Autowired\n    private", "type": "PayRefundMapper", "declarator": "payRefundMapper", "var_name": "payRefundMapper"}, {"original_string": "@Autowired\n    private PayAppServiceImpl payAppService;", "modifier": "@Autowired\n    private", "type": "PayAppServiceImpl", "declarator": "payAppService", "var_name": "payAppService"}, {"original_string": "@Autowired\n    private PayNotifyServiceImpl payNotifyService;", "modifier": "@Autowired\n    private", "type": "PayNotifyServiceImpl", "declarator": "payNotifyService", "var_name": "payNotifyService"}, {"original_string": "@Autowired\n    private PayTransactionServiceImpl payTransactionService;", "modifier": "@Autowired\n    private", "type": "PayTransactionServiceImpl", "declarator": "payTransactionService", "var_name": "payTransactionService"}, {"original_string": "@Resource\n    private RocketMQTemplate rocketMQTemplate;", "modifier": "@Resource\n    private", "type": "RocketMQTemplate", "declarator": "rocketMQTemplate", "var_name": "rocketMQTemplate"}], "methods": [{"identifier": "submitRefund", "parameters": "(PayRefundSubmitDTO payRefundSubmitDTO)", "modifiers": "@Override public", "return": "CommonResult<PayRefundSubmitBO>", "signature": "CommonResult<PayRefundSubmitBO> submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "full_signature": "@Override public CommonResult<PayRefundSubmitBO> submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "class_method_signature": "PayRefundServiceImpl.submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "testcase": false, "constructor": false}, {"identifier": "updateRefundSuccess", "parameters": "(Integer payChannel, String params)", "modifiers": "@Override @Transactional public", "return": "CommonResult<Boolean>", "signature": "CommonResult<Boolean> updateRefundSuccess(Integer payChannel, String params)", "full_signature": "@Override @Transactional public CommonResult<Boolean> updateRefundSuccess(Integer payChannel, String params)", "class_method_signature": "PayRefundServiceImpl.updateRefundSuccess(Integer payChannel, String params)", "testcase": false, "constructor": false}, {"identifier": "getRefundPage", "parameters": "(PayRefundPageDTO payRefundPageDTO)", "modifiers": "@Override public", "return": "PayRefundPageBO", "signature": "PayRefundPageBO getRefundPage(PayRefundPageDTO payRefundPageDTO)", "full_signature": "@Override public PayRefundPageBO getRefundPage(PayRefundPageDTO payRefundPageDTO)", "class_method_signature": "PayRefundServiceImpl.getRefundPage(PayRefundPageDTO payRefundPageDTO)", "testcase": false, "constructor": false}, {"identifier": "generateTransactionCode", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String generateTransactionCode()", "full_signature": "private String generateTransactionCode()", "class_method_signature": "PayRefundServiceImpl.generateTransactionCode()", "testcase": false, "constructor": false}], "file": "pay/pay-service-impl/src/main/java/cn/iocoder/mall/pay/biz/service/PayRefundServiceImpl.java"}, "focal_method": {"identifier": "submitRefund", "parameters": "(PayRefundSubmitDTO payRefundSubmitDTO)", "modifiers": "@Override public", "return": "CommonResult<PayRefundSubmitBO>", "body": "@Override\n    public CommonResult<PayRefundSubmitBO> submitRefund(PayRefundSubmitDTO payRefundSubmitDTO) {\n        // \u6821\u9a8c App \u662f\u5426\u6709\u6548\n        PayAppDO payAppDO = payAppService.validPayApp(payRefundSubmitDTO.getAppId());\n        // \u83b7\u5f97 PayTransactionDO \uff0c\u5e76\u6821\u9a8c\u5176\u662f\u5426\u5b58\u5728\n        PayTransactionDO payTransaction = payTransactionService.getTransaction(payRefundSubmitDTO.getAppId(), payRefundSubmitDTO.getOrderId());\n        if (payTransaction == null) { // \u662f\u5426\u5b58\u5728\n            return ServiceExceptionUtil.error(PayErrorCodeEnum.PAY_TRANSACTION_NOT_FOUND.getCode());\n        }\n        if (!PayTransactionStatusEnum.SUCCESS.getValue().equals(payTransaction.getStatus())) { // \u6821\u9a8c\u72b6\u6001\uff0c\u5fc5\u987b\u662f\u5f85\u652f\u4ed8\n            return ServiceExceptionUtil.error(PayErrorCodeEnum.PAY_TRANSACTION_STATUS_IS_NOT_SUCCESS.getCode());\n        }\n        if (payRefundSubmitDTO.getPrice() > payTransaction.getPrice() - payTransaction.getRefundTotal()) { // \u91d1\u989d\u6821\u9a8c\n            return ServiceExceptionUtil.error(PayErrorCodeEnum.PAY_REFUND_PRICE_EXCEED.getCode());\n        }\n        // \u83b7\u5f97 PayTransactionExtensionDO \uff0c\u5e76\u6821\u9a8c\u5176\u662f\u5426\u5b58\u5728\n        PayTransactionExtensionDO payTransactionExtension = payTransactionService.getPayTransactionExtension(payTransaction.getExtensionId());\n        if (payTransactionExtension == null) { // \u662f\u5426\u5b58\u5728\n            return ServiceExceptionUtil.error(PayErrorCodeEnum.PAY_TRANSACTION_EXTENSION_NOT_FOUND.getCode());\n        }\n        if (!PayTransactionStatusEnum.SUCCESS.getValue().equals(payTransactionExtension.getStatus())) { // \u6821\u9a8c\u72b6\u6001\uff0c\u5fc5\u987b\u662f\u5f85\u652f\u4ed8\n            return ServiceExceptionUtil.error(PayErrorCodeEnum.PAY_TRANSACTION_EXTENSION_STATUS_IS_NOT_SUCCESS.getCode());\n        }\n        // \u63d2\u5165 PayTransactionExtensionDO\n        PayRefundDO payRefundDO = PayRefundConvert.INSTANCE.convert(payRefundSubmitDTO)\n                .setTransactionId(payTransaction.getId())\n                .setRefundCode(generateTransactionCode()) // TODO \u828b\u827f\uff0c\u540e\u7eed\u8c03\u6574\n                .setStatus(PayRefundStatus.WAITING.getValue())\n                .setNotifyUrl(payAppDO.getRefundNotifyUrl())\n                .setRefundChannel(payTransaction.getPayChannel());\n        payRefundDO.setCreateTime(new Date());\n        payRefundMapper.insert(payRefundDO);\n        // \u8c03\u7528\u4e09\u65b9\u63a5\u53e3\n        AbstractPaySDK paySDK = PaySDKFactory.getSDK(payTransaction.getPayChannel());\n        CommonResult<String> invokeResult = paySDK.submitRefund(payRefundDO, payTransactionExtension, null); // TODO \u6682\u65f6\u4f20\u5165 extra = null\n        if (invokeResult.isError()) {\n            return CommonResult.error(invokeResult);\n        }\n        // \u8fd4\u56de\u6210\u529f\n        PayRefundSubmitBO payRefundSubmitBO = new PayRefundSubmitBO()\n                .setId(payRefundDO.getId());\n        return CommonResult.success(payRefundSubmitBO);\n    }", "signature": "CommonResult<PayRefundSubmitBO> submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "full_signature": "@Override public CommonResult<PayRefundSubmitBO> submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "class_method_signature": "PayRefundServiceImpl.submitRefund(PayRefundSubmitDTO payRefundSubmitDTO)", "testcase": false, "constructor": false, "invocations": ["validPayApp", "getAppId", "getTransaction", "getAppId", "getOrderId", "error", "getCode", "equals", "getValue", "getStatus", "error", "getCode", "getPrice", "getPrice", "getRefundTotal", "error", "getCode", "getPayTransactionExtension", "getExtensionId", "error", "getCode", "equals", "getValue", "getStatus", "error", "getCode", "setRefundChannel", "setNotifyUrl", "setStatus", "setRefundCode", "setTransactionId", "convert", "getId", "generateTransactionCode", "getValue", "getRefundNotifyUrl", "getPayChannel", "setCreateTime", "insert", "getSDK", "getPayChannel", "submitRefund", "isError", "error", "setId", "getId", "success"]}, "repository": {"repo_id": 184611677, "url": "https://github.com/YunaiV/onemall", "language": "Java", "is_fork": false, "fork_count": 1162, "stargazer_count": 2893, "size": 7986, "license": "licensed"}}