{"test_class": {"identifier": "MorphiaPropertyResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Mapper mapper = new Mapper();", "modifier": "private final", "type": "Mapper", "declarator": "mapper = new Mapper()", "var_name": "mapper"}, {"original_string": "private final MorphiaPropertyResolver resolver = new MorphiaPropertyResolver(\n            mapper);", "modifier": "private final", "type": "MorphiaPropertyResolver", "declarator": "resolver = new MorphiaPropertyResolver(\n            mapper)", "var_name": "resolver"}], "file": "seeking-mongo/src/test/java/com/eharmony/matching/seeking/translator/mongodb/MorphiaPropertyResolverTest.java"}, "test_case": {"identifier": "resolve_t2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolve_t2() {\n        assertEquals(\"teatwo\", resolver.resolve(\"t2\", TestMappedClass.class));\n        assertEquals(\"teatwo.a\", resolver.resolve(\"t2.a\", TestMappedClass.class));\n        assertEquals(\"teatwo.bee\", resolver.resolve(\"t2.b\", TestMappedClass.class));\n    }", "signature": "void resolve_t2()", "full_signature": "@Test public void resolve_t2()", "class_method_signature": "MorphiaPropertyResolverTest.resolve_t2()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "resolve", "assertEquals", "resolve", "assertEquals", "resolve"]}, "focal_class": {"identifier": "MorphiaPropertyResolver", "superclass": "", "interfaces": "implements PropertyResolver", "fields": [{"original_string": "private final Mapper mapper;", "modifier": "private final", "type": "Mapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private final Splitter splitter = Splitter.on('.');", "modifier": "private final", "type": "Splitter", "declarator": "splitter = Splitter.on('.')", "var_name": "splitter"}, {"original_string": "private final Joiner joiner = Joiner.on('.');", "modifier": "private final", "type": "Joiner", "declarator": "joiner = Joiner.on('.')", "var_name": "joiner"}], "methods": [{"identifier": "MorphiaPropertyResolver", "parameters": "()", "modifiers": "public", "return": "", "signature": " MorphiaPropertyResolver()", "full_signature": "public  MorphiaPropertyResolver()", "class_method_signature": "MorphiaPropertyResolver.MorphiaPropertyResolver()", "testcase": false, "constructor": true}, {"identifier": "MorphiaPropertyResolver", "parameters": "(Mapper mapper)", "modifiers": "public", "return": "", "signature": " MorphiaPropertyResolver(Mapper mapper)", "full_signature": "public  MorphiaPropertyResolver(Mapper mapper)", "class_method_signature": "MorphiaPropertyResolver.MorphiaPropertyResolver(Mapper mapper)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(String fieldName, Class<?> entityClass)", "modifiers": "@Override public", "return": "String", "signature": "String resolve(String fieldName, Class<?> entityClass)", "full_signature": "@Override public String resolve(String fieldName, Class<?> entityClass)", "class_method_signature": "MorphiaPropertyResolver.resolve(String fieldName, Class<?> entityClass)", "testcase": false, "constructor": false}], "file": "seeking-mongo/src/main/java/com/eharmony/matching/seeking/translator/mongodb/MorphiaPropertyResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(String fieldName, Class<?> entityClass)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String resolve(String fieldName, Class<?> entityClass) {\n        Iterable<String> fieldNames = splitter.split(fieldName);\n        List<String> resolved = Lists.newArrayList();\n        Class<?> lastClass = entityClass;\n        for (String name : fieldNames) {\n            MappedField mappedField = mapper.getMappedClass(lastClass)\n                    .getMappedFieldByJavaField(name);\n            if (mappedField != null) {\n                lastClass = mappedField.getConcreteType();\n                resolved.add(mappedField.getNameToStore());\n            } else {\n                resolved.add(name);\n            }\n        }\n        return joiner.join(resolved);\n    }", "signature": "String resolve(String fieldName, Class<?> entityClass)", "full_signature": "@Override public String resolve(String fieldName, Class<?> entityClass)", "class_method_signature": "MorphiaPropertyResolver.resolve(String fieldName, Class<?> entityClass)", "testcase": false, "constructor": false, "invocations": ["split", "newArrayList", "getMappedFieldByJavaField", "getMappedClass", "getConcreteType", "add", "getNameToStore", "add", "join"]}, "repository": {"repo_id": 9248683, "url": "https://github.com/eHarmony/seeking", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 194, "license": "licensed"}}