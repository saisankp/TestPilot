{"test_class": {"identifier": "KeyStoreCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private KeyStoreCallbackHandler handler;", "modifier": "private", "type": "KeyStoreCallbackHandler", "declarator": "handler", "var_name": "handler"}], "file": "spring-ws-security/src/test/java/org/springframework/ws/soap/security/xwss/callback/KeyStoreCallbackHandlerTest.java"}, "test_case": {"identifier": "testLoadDefaultTrustStore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoadDefaultTrustStore() throws Exception {\n\t\tSystem.setProperty(\"javax.net.ssl.trustStore\", \"/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home/\");\n\t\thandler.loadDefaultTrustStore();\n\t}", "signature": "void testLoadDefaultTrustStore()", "full_signature": "@Test public void testLoadDefaultTrustStore()", "class_method_signature": "KeyStoreCallbackHandlerTest.testLoadDefaultTrustStore()", "testcase": true, "constructor": false, "invocations": ["setProperty", "loadDefaultTrustStore"]}, "focal_class": {"identifier": "KeyStoreCallbackHandler", "superclass": "extends CryptographyCallbackHandler", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private static final String X_509_CERTIFICATE_TYPE = \"X.509\";", "modifier": "private static final", "type": "String", "declarator": "X_509_CERTIFICATE_TYPE = \"X.509\"", "var_name": "X_509_CERTIFICATE_TYPE"}, {"original_string": "private static final String SUBJECT_KEY_IDENTIFIER_OID = \"2.5.29.14\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT_KEY_IDENTIFIER_OID = \"2.5.29.14\"", "var_name": "SUBJECT_KEY_IDENTIFIER_OID"}, {"original_string": "private KeyStore keyStore;", "modifier": "private", "type": "KeyStore", "declarator": "keyStore", "var_name": "keyStore"}, {"original_string": "private KeyStore symmetricStore;", "modifier": "private", "type": "KeyStore", "declarator": "symmetricStore", "var_name": "symmetricStore"}, {"original_string": "private KeyStore trustStore;", "modifier": "private", "type": "KeyStore", "declarator": "trustStore", "var_name": "trustStore"}, {"original_string": "private String defaultAlias;", "modifier": "private", "type": "String", "declarator": "defaultAlias", "var_name": "defaultAlias"}, {"original_string": "private char[] privateKeyPassword;", "modifier": "private", "type": "char[]", "declarator": "privateKeyPassword", "var_name": "privateKeyPassword"}, {"original_string": "private char[] symmetricKeyPassword;", "modifier": "private", "type": "char[]", "declarator": "symmetricKeyPassword", "var_name": "symmetricKeyPassword"}, {"original_string": "private boolean revocationEnabled = false;", "modifier": "private", "type": "boolean", "declarator": "revocationEnabled = false", "var_name": "revocationEnabled"}], "methods": [{"identifier": "getCertificate", "parameters": "(String alias, KeyStore store)", "modifiers": "private static", "return": "X509Certificate", "signature": "X509Certificate getCertificate(String alias, KeyStore store)", "full_signature": "private static X509Certificate getCertificate(String alias, KeyStore store)", "class_method_signature": "KeyStoreCallbackHandler.getCertificate(String alias, KeyStore store)", "testcase": false, "constructor": false}, {"identifier": "getCertificate", "parameters": "(PublicKey pk, KeyStore store)", "modifiers": "private static", "return": "X509Certificate", "signature": "X509Certificate getCertificate(PublicKey pk, KeyStore store)", "full_signature": "private static X509Certificate getCertificate(PublicKey pk, KeyStore store)", "class_method_signature": "KeyStoreCallbackHandler.getCertificate(PublicKey pk, KeyStore store)", "testcase": false, "constructor": false}, {"identifier": "setDefaultAlias", "parameters": "(String defaultAlias)", "modifiers": "public", "return": "void", "signature": "void setDefaultAlias(String defaultAlias)", "full_signature": "public void setDefaultAlias(String defaultAlias)", "class_method_signature": "KeyStoreCallbackHandler.setDefaultAlias(String defaultAlias)", "testcase": false, "constructor": false}, {"identifier": "setKeyStore", "parameters": "(KeyStore keyStore)", "modifiers": "public", "return": "void", "signature": "void setKeyStore(KeyStore keyStore)", "full_signature": "public void setKeyStore(KeyStore keyStore)", "class_method_signature": "KeyStoreCallbackHandler.setKeyStore(KeyStore keyStore)", "testcase": false, "constructor": false}, {"identifier": "setPrivateKeyPassword", "parameters": "(String privateKeyPassword)", "modifiers": "public", "return": "void", "signature": "void setPrivateKeyPassword(String privateKeyPassword)", "full_signature": "public void setPrivateKeyPassword(String privateKeyPassword)", "class_method_signature": "KeyStoreCallbackHandler.setPrivateKeyPassword(String privateKeyPassword)", "testcase": false, "constructor": false}, {"identifier": "setSymmetricKeyPassword", "parameters": "(String symmetricKeyPassword)", "modifiers": "public", "return": "void", "signature": "void setSymmetricKeyPassword(String symmetricKeyPassword)", "full_signature": "public void setSymmetricKeyPassword(String symmetricKeyPassword)", "class_method_signature": "KeyStoreCallbackHandler.setSymmetricKeyPassword(String symmetricKeyPassword)", "testcase": false, "constructor": false}, {"identifier": "setSymmetricStore", "parameters": "(KeyStore symmetricStore)", "modifiers": "public", "return": "void", "signature": "void setSymmetricStore(KeyStore symmetricStore)", "full_signature": "public void setSymmetricStore(KeyStore symmetricStore)", "class_method_signature": "KeyStoreCallbackHandler.setSymmetricStore(KeyStore symmetricStore)", "testcase": false, "constructor": false}, {"identifier": "setTrustStore", "parameters": "(KeyStore trustStore)", "modifiers": "public", "return": "void", "signature": "void setTrustStore(KeyStore trustStore)", "full_signature": "public void setTrustStore(KeyStore trustStore)", "class_method_signature": "KeyStoreCallbackHandler.setTrustStore(KeyStore trustStore)", "testcase": false, "constructor": false}, {"identifier": "setRevocationEnabled", "parameters": "(boolean revocationEnabled)", "modifiers": "public", "return": "void", "signature": "void setRevocationEnabled(boolean revocationEnabled)", "full_signature": "public void setRevocationEnabled(boolean revocationEnabled)", "class_method_signature": "KeyStoreCallbackHandler.setRevocationEnabled(boolean revocationEnabled)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "KeyStoreCallbackHandler.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "handleAliasPrivKeyCertRequest", "parameters": "(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.AliasPrivKeyCertRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleAliasPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.AliasPrivKeyCertRequest request)", "full_signature": "@Override protected final void handleAliasPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.AliasPrivKeyCertRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleAliasPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.AliasPrivKeyCertRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleAliasSymmetricKeyRequest", "parameters": "(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.AliasSymmetricKeyRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleAliasSymmetricKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.AliasSymmetricKeyRequest request)", "full_signature": "@Override protected final void handleAliasSymmetricKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.AliasSymmetricKeyRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleAliasSymmetricKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.AliasSymmetricKeyRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleAliasSymmetricKeyRequest", "parameters": "(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasSymmetricKeyRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleAliasSymmetricKeyRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasSymmetricKeyRequest request)", "full_signature": "@Override protected final void handleAliasSymmetricKeyRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasSymmetricKeyRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleAliasSymmetricKeyRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasSymmetricKeyRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleAliasX509CertificateRequest", "parameters": "(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasX509CertificateRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleAliasX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasX509CertificateRequest request)", "full_signature": "@Override protected final void handleAliasX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasX509CertificateRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleAliasX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.AliasX509CertificateRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleCertificateValidationCallback", "parameters": "(CertificateValidationCallback callback)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleCertificateValidationCallback(CertificateValidationCallback callback)", "full_signature": "@Override protected final void handleCertificateValidationCallback(CertificateValidationCallback callback)", "class_method_signature": "KeyStoreCallbackHandler.handleCertificateValidationCallback(CertificateValidationCallback callback)", "testcase": false, "constructor": false}, {"identifier": "handleDefaultPrivKeyCertRequest", "parameters": "(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.DefaultPrivKeyCertRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleDefaultPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.DefaultPrivKeyCertRequest request)", "full_signature": "@Override protected final void handleDefaultPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.DefaultPrivKeyCertRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleDefaultPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.DefaultPrivKeyCertRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleDefaultX509CertificateRequest", "parameters": "(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.DefaultX509CertificateRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleDefaultX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.DefaultX509CertificateRequest request)", "full_signature": "@Override protected final void handleDefaultX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.DefaultX509CertificateRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleDefaultX509CertificateRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.DefaultX509CertificateRequest request)", "testcase": false, "constructor": false}, {"identifier": "handlePublicKeyBasedPrivKeyCertRequest", "parameters": "(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.PublicKeyBasedPrivKeyCertRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handlePublicKeyBasedPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.PublicKeyBasedPrivKeyCertRequest request)", "full_signature": "@Override protected final void handlePublicKeyBasedPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.PublicKeyBasedPrivKeyCertRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handlePublicKeyBasedPrivKeyCertRequest(SignatureKeyCallback callback,\n\t\t\tSignatureKeyCallback.PublicKeyBasedPrivKeyCertRequest request)", "testcase": false, "constructor": false}, {"identifier": "handlePublicKeyBasedPrivKeyRequest", "parameters": "(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.PublicKeyBasedPrivKeyRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handlePublicKeyBasedPrivKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.PublicKeyBasedPrivKeyRequest request)", "full_signature": "@Override protected final void handlePublicKeyBasedPrivKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.PublicKeyBasedPrivKeyRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handlePublicKeyBasedPrivKeyRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.PublicKeyBasedPrivKeyRequest request)", "testcase": false, "constructor": false}, {"identifier": "handlePublicKeyBasedRequest", "parameters": "(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.PublicKeyBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handlePublicKeyBasedRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.PublicKeyBasedRequest request)", "full_signature": "@Override protected final void handlePublicKeyBasedRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.PublicKeyBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handlePublicKeyBasedRequest(EncryptionKeyCallback callback,\n\t\t\tEncryptionKeyCallback.PublicKeyBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handlePublicKeyBasedRequest", "parameters": "(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.PublicKeyBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handlePublicKeyBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.PublicKeyBasedRequest request)", "full_signature": "@Override protected final void handlePublicKeyBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.PublicKeyBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handlePublicKeyBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.PublicKeyBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleX509CertificateBasedRequest", "parameters": "(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509CertificateBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleX509CertificateBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509CertificateBasedRequest request)", "full_signature": "@Override protected final void handleX509CertificateBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509CertificateBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleX509CertificateBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509CertificateBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleX509IssuerSerialBasedRequest", "parameters": "(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509IssuerSerialBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleX509IssuerSerialBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509IssuerSerialBasedRequest request)", "full_signature": "@Override protected final void handleX509IssuerSerialBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509IssuerSerialBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleX509IssuerSerialBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509IssuerSerialBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleX509IssuerSerialBasedRequest", "parameters": "(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509IssuerSerialBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleX509IssuerSerialBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509IssuerSerialBasedRequest request)", "full_signature": "@Override protected final void handleX509IssuerSerialBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509IssuerSerialBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleX509IssuerSerialBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509IssuerSerialBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleX509SubjectKeyIdentifierBasedRequest", "parameters": "(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleX509SubjectKeyIdentifierBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "full_signature": "@Override protected final void handleX509SubjectKeyIdentifierBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleX509SubjectKeyIdentifierBasedRequest(DecryptionKeyCallback callback,\n\t\t\tDecryptionKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleX509SubjectKeyIdentifierBasedRequest", "parameters": "(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "modifiers": "@Override protected final", "return": "void", "signature": "void handleX509SubjectKeyIdentifierBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "full_signature": "@Override protected final void handleX509SubjectKeyIdentifierBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "class_method_signature": "KeyStoreCallbackHandler.handleX509SubjectKeyIdentifierBasedRequest(SignatureVerificationKeyCallback callback,\n\t\t\tSignatureVerificationKeyCallback.X509SubjectKeyIdentifierBasedRequest request)", "testcase": false, "constructor": false}, {"identifier": "getCertificate", "parameters": "(String alias)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificate(String alias)", "full_signature": "protected X509Certificate getCertificate(String alias)", "class_method_signature": "KeyStoreCallbackHandler.getCertificate(String alias)", "testcase": false, "constructor": false}, {"identifier": "getCertificate", "parameters": "(PublicKey pk)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificate(PublicKey pk)", "full_signature": "protected X509Certificate getCertificate(PublicKey pk)", "class_method_signature": "KeyStoreCallbackHandler.getCertificate(PublicKey pk)", "testcase": false, "constructor": false}, {"identifier": "getCertificateFromTrustStore", "parameters": "(String alias)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificateFromTrustStore(String alias)", "full_signature": "protected X509Certificate getCertificateFromTrustStore(String alias)", "class_method_signature": "KeyStoreCallbackHandler.getCertificateFromTrustStore(String alias)", "testcase": false, "constructor": false}, {"identifier": "getCertificateFromTrustStore", "parameters": "(byte[] subjectKeyIdentifier)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificateFromTrustStore(byte[] subjectKeyIdentifier)", "full_signature": "protected X509Certificate getCertificateFromTrustStore(byte[] subjectKeyIdentifier)", "class_method_signature": "KeyStoreCallbackHandler.getCertificateFromTrustStore(byte[] subjectKeyIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getCertificateFromTrustStore", "parameters": "(PublicKey pk)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificateFromTrustStore(PublicKey pk)", "full_signature": "protected X509Certificate getCertificateFromTrustStore(PublicKey pk)", "class_method_signature": "KeyStoreCallbackHandler.getCertificateFromTrustStore(PublicKey pk)", "testcase": false, "constructor": false}, {"identifier": "getCertificateFromTrustStore", "parameters": "(String issuerName, BigInteger serialNumber)", "modifiers": "protected", "return": "X509Certificate", "signature": "X509Certificate getCertificateFromTrustStore(String issuerName, BigInteger serialNumber)", "full_signature": "protected X509Certificate getCertificateFromTrustStore(String issuerName, BigInteger serialNumber)", "class_method_signature": "KeyStoreCallbackHandler.getCertificateFromTrustStore(String issuerName, BigInteger serialNumber)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "(String alias)", "modifiers": "protected", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey(String alias)", "full_signature": "protected PrivateKey getPrivateKey(String alias)", "class_method_signature": "KeyStoreCallbackHandler.getPrivateKey(String alias)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "(PublicKey publicKey)", "modifiers": "protected", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey(PublicKey publicKey)", "full_signature": "protected PrivateKey getPrivateKey(PublicKey publicKey)", "class_method_signature": "KeyStoreCallbackHandler.getPrivateKey(PublicKey publicKey)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "(X509Certificate certificate)", "modifiers": "protected", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey(X509Certificate certificate)", "full_signature": "protected PrivateKey getPrivateKey(X509Certificate certificate)", "class_method_signature": "KeyStoreCallbackHandler.getPrivateKey(X509Certificate certificate)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "(byte[] keyIdentifier)", "modifiers": "protected", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey(byte[] keyIdentifier)", "full_signature": "protected PrivateKey getPrivateKey(byte[] keyIdentifier)", "class_method_signature": "KeyStoreCallbackHandler.getPrivateKey(byte[] keyIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "(String issuerName, BigInteger serialNumber)", "modifiers": "protected", "return": "PrivateKey", "signature": "PrivateKey getPrivateKey(String issuerName, BigInteger serialNumber)", "full_signature": "protected PrivateKey getPrivateKey(String issuerName, BigInteger serialNumber)", "class_method_signature": "KeyStoreCallbackHandler.getPrivateKey(String issuerName, BigInteger serialNumber)", "testcase": false, "constructor": false}, {"identifier": "getSubjectKeyIdentifier", "parameters": "(X509Certificate cert)", "modifiers": "protected final", "return": "byte[]", "signature": "byte[] getSubjectKeyIdentifier(X509Certificate cert)", "full_signature": "protected final byte[] getSubjectKeyIdentifier(X509Certificate cert)", "class_method_signature": "KeyStoreCallbackHandler.getSubjectKeyIdentifier(X509Certificate cert)", "testcase": false, "constructor": false}, {"identifier": "getSymmetricKey", "parameters": "(String alias)", "modifiers": "protected", "return": "SecretKey", "signature": "SecretKey getSymmetricKey(String alias)", "full_signature": "protected SecretKey getSymmetricKey(String alias)", "class_method_signature": "KeyStoreCallbackHandler.getSymmetricKey(String alias)", "testcase": false, "constructor": false}, {"identifier": "loadDefaultKeyStore", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void loadDefaultKeyStore()", "full_signature": "protected void loadDefaultKeyStore()", "class_method_signature": "KeyStoreCallbackHandler.loadDefaultKeyStore()", "testcase": false, "constructor": false}, {"identifier": "loadDefaultTrustStore", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void loadDefaultTrustStore()", "full_signature": "protected void loadDefaultTrustStore()", "class_method_signature": "KeyStoreCallbackHandler.loadDefaultTrustStore()", "testcase": false, "constructor": false}, {"identifier": "createBuilderParameters", "parameters": "(KeyStore trustStore, X509CertSelector certSelector)", "modifiers": "protected", "return": "PKIXBuilderParameters", "signature": "PKIXBuilderParameters createBuilderParameters(KeyStore trustStore, X509CertSelector certSelector)", "full_signature": "protected PKIXBuilderParameters createBuilderParameters(KeyStore trustStore, X509CertSelector certSelector)", "class_method_signature": "KeyStoreCallbackHandler.createBuilderParameters(KeyStore trustStore, X509CertSelector certSelector)", "testcase": false, "constructor": false}], "file": "spring-ws-security/src/main/java/org/springframework/ws/soap/security/xwss/callback/KeyStoreCallbackHandler.java"}, "focal_method": {"identifier": "loadDefaultTrustStore", "parameters": "()", "modifiers": "protected", "return": "void", "body": "protected void loadDefaultTrustStore() {\n\t\ttry {\n\t\t\ttrustStore = KeyStoreUtils.loadDefaultTrustStore();\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Loaded default trust store\");\n\t\t\t}\n\t\t} catch (Exception ex) {\n\t\t\tlogger.warn(\"Could not open default trust store\", ex);\n\t\t}\n\t}", "signature": "void loadDefaultTrustStore()", "full_signature": "protected void loadDefaultTrustStore()", "class_method_signature": "KeyStoreCallbackHandler.loadDefaultTrustStore()", "testcase": false, "constructor": false, "invocations": ["loadDefaultTrustStore", "isDebugEnabled", "debug", "warn"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}