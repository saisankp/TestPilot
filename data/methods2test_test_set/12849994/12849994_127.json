{"test_class": {"identifier": "BasicEvictionListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "BasicEvictionListener<Object, Object> asyncEvictionListener;", "modifier": "", "type": "BasicEvictionListener<Object, Object>", "declarator": "asyncEvictionListener", "var_name": "asyncEvictionListener"}], "file": "imcache-core/src/test/java/com/cetsoft/imcache/cache/async/BasicEvictionListenerTest.java"}, "test_case": {"identifier": "onEviction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void onEviction() {\n    Object key = new Object(), value = new Object();\n    doNothing().when(asyncEvictionListener).save(key, value);\n    asyncEvictionListener.onEviction(key, value);\n    try {\n      Thread.sleep(10);\n    } catch (InterruptedException e) {\n    }\n    verify(asyncEvictionListener).save(key, value);\n  }", "signature": "void onEviction()", "full_signature": "@Test public void onEviction()", "class_method_signature": "BasicEvictionListenerTest.onEviction()", "testcase": true, "constructor": false, "invocations": ["save", "when", "doNothing", "onEviction", "sleep", "save", "verify"]}, "focal_class": {"identifier": "BasicEvictionListener", "superclass": "", "interfaces": "implements AsyncEvictionListener<K, V>", "fields": [{"original_string": "private static final AtomicInteger NO_OF_EVICTION_LISTENERS = new AtomicInteger();", "modifier": "private static final", "type": "AtomicInteger", "declarator": "NO_OF_EVICTION_LISTENERS = new AtomicInteger()", "var_name": "NO_OF_EVICTION_LISTENERS"}, {"original_string": "private final ExecutorService asyncEvictionExecutor;", "modifier": "private final", "type": "ExecutorService", "declarator": "asyncEvictionExecutor", "var_name": "asyncEvictionExecutor"}], "methods": [{"identifier": "BasicEvictionListener", "parameters": "()", "modifiers": "public", "return": "", "signature": " BasicEvictionListener()", "full_signature": "public  BasicEvictionListener()", "class_method_signature": "BasicEvictionListener.BasicEvictionListener()", "testcase": false, "constructor": true}, {"identifier": "onEviction", "parameters": "(final K key, final V value)", "modifiers": "public", "return": "void", "signature": "void onEviction(final K key, final V value)", "full_signature": "public void onEviction(final K key, final V value)", "class_method_signature": "BasicEvictionListener.onEviction(final K key, final V value)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(K key, V value)", "modifiers": "public abstract", "return": "void", "signature": "void save(K key, V value)", "full_signature": "public abstract void save(K key, V value)", "class_method_signature": "BasicEvictionListener.save(K key, V value)", "testcase": false, "constructor": false}], "file": "imcache-core/src/main/java/com/cetsoft/imcache/cache/async/BasicEvictionListener.java"}, "focal_method": {"identifier": "onEviction", "parameters": "(final K key, final V value)", "modifiers": "public", "return": "void", "body": "public void onEviction(final K key, final V value) {\n    asyncEvictionExecutor.execute(() -> save(key, value));\n  }", "signature": "void onEviction(final K key, final V value)", "full_signature": "public void onEviction(final K key, final V value)", "class_method_signature": "BasicEvictionListener.onEviction(final K key, final V value)", "testcase": false, "constructor": false, "invocations": ["execute", "save"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}