{"test_class": {"identifier": "SecurityRuleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Marshaler<SecurityRule> MARSHALER = new Marshaler<SecurityRule>(SecurityRule.class);", "modifier": "private final static", "type": "Marshaler<SecurityRule>", "declarator": "MARSHALER = new Marshaler<SecurityRule>(SecurityRule.class)", "var_name": "MARSHALER"}], "file": "src/core/model/src/test/java/it/geosolutions/geostore/core/model/SecurityRuleTest.java"}, "test_case": {"identifier": "testMarshallingUsername", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMarshallingUsername() throws Exception {\n        SecurityRule sr0 = new SecurityRule();\n        sr0.setUsername(\"testuser\");\n        doTheTest(sr0);\n    }", "signature": "void testMarshallingUsername()", "full_signature": "@Test public void testMarshallingUsername()", "class_method_signature": "SecurityRuleTest.testMarshallingUsername()", "testcase": true, "constructor": false, "invocations": ["setUsername", "doTheTest"]}, "focal_class": {"identifier": "SecurityRule", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -4160546863296343389L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4160546863296343389L", "var_name": "serialVersionUID"}, {"original_string": "@Id\n    @GeneratedValue\n    private Long id;", "modifier": "@Id\n    @GeneratedValue\n    private", "type": "Long", "declarator": "id", "var_name": "id"}, {"original_string": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_resource\")\n    @ForeignKey(name = \"fk_security_resource\")\n    private Resource resource;", "modifier": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_resource\")\n    @ForeignKey(name = \"fk_security_resource\")\n    private", "type": "Resource", "declarator": "resource", "var_name": "resource"}, {"original_string": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_user\")\n    @ForeignKey(name = \"fk_security_user\")\n    private User user;", "modifier": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_user\")\n    @ForeignKey(name = \"fk_security_user\")\n    private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_group\")\n    @ForeignKey(name = \"fk_security_group\")\n    private UserGroup group;", "modifier": "@ManyToOne(optional = true)\n    @Index(name = \"idx_security_group\")\n    @ForeignKey(name = \"fk_security_group\")\n    private", "type": "UserGroup", "declarator": "group", "var_name": "group"}, {"original_string": "@Column(nullable = false, updatable = true)\n    @Index(name = \"idx_security_read\")\n    private boolean canRead;", "modifier": "@Column(nullable = false, updatable = true)\n    @Index(name = \"idx_security_read\")\n    private", "type": "boolean", "declarator": "canRead", "var_name": "canRead"}, {"original_string": "@Column(nullable = false, updatable = true)\n    @Index(name = \"idx_security_write\")\n    private boolean canWrite;", "modifier": "@Column(nullable = false, updatable = true)\n    @Index(name = \"idx_security_write\")\n    private", "type": "boolean", "declarator": "canWrite", "var_name": "canWrite"}, {"original_string": "@Column(nullable = true, updatable = true)\n    @Index(name = \"idx_security_username\")\n    private String username;", "modifier": "@Column(nullable = true, updatable = true)\n    @Index(name = \"idx_security_username\")\n    private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "@Column(nullable = true, updatable = true)\n    @Index(name = \"idx_security_groupname\")\n    private String groupname;", "modifier": "@Column(nullable = true, updatable = true)\n    @Index(name = \"idx_security_groupname\")\n    private", "type": "String", "declarator": "groupname", "var_name": "groupname"}], "methods": [{"identifier": "onPreUpdate", "parameters": "()", "modifiers": "@PreUpdate @PrePersist public", "return": "void", "signature": "void onPreUpdate()", "full_signature": "@PreUpdate @PrePersist public void onPreUpdate()", "class_method_signature": "SecurityRule.onPreUpdate()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@XmlTransient public", "return": "Long", "signature": "Long getId()", "full_signature": "@XmlTransient public Long getId()", "class_method_signature": "SecurityRule.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(Long id)", "modifiers": "public", "return": "void", "signature": "void setId(Long id)", "full_signature": "public void setId(Long id)", "class_method_signature": "SecurityRule.setId(Long id)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "@XmlTransient public", "return": "Resource", "signature": "Resource getResource()", "full_signature": "@XmlTransient public Resource getResource()", "class_method_signature": "SecurityRule.getResource()", "testcase": false, "constructor": false}, {"identifier": "setResource", "parameters": "(Resource resource)", "modifiers": "public", "return": "void", "signature": "void setResource(Resource resource)", "full_signature": "public void setResource(Resource resource)", "class_method_signature": "SecurityRule.setResource(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "@XmlTransient public", "return": "User", "signature": "User getUser()", "full_signature": "@XmlTransient public User getUser()", "class_method_signature": "SecurityRule.getUser()", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "(User user)", "modifiers": "public", "return": "void", "signature": "void setUser(User user)", "full_signature": "public void setUser(User user)", "class_method_signature": "SecurityRule.setUser(User user)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "@XmlTransient public", "return": "UserGroup", "signature": "UserGroup getGroup()", "full_signature": "@XmlTransient public UserGroup getGroup()", "class_method_signature": "SecurityRule.getGroup()", "testcase": false, "constructor": false}, {"identifier": "setGroup", "parameters": "(UserGroup group)", "modifiers": "public", "return": "void", "signature": "void setGroup(UserGroup group)", "full_signature": "public void setGroup(UserGroup group)", "class_method_signature": "SecurityRule.setGroup(UserGroup group)", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "SecurityRule.getUsername()", "testcase": false, "constructor": false}, {"identifier": "setUsername", "parameters": "(String username)", "modifiers": "public", "return": "void", "signature": "void setUsername(String username)", "full_signature": "public void setUsername(String username)", "class_method_signature": "SecurityRule.setUsername(String username)", "testcase": false, "constructor": false}, {"identifier": "getGroupname", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroupname()", "full_signature": "public String getGroupname()", "class_method_signature": "SecurityRule.getGroupname()", "testcase": false, "constructor": false}, {"identifier": "setGroupname", "parameters": "(String groupname)", "modifiers": "public", "return": "void", "signature": "void setGroupname(String groupname)", "full_signature": "public void setGroupname(String groupname)", "class_method_signature": "SecurityRule.setGroupname(String groupname)", "testcase": false, "constructor": false}, {"identifier": "isCanRead", "parameters": "()", "modifiers": "@XmlTransient public", "return": "boolean", "signature": "boolean isCanRead()", "full_signature": "@XmlTransient public boolean isCanRead()", "class_method_signature": "SecurityRule.isCanRead()", "testcase": false, "constructor": false}, {"identifier": "setCanRead", "parameters": "(boolean canRead)", "modifiers": "public", "return": "void", "signature": "void setCanRead(boolean canRead)", "full_signature": "public void setCanRead(boolean canRead)", "class_method_signature": "SecurityRule.setCanRead(boolean canRead)", "testcase": false, "constructor": false}, {"identifier": "isCanWrite", "parameters": "()", "modifiers": "@XmlTransient public", "return": "boolean", "signature": "boolean isCanWrite()", "full_signature": "@XmlTransient public boolean isCanWrite()", "class_method_signature": "SecurityRule.isCanWrite()", "testcase": false, "constructor": false}, {"identifier": "setCanWrite", "parameters": "(boolean canWrite)", "modifiers": "public", "return": "void", "signature": "void setCanWrite(boolean canWrite)", "full_signature": "public void setCanWrite(boolean canWrite)", "class_method_signature": "SecurityRule.setCanWrite(boolean canWrite)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SecurityRule.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SecurityRule.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "SecurityRule.equals(Object obj)", "testcase": false, "constructor": false}], "file": "src/core/model/src/main/java/it/geosolutions/geostore/core/model/SecurityRule.java"}, "focal_method": {"identifier": "setUsername", "parameters": "(String username)", "modifiers": "public", "return": "void", "body": "public void setUsername(String username) {\n        this.username = username;\n    }", "signature": "void setUsername(String username)", "full_signature": "public void setUsername(String username)", "class_method_signature": "SecurityRule.setUsername(String username)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}