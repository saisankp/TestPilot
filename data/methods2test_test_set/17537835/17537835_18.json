{"test_class": {"identifier": "InterfaceRuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "decorator/src/test/java/org/apache/cxf/dosgi/dsw/decorator/InterfaceRuleTest.java"}, "test_case": {"identifier": "testInterfaceRuleGetBundle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInterfaceRuleGetBundle() {\n        Bundle b = EasyMock.createMock(Bundle.class);\n        EasyMock.replay(b);\n        InterfaceRule ir = new InterfaceRule(b, \"org.apache.Foo\");\n        assertSame(b, ir.getBundle());\n    }", "signature": "void testInterfaceRuleGetBundle()", "full_signature": "@Test public void testInterfaceRuleGetBundle()", "class_method_signature": "InterfaceRuleTest.testInterfaceRuleGetBundle()", "testcase": true, "constructor": false, "invocations": ["createMock", "replay", "assertSame", "getBundle"]}, "focal_class": {"identifier": "InterfaceRule", "superclass": "", "interfaces": "implements Rule", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(InterfaceRule.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(InterfaceRule.class)", "var_name": "LOG"}, {"original_string": "private final Bundle bundle;", "modifier": "private final", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "private final Pattern matchPattern;", "modifier": "private final", "type": "Pattern", "declarator": "matchPattern", "var_name": "matchPattern"}, {"original_string": "private final Map<String, String> propMatches = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "propMatches = new HashMap<>()", "var_name": "propMatches"}, {"original_string": "private final Map<String, Object> addProps = new HashMap<>();", "modifier": "private final", "type": "Map<String, Object>", "declarator": "addProps = new HashMap<>()", "var_name": "addProps"}], "methods": [{"identifier": "InterfaceRule", "parameters": "(Bundle b, String im)", "modifiers": "public", "return": "", "signature": " InterfaceRule(Bundle b, String im)", "full_signature": "public  InterfaceRule(Bundle b, String im)", "class_method_signature": "InterfaceRule.InterfaceRule(Bundle b, String im)", "testcase": false, "constructor": true}, {"identifier": "addPropMatch", "parameters": "(String name, String value)", "modifiers": "public synchronized", "return": "void", "signature": "void addPropMatch(String name, String value)", "full_signature": "public synchronized void addPropMatch(String name, String value)", "class_method_signature": "InterfaceRule.addPropMatch(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(String name, String value, String type)", "modifiers": "public synchronized", "return": "void", "signature": "void addProperty(String name, String value, String type)", "full_signature": "public synchronized void addProperty(String name, String value, String type)", "class_method_signature": "InterfaceRule.addProperty(String name, String value, String type)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(ServiceReference<?> sref, Map<String, Object> target)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void apply(ServiceReference<?> sref, Map<String, Object> target)", "full_signature": "@Override public synchronized void apply(ServiceReference<?> sref, Map<String, Object> target)", "class_method_signature": "InterfaceRule.apply(ServiceReference<?> sref, Map<String, Object> target)", "testcase": false, "constructor": false}, {"identifier": "getBundle", "parameters": "()", "modifiers": "@Override public", "return": "Bundle", "signature": "Bundle getBundle()", "full_signature": "@Override public Bundle getBundle()", "class_method_signature": "InterfaceRule.getBundle()", "testcase": false, "constructor": false}], "file": "decorator/src/main/java/org/apache/cxf/dosgi/dsw/decorator/InterfaceRule.java"}, "focal_method": {"identifier": "getBundle", "parameters": "()", "modifiers": "@Override public", "return": "Bundle", "body": "@Override\n    public Bundle getBundle() {\n        return bundle;\n    }", "signature": "Bundle getBundle()", "full_signature": "@Override public Bundle getBundle()", "class_method_signature": "InterfaceRule.getBundle()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17537835, "url": "https://github.com/apache/cxf-dosgi", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 26, "size": 3444, "license": "licensed"}}