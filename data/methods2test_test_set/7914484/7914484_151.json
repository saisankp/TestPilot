{"test_class": {"identifier": "XPathParamAnnotationMethodEndpointAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTENTS = \"<root><child><text>text</text><number>42.0</number></child></root>\";", "modifier": "private static final", "type": "String", "declarator": "CONTENTS = \"<root><child><text>text</text><number>42.0</number></child></root>\"", "var_name": "CONTENTS"}, {"original_string": "private XPathParamAnnotationMethodEndpointAdapter adapter;", "modifier": "private", "type": "XPathParamAnnotationMethodEndpointAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private boolean supportedTypesInvoked = false;", "modifier": "private", "type": "boolean", "declarator": "supportedTypesInvoked = false", "var_name": "supportedTypesInvoked"}, {"original_string": "private boolean supportedSourceInvoked;", "modifier": "private", "type": "boolean", "declarator": "supportedSourceInvoked", "var_name": "supportedSourceInvoked"}, {"original_string": "private boolean namespacesInvoked;", "modifier": "private", "type": "boolean", "declarator": "namespacesInvoked", "var_name": "namespacesInvoked"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/XPathParamAnnotationMethodEndpointAdapterTest.java"}, "test_case": {"identifier": "testInvokeVoidDom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInvokeVoidDom() throws Exception {\n\t\tDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactoryUtils.newInstance();\n\t\tDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n\t\tDocument document = documentBuilder.newDocument();\n\t\tString rootNamespace = \"http://rootnamespace\";\n\t\tElement rootElement = document.createElementNS(rootNamespace, \"root\");\n\t\tdocument.appendChild(rootElement);\n\t\tString childNamespace = \"http://childnamespace\";\n\t\tElement first = document.createElementNS(childNamespace, \"child\");\n\t\trootElement.appendChild(first);\n\t\tText text = document.createTextNode(\"value\");\n\t\tfirst.appendChild(text);\n\t\tElement second = document.createElementNS(rootNamespace, \"other-child\");\n\t\trootElement.appendChild(second);\n\t\ttext = document.createTextNode(\"other-value\");\n\t\tsecond.appendChild(text);\n\n\t\tWebServiceMessage requestMock = createMock(WebServiceMessage.class);\n\t\texpect(requestMock.getPayloadSource()).andReturn(new DOMSource(first));\n\t\tWebServiceMessageFactory factoryMock = createMock(WebServiceMessageFactory.class);\n\n\t\treplay(requestMock, factoryMock);\n\n\t\tMap<String, String> namespaces = new HashMap<String, String>();\n\t\tnamespaces.put(\"root\", rootNamespace);\n\t\tnamespaces.put(\"child\", childNamespace);\n\t\tadapter.setNamespaces(namespaces);\n\n\t\tMessageContext messageContext = new DefaultMessageContext(requestMock, factoryMock);\n\t\tMethodEndpoint endpoint = new MethodEndpoint(this, \"namespaces\", new Class[] { Node.class });\n\t\tadapter.invoke(messageContext, endpoint);\n\t\tAssert.assertTrue(\"Method not invoked\", namespacesInvoked);\n\t}", "signature": "void testInvokeVoidDom()", "full_signature": "@Test public void testInvokeVoidDom()", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapterTest.testInvokeVoidDom()", "testcase": true, "constructor": false, "invocations": ["newInstance", "newDocumentBuilder", "newDocument", "createElementNS", "appendChild", "createElementNS", "appendChild", "createTextNode", "appendChild", "createElementNS", "appendChild", "createTextNode", "appendChild", "createMock", "andReturn", "expect", "getPayloadSource", "createMock", "replay", "put", "put", "setNamespaces", "invoke", "assertTrue"]}, "focal_class": {"identifier": "XPathParamAnnotationMethodEndpointAdapter", "superclass": "extends AbstractMethodEndpointAdapter", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private XPathFactory xpathFactory;", "modifier": "private", "type": "XPathFactory", "declarator": "xpathFactory", "var_name": "xpathFactory"}, {"original_string": "private Map<String, String> namespaces;", "modifier": "private", "type": "Map<String, String>", "declarator": "namespaces", "var_name": "namespaces"}], "methods": [{"identifier": "setNamespaces", "parameters": "(Map<String, String> namespaces)", "modifiers": "public", "return": "void", "signature": "void setNamespaces(Map<String, String> namespaces)", "full_signature": "public void setNamespaces(Map<String, String> namespaces)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.setNamespaces(Map<String, String> namespaces)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "supportsInternal", "parameters": "(MethodEndpoint methodEndpoint)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean supportsInternal(MethodEndpoint methodEndpoint)", "full_signature": "@Override protected boolean supportsInternal(MethodEndpoint methodEndpoint)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.supportsInternal(MethodEndpoint methodEndpoint)", "testcase": false, "constructor": false}, {"identifier": "getXPathParamAnnotation", "parameters": "(Method method, int paramIdx)", "modifiers": "private", "return": "XPathParam", "signature": "XPathParam getXPathParamAnnotation(Method method, int paramIdx)", "full_signature": "private XPathParam getXPathParamAnnotation(Method method, int paramIdx)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.getXPathParamAnnotation(Method method, int paramIdx)", "testcase": false, "constructor": false}, {"identifier": "isSupportedType", "parameters": "(Class<?> clazz)", "modifiers": "private", "return": "boolean", "signature": "boolean isSupportedType(Class<?> clazz)", "full_signature": "private boolean isSupportedType(Class<?> clazz)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.isSupportedType(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "invokeInternal", "parameters": "(MessageContext messageContext, MethodEndpoint methodEndpoint)", "modifiers": "@Override protected", "return": "void", "signature": "void invokeInternal(MessageContext messageContext, MethodEndpoint methodEndpoint)", "full_signature": "@Override protected void invokeInternal(MessageContext messageContext, MethodEndpoint methodEndpoint)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.invokeInternal(MessageContext messageContext, MethodEndpoint methodEndpoint)", "testcase": false, "constructor": false}, {"identifier": "getMethodArguments", "parameters": "(Element payloadElement, Method method)", "modifiers": "private", "return": "Object[]", "signature": "Object[] getMethodArguments(Element payloadElement, Method method)", "full_signature": "private Object[] getMethodArguments(Element payloadElement, Method method)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.getMethodArguments(Element payloadElement, Method method)", "testcase": false, "constructor": false}, {"identifier": "createXPath", "parameters": "()", "modifiers": "private synchronized", "return": "XPath", "signature": "XPath createXPath()", "full_signature": "private synchronized XPath createXPath()", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.createXPath()", "testcase": false, "constructor": false}, {"identifier": "getRootElement", "parameters": "(Source source)", "modifiers": "private", "return": "Element", "signature": "Element getRootElement(Source source)", "full_signature": "private Element getRootElement(Source source)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.getRootElement(Source source)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/adapter/XPathParamAnnotationMethodEndpointAdapter.java"}, "focal_method": {"identifier": "setNamespaces", "parameters": "(Map<String, String> namespaces)", "modifiers": "public", "return": "void", "body": "public void setNamespaces(Map<String, String> namespaces) {\n\t\tthis.namespaces = namespaces;\n\t}", "signature": "void setNamespaces(Map<String, String> namespaces)", "full_signature": "public void setNamespaces(Map<String, String> namespaces)", "class_method_signature": "XPathParamAnnotationMethodEndpointAdapter.setNamespaces(Map<String, String> namespaces)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}