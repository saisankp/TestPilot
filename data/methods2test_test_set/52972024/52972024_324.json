{"test_class": {"identifier": "FinalTaskTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/MessageProcessing/MessageProcessor/src/test/java/info/smart_tools/smartactors/message_processing/message_processor/FinalTaskTest.java"}, "test_case": {"identifier": "checkTaskExecution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkTaskExecution()\n            throws Exception {\n        IObject env = mock(IObject.class);\n        IObject context = mock(IObject.class);\n        List<IAction> finalActions = new ArrayList<>();\n        when(env.getValue(new FieldName(\"context\"))).thenReturn(null).thenReturn(context);\n        when(context.getValue(new FieldName(\"finalActions\"))).thenReturn(null).thenReturn(finalActions);\n        Checker checker = new Checker();\n        IAction action = new IAction() {\n            @Override\n            public void execute(Object actingObject) throws ActionExecuteException, InvalidArgumentException {\n                checker.setChecked(true);\n            }\n        };\n        finalActions.add(action);\n        ITask task = new FinalTask(env);\n\n        // context is null\n        task.execute();\n\n        // finalActions is null\n        task.execute();\n\n        // finalAction contains one action\n        task.execute();\n        assertEquals(checker.isChecked(), true);\n    }", "signature": "void checkTaskExecution()", "full_signature": "@Test public void checkTaskExecution()", "class_method_signature": "FinalTaskTest.checkTaskExecution()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "thenReturn", "when", "getValue", "thenReturn", "thenReturn", "when", "getValue", "setChecked", "add", "execute", "execute", "execute", "assertEquals", "isChecked"]}, "focal_class": {"identifier": "FinalTask", "superclass": "", "interfaces": "implements ITask", "fields": [{"original_string": "private IFieldName contextFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "contextFieldName", "var_name": "contextFieldName"}, {"original_string": "private IFieldName finalActionsFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "finalActionsFieldName", "var_name": "finalActionsFieldName"}, {"original_string": "private IObject env;", "modifier": "private", "type": "IObject", "declarator": "env", "var_name": "env"}], "methods": [{"identifier": "FinalTask", "parameters": "(final IObject environment)", "modifiers": "public", "return": "", "signature": " FinalTask(final IObject environment)", "full_signature": "public  FinalTask(final IObject environment)", "class_method_signature": "FinalTask.FinalTask(final IObject environment)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "FinalTask.execute()", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageProcessing/MessageProcessor/src/main/java/info/smart_tools/smartactors/message_processing/message_processor/FinalTask.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute()\n            throws TaskExecutionException {\n        try {\n            IObject context = (IObject) this.env.getValue(this.contextFieldName);\n            if (null == context) {\n                return;\n            }\n            List<IAction> actions = (List<IAction>) context.getValue(this.finalActionsFieldName);\n            if (null == actions) {\n                return;\n            }\n            for (IAction action : actions) {\n                try {\n                    action.execute(this.env);\n                } catch (ActionExecuteException e) {\n                    e.printStackTrace();\n                }\n            }\n\n        } catch (InvalidArgumentException | ReadValueException e) {\n            throw new TaskExecutionException(\"Could not execute final task.\");\n        }\n    }", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "FinalTask.execute()", "testcase": false, "constructor": false, "invocations": ["getValue", "getValue", "execute", "printStackTrace"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}