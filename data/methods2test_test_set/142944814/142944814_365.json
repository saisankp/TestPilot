{"test_class": {"identifier": "ContextConcTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final Context root = EmptyContext.getInstance();", "modifier": "protected final", "type": "Context", "declarator": "root = EmptyContext.getInstance()", "var_name": "root"}], "file": "core/common/src/test/java/hera/ContextConcTest.java"}, "test_case": {"identifier": "testGetScope", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetScope() {\n    final String expected = randomUUID().toString();\n    final Context context = new ContextConc(root, expected);\n    final String actual = context.getScope();\n    assertEquals(expected, actual);\n  }", "signature": "void testGetScope()", "full_signature": "@Test public void testGetScope()", "class_method_signature": "ContextConcTest.testGetScope()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "getScope", "assertEquals"]}, "focal_class": {"identifier": "ContextConc", "superclass": "", "interfaces": "implements Context", "fields": [{"original_string": "protected static final Map<Key<?>, Object> EMPTY_KEY_VALUE_MAP = unmodifiableMap(\n      new HashMap<Key<?>, Object>());", "modifier": "protected static final", "type": "Map<Key<?>, Object>", "declarator": "EMPTY_KEY_VALUE_MAP = unmodifiableMap(\n      new HashMap<Key<?>, Object>())", "var_name": "EMPTY_KEY_VALUE_MAP"}, {"original_string": "@ToString.Exclude\n  protected final transient Logger logger = getLogger(getClass());", "modifier": "@ToString.Exclude\n  protected final transient", "type": "Logger", "declarator": "logger = getLogger(getClass())", "var_name": "logger"}, {"original_string": "protected final String scope;", "modifier": "protected final", "type": "String", "declarator": "scope", "var_name": "scope"}, {"original_string": "protected final Map<Key<?>, Object> key2Value;", "modifier": "protected final", "type": "Map<Key<?>, Object>", "declarator": "key2Value", "var_name": "key2Value"}], "methods": [{"identifier": "ContextConc", "parameters": "(final Context parent, final String scope)", "modifiers": "", "return": "<T>", "signature": "<T> ContextConc(final Context parent, final String scope)", "full_signature": " <T> ContextConc(final Context parent, final String scope)", "class_method_signature": "ContextConc.ContextConc(final Context parent, final String scope)", "testcase": false, "constructor": true}, {"identifier": "ContextConc", "parameters": "(final Context parent, final Key<T> key, final T value)", "modifiers": "", "return": "<T>", "signature": "<T> ContextConc(final Context parent, final Key<T> key, final T value)", "full_signature": " <T> ContextConc(final Context parent, final Key<T> key, final T value)", "class_method_signature": "ContextConc.ContextConc(final Context parent, final Key<T> key, final T value)", "testcase": false, "constructor": true}, {"identifier": "withValue", "parameters": "(final Key<T> key, final T value)", "modifiers": "@Override public", "return": "Context", "signature": "Context withValue(final Key<T> key, final T value)", "full_signature": "@Override public Context withValue(final Key<T> key, final T value)", "class_method_signature": "ContextConc.withValue(final Key<T> key, final T value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Key<T> key)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(final Key<T> key)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(final Key<T> key)", "class_method_signature": "ContextConc.get(final Key<T> key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(final Key<T> key, final T defaultValue)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T getOrDefault(final Key<T> key, final T defaultValue)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T getOrDefault(final Key<T> key, final T defaultValue)", "class_method_signature": "ContextConc.getOrDefault(final Key<T> key, final T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "withScope", "parameters": "(final String scope)", "modifiers": "@Override public", "return": "Context", "signature": "Context withScope(final String scope)", "full_signature": "@Override public Context withScope(final String scope)", "class_method_signature": "ContextConc.withScope(final String scope)", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScope()", "full_signature": "@Override public String getScope()", "class_method_signature": "ContextConc.getScope()", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/ContextConc.java"}, "focal_method": {"identifier": "getScope", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String getScope() {\n    return this.scope;\n  }", "signature": "String getScope()", "full_signature": "@Override public String getScope()", "class_method_signature": "ContextConc.getScope()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}