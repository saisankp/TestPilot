{"test_class": {"identifier": "ParticleTypeNoteTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    private ParticleTypeNote invalidParticleType = new ParticleTypeNote();", "modifier": "@Spy\n    private", "type": "ParticleTypeNote", "declarator": "invalidParticleType = new ParticleTypeNote()", "var_name": "invalidParticleType"}, {"original_string": "@Spy\n    private ParticleTypeNote particleType = new ParticleTypeNote();", "modifier": "@Spy\n    private", "type": "ParticleTypeNote", "declarator": "particleType = new ParticleTypeNote()", "var_name": "particleType"}], "file": "ParticleNativeAPI-api/src/test/java/com/github/fierioziy/particlenativeapi/api/types/ParticleTypeNoteTest.java"}, "test_case": {"identifier": "test_packetNote_Vector_Double", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_packetNote_Vector_Double() {\n        // target pink color\n        FakePacket target = new FakePacket(true,\n                2D,         3D,         4D,\n                10D / 24D,  0D,         0D,\n                1D,         0);\n\n        particleType.packetNote(true,\n                target.getVector(),\n                target.getOffsetX());\n\n        // expect color to be exactly passed\n        verifyArgumentPass(target);\n    }", "signature": "void test_packetNote_Vector_Double()", "full_signature": "@Test public void test_packetNote_Vector_Double()", "class_method_signature": "ParticleTypeNoteTest.test_packetNote_Vector_Double()", "testcase": true, "constructor": false, "invocations": ["packetNote", "getVector", "getOffsetX", "verifyArgumentPass"]}, "focal_class": {"identifier": "ParticleTypeNote", "superclass": "extends ParticleType", "interfaces": "", "fields": [], "methods": [{"identifier": "packetNote", "parameters": "(boolean far, Location loc,\n                             Color color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Location loc,\n                             Color color)", "full_signature": "public Object packetNote(boolean far, Location loc,\n                             Color color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Location loc,\n                             Color color)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, Vector loc,\n                             Color color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Vector loc,\n                             Color color)", "full_signature": "public Object packetNote(boolean far, Vector loc,\n                             Color color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Vector loc,\n                             Color color)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, double x, double y, double z,\n                             Color color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, double x, double y, double z,\n                             Color color)", "full_signature": "public Object packetNote(boolean far, double x, double y, double z,\n                             Color color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, double x, double y, double z,\n                             Color color)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, Location loc,\n                             int r, int g, int b)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Location loc,\n                             int r, int g, int b)", "full_signature": "public Object packetNote(boolean far, Location loc,\n                             int r, int g, int b)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Location loc,\n                             int r, int g, int b)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, Vector loc,\n                             int r, int g, int b)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Vector loc,\n                             int r, int g, int b)", "full_signature": "public Object packetNote(boolean far, Vector loc,\n                             int r, int g, int b)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Vector loc,\n                             int r, int g, int b)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, double x, double y, double z,\n                             int r, int g, int b)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, double x, double y, double z,\n                             int r, int g, int b)", "full_signature": "public Object packetNote(boolean far, double x, double y, double z,\n                             int r, int g, int b)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, double x, double y, double z,\n                             int r, int g, int b)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, Location loc,\n                             double color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Location loc,\n                             double color)", "full_signature": "public Object packetNote(boolean far, Location loc,\n                             double color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Location loc,\n                             double color)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, Vector loc,\n                             double color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, Vector loc,\n                             double color)", "full_signature": "public Object packetNote(boolean far, Vector loc,\n                             double color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Vector loc,\n                             double color)", "testcase": false, "constructor": false}, {"identifier": "packetNote", "parameters": "(boolean far, double x, double y, double z,\n                             double color)", "modifiers": "public", "return": "Object", "signature": "Object packetNote(boolean far, double x, double y, double z,\n                             double color)", "full_signature": "public Object packetNote(boolean far, double x, double y, double z,\n                             double color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, double x, double y, double z,\n                             double color)", "testcase": false, "constructor": false}], "file": "ParticleNativeAPI-api/src/main/java/com/github/fierioziy/particlenativeapi/api/types/ParticleTypeNote.java"}, "focal_method": {"identifier": "packetNote", "parameters": "(boolean far, Location loc,\n                             Color color)", "modifiers": "public", "return": "Object", "body": "public Object packetNote(boolean far, Location loc,\n                             Color color) {\n        return packetNote(far,\n                loc.getX(), loc.getY(), loc.getZ(),\n                color.getRed(), color.getGreen(), color .getBlue());\n    }", "signature": "Object packetNote(boolean far, Location loc,\n                             Color color)", "full_signature": "public Object packetNote(boolean far, Location loc,\n                             Color color)", "class_method_signature": "ParticleTypeNote.packetNote(boolean far, Location loc,\n                             Color color)", "testcase": false, "constructor": false, "invocations": ["packetNote", "getX", "getY", "getZ", "getRed", "getGreen", "getBlue"]}, "repository": {"repo_id": 249420621, "url": "https://github.com/Fierioziy/ParticleNativeAPI", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 2068, "license": "licensed"}}