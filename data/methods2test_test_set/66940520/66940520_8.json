{"test_class": {"identifier": "AssignValueImplementerTest", "superclass": "extends AbstractImportValidationTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ObjectBundleService objectBundleService;", "modifier": "@Autowired\n    private", "type": "ObjectBundleService", "declarator": "objectBundleService", "var_name": "objectBundleService"}, {"original_string": "@Autowired\n    private ObjectBundleValidationService objectBundleValidationService;", "modifier": "@Autowired\n    private", "type": "ObjectBundleValidationService", "declarator": "objectBundleValidationService", "var_name": "objectBundleValidationService"}, {"original_string": "@Autowired\n    private RenderService _renderService;", "modifier": "@Autowired\n    private", "type": "RenderService", "declarator": "_renderService", "var_name": "_renderService"}, {"original_string": "@Autowired\n    private UserService _userService;", "modifier": "@Autowired\n    private", "type": "UserService", "declarator": "_userService", "var_name": "_userService"}, {"original_string": "@Autowired\n    private TrackerBundleService trackerBundleService;", "modifier": "@Autowired\n    private", "type": "TrackerBundleService", "declarator": "trackerBundleService", "var_name": "trackerBundleService"}, {"original_string": "@Autowired\n    private ProgramRuleService programRuleService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleService", "declarator": "programRuleService", "var_name": "programRuleService"}, {"original_string": "@Autowired\n    private ProgramRuleActionService programRuleActionService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleActionService", "declarator": "programRuleActionService", "var_name": "programRuleActionService"}, {"original_string": "@Autowired\n    private ProgramRuleVariableService programRuleVariableService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleVariableService", "declarator": "programRuleVariableService", "var_name": "programRuleVariableService"}, {"original_string": "@Autowired\n    private AssignValueImplementer implementerToTest;", "modifier": "@Autowired\n    private", "type": "AssignValueImplementer", "declarator": "implementerToTest", "var_name": "implementerToTest"}, {"original_string": "private final static String DATA_ELEMENT_NEW_VALUE = \"23.0\";", "modifier": "private final static", "type": "String", "declarator": "DATA_ELEMENT_NEW_VALUE = \"23.0\"", "var_name": "DATA_ELEMENT_NEW_VALUE"}, {"original_string": "private final static String TEI_ATTRIBUTE_NEW_VALUE = \"24.0\";", "modifier": "private final static", "type": "String", "declarator": "TEI_ATTRIBUTE_NEW_VALUE = \"24.0\"", "var_name": "TEI_ATTRIBUTE_NEW_VALUE"}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/AssignValueImplementerTest.java"}, "test_case": {"identifier": "testAssignAttributeValueForEnrollment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssignAttributeValueForEnrollment()\n        throws IOException\n    {\n        TrackerBundleParams bundleParams = createBundleFromJson( \"tracker/enrollment.json\" );\n\n        TrackerBundle trackerBundle = trackerBundleService.create( bundleParams );\n\n        trackerBundle = trackerBundleService.runRuleEngine( trackerBundle );\n\n        TrackerBundle updatedBundle = implementerToTest.executeActions( trackerBundle );\n\n        Enrollment enrollment = updatedBundle.getEnrollments().get( 0 );\n        assertNotNull( enrollment );\n        Attribute attribute = trackerBundle.getTrackedEntities().get( 0 ).getAttributes().stream()\n            .filter( a -> a.getAttribute().equals( \"sYn3tkL3XKa\" ) ).findAny().get();\n        assertEquals( TEI_ATTRIBUTE_NEW_VALUE, attribute.getValue() );\n    }", "signature": "void testAssignAttributeValueForEnrollment()", "full_signature": "@Test public void testAssignAttributeValueForEnrollment()", "class_method_signature": "AssignValueImplementerTest.testAssignAttributeValueForEnrollment()", "testcase": true, "constructor": false, "invocations": ["createBundleFromJson", "create", "runRuleEngine", "executeActions", "get", "getEnrollments", "assertNotNull", "get", "findAny", "filter", "stream", "getAttributes", "get", "getTrackedEntities", "equals", "getAttribute", "assertEquals", "getValue"]}, "focal_class": {"identifier": "AssignValueImplementer", "superclass": "", "interfaces": "implements RuleActionApplier", "fields": [], "methods": [{"identifier": "getActionClass", "parameters": "()", "modifiers": "@Override public", "return": "Class", "signature": "Class getActionClass()", "full_signature": "@Override public Class getActionClass()", "class_method_signature": "AssignValueImplementer.getActionClass()", "testcase": false, "constructor": false}, {"identifier": "executeActions", "parameters": "( TrackerBundle bundle )", "modifiers": "@Override public", "return": "TrackerBundle", "signature": "TrackerBundle executeActions( TrackerBundle bundle )", "full_signature": "@Override public TrackerBundle executeActions( TrackerBundle bundle )", "class_method_signature": "AssignValueImplementer.executeActions( TrackerBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "setTeiAttribute", "parameters": "( TrackedEntity tei, List<RuleEffect> effects )", "modifiers": "private", "return": "void", "signature": "void setTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "full_signature": "private void setTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "class_method_signature": "AssignValueImplementer.setTeiAttribute( TrackedEntity tei, List<RuleEffect> effects )", "testcase": false, "constructor": false}, {"identifier": "setDataElement", "parameters": "( Event event, List<RuleEffect> effects )", "modifiers": "private", "return": "void", "signature": "void setDataElement( Event event, List<RuleEffect> effects )", "full_signature": "private void setDataElement( Event event, List<RuleEffect> effects )", "class_method_signature": "AssignValueImplementer.setDataElement( Event event, List<RuleEffect> effects )", "testcase": false, "constructor": false}, {"identifier": "getEvent", "parameters": "( TrackerBundle bundle, String eventUid )", "modifiers": "private", "return": "Optional<Event>", "signature": "Optional<Event> getEvent( TrackerBundle bundle, String eventUid )", "full_signature": "private Optional<Event> getEvent( TrackerBundle bundle, String eventUid )", "class_method_signature": "AssignValueImplementer.getEvent( TrackerBundle bundle, String eventUid )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntity", "parameters": "( TrackerBundle bundle, String teiUid )", "modifiers": "private", "return": "Optional<TrackedEntity>", "signature": "Optional<TrackedEntity> getTrackedEntity( TrackerBundle bundle, String teiUid )", "full_signature": "private Optional<TrackedEntity> getTrackedEntity( TrackerBundle bundle, String teiUid )", "class_method_signature": "AssignValueImplementer.getTrackedEntity( TrackerBundle bundle, String teiUid )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntityFromEnrollment", "parameters": "( TrackerBundle bundle, String enrollmentUid )", "modifiers": "private", "return": "Optional<TrackedEntity>", "signature": "Optional<TrackedEntity> getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "full_signature": "private Optional<TrackedEntity> getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "class_method_signature": "AssignValueImplementer.getTrackedEntityFromEnrollment( TrackerBundle bundle, String enrollmentUid )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/programrule/AssignValueImplementer.java"}, "focal_method": {"identifier": "executeActions", "parameters": "( TrackerBundle bundle )", "modifiers": "@Override public", "return": "TrackerBundle", "body": "@Override\n    public TrackerBundle executeActions( TrackerBundle bundle )\n    {\n        Map<String, List<RuleEffect>> enrollmentEffects = getEffects( bundle.getEnrollmentRuleEffects() );\n\n        enrollmentEffects\n            .entrySet()\n            .stream()\n            .forEach( e -> getTrackedEntityFromEnrollment( bundle, e.getKey() )\n                .ifPresent( tei -> setTeiAttribute( tei, e.getValue() ) ) );\n\n        Map<String, List<RuleEffect>> eventEffects = getEffects( bundle.getEventRuleEffects() );\n\n        eventEffects\n            .entrySet()\n            .stream()\n            .forEach( e -> getEvent( bundle, e.getKey() )\n                .ifPresent( tei -> setDataElement( tei, e.getValue() ) ) );\n\n        return bundle;\n    }", "signature": "TrackerBundle executeActions( TrackerBundle bundle )", "full_signature": "@Override public TrackerBundle executeActions( TrackerBundle bundle )", "class_method_signature": "AssignValueImplementer.executeActions( TrackerBundle bundle )", "testcase": false, "constructor": false, "invocations": ["getEffects", "getEnrollmentRuleEffects", "forEach", "stream", "entrySet", "ifPresent", "getTrackedEntityFromEnrollment", "getKey", "setTeiAttribute", "getValue", "getEffects", "getEventRuleEffects", "forEach", "stream", "entrySet", "ifPresent", "getEvent", "getKey", "setDataElement", "getValue"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}