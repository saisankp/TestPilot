{"test_class": {"identifier": "ThingModifyCommandAdapterTest", "superclass": "extends LiveTwinTest", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private ThingModifyCommandAdapter underTest;", "modifier": "private", "type": "ThingModifyCommandAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/things/ThingModifyCommandAdapterTest.java"}, "test_case": {"identifier": "deleteFeaturePropertyToAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteFeaturePropertyToAdaptable() {\n        final TopicPath topicPath = topicPath(TopicPath.Action.DELETE);\n        final JsonPointer path = JsonPointer\n                .of(\"/features/\" + TestConstants.FEATURE_ID + \"/properties\" +\n                        TestConstants.FEATURE_PROPERTY_POINTER);\n\n        final Adaptable expected = Adaptable.newBuilder(topicPath)\n                .withPayload(Payload.newBuilder(path)\n                        .build())\n                .withHeaders(TestConstants.HEADERS_V_2)\n                .build();\n\n        final DeleteFeatureProperty deleteFeatureProperty = DeleteFeatureProperty.of(TestConstants.THING_ID,\n                TestConstants.FEATURE_ID, TestConstants.FEATURE_PROPERTY_POINTER,\n                TestConstants.HEADERS_V_2_NO_CONTENT_TYPE);\n        final Adaptable actual = underTest.toAdaptable(deleteFeatureProperty, channel);\n\n        assertWithExternalHeadersThat(actual).isEqualTo(expected);\n    }", "signature": "void deleteFeaturePropertyToAdaptable()", "full_signature": "@Test public void deleteFeaturePropertyToAdaptable()", "class_method_signature": "ThingModifyCommandAdapterTest.deleteFeaturePropertyToAdaptable()", "testcase": true, "constructor": false, "invocations": ["topicPath", "of", "build", "withHeaders", "withPayload", "newBuilder", "build", "newBuilder", "of", "toAdaptable", "isEqualTo", "assertWithExternalHeadersThat"]}, "focal_class": {"identifier": "ThingModifyCommandAdapter", "superclass": "extends AbstractThingAdapter<ThingModifyCommand<?>>", "interfaces": "implements ModifyCommandAdapter<ThingModifyCommand<?>>", "fields": [{"original_string": "private final SignalMapper<ThingModifyCommand<?>> signalMapper =\n            SignalMapperFactory.newThingModifySignalMapper();", "modifier": "private final", "type": "SignalMapper<ThingModifyCommand<?>>", "declarator": "signalMapper =\n            SignalMapperFactory.newThingModifySignalMapper()", "var_name": "signalMapper"}], "methods": [{"identifier": "ThingModifyCommandAdapter", "parameters": "(\n            final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " ThingModifyCommandAdapter(\n            final HeaderTranslator headerTranslator)", "full_signature": "private  ThingModifyCommandAdapter(\n            final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandAdapter.ThingModifyCommandAdapter(\n            final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingModifyCommandAdapter", "signature": "ThingModifyCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingModifyCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "mapSignalToAdaptable", "parameters": "(final ThingModifyCommand<?> command, final TopicPath.Channel channel)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable mapSignalToAdaptable(final ThingModifyCommand<?> command, final TopicPath.Channel channel)", "full_signature": "@Override public Adaptable mapSignalToAdaptable(final ThingModifyCommand<?> command, final TopicPath.Channel channel)", "class_method_signature": "ThingModifyCommandAdapter.mapSignalToAdaptable(final ThingModifyCommand<?> command, final TopicPath.Channel channel)", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/things/ThingModifyCommandAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingModifyCommandAdapter", "body": "public static ThingModifyCommandAdapter of(final HeaderTranslator headerTranslator) {\n        return new ThingModifyCommandAdapter(requireNonNull(headerTranslator));\n    }", "signature": "ThingModifyCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingModifyCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingModifyCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}