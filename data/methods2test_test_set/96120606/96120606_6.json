{"test_class": {"identifier": "WebActionControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n\tprivate WebActionController testee;", "modifier": "@InjectMocks\n\tprivate", "type": "WebActionController", "declarator": "testee", "var_name": "testee"}, {"original_string": "@Mock\n\tprivate WebCommandDispatcher dispatcher;", "modifier": "@Mock\n\tprivate", "type": "WebCommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}], "file": "nimbus-core/src/test/java/com/antheminc/oss/nimbus/channel/web/WebActionControllerTest.java"}, "test_case": {"identifier": "testLogin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLogin() {\n\t\tfinal ResponseEntity<?> response = this.testee.login();\n\t\tAssert.assertEquals(HttpStatus.OK, response.getStatusCode());\n\t\tAssert.assertEquals(null, response.getBody());\n\t}", "signature": "void testLogin()", "full_signature": "@Test public void testLogin()", "class_method_signature": "WebActionControllerTest.testLogin()", "testcase": true, "constructor": false, "invocations": ["login", "assertEquals", "getStatusCode", "assertEquals", "getBody"]}, "focal_class": {"identifier": "WebActionController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String URI_PATTERN_P = \"/{clientCode}/**/p\";", "modifier": "public static final", "type": "String", "declarator": "URI_PATTERN_P = \"/{clientCode}/**/p\"", "var_name": "URI_PATTERN_P"}, {"original_string": "public static final String URI_PATTERN_P_OPEN = URI_PATTERN_P + \"/**\";", "modifier": "public static final", "type": "String", "declarator": "URI_PATTERN_P_OPEN = URI_PATTERN_P + \"/**\"", "var_name": "URI_PATTERN_P_OPEN"}, {"original_string": "private static final Set<Action> notifyActionsToMatch = EnumSet.of(Action._replace, Action._update);", "modifier": "private static final", "type": "Set<Action>", "declarator": "notifyActionsToMatch = EnumSet.of(Action._replace, Action._update)", "var_name": "notifyActionsToMatch"}, {"original_string": "@Autowired WebCommandDispatcher dispatcher;", "modifier": "@Autowired", "type": "WebCommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "@Autowired ExecutionContextLoader ctxLoader;", "modifier": "@Autowired", "type": "ExecutionContextLoader", "declarator": "ctxLoader", "var_name": "ctxLoader"}, {"original_string": "@Autowired WebCommandBuilder builder;", "modifier": "@Autowired", "type": "WebCommandBuilder", "declarator": "builder", "var_name": "builder"}], "methods": [{"identifier": "clear", "parameters": "()", "modifiers": "@RequestMapping(value=URI_PATTERN_P+\"/clear\", produces=\"application/json\", method=RequestMethod.GET) public", "return": "void", "signature": "void clear()", "full_signature": "@RequestMapping(value=URI_PATTERN_P+\"/clear\", produces=\"application/json\", method=RequestMethod.GET) public void clear()", "class_method_signature": "WebActionController.clear()", "testcase": false, "constructor": false}, {"identifier": "updateLogLevel", "parameters": "(@RequestParam(value=\"level\") String level, @RequestParam(value=\"package\") String packageName)", "modifiers": "@RequestMapping(value=URI_PATTERN_P+\"/loglevel\", produces=\"application/json\", method=RequestMethod.GET) public", "return": "Output<String>", "signature": "Output<String> updateLogLevel(@RequestParam(value=\"level\") String level, @RequestParam(value=\"package\") String packageName)", "full_signature": "@RequestMapping(value=URI_PATTERN_P+\"/loglevel\", produces=\"application/json\", method=RequestMethod.GET) public Output<String> updateLogLevel(@RequestParam(value=\"level\") String level, @RequestParam(value=\"package\") String packageName)", "class_method_signature": "WebActionController.updateLogLevel(@RequestParam(value=\"level\") String level, @RequestParam(value=\"package\") String packageName)", "testcase": false, "constructor": false}, {"identifier": "handleGet", "parameters": "(HttpServletRequest req, @RequestParam(required=false) String a)", "modifiers": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.GET) public", "return": "Object", "signature": "Object handleGet(HttpServletRequest req, @RequestParam(required=false) String a)", "full_signature": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.GET) public Object handleGet(HttpServletRequest req, @RequestParam(required=false) String a)", "class_method_signature": "WebActionController.handleGet(HttpServletRequest req, @RequestParam(required=false) String a)", "testcase": false, "constructor": false}, {"identifier": "handleDelete", "parameters": "(HttpServletRequest req, @RequestParam String v)", "modifiers": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.DELETE) public", "return": "Object", "signature": "Object handleDelete(HttpServletRequest req, @RequestParam String v)", "full_signature": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.DELETE) public Object handleDelete(HttpServletRequest req, @RequestParam String v)", "class_method_signature": "WebActionController.handleDelete(HttpServletRequest req, @RequestParam String v)", "testcase": false, "constructor": false}, {"identifier": "handlePost", "parameters": "(HttpServletRequest req, @RequestBody String json)", "modifiers": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.POST) public", "return": "Object", "signature": "Object handlePost(HttpServletRequest req, @RequestBody String json)", "full_signature": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.POST) public Object handlePost(HttpServletRequest req, @RequestBody String json)", "class_method_signature": "WebActionController.handlePost(HttpServletRequest req, @RequestBody String json)", "testcase": false, "constructor": false}, {"identifier": "handlePut", "parameters": "(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "modifiers": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.PUT) public", "return": "Object", "signature": "Object handlePut(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "full_signature": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.PUT) public Object handlePut(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "class_method_signature": "WebActionController.handlePut(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "testcase": false, "constructor": false}, {"identifier": "handlePatch", "parameters": "(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "modifiers": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.PATCH) public", "return": "Object", "signature": "Object handlePatch(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "full_signature": "@RequestMapping(value=URI_PATTERN_P_OPEN, produces=\"application/json\", method=RequestMethod.PATCH) public Object handlePatch(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "class_method_signature": "WebActionController.handlePatch(HttpServletRequest req, @RequestParam String v, @RequestBody String json)", "testcase": false, "constructor": false}, {"identifier": "handleEventNotify", "parameters": "(HttpServletRequest req, @RequestBody ModelEvent<String> event)", "modifiers": "@RequestMapping(value=URI_PATTERN_P+\"/event/notify\", produces=\"application/json\", method=RequestMethod.POST) public", "return": "Object", "signature": "Object handleEventNotify(HttpServletRequest req, @RequestBody ModelEvent<String> event)", "full_signature": "@RequestMapping(value=URI_PATTERN_P+\"/event/notify\", produces=\"application/json\", method=RequestMethod.POST) public Object handleEventNotify(HttpServletRequest req, @RequestBody ModelEvent<String> event)", "class_method_signature": "WebActionController.handleEventNotify(HttpServletRequest req, @RequestBody ModelEvent<String> event)", "testcase": false, "constructor": false}, {"identifier": "filterInputParamFromOutput", "parameters": "(Object obj)", "modifiers": "private", "return": "void", "signature": "void filterInputParamFromOutput(Object obj)", "full_signature": "private void filterInputParamFromOutput(Object obj)", "class_method_signature": "WebActionController.filterInputParamFromOutput(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isRemove", "parameters": "(String inputParamPath, Output<?> o)", "modifiers": "private", "return": "boolean", "signature": "boolean isRemove(String inputParamPath, Output<?> o)", "full_signature": "private boolean isRemove(String inputParamPath, Output<?> o)", "class_method_signature": "WebActionController.isRemove(String inputParamPath, Output<?> o)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "()", "modifiers": "@RequestMapping(value = {\"/login/*\"}, method = RequestMethod.GET) public", "return": "ResponseEntity<?>", "signature": "ResponseEntity<?> login()", "full_signature": "@RequestMapping(value = {\"/login/*\"}, method = RequestMethod.GET) public ResponseEntity<?> login()", "class_method_signature": "WebActionController.login()", "testcase": false, "constructor": false}, {"identifier": "handleInternal", "parameters": "(HttpServletRequest req, RequestMethod httpMethod, String v, String json)", "modifiers": "protected", "return": "Object", "signature": "Object handleInternal(HttpServletRequest req, RequestMethod httpMethod, String v, String json)", "full_signature": "protected Object handleInternal(HttpServletRequest req, RequestMethod httpMethod, String v, String json)", "class_method_signature": "WebActionController.handleInternal(HttpServletRequest req, RequestMethod httpMethod, String v, String json)", "testcase": false, "constructor": false}], "file": "nimbus-core/src/main/java/com/antheminc/oss/nimbus/channel/web/WebActionController.java"}, "focal_method": {"identifier": "login", "parameters": "()", "modifiers": "@RequestMapping(value = {\"/login/*\"}, method = RequestMethod.GET) public", "return": "ResponseEntity<?>", "body": "@RequestMapping(value = {\"/login/*\"}, method = RequestMethod.GET)\n\tpublic ResponseEntity<?> login(){\n\t\treturn ResponseEntity.status(HttpStatus.OK).body(null);\n\t}", "signature": "ResponseEntity<?> login()", "full_signature": "@RequestMapping(value = {\"/login/*\"}, method = RequestMethod.GET) public ResponseEntity<?> login()", "class_method_signature": "WebActionController.login()", "testcase": false, "constructor": false, "invocations": ["body", "status"]}, "repository": {"repo_id": 96120606, "url": "https://github.com/openanthem/nimbus-core", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 9, "size": 55787, "license": "licensed"}}