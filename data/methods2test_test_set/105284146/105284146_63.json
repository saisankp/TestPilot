{"test_class": {"identifier": "PluginsInfoToolTest", "superclass": "extends AbstractToolTest", "interfaces": "", "fields": [], "file": "tools/src/test/java/com/powsybl/tools/PluginsInfoToolTest.java"}, "test_case": {"identifier": "run", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void run() throws Exception {\n        assertCommand(new String[] {\"plugins-info\"}, CommandLineTools.COMMAND_OK_STATUS, \"dummy\", \"\");\n    }", "signature": "void run()", "full_signature": "@Test public void run()", "class_method_signature": "PluginsInfoToolTest.run()", "testcase": true, "constructor": false, "invocations": ["assertCommand"]}, "focal_class": {"identifier": "PluginsInfoTool", "superclass": "", "interfaces": "implements Tool", "fields": [{"original_string": "private static final int MAX_IDS_LENGTH = 100;", "modifier": "private static final", "type": "int", "declarator": "MAX_IDS_LENGTH = 100", "var_name": "MAX_IDS_LENGTH"}, {"original_string": "private static final Command COMMAND = new Command() {\n        @Override\n        public String getName() {\n            return \"plugins-info\";\n        }\n\n        @Override\n        public String getTheme() {\n            return \"Misc\";\n        }\n\n        @Override\n        public String getDescription() {\n            return \"List the available plugins\";\n        }\n\n        @Override\n        public Options getOptions() {\n            return new Options();\n        }\n\n        @Override\n        public String getUsageFooter() {\n            return null;\n        }\n    };", "modifier": "private static final", "type": "Command", "declarator": "COMMAND = new Command() {\n        @Override\n        public String getName() {\n            return \"plugins-info\";\n        }\n\n        @Override\n        public String getTheme() {\n            return \"Misc\";\n        }\n\n        @Override\n        public String getDescription() {\n            return \"List the available plugins\";\n        }\n\n        @Override\n        public Options getOptions() {\n            return new Options();\n        }\n\n        @Override\n        public String getUsageFooter() {\n            return null;\n        }\n    }", "var_name": "COMMAND"}], "methods": [{"identifier": "getCommand", "parameters": "()", "modifiers": "@Override public", "return": "Command", "signature": "Command getCommand()", "full_signature": "@Override public Command getCommand()", "class_method_signature": "PluginsInfoTool.getCommand()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(CommandLine line, ToolRunningContext context)", "modifiers": "@Override public", "return": "void", "signature": "void run(CommandLine line, ToolRunningContext context)", "full_signature": "@Override public void run(CommandLine line, ToolRunningContext context)", "class_method_signature": "PluginsInfoTool.run(CommandLine line, ToolRunningContext context)", "testcase": false, "constructor": false}], "file": "tools/src/main/java/com/powsybl/tools/PluginsInfoTool.java"}, "focal_method": {"identifier": "run", "parameters": "(CommandLine line, ToolRunningContext context)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run(CommandLine line, ToolRunningContext context) throws Exception {\n        Collection<PluginInfo> pluginInfos = Plugins.getPluginInfos();\n        Writer writer = new OutputStreamWriter(context.getOutputStream());\n        AsciiTableFormatterFactory asciiTableFormatterFactory = new AsciiTableFormatterFactory();\n\n        try (TableFormatter formatter = asciiTableFormatterFactory.create(writer, \"Plugins\", new TableFormatterConfig(),\n                new Column(\"Plugin type name\"),\n                new Column(\"Available plugin IDs\"))) {\n\n            for (PluginInfo p : pluginInfos) {\n                List<String> ids = Plugins.getPluginImplementationsIds(p);\n                String strIds = String.join(\", \", ids);\n                if (strIds.length() > MAX_IDS_LENGTH) {\n                    formatter.writeCell(p.getPluginName());\n                    formatter.writeCell(ids.get(0));\n                    for (int i = 1; i < ids.size(); ++i) {\n                        formatter.writeEmptyCell();\n                        formatter.writeCell(ids.get(i));\n                    }\n                } else {\n                    formatter.writeCell(p.getPluginName());\n                    formatter.writeCell(strIds);\n                }\n            }\n        } catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }", "signature": "void run(CommandLine line, ToolRunningContext context)", "full_signature": "@Override public void run(CommandLine line, ToolRunningContext context)", "class_method_signature": "PluginsInfoTool.run(CommandLine line, ToolRunningContext context)", "testcase": false, "constructor": false, "invocations": ["getPluginInfos", "getOutputStream", "create", "getPluginImplementationsIds", "join", "length", "writeCell", "getPluginName", "writeCell", "get", "size", "writeEmptyCell", "writeCell", "get", "writeCell", "getPluginName", "writeCell"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}