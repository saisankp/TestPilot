{"test_class": {"identifier": "CrescentSearchRequestWrapperTest", "superclass": "extends CrescentTestCaseUtil", "interfaces": "", "fields": [{"original_string": "private static SearchRequest searchRequest;", "modifier": "private static", "type": "SearchRequest", "declarator": "searchRequest", "var_name": "searchRequest"}], "file": "crescent_core_web/src/test/java/com/tistory/devyongsik/crescent/query/CrescentSearchRequestWrapperTest.java"}, "test_case": {"identifier": "getSort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getSort() {\n\t\tsearchRequest.setSort(\"title_sort desc, board_id_sort asc\");\n\t\tCrescentSearchRequestWrapper searchRequestWrapper = new CrescentSearchRequestWrapper(searchRequest);\n\n\t\tSort sort = searchRequestWrapper.getSort();\n\t\tAssert.assertEquals(\"<string: \\\"title_sort\\\">!,<long: \\\"board_id_sort\\\">\", sort.toString());\n\n\t\tsearchRequest.setSort(\"score desc, title_sort desc\");\n\t\tsort = searchRequestWrapper.getSort();\n\n\t\tAssert.assertEquals(\"<score>,<string: \\\"title_sort\\\">!\", sort.toString());\n\t}", "signature": "void getSort()", "full_signature": "@Test public void getSort()", "class_method_signature": "CrescentSearchRequestWrapperTest.getSort()", "testcase": true, "constructor": false, "invocations": ["setSort", "getSort", "assertEquals", "toString", "setSort", "getSort", "assertEquals", "toString"]}, "focal_class": {"identifier": "CrescentSearchRequestWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(CrescentSearchRequestWrapper.class);", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CrescentSearchRequestWrapper.class)", "var_name": "logger"}, {"original_string": "private SearchRequest searchRequest = null;", "modifier": "private", "type": "SearchRequest", "declarator": "searchRequest = null", "var_name": "searchRequest"}, {"original_string": "private final int DEFAULT_HITS_FOR_PAGE = 20;", "modifier": "private final", "type": "int", "declarator": "DEFAULT_HITS_FOR_PAGE = 20", "var_name": "DEFAULT_HITS_FOR_PAGE"}, {"original_string": "private final int DEFAULT_PAGE_NUM = 1;", "modifier": "private final", "type": "int", "declarator": "DEFAULT_PAGE_NUM = 1", "var_name": "DEFAULT_PAGE_NUM"}, {"original_string": "private final int DEFAULT_HITS_PAGE = 5;", "modifier": "private final", "type": "int", "declarator": "DEFAULT_HITS_PAGE = 5", "var_name": "DEFAULT_HITS_PAGE"}, {"original_string": "private List<CrescentCollectionField> searchFields = new ArrayList<CrescentCollectionField>();", "modifier": "private", "type": "List<CrescentCollectionField>", "declarator": "searchFields = new ArrayList<CrescentCollectionField>()", "var_name": "searchFields"}, {"original_string": "private List<CrescentCollectionField> indexedFields = new ArrayList<CrescentCollectionField>();", "modifier": "private", "type": "List<CrescentCollectionField>", "declarator": "indexedFields = new ArrayList<CrescentCollectionField>()", "var_name": "indexedFields"}, {"original_string": "private CrescentCollection collection = null;", "modifier": "private", "type": "CrescentCollection", "declarator": "collection = null", "var_name": "collection"}, {"original_string": "private Map<String, CrescentCollectionField> collectionFieldsMap = null;", "modifier": "private", "type": "Map<String, CrescentCollectionField>", "declarator": "collectionFieldsMap = null", "var_name": "collectionFieldsMap"}], "methods": [{"identifier": "CrescentSearchRequestWrapper", "parameters": "(SearchRequest searchRequest)", "modifiers": "public", "return": "", "signature": " CrescentSearchRequestWrapper(SearchRequest searchRequest)", "full_signature": "public  CrescentSearchRequestWrapper(SearchRequest searchRequest)", "class_method_signature": "CrescentSearchRequestWrapper.CrescentSearchRequestWrapper(SearchRequest searchRequest)", "testcase": false, "constructor": true}, {"identifier": "getKeyword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKeyword()", "full_signature": "public String getKeyword()", "class_method_signature": "CrescentSearchRequestWrapper.getKeyword()", "testcase": false, "constructor": false}, {"identifier": "getCollectionName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCollectionName()", "full_signature": "public String getCollectionName()", "class_method_signature": "CrescentSearchRequestWrapper.getCollectionName()", "testcase": false, "constructor": false}, {"identifier": "getDefaultHitsPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDefaultHitsPage()", "full_signature": "public int getDefaultHitsPage()", "class_method_signature": "CrescentSearchRequestWrapper.getDefaultHitsPage()", "testcase": false, "constructor": false}, {"identifier": "getPageNum", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageNum()", "full_signature": "public int getPageNum()", "class_method_signature": "CrescentSearchRequestWrapper.getPageNum()", "testcase": false, "constructor": false}, {"identifier": "getStartOffSet", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStartOffSet()", "full_signature": "public int getStartOffSet()", "class_method_signature": "CrescentSearchRequestWrapper.getStartOffSet()", "testcase": false, "constructor": false}, {"identifier": "getHitsForPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHitsForPage()", "full_signature": "public int getHitsForPage()", "class_method_signature": "CrescentSearchRequestWrapper.getHitsForPage()", "testcase": false, "constructor": false}, {"identifier": "getSort", "parameters": "()", "modifiers": "public", "return": "Sort", "signature": "Sort getSort()", "full_signature": "public Sort getSort()", "class_method_signature": "CrescentSearchRequestWrapper.getSort()", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "()", "modifiers": "public", "return": "Query", "signature": "Query getQuery()", "full_signature": "public Query getQuery()", "class_method_signature": "CrescentSearchRequestWrapper.getQuery()", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "public", "return": "Filter", "signature": "Filter getFilter()", "full_signature": "public Filter getFilter()", "class_method_signature": "CrescentSearchRequestWrapper.getFilter()", "testcase": false, "constructor": false}, {"identifier": "getTargetSearchFields", "parameters": "()", "modifiers": "public", "return": "List<CrescentCollectionField>", "signature": "List<CrescentCollectionField> getTargetSearchFields()", "full_signature": "public List<CrescentCollectionField> getTargetSearchFields()", "class_method_signature": "CrescentSearchRequestWrapper.getTargetSearchFields()", "testcase": false, "constructor": false}, {"identifier": "getIndexedFields", "parameters": "()", "modifiers": "public", "return": "List<CrescentCollectionField>", "signature": "List<CrescentCollectionField> getIndexedFields()", "full_signature": "public List<CrescentCollectionField> getIndexedFields()", "class_method_signature": "CrescentSearchRequestWrapper.getIndexedFields()", "testcase": false, "constructor": false}, {"identifier": "getUserIp", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserIp()", "full_signature": "public String getUserIp()", "class_method_signature": "CrescentSearchRequestWrapper.getUserIp()", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserId()", "full_signature": "public String getUserId()", "class_method_signature": "CrescentSearchRequestWrapper.getUserId()", "testcase": false, "constructor": false}, {"identifier": "getPcId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPcId()", "full_signature": "public String getPcId()", "class_method_signature": "CrescentSearchRequestWrapper.getPcId()", "testcase": false, "constructor": false}], "file": "crescent_core_web/src/main/java/com/tistory/devyongsik/crescent/query/CrescentSearchRequestWrapper.java"}, "focal_method": {"identifier": "getSort", "parameters": "()", "modifiers": "public", "return": "Sort", "body": "public Sort getSort() {\n\t\tString sortQueryString = searchRequest.getSort();\n\n\t\tlogger.debug(\"\uc18c\ud2b8 \ud30c\ub77c\ubbf8\ud130 : {}\", sortQueryString);\n\n\t\tif(sortQueryString == null || \"\".equals(sortQueryString) || \"null\".equals(sortQueryString)) return null;\n\n\t\tString[] parts = sortQueryString.split(\",\");\n\t\tif(parts.length == 0) return null;\n\n\t\tSortField[] lst = new SortField[parts.length];\n\n\t\tfor(int i = 0; i < parts.length; i++) {\n\t\t\tString part = parts[i].trim(); //part = field desc\n\n\t\t\tlogger.debug(\"part : {}\", part);\n\n\t\t\tboolean descending = true;\n\n\t\t\tint idx = part.indexOf( ' ' );\n\t\t\tif(idx > 0) {\n\t\t\t\tString order = part.substring( idx+1 ).trim();\n\n\t\t\t\tif(\"desc\".equals(order)) {\n\t\t\t\t\tdescending = true;\n\t\t\t\t} else if(\"asc\".equals(order)) {\n\t\t\t\t\tdescending = false;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IllegalStateException(\"\uc54c \uc218 \uc5c6\ub294 \uc870\uac74\uc785\ub2c8\ub2e4. : \" + order);\n\t\t\t\t}\n\n\t\t\t\tpart = part.substring( 0, idx ).trim(); //part = field\n\n\t\t\t} else {\n\t\t\t\tthrow new IllegalStateException(\"Order \uc870\uac74\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\");\n\t\t\t}\n\n\t\t\tif(logger.isDebugEnabled())\n\t\t\t\tlogger.debug(\"part order \uc81c\uac70 \ud6c4: \" + part);\n\n\t\t\tif(\"score\".equals(part)) {\n\t\t\t\tif(descending) {\n\t\t\t\t\tif(parts.length == 1) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tlst[i] = SortField.FIELD_SCORE;\n\t\t\t\t} else {\n\t\t\t\t\tlst[i] = new SortField(null,SortField.Type.SCORE, true);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tCrescentCollectionField f = collectionFieldsMap.get(part);\n\t\t\t\t\t\n\t\t\t\tlst[i] = new SortField(f.getName(),f.getSortFieldType(),descending);\n\t\t\t}\n\t\t}//end for\n\n\t\tif(logger.isDebugEnabled()) {\n\t\t\tfor(int i=0; i < lst.length; i++) {\n\t\t\t\tlogger.debug(lst[i].getField());\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn new Sort(lst);\n\t}", "signature": "Sort getSort()", "full_signature": "public Sort getSort()", "class_method_signature": "CrescentSearchRequestWrapper.getSort()", "testcase": false, "constructor": false, "invocations": ["getSort", "debug", "equals", "equals", "split", "trim", "debug", "indexOf", "trim", "substring", "equals", "equals", "trim", "substring", "isDebugEnabled", "debug", "equals", "get", "getName", "getSortFieldType", "isDebugEnabled", "debug", "getField"]}, "repository": {"repo_id": 5426789, "url": "https://github.com/need4spd/crescent", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 15, "size": 50982, "license": "licensed"}}