{"test_class": {"identifier": "LabelsTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/metrics/promql/src/test/java/com/alipay/sofa/lookout/server/prom/labels/LabelsTest.java"}, "test_case": {"identifier": "testGetLabels", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLabels() {\n        Labels labels = new Labels();\n        labels.set(\"k1\", \"v1\");\n        labels.set(\"k2\", \"v2\");\n        labels.set(\"k3\", \"v3\");\n        labels.set(\"k3\", \"v4\");\n        StringBuilder sb=new StringBuilder();\n        labels.getLabels().stream().forEach(x->sb.append(x.toString()));\n        System.out.println(sb.toString());\n        Assert.assertEquals(\"k1=v1k2=v2k3=v3\",sb.toString());\n\n    }", "signature": "void testGetLabels()", "full_signature": "@Test public void testGetLabels()", "class_method_signature": "LabelsTest.testGetLabels()", "testcase": true, "constructor": false, "invocations": ["set", "set", "set", "set", "forEach", "stream", "getLabels", "append", "toString", "println", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "Labels", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String MetricName = \"__name__\";", "modifier": "public static final", "type": "String", "declarator": "MetricName = \"__name__\"", "var_name": "MetricName"}, {"original_string": "public static final String BUCKET_TAG = \"_bucket\";", "modifier": "public static final", "type": "String", "declarator": "BUCKET_TAG = \"_bucket\"", "var_name": "BUCKET_TAG"}, {"original_string": "public static final String BUCKET_LABEL = \"le\";", "modifier": "public static final", "type": "String", "declarator": "BUCKET_LABEL = \"le\"", "var_name": "BUCKET_LABEL"}, {"original_string": "private TreeSet<Label> labels = new TreeSet<>(new Comparator<Label>() {\n        @Override\n        public int compare(Label o1, Label o2) {\n            return o1.getName().compareTo(o2.getName());\n        }\n    });", "modifier": "private", "type": "TreeSet<Label>", "declarator": "labels = new TreeSet<>(new Comparator<Label>() {\n        @Override\n        public int compare(Label o1, Label o2) {\n            return o1.getName().compareTo(o2.getName());\n        }\n    })", "var_name": "labels"}], "methods": [{"identifier": "len", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int len()", "full_signature": "public int len()", "class_method_signature": "Labels.len()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Label label)", "modifiers": "public", "return": "void", "signature": "void add(Label label)", "full_signature": "public void add(Label label)", "class_method_signature": "Labels.add(Label label)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Label label)", "modifiers": "public", "return": "void", "signature": "void remove(Label label)", "full_signature": "public void remove(Label label)", "class_method_signature": "Labels.remove(Label label)", "testcase": false, "constructor": false}, {"identifier": "del", "parameters": "(List<String> labelNames)", "modifiers": "public", "return": "void", "signature": "void del(List<String> labelNames)", "full_signature": "public void del(List<String> labelNames)", "class_method_signature": "Labels.del(List<String> labelNames)", "testcase": false, "constructor": false}, {"identifier": "del", "parameters": "(String labelName)", "modifiers": "public", "return": "void", "signature": "void del(String labelName)", "full_signature": "public void del(String labelName)", "class_method_signature": "Labels.del(String labelName)", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "TreeSet<Label>", "signature": "TreeSet<Label> getLabels()", "full_signature": "public TreeSet<Label> getLabels()", "class_method_signature": "Labels.getLabels()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String labelName)", "modifiers": "public", "return": "String", "signature": "String getValue(String labelName)", "full_signature": "public String getValue(String labelName)", "class_method_signature": "Labels.getValue(String labelName)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Labels", "signature": "Labels clone()", "full_signature": "public Labels clone()", "class_method_signature": "Labels.clone()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String labelName, String labelValue)", "modifiers": "public", "return": "void", "signature": "void set(String labelName, String labelValue)", "full_signature": "public void set(String labelName, String labelValue)", "class_method_signature": "Labels.set(String labelName, String labelValue)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Labels.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Labels.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Labels.hashCode()", "testcase": false, "constructor": false}], "file": "server/metrics/promql/src/main/java/com/alipay/sofa/lookout/server/prom/labels/Labels.java"}, "focal_method": {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "TreeSet<Label>", "body": "public TreeSet<Label> getLabels() {\n        return labels;\n    }", "signature": "TreeSet<Label> getLabels()", "full_signature": "public TreeSet<Label> getLabels()", "class_method_signature": "Labels.getLabels()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}