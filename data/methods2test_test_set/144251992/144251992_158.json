{"test_class": {"identifier": "UserDataTest", "superclass": "", "interfaces": "", "fields": [], "file": "backend/project-board/src/test/java/de/adesso/projectboard/base/user/persistence/data/UserDataTest.java"}, "test_case": {"identifier": "getFullName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getFullName() {\n        // given\n        var firstName = \"First\";\n        var lastName = \"Last\";\n        var expectedFullName = String.format(\"%s %s\", firstName, lastName);\n\n        var userData = new UserData()\n                .setFirstName(firstName)\n                .setLastName(lastName);\n\n        // when\n        var actualLastName = userData.getFullName();\n\n        // then\n        assertThat(actualLastName).isEqualTo(expectedFullName);\n    }", "signature": "void getFullName()", "full_signature": "@Test public void getFullName()", "class_method_signature": "UserDataTest.getFullName()", "testcase": true, "constructor": false, "invocations": ["format", "setLastName", "setFirstName", "getFullName", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "UserData", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    Long id;", "modifier": "@Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)", "type": "Long", "declarator": "id", "var_name": "id"}, {"original_string": "@IndexedEmbedded(\n            includeEmbeddedObjectId = true,\n            prefix = \"user_\"\n    )\n    @OneToOne\n    @JoinColumn(\n            name = \"USER_ID\",\n            nullable = false\n    )\n    User user;", "modifier": "@IndexedEmbedded(\n            includeEmbeddedObjectId = true,\n            prefix = \"user_\"\n    )\n    @OneToOne\n    @JoinColumn(\n            name = \"USER_ID\",\n            nullable = false\n    )", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "@Field\n    @Column(name = \"FIRST_NAME\")\n    @NotEmpty\n    String firstName;", "modifier": "@Field\n    @Column(name = \"FIRST_NAME\")\n    @NotEmpty", "type": "String", "declarator": "firstName", "var_name": "firstName"}, {"original_string": "@Field\n    @Column(name = \"LAST_NAME\")\n    @NotEmpty\n    String lastName;", "modifier": "@Field\n    @Column(name = \"LAST_NAME\")\n    @NotEmpty", "type": "String", "declarator": "lastName", "var_name": "lastName"}, {"original_string": "@Column(name = \"EMAIL\")\n    @NotEmpty\n    String email;", "modifier": "@Column(name = \"EMAIL\")\n    @NotEmpty", "type": "String", "declarator": "email", "var_name": "email"}, {"original_string": "@Column(name = \"LOB\")\n    String lob;", "modifier": "@Column(name = \"LOB\")", "type": "String", "declarator": "lob", "var_name": "lob"}, {"original_string": "@Lob\n    @Column(name = \"PICTURE\", length = 102400)\n    @Basic(fetch = FetchType.LAZY)\n    byte[] picture;", "modifier": "@Lob\n    @Column(name = \"PICTURE\", length = 102400)\n    @Basic(fetch = FetchType.LAZY)", "type": "byte[]", "declarator": "picture", "var_name": "picture"}, {"original_string": "@Column(name = \"IS_PICTURE_INITIALIZED\")\n    boolean pictureInitialized;", "modifier": "@Column(name = \"IS_PICTURE_INITIALIZED\")", "type": "boolean", "declarator": "pictureInitialized", "var_name": "pictureInitialized"}], "methods": [{"identifier": "UserData", "parameters": "(User user, String firstName, String lastName, String email, String lob)", "modifiers": "public", "return": "", "signature": " UserData(User user, String firstName, String lastName, String email, String lob)", "full_signature": "public  UserData(User user, String firstName, String lastName, String email, String lob)", "class_method_signature": "UserData.UserData(User user, String firstName, String lastName, String email, String lob)", "testcase": false, "constructor": true}, {"identifier": "UserData", "parameters": "(User user, String firstName, String lastName, String email, String lob, byte[] picture)", "modifiers": "public", "return": "", "signature": " UserData(User user, String firstName, String lastName, String email, String lob, byte[] picture)", "full_signature": "public  UserData(User user, String firstName, String lastName, String email, String lob, byte[] picture)", "class_method_signature": "UserData.UserData(User user, String firstName, String lastName, String email, String lob, byte[] picture)", "testcase": false, "constructor": true}, {"identifier": "getFullName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullName()", "full_signature": "public String getFullName()", "class_method_signature": "UserData.getFullName()", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/base/user/persistence/data/UserData.java"}, "focal_method": {"identifier": "getFullName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getFullName() {\n        return String.format(\"%s %s\", firstName, lastName);\n    }", "signature": "String getFullName()", "full_signature": "public String getFullName()", "class_method_signature": "UserData.getFullName()", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}