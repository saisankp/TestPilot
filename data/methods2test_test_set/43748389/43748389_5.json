{"test_class": {"identifier": "InfluxDbHttpSenderTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/InfluxDbHttpSenderTest.java"}, "test_case": {"identifier": "shouldThrowConnectException", "parameters": "()", "modifiers": "@Test(expected = ConnectException.class) public", "return": "void", "body": "@Test(expected = ConnectException.class)\n    public void shouldThrowConnectException() throws Exception {\n        InfluxDbHttpSender influxDbHttpSender = new InfluxDbHttpSender(\n            \"http\",\n            \"localhost\",\n            10080,\n            \"testdb\",\n            \"asdf\",\n            TimeUnit.MINUTES,\n            1000,\n            1000,\n            \"\"\n        );\n        influxDbHttpSender.writeData(new byte[0]);\n    }", "signature": "void shouldThrowConnectException()", "full_signature": "@Test(expected = ConnectException.class) public void shouldThrowConnectException()", "class_method_signature": "InfluxDbHttpSenderTest.shouldThrowConnectException()", "testcase": true, "constructor": false, "invocations": ["writeData"]}, "focal_class": {"identifier": "InfluxDbHttpSender", "superclass": "extends InfluxDbBaseSender", "interfaces": "", "fields": [{"original_string": "private final URL url;", "modifier": "private final", "type": "URL", "declarator": "url", "var_name": "url"}, {"original_string": "private final String authStringEncoded;", "modifier": "private final", "type": "String", "declarator": "authStringEncoded", "var_name": "authStringEncoded"}, {"original_string": "private final int connectTimeout;", "modifier": "private final", "type": "int", "declarator": "connectTimeout", "var_name": "connectTimeout"}, {"original_string": "private final int readTimeout;", "modifier": "private final", "type": "int", "declarator": "readTimeout", "var_name": "readTimeout"}], "methods": [{"identifier": "InfluxDbHttpSender", "parameters": "(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision, final int connectTimeout, final int readTimeout, final String measurementPrefix)", "modifiers": "public", "return": "", "signature": " InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision, final int connectTimeout, final int readTimeout, final String measurementPrefix)", "full_signature": "public  InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision, final int connectTimeout, final int readTimeout, final String measurementPrefix)", "class_method_signature": "InfluxDbHttpSender.InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision, final int connectTimeout, final int readTimeout, final String measurementPrefix)", "testcase": false, "constructor": true}, {"identifier": "InfluxDbHttpSender", "parameters": "(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision)", "modifiers": "@Deprecated public", "return": "", "signature": " InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision)", "full_signature": "@Deprecated public  InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision)", "class_method_signature": "InfluxDbHttpSender.InfluxDbHttpSender(\n        final String protocol, final String hostname, final int port, final String database, final String authString,\n        final TimeUnit timePrecision)", "testcase": false, "constructor": true}, {"identifier": "writeData", "parameters": "(byte[] line)", "modifiers": "@Override protected", "return": "int", "signature": "int writeData(byte[] line)", "full_signature": "@Override protected int writeData(byte[] line)", "class_method_signature": "InfluxDbHttpSender.writeData(byte[] line)", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/InfluxDbHttpSender.java"}, "focal_method": {"identifier": "writeData", "parameters": "(byte[] line)", "modifiers": "@Override protected", "return": "int", "body": "@Override\n    protected int writeData(byte[] line) throws Exception {\n        final HttpURLConnection con = (HttpURLConnection) url.openConnection();\n        con.setRequestMethod(\"POST\");\n        if (authStringEncoded != null && !authStringEncoded.isEmpty()) {\n            con.setRequestProperty(\"Authorization\", \"Basic \" + authStringEncoded);\n        }\n        con.setDoOutput(true);\n        con.setConnectTimeout(connectTimeout);\n        con.setReadTimeout(readTimeout);\n\n        OutputStream out = con.getOutputStream();\n        try {\n            out.write(line);\n            out.flush();\n        } finally {\n            out.close();\n        }\n\n        int responseCode = con.getResponseCode();\n\n        // Check if non 2XX response code.\n        if (responseCode / 100 != 2) {\n            throw new IOException(\n                \"Server returned HTTP response code: \" + responseCode + \" for URL: \" + url + \" with content :'\"\n                    + con.getResponseMessage() + \"'\");\n        }\n        return responseCode;\n    }", "signature": "int writeData(byte[] line)", "full_signature": "@Override protected int writeData(byte[] line)", "class_method_signature": "InfluxDbHttpSender.writeData(byte[] line)", "testcase": false, "constructor": false, "invocations": ["openConnection", "setRequestMethod", "isEmpty", "setRequestProperty", "setDoOutput", "setConnectTimeout", "setReadTimeout", "getOutputStream", "write", "flush", "close", "getResponseCode", "getResponseMessage"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}