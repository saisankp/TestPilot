{"test_class": {"identifier": "PlotTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    SeriesRegistry<MockSeriesBundle, MockSeries, Formatter> mockSeriesRegistry;", "modifier": "@Mock", "type": "SeriesRegistry<MockSeriesBundle, MockSeries, Formatter>", "declarator": "mockSeriesRegistry", "var_name": "mockSeriesRegistry"}], "file": "androidplot-core/src/test/java/com/androidplot/PlotTest.java"}, "test_case": {"identifier": "testGetFormatter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFormatter() {\n        Plot plot = new MockPlot(\"MockPlot\");\n\n        MockSeries m1 = new MockSeries();\n        MockSeries m2 = new MockSeries();\n        MockSeries m3 = new MockSeries();\n\n        MockFormatter1 f1 = new MockFormatter1();\n        MockFormatter1 f2 = new MockFormatter1();\n        MockFormatter2 f3 = new MockFormatter2();\n\n        plot.addSeries(m1, f1);\n        plot.addSeries(m2, f2);\n        plot.addSeries(m3, new MockFormatter1());\n\n        plot.addSeries(m1, new MockFormatter1());\n        plot.addSeries(m2, f3);\n        plot.addSeries(m3, new MockFormatter1());\n\n        assertEquals(plot.getRenderer(MockRenderer1.class).getFormatter(m1), f1);\n        assertEquals(plot.getRenderer(MockRenderer1.class).getFormatter(m2), f2);\n        assertEquals(plot.getRenderer(MockRenderer2.class).getFormatter(m2), f3);\n\n        assertNotSame(plot.getRenderer(MockRenderer2.class).getFormatter(m2), f1);\n\n    }", "signature": "void testGetFormatter()", "full_signature": "@Test public void testGetFormatter()", "class_method_signature": "PlotTest.testGetFormatter()", "testcase": true, "constructor": false, "invocations": ["addSeries", "addSeries", "addSeries", "addSeries", "addSeries", "addSeries", "assertEquals", "getFormatter", "getRenderer", "assertEquals", "getFormatter", "getRenderer", "assertEquals", "getFormatter", "getRenderer", "assertNotSame", "getFormatter", "getRenderer"]}, "focal_class": {"identifier": "Plot", "superclass": "extends View", "interfaces": "implements Resizable", "fields": [{"original_string": "private static final String TAG = Plot.class.getName();", "modifier": "private static final", "type": "String", "declarator": "TAG = Plot.class.getName()", "var_name": "TAG"}, {"original_string": "private static final String XML_ATTR_PREFIX      = \"androidplot\";", "modifier": "private static final", "type": "String", "declarator": "XML_ATTR_PREFIX      = \"androidplot\"", "var_name": "XML_ATTR_PREFIX"}, {"original_string": "private static final String BASE_PACKAGE = \"com.androidplot.\";", "modifier": "private static final", "type": "String", "declarator": "BASE_PACKAGE = \"com.androidplot.\"", "var_name": "BASE_PACKAGE"}, {"original_string": "private static final int DEFAULT_TITLE_WIDGET_TEXT_SIZE_SP = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_TITLE_WIDGET_TEXT_SIZE_SP = 10", "var_name": "DEFAULT_TITLE_WIDGET_TEXT_SIZE_SP"}, {"original_string": "private BoxModel boxModel = new BoxModel();", "modifier": "private", "type": "BoxModel", "declarator": "boxModel = new BoxModel()", "var_name": "boxModel"}, {"original_string": "private BorderStyle borderStyle = Plot.BorderStyle.NONE;", "modifier": "private", "type": "BorderStyle", "declarator": "borderStyle = Plot.BorderStyle.NONE", "var_name": "borderStyle"}, {"original_string": "private float borderRadiusX = 15;", "modifier": "private", "type": "float", "declarator": "borderRadiusX = 15", "var_name": "borderRadiusX"}, {"original_string": "private float borderRadiusY = 15;", "modifier": "private", "type": "float", "declarator": "borderRadiusY = 15", "var_name": "borderRadiusY"}, {"original_string": "private Paint borderPaint;", "modifier": "private", "type": "Paint", "declarator": "borderPaint", "var_name": "borderPaint"}, {"original_string": "private Paint backgroundPaint;", "modifier": "private", "type": "Paint", "declarator": "backgroundPaint", "var_name": "backgroundPaint"}, {"original_string": "private LayoutManager layoutManager;", "modifier": "private", "type": "LayoutManager", "declarator": "layoutManager", "var_name": "layoutManager"}, {"original_string": "private TextLabelWidget title;", "modifier": "private", "type": "TextLabelWidget", "declarator": "title", "var_name": "title"}, {"original_string": "private DisplayDimensions displayDims = new DisplayDimensions();", "modifier": "private", "type": "DisplayDimensions", "declarator": "displayDims = new DisplayDimensions()", "var_name": "displayDims"}, {"original_string": "private RenderMode renderMode = RenderMode.USE_MAIN_THREAD;", "modifier": "private", "type": "RenderMode", "declarator": "renderMode = RenderMode.USE_MAIN_THREAD", "var_name": "renderMode"}, {"original_string": "private final BufferedCanvas pingPong = new BufferedCanvas();", "modifier": "private final", "type": "BufferedCanvas", "declarator": "pingPong = new BufferedCanvas()", "var_name": "pingPong"}, {"original_string": "private final Object renderSync = new Object();", "modifier": "private final", "type": "Object", "declarator": "renderSync = new Object()", "var_name": "renderSync"}, {"original_string": "private HashMap<Class<? extends RendererType>, RendererType> renderers;", "modifier": "private", "type": "HashMap<Class<? extends RendererType>, RendererType>", "declarator": "renderers", "var_name": "renderers"}, {"original_string": "private RegistryType registry;", "modifier": "private", "type": "RegistryType", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final ArrayList<PlotListener> listeners;", "modifier": "private final", "type": "ArrayList<PlotListener>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private Thread renderThread;", "modifier": "private", "type": "Thread", "declarator": "renderThread", "var_name": "renderThread"}, {"original_string": "private boolean keepRunning = false;", "modifier": "private", "type": "boolean", "declarator": "keepRunning = false", "var_name": "keepRunning"}, {"original_string": "private boolean isIdle = true;", "modifier": "private", "type": "boolean", "declarator": "isIdle = true", "var_name": "isIdle"}], "methods": [{"identifier": "getDisplayDimensions", "parameters": "()", "modifiers": "public", "return": "DisplayDimensions", "signature": "DisplayDimensions getDisplayDimensions()", "full_signature": "public DisplayDimensions getDisplayDimensions()", "class_method_signature": "Plot.getDisplayDimensions()", "testcase": false, "constructor": false}, {"identifier": "getRenderers", "parameters": "()", "modifiers": "public", "return": "HashMap<Class<? extends RendererType>, RendererType>", "signature": "HashMap<Class<? extends RendererType>, RendererType> getRenderers()", "full_signature": "public HashMap<Class<? extends RendererType>, RendererType> getRenderers()", "class_method_signature": "Plot.getRenderers()", "testcase": false, "constructor": false}, {"identifier": "getRegistry", "parameters": "()", "modifiers": "public", "return": "RegistryType", "signature": "RegistryType getRegistry()", "full_signature": "public RegistryType getRegistry()", "class_method_signature": "Plot.getRegistry()", "testcase": false, "constructor": false}, {"identifier": "setRegistry", "parameters": "(RegistryType registry)", "modifiers": "public", "return": "void", "signature": "void setRegistry(RegistryType registry)", "full_signature": "public void setRegistry(RegistryType registry)", "class_method_signature": "Plot.setRegistry(RegistryType registry)", "testcase": false, "constructor": false}, {"identifier": "getRegistryInstance", "parameters": "()", "modifiers": "protected abstract", "return": "RegistryType", "signature": "RegistryType getRegistryInstance()", "full_signature": "protected abstract RegistryType getRegistryInstance()", "class_method_signature": "Plot.getRegistryInstance()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "TextLabelWidget", "signature": "TextLabelWidget getTitle()", "full_signature": "public TextLabelWidget getTitle()", "class_method_signature": "Plot.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(TextLabelWidget title)", "modifiers": "public", "return": "void", "signature": "void setTitle(TextLabelWidget title)", "full_signature": "public void setTitle(TextLabelWidget title)", "class_method_signature": "Plot.setTitle(TextLabelWidget title)", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "public void setTitle(String title)", "class_method_signature": "Plot.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "Plot", "parameters": "(Context context, String title)", "modifiers": "public", "return": "", "signature": " Plot(Context context, String title)", "full_signature": "public  Plot(Context context, String title)", "class_method_signature": "Plot.Plot(Context context, String title)", "testcase": false, "constructor": true}, {"identifier": "Plot", "parameters": "(Context context, String title, RenderMode mode)", "modifiers": "public", "return": "", "signature": " Plot(Context context, String title, RenderMode mode)", "full_signature": "public  Plot(Context context, String title, RenderMode mode)", "class_method_signature": "Plot.Plot(Context context, String title, RenderMode mode)", "testcase": false, "constructor": true}, {"identifier": "Plot", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " Plot(Context context, AttributeSet attrs)", "full_signature": "public  Plot(Context context, AttributeSet attrs)", "class_method_signature": "Plot.Plot(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "Plot", "parameters": "(Context context, AttributeSet attrs, int defStyle)", "modifiers": "public", "return": "", "signature": " Plot(Context context, AttributeSet attrs, int defStyle)", "full_signature": "public  Plot(Context context, AttributeSet attrs, int defStyle)", "class_method_signature": "Plot.Plot(Context context, AttributeSet attrs, int defStyle)", "testcase": false, "constructor": true}, {"identifier": "isHwAccelerationSupported", "parameters": "()", "modifiers": "@SuppressWarnings(\"BooleanMethodIsAlwaysInverted\") protected", "return": "boolean", "signature": "boolean isHwAccelerationSupported()", "full_signature": "@SuppressWarnings(\"BooleanMethodIsAlwaysInverted\") protected boolean isHwAccelerationSupported()", "class_method_signature": "Plot.isHwAccelerationSupported()", "testcase": false, "constructor": false}, {"identifier": "setRenderMode", "parameters": "(RenderMode mode)", "modifiers": "public", "return": "void", "signature": "void setRenderMode(RenderMode mode)", "full_signature": "public void setRenderMode(RenderMode mode)", "class_method_signature": "Plot.setRenderMode(RenderMode mode)", "testcase": false, "constructor": false}, {"identifier": "onPreInit", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void onPreInit()", "full_signature": "protected void onPreInit()", "class_method_signature": "Plot.onPreInit()", "testcase": false, "constructor": false}, {"identifier": "onAfterConfig", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void onAfterConfig()", "full_signature": "protected void onAfterConfig()", "class_method_signature": "Plot.onAfterConfig()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(Context context, AttributeSet attrs, int defStyle)", "modifiers": "protected final", "return": "void", "signature": "void init(Context context, AttributeSet attrs, int defStyle)", "full_signature": "protected final void init(Context context, AttributeSet attrs, int defStyle)", "class_method_signature": "Plot.init(Context context, AttributeSet attrs, int defStyle)", "testcase": false, "constructor": false}, {"identifier": "processAttrs", "parameters": "(TypedArray attrs)", "modifiers": "protected abstract", "return": "void", "signature": "void processAttrs(TypedArray attrs)", "full_signature": "protected abstract void processAttrs(TypedArray attrs)", "class_method_signature": "Plot.processAttrs(TypedArray attrs)", "testcase": false, "constructor": false}, {"identifier": "processBaseAttrs", "parameters": "(TypedArray attrs)", "modifiers": "private", "return": "void", "signature": "void processBaseAttrs(TypedArray attrs)", "full_signature": "private void processBaseAttrs(TypedArray attrs)", "class_method_signature": "Plot.processBaseAttrs(TypedArray attrs)", "testcase": false, "constructor": false}, {"identifier": "loadAttrs", "parameters": "(AttributeSet attrs, int defStyle)", "modifiers": "private", "return": "void", "signature": "void loadAttrs(AttributeSet attrs, int defStyle)", "full_signature": "private void loadAttrs(AttributeSet attrs, int defStyle)", "class_method_signature": "Plot.loadAttrs(AttributeSet attrs, int defStyle)", "testcase": false, "constructor": false}, {"identifier": "getRenderMode", "parameters": "()", "modifiers": "public", "return": "RenderMode", "signature": "RenderMode getRenderMode()", "full_signature": "public RenderMode getRenderMode()", "class_method_signature": "Plot.getRenderMode()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(PlotListener listener)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean addListener(PlotListener listener)", "full_signature": "public synchronized boolean addListener(PlotListener listener)", "class_method_signature": "Plot.addListener(PlotListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(PlotListener listener)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean removeListener(PlotListener listener)", "full_signature": "public synchronized boolean removeListener(PlotListener listener)", "class_method_signature": "Plot.removeListener(PlotListener listener)", "testcase": false, "constructor": false}, {"identifier": "getListeners", "parameters": "()", "modifiers": "protected", "return": "ArrayList<PlotListener>", "signature": "ArrayList<PlotListener> getListeners()", "full_signature": "protected ArrayList<PlotListener> getListeners()", "class_method_signature": "Plot.getListeners()", "testcase": false, "constructor": false}, {"identifier": "notifyListenersBeforeDraw", "parameters": "(Canvas canvas)", "modifiers": "protected", "return": "void", "signature": "void notifyListenersBeforeDraw(Canvas canvas)", "full_signature": "protected void notifyListenersBeforeDraw(Canvas canvas)", "class_method_signature": "Plot.notifyListenersBeforeDraw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "notifyListenersAfterDraw", "parameters": "(Canvas canvas)", "modifiers": "protected", "return": "void", "signature": "void notifyListenersAfterDraw(Canvas canvas)", "full_signature": "protected void notifyListenersAfterDraw(Canvas canvas)", "class_method_signature": "Plot.notifyListenersAfterDraw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "addSeries", "parameters": "(FormatterType formatter, SeriesType... series)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean addSeries(FormatterType formatter, SeriesType... series)", "full_signature": "public synchronized boolean addSeries(FormatterType formatter, SeriesType... series)", "class_method_signature": "Plot.addSeries(FormatterType formatter, SeriesType... series)", "testcase": false, "constructor": false}, {"identifier": "addSeries", "parameters": "(SeriesType series, FormatterType formatter)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean addSeries(SeriesType series, FormatterType formatter)", "full_signature": "public synchronized boolean addSeries(SeriesType series, FormatterType formatter)", "class_method_signature": "Plot.addSeries(SeriesType series, FormatterType formatter)", "testcase": false, "constructor": false}, {"identifier": "attachSeries", "parameters": "(SeriesType series, FormatterType formatter)", "modifiers": "protected", "return": "void", "signature": "void attachSeries(SeriesType series, FormatterType formatter)", "full_signature": "protected void attachSeries(SeriesType series, FormatterType formatter)", "class_method_signature": "Plot.attachSeries(SeriesType series, FormatterType formatter)", "testcase": false, "constructor": false}, {"identifier": "getSeries", "parameters": "(SeriesType series, Class<? extends RendererType> rendererClass)", "modifiers": "protected", "return": "SeriesBundle<SeriesType, FormatterType>", "signature": "SeriesBundle<SeriesType, FormatterType> getSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "full_signature": "protected SeriesBundle<SeriesType, FormatterType> getSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "class_method_signature": "Plot.getSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "testcase": false, "constructor": false}, {"identifier": "getSeries", "parameters": "(SeriesType series)", "modifiers": "protected", "return": "List<SeriesBundle<SeriesType, FormatterType>>", "signature": "List<SeriesBundle<SeriesType, FormatterType>> getSeries(SeriesType series)", "full_signature": "protected List<SeriesBundle<SeriesType, FormatterType>> getSeries(SeriesType series)", "class_method_signature": "Plot.getSeries(SeriesType series)", "testcase": false, "constructor": false}, {"identifier": "removeSeries", "parameters": "(SeriesType series, Class<? extends RendererType> rendererClass)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean removeSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "full_signature": "public synchronized boolean removeSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "class_method_signature": "Plot.removeSeries(SeriesType series, Class<? extends RendererType> rendererClass)", "testcase": false, "constructor": false}, {"identifier": "removeSeries", "parameters": "(SeriesType series)", "modifiers": "public synchronized", "return": "void", "signature": "void removeSeries(SeriesType series)", "full_signature": "public synchronized void removeSeries(SeriesType series)", "class_method_signature": "Plot.removeSeries(SeriesType series)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "Plot.clear()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Plot.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getFormatter", "parameters": "(SeriesType series, Class<? extends RendererType> rendererClass)", "modifiers": "public", "return": "FormatterType", "signature": "FormatterType getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "full_signature": "public FormatterType getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "class_method_signature": "Plot.getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "(Class<T> rendererClass)", "modifiers": "public", "return": "T", "signature": "T getRenderer(Class<T> rendererClass)", "full_signature": "public T getRenderer(Class<T> rendererClass)", "class_method_signature": "Plot.getRenderer(Class<T> rendererClass)", "testcase": false, "constructor": false}, {"identifier": "getRendererList", "parameters": "()", "modifiers": "public", "return": "List<RendererType>", "signature": "List<RendererType> getRendererList()", "full_signature": "public List<RendererType> getRendererList()", "class_method_signature": "Plot.getRendererList()", "testcase": false, "constructor": false}, {"identifier": "setMarkupEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setMarkupEnabled(boolean enabled)", "full_signature": "public void setMarkupEnabled(boolean enabled)", "class_method_signature": "Plot.setMarkupEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "redraw", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void redraw()", "full_signature": "public void redraw()", "class_method_signature": "Plot.redraw()", "testcase": false, "constructor": false}, {"identifier": "layout", "parameters": "(final DisplayDimensions dims)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void layout(final DisplayDimensions dims)", "full_signature": "@Override public synchronized void layout(final DisplayDimensions dims)", "class_method_signature": "Plot.layout(final DisplayDimensions dims)", "testcase": false, "constructor": false}, {"identifier": "onDetachedFromWindow", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onDetachedFromWindow()", "full_signature": "@Override protected void onDetachedFromWindow()", "class_method_signature": "Plot.onDetachedFromWindow()", "testcase": false, "constructor": false}, {"identifier": "onSizeChanged", "parameters": "(int w, int h, int oldw, int oldh)", "modifiers": "@Override protected synchronized", "return": "void", "signature": "void onSizeChanged(int w, int h, int oldw, int oldh)", "full_signature": "@Override protected synchronized void onSizeChanged(int w, int h, int oldw, int oldh)", "class_method_signature": "Plot.onSizeChanged(int w, int h, int oldw, int oldh)", "testcase": false, "constructor": false}, {"identifier": "onDraw", "parameters": "(Canvas canvas)", "modifiers": "@Override protected", "return": "void", "signature": "void onDraw(Canvas canvas)", "full_signature": "@Override protected void onDraw(Canvas canvas)", "class_method_signature": "Plot.onDraw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "renderOnCanvas", "parameters": "(@Nullable Canvas canvas)", "modifiers": "protected synchronized", "return": "void", "signature": "void renderOnCanvas(@Nullable Canvas canvas)", "full_signature": "protected synchronized void renderOnCanvas(@Nullable Canvas canvas)", "class_method_signature": "Plot.renderOnCanvas(@Nullable Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "setBorderStyle", "parameters": "(BorderStyle style, Float radiusX, Float radiusY)", "modifiers": "public", "return": "void", "signature": "void setBorderStyle(BorderStyle style, Float radiusX, Float radiusY)", "full_signature": "public void setBorderStyle(BorderStyle style, Float radiusX, Float radiusY)", "class_method_signature": "Plot.setBorderStyle(BorderStyle style, Float radiusX, Float radiusY)", "testcase": false, "constructor": false}, {"identifier": "drawBorder", "parameters": "(Canvas canvas, RectF dims)", "modifiers": "protected", "return": "void", "signature": "void drawBorder(Canvas canvas, RectF dims)", "full_signature": "protected void drawBorder(Canvas canvas, RectF dims)", "class_method_signature": "Plot.drawBorder(Canvas canvas, RectF dims)", "testcase": false, "constructor": false}, {"identifier": "drawBackground", "parameters": "(Canvas canvas, RectF dims)", "modifiers": "protected", "return": "void", "signature": "void drawBackground(Canvas canvas, RectF dims)", "full_signature": "protected void drawBackground(Canvas canvas, RectF dims)", "class_method_signature": "Plot.drawBackground(Canvas canvas, RectF dims)", "testcase": false, "constructor": false}, {"identifier": "drawRect", "parameters": "(Canvas canvas, RectF dims, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawRect(Canvas canvas, RectF dims, Paint paint)", "full_signature": "protected void drawRect(Canvas canvas, RectF dims, Paint paint)", "class_method_signature": "Plot.drawRect(Canvas canvas, RectF dims, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getLayoutManager", "parameters": "()", "modifiers": "public", "return": "LayoutManager", "signature": "LayoutManager getLayoutManager()", "full_signature": "public LayoutManager getLayoutManager()", "class_method_signature": "Plot.getLayoutManager()", "testcase": false, "constructor": false}, {"identifier": "setLayoutManager", "parameters": "(LayoutManager layoutManager)", "modifiers": "public", "return": "void", "signature": "void setLayoutManager(LayoutManager layoutManager)", "full_signature": "public void setLayoutManager(LayoutManager layoutManager)", "class_method_signature": "Plot.setLayoutManager(LayoutManager layoutManager)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBackgroundPaint()", "full_signature": "public Paint getBackgroundPaint()", "class_method_signature": "Plot.getBackgroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPaint", "parameters": "(Paint backgroundPaint)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPaint(Paint backgroundPaint)", "full_signature": "public void setBackgroundPaint(Paint backgroundPaint)", "class_method_signature": "Plot.setBackgroundPaint(Paint backgroundPaint)", "testcase": false, "constructor": false}, {"identifier": "setPlotMargins", "parameters": "(float left, float top, float right, float bottom)", "modifiers": "public", "return": "void", "signature": "void setPlotMargins(float left, float top, float right, float bottom)", "full_signature": "public void setPlotMargins(float left, float top, float right, float bottom)", "class_method_signature": "Plot.setPlotMargins(float left, float top, float right, float bottom)", "testcase": false, "constructor": false}, {"identifier": "setPlotPadding", "parameters": "(float left, float top, float right, float bottom)", "modifiers": "public", "return": "void", "signature": "void setPlotPadding(float left, float top, float right, float bottom)", "full_signature": "public void setPlotPadding(float left, float top, float right, float bottom)", "class_method_signature": "Plot.setPlotPadding(float left, float top, float right, float bottom)", "testcase": false, "constructor": false}, {"identifier": "getPlotMarginTop", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotMarginTop()", "full_signature": "public float getPlotMarginTop()", "class_method_signature": "Plot.getPlotMarginTop()", "testcase": false, "constructor": false}, {"identifier": "setPlotMarginTop", "parameters": "(float plotMarginTop)", "modifiers": "public", "return": "void", "signature": "void setPlotMarginTop(float plotMarginTop)", "full_signature": "public void setPlotMarginTop(float plotMarginTop)", "class_method_signature": "Plot.setPlotMarginTop(float plotMarginTop)", "testcase": false, "constructor": false}, {"identifier": "getPlotMarginBottom", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotMarginBottom()", "full_signature": "public float getPlotMarginBottom()", "class_method_signature": "Plot.getPlotMarginBottom()", "testcase": false, "constructor": false}, {"identifier": "setPlotMarginBottom", "parameters": "(float plotMarginBottom)", "modifiers": "public", "return": "void", "signature": "void setPlotMarginBottom(float plotMarginBottom)", "full_signature": "public void setPlotMarginBottom(float plotMarginBottom)", "class_method_signature": "Plot.setPlotMarginBottom(float plotMarginBottom)", "testcase": false, "constructor": false}, {"identifier": "getPlotMarginLeft", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotMarginLeft()", "full_signature": "public float getPlotMarginLeft()", "class_method_signature": "Plot.getPlotMarginLeft()", "testcase": false, "constructor": false}, {"identifier": "setPlotMarginLeft", "parameters": "(float plotMarginLeft)", "modifiers": "public", "return": "void", "signature": "void setPlotMarginLeft(float plotMarginLeft)", "full_signature": "public void setPlotMarginLeft(float plotMarginLeft)", "class_method_signature": "Plot.setPlotMarginLeft(float plotMarginLeft)", "testcase": false, "constructor": false}, {"identifier": "getPlotMarginRight", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotMarginRight()", "full_signature": "public float getPlotMarginRight()", "class_method_signature": "Plot.getPlotMarginRight()", "testcase": false, "constructor": false}, {"identifier": "setPlotMarginRight", "parameters": "(float plotMarginRight)", "modifiers": "public", "return": "void", "signature": "void setPlotMarginRight(float plotMarginRight)", "full_signature": "public void setPlotMarginRight(float plotMarginRight)", "class_method_signature": "Plot.setPlotMarginRight(float plotMarginRight)", "testcase": false, "constructor": false}, {"identifier": "getPlotPaddingTop", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotPaddingTop()", "full_signature": "public float getPlotPaddingTop()", "class_method_signature": "Plot.getPlotPaddingTop()", "testcase": false, "constructor": false}, {"identifier": "setPlotPaddingTop", "parameters": "(float plotPaddingTop)", "modifiers": "public", "return": "void", "signature": "void setPlotPaddingTop(float plotPaddingTop)", "full_signature": "public void setPlotPaddingTop(float plotPaddingTop)", "class_method_signature": "Plot.setPlotPaddingTop(float plotPaddingTop)", "testcase": false, "constructor": false}, {"identifier": "getPlotPaddingBottom", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotPaddingBottom()", "full_signature": "public float getPlotPaddingBottom()", "class_method_signature": "Plot.getPlotPaddingBottom()", "testcase": false, "constructor": false}, {"identifier": "setPlotPaddingBottom", "parameters": "(float plotPaddingBottom)", "modifiers": "public", "return": "void", "signature": "void setPlotPaddingBottom(float plotPaddingBottom)", "full_signature": "public void setPlotPaddingBottom(float plotPaddingBottom)", "class_method_signature": "Plot.setPlotPaddingBottom(float plotPaddingBottom)", "testcase": false, "constructor": false}, {"identifier": "getPlotPaddingLeft", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotPaddingLeft()", "full_signature": "public float getPlotPaddingLeft()", "class_method_signature": "Plot.getPlotPaddingLeft()", "testcase": false, "constructor": false}, {"identifier": "setPlotPaddingLeft", "parameters": "(float plotPaddingLeft)", "modifiers": "public", "return": "void", "signature": "void setPlotPaddingLeft(float plotPaddingLeft)", "full_signature": "public void setPlotPaddingLeft(float plotPaddingLeft)", "class_method_signature": "Plot.setPlotPaddingLeft(float plotPaddingLeft)", "testcase": false, "constructor": false}, {"identifier": "getPlotPaddingRight", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPlotPaddingRight()", "full_signature": "public float getPlotPaddingRight()", "class_method_signature": "Plot.getPlotPaddingRight()", "testcase": false, "constructor": false}, {"identifier": "setPlotPaddingRight", "parameters": "(float plotPaddingRight)", "modifiers": "public", "return": "void", "signature": "void setPlotPaddingRight(float plotPaddingRight)", "full_signature": "public void setPlotPaddingRight(float plotPaddingRight)", "class_method_signature": "Plot.setPlotPaddingRight(float plotPaddingRight)", "testcase": false, "constructor": false}, {"identifier": "getBorderPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBorderPaint()", "full_signature": "public Paint getBorderPaint()", "class_method_signature": "Plot.getBorderPaint()", "testcase": false, "constructor": false}, {"identifier": "setBorderPaint", "parameters": "(Paint borderPaint)", "modifiers": "public", "return": "void", "signature": "void setBorderPaint(Paint borderPaint)", "full_signature": "public void setBorderPaint(Paint borderPaint)", "class_method_signature": "Plot.setBorderPaint(Paint borderPaint)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/Plot.java"}, "focal_method": {"identifier": "getFormatter", "parameters": "(SeriesType series, Class<? extends RendererType> rendererClass)", "modifiers": "public", "return": "FormatterType", "body": "public FormatterType getFormatter(SeriesType series, Class<? extends RendererType> rendererClass) {\n        return getSeries(series, rendererClass).getFormatter();\n    }", "signature": "FormatterType getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "full_signature": "public FormatterType getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "class_method_signature": "Plot.getFormatter(SeriesType series, Class<? extends RendererType> rendererClass)", "testcase": false, "constructor": false, "invocations": ["getFormatter", "getSeries"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}