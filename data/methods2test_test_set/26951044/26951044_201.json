{"test_class": {"identifier": "OSGIServiceContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/OSGIServiceContextTest.java"}, "test_case": {"identifier": "testIsInitialized", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsInitialized() {\n        OSGIServiceContext instance = new OSGIServiceContext(Mockito.mock(OSGIServiceLoader.class));\n        assertThat(instance.isInitialized()).isTrue();\n    }", "signature": "void testIsInitialized()", "full_signature": "@Test public void testIsInitialized()", "class_method_signature": "OSGIServiceContextTest.testIsInitialized()", "testcase": true, "constructor": false, "invocations": ["mock", "isTrue", "assertThat", "isInitialized"]}, "focal_class": {"identifier": "OSGIServiceContext", "superclass": "", "interfaces": "implements ServiceContext", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(OSGIServiceContext.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(OSGIServiceContext.class.getName())", "var_name": "LOG"}, {"original_string": "private static final OSGIServiceComparator REF_COMPARATOR = new OSGIServiceComparator();", "modifier": "private static final", "type": "OSGIServiceComparator", "declarator": "REF_COMPARATOR = new OSGIServiceComparator()", "var_name": "REF_COMPARATOR"}, {"original_string": "private final OSGIServiceLoader osgiServiceLoader;", "modifier": "private final", "type": "OSGIServiceLoader", "declarator": "osgiServiceLoader", "var_name": "osgiServiceLoader"}], "methods": [{"identifier": "OSGIServiceContext", "parameters": "(OSGIServiceLoader osgiServiceLoader)", "modifiers": "public", "return": "", "signature": " OSGIServiceContext(OSGIServiceLoader osgiServiceLoader)", "full_signature": "public  OSGIServiceContext(OSGIServiceLoader osgiServiceLoader)", "class_method_signature": "OSGIServiceContext.OSGIServiceContext(OSGIServiceLoader osgiServiceLoader)", "testcase": false, "constructor": true}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public boolean isInitialized()", "class_method_signature": "OSGIServiceContext.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "@Override public ClassLoader getClassLoader()", "class_method_signature": "OSGIServiceContext.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(ClassLoader classLoader)", "modifiers": "@Override public", "return": "void", "signature": "void init(ClassLoader classLoader)", "full_signature": "@Override public void init(ClassLoader classLoader)", "class_method_signature": "OSGIServiceContext.init(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "ordinal", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int ordinal()", "full_signature": "@Override public int ordinal()", "class_method_signature": "OSGIServiceContext.ordinal()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "(Class<T> serviceType, Supplier<T> supplier)", "modifiers": "@Override public", "return": "T", "signature": "T getService(Class<T> serviceType, Supplier<T> supplier)", "full_signature": "@Override public T getService(Class<T> serviceType, Supplier<T> supplier)", "class_method_signature": "OSGIServiceContext.getService(Class<T> serviceType, Supplier<T> supplier)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Class<T> serviceType, Supplier<T> supplier)", "modifiers": "@Override public", "return": "T", "signature": "T create(Class<T> serviceType, Supplier<T> supplier)", "full_signature": "@Override public T create(Class<T> serviceType, Supplier<T> supplier)", "class_method_signature": "OSGIServiceContext.create(Class<T> serviceType, Supplier<T> supplier)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "(Class<T> serviceType, Supplier<List<T>> supplier)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> getServices(Class<T> serviceType, Supplier<List<T>> supplier)", "full_signature": "@Override public List<T> getServices(Class<T> serviceType, Supplier<List<T>> supplier)", "class_method_signature": "OSGIServiceContext.getServices(Class<T> serviceType, Supplier<List<T>> supplier)", "testcase": false, "constructor": false}, {"identifier": "loadServices", "parameters": "(Class<T> serviceType, Supplier<List<T>> supplier)", "modifiers": "private", "return": "List<T>", "signature": "List<T> loadServices(Class<T> serviceType, Supplier<List<T>> supplier)", "full_signature": "private List<T> loadServices(Class<T> serviceType, Supplier<List<T>> supplier)", "class_method_signature": "OSGIServiceContext.loadServices(Class<T> serviceType, Supplier<List<T>> supplier)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(String resource)", "modifiers": "@Override public", "return": "Collection<URL>", "signature": "Collection<URL> getResources(String resource)", "full_signature": "@Override public Collection<URL> getResources(String resource)", "class_method_signature": "OSGIServiceContext.getResources(String resource)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(String resource)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String resource)", "full_signature": "@Override public URL getResource(String resource)", "class_method_signature": "OSGIServiceContext.getResource(String resource)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Class<T> serviceType, T instance, boolean force)", "modifiers": "@Override public", "return": "T", "signature": "T register(Class<T> serviceType, T instance, boolean force)", "full_signature": "@Override public T register(Class<T> serviceType, T instance, boolean force)", "class_method_signature": "OSGIServiceContext.register(Class<T> serviceType, T instance, boolean force)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Class<T> serviceType, List<T> instances, boolean force)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> register(Class<T> serviceType, List<T> instances, boolean force)", "full_signature": "@Override public List<T> register(Class<T> serviceType, List<T> instances, boolean force)", "class_method_signature": "OSGIServiceContext.register(Class<T> serviceType, List<T> instances, boolean force)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "OSGIServiceContext.reset()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/OSGIServiceContext.java"}, "focal_method": {"identifier": "isInitialized", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isInitialized(){\n        return osgiServiceLoader != null;\n    }", "signature": "boolean isInitialized()", "full_signature": "public boolean isInitialized()", "class_method_signature": "OSGIServiceContext.isInitialized()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}