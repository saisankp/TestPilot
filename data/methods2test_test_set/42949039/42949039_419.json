{"test_class": {"identifier": "NotificationRegistrationStatusDaoHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/NotificationRegistrationStatusDaoHelperTest.java"}, "test_case": {"identifier": "testGetNotificationRegistrationStatusAssertThrowWhenEntityNotExist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNotificationRegistrationStatusAssertThrowWhenEntityNotExist()\n    {\n        try\n        {\n            notificationRegistrationStatusDaoHelper.getNotificationRegistrationStatusEntity(\"DOES_NOT_EXIST\");\n            fail();\n        }\n        catch (Exception e)\n        {\n            assertEquals(ObjectNotFoundException.class, e.getClass());\n            assertEquals(\"The notification registration status \\\"DOES_NOT_EXIST\\\" doesn't exist.\", e.getMessage());\n        }\n    }", "signature": "void testGetNotificationRegistrationStatusAssertThrowWhenEntityNotExist()", "full_signature": "@Test public void testGetNotificationRegistrationStatusAssertThrowWhenEntityNotExist()", "class_method_signature": "NotificationRegistrationStatusDaoHelperTest.testGetNotificationRegistrationStatusAssertThrowWhenEntityNotExist()", "testcase": true, "constructor": false, "invocations": ["getNotificationRegistrationStatusEntity", "fail", "assertEquals", "getClass", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "NotificationRegistrationStatusDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private NotificationRegistrationStatusDao notificationRegistrationStatusDao;", "modifier": "@Autowired\n    private", "type": "NotificationRegistrationStatusDao", "declarator": "notificationRegistrationStatusDao", "var_name": "notificationRegistrationStatusDao"}], "methods": [{"identifier": "getNotificationRegistrationStatusEntity", "parameters": "(String code)", "modifiers": "public", "return": "NotificationRegistrationStatusEntity", "signature": "NotificationRegistrationStatusEntity getNotificationRegistrationStatusEntity(String code)", "full_signature": "public NotificationRegistrationStatusEntity getNotificationRegistrationStatusEntity(String code)", "class_method_signature": "NotificationRegistrationStatusDaoHelper.getNotificationRegistrationStatusEntity(String code)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/NotificationRegistrationStatusDaoHelper.java"}, "focal_method": {"identifier": "getNotificationRegistrationStatusEntity", "parameters": "(String code)", "modifiers": "public", "return": "NotificationRegistrationStatusEntity", "body": "public NotificationRegistrationStatusEntity getNotificationRegistrationStatusEntity(String code) throws ObjectNotFoundException\n    {\n        NotificationRegistrationStatusEntity notificationRegistrationStatusEntity = notificationRegistrationStatusDao.getNotificationRegistrationStatus(code);\n\n        if (notificationRegistrationStatusEntity == null)\n        {\n            throw new ObjectNotFoundException(String.format(\"The notification registration status \\\"%s\\\" doesn't exist.\", code));\n        }\n\n        return notificationRegistrationStatusEntity;\n    }", "signature": "NotificationRegistrationStatusEntity getNotificationRegistrationStatusEntity(String code)", "full_signature": "public NotificationRegistrationStatusEntity getNotificationRegistrationStatusEntity(String code)", "class_method_signature": "NotificationRegistrationStatusDaoHelper.getNotificationRegistrationStatusEntity(String code)", "testcase": false, "constructor": false, "invocations": ["getNotificationRegistrationStatus", "format"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}