{"test_class": {"identifier": "AggregatorUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/hms-aggregator/src/test/java/com/vmware/vrack/hms/aggregator/util/AggregatorUtilTest.java"}, "test_case": {"identifier": "testPopulatePlainTextPasswordsForNullInput", "parameters": "()", "modifiers": "@Test( expected = HMSRestException.class ) public", "return": "void", "body": "@Test( expected = HMSRestException.class )\n    public void testPopulatePlainTextPasswordsForNullInput()\n        throws HmsException\n    {\n        Map<String, Object[]> inventoryMap = new HashMap<String, Object[]>();\n        AggregatorUtil.populatePlainTextPasswords( inventoryMap );\n    }", "signature": "void testPopulatePlainTextPasswordsForNullInput()", "full_signature": "@Test( expected = HMSRestException.class ) public void testPopulatePlainTextPasswordsForNullInput()", "class_method_signature": "AggregatorUtilTest.testPopulatePlainTextPasswordsForNullInput()", "testcase": true, "constructor": false, "invocations": ["populatePlainTextPasswords"]}, "focal_class": {"identifier": "AggregatorUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger( AggregatorUtil.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( AggregatorUtil.class )", "var_name": "logger"}, {"original_string": "private static final String HMS_AGENT_REMOVE_SERVER_API_URL = \"/api/1.0/hms/host/{hostId}\";", "modifier": "private static final", "type": "String", "declarator": "HMS_AGENT_REMOVE_SERVER_API_URL = \"/api/1.0/hms/host/{hostId}\"", "var_name": "HMS_AGENT_REMOVE_SERVER_API_URL"}, {"original_string": "private static final String HMS_AGENT_SET_BMC_PASSWORD_API_URL = \"/api/1.0/hms/host/{hostId}/setpassword\";", "modifier": "private static final", "type": "String", "declarator": "HMS_AGENT_SET_BMC_PASSWORD_API_URL = \"/api/1.0/hms/host/{hostId}/setpassword\"", "var_name": "HMS_AGENT_SET_BMC_PASSWORD_API_URL"}], "methods": [{"identifier": "isComponentAvilableOOB", "parameters": "( ServerNode node, ServerComponent component )", "modifiers": "public static", "return": "boolean", "signature": "boolean isComponentAvilableOOB( ServerNode node, ServerComponent component )", "full_signature": "public static boolean isComponentAvilableOOB( ServerNode node, ServerComponent component )", "class_method_signature": "AggregatorUtil.isComponentAvilableOOB( ServerNode node, ServerComponent component )", "testcase": false, "constructor": false}, {"identifier": "getInBandService", "parameters": "( ServerNode node )", "modifiers": "private static", "return": "IInbandService", "signature": "IInbandService getInBandService( ServerNode node )", "full_signature": "private static IInbandService getInBandService( ServerNode node )", "class_method_signature": "AggregatorUtil.getInBandService( ServerNode node )", "testcase": false, "constructor": false}, {"identifier": "agregateNodeInBandBasicInfo", "parameters": "( ServerNode node, ServerNode inBandNode )", "modifiers": "private static", "return": "void", "signature": "void agregateNodeInBandBasicInfo( ServerNode node, ServerNode inBandNode )", "full_signature": "private static void agregateNodeInBandBasicInfo( ServerNode node, ServerNode inBandNode )", "class_method_signature": "AggregatorUtil.agregateNodeInBandBasicInfo( ServerNode node, ServerNode inBandNode )", "testcase": false, "constructor": false}, {"identifier": "getServerComponentIB", "parameters": "( ServerNode node, ServerComponent component )", "modifiers": "@SuppressWarnings( { \"deprecation\" } ) public static", "return": "void", "signature": "void getServerComponentIB( ServerNode node, ServerComponent component )", "full_signature": "@SuppressWarnings( { \"deprecation\" } ) public static void getServerComponentIB( ServerNode node, ServerComponent component )", "class_method_signature": "AggregatorUtil.getServerComponentIB( ServerNode node, ServerComponent component )", "testcase": false, "constructor": false}, {"identifier": "getServerComponentOOB", "parameters": "( ServerNode node, ServerComponent component )", "modifiers": "@SuppressWarnings( \"deprecation\" ) public static", "return": "void", "signature": "void getServerComponentOOB( ServerNode node, ServerComponent component )", "full_signature": "@SuppressWarnings( \"deprecation\" ) public static void getServerComponentOOB( ServerNode node, ServerComponent component )", "class_method_signature": "AggregatorUtil.getServerComponentOOB( ServerNode node, ServerComponent component )", "testcase": false, "constructor": false}, {"identifier": "getResponseEntity", "parameters": "( T responseBody, HttpStatus httpStatus )", "modifiers": "public static", "return": "ResponseEntity<T>", "signature": "ResponseEntity<T> getResponseEntity( T responseBody, HttpStatus httpStatus )", "full_signature": "public static ResponseEntity<T> getResponseEntity( T responseBody, HttpStatus httpStatus )", "class_method_signature": "AggregatorUtil.getResponseEntity( T responseBody, HttpStatus httpStatus )", "testcase": false, "constructor": false}, {"identifier": "getResponseEntity", "parameters": "( HttpStatus httpStatus )", "modifiers": "public static", "return": "ResponseEntity<T>", "signature": "ResponseEntity<T> getResponseEntity( HttpStatus httpStatus )", "full_signature": "public static ResponseEntity<T> getResponseEntity( HttpStatus httpStatus )", "class_method_signature": "AggregatorUtil.getResponseEntity( HttpStatus httpStatus )", "testcase": false, "constructor": false}, {"identifier": "removeServer", "parameters": "( final String hostId )", "modifiers": "public static", "return": "ResponseEntity<BaseResponse>", "signature": "ResponseEntity<BaseResponse> removeServer( final String hostId )", "full_signature": "public static ResponseEntity<BaseResponse> removeServer( final String hostId )", "class_method_signature": "AggregatorUtil.removeServer( final String hostId )", "testcase": false, "constructor": false}, {"identifier": "changeHostIpmiPassword", "parameters": "( String nodeId, String newPassword )", "modifiers": "public static", "return": "ResponseEntity<BaseResponse>", "signature": "ResponseEntity<BaseResponse> changeHostIpmiPassword( String nodeId, String newPassword )", "full_signature": "public static ResponseEntity<BaseResponse> changeHostIpmiPassword( String nodeId, String newPassword )", "class_method_signature": "AggregatorUtil.changeHostIpmiPassword( String nodeId, String newPassword )", "testcase": false, "constructor": false}, {"identifier": "populatePlainTextPasswords", "parameters": "( Map<String, Object[]> inventoryMap )", "modifiers": "public static", "return": "void", "signature": "void populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "full_signature": "public static void populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "class_method_signature": "AggregatorUtil.populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "testcase": false, "constructor": false}, {"identifier": "decryptPassword", "parameters": "( SwitchNode[] switchNodes )", "modifiers": "private static", "return": "void", "signature": "void decryptPassword( SwitchNode[] switchNodes )", "full_signature": "private static void decryptPassword( SwitchNode[] switchNodes )", "class_method_signature": "AggregatorUtil.decryptPassword( SwitchNode[] switchNodes )", "testcase": false, "constructor": false}, {"identifier": "decryptPassword", "parameters": "( ServerNode[] serverNodes )", "modifiers": "private static", "return": "void", "signature": "void decryptPassword( ServerNode[] serverNodes )", "full_signature": "private static void decryptPassword( ServerNode[] serverNodes )", "class_method_signature": "AggregatorUtil.decryptPassword( ServerNode[] serverNodes )", "testcase": false, "constructor": false}, {"identifier": "isEsxiHostReachable", "parameters": "( ServerNode serverNode, int sshRetryCount, int sshRetryDelay )", "modifiers": "public static", "return": "boolean", "signature": "boolean isEsxiHostReachable( ServerNode serverNode, int sshRetryCount, int sshRetryDelay )", "full_signature": "public static boolean isEsxiHostReachable( ServerNode serverNode, int sshRetryCount, int sshRetryDelay )", "class_method_signature": "AggregatorUtil.isEsxiHostReachable( ServerNode serverNode, int sshRetryCount, int sshRetryDelay )", "testcase": false, "constructor": false}], "file": "modules/hms-aggregator/src/main/java/com/vmware/vrack/hms/aggregator/util/AggregatorUtil.java"}, "focal_method": {"identifier": "populatePlainTextPasswords", "parameters": "( Map<String, Object[]> inventoryMap )", "modifiers": "public static", "return": "void", "body": "public static void populatePlainTextPasswords( Map<String, Object[]> inventoryMap )\n        throws HMSRestException\n    {\n\n        if ( inventoryMap != null )\n        {\n            Object[] hosts = inventoryMap.get( Constants.HOSTS );\n            Object[] switches = inventoryMap.get( Constants.SWITCHES );\n\n            if ( hosts == null || switches == null )\n            {\n                throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(),\n                                            \"hosts/switches are null in the provided input file\",\n                                            \"invalid inventory file\" );\n            }\n            ObjectMapper mapper = new ObjectMapper();\n            ServerNode[] serverNodes = mapper.convertValue( hosts, new TypeReference<ServerNode[]>()\n            {\n            } );\n\n            SwitchNode[] switchNodes = mapper.convertValue( switches, new TypeReference<SwitchNode[]>()\n            {\n            } );\n\n            decryptPassword( serverNodes );\n            decryptPassword( switchNodes );\n\n            Object[] serverNodeObj = mapper.convertValue( serverNodes, new TypeReference<Object[]>()\n            {\n            } );\n\n            Object[] switchNodeObj = mapper.convertValue( switchNodes, new TypeReference<Object[]>()\n            {\n            } );\n            inventoryMap.put( Constants.HOSTS, serverNodeObj );\n            inventoryMap.put( Constants.SWITCHES, switchNodeObj );\n        }\n    }", "signature": "void populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "full_signature": "public static void populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "class_method_signature": "AggregatorUtil.populatePlainTextPasswords( Map<String, Object[]> inventoryMap )", "testcase": false, "constructor": false, "invocations": ["get", "get", "getStatusCode", "convertValue", "convertValue", "decryptPassword", "decryptPassword", "convertValue", "convertValue", "put", "put"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}