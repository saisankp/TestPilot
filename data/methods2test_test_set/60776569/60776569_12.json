{"test_class": {"identifier": "MainPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MainPresenter mMainPresenter;", "modifier": "private", "type": "MainPresenter", "declarator": "mMainPresenter", "var_name": "mMainPresenter"}, {"original_string": "private RxEventBus mEventBus;", "modifier": "private", "type": "RxEventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "@Mock MainMvpView mMockMainMvpView;", "modifier": "@Mock", "type": "MainMvpView", "declarator": "mMockMainMvpView", "var_name": "mMockMainMvpView"}, {"original_string": "@Mock DataManager mMockDataManager;", "modifier": "@Mock", "type": "DataManager", "declarator": "mMockDataManager", "var_name": "mMockDataManager"}, {"original_string": "@Rule\n    public final RxSchedulersOverrideRule mOverrideSchedulersRule = new RxSchedulersOverrideRule();", "modifier": "@Rule\n    public final", "type": "RxSchedulersOverrideRule", "declarator": "mOverrideSchedulersRule = new RxSchedulersOverrideRule()", "var_name": "mOverrideSchedulersRule"}], "file": "app/src/test/java/com/hitherejoe/mondroid/ui/main/MainPresenterTest.java"}, "test_case": {"identifier": "getAccountDataFailsAndShowsErrorMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAccountDataFailsAndShowsErrorMessage() {\n        stubDataManagerGetAccountDetails(Single.<DataManager.AccountData>error(new RuntimeException()));\n        mMainPresenter.getAccountData();\n\n        verify(mMockMainMvpView).showProgress(true);\n        verify(mMockMainMvpView).showAccountError();\n        verify(mMockMainMvpView, never()).showEmptyTransactions();\n        verify(mMockMainMvpView, never()).showBalance(any(Balance.class));\n        verify(mMockMainMvpView, never()).showTransactions(anyListOf(Transaction.class));\n        verify(mMockMainMvpView).showProgress(false);\n    }", "signature": "void getAccountDataFailsAndShowsErrorMessage()", "full_signature": "@Test public void getAccountDataFailsAndShowsErrorMessage()", "class_method_signature": "MainPresenterTest.getAccountDataFailsAndShowsErrorMessage()", "testcase": true, "constructor": false, "invocations": ["stubDataManagerGetAccountDetails", "error", "getAccountData", "showProgress", "verify", "showAccountError", "verify", "showEmptyTransactions", "verify", "never", "showBalance", "verify", "never", "any", "showTransactions", "verify", "never", "anyListOf", "showProgress", "verify"]}, "focal_class": {"identifier": "MainPresenter", "superclass": "extends BasePresenter<MainMvpView>", "interfaces": "", "fields": [{"original_string": "private final DataManager mDataManager;", "modifier": "private final", "type": "DataManager", "declarator": "mDataManager", "var_name": "mDataManager"}, {"original_string": "private final RxEventBus mEventBus;", "modifier": "private final", "type": "RxEventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "private CompositeSubscription mCompositeSubscription;", "modifier": "private", "type": "CompositeSubscription", "declarator": "mCompositeSubscription", "var_name": "mCompositeSubscription"}], "methods": [{"identifier": "MainPresenter", "parameters": "(DataManager dataManager, RxEventBus rxEventBus)", "modifiers": "@Inject public", "return": "", "signature": " MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "full_signature": "@Inject public  MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "class_method_signature": "MainPresenter.MainPresenter(DataManager dataManager, RxEventBus rxEventBus)", "testcase": false, "constructor": true}, {"identifier": "attachView", "parameters": "(MainMvpView mvpView)", "modifiers": "@Override public", "return": "void", "signature": "void attachView(MainMvpView mvpView)", "full_signature": "@Override public void attachView(MainMvpView mvpView)", "class_method_signature": "MainPresenter.attachView(MainMvpView mvpView)", "testcase": false, "constructor": false}, {"identifier": "detachView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void detachView()", "full_signature": "@Override public void detachView()", "class_method_signature": "MainPresenter.detachView()", "testcase": false, "constructor": false}, {"identifier": "getAccountData", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void getAccountData()", "full_signature": "public void getAccountData()", "class_method_signature": "MainPresenter.getAccountData()", "testcase": false, "constructor": false}, {"identifier": "signOut", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void signOut()", "full_signature": "public void signOut()", "class_method_signature": "MainPresenter.signOut()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/hitherejoe/mondroid/ui/main/MainPresenter.java"}, "focal_method": {"identifier": "getAccountData", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void getAccountData() {\n        checkViewAttached();\n        getMvpView().showProgress(true);\n        mCompositeSubscription.add(mDataManager.getAccountDetails()\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribeOn(Schedulers.io())\n                .subscribe(new SingleSubscriber<DataManager.AccountData>() {\n                    @Override\n                    public void onSuccess(DataManager.AccountData accountData) {\n                        getMvpView().showProgress(false);\n                        if (accountData.transactions != null &&\n                                !accountData.transactions.isEmpty()) {\n                            getMvpView().showTransactions(accountData.transactions);\n                        } else {\n                            getMvpView().showEmptyTransactions();\n                        }\n                        getMvpView().showBalance(accountData.balance);\n                    }\n\n                    @Override\n                    public void onError(Throwable error) {\n                        getMvpView().showProgress(false);\n                        getMvpView().showAccountError();\n                        error.printStackTrace();\n                        Timber.e(\"There was an error retrieving the account data...\");\n                    }\n                }));\n    }", "signature": "void getAccountData()", "full_signature": "public void getAccountData()", "class_method_signature": "MainPresenter.getAccountData()", "testcase": false, "constructor": false, "invocations": ["checkViewAttached", "showProgress", "getMvpView", "add", "subscribe", "subscribeOn", "observeOn", "getAccountDetails", "mainThread", "io", "showProgress", "getMvpView", "isEmpty", "showTransactions", "getMvpView", "showEmptyTransactions", "getMvpView", "showBalance", "getMvpView", "showProgress", "getMvpView", "showAccountError", "getMvpView", "printStackTrace", "e"]}, "repository": {"repo_id": 60776569, "url": "https://github.com/hitherejoe/Mondroid", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 138, "size": 1756, "license": "GNU General Public License v3.0"}}