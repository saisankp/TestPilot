{"test_class": {"identifier": "VersionInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/VersionInfoTest.java"}, "test_case": {"identifier": "shouldFindTheDefaultVersionInfo", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldFindTheDefaultVersionInfo() throws IOException {\n        final List<String> lines = Arrays.asList(\"Implementation-Title: gazeplay\", \"Implementation-Version: 1.7\", \"Build-Time: 1234\");\n        createMockManifest(lines);\n\n        final String result = VersionInfo.findVersionInfo();\n\n        assertEquals(\"1.7 (1234)\", result);\n    }", "signature": "void shouldFindTheDefaultVersionInfo()", "full_signature": "@Test void shouldFindTheDefaultVersionInfo()", "class_method_signature": "VersionInfoTest.shouldFindTheDefaultVersionInfo()", "testcase": true, "constructor": false, "invocations": ["asList", "createMockManifest", "findVersionInfo", "assertEquals"]}, "focal_class": {"identifier": "VersionInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String artifactId = \"gazeplay\";", "modifier": "public static final", "type": "String", "declarator": "artifactId = \"gazeplay\"", "var_name": "artifactId"}], "methods": [{"identifier": "findVersionInfo", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String findVersionInfo()", "full_signature": "public static String findVersionInfo()", "class_method_signature": "VersionInfo.findVersionInfo()", "testcase": false, "constructor": false}, {"identifier": "findVersionInfo", "parameters": "(final String applicationName, final boolean includeBuildTime)", "modifiers": "public static", "return": "Optional<String>", "signature": "Optional<String> findVersionInfo(final String applicationName, final boolean includeBuildTime)", "full_signature": "public static Optional<String> findVersionInfo(final String applicationName, final boolean includeBuildTime)", "class_method_signature": "VersionInfo.findVersionInfo(final String applicationName, final boolean includeBuildTime)", "testcase": false, "constructor": false}, {"identifier": "locateVersionInfo", "parameters": "(final String applicationName, final boolean includeBuildTime)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> locateVersionInfo(final String applicationName, final boolean includeBuildTime)", "full_signature": "private static Optional<String> locateVersionInfo(final String applicationName, final boolean includeBuildTime)", "class_method_signature": "VersionInfo.locateVersionInfo(final String applicationName, final boolean includeBuildTime)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/VersionInfo.java"}, "focal_method": {"identifier": "findVersionInfo", "parameters": "()", "modifiers": "public static", "return": "String", "body": "public static String findVersionInfo() {\n        return findVersionInfo(artifactId, true).orElse(\"Current Version\");\n    }", "signature": "String findVersionInfo()", "full_signature": "public static String findVersionInfo()", "class_method_signature": "VersionInfo.findVersionInfo()", "testcase": false, "constructor": false, "invocations": ["orElse", "findVersionInfo"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}