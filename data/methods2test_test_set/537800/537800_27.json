{"test_class": {"identifier": "GarbageCollectorMetricSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final GarbageCollectorMXBean gc = mock(GarbageCollectorMXBean.class);", "modifier": "private final", "type": "GarbageCollectorMXBean", "declarator": "gc = mock(GarbageCollectorMXBean.class)", "var_name": "gc"}, {"original_string": "private final GarbageCollectorMetricSet metrics = new GarbageCollectorMetricSet(Collections.singletonList(gc));", "modifier": "private final", "type": "GarbageCollectorMetricSet", "declarator": "metrics = new GarbageCollectorMetricSet(Collections.singletonList(gc))", "var_name": "metrics"}], "file": "metrics-jvm/src/test/java/com/codahale/metrics/jvm/GarbageCollectorMetricSetTest.java"}, "test_case": {"identifier": "hasAGaugeForGcCounts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hasAGaugeForGcCounts() {\n        final Gauge<Long> gauge = (Gauge<Long>) metrics.getMetrics().get(\"PS-OldGen.count\");\n        assertThat(gauge.getValue())\n                .isEqualTo(1L);\n    }", "signature": "void hasAGaugeForGcCounts()", "full_signature": "@Test public void hasAGaugeForGcCounts()", "class_method_signature": "GarbageCollectorMetricSetTest.hasAGaugeForGcCounts()", "testcase": true, "constructor": false, "invocations": ["get", "getMetrics", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "GarbageCollectorMetricSet", "superclass": "", "interfaces": "implements MetricSet", "fields": [{"original_string": "private static final Pattern WHITESPACE = Pattern.compile(\"[\\\\s]+\");", "modifier": "private static final", "type": "Pattern", "declarator": "WHITESPACE = Pattern.compile(\"[\\\\s]+\")", "var_name": "WHITESPACE"}, {"original_string": "private final List<GarbageCollectorMXBean> garbageCollectors;", "modifier": "private final", "type": "List<GarbageCollectorMXBean>", "declarator": "garbageCollectors", "var_name": "garbageCollectors"}], "methods": [{"identifier": "GarbageCollectorMetricSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " GarbageCollectorMetricSet()", "full_signature": "public  GarbageCollectorMetricSet()", "class_method_signature": "GarbageCollectorMetricSet.GarbageCollectorMetricSet()", "testcase": false, "constructor": true}, {"identifier": "GarbageCollectorMetricSet", "parameters": "(Collection<GarbageCollectorMXBean> garbageCollectors)", "modifiers": "public", "return": "", "signature": " GarbageCollectorMetricSet(Collection<GarbageCollectorMXBean> garbageCollectors)", "full_signature": "public  GarbageCollectorMetricSet(Collection<GarbageCollectorMXBean> garbageCollectors)", "class_method_signature": "GarbageCollectorMetricSet.GarbageCollectorMetricSet(Collection<GarbageCollectorMXBean> garbageCollectors)", "testcase": false, "constructor": true}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "GarbageCollectorMetricSet.getMetrics()", "testcase": false, "constructor": false}], "file": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/GarbageCollectorMetricSet.java"}, "focal_method": {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "body": "@Override\n    public Map<String, Metric> getMetrics() {\n        final Map<String, Metric> gauges = new HashMap<>();\n        for (final GarbageCollectorMXBean gc : garbageCollectors) {\n            final String name = WHITESPACE.matcher(gc.getName()).replaceAll(\"-\");\n            gauges.put(name(name, \"count\"), (Gauge<Long>) gc::getCollectionCount);\n            gauges.put(name(name, \"time\"), (Gauge<Long>) gc::getCollectionTime);\n        }\n        return Collections.unmodifiableMap(gauges);\n    }", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "GarbageCollectorMetricSet.getMetrics()", "testcase": false, "constructor": false, "invocations": ["replaceAll", "matcher", "getName", "put", "name", "put", "name", "unmodifiableMap"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}