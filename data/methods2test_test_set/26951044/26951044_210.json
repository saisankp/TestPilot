{"test_class": {"identifier": "SimplePropertySourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySourceTest.java"}, "test_case": {"identifier": "successfulCreationWithProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void successfulCreationWithProperties() {\n        URL resource = getClass().getResource(\"/valid-properties.xml\");\n        Map<String,String> props = new HashMap<>();\n        props.put(\"a\", \"b\");\n        props.put(\"b\", \"1\");\n        SimplePropertySource source = new SimplePropertySource(\"test\", props);\n\n        assertThat(source).isNotNull();\n        assertThat(source.getProperties()).hasSize(2); // double the getNumChilds for .source values.\n        assertThat(source.getProperties()).contains(entry(\"a\", PropertyValue.createValue(\"a\", \"b\").setMeta(\"source\", \"test\")));\n        assertThat(source.getProperties()).contains(entry(\"b\", PropertyValue.createValue(\"b\", \"1\").setMeta(\"source\", \"test\")));\n    }", "signature": "void successfulCreationWithProperties()", "full_signature": "@Test public void successfulCreationWithProperties()", "class_method_signature": "SimplePropertySourceTest.successfulCreationWithProperties()", "testcase": true, "constructor": false, "invocations": ["getResource", "getClass", "put", "put", "isNotNull", "assertThat", "hasSize", "assertThat", "getProperties", "contains", "assertThat", "getProperties", "entry", "setMeta", "createValue", "contains", "assertThat", "getProperties", "entry", "setMeta", "createValue"]}, "focal_class": {"identifier": "SimplePropertySource", "superclass": "extends BasePropertySource", "interfaces": "", "fields": [{"original_string": "private Map<String, PropertyValue> properties = new HashMap<>();", "modifier": "private", "type": "Map<String, PropertyValue>", "declarator": "properties = new HashMap<>()", "var_name": "properties"}], "methods": [{"identifier": "SimplePropertySource", "parameters": "(File propertiesLocation)", "modifiers": "public", "return": "", "signature": " SimplePropertySource(File propertiesLocation)", "full_signature": "public  SimplePropertySource(File propertiesLocation)", "class_method_signature": "SimplePropertySource.SimplePropertySource(File propertiesLocation)", "testcase": false, "constructor": true}, {"identifier": "SimplePropertySource", "parameters": "(URL propertiesLocation)", "modifiers": "public", "return": "", "signature": " SimplePropertySource(URL propertiesLocation)", "full_signature": "public  SimplePropertySource(URL propertiesLocation)", "class_method_signature": "SimplePropertySource.SimplePropertySource(URL propertiesLocation)", "testcase": false, "constructor": true}, {"identifier": "SimplePropertySource", "parameters": "(String name, Map<String, String> properties, int defaultOrdinal)", "modifiers": "public", "return": "", "signature": " SimplePropertySource(String name, Map<String, String> properties, int defaultOrdinal)", "full_signature": "public  SimplePropertySource(String name, Map<String, String> properties, int defaultOrdinal)", "class_method_signature": "SimplePropertySource.SimplePropertySource(String name, Map<String, String> properties, int defaultOrdinal)", "testcase": false, "constructor": true}, {"identifier": "SimplePropertySource", "parameters": "(String name, Map<String, String> properties)", "modifiers": "public", "return": "", "signature": " SimplePropertySource(String name, Map<String, String> properties)", "full_signature": "public  SimplePropertySource(String name, Map<String, String> properties)", "class_method_signature": "SimplePropertySource.SimplePropertySource(String name, Map<String, String> properties)", "testcase": false, "constructor": true}, {"identifier": "SimplePropertySource", "parameters": "(String name, URL propertiesLocation)", "modifiers": "public", "return": "", "signature": " SimplePropertySource(String name, URL propertiesLocation)", "full_signature": "public  SimplePropertySource(String name, URL propertiesLocation)", "class_method_signature": "SimplePropertySource.SimplePropertySource(String name, URL propertiesLocation)", "testcase": false, "constructor": true}, {"identifier": "SimplePropertySource", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " SimplePropertySource(Builder builder)", "full_signature": "private  SimplePropertySource(Builder builder)", "class_method_signature": "SimplePropertySource.SimplePropertySource(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "SimplePropertySource.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "SimplePropertySource.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getChangeSupport", "parameters": "()", "modifiers": "@Override public", "return": "ChangeSupport", "signature": "ChangeSupport getChangeSupport()", "full_signature": "@Override public ChangeSupport getChangeSupport()", "class_method_signature": "SimplePropertySource.getChangeSupport()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(URL propertiesFile)", "modifiers": "private static", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> load(URL propertiesFile)", "full_signature": "private static Map<String, PropertyValue> load(URL propertiesFile)", "class_method_signature": "SimplePropertySource.load(URL propertiesFile)", "testcase": false, "constructor": false}, {"identifier": "isXMLPropertieFiles", "parameters": "(URL url)", "modifiers": "private static", "return": "boolean", "signature": "boolean isXMLPropertieFiles(URL url)", "full_signature": "private static boolean isXMLPropertieFiles(URL url)", "class_method_signature": "SimplePropertySource.isXMLPropertieFiles(URL url)", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySource.java"}, "focal_method": {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "body": "@Override\n    public Map<String, PropertyValue> getProperties() {\n        return this.properties;\n    }", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "SimplePropertySource.getProperties()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}