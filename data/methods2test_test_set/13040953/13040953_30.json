{"test_class": {"identifier": "DoublesTest", "superclass": "", "interfaces": "", "fields": [], "file": "rome-utils/src/test/java/com/rometools/utils/DoublesTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() {\n\n        final String nullString = null;\n        final String emptyString = null;\n        final String integerString = \"1\";\n        final String decimalString = \"1.0\";\n\n        assertThat(Doubles.parse(nullString), is(nullValue()));\n        assertThat(Doubles.parse(emptyString), is(nullValue()));\n        assertThat(Doubles.parse(integerString), is(1.0));\n        assertThat(Doubles.parse(decimalString), is(1.0));\n\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "DoublesTest.testParse()", "testcase": true, "constructor": false, "invocations": ["assertThat", "parse", "is", "nullValue", "assertThat", "parse", "is", "nullValue", "assertThat", "parse", "is", "assertThat", "parse", "is"]}, "focal_class": {"identifier": "Doubles", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Doubles", "parameters": "()", "modifiers": "private", "return": "", "signature": " Doubles()", "full_signature": "private  Doubles()", "class_method_signature": "Doubles.Doubles()", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(final String s)", "modifiers": "public static", "return": "Double", "signature": "Double parse(final String s)", "full_signature": "public static Double parse(final String s)", "class_method_signature": "Doubles.parse(final String s)", "testcase": false, "constructor": false}], "file": "rome-utils/src/main/java/com/rometools/utils/Doubles.java"}, "focal_method": {"identifier": "parse", "parameters": "(final String s)", "modifiers": "public static", "return": "Double", "body": "public static Double parse(final String s) {\n        Double parsed = null;\n        try {\n            if (s != null) {\n                parsed = Double.parseDouble(s);\n            }\n        } catch (final NumberFormatException e) {\n        }\n        return parsed;\n    }", "signature": "Double parse(final String s)", "full_signature": "public static Double parse(final String s)", "class_method_signature": "Doubles.parse(final String s)", "testcase": false, "constructor": false, "invocations": ["parseDouble"]}, "repository": {"repo_id": 13040953, "url": "https://github.com/rometools/rome", "stars": 594, "created": "9/23/2013 4:35:35 PM +00:00", "updates": "2020-01-16T10:28:05+00:00", "fork": "False", "license": "licensed"}}