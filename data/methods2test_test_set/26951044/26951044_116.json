{"test_class": {"identifier": "BigDecimalConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/BigDecimalConverterTest.java"}, "test_case": {"identifier": "converterHandlesNullValueCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void converterHandlesNullValueCorrectly() throws Exception {\n        ConversionContext context = mock(ConversionContext.class);\n\n        BigDecimalConverter converter = new BigDecimalConverter();\n        BigDecimal value = converter.convert(\"\", context);\n\n        assertThat(value).isNull();\n    }", "signature": "void converterHandlesNullValueCorrectly()", "full_signature": "@Test public void converterHandlesNullValueCorrectly()", "class_method_signature": "BigDecimalConverterTest.converterHandlesNullValueCorrectly()", "testcase": true, "constructor": false, "invocations": ["mock", "convert", "isNull", "assertThat"]}, "focal_class": {"identifier": "BigDecimalConverter", "superclass": "", "interfaces": "implements PropertyConverter<BigDecimal>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(BigDecimalConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(BigDecimalConverter.class.getName())", "var_name": "LOG"}, {"original_string": "private final BigIntegerConverter integerConverter = new BigIntegerConverter();", "modifier": "private final", "type": "BigIntegerConverter", "declarator": "integerConverter = new BigIntegerConverter()", "var_name": "integerConverter"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal convert(String value, ConversionContext ctx)", "full_signature": "@Override public BigDecimal convert(String value, ConversionContext ctx)", "class_method_signature": "BigDecimalConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "BigDecimalConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BigDecimalConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/BigDecimalConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "BigDecimal", "body": "@Override\n    public BigDecimal convert(String value, ConversionContext ctx) {\n        ctx.addSupportedFormats(getClass(), \"<bigDecimal> -> new BigDecimal(String)\");\n        if(value==null){\n            return null;\n        }\n        String trimmed = value.trim();\n        try{\n            return new BigDecimal(trimmed);\n        } catch(Exception e){\n            LOG.finest(\"Parsing BigDecimal failed, trying BigInteger for: \" + value);\n            BigInteger bigInt = integerConverter.convert(value, ctx);\n            if(bigInt!=null){\n                return new BigDecimal(bigInt);\n            }\n            LOG.finest(\"Failed to parse BigDecimal from: \" + value);\n            return null;\n        }\n    }", "signature": "BigDecimal convert(String value, ConversionContext ctx)", "full_signature": "@Override public BigDecimal convert(String value, ConversionContext ctx)", "class_method_signature": "BigDecimalConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "finest", "convert", "finest"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}