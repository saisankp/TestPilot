{"test_class": {"identifier": "LoadBalancerSpringResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String JOB_ID = \"myJobId\";", "modifier": "private static final", "type": "String", "declarator": "JOB_ID = \"myJobId\"", "var_name": "JOB_ID"}, {"original_string": "private static final String LOAD_BALANCER_ID = \"lb1\";", "modifier": "private static final", "type": "String", "declarator": "LOAD_BALANCER_ID = \"lb1\"", "var_name": "LOAD_BALANCER_ID"}, {"original_string": "private static final GetJobLoadBalancersResult GET_JOB_LOAD_BALANCERS_RESULT = GetJobLoadBalancersResult.newBuilder()\n            .setJobId(JOB_ID)\n            .addLoadBalancers(LoadBalancerId.newBuilder().setId(LOAD_BALANCER_ID).build())\n            .build();", "modifier": "private static final", "type": "GetJobLoadBalancersResult", "declarator": "GET_JOB_LOAD_BALANCERS_RESULT = GetJobLoadBalancersResult.newBuilder()\n            .setJobId(JOB_ID)\n            .addLoadBalancers(LoadBalancerId.newBuilder().setId(LOAD_BALANCER_ID).build())\n            .build()", "var_name": "GET_JOB_LOAD_BALANCERS_RESULT"}, {"original_string": "@MockBean\n    private LoadBalancerService serviceMock;", "modifier": "@MockBean\n    private", "type": "LoadBalancerService", "declarator": "serviceMock", "var_name": "serviceMock"}, {"original_string": "@MockBean\n    private SystemLogService systemLogService;", "modifier": "@MockBean\n    private", "type": "SystemLogService", "declarator": "systemLogService", "var_name": "systemLogService"}, {"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}], "file": "titus-server-runtime/src/test/java/com/netflix/titus/runtime/endpoint/v3/rest/LoadBalancerSpringResourceTest.java"}, "test_case": {"identifier": "testGetAllLoadBalancers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAllLoadBalancers() throws Exception {\n        GetAllLoadBalancersRequest request = GetAllLoadBalancersRequest.newBuilder().setPage(NEXT_PAGE_OF_1).build();\n        GetAllLoadBalancersResult response = GetAllLoadBalancersResult.newBuilder()\n                .setPagination(SpringMockMvcUtil.paginationOf(NEXT_PAGE_OF_1))\n                .addJobLoadBalancers(GET_JOB_LOAD_BALANCERS_RESULT)\n                .build();\n        when(serviceMock.getAllLoadBalancers(request, JUNIT_REST_CALL_METADATA)).thenReturn(Observable.just(response));\n\n        GetAllLoadBalancersResult entity = SpringMockMvcUtil.doPaginatedGet(mockMvc, \"/api/v3/loadBalancers\", GetAllLoadBalancersResult.class, NEXT_PAGE_OF_1);\n        assertThat(entity).isEqualTo(response);\n\n        verify(serviceMock, times(1)).getAllLoadBalancers(request, JUNIT_REST_CALL_METADATA);\n    }", "signature": "void testGetAllLoadBalancers()", "full_signature": "@Test public void testGetAllLoadBalancers()", "class_method_signature": "LoadBalancerSpringResourceTest.testGetAllLoadBalancers()", "testcase": true, "constructor": false, "invocations": ["build", "setPage", "newBuilder", "build", "addJobLoadBalancers", "setPagination", "newBuilder", "paginationOf", "thenReturn", "when", "getAllLoadBalancers", "just", "doPaginatedGet", "isEqualTo", "assertThat", "getAllLoadBalancers", "verify", "times"]}, "focal_class": {"identifier": "LoadBalancerSpringResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LoadBalancerService loadBalancerService;", "modifier": "private final", "type": "LoadBalancerService", "declarator": "loadBalancerService", "var_name": "loadBalancerService"}, {"original_string": "private final SystemLogService systemLog;", "modifier": "private final", "type": "SystemLogService", "declarator": "systemLog", "var_name": "systemLog"}], "methods": [{"identifier": "LoadBalancerSpringResource", "parameters": "(LoadBalancerService loadBalancerService, SystemLogService systemLog)", "modifiers": "@Inject public", "return": "", "signature": " LoadBalancerSpringResource(LoadBalancerService loadBalancerService, SystemLogService systemLog)", "full_signature": "@Inject public  LoadBalancerSpringResource(LoadBalancerService loadBalancerService, SystemLogService systemLog)", "class_method_signature": "LoadBalancerSpringResource.LoadBalancerSpringResource(LoadBalancerService loadBalancerService, SystemLogService systemLog)", "testcase": false, "constructor": true}, {"identifier": "getJobLoadBalancers", "parameters": "(@PathVariable(\"jobId\") String jobId, CallMetadataAuthentication authentication)", "modifiers": "@ApiOperation(\"Find the load balancer(s) with the specified ID\") @GetMapping(path = \"/{jobId}\") public", "return": "GetJobLoadBalancersResult", "signature": "GetJobLoadBalancersResult getJobLoadBalancers(@PathVariable(\"jobId\") String jobId, CallMetadataAuthentication authentication)", "full_signature": "@ApiOperation(\"Find the load balancer(s) with the specified ID\") @GetMapping(path = \"/{jobId}\") public GetJobLoadBalancersResult getJobLoadBalancers(@PathVariable(\"jobId\") String jobId, CallMetadataAuthentication authentication)", "class_method_signature": "LoadBalancerSpringResource.getJobLoadBalancers(@PathVariable(\"jobId\") String jobId, CallMetadataAuthentication authentication)", "testcase": false, "constructor": false}, {"identifier": "getAllLoadBalancers", "parameters": "(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "modifiers": "@ApiOperation(\"Get all load balancers\") @GetMapping public", "return": "GetAllLoadBalancersResult", "signature": "GetAllLoadBalancersResult getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "full_signature": "@ApiOperation(\"Get all load balancers\") @GetMapping public GetAllLoadBalancersResult getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "class_method_signature": "LoadBalancerSpringResource.getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "testcase": false, "constructor": false}, {"identifier": "addLoadBalancer", "parameters": "(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "modifiers": "@ApiOperation(\"Add a load balancer\") @PostMapping public", "return": "ResponseEntity<Void>", "signature": "ResponseEntity<Void> addLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "full_signature": "@ApiOperation(\"Add a load balancer\") @PostMapping public ResponseEntity<Void> addLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "class_method_signature": "LoadBalancerSpringResource.addLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "testcase": false, "constructor": false}, {"identifier": "removeLoadBalancer", "parameters": "(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "modifiers": "@ApiOperation(\"Remove a load balancer\") @DeleteMapping public", "return": "ResponseEntity<Void>", "signature": "ResponseEntity<Void> removeLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "full_signature": "@ApiOperation(\"Remove a load balancer\") @DeleteMapping public ResponseEntity<Void> removeLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "class_method_signature": "LoadBalancerSpringResource.removeLoadBalancer(\n            @RequestParam(\"jobId\") String jobId,\n            @RequestParam(\"loadBalancerId\") String loadBalancerId,\n            CallMetadataAuthentication authentication)", "testcase": false, "constructor": false}], "file": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/endpoint/v3/rest/LoadBalancerSpringResource.java"}, "focal_method": {"identifier": "getAllLoadBalancers", "parameters": "(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "modifiers": "@ApiOperation(\"Get all load balancers\") @GetMapping public", "return": "GetAllLoadBalancersResult", "body": "@ApiOperation(\"Get all load balancers\")\n    @GetMapping\n    public GetAllLoadBalancersResult getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication) {\n        Page page = RestUtil.createPage(queryParameters);\n        logPageNumberUsage(systemLog, authentication.getCallMetadata(), getClass().getSimpleName(), \"getAllLoadBalancers\", page);\n        return Responses.fromSingleValueObservable(loadBalancerService.getAllLoadBalancers(\n                GetAllLoadBalancersRequest.newBuilder().setPage(page).build(),\n                authentication.getCallMetadata()\n        ));\n    }", "signature": "GetAllLoadBalancersResult getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "full_signature": "@ApiOperation(\"Get all load balancers\") @GetMapping public GetAllLoadBalancersResult getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "class_method_signature": "LoadBalancerSpringResource.getAllLoadBalancers(@RequestParam MultiValueMap<String, String> queryParameters,\n                                                         CallMetadataAuthentication authentication)", "testcase": false, "constructor": false, "invocations": ["createPage", "logPageNumberUsage", "getCallMetadata", "getSimpleName", "getClass", "fromSingleValueObservable", "getAllLoadBalancers", "build", "setPage", "newBuilder", "getCallMetadata"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}