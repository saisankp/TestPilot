{"test_class": {"identifier": "LoadSentenceUCTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoadSentenceUC mLoadSentenceUC;", "modifier": "private", "type": "LoadSentenceUC", "declarator": "mLoadSentenceUC", "var_name": "mLoadSentenceUC"}, {"original_string": "@Mock\n    private SentenceRepository mSentenceRepository;", "modifier": "@Mock\n    private", "type": "SentenceRepository", "declarator": "mSentenceRepository", "var_name": "mSentenceRepository"}], "file": "app/src/test/java/com/xixicm/de/domain/interactor/LoadSentenceUCTest.java"}, "test_case": {"identifier": "testLoadSentence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadSentence() {\n        final Sentence newSentence = new SentenceEntity();\n        newSentence.setDateline(\"2016-08-16\");\n        newSentence.setId(123L);\n        when(mSentenceRepository.getSentence(123L)).thenReturn(newSentence);\n        mLoadSentenceUC.setRequestValue(123L);\n        mLoadSentenceUC.setUseCaseCallback(new LoadSentenceUC.LoadSentenceCallback() {\n            @Override\n            public void onSentenceGot(Sentence sentence) {\n                assertThat(sentence, is(newSentence));\n            }\n        });\n        mLoadSentenceUC.run();\n        // getLatestSentence is called\n        verify(mSentenceRepository).getSentence(123L);\n    }", "signature": "void testLoadSentence()", "full_signature": "@Test public void testLoadSentence()", "class_method_signature": "LoadSentenceUCTest.testLoadSentence()", "testcase": true, "constructor": false, "invocations": ["setDateline", "setId", "thenReturn", "when", "getSentence", "setRequestValue", "setUseCaseCallback", "assertThat", "is", "run", "getSentence", "verify"]}, "focal_class": {"identifier": "LoadSentenceUC", "superclass": "extends AbstractUseCase<Long, Sentence, Void>", "interfaces": "", "fields": [{"original_string": "SentenceRepository mSentenceRepository;", "modifier": "", "type": "SentenceRepository", "declarator": "mSentenceRepository", "var_name": "mSentenceRepository"}], "methods": [{"identifier": "LoadSentenceUC", "parameters": "(SentenceRepository sentenceDataRepository)", "modifiers": "public", "return": "", "signature": " LoadSentenceUC(SentenceRepository sentenceDataRepository)", "full_signature": "public  LoadSentenceUC(SentenceRepository sentenceDataRepository)", "class_method_signature": "LoadSentenceUC.LoadSentenceUC(SentenceRepository sentenceDataRepository)", "testcase": false, "constructor": true}, {"identifier": "loadSentence", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadSentence()", "full_signature": "private void loadSentence()", "class_method_signature": "LoadSentenceUC.loadSentence()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "LoadSentenceUC.run()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/domain/interactor/LoadSentenceUC.java"}, "focal_method": {"identifier": "loadSentence", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void loadSentence() {\n        LogUtils.v(Constants.TAG, \"start to load sentence[\" + getRequestValue() + \"]\");\n        Sentence sentence = mSentenceRepository.getSentence(getRequestValue());\n        if (getUseCaseCallback() != null) {\n            getUseCaseCallback().onSuccess(sentence);\n        }\n    }", "signature": "void loadSentence()", "full_signature": "private void loadSentence()", "class_method_signature": "LoadSentenceUC.loadSentence()", "testcase": false, "constructor": false, "invocations": ["v", "getRequestValue", "getSentence", "getRequestValue", "getUseCaseCallback", "onSuccess", "getUseCaseCallback"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}