{"test_class": {"identifier": "TempDirInitializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/tempdir/src/test/java/cloud/piranha/webapp/tempdir/TempDirInitializerTest.java"}, "test_case": {"identifier": "testOnStartup", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testOnStartup() throws Exception {\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        webApplication.setContextPath(\"my_servlet_context_name\");\n        TempDirInitializer initializer = new TempDirInitializer();\n        initializer.onStartup(null, webApplication);\n        File tempDir = new File(\"tmp/my_servlet_context_name\");\n        assertTrue(tempDir.exists());\n        tempDir.delete();\n        tempDir.getParentFile().delete();\n    }", "signature": "void testOnStartup()", "full_signature": "@Test void testOnStartup()", "class_method_signature": "TempDirInitializerTest.testOnStartup()", "testcase": true, "constructor": false, "invocations": ["setContextPath", "onStartup", "assertTrue", "exists", "delete", "delete", "getParentFile"]}, "focal_class": {"identifier": "TempDirInitializer", "superclass": "", "interfaces": "implements ServletContainerInitializer", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(TempDirInitializer.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(TempDirInitializer.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "onStartup", "parameters": "(Set<Class<?>> classes, ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "signature": "void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "full_signature": "@Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "class_method_signature": "TempDirInitializer.onStartup(Set<Class<?>> classes, ServletContext servletContext)", "testcase": false, "constructor": false}], "file": "webapp/tempdir/src/main/java/cloud/piranha/webapp/tempdir/TempDirInitializer.java"}, "focal_method": {"identifier": "onStartup", "parameters": "(Set<Class<?>> classes, ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onStartup(Set<Class<?>> classes, ServletContext servletContext) throws ServletException {\n        File baseDir = new File(\"tmp\");\n        String name = servletContext.getContextPath();\n        name = name.replaceAll(\"/\", \"_\");\n        if (name.trim().equals(\"\")) {\n            name = \"ROOT\";\n        }\n        File tempDir = new File(baseDir, name);\n        if (!tempDir.exists()) {\n            tempDir.mkdirs();\n        }\n        LOGGER.log(FINE, \"Setting TEMPDIR for context ''{0}'' to ''{1}''\",\n                new Object[]{servletContext.getContextPath(), tempDir});\n        servletContext.setAttribute(TEMPDIR, tempDir);\n    }", "signature": "void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "full_signature": "@Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "class_method_signature": "TempDirInitializer.onStartup(Set<Class<?>> classes, ServletContext servletContext)", "testcase": false, "constructor": false, "invocations": ["getContextPath", "replaceAll", "equals", "trim", "exists", "mkdirs", "log", "getContextPath", "setAttribute"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}