{"test_class": {"identifier": "JpaUnitFixtureTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestClass originalFixture;", "modifier": "private", "type": "TestClass", "declarator": "originalFixture", "var_name": "originalFixture"}, {"original_string": "@Mock\n    private JpaUnitContext ctx;", "modifier": "@Mock\n    private", "type": "JpaUnitContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "@Mock\n    private DecoratorExecutor executor;", "modifier": "@Mock\n    private", "type": "DecoratorExecutor", "declarator": "executor", "var_name": "executor"}, {"original_string": "private JpaUnitFixture fixture;", "modifier": "private", "type": "JpaUnitFixture", "declarator": "fixture", "var_name": "fixture"}], "file": "concordion/src/test/java/eu/drus/jpa/unit/concordion/JpaUnitFixtureTest.java"}, "test_case": {"identifier": "testSpecificationDescriptionContainsTheNameOfOriginalFixtureClassAndNotOfTheEnhancedClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSpecificationDescriptionContainsTheNameOfOriginalFixtureClassAndNotOfTheEnhancedClass() {\n        // GIVEN\n\n        // WHEN\n        final String specificationDescription = fixture.getSpecificationDescription();\n\n        // THEN\n        assertThat(specificationDescription, containsString(TestClass.class.getSimpleName()));\n        assertThat(specificationDescription, not(containsString(\"$\")));\n    }", "signature": "void testSpecificationDescriptionContainsTheNameOfOriginalFixtureClassAndNotOfTheEnhancedClass()", "full_signature": "@Test public void testSpecificationDescriptionContainsTheNameOfOriginalFixtureClassAndNotOfTheEnhancedClass()", "class_method_signature": "JpaUnitFixtureTest.testSpecificationDescriptionContainsTheNameOfOriginalFixtureClassAndNotOfTheEnhancedClass()", "testcase": true, "constructor": false, "invocations": ["getSpecificationDescription", "assertThat", "containsString", "getSimpleName", "assertThat", "not", "containsString"]}, "focal_class": {"identifier": "JpaUnitFixture", "superclass": "extends FixtureInstance", "interfaces": "", "fields": [{"original_string": "private DecoratorExecutor executor;", "modifier": "private", "type": "DecoratorExecutor", "declarator": "executor", "var_name": "executor"}, {"original_string": "private Object originalFixture;", "modifier": "private", "type": "Object", "declarator": "originalFixture", "var_name": "originalFixture"}, {"original_string": "private TestInvocation invocation;", "modifier": "private", "type": "TestInvocation", "declarator": "invocation", "var_name": "invocation"}], "methods": [{"identifier": "JpaUnitFixture", "parameters": "(final DecoratorExecutor executor, final Object fixtureObject)", "modifiers": "public", "return": "", "signature": " JpaUnitFixture(final DecoratorExecutor executor, final Object fixtureObject)", "full_signature": "public  JpaUnitFixture(final DecoratorExecutor executor, final Object fixtureObject)", "class_method_signature": "JpaUnitFixture.JpaUnitFixture(final DecoratorExecutor executor, final Object fixtureObject)", "testcase": false, "constructor": true}, {"identifier": "beforeSpecification", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void beforeSpecification()", "full_signature": "@Override public void beforeSpecification()", "class_method_signature": "JpaUnitFixture.beforeSpecification()", "testcase": false, "constructor": false}, {"identifier": "afterSpecification", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterSpecification()", "full_signature": "@Override public void afterSpecification()", "class_method_signature": "JpaUnitFixture.afterSpecification()", "testcase": false, "constructor": false}, {"identifier": "getDelegate", "parameters": "(final Object fixtureObject)", "modifiers": "private static", "return": "Object", "signature": "Object getDelegate(final Object fixtureObject)", "full_signature": "private static Object getDelegate(final Object fixtureObject)", "class_method_signature": "JpaUnitFixture.getDelegate(final Object fixtureObject)", "testcase": false, "constructor": false}, {"identifier": "getSpecificationDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSpecificationDescription()", "full_signature": "@Override public String getSpecificationDescription()", "class_method_signature": "JpaUnitFixture.getSpecificationDescription()", "testcase": false, "constructor": false}], "file": "concordion/src/main/java/eu/drus/jpa/unit/concordion/JpaUnitFixture.java"}, "focal_method": {"identifier": "getSpecificationDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getSpecificationDescription() {\n        final String name = FixtureSpecificationMapper.removeSuffixFromFixtureName(originalFixture.getClass().getSimpleName());\n        return SimpleFormatter.format(\"[Concordion Specification for '%s']\", name);\n    }", "signature": "String getSpecificationDescription()", "full_signature": "@Override public String getSpecificationDescription()", "class_method_signature": "JpaUnitFixture.getSpecificationDescription()", "testcase": false, "constructor": false, "invocations": ["removeSuffixFromFixtureName", "getSimpleName", "getClass", "format"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}