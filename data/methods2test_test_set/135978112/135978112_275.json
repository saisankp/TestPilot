{"test_class": {"identifier": "ClusterTest", "superclass": "", "interfaces": "", "fields": [], "file": "clients/src/test/java/org/apache/kafka/common/ClusterTest.java"}, "test_case": {"identifier": "testBootstrap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBootstrap() {\n        String ipAddress = \"140.211.11.105\";\n        String hostName = \"www.example.com\";\n        Cluster cluster = Cluster.bootstrap(Arrays.asList(\n                new InetSocketAddress(ipAddress, 9002),\n                new InetSocketAddress(hostName, 9002)\n        ));\n        Set<String> expectedHosts = Utils.mkSet(ipAddress, hostName);\n        Set<String> actualHosts = new HashSet<>();\n        for (Node node : cluster.nodes())\n            actualHosts.add(node.host());\n        assertEquals(expectedHosts, actualHosts);\n    }", "signature": "void testBootstrap()", "full_signature": "@Test public void testBootstrap()", "class_method_signature": "ClusterTest.testBootstrap()", "testcase": true, "constructor": false, "invocations": ["bootstrap", "asList", "mkSet", "nodes", "add", "host", "assertEquals"]}, "focal_class": {"identifier": "Cluster", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final boolean isBootstrapConfigured;", "modifier": "private final", "type": "boolean", "declarator": "isBootstrapConfigured", "var_name": "isBootstrapConfigured"}, {"original_string": "private final List<Node> nodes;", "modifier": "private final", "type": "List<Node>", "declarator": "nodes", "var_name": "nodes"}, {"original_string": "private final Set<String> unauthorizedTopics;", "modifier": "private final", "type": "Set<String>", "declarator": "unauthorizedTopics", "var_name": "unauthorizedTopics"}, {"original_string": "private final Map<TopicPartition, PartitionInfo> partitionsByTopicPartition;", "modifier": "private final", "type": "Map<TopicPartition, PartitionInfo>", "declarator": "partitionsByTopicPartition", "var_name": "partitionsByTopicPartition"}, {"original_string": "private final Map<String, List<PartitionInfo>> partitionsByTopic;", "modifier": "private final", "type": "Map<String, List<PartitionInfo>>", "declarator": "partitionsByTopic", "var_name": "partitionsByTopic"}, {"original_string": "private final Map<String, List<PartitionInfo>> availablePartitionsByTopic;", "modifier": "private final", "type": "Map<String, List<PartitionInfo>>", "declarator": "availablePartitionsByTopic", "var_name": "availablePartitionsByTopic"}, {"original_string": "private final Map<Integer, List<PartitionInfo>> partitionsByNode;", "modifier": "private final", "type": "Map<Integer, List<PartitionInfo>>", "declarator": "partitionsByNode", "var_name": "partitionsByNode"}, {"original_string": "private final Map<Integer, Node> nodesById;", "modifier": "private final", "type": "Map<Integer, Node>", "declarator": "nodesById", "var_name": "nodesById"}], "methods": [{"identifier": "Cluster", "parameters": "(Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "modifiers": "public", "return": "", "signature": " Cluster(Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "full_signature": "public  Cluster(Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "class_method_signature": "Cluster.Cluster(Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "testcase": false, "constructor": true}, {"identifier": "Cluster", "parameters": "(boolean isBootstrapConfigured,\n        Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "modifiers": "private", "return": "", "signature": " Cluster(boolean isBootstrapConfigured,\n        Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "full_signature": "private  Cluster(boolean isBootstrapConfigured,\n        Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "class_method_signature": "Cluster.Cluster(boolean isBootstrapConfigured,\n        Collection<Node> nodes,\n        Collection<PartitionInfo> partitions,\n        Set<String> unauthorizedTopics)", "testcase": false, "constructor": true}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "Cluster", "signature": "Cluster empty()", "full_signature": "public static Cluster empty()", "class_method_signature": "Cluster.empty()", "testcase": false, "constructor": false}, {"identifier": "bootstrap", "parameters": "(List<InetSocketAddress> addresses)", "modifiers": "public static", "return": "Cluster", "signature": "Cluster bootstrap(List<InetSocketAddress> addresses)", "full_signature": "public static Cluster bootstrap(List<InetSocketAddress> addresses)", "class_method_signature": "Cluster.bootstrap(List<InetSocketAddress> addresses)", "testcase": false, "constructor": false}, {"identifier": "withPartitions", "parameters": "(Map<TopicPartition, PartitionInfo> partitions)", "modifiers": "public", "return": "Cluster", "signature": "Cluster withPartitions(Map<TopicPartition, PartitionInfo> partitions)", "full_signature": "public Cluster withPartitions(Map<TopicPartition, PartitionInfo> partitions)", "class_method_signature": "Cluster.withPartitions(Map<TopicPartition, PartitionInfo> partitions)", "testcase": false, "constructor": false}, {"identifier": "nodes", "parameters": "()", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> nodes()", "full_signature": "public List<Node> nodes()", "class_method_signature": "Cluster.nodes()", "testcase": false, "constructor": false}, {"identifier": "nodeById", "parameters": "(int id)", "modifiers": "public", "return": "Node", "signature": "Node nodeById(int id)", "full_signature": "public Node nodeById(int id)", "class_method_signature": "Cluster.nodeById(int id)", "testcase": false, "constructor": false}, {"identifier": "leaderFor", "parameters": "(TopicPartition topicPartition)", "modifiers": "public", "return": "Node", "signature": "Node leaderFor(TopicPartition topicPartition)", "full_signature": "public Node leaderFor(TopicPartition topicPartition)", "class_method_signature": "Cluster.leaderFor(TopicPartition topicPartition)", "testcase": false, "constructor": false}, {"identifier": "partition", "parameters": "(TopicPartition topicPartition)", "modifiers": "public", "return": "PartitionInfo", "signature": "PartitionInfo partition(TopicPartition topicPartition)", "full_signature": "public PartitionInfo partition(TopicPartition topicPartition)", "class_method_signature": "Cluster.partition(TopicPartition topicPartition)", "testcase": false, "constructor": false}, {"identifier": "partitionsForTopic", "parameters": "(String topic)", "modifiers": "public", "return": "List<PartitionInfo>", "signature": "List<PartitionInfo> partitionsForTopic(String topic)", "full_signature": "public List<PartitionInfo> partitionsForTopic(String topic)", "class_method_signature": "Cluster.partitionsForTopic(String topic)", "testcase": false, "constructor": false}, {"identifier": "availablePartitionsForTopic", "parameters": "(String topic)", "modifiers": "public", "return": "List<PartitionInfo>", "signature": "List<PartitionInfo> availablePartitionsForTopic(String topic)", "full_signature": "public List<PartitionInfo> availablePartitionsForTopic(String topic)", "class_method_signature": "Cluster.availablePartitionsForTopic(String topic)", "testcase": false, "constructor": false}, {"identifier": "partitionsForNode", "parameters": "(int nodeId)", "modifiers": "public", "return": "List<PartitionInfo>", "signature": "List<PartitionInfo> partitionsForNode(int nodeId)", "full_signature": "public List<PartitionInfo> partitionsForNode(int nodeId)", "class_method_signature": "Cluster.partitionsForNode(int nodeId)", "testcase": false, "constructor": false}, {"identifier": "partitionCountForTopic", "parameters": "(String topic)", "modifiers": "public", "return": "Integer", "signature": "Integer partitionCountForTopic(String topic)", "full_signature": "public Integer partitionCountForTopic(String topic)", "class_method_signature": "Cluster.partitionCountForTopic(String topic)", "testcase": false, "constructor": false}, {"identifier": "topics", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> topics()", "full_signature": "public Set<String> topics()", "class_method_signature": "Cluster.topics()", "testcase": false, "constructor": false}, {"identifier": "unauthorizedTopics", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> unauthorizedTopics()", "full_signature": "public Set<String> unauthorizedTopics()", "class_method_signature": "Cluster.unauthorizedTopics()", "testcase": false, "constructor": false}, {"identifier": "isBootstrapConfigured", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBootstrapConfigured()", "full_signature": "public boolean isBootstrapConfigured()", "class_method_signature": "Cluster.isBootstrapConfigured()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Cluster.toString()", "testcase": false, "constructor": false}], "file": "clients/src/main/java/org/apache/kafka/common/Cluster.java"}, "focal_method": {"identifier": "bootstrap", "parameters": "(List<InetSocketAddress> addresses)", "modifiers": "public static", "return": "Cluster", "body": "public static Cluster bootstrap(List<InetSocketAddress> addresses) {\n        List<Node> nodes = new ArrayList<>();\n        int nodeId = -1;\n        for (InetSocketAddress address : addresses)\n            nodes.add(new Node(nodeId--, address.getHostString(), address.getPort()));\n        return new Cluster(true, nodes, new ArrayList<PartitionInfo>(0), Collections.<String>emptySet());\n    }", "signature": "Cluster bootstrap(List<InetSocketAddress> addresses)", "full_signature": "public static Cluster bootstrap(List<InetSocketAddress> addresses)", "class_method_signature": "Cluster.bootstrap(List<InetSocketAddress> addresses)", "testcase": false, "constructor": false, "invocations": ["add", "getHostString", "getPort", "emptySet"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}