{"test_class": {"identifier": "ExtendedWeatherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Temperature temperature = new Temperature(32.0, TemperatureType.CELSIUS);", "modifier": "private final", "type": "Temperature", "declarator": "temperature = new Temperature(32.0, TemperatureType.CELSIUS)", "var_name": "temperature"}, {"original_string": "private final Pressure pressure = new Pressure(1020, PressureType.H_PA);", "modifier": "private final", "type": "Pressure", "declarator": "pressure = new Pressure(1020, PressureType.H_PA)", "var_name": "pressure"}, {"original_string": "private final PrecipitationDuration precipitationDuration = new PrecipitationDuration(1.0, DurationType.HOUR);", "modifier": "private final", "type": "PrecipitationDuration", "declarator": "precipitationDuration = new PrecipitationDuration(1.0, DurationType.HOUR)", "var_name": "precipitationDuration"}, {"original_string": "private final PrecipitationHeight precipitationHeight = new PrecipitationHeight(2.0, LengthType.CENTIMETER);", "modifier": "private final", "type": "PrecipitationHeight", "declarator": "precipitationHeight = new PrecipitationHeight(2.0, LengthType.CENTIMETER)", "var_name": "precipitationHeight"}, {"original_string": "private final SunshineDuration sunshineDuration = new SunshineDuration(3.14, DurationType.HOUR);", "modifier": "private final", "type": "SunshineDuration", "declarator": "sunshineDuration = new SunshineDuration(3.14, DurationType.HOUR)", "var_name": "sunshineDuration"}, {"original_string": "private final WindSpeed windSpeed = new WindSpeed(1.1, SpeedType.KILOMETER_PER_HOUR);", "modifier": "private final", "type": "WindSpeed", "declarator": "windSpeed = new WindSpeed(1.1, SpeedType.KILOMETER_PER_HOUR)", "var_name": "windSpeed"}, {"original_string": "private final WindDirection windDirection = new WindDirection(45.0, AngleType.DEGREE);", "modifier": "private final", "type": "WindDirection", "declarator": "windDirection = new WindDirection(45.0, AngleType.DEGREE)", "var_name": "windDirection"}, {"original_string": "private final int cloudCoverInPercent = 12;", "modifier": "private final", "type": "int", "declarator": "cloudCoverInPercent = 12", "var_name": "cloudCoverInPercent"}, {"original_string": "private final TotalSolarRadiation totalSolarRadiation = new TotalSolarRadiation(38.9, RadiationType.JOULE_PER_SQUARE_CENTIMETER);", "modifier": "private final", "type": "TotalSolarRadiation", "declarator": "totalSolarRadiation = new TotalSolarRadiation(38.9, RadiationType.JOULE_PER_SQUARE_CENTIMETER)", "var_name": "totalSolarRadiation"}, {"original_string": "private final Location location = new Location(\"Erlangen\", Location.UNKNOWN, null);", "modifier": "private final", "type": "Location", "declarator": "location = new Location(\"Erlangen\", Location.UNKNOWN, null)", "var_name": "location"}, {"original_string": "private final Instant timestamp = Instant.ofEpochSecond(1534332000);", "modifier": "private final", "type": "Instant", "declarator": "timestamp = Instant.ofEpochSecond(1534332000)", "var_name": "timestamp"}, {"original_string": "private final ExtendedWeather weather = new ExtendedWeather(\n\t\t\"42\",\n\t\ttemperature,\n\t\tpressure,\n\t\t45,\n\t\tprecipitationDuration,\n\t\tprecipitationHeight,\n\t\tsunshineDuration,\n\t\twindSpeed,\n\t\twindDirection,\n\t\tcloudCoverInPercent,\n\t\ttotalSolarRadiation,\n\t\ttimestamp,\n\t\tlocation\n\t);", "modifier": "private final", "type": "ExtendedWeather", "declarator": "weather = new ExtendedWeather(\n\t\t\"42\",\n\t\ttemperature,\n\t\tpressure,\n\t\t45,\n\t\tprecipitationDuration,\n\t\tprecipitationHeight,\n\t\tsunshineDuration,\n\t\twindSpeed,\n\t\twindDirection,\n\t\tcloudCoverInPercent,\n\t\ttotalSolarRadiation,\n\t\ttimestamp,\n\t\tlocation\n\t)", "var_name": "weather"}], "file": "server/src/test/java/org/jvalue/ods/processor/adapter/domain/weather/models/extended/ExtendedWeatherTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEquals() {\n\t\tTemperature temperature = new Temperature(32.0, TemperatureType.CELSIUS);\n\t\tPressure pressure = new Pressure(1020, PressureType.H_PA);\n\t\tPrecipitationDuration precipitationDuration = new PrecipitationDuration(1.0, DurationType.HOUR);\n\t\tPrecipitationHeight precipitationHeight = new PrecipitationHeight(2.0, LengthType.CENTIMETER);\n\t\tSunshineDuration sunshineDuration = new SunshineDuration(3.14, DurationType.HOUR);\n\t\tWindSpeed windSpeed = new WindSpeed(1.1, SpeedType.KILOMETER_PER_HOUR);\n\t\tWindDirection windDirection = new WindDirection(45.0, AngleType.DEGREE);\n\t\tint cloudCoverInPercent = 12;\n\t\tTotalSolarRadiation totalSolarRadiation = new TotalSolarRadiation(38.9, RadiationType.JOULE_PER_SQUARE_CENTIMETER);\n\t\tLocation location = new Location(\"Erlangen\", Location.UNKNOWN, null);\n\t\tInstant timestamp = Instant.ofEpochSecond(1534332000);\n\n\t\tExtendedWeather other = new ExtendedWeather(\n\t\t\t\"42\",\n\t\t\ttemperature,\n\t\t\tpressure,\n\t\t\t45,\n\t\t\tprecipitationDuration,\n\t\t\tprecipitationHeight,\n\t\t\tsunshineDuration,\n\t\t\twindSpeed,\n\t\t\twindDirection,\n\t\t\tcloudCoverInPercent,\n\t\t\ttotalSolarRadiation,\n\t\t\ttimestamp,\n\t\t\tlocation\n\t\t);\n\n\t\tAssert.assertEquals(weather, other);\n\t}", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "ExtendedWeatherTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["ofEpochSecond", "assertEquals"]}, "focal_class": {"identifier": "ExtendedWeather", "superclass": "extends Weather", "interfaces": "", "fields": [{"original_string": "private final PrecipitationDuration precipitationDuration;", "modifier": "private final", "type": "PrecipitationDuration", "declarator": "precipitationDuration", "var_name": "precipitationDuration"}, {"original_string": "private final PrecipitationHeight precipitationHeight;", "modifier": "private final", "type": "PrecipitationHeight", "declarator": "precipitationHeight", "var_name": "precipitationHeight"}, {"original_string": "private final SunshineDuration sunshineDuration;", "modifier": "private final", "type": "SunshineDuration", "declarator": "sunshineDuration", "var_name": "sunshineDuration"}, {"original_string": "private final WindSpeed windSpeed;", "modifier": "private final", "type": "WindSpeed", "declarator": "windSpeed", "var_name": "windSpeed"}, {"original_string": "private final WindDirection windDirection;", "modifier": "private final", "type": "WindDirection", "declarator": "windDirection", "var_name": "windDirection"}, {"original_string": "private final int cloudCoverInPercent;", "modifier": "private final", "type": "int", "declarator": "cloudCoverInPercent", "var_name": "cloudCoverInPercent"}, {"original_string": "private final TotalSolarRadiation totalSolarRadiation;", "modifier": "private final", "type": "TotalSolarRadiation", "declarator": "totalSolarRadiation", "var_name": "totalSolarRadiation"}], "methods": [{"identifier": "ExtendedWeather", "parameters": "(\n\t\t@JsonProperty(\"stationId\") String stationId,\n\t\t@JsonProperty(\"temperature\") Temperature temperature,\n\t\t@JsonProperty(\"pressure\") Pressure pressure,\n\t\t@JsonProperty(\"humidityInPercent\") int humidityInPercent,\n\t\t@JsonProperty(\"precipitationDuration\") PrecipitationDuration precipitationDuration,\n\t\t@JsonProperty(\"precipitationHeight\") PrecipitationHeight precipitationHeight,\n\t\t@JsonProperty(\"sunshineDuration\") SunshineDuration sunshineDuration,\n\t\t@JsonProperty(\"windSpeed\") WindSpeed windSpeed,\n\t\t@JsonProperty(\"windDirection\") WindDirection windDirection,\n\t\t@JsonProperty(\"cloudCoverInPercent\") int cloudCoverInPercent,\n\t\t@JsonProperty(\"totalSolarRadiation\") TotalSolarRadiation totalSolarRadiation,\n\t\t@JsonProperty(\"timestamp\") Instant timestamp,\n\t\t@JsonProperty(\"location\") Location location)", "modifiers": "@JsonCreator public", "return": "", "signature": " ExtendedWeather(\n\t\t@JsonProperty(\"stationId\") String stationId,\n\t\t@JsonProperty(\"temperature\") Temperature temperature,\n\t\t@JsonProperty(\"pressure\") Pressure pressure,\n\t\t@JsonProperty(\"humidityInPercent\") int humidityInPercent,\n\t\t@JsonProperty(\"precipitationDuration\") PrecipitationDuration precipitationDuration,\n\t\t@JsonProperty(\"precipitationHeight\") PrecipitationHeight precipitationHeight,\n\t\t@JsonProperty(\"sunshineDuration\") SunshineDuration sunshineDuration,\n\t\t@JsonProperty(\"windSpeed\") WindSpeed windSpeed,\n\t\t@JsonProperty(\"windDirection\") WindDirection windDirection,\n\t\t@JsonProperty(\"cloudCoverInPercent\") int cloudCoverInPercent,\n\t\t@JsonProperty(\"totalSolarRadiation\") TotalSolarRadiation totalSolarRadiation,\n\t\t@JsonProperty(\"timestamp\") Instant timestamp,\n\t\t@JsonProperty(\"location\") Location location)", "full_signature": "@JsonCreator public  ExtendedWeather(\n\t\t@JsonProperty(\"stationId\") String stationId,\n\t\t@JsonProperty(\"temperature\") Temperature temperature,\n\t\t@JsonProperty(\"pressure\") Pressure pressure,\n\t\t@JsonProperty(\"humidityInPercent\") int humidityInPercent,\n\t\t@JsonProperty(\"precipitationDuration\") PrecipitationDuration precipitationDuration,\n\t\t@JsonProperty(\"precipitationHeight\") PrecipitationHeight precipitationHeight,\n\t\t@JsonProperty(\"sunshineDuration\") SunshineDuration sunshineDuration,\n\t\t@JsonProperty(\"windSpeed\") WindSpeed windSpeed,\n\t\t@JsonProperty(\"windDirection\") WindDirection windDirection,\n\t\t@JsonProperty(\"cloudCoverInPercent\") int cloudCoverInPercent,\n\t\t@JsonProperty(\"totalSolarRadiation\") TotalSolarRadiation totalSolarRadiation,\n\t\t@JsonProperty(\"timestamp\") Instant timestamp,\n\t\t@JsonProperty(\"location\") Location location)", "class_method_signature": "ExtendedWeather.ExtendedWeather(\n\t\t@JsonProperty(\"stationId\") String stationId,\n\t\t@JsonProperty(\"temperature\") Temperature temperature,\n\t\t@JsonProperty(\"pressure\") Pressure pressure,\n\t\t@JsonProperty(\"humidityInPercent\") int humidityInPercent,\n\t\t@JsonProperty(\"precipitationDuration\") PrecipitationDuration precipitationDuration,\n\t\t@JsonProperty(\"precipitationHeight\") PrecipitationHeight precipitationHeight,\n\t\t@JsonProperty(\"sunshineDuration\") SunshineDuration sunshineDuration,\n\t\t@JsonProperty(\"windSpeed\") WindSpeed windSpeed,\n\t\t@JsonProperty(\"windDirection\") WindDirection windDirection,\n\t\t@JsonProperty(\"cloudCoverInPercent\") int cloudCoverInPercent,\n\t\t@JsonProperty(\"totalSolarRadiation\") TotalSolarRadiation totalSolarRadiation,\n\t\t@JsonProperty(\"timestamp\") Instant timestamp,\n\t\t@JsonProperty(\"location\") Location location)", "testcase": false, "constructor": true}, {"identifier": "getPrecipitationDuration", "parameters": "()", "modifiers": "public", "return": "PrecipitationDuration", "signature": "PrecipitationDuration getPrecipitationDuration()", "full_signature": "public PrecipitationDuration getPrecipitationDuration()", "class_method_signature": "ExtendedWeather.getPrecipitationDuration()", "testcase": false, "constructor": false}, {"identifier": "getPrecipitationHeight", "parameters": "()", "modifiers": "public", "return": "PrecipitationHeight", "signature": "PrecipitationHeight getPrecipitationHeight()", "full_signature": "public PrecipitationHeight getPrecipitationHeight()", "class_method_signature": "ExtendedWeather.getPrecipitationHeight()", "testcase": false, "constructor": false}, {"identifier": "getSunshineDuration", "parameters": "()", "modifiers": "public", "return": "SunshineDuration", "signature": "SunshineDuration getSunshineDuration()", "full_signature": "public SunshineDuration getSunshineDuration()", "class_method_signature": "ExtendedWeather.getSunshineDuration()", "testcase": false, "constructor": false}, {"identifier": "getWindSpeed", "parameters": "()", "modifiers": "public", "return": "WindSpeed", "signature": "WindSpeed getWindSpeed()", "full_signature": "public WindSpeed getWindSpeed()", "class_method_signature": "ExtendedWeather.getWindSpeed()", "testcase": false, "constructor": false}, {"identifier": "getWindDirection", "parameters": "()", "modifiers": "public", "return": "WindDirection", "signature": "WindDirection getWindDirection()", "full_signature": "public WindDirection getWindDirection()", "class_method_signature": "ExtendedWeather.getWindDirection()", "testcase": false, "constructor": false}, {"identifier": "getCloudCoverInPercent", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCloudCoverInPercent()", "full_signature": "public int getCloudCoverInPercent()", "class_method_signature": "ExtendedWeather.getCloudCoverInPercent()", "testcase": false, "constructor": false}, {"identifier": "getTotalSolarRadiation", "parameters": "()", "modifiers": "public", "return": "TotalSolarRadiation", "signature": "TotalSolarRadiation getTotalSolarRadiation()", "full_signature": "public TotalSolarRadiation getTotalSolarRadiation()", "class_method_signature": "ExtendedWeather.getTotalSolarRadiation()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ExtendedWeather.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ExtendedWeather.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/adapter/domain/weather/models/extended/ExtendedWeather.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (!(o instanceof ExtendedWeather)) return false;\n\t\tif (!super.equals(o)) return false;\n\t\tExtendedWeather that = (ExtendedWeather) o;\n\t\treturn cloudCoverInPercent == that.cloudCoverInPercent &&\n\t\t\tObjects.equals(precipitationDuration, that.precipitationDuration) &&\n\t\t\tObjects.equals(precipitationHeight, that.precipitationHeight) &&\n\t\t\tObjects.equals(sunshineDuration, that.sunshineDuration) &&\n\t\t\tObjects.equals(windSpeed, that.windSpeed) &&\n\t\t\tObjects.equals(windDirection, that.windDirection) &&\n\t\t\tObjects.equals(totalSolarRadiation, that.totalSolarRadiation);\n\t}", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ExtendedWeather.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equals", "equals", "equals", "equals"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}