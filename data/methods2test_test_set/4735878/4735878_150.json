{"test_class": {"identifier": "VersionFinderTest", "superclass": "extends AbstractWMSTest", "interfaces": "", "fields": [], "file": "wms-client/src/test/java/com/vividsolutions/wms/VersionFinderTest.java"}, "test_case": {"identifier": "testFindVersion_1_3_0", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindVersion_1_3_0() throws Exception {\n        Document doc = getDocument(CAPABILITIES_1_3_0);\n        String vers = VersionFinder.findVersion(doc);\n        assertTrue(WMService.WMS_1_3_0.equals(vers));\n    }", "signature": "void testFindVersion_1_3_0()", "full_signature": "@Test public void testFindVersion_1_3_0()", "class_method_signature": "VersionFinderTest.testFindVersion_1_3_0()", "testcase": true, "constructor": false, "invocations": ["getDocument", "findVersion", "assertTrue", "equals"]}, "focal_class": {"identifier": "VersionFinder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "VersionFinder", "parameters": "()", "modifiers": "public", "return": "", "signature": " VersionFinder()", "full_signature": "public  VersionFinder()", "class_method_signature": "VersionFinder.VersionFinder()", "testcase": false, "constructor": true}, {"identifier": "findVersion", "parameters": "(Document doc)", "modifiers": "public static", "return": "String", "signature": "String findVersion(Document doc)", "full_signature": "public static String findVersion(Document doc)", "class_method_signature": "VersionFinder.findVersion(Document doc)", "testcase": false, "constructor": false}], "file": "wms-client/src/main/java/com/vividsolutions/wms/VersionFinder.java"}, "focal_method": {"identifier": "findVersion", "parameters": "(Document doc)", "modifiers": "public static", "return": "String", "body": "public static String findVersion(Document doc) {\n        String foundVersion = WMService.WMS_1_1_1;\n        Node simpleXPath = XMLTools.simpleXPath(doc, \"WMT_MS_Capabilities\");\n        if (simpleXPath != null) {\n            NamedNodeMap attributes = simpleXPath.getAttributes();\n            Node namedItem = attributes.getNamedItem(\"version\");\n            if (WMService.WMS_1_1_1.equals(namedItem.getNodeValue())\n                    || WMService.WMS_1_1_0.equals(namedItem.getNodeValue())) {\n                foundVersion = WMService.WMS_1_1_1;\n            } else {\n                foundVersion = WMService.WMS_1_0_0;\n            }\n        }\n        simpleXPath = XMLTools.simpleXPath(doc, \"WMS_Capabilities\");\n        if (simpleXPath != null) {\n            NamedNodeMap attributes = simpleXPath.getAttributes();\n            Node namedItem = attributes.getNamedItem(\"version\");\n            if (WMService.WMS_1_3_0.equals(namedItem.getNodeValue())) {\n                foundVersion = WMService.WMS_1_3_0;\n            }\n        }\n        return foundVersion;\n    }", "signature": "String findVersion(Document doc)", "full_signature": "public static String findVersion(Document doc)", "class_method_signature": "VersionFinder.findVersion(Document doc)", "testcase": false, "constructor": false, "invocations": ["simpleXPath", "getAttributes", "getNamedItem", "equals", "getNodeValue", "equals", "getNodeValue", "simpleXPath", "getAttributes", "getNamedItem", "equals", "getNodeValue"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}