{"test_class": {"identifier": "DbSetupTest", "superclass": "", "interfaces": "", "fields": [], "file": "DbSetup-core/src/test/java/com/ninja_squad/dbsetup/DbSetupTest.java"}, "test_case": {"identifier": "toStringWorks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toStringWorks() throws SQLException {\n        Destination destination1 = mock(Destination.class);\n        when(destination1.toString()).thenReturn(\"destination1\");\n        Operation operation1 = mock(Operation.class);\n        when(operation1.toString()).thenReturn(\"operation1\");\n        BinderConfiguration config1 = mock(BinderConfiguration.class);\n        when(config1.toString()).thenReturn(\"config1\");\n\n        DbSetup setup1 = new DbSetup(destination1, operation1, config1);\n        assertEquals(\"DbSetup [destination=destination1, operation=operation1, binderConfiguration=config1]\",\n                     setup1.toString());\n    }", "signature": "void toStringWorks()", "full_signature": "@Test public void toStringWorks()", "class_method_signature": "DbSetupTest.toStringWorks()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "toString", "mock", "thenReturn", "when", "toString", "mock", "thenReturn", "when", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "DbSetup", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Destination destination;", "modifier": "private final", "type": "Destination", "declarator": "destination", "var_name": "destination"}, {"original_string": "private final Operation operation;", "modifier": "private final", "type": "Operation", "declarator": "operation", "var_name": "operation"}, {"original_string": "private final BinderConfiguration binderConfiguration;", "modifier": "private final", "type": "BinderConfiguration", "declarator": "binderConfiguration", "var_name": "binderConfiguration"}], "methods": [{"identifier": "DbSetup", "parameters": "(@Nonnull Destination destination, @Nonnull Operation operation)", "modifiers": "public", "return": "", "signature": " DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "full_signature": "public  DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "class_method_signature": "DbSetup.DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "testcase": false, "constructor": true}, {"identifier": "DbSetup", "parameters": "(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "modifiers": "public", "return": "", "signature": " DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "full_signature": "public  DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "class_method_signature": "DbSetup.DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "testcase": false, "constructor": true}, {"identifier": "launch", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void launch()", "full_signature": "public void launch()", "class_method_signature": "DbSetup.launch()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DbSetup.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DbSetup.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DbSetup.equals(Object obj)", "testcase": false, "constructor": false}], "file": "DbSetup-core/src/main/java/com/ninja_squad/dbsetup/DbSetup.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return \"DbSetup [destination=\"\n               + destination\n               + \", operation=\"\n               + operation\n               + \", binderConfiguration=\"\n               + binderConfiguration\n               + \"]\";\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DbSetup.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4260851, "url": "https://github.com/Ninja-Squad/DbSetup", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 183, "size": 1379, "license": "licensed"}}