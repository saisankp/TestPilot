{"test_class": {"identifier": "BeanFactoryAwareIntervalConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private IntervalConverter intervalConverter;", "modifier": "@Autowired\n  private", "type": "IntervalConverter", "declarator": "intervalConverter", "var_name": "intervalConverter"}], "file": "distributed-lock-core/src/test/java/com/github/alturkovic/lock/interval/BeanFactoryAwareIntervalConverterTest.java"}, "test_case": {"identifier": "shouldResolveStatic", "parameters": "()", "modifiers": "@Test @Interval(value = \"10\") public", "return": "void", "body": "@Test\n  @Interval(value = \"10\")\n  public void shouldResolveStatic() {\n    assertThat(intervalConverter.toMillis(new Object() {}.getClass().getEnclosingMethod().getAnnotation(Interval.class)))\n      .isEqualTo(10);\n  }", "signature": "void shouldResolveStatic()", "full_signature": "@Test @Interval(value = \"10\") public void shouldResolveStatic()", "class_method_signature": "BeanFactoryAwareIntervalConverterTest.shouldResolveStatic()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toMillis", "getAnnotation", "getEnclosingMethod", "getClass"]}, "focal_class": {"identifier": "BeanFactoryAwareIntervalConverter", "superclass": "", "interfaces": "implements IntervalConverter", "fields": [{"original_string": "private final ConfigurableBeanFactory beanFactory;", "modifier": "private final", "type": "ConfigurableBeanFactory", "declarator": "beanFactory", "var_name": "beanFactory"}], "methods": [{"identifier": "toMillis", "parameters": "(final Interval interval)", "modifiers": "@Override public", "return": "long", "signature": "long toMillis(final Interval interval)", "full_signature": "@Override public long toMillis(final Interval interval)", "class_method_signature": "BeanFactoryAwareIntervalConverter.toMillis(final Interval interval)", "testcase": false, "constructor": false}, {"identifier": "resolveMilliseconds", "parameters": "(final Interval interval)", "modifiers": "private", "return": "String", "signature": "String resolveMilliseconds(final Interval interval)", "full_signature": "private String resolveMilliseconds(final Interval interval)", "class_method_signature": "BeanFactoryAwareIntervalConverter.resolveMilliseconds(final Interval interval)", "testcase": false, "constructor": false}, {"identifier": "convertToMilliseconds", "parameters": "(final Interval interval, final String value)", "modifiers": "private", "return": "long", "signature": "long convertToMilliseconds(final Interval interval, final String value)", "full_signature": "private long convertToMilliseconds(final Interval interval, final String value)", "class_method_signature": "BeanFactoryAwareIntervalConverter.convertToMilliseconds(final Interval interval, final String value)", "testcase": false, "constructor": false}], "file": "distributed-lock-core/src/main/java/com/github/alturkovic/lock/interval/BeanFactoryAwareIntervalConverter.java"}, "focal_method": {"identifier": "toMillis", "parameters": "(final Interval interval)", "modifiers": "@Override public", "return": "long", "body": "@Override\n  public long toMillis(final Interval interval) {\n    return convertToMilliseconds(interval, resolveMilliseconds(interval));\n  }", "signature": "long toMillis(final Interval interval)", "full_signature": "@Override public long toMillis(final Interval interval)", "class_method_signature": "BeanFactoryAwareIntervalConverter.toMillis(final Interval interval)", "testcase": false, "constructor": false, "invocations": ["convertToMilliseconds", "resolveMilliseconds"]}, "repository": {"repo_id": 93310060, "url": "https://github.com/alturkovic/distributed-lock", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 77, "size": 282, "license": "licensed"}}