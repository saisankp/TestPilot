{"test_class": {"identifier": "CollectThenSystemContentTypeMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    public MimeTypeMap mimeTypeMap;", "modifier": "@Mock\n    public", "type": "MimeTypeMap", "declarator": "mimeTypeMap", "var_name": "mimeTypeMap"}, {"original_string": "private CollectThenSystemContentTypeMapper mapper;", "modifier": "private", "type": "CollectThenSystemContentTypeMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "collect_app/src/test/java/org/odk/collect/android/http/CollectThenSystemContentTypeMapperTest.java"}, "test_case": {"identifier": "whenExtensionIsRecognized_returnsTypeForFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenExtensionIsRecognized_returnsTypeForFile() {\n        assertEquals(\"text/xml\", mapper.map(\"file.xml\"));\n        assertEquals(\"audio/3gpp\", mapper.map(\"file.3gpp\"));\n        assertEquals(\"video/3gpp\", mapper.map(\"file.3gp\"));\n        assertEquals(\"video/avi\", mapper.map(\"file.avi\"));\n        assertEquals(\"audio/amr\", mapper.map(\"file.amr\"));\n        assertEquals(\"text/csv\", mapper.map(\"file.csv\"));\n        assertEquals(\"image/jpeg\", mapper.map(\"file.jpg\"));\n        assertEquals(\"audio/mp3\", mapper.map(\"file.mp3\"));\n        assertEquals(\"video/mp4\", mapper.map(\"file.mp4\"));\n        assertEquals(\"audio/ogg\", mapper.map(\"file.oga\"));\n        assertEquals(\"audio/ogg\", mapper.map(\"file.ogg\"));\n        assertEquals(\"video/ogg\", mapper.map(\"file.ogv\"));\n        assertEquals(\"audio/wav\", mapper.map(\"file.wav\"));\n        assertEquals(\"video/webm\", mapper.map(\"file.webm\"));\n        assertEquals(\"application/vnd.ms-excel\", mapper.map(\"file.xls\"));\n    }", "signature": "void whenExtensionIsRecognized_returnsTypeForFile()", "full_signature": "@Test public void whenExtensionIsRecognized_returnsTypeForFile()", "class_method_signature": "CollectThenSystemContentTypeMapperTest.whenExtensionIsRecognized_returnsTypeForFile()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map", "assertEquals", "map"]}, "focal_class": {"identifier": "CollectThenSystemContentTypeMapper", "superclass": "", "interfaces": "implements OpenRosaHttpInterface.FileToContentTypeMapper", "fields": [{"original_string": "private final MimeTypeMap androidTypeMap;", "modifier": "private final", "type": "MimeTypeMap", "declarator": "androidTypeMap", "var_name": "androidTypeMap"}], "methods": [{"identifier": "CollectThenSystemContentTypeMapper", "parameters": "(MimeTypeMap androidTypeMap)", "modifiers": "public", "return": "", "signature": " CollectThenSystemContentTypeMapper(MimeTypeMap androidTypeMap)", "full_signature": "public  CollectThenSystemContentTypeMapper(MimeTypeMap androidTypeMap)", "class_method_signature": "CollectThenSystemContentTypeMapper.CollectThenSystemContentTypeMapper(MimeTypeMap androidTypeMap)", "testcase": false, "constructor": true}, {"identifier": "map", "parameters": "(String fileName)", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String map(String fileName)", "full_signature": "@NonNull @Override public String map(String fileName)", "class_method_signature": "CollectThenSystemContentTypeMapper.map(String fileName)", "testcase": false, "constructor": false}], "file": "collect_app/src/main/java/org/odk/collect/android/http/CollectThenSystemContentTypeMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(String fileName)", "modifiers": "@NonNull @Override public", "return": "String", "body": "@NonNull\n    @Override\n    public String map(String fileName) {\n        String extension = FileUtils.getFileExtension(fileName);\n\n        String collectContentType = CollectContentTypeMappings.of(extension);\n        String androidContentType = androidTypeMap.getMimeTypeFromExtension(extension);\n\n        if (collectContentType != null) {\n            return collectContentType;\n        } else if (androidContentType != null) {\n            return androidContentType;\n        } else {\n            return \"application/octet-stream\";\n        }\n    }", "signature": "String map(String fileName)", "full_signature": "@NonNull @Override public String map(String fileName)", "class_method_signature": "CollectThenSystemContentTypeMapper.map(String fileName)", "testcase": false, "constructor": false, "invocations": ["getFileExtension", "of", "getMimeTypeFromExtension"]}, "repository": {"repo_id": 166636413, "url": "https://github.com/fieldsight/fieldsight-mobile", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 41030, "license": "licensed"}}