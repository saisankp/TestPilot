{"test_class": {"identifier": "ListServicesCommandTest", "superclass": "", "interfaces": "", "fields": [], "file": "karaf/commands/src/test/java/com/axemblr/provisionr/commands/ListServicesCommandTest.java"}, "test_case": {"identifier": "testListServices", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListServices() throws Exception {\n        List<Provisionr> services = ImmutableList.of(\n            newProvisionrMockWithId(\"p1\"),\n            newProvisionrMockWithId(\"p2\")\n        );\n\n        ListServicesCommand command = new ListServicesCommand(services);\n\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        PrintStream out = new PrintStream(outputStream);\n        command.setOut(out);\n\n        CommandSession session = mock(CommandSession.class);\n        command.execute(session);\n        out.close();\n\n        for (Provisionr service : services) {\n            verify(service).getId();\n        }\n\n        assertThat(outputStream.toString()).isEqualTo(\"Services: p1, p2\\n\");\n    }", "signature": "void testListServices()", "full_signature": "@Test public void testListServices()", "class_method_signature": "ListServicesCommandTest.testListServices()", "testcase": true, "constructor": false, "invocations": ["of", "newProvisionrMockWithId", "newProvisionrMockWithId", "setOut", "mock", "execute", "close", "getId", "verify", "isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "ListServicesCommand", "superclass": "extends OsgiCommandSupport", "interfaces": "", "fields": [{"original_string": "private PrintStream out = System.out;", "modifier": "private", "type": "PrintStream", "declarator": "out = System.out", "var_name": "out"}, {"original_string": "private final List<Provisionr> services;", "modifier": "private final", "type": "List<Provisionr>", "declarator": "services", "var_name": "services"}], "methods": [{"identifier": "ListServicesCommand", "parameters": "(List<Provisionr> services)", "modifiers": "public", "return": "", "signature": " ListServicesCommand(List<Provisionr> services)", "full_signature": "public  ListServicesCommand(List<Provisionr> services)", "class_method_signature": "ListServicesCommand.ListServicesCommand(List<Provisionr> services)", "testcase": false, "constructor": true}, {"identifier": "doExecute", "parameters": "()", "modifiers": "@Override protected", "return": "Object", "signature": "Object doExecute()", "full_signature": "@Override protected Object doExecute()", "class_method_signature": "ListServicesCommand.doExecute()", "testcase": false, "constructor": false}, {"identifier": "setOut", "parameters": "(PrintStream out)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void setOut(PrintStream out)", "full_signature": "@VisibleForTesting void setOut(PrintStream out)", "class_method_signature": "ListServicesCommand.setOut(PrintStream out)", "testcase": false, "constructor": false}], "file": "karaf/commands/src/main/java/com/axemblr/provisionr/commands/ListServicesCommand.java"}, "focal_method": {"identifier": "setOut", "parameters": "(PrintStream out)", "modifiers": "@VisibleForTesting", "return": "void", "body": "@VisibleForTesting\n    void setOut(PrintStream out) {\n        this.out = checkNotNull(out, \"out is null\");\n    }", "signature": "void setOut(PrintStream out)", "full_signature": "@VisibleForTesting void setOut(PrintStream out)", "class_method_signature": "ListServicesCommand.setOut(PrintStream out)", "testcase": false, "constructor": false, "invocations": ["checkNotNull"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}