{"test_class": {"identifier": "QueryTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/query/QueryTest.java"}, "test_case": {"identifier": "validRestrictionParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validRestrictionParameters()\n    {\n        Query query = Query.from( createSchema() );\n        query.add( Restrictions.eq( \"id\", \"anc\" ) );\n        query.add( Restrictions.like( \"name\", \"anc\", MatchMode.ANYWHERE ) );\n        query.add( Restrictions.eq( \"code\", \"anc\" ) );\n\n        assertEquals( 3, query.getCriterions().size() );\n    }", "signature": "void validRestrictionParameters()", "full_signature": "@Test public void validRestrictionParameters()", "class_method_signature": "QueryTest.validRestrictionParameters()", "testcase": true, "constructor": false, "invocations": ["from", "createSchema", "add", "eq", "add", "like", "add", "eq", "assertEquals", "size", "getCriterions"]}, "focal_class": {"identifier": "Query", "superclass": "extends Criteria", "interfaces": "", "fields": [{"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private String locale;", "modifier": "private", "type": "String", "declarator": "locale", "var_name": "locale"}, {"original_string": "private List<Order> orders = new ArrayList<>();", "modifier": "private", "type": "List<Order>", "declarator": "orders = new ArrayList<>()", "var_name": "orders"}, {"original_string": "private boolean skipPaging;", "modifier": "private", "type": "boolean", "declarator": "skipPaging", "var_name": "skipPaging"}, {"original_string": "private Integer firstResult = 0;", "modifier": "private", "type": "Integer", "declarator": "firstResult = 0", "var_name": "firstResult"}, {"original_string": "private Integer maxResults = Integer.MAX_VALUE;", "modifier": "private", "type": "Integer", "declarator": "maxResults = Integer.MAX_VALUE", "var_name": "maxResults"}, {"original_string": "private Junction.Type rootJunctionType = Junction.Type.AND;", "modifier": "private", "type": "Junction.Type", "declarator": "rootJunctionType = Junction.Type.AND", "var_name": "rootJunctionType"}, {"original_string": "private boolean plannedQuery;", "modifier": "private", "type": "boolean", "declarator": "plannedQuery", "var_name": "plannedQuery"}, {"original_string": "private Defaults defaults = Defaults.EXCLUDE;", "modifier": "private", "type": "Defaults", "declarator": "defaults = Defaults.EXCLUDE", "var_name": "defaults"}, {"original_string": "private List<? extends IdentifiableObject> objects;", "modifier": "private", "type": "List<? extends IdentifiableObject>", "declarator": "objects", "var_name": "objects"}], "methods": [{"identifier": "from", "parameters": "( Schema schema )", "modifiers": "public static", "return": "Query", "signature": "Query from( Schema schema )", "full_signature": "public static Query from( Schema schema )", "class_method_signature": "Query.from( Schema schema )", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "( Schema schema, Junction.Type rootJunction )", "modifiers": "public static", "return": "Query", "signature": "Query from( Schema schema, Junction.Type rootJunction )", "full_signature": "public static Query from( Schema schema, Junction.Type rootJunction )", "class_method_signature": "Query.from( Schema schema, Junction.Type rootJunction )", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "( Query query )", "modifiers": "public static", "return": "Query", "signature": "Query from( Query query )", "full_signature": "public static Query from( Query query )", "class_method_signature": "Query.from( Query query )", "testcase": false, "constructor": false}, {"identifier": "Query", "parameters": "( Schema schema )", "modifiers": "private", "return": "", "signature": " Query( Schema schema )", "full_signature": "private  Query( Schema schema )", "class_method_signature": "Query.Query( Schema schema )", "testcase": false, "constructor": true}, {"identifier": "Query", "parameters": "( Schema schema, Junction.Type rootJunctionType )", "modifiers": "private", "return": "", "signature": " Query( Schema schema, Junction.Type rootJunctionType )", "full_signature": "private  Query( Schema schema, Junction.Type rootJunctionType )", "class_method_signature": "Query.Query( Schema schema, Junction.Type rootJunctionType )", "testcase": false, "constructor": true}, {"identifier": "getSchema", "parameters": "()", "modifiers": "public", "return": "Schema", "signature": "Schema getSchema()", "full_signature": "public Schema getSchema()", "class_method_signature": "Query.getSchema()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Query.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getOrders", "parameters": "()", "modifiers": "public", "return": "List<Order>", "signature": "List<Order> getOrders()", "full_signature": "public List<Order> getOrders()", "class_method_signature": "Query.getOrders()", "testcase": false, "constructor": false}, {"identifier": "ordersPersisted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean ordersPersisted()", "full_signature": "public boolean ordersPersisted()", "class_method_signature": "Query.ordersPersisted()", "testcase": false, "constructor": false}, {"identifier": "clearOrders", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearOrders()", "full_signature": "public void clearOrders()", "class_method_signature": "Query.clearOrders()", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "User", "signature": "User getUser()", "full_signature": "public User getUser()", "class_method_signature": "Query.getUser()", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "( User user )", "modifiers": "public", "return": "Query", "signature": "Query setUser( User user )", "full_signature": "public Query setUser( User user )", "class_method_signature": "Query.setUser( User user )", "testcase": false, "constructor": false}, {"identifier": "getLocale", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocale()", "full_signature": "public String getLocale()", "class_method_signature": "Query.getLocale()", "testcase": false, "constructor": false}, {"identifier": "hasLocale", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasLocale()", "full_signature": "public boolean hasLocale()", "class_method_signature": "Query.hasLocale()", "testcase": false, "constructor": false}, {"identifier": "setLocale", "parameters": "( String locale )", "modifiers": "public", "return": "void", "signature": "void setLocale( String locale )", "full_signature": "public void setLocale( String locale )", "class_method_signature": "Query.setLocale( String locale )", "testcase": false, "constructor": false}, {"identifier": "isSkipPaging", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSkipPaging()", "full_signature": "public boolean isSkipPaging()", "class_method_signature": "Query.isSkipPaging()", "testcase": false, "constructor": false}, {"identifier": "setSkipPaging", "parameters": "( boolean skipPaging )", "modifiers": "public", "return": "Query", "signature": "Query setSkipPaging( boolean skipPaging )", "full_signature": "public Query setSkipPaging( boolean skipPaging )", "class_method_signature": "Query.setSkipPaging( boolean skipPaging )", "testcase": false, "constructor": false}, {"identifier": "getFirstResult", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getFirstResult()", "full_signature": "public Integer getFirstResult()", "class_method_signature": "Query.getFirstResult()", "testcase": false, "constructor": false}, {"identifier": "setFirstResult", "parameters": "( Integer firstResult )", "modifiers": "public", "return": "Query", "signature": "Query setFirstResult( Integer firstResult )", "full_signature": "public Query setFirstResult( Integer firstResult )", "class_method_signature": "Query.setFirstResult( Integer firstResult )", "testcase": false, "constructor": false}, {"identifier": "getMaxResults", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getMaxResults()", "full_signature": "public Integer getMaxResults()", "class_method_signature": "Query.getMaxResults()", "testcase": false, "constructor": false}, {"identifier": "setMaxResults", "parameters": "( Integer maxResults )", "modifiers": "public", "return": "Query", "signature": "Query setMaxResults( Integer maxResults )", "full_signature": "public Query setMaxResults( Integer maxResults )", "class_method_signature": "Query.setMaxResults( Integer maxResults )", "testcase": false, "constructor": false}, {"identifier": "getRootJunctionType", "parameters": "()", "modifiers": "public", "return": "Junction.Type", "signature": "Junction.Type getRootJunctionType()", "full_signature": "public Junction.Type getRootJunctionType()", "class_method_signature": "Query.getRootJunctionType()", "testcase": false, "constructor": false}, {"identifier": "isPlannedQuery", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPlannedQuery()", "full_signature": "public boolean isPlannedQuery()", "class_method_signature": "Query.isPlannedQuery()", "testcase": false, "constructor": false}, {"identifier": "setPlannedQuery", "parameters": "( boolean plannedQuery )", "modifiers": "public", "return": "Query", "signature": "Query setPlannedQuery( boolean plannedQuery )", "full_signature": "public Query setPlannedQuery( boolean plannedQuery )", "class_method_signature": "Query.setPlannedQuery( boolean plannedQuery )", "testcase": false, "constructor": false}, {"identifier": "getDefaults", "parameters": "()", "modifiers": "public", "return": "Defaults", "signature": "Defaults getDefaults()", "full_signature": "public Defaults getDefaults()", "class_method_signature": "Query.getDefaults()", "testcase": false, "constructor": false}, {"identifier": "setDefaults", "parameters": "( Defaults defaults )", "modifiers": "public", "return": "Query", "signature": "Query setDefaults( Defaults defaults )", "full_signature": "public Query setDefaults( Defaults defaults )", "class_method_signature": "Query.setDefaults( Defaults defaults )", "testcase": false, "constructor": false}, {"identifier": "getObjects", "parameters": "()", "modifiers": "public", "return": "List<? extends IdentifiableObject>", "signature": "List<? extends IdentifiableObject> getObjects()", "full_signature": "public List<? extends IdentifiableObject> getObjects()", "class_method_signature": "Query.getObjects()", "testcase": false, "constructor": false}, {"identifier": "setObjects", "parameters": "( List<? extends IdentifiableObject> objects )", "modifiers": "public", "return": "Query", "signature": "Query setObjects( List<? extends IdentifiableObject> objects )", "full_signature": "public Query setObjects( List<? extends IdentifiableObject> objects )", "class_method_signature": "Query.setObjects( List<? extends IdentifiableObject> objects )", "testcase": false, "constructor": false}, {"identifier": "addOrder", "parameters": "( Order... orders )", "modifiers": "public", "return": "Query", "signature": "Query addOrder( Order... orders )", "full_signature": "public Query addOrder( Order... orders )", "class_method_signature": "Query.addOrder( Order... orders )", "testcase": false, "constructor": false}, {"identifier": "addOrders", "parameters": "( Collection<Order> orders )", "modifiers": "public", "return": "Query", "signature": "Query addOrders( Collection<Order> orders )", "full_signature": "public Query addOrders( Collection<Order> orders )", "class_method_signature": "Query.addOrders( Collection<Order> orders )", "testcase": false, "constructor": false}, {"identifier": "addDisjunction", "parameters": "()", "modifiers": "public", "return": "Disjunction", "signature": "Disjunction addDisjunction()", "full_signature": "public Disjunction addDisjunction()", "class_method_signature": "Query.addDisjunction()", "testcase": false, "constructor": false}, {"identifier": "disjunction", "parameters": "()", "modifiers": "public", "return": "Disjunction", "signature": "Disjunction disjunction()", "full_signature": "public Disjunction disjunction()", "class_method_signature": "Query.disjunction()", "testcase": false, "constructor": false}, {"identifier": "addConjunction", "parameters": "()", "modifiers": "public", "return": "Conjunction", "signature": "Conjunction addConjunction()", "full_signature": "public Conjunction addConjunction()", "class_method_signature": "Query.addConjunction()", "testcase": false, "constructor": false}, {"identifier": "conjunction", "parameters": "()", "modifiers": "public", "return": "Conjunction", "signature": "Conjunction conjunction()", "full_signature": "public Conjunction conjunction()", "class_method_signature": "Query.conjunction()", "testcase": false, "constructor": false}, {"identifier": "forceDefaultOrder", "parameters": "()", "modifiers": "public", "return": "Query", "signature": "Query forceDefaultOrder()", "full_signature": "public Query forceDefaultOrder()", "class_method_signature": "Query.forceDefaultOrder()", "testcase": false, "constructor": false}, {"identifier": "setDefaultOrder", "parameters": "()", "modifiers": "public", "return": "Query", "signature": "Query setDefaultOrder()", "full_signature": "public Query setDefaultOrder()", "class_method_signature": "Query.setDefaultOrder()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Query.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/Query.java"}, "focal_method": {"identifier": "from", "parameters": "( Schema schema )", "modifiers": "public static", "return": "Query", "body": "public static Query from( Schema schema )\n    {\n        return new Query( schema );\n    }", "signature": "Query from( Schema schema )", "full_signature": "public static Query from( Schema schema )", "class_method_signature": "Query.from( Schema schema )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}