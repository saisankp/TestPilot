{"test_class": {"identifier": "FileSystemUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Path testFolder;", "modifier": "private", "type": "Path", "declarator": "testFolder", "var_name": "testFolder"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/folder/store/file/FileSystemUtilsTest.java"}, "test_case": {"identifier": "hasEntry_testFolderHasDirectChild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hasEntry_testFolderHasDirectChild() throws Exception {\n        createEntry(testFolder.resolve(\"toto.dp\"), \"contentId\", \"folderId\", FolderContentType.PREPARATION);\n\n        assertTrue(FileSystemUtils.hasEntry(testFolder));\n    }", "signature": "void hasEntry_testFolderHasDirectChild()", "full_signature": "@Test public void hasEntry_testFolderHasDirectChild()", "class_method_signature": "FileSystemUtilsTest.hasEntry_testFolderHasDirectChild()", "testcase": true, "constructor": false, "invocations": ["createEntry", "resolve", "assertTrue", "hasEntry"]}, "focal_class": {"identifier": "FileSystemUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FileSystemUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " FileSystemUtils()", "full_signature": "private  FileSystemUtils()", "class_method_signature": "FileSystemUtils.FileSystemUtils()", "testcase": false, "constructor": true}, {"identifier": "countSubDirectories", "parameters": "(Path path)", "modifiers": "static", "return": "long", "signature": "long countSubDirectories(Path path)", "full_signature": "static long countSubDirectories(Path path)", "class_method_signature": "FileSystemUtils.countSubDirectories(Path path)", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "()", "modifiers": "static", "return": "Consumer<Path>", "signature": "Consumer<Path> deleteFile()", "full_signature": "static Consumer<Path> deleteFile()", "class_method_signature": "FileSystemUtils.deleteFile()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(Path pathFile, String contentId, FolderContentType contentType)", "modifiers": "static", "return": "boolean", "signature": "boolean matches(Path pathFile, String contentId, FolderContentType contentType)", "full_signature": "static boolean matches(Path pathFile, String contentId, FolderContentType contentType)", "class_method_signature": "FileSystemUtils.matches(Path pathFile, String contentId, FolderContentType contentType)", "testcase": false, "constructor": false}, {"identifier": "readEntryFromStream", "parameters": "(InputStream inputStream)", "modifiers": "private static", "return": "FolderEntry", "signature": "FolderEntry readEntryFromStream(InputStream inputStream)", "full_signature": "private static FolderEntry readEntryFromStream(InputStream inputStream)", "class_method_signature": "FileSystemUtils.readEntryFromStream(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "toFolderEntry", "parameters": "(Path pathFile)", "modifiers": "static", "return": "FolderEntry", "signature": "FolderEntry toFolderEntry(Path pathFile)", "full_signature": "static FolderEntry toFolderEntry(Path pathFile)", "class_method_signature": "FileSystemUtils.toFolderEntry(Path pathFile)", "testcase": false, "constructor": false}, {"identifier": "hasEntry", "parameters": "(Path path)", "modifiers": "static", "return": "boolean", "signature": "boolean hasEntry(Path path)", "full_signature": "static boolean hasEntry(Path path)", "class_method_signature": "FileSystemUtils.hasEntry(Path path)", "testcase": false, "constructor": false}, {"identifier": "writeEntryToStream", "parameters": "(FolderEntry folderEntry, OutputStream outputStream)", "modifiers": "static", "return": "void", "signature": "void writeEntryToStream(FolderEntry folderEntry, OutputStream outputStream)", "full_signature": "static void writeEntryToStream(FolderEntry folderEntry, OutputStream outputStream)", "class_method_signature": "FileSystemUtils.writeEntryToStream(FolderEntry folderEntry, OutputStream outputStream)", "testcase": false, "constructor": false}, {"identifier": "toId", "parameters": "(FolderPath folderPath)", "modifiers": "public static", "return": "String", "signature": "String toId(FolderPath folderPath)", "full_signature": "public static String toId(FolderPath folderPath)", "class_method_signature": "FileSystemUtils.toId(FolderPath folderPath)", "testcase": false, "constructor": false}, {"identifier": "fromId", "parameters": "(String id)", "modifiers": "public static", "return": "FolderPath", "signature": "FolderPath fromId(String id)", "full_signature": "public static FolderPath fromId(String id)", "class_method_signature": "FileSystemUtils.fromId(String id)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/folder/store/file/FileSystemUtils.java"}, "focal_method": {"identifier": "hasEntry", "parameters": "(Path path)", "modifiers": "static", "return": "boolean", "body": "static boolean hasEntry(Path path) {\n        boolean hasChild;\n        try (Stream<Path> pathsStream = Files.walk(path)) {\n            hasChild =\n                    pathsStream.filter(Files::isRegularFile).map(FileSystemUtils::toFolderEntry).findAny().isPresent();\n        } catch (IOException e) {\n            throw new TDPException(UNABLE_TO_DELETE_FOLDER, e, build().put(\"path\", path));\n        }\n        return hasChild;\n    }", "signature": "boolean hasEntry(Path path)", "full_signature": "static boolean hasEntry(Path path)", "class_method_signature": "FileSystemUtils.hasEntry(Path path)", "testcase": false, "constructor": false, "invocations": ["walk", "isPresent", "findAny", "map", "filter", "put", "build"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}