{"test_class": {"identifier": "SimpleRecordServiceTest", "superclass": "extends OrmEnabledTestCase", "interfaces": "", "fields": [{"original_string": "private final IRI testIRI = VALUE_FACTORY.createIRI(\"urn:test\");", "modifier": "private final", "type": "IRI", "declarator": "testIRI = VALUE_FACTORY.createIRI(\"urn:test\")", "var_name": "testIRI"}, {"original_string": "private final IRI catalogId = VALUE_FACTORY.createIRI(\"http://mobi.com/test/catalogs#catalog-test\");", "modifier": "private final", "type": "IRI", "declarator": "catalogId = VALUE_FACTORY.createIRI(\"http://mobi.com/test/catalogs#catalog-test\")", "var_name": "catalogId"}, {"original_string": "private SimpleRecordService recordService;", "modifier": "private", "type": "SimpleRecordService", "declarator": "recordService", "var_name": "recordService"}, {"original_string": "private SimpleSesameTransformer transformer;", "modifier": "private", "type": "SimpleSesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private Record testRecord;", "modifier": "private", "type": "Record", "declarator": "testRecord", "var_name": "testRecord"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private DeleteActivity deleteActivity;", "modifier": "private", "type": "DeleteActivity", "declarator": "deleteActivity", "var_name": "deleteActivity"}, {"original_string": "private OrmFactory<Catalog> catalogFactory = getRequiredOrmFactory(Catalog.class);", "modifier": "private", "type": "OrmFactory<Catalog>", "declarator": "catalogFactory = getRequiredOrmFactory(Catalog.class)", "var_name": "catalogFactory"}, {"original_string": "private OrmFactory<User> userFactory = getRequiredOrmFactory(User.class);", "modifier": "private", "type": "OrmFactory<User>", "declarator": "userFactory = getRequiredOrmFactory(User.class)", "var_name": "userFactory"}, {"original_string": "private OrmFactory<DeleteActivity> deleteActivityFactory = getRequiredOrmFactory(DeleteActivity.class);", "modifier": "private", "type": "OrmFactory<DeleteActivity>", "declarator": "deleteActivityFactory = getRequiredOrmFactory(DeleteActivity.class)", "var_name": "deleteActivityFactory"}, {"original_string": "private OrmFactory<Record> recordFactory = getRequiredOrmFactory(Record.class);", "modifier": "private", "type": "OrmFactory<Record>", "declarator": "recordFactory = getRequiredOrmFactory(Record.class)", "var_name": "recordFactory"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Mock\n    private CatalogUtilsService utilsService;", "modifier": "@Mock\n    private", "type": "CatalogUtilsService", "declarator": "utilsService", "var_name": "utilsService"}, {"original_string": "@Mock\n    private RepositoryConnection connection;", "modifier": "@Mock\n    private", "type": "RepositoryConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n    private CatalogProvUtils provUtils;", "modifier": "@Mock\n    private", "type": "CatalogProvUtils", "declarator": "provUtils", "var_name": "provUtils"}], "file": "com.mobi.catalog.impl/src/test/java/com/mobi/catalog/impl/record/SimpleRecordServiceTest.java"}, "test_case": {"identifier": "getTypeIRITest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTypeIRITest() throws Exception {\n        assertEquals(Record.TYPE, recordService.getTypeIRI());\n    }", "signature": "void getTypeIRITest()", "full_signature": "@Test public void getTypeIRITest()", "class_method_signature": "SimpleRecordServiceTest.getTypeIRITest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getTypeIRI"]}, "focal_class": {"identifier": "SimpleRecordService", "superclass": "extends AbstractRecordService<Record>", "interfaces": "", "fields": [], "methods": [{"identifier": "setCatalogFactory", "parameters": "(CatalogFactory catalogFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setCatalogFactory(CatalogFactory catalogFactory)", "full_signature": "@Reference void setCatalogFactory(CatalogFactory catalogFactory)", "class_method_signature": "SimpleRecordService.setCatalogFactory(CatalogFactory catalogFactory)", "testcase": false, "constructor": false}, {"identifier": "setUtilsService", "parameters": "(CatalogUtilsService utilsService)", "modifiers": "@Reference", "return": "void", "signature": "void setUtilsService(CatalogUtilsService utilsService)", "full_signature": "@Reference void setUtilsService(CatalogUtilsService utilsService)", "class_method_signature": "SimpleRecordService.setUtilsService(CatalogUtilsService utilsService)", "testcase": false, "constructor": false}, {"identifier": "setProvUtils", "parameters": "(CatalogProvUtils provUtils)", "modifiers": "@Reference", "return": "void", "signature": "void setProvUtils(CatalogProvUtils provUtils)", "full_signature": "@Reference void setProvUtils(CatalogProvUtils provUtils)", "class_method_signature": "SimpleRecordService.setProvUtils(CatalogProvUtils provUtils)", "testcase": false, "constructor": false}, {"identifier": "setVf", "parameters": "(ValueFactory valueFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setVf(ValueFactory valueFactory)", "full_signature": "@Reference void setVf(ValueFactory valueFactory)", "class_method_signature": "SimpleRecordService.setVf(ValueFactory valueFactory)", "testcase": false, "constructor": false}, {"identifier": "setRecordFactory", "parameters": "(RecordFactory recordFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setRecordFactory(RecordFactory recordFactory)", "full_signature": "@Reference void setRecordFactory(RecordFactory recordFactory)", "class_method_signature": "SimpleRecordService.setRecordFactory(RecordFactory recordFactory)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "Class<Record>", "signature": "Class<Record> getType()", "full_signature": "@Override public Class<Record> getType()", "class_method_signature": "SimpleRecordService.getType()", "testcase": false, "constructor": false}, {"identifier": "getTypeIRI", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTypeIRI()", "full_signature": "@Override public String getTypeIRI()", "class_method_signature": "SimpleRecordService.getTypeIRI()", "testcase": false, "constructor": false}], "file": "com.mobi.catalog.impl/src/main/java/com/mobi/catalog/impl/record/SimpleRecordService.java"}, "focal_method": {"identifier": "getTypeIRI", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getTypeIRI() {\n        return Record.TYPE;\n    }", "signature": "String getTypeIRI()", "full_signature": "@Override public String getTypeIRI()", "class_method_signature": "SimpleRecordService.getTypeIRI()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}