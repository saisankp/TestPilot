{"test_class": {"identifier": "XChaCha20Poly1305KeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final XChaCha20Poly1305KeyManager manager = new XChaCha20Poly1305KeyManager();", "modifier": "private final", "type": "XChaCha20Poly1305KeyManager", "declarator": "manager = new XChaCha20Poly1305KeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<XChaCha20Poly1305KeyFormat, XChaCha20Poly1305Key>\n      factory = manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<XChaCha20Poly1305KeyFormat, XChaCha20Poly1305Key>", "declarator": "factory = manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/aead/XChaCha20Poly1305KeyManagerTest.java"}, "test_case": {"identifier": "testRawXChaCha20Poly1305Template", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRawXChaCha20Poly1305Template() throws Exception {\n    KeyTemplate template = XChaCha20Poly1305KeyManager.rawXChaCha20Poly1305Template();\n    assertThat(template.getTypeUrl()).isEqualTo(new XChaCha20Poly1305KeyManager().getKeyType());\n    assertThat(template.getOutputPrefixType()).isEqualTo(KeyTemplate.OutputPrefixType.RAW);\n    XChaCha20Poly1305KeyFormat unused =\n        XChaCha20Poly1305KeyFormat.parseFrom(\n            ByteString.copyFrom(template.getValue()), ExtensionRegistryLite.getEmptyRegistry());\n  }", "signature": "void testRawXChaCha20Poly1305Template()", "full_signature": "@Test public void testRawXChaCha20Poly1305Template()", "class_method_signature": "XChaCha20Poly1305KeyManagerTest.testRawXChaCha20Poly1305Template()", "testcase": true, "constructor": false, "invocations": ["rawXChaCha20Poly1305Template", "isEqualTo", "assertThat", "getTypeUrl", "getKeyType", "isEqualTo", "assertThat", "getOutputPrefixType", "parseFrom", "copyFrom", "getValue", "getEmptyRegistry"]}, "focal_class": {"identifier": "XChaCha20Poly1305KeyManager", "superclass": "extends KeyTypeManager<XChaCha20Poly1305Key>", "interfaces": "", "fields": [{"original_string": "private static final int KEY_SIZE_IN_BYTES = 32;", "modifier": "private static final", "type": "int", "declarator": "KEY_SIZE_IN_BYTES = 32", "var_name": "KEY_SIZE_IN_BYTES"}], "methods": [{"identifier": "XChaCha20Poly1305KeyManager", "parameters": "()", "modifiers": "", "return": "", "signature": " XChaCha20Poly1305KeyManager()", "full_signature": "  XChaCha20Poly1305KeyManager()", "class_method_signature": "XChaCha20Poly1305KeyManager.XChaCha20Poly1305KeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "XChaCha20Poly1305KeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "XChaCha20Poly1305KeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "XChaCha20Poly1305KeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(XChaCha20Poly1305Key key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(XChaCha20Poly1305Key key)", "full_signature": "@Override public void validateKey(XChaCha20Poly1305Key key)", "class_method_signature": "XChaCha20Poly1305KeyManager.validateKey(XChaCha20Poly1305Key key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "XChaCha20Poly1305Key", "signature": "XChaCha20Poly1305Key parseKey(ByteString byteString)", "full_signature": "@Override public XChaCha20Poly1305Key parseKey(ByteString byteString)", "class_method_signature": "XChaCha20Poly1305KeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<XChaCha20Poly1305KeyFormat, XChaCha20Poly1305Key>", "signature": "KeyFactory<XChaCha20Poly1305KeyFormat, XChaCha20Poly1305Key> keyFactory()", "full_signature": "@Override public KeyFactory<XChaCha20Poly1305KeyFormat, XChaCha20Poly1305Key> keyFactory()", "class_method_signature": "XChaCha20Poly1305KeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "XChaCha20Poly1305KeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "xChaCha20Poly1305Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate xChaCha20Poly1305Template()", "full_signature": "public static final KeyTemplate xChaCha20Poly1305Template()", "class_method_signature": "XChaCha20Poly1305KeyManager.xChaCha20Poly1305Template()", "testcase": false, "constructor": false}, {"identifier": "rawXChaCha20Poly1305Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawXChaCha20Poly1305Template()", "full_signature": "public static final KeyTemplate rawXChaCha20Poly1305Template()", "class_method_signature": "XChaCha20Poly1305KeyManager.rawXChaCha20Poly1305Template()", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/aead/XChaCha20Poly1305KeyManager.java"}, "focal_method": {"identifier": "rawXChaCha20Poly1305Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate rawXChaCha20Poly1305Template() {\n    return KeyTemplate.create(\n        new XChaCha20Poly1305KeyManager().getKeyType(),\n        XChaCha20Poly1305KeyFormat.getDefaultInstance().toByteArray(),\n        KeyTemplate.OutputPrefixType.RAW);\n  }", "signature": "KeyTemplate rawXChaCha20Poly1305Template()", "full_signature": "public static final KeyTemplate rawXChaCha20Poly1305Template()", "class_method_signature": "XChaCha20Poly1305KeyManager.rawXChaCha20Poly1305Template()", "testcase": false, "constructor": false, "invocations": ["create", "getKeyType", "toByteArray", "getDefaultInstance"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}