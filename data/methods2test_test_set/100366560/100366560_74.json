{"test_class": {"identifier": "StringToEnumConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StringToEnumConverter converter = new StringToEnumConverter();", "modifier": "", "type": "StringToEnumConverter", "declarator": "converter = new StringToEnumConverter()", "var_name": "converter"}], "file": "beanmother-core/src/test/java/io/beanmother/core/converter/std/StringToEnumConverterTest.java"}, "test_case": {"identifier": "testCanHandle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanHandle() {\n        assertTrue(converter.canHandle(\"CONVERTER\", TypeToken.of(TestEnum.class)));\n    }", "signature": "void testCanHandle()", "full_signature": "@Test public void testCanHandle()", "class_method_signature": "StringToEnumConverterTest.testCanHandle()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canHandle", "of"]}, "focal_class": {"identifier": "StringToEnumConverter", "superclass": "extends AbstractConverter", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Object", "signature": "Object convert(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Object convert(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToEnumConverter.convert(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToEnumConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/converter/std/StringToEnumConverter.java"}, "focal_method": {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canHandle(Object source, TypeToken<?> targetTypeToken) {\n        Class enumClass = targetTypeToken.getRawType();\n        return (source instanceof String) && enumClass.isEnum();\n    }", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToEnumConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false, "invocations": ["getRawType", "isEnum"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}