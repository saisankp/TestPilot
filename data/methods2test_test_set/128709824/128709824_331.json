{"test_class": {"identifier": "ReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String COMPLEX = \"/com.alipay.sofa.rpc.doc.swagger.resource.TestSwaggerService/complex\";", "modifier": "public static final", "type": "String", "declarator": "COMPLEX = \"/com.alipay.sofa.rpc.doc.swagger.resource.TestSwaggerService/complex\"", "var_name": "COMPLEX"}], "file": "doc-swagger/src/test/java/com/alipay/sofa/rpc/doc/swagger/generate/ReaderTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRead() {\n        Map<Class<?>, Object> interfaceMapRef = new HashMap<>();\n        interfaceMapRef.put(TestSwaggerService.class, new TestSwaggerServiceImpl());\n        Swagger swagger = new Swagger();\n        swagger.setBasePath(\"/rest/\");\n        Reader.read(swagger, interfaceMapRef, \"\");\n\n        Assert.assertEquals(\"2.0\", swagger.getSwagger());\n        Assert.assertEquals(\"/rest/\", swagger.getBasePath());\n        Map<String, Path> paths = swagger.getPaths();\n        Assert.assertEquals(TestSwaggerService.class.getMethods().length, paths.size());\n        Assert.assertTrue(paths.containsKey(COMPLEX));\n        List<Parameter> parameters = paths.get(COMPLEX).getPost().getParameters();\n        Assert.assertTrue(CommonUtils.isNotEmpty(parameters));\n        Parameter parameter = parameters.get(0);\n        Assert.assertTrue(parameter instanceof BodyParameter);\n        Model schema = ((BodyParameter) parameter).getSchema();\n        Assert.assertTrue(schema instanceof RefModel);\n        String ref = ((RefModel) schema).get$ref();\n        Assert.assertEquals(\"#/definitions/ComplexPojo\", ref);\n\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "ReaderTest.testRead()", "testcase": true, "constructor": false, "invocations": ["put", "setBasePath", "read", "assertEquals", "getSwagger", "assertEquals", "getBasePath", "getPaths", "assertEquals", "getMethods", "size", "assertTrue", "containsKey", "getParameters", "getPost", "get", "assertTrue", "isNotEmpty", "get", "assertTrue", "getSchema", "assertTrue", "get", "assertEquals"]}, "focal_class": {"identifier": "Reader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Swagger swagger;", "modifier": "private final", "type": "Swagger", "declarator": "swagger", "var_name": "swagger"}], "methods": [{"identifier": "Reader", "parameters": "(Swagger swagger)", "modifiers": "private", "return": "", "signature": " Reader(Swagger swagger)", "full_signature": "private  Reader(Swagger swagger)", "class_method_signature": "Reader.Reader(Swagger swagger)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(Swagger swagger, Set<Class<?>> classes)", "modifiers": "public static", "return": "void", "signature": "void read(Swagger swagger, Set<Class<?>> classes)", "full_signature": "public static void read(Swagger swagger, Set<Class<?>> classes)", "class_method_signature": "Reader.read(Swagger swagger, Set<Class<?>> classes)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Swagger swagger, Map<Class<?>, Object> interfaceMapRef,\n                            String httpContext)", "modifiers": "public static", "return": "void", "signature": "void read(Swagger swagger, Map<Class<?>, Object> interfaceMapRef,\n                            String httpContext)", "full_signature": "public static void read(Swagger swagger, Map<Class<?>, Object> interfaceMapRef,\n                            String httpContext)", "class_method_signature": "Reader.read(Swagger swagger, Map<Class<?>, Object> interfaceMapRef,\n                            String httpContext)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(ReaderContext context)", "modifiers": "private", "return": "void", "signature": "void read(ReaderContext context)", "full_signature": "private void read(ReaderContext context)", "class_method_signature": "Reader.read(ReaderContext context)", "testcase": false, "constructor": false}, {"identifier": "getRefMethod", "parameters": "(ReaderContext context, Method method)", "modifiers": "private", "return": "Method", "signature": "Method getRefMethod(ReaderContext context, Method method)", "full_signature": "private Method getRefMethod(ReaderContext context, Method method)", "class_method_signature": "Reader.getRefMethod(ReaderContext context, Method method)", "testcase": false, "constructor": false}, {"identifier": "readSwaggerConfig", "parameters": "(SwaggerDefinition config)", "modifiers": "@SuppressWarnings(\"deprecation\") private", "return": "void", "signature": "void readSwaggerConfig(SwaggerDefinition config)", "full_signature": "@SuppressWarnings(\"deprecation\") private void readSwaggerConfig(SwaggerDefinition config)", "class_method_signature": "Reader.readSwaggerConfig(SwaggerDefinition config)", "testcase": false, "constructor": false}, {"identifier": "readInfoConfig", "parameters": "(SwaggerDefinition config)", "modifiers": "private", "return": "void", "signature": "void readInfoConfig(SwaggerDefinition config)", "full_signature": "private void readInfoConfig(SwaggerDefinition config)", "class_method_signature": "Reader.readInfoConfig(SwaggerDefinition config)", "testcase": false, "constructor": false}], "file": "doc-swagger/src/main/java/com/alipay/sofa/rpc/doc/swagger/generate/Reader.java"}, "focal_method": {"identifier": "read", "parameters": "(Swagger swagger, Set<Class<?>> classes)", "modifiers": "public static", "return": "void", "body": "public static void read(Swagger swagger, Set<Class<?>> classes) {\n        final Reader reader = new Reader(swagger);\n        for (Class<?> cls : classes) {\n            final ReaderContext context = new ReaderContext(swagger, cls, cls, \"\", null, false,\n                new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>(),\n                new ArrayList<Parameter>());\n            reader.read(context);\n        }\n    }", "signature": "void read(Swagger swagger, Set<Class<?>> classes)", "full_signature": "public static void read(Swagger swagger, Set<Class<?>> classes)", "class_method_signature": "Reader.read(Swagger swagger, Set<Class<?>> classes)", "testcase": false, "constructor": false, "invocations": ["read"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}