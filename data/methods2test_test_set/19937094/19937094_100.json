{"test_class": {"identifier": "X509TrustManagerWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private X509TrustManagerWrapper underTest;", "modifier": "private", "type": "X509TrustManagerWrapper", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private X509TrustManager trustManager;", "modifier": "private", "type": "X509TrustManager", "declarator": "trustManager", "var_name": "trustManager"}], "file": "quickfixj-core/src/test/java/quickfix/mina/ssl/X509TrustManagerWrapperTest.java"}, "test_case": {"identifier": "shouldRethrowCertificateExceptionOnCheckServerTrusted", "parameters": "()", "modifiers": "@Test(expected = CertificateException.class) public", "return": "void", "body": "@Test(expected = CertificateException.class)\n    public void shouldRethrowCertificateExceptionOnCheckServerTrusted() throws Exception {\n        // underlying trust manager should throw runtime exception\n        Mockito.doThrow(new RuntimeException()).when(trustManager)\n                .checkServerTrusted(Mockito.any(X509Certificate[].class), Mockito.anyString());\n\n        underTest.checkServerTrusted(null, null);\n    }", "signature": "void shouldRethrowCertificateExceptionOnCheckServerTrusted()", "full_signature": "@Test(expected = CertificateException.class) public void shouldRethrowCertificateExceptionOnCheckServerTrusted()", "class_method_signature": "X509TrustManagerWrapperTest.shouldRethrowCertificateExceptionOnCheckServerTrusted()", "testcase": true, "constructor": false, "invocations": ["checkServerTrusted", "when", "doThrow", "any", "anyString", "checkServerTrusted"]}, "focal_class": {"identifier": "X509TrustManagerWrapper", "superclass": "", "interfaces": "implements X509TrustManager", "fields": [{"original_string": "private final X509TrustManager trustManager;", "modifier": "private final", "type": "X509TrustManager", "declarator": "trustManager", "var_name": "trustManager"}], "methods": [{"identifier": "wrap", "parameters": "(TrustManager[] trustManagers)", "modifiers": "public static", "return": "TrustManager[]", "signature": "TrustManager[] wrap(TrustManager[] trustManagers)", "full_signature": "public static TrustManager[] wrap(TrustManager[] trustManagers)", "class_method_signature": "X509TrustManagerWrapper.wrap(TrustManager[] trustManagers)", "testcase": false, "constructor": false}, {"identifier": "X509TrustManagerWrapper", "parameters": "(final X509TrustManager trustManager)", "modifiers": "public", "return": "", "signature": " X509TrustManagerWrapper(final X509TrustManager trustManager)", "full_signature": "public  X509TrustManagerWrapper(final X509TrustManager trustManager)", "class_method_signature": "X509TrustManagerWrapper.X509TrustManagerWrapper(final X509TrustManager trustManager)", "testcase": false, "constructor": true}, {"identifier": "checkClientTrusted", "parameters": "(X509Certificate[] chain, String authType)", "modifiers": "@Override public", "return": "void", "signature": "void checkClientTrusted(X509Certificate[] chain, String authType)", "full_signature": "@Override public void checkClientTrusted(X509Certificate[] chain, String authType)", "class_method_signature": "X509TrustManagerWrapper.checkClientTrusted(X509Certificate[] chain, String authType)", "testcase": false, "constructor": false}, {"identifier": "checkServerTrusted", "parameters": "(X509Certificate[] chain, String authType)", "modifiers": "@Override public", "return": "void", "signature": "void checkServerTrusted(X509Certificate[] chain, String authType)", "full_signature": "@Override public void checkServerTrusted(X509Certificate[] chain, String authType)", "class_method_signature": "X509TrustManagerWrapper.checkServerTrusted(X509Certificate[] chain, String authType)", "testcase": false, "constructor": false}, {"identifier": "getAcceptedIssuers", "parameters": "()", "modifiers": "@Override public", "return": "X509Certificate[]", "signature": "X509Certificate[] getAcceptedIssuers()", "full_signature": "@Override public X509Certificate[] getAcceptedIssuers()", "class_method_signature": "X509TrustManagerWrapper.getAcceptedIssuers()", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/mina/ssl/X509TrustManagerWrapper.java"}, "focal_method": {"identifier": "checkServerTrusted", "parameters": "(X509Certificate[] chain, String authType)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n        try {\n            trustManager.checkServerTrusted(chain, authType);\n        } catch (RuntimeException e) {\n            throw new CertificateException(\"Unexpected error\", e);\n        }\n    }", "signature": "void checkServerTrusted(X509Certificate[] chain, String authType)", "full_signature": "@Override public void checkServerTrusted(X509Certificate[] chain, String authType)", "class_method_signature": "X509TrustManagerWrapper.checkServerTrusted(X509Certificate[] chain, String authType)", "testcase": false, "constructor": false, "invocations": ["checkServerTrusted"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}