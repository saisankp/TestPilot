{"test_class": {"identifier": "PathNodeParentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PathNodeParent myParent;", "modifier": "private", "type": "PathNodeParent", "declarator": "myParent", "var_name": "myParent"}], "file": "android/testSrc/com/android/tools/idea/apk/paths/PathNodeParentTest.java"}, "test_case": {"identifier": "addChild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void addChild() {\n    List<String> segments = Arrays.asList(\"one\", \"two\", \"three\");\n    PathNode newChild = myParent.addChild(segments, 0, '/');\n\n    List<PathNode> children = new ArrayList<>(myParent.getChildren());\n    assertThat(children).hasSize(1);\n\n    PathNode child = children.get(0);\n    assertSame(child, newChild);\n    assertEquals(\"one\", child.getPathSegment());\n    assertEquals(\"one\", child.getPath());\n    assertSame(myParent, child.getParent());\n\n    children = new ArrayList<>(child.getChildren());\n    assertThat(children).hasSize(1);\n\n    child = children.get(0);\n    assertEquals(\"two\", child.getPathSegment());\n    assertEquals(\"one/two\", child.getPath());\n\n    children = new ArrayList<>(child.getChildren());\n    assertThat(children).hasSize(1);\n\n    child = children.get(0);\n    assertEquals(\"three\", child.getPathSegment());\n    assertEquals(\"one/two/three\", child.getPath());\n  }", "signature": "void addChild()", "full_signature": "@Test public void addChild()", "class_method_signature": "PathNodeParentTest.addChild()", "testcase": true, "constructor": false, "invocations": ["asList", "addChild", "getChildren", "hasSize", "assertThat", "get", "assertSame", "assertEquals", "getPathSegment", "assertEquals", "getPath", "assertSame", "getParent", "getChildren", "hasSize", "assertThat", "get", "assertEquals", "getPathSegment", "assertEquals", "getPath", "getChildren", "hasSize", "assertThat", "get", "assertEquals", "getPathSegment", "assertEquals", "getPath"]}, "focal_class": {"identifier": "PathNodeParent", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull private final Map<String, PathNode> myChildrenByPathSegment = new LinkedHashMap<>();", "modifier": "@NotNull private final", "type": "Map<String, PathNode>", "declarator": "myChildrenByPathSegment = new LinkedHashMap<>()", "var_name": "myChildrenByPathSegment"}], "methods": [{"identifier": "addChild", "parameters": "(@NotNull List<String> segments, int index, char pathSeparator)", "modifiers": "@Nullable final", "return": "PathNode", "signature": "PathNode addChild(@NotNull List<String> segments, int index, char pathSeparator)", "full_signature": "@Nullable final PathNode addChild(@NotNull List<String> segments, int index, char pathSeparator)", "class_method_signature": "PathNodeParent.addChild(@NotNull List<String> segments, int index, char pathSeparator)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@NotNull public final", "return": "Collection<PathNode>", "signature": "Collection<PathNode> getChildren()", "full_signature": "@NotNull public final Collection<PathNode> getChildren()", "class_method_signature": "PathNodeParent.getChildren()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/apk/paths/PathNodeParent.java"}, "focal_method": {"identifier": "addChild", "parameters": "(@NotNull List<String> segments, int index, char pathSeparator)", "modifiers": "@Nullable final", "return": "PathNode", "body": "@Nullable\n  final PathNode addChild(@NotNull List<String> segments, int index, char pathSeparator) {\n    if (index < segments.size()) {\n      String pathSegment = segments.get(index);\n      String path = Joiner.on(pathSeparator).join(segments.subList(0, index + 1));\n      PathNode child = myChildrenByPathSegment.computeIfAbsent(pathSegment, s -> new PathNode(s, path, this));\n      child.addChild(segments, index + 1, pathSeparator);\n      return child;\n    }\n    return null;\n  }", "signature": "PathNode addChild(@NotNull List<String> segments, int index, char pathSeparator)", "full_signature": "@Nullable final PathNode addChild(@NotNull List<String> segments, int index, char pathSeparator)", "class_method_signature": "PathNodeParent.addChild(@NotNull List<String> segments, int index, char pathSeparator)", "testcase": false, "constructor": false, "invocations": ["size", "get", "join", "on", "subList", "computeIfAbsent", "addChild"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}