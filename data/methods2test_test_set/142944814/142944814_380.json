{"test_class": {"identifier": "AergoKeyGeneratorTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/common/src/test/java/hera/key/AergoKeyGeneratorTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreate() throws Exception {\n    final AergoKeyGenerator generator = new AergoKeyGenerator();\n    final AergoKey key = generator.create();\n    assertNotNull(key.getPrivateKey());\n    assertNotNull(key.getPublicKey());\n    assertNotNull(key.getAddress());\n  }", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "AergoKeyGeneratorTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["create", "assertNotNull", "getPrivateKey", "assertNotNull", "getPublicKey", "assertNotNull", "getAddress"]}, "focal_class": {"identifier": "AergoKeyGenerator", "superclass": "", "interfaces": "implements KeyGenerator<AergoKey>", "fields": [{"original_string": "protected final ECDSAKeyGenerator ecdsaKeyGenerator = new ECDSAKeyGenerator();", "modifier": "protected final", "type": "ECDSAKeyGenerator", "declarator": "ecdsaKeyGenerator = new ECDSAKeyGenerator()", "var_name": "ecdsaKeyGenerator"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@Override public", "return": "AergoKey", "signature": "AergoKey create()", "full_signature": "@Override public AergoKey create()", "class_method_signature": "AergoKeyGenerator.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String seed)", "modifiers": "public", "return": "AergoKey", "signature": "AergoKey create(final String seed)", "full_signature": "public AergoKey create(final String seed)", "class_method_signature": "AergoKeyGenerator.create(final String seed)", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/key/AergoKeyGenerator.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@Override public", "return": "AergoKey", "body": "@Override\n  public AergoKey create() {\n    try {\n      final ECDSAKey ecdsaKey = ecdsaKeyGenerator.create();\n      return new AergoKey(ecdsaKey);\n    } catch (Exception e) {\n      throw new HerajException(e);\n    }\n  }", "signature": "AergoKey create()", "full_signature": "@Override public AergoKey create()", "class_method_signature": "AergoKeyGenerator.create()", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}