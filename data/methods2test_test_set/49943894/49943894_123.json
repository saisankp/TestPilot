{"test_class": {"identifier": "DatabaseAccessObjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private PreparedStatement preparedStatementMock;", "modifier": "@Mock\n    private", "type": "PreparedStatement", "declarator": "preparedStatementMock", "var_name": "preparedStatementMock"}, {"original_string": "@Mock\n    private Connection connectionMock;", "modifier": "@Mock\n    private", "type": "Connection", "declarator": "connectionMock", "var_name": "connectionMock"}, {"original_string": "@Mock\n    private Logger loggerMock;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "loggerMock", "var_name": "loggerMock"}, {"original_string": "private final DatabaseAccessObject dao = new DatabaseAccessObject();", "modifier": "private final", "type": "DatabaseAccessObject", "declarator": "dao = new DatabaseAccessObject()", "var_name": "dao"}], "file": "engine/schema/src/test/java/com/cloud/upgrade/dao/DatabaseAccessObjectTest.java"}, "test_case": {"identifier": "testDropPrimaryKeyWhenTableNameIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDropPrimaryKeyWhenTableNameIsNull() throws Exception {\n        SQLException sqlException = new SQLException();\n        when(connectionMock.prepareStatement(contains(\"null DROP PRIMARY KEY\"))).thenReturn(preparedStatementMock);\n        when(preparedStatementMock.executeUpdate()).thenThrow(sqlException);\n\n        Connection conn = connectionMock;\n        String tableName = null;\n\n        dao.dropPrimaryKey(conn, tableName);\n\n        verify(connectionMock, times(1)).prepareStatement(anyString());\n        verify(preparedStatementMock, times(1)).executeUpdate();\n        verify(preparedStatementMock, times(1)).close();\n        verify(loggerMock, times(1)).debug(contains(\"Exception\"));\n    }", "signature": "void testDropPrimaryKeyWhenTableNameIsNull()", "full_signature": "@Test public void testDropPrimaryKeyWhenTableNameIsNull()", "class_method_signature": "DatabaseAccessObjectTest.testDropPrimaryKeyWhenTableNameIsNull()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "prepareStatement", "contains", "thenThrow", "when", "executeUpdate", "dropPrimaryKey", "prepareStatement", "verify", "times", "anyString", "executeUpdate", "verify", "times", "close", "verify", "times", "debug", "verify", "times", "contains"]}, "focal_class": {"identifier": "DatabaseAccessObject", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger s_logger = LoggerFactory.getLogger(DatabaseAccessObject.class);", "modifier": "private static", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(DatabaseAccessObject.class)", "var_name": "s_logger"}], "methods": [{"identifier": "dropKey", "parameters": "(Connection conn, String tableName, String key, boolean isForeignKey)", "modifiers": "public", "return": "void", "signature": "void dropKey(Connection conn, String tableName, String key, boolean isForeignKey)", "full_signature": "public void dropKey(Connection conn, String tableName, String key, boolean isForeignKey)", "class_method_signature": "DatabaseAccessObject.dropKey(Connection conn, String tableName, String key, boolean isForeignKey)", "testcase": false, "constructor": false}, {"identifier": "dropPrimaryKey", "parameters": "(Connection conn, String tableName)", "modifiers": "public", "return": "void", "signature": "void dropPrimaryKey(Connection conn, String tableName)", "full_signature": "public void dropPrimaryKey(Connection conn, String tableName)", "class_method_signature": "DatabaseAccessObject.dropPrimaryKey(Connection conn, String tableName)", "testcase": false, "constructor": false}, {"identifier": "dropColumn", "parameters": "(Connection conn, String tableName, String columnName)", "modifiers": "public", "return": "void", "signature": "void dropColumn(Connection conn, String tableName, String columnName)", "full_signature": "public void dropColumn(Connection conn, String tableName, String columnName)", "class_method_signature": "DatabaseAccessObject.dropColumn(Connection conn, String tableName, String columnName)", "testcase": false, "constructor": false}, {"identifier": "columnExists", "parameters": "(Connection conn, String tableName, String columnName)", "modifiers": "public", "return": "boolean", "signature": "boolean columnExists(Connection conn, String tableName, String columnName)", "full_signature": "public boolean columnExists(Connection conn, String tableName, String columnName)", "class_method_signature": "DatabaseAccessObject.columnExists(Connection conn, String tableName, String columnName)", "testcase": false, "constructor": false}, {"identifier": "closePreparedStatement", "parameters": "(PreparedStatement pstmt, String errorMessage)", "modifiers": "protected static", "return": "void", "signature": "void closePreparedStatement(PreparedStatement pstmt, String errorMessage)", "full_signature": "protected static void closePreparedStatement(PreparedStatement pstmt, String errorMessage)", "class_method_signature": "DatabaseAccessObject.closePreparedStatement(PreparedStatement pstmt, String errorMessage)", "testcase": false, "constructor": false}], "file": "engine/schema/src/main/java/com/cloud/upgrade/dao/DatabaseAccessObject.java"}, "focal_method": {"identifier": "dropPrimaryKey", "parameters": "(Connection conn, String tableName)", "modifiers": "public", "return": "void", "body": "public void dropPrimaryKey(Connection conn, String tableName) {\n        try(PreparedStatement pstmt = conn.prepareStatement(\"ALTER TABLE \" + tableName + \" DROP PRIMARY KEY \");) {\n            pstmt.executeUpdate();\n            s_logger.debug(\"Primary key is dropped successfully from the table \" + tableName);\n        } catch (SQLException e) {\n            s_logger.debug(\"Ignored SQL Exception when trying to drop primary key on table \" + tableName + \" exception: \" + e.getMessage());\n        }\n    }", "signature": "void dropPrimaryKey(Connection conn, String tableName)", "full_signature": "public void dropPrimaryKey(Connection conn, String tableName)", "class_method_signature": "DatabaseAccessObject.dropPrimaryKey(Connection conn, String tableName)", "testcase": false, "constructor": false, "invocations": ["prepareStatement", "executeUpdate", "debug", "debug", "getMessage"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}