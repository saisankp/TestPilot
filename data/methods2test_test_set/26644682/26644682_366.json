{"test_class": {"identifier": "CompositeFormatDetectorTest", "superclass": "extends AbstractSchemaTestUtils", "interfaces": "", "fields": [{"original_string": "@Autowired\n    CompositeFormatDetector formatDetector;", "modifier": "@Autowired", "type": "CompositeFormatDetector", "declarator": "formatDetector", "var_name": "formatDetector"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/schema/CompositeFormatDetectorTest.java"}, "test_case": {"identifier": "should_not_detect_a_png", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_not_detect_a_png() throws Exception {\n\n        String fileName = \"talend_product_icon_dataprep.png\";\n\n        Format actual = formatDetector.detect(this.getClass().getResourceAsStream(fileName));\n        assertTrue(actual.getFormatFamily() instanceof UnsupportedFormatFamily);\n    }", "signature": "void should_not_detect_a_png()", "full_signature": "@Test public void should_not_detect_a_png()", "class_method_signature": "CompositeFormatDetectorTest.should_not_detect_a_png()", "testcase": true, "constructor": false, "invocations": ["detect", "getResourceAsStream", "getClass", "assertTrue", "getFormatFamily"]}, "focal_class": {"identifier": "CompositeFormatDetector", "superclass": "", "interfaces": "implements Detector", "fields": [{"original_string": "@Autowired\n    private UnsupportedFormatFamily unsupportedFormatFamily;", "modifier": "@Autowired\n    private", "type": "UnsupportedFormatFamily", "declarator": "unsupportedFormatFamily", "var_name": "unsupportedFormatFamily"}, {"original_string": "@Autowired\n    private List<Detector> detectors;", "modifier": "@Autowired\n    private", "type": "List<Detector>", "declarator": "detectors", "var_name": "detectors"}], "methods": [{"identifier": "detect", "parameters": "(Metadata metadata, TikaInputStream inputStream)", "modifiers": "@Override public", "return": "Format", "signature": "Format detect(Metadata metadata, TikaInputStream inputStream)", "full_signature": "@Override public Format detect(Metadata metadata, TikaInputStream inputStream)", "class_method_signature": "CompositeFormatDetector.detect(Metadata metadata, TikaInputStream inputStream)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/schema/CompositeFormatDetector.java"}, "focal_method": {"identifier": "detect", "parameters": "(Metadata metadata, TikaInputStream inputStream)", "modifiers": "@Override public", "return": "Format", "body": "@Override\n    public Format detect(Metadata metadata, TikaInputStream inputStream) throws IOException {\n\n        Format result = null;\n        for (Detector detector : detectors) {\n            result = detector.detect(metadata, inputStream);\n            if (result != null)\n                break;\n        }\n        if (result == null) {\n            result = new Format(unsupportedFormatFamily, FormatUtils.DEFAULT_ENCODING);\n        }\n        return result;\n    }", "signature": "Format detect(Metadata metadata, TikaInputStream inputStream)", "full_signature": "@Override public Format detect(Metadata metadata, TikaInputStream inputStream)", "class_method_signature": "CompositeFormatDetector.detect(Metadata metadata, TikaInputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["detect"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}