{"test_class": {"identifier": "TestIndexMasterObserver", "superclass": "extends IndexTestBase", "interfaces": "", "fields": [], "file": "themis-index/src/test/java/org/apache/hadoop/hbase/themis/index/cp/TestIndexMasterObserver.java"}, "test_case": {"identifier": "testCreateDeleteTableWithSecondaryIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreateDeleteTableWithSecondaryIndex() throws IOException {\n    // create normal table with secondary index table prefix\n    HTableDescriptor tableDesc = new HTableDescriptor(\n        IndexMasterObserver.THEMIS_SECONDARY_INDEX_TABLE_NAME_PREFIX + \"_a\");\n    try {\n      admin.createTable(tableDesc);\n      Assert.fail();\n    } catch (IOException e) {\n      Assert.assertTrue(e.getMessage().indexOf(\"is preserved\") >= 0);\n    }\n    \n    byte[] testMainTable = Bytes.toBytes(\"temp_test\");\n    byte[] testIndexTable = Bytes.toBytes(\"__themis_index_temp_test_ThemisCF_Qualifier_test_index\");\n\n    deleteTable(admin, testMainTable);\n    // create themis table without index enable\n    tableDesc = new HTableDescriptor(testMainTable);\n    tableDesc.addFamily(IndexMasterObserver.getSecondaryIndexFamily());\n    admin.createTable(tableDesc);\n    HTableDescriptor[] tableDescs = admin.listTables();\n    for (HTableDescriptor desc : tableDescs) {\n      Assert.assertFalse(Bytes.equals(testIndexTable, desc.getName()));\n    }\n    admin.disableTable(testMainTable);\n    admin.deleteTable(testMainTable);\n    \n    // create table with index attribute but without themis enable key\n    tableDesc = new HTableDescriptor(testMainTable);\n    HColumnDescriptor columnDesc = new HColumnDescriptor(INDEX_FAMILY);\n    columnDesc.setValue(IndexMasterObserver.THEMIS_SECONDARY_INDEX_FAMILY_ATTRIBUTE_KEY,\n      Boolean.TRUE.toString());\n    tableDesc.addFamily(columnDesc);\n    try {\n      admin.createTable(tableDesc);\n    } catch (IOException e) {\n      Assert.assertTrue(e.getMessage().indexOf(\"must be set on themis-enabled family\") >= 0);\n    }\n    \n    // create themis table with secondary index attribute\n    \n    createTableForIndexTest(testMainTable);\n    HTableDescriptor desc = admin.getTableDescriptor(testMainTable);\n    Assert.assertNotNull(desc);\n    Assert.assertNotNull(desc.getFamily(ColumnUtil.LOCK_FAMILY_NAME));\n    desc = admin.getTableDescriptor(testIndexTable);\n    Assert.assertNotNull(desc);\n    Assert.assertNotNull(desc.getFamily(Bytes\n        .toBytes(IndexMasterObserver.THEMIS_SECONDARY_INDEX_TABLE_FAMILY)));\n    Assert.assertNotNull(desc.getFamily(ColumnUtil.LOCK_FAMILY_NAME));\n    \n    deleteTableForIndexTest(testMainTable);\n    tableDescs = admin.listTables();\n    for (HTableDescriptor tempDesc : tableDescs) {\n      if (Bytes.equals(tempDesc.getName(), testMainTable)) {\n        Assert.fail(\"fail to delete table:\" + Bytes.toString(testMainTable));\n      } else if (Bytes.equals(tempDesc.getName(), testIndexTable)) {\n        Assert.fail(\"fail to delete table:\" + Bytes.toString(testIndexTable));\n      }\n    }\n  }", "signature": "void testCreateDeleteTableWithSecondaryIndex()", "full_signature": "@Test public void testCreateDeleteTableWithSecondaryIndex()", "class_method_signature": "TestIndexMasterObserver.testCreateDeleteTableWithSecondaryIndex()", "testcase": true, "constructor": false, "invocations": ["createTable", "fail", "assertTrue", "indexOf", "getMessage", "toBytes", "toBytes", "deleteTable", "addFamily", "getSecondaryIndexFamily", "createTable", "listTables", "assertFalse", "equals", "getName", "disableTable", "deleteTable", "setValue", "toString", "addFamily", "createTable", "assertTrue", "indexOf", "getMessage", "createTableForIndexTest", "getTableDescriptor", "assertNotNull", "assertNotNull", "getFamily", "getTableDescriptor", "assertNotNull", "assertNotNull", "getFamily", "toBytes", "assertNotNull", "getFamily", "deleteTableForIndexTest", "listTables", "equals", "getName", "fail", "toString", "equals", "getName", "fail", "toString"]}, "focal_class": {"identifier": "IndexMasterObserver", "superclass": "extends BaseMasterObserver", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(IndexMasterObserver.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(IndexMasterObserver.class)", "var_name": "LOG"}, {"original_string": "public static final String THEMIS_SECONDARY_INDEX_FAMILY_ATTRIBUTE_KEY = \"SECONDARY_INDEX_NAMES\";", "modifier": "public static final", "type": "String", "declarator": "THEMIS_SECONDARY_INDEX_FAMILY_ATTRIBUTE_KEY = \"SECONDARY_INDEX_NAMES\"", "var_name": "THEMIS_SECONDARY_INDEX_FAMILY_ATTRIBUTE_KEY"}, {"original_string": "public static final String THEMIS_SECONDARY_INDEX_NAME_SPLITOR = \";\";", "modifier": "public static final", "type": "String", "declarator": "THEMIS_SECONDARY_INDEX_NAME_SPLITOR = \";\"", "var_name": "THEMIS_SECONDARY_INDEX_NAME_SPLITOR"}, {"original_string": "public static final String THEMIS_SECONDARY_INDEX_TABLE_NAME_PREFIX = \"__themis_index\";", "modifier": "public static final", "type": "String", "declarator": "THEMIS_SECONDARY_INDEX_TABLE_NAME_PREFIX = \"__themis_index\"", "var_name": "THEMIS_SECONDARY_INDEX_TABLE_NAME_PREFIX"}, {"original_string": "public static final String THEMIS_SECONDARY_INDEX_TABLE_ATTRIBUTE_KEY = \"THEMIS_SECONDARY_TABLE\";", "modifier": "public static final", "type": "String", "declarator": "THEMIS_SECONDARY_INDEX_TABLE_ATTRIBUTE_KEY = \"THEMIS_SECONDARY_TABLE\"", "var_name": "THEMIS_SECONDARY_INDEX_TABLE_ATTRIBUTE_KEY"}, {"original_string": "public static final String THEMIS_SECONDARY_INDEX_TABLE_FAMILY = \"I\";", "modifier": "public static final", "type": "String", "declarator": "THEMIS_SECONDARY_INDEX_TABLE_FAMILY = \"I\"", "var_name": "THEMIS_SECONDARY_INDEX_TABLE_FAMILY"}, {"original_string": "public static final byte[] THEMIS_SECONDARY_INDEX_TABLE_FAMILY_BYTES = Bytes.toBytes(THEMIS_SECONDARY_INDEX_TABLE_FAMILY);", "modifier": "public static final", "type": "byte[]", "declarator": "THEMIS_SECONDARY_INDEX_TABLE_FAMILY_BYTES = Bytes.toBytes(THEMIS_SECONDARY_INDEX_TABLE_FAMILY)", "var_name": "THEMIS_SECONDARY_INDEX_TABLE_FAMILY_BYTES"}, {"original_string": "private ThreadLocal<HTableDescriptor> deletedTableDesc = new ThreadLocal<HTableDescriptor>();", "modifier": "private", "type": "ThreadLocal<HTableDescriptor>", "declarator": "deletedTableDesc = new ThreadLocal<HTableDescriptor>()", "var_name": "deletedTableDesc"}], "methods": [{"identifier": "preCreateTable", "parameters": "(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      HTableDescriptor desc, HRegionInfo[] regions)", "modifiers": "@Override public", "return": "void", "signature": "void preCreateTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      HTableDescriptor desc, HRegionInfo[] regions)", "full_signature": "@Override public void preCreateTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      HTableDescriptor desc, HRegionInfo[] regions)", "class_method_signature": "IndexMasterObserver.preCreateTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      HTableDescriptor desc, HRegionInfo[] regions)", "testcase": false, "constructor": false}, {"identifier": "checkIndexNames", "parameters": "(HColumnDescriptor familyDesc)", "modifiers": "protected static", "return": "void", "signature": "void checkIndexNames(HColumnDescriptor familyDesc)", "full_signature": "protected static void checkIndexNames(HColumnDescriptor familyDesc)", "class_method_signature": "IndexMasterObserver.checkIndexNames(HColumnDescriptor familyDesc)", "testcase": false, "constructor": false}, {"identifier": "createSecondaryIndexTables", "parameters": "(HBaseAdmin admin, String tableName,\n      HColumnDescriptor familyDesc)", "modifiers": "protected", "return": "void", "signature": "void createSecondaryIndexTables(HBaseAdmin admin, String tableName,\n      HColumnDescriptor familyDesc)", "full_signature": "protected void createSecondaryIndexTables(HBaseAdmin admin, String tableName,\n      HColumnDescriptor familyDesc)", "class_method_signature": "IndexMasterObserver.createSecondaryIndexTables(HBaseAdmin admin, String tableName,\n      HColumnDescriptor familyDesc)", "testcase": false, "constructor": false}, {"identifier": "getIndexNameAndColumns", "parameters": "(String tableName,\n      HColumnDescriptor familyDesc)", "modifiers": "protected static", "return": "List<Pair<String, String>>", "signature": "List<Pair<String, String>> getIndexNameAndColumns(String tableName,\n      HColumnDescriptor familyDesc)", "full_signature": "protected static List<Pair<String, String>> getIndexNameAndColumns(String tableName,\n      HColumnDescriptor familyDesc)", "class_method_signature": "IndexMasterObserver.getIndexNameAndColumns(String tableName,\n      HColumnDescriptor familyDesc)", "testcase": false, "constructor": false}, {"identifier": "getSecondaryIndexTableNames", "parameters": "(String tableName, HColumnDescriptor familyDesc)", "modifiers": "protected static", "return": "List<String>", "signature": "List<String> getSecondaryIndexTableNames(String tableName, HColumnDescriptor familyDesc)", "full_signature": "protected static List<String> getSecondaryIndexTableNames(String tableName, HColumnDescriptor familyDesc)", "class_method_signature": "IndexMasterObserver.getSecondaryIndexTableNames(String tableName, HColumnDescriptor familyDesc)", "testcase": false, "constructor": false}, {"identifier": "constructSecondaryIndexTableName", "parameters": "(String tableName, String familyName,\n      String columnName, String indexName)", "modifiers": "protected static", "return": "String", "signature": "String constructSecondaryIndexTableName(String tableName, String familyName,\n      String columnName, String indexName)", "full_signature": "protected static String constructSecondaryIndexTableName(String tableName, String familyName,\n      String columnName, String indexName)", "class_method_signature": "IndexMasterObserver.constructSecondaryIndexTableName(String tableName, String familyName,\n      String columnName, String indexName)", "testcase": false, "constructor": false}, {"identifier": "constructSecondaryIndexTableName", "parameters": "(byte[] tableName, byte[] familyName,\n      byte[] columnName, byte[] indexName)", "modifiers": "protected static", "return": "byte[]", "signature": "byte[] constructSecondaryIndexTableName(byte[] tableName, byte[] familyName,\n      byte[] columnName, byte[] indexName)", "full_signature": "protected static byte[] constructSecondaryIndexTableName(byte[] tableName, byte[] familyName,\n      byte[] columnName, byte[] indexName)", "class_method_signature": "IndexMasterObserver.constructSecondaryIndexTableName(byte[] tableName, byte[] familyName,\n      byte[] columnName, byte[] indexName)", "testcase": false, "constructor": false}, {"identifier": "getSecondaryIndexTableDesc", "parameters": "(String tableName)", "modifiers": "protected static", "return": "HTableDescriptor", "signature": "HTableDescriptor getSecondaryIndexTableDesc(String tableName)", "full_signature": "protected static HTableDescriptor getSecondaryIndexTableDesc(String tableName)", "class_method_signature": "IndexMasterObserver.getSecondaryIndexTableDesc(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getSecondaryIndexFamily", "parameters": "()", "modifiers": "protected static", "return": "HColumnDescriptor", "signature": "HColumnDescriptor getSecondaryIndexFamily()", "full_signature": "protected static HColumnDescriptor getSecondaryIndexFamily()", "class_method_signature": "IndexMasterObserver.getSecondaryIndexFamily()", "testcase": false, "constructor": false}, {"identifier": "isSecondaryIndexEnableTable", "parameters": "(HTableDescriptor desc)", "modifiers": "protected static", "return": "boolean", "signature": "boolean isSecondaryIndexEnableTable(HTableDescriptor desc)", "full_signature": "protected static boolean isSecondaryIndexEnableTable(HTableDescriptor desc)", "class_method_signature": "IndexMasterObserver.isSecondaryIndexEnableTable(HTableDescriptor desc)", "testcase": false, "constructor": false}, {"identifier": "isSecondaryIndexEnableFamily", "parameters": "(HColumnDescriptor desc)", "modifiers": "protected static", "return": "boolean", "signature": "boolean isSecondaryIndexEnableFamily(HColumnDescriptor desc)", "full_signature": "protected static boolean isSecondaryIndexEnableFamily(HColumnDescriptor desc)", "class_method_signature": "IndexMasterObserver.isSecondaryIndexEnableFamily(HColumnDescriptor desc)", "testcase": false, "constructor": false}, {"identifier": "preDeleteTable", "parameters": "(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "modifiers": "@Override public", "return": "void", "signature": "void preDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "full_signature": "@Override public void preDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "class_method_signature": "IndexMasterObserver.preDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "testcase": false, "constructor": false}, {"identifier": "postDeleteTable", "parameters": "(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "modifiers": "@Override public", "return": "void", "signature": "void postDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "full_signature": "@Override public void postDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "class_method_signature": "IndexMasterObserver.postDeleteTable(ObserverContext<MasterCoprocessorEnvironment> ctx,\n      byte[] tableName)", "testcase": false, "constructor": false}], "file": "themis-index/src/main/java/org/apache/hadoop/hbase/themis/index/cp/IndexMasterObserver.java"}, "focal_method": {"identifier": "getSecondaryIndexFamily", "parameters": "()", "modifiers": "protected static", "return": "HColumnDescriptor", "body": "protected static HColumnDescriptor getSecondaryIndexFamily() throws IOException {\n    HColumnDescriptor desc = new HColumnDescriptor(THEMIS_SECONDARY_INDEX_TABLE_FAMILY);\n    desc.setValue(ThemisMasterObserver.THEMIS_ENABLE_KEY, Boolean.TRUE.toString());\n    return desc;\n  }", "signature": "HColumnDescriptor getSecondaryIndexFamily()", "full_signature": "protected static HColumnDescriptor getSecondaryIndexFamily()", "class_method_signature": "IndexMasterObserver.getSecondaryIndexFamily()", "testcase": false, "constructor": false, "invocations": ["setValue", "toString"]}, "repository": {"repo_id": 19147361, "url": "https://github.com/XiaoMi/themis", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 212, "size": 1400, "license": "Apache License 2.0"}}