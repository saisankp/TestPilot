{"test_class": {"identifier": "SessionIdentifierTest", "superclass": "", "interfaces": "", "fields": [], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/manager/kafka/SessionIdentifierTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        final SessionIdentifier id1 = new SessionIdentifier(12L, \"MySession\", SessionIdentifier.Context.WEB);\n        final SessionIdentifier id2 = new SessionIdentifier(12L, \"MySession\", SessionIdentifier.Context.WEB);\n        final SessionIdentifier id3 = new SessionIdentifier(12L, \"YourSession\", SessionIdentifier.Context.WEB);\n        final SessionIdentifier id4 = new SessionIdentifier(13L, \"MySession\", SessionIdentifier.Context.WEB);\n        final SessionIdentifier id5 = new SessionIdentifier(13L, \"MySession\", SessionIdentifier.Context.STREAM);\n\n        assertTrue(\"Should be equal\", id1.equals(id1));\n        assertTrue(\"Should be equal\", id1.equals(id2));\n        assertFalse(\"Should NOT be equal\", id1.equals(null));\n        assertFalse(\"Should NOT be equal\", id1.equals(id3));\n        assertFalse(\"Should NOT be equal\", id1.equals(id4));\n        assertFalse(\"Should NOT be equal\", id3.equals(id4));\n        assertFalse(\"Should NOT be equal\", id4.equals(id5));\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "SessionIdentifierTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "SessionIdentifier", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long userId;", "modifier": "private final", "type": "long", "declarator": "userId", "var_name": "userId"}, {"original_string": "private final String sessionId;", "modifier": "private final", "type": "String", "declarator": "sessionId", "var_name": "sessionId"}, {"original_string": "private final Context context;", "modifier": "private final", "type": "Context", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "SessionIdentifier", "parameters": "(\n        final long userId,\n        @NotNull final String sessionId,\n        @NotNull final Context context\n    )", "modifiers": "public", "return": "", "signature": " SessionIdentifier(\n        final long userId,\n        @NotNull final String sessionId,\n        @NotNull final Context context\n    )", "full_signature": "public  SessionIdentifier(\n        final long userId,\n        @NotNull final String sessionId,\n        @NotNull final Context context\n    )", "class_method_signature": "SessionIdentifier.SessionIdentifier(\n        final long userId,\n        @NotNull final String sessionId,\n        @NotNull final Context context\n    )", "testcase": false, "constructor": true}, {"identifier": "getUserId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getUserId()", "full_signature": "public long getUserId()", "class_method_signature": "SessionIdentifier.getUserId()", "testcase": false, "constructor": false}, {"identifier": "getSessionId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSessionId()", "full_signature": "public String getSessionId()", "class_method_signature": "SessionIdentifier.getSessionId()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "public", "return": "Context", "signature": "Context getContext()", "full_signature": "public Context getContext()", "class_method_signature": "SessionIdentifier.getContext()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "SessionIdentifier.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SessionIdentifier.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SessionIdentifier.toString()", "testcase": false, "constructor": false}, {"identifier": "newWebIdentifier", "parameters": "(final long userId, final String sessionId)", "modifiers": "public static", "return": "SessionIdentifier", "signature": "SessionIdentifier newWebIdentifier(final long userId, final String sessionId)", "full_signature": "public static SessionIdentifier newWebIdentifier(final long userId, final String sessionId)", "class_method_signature": "SessionIdentifier.newWebIdentifier(final long userId, final String sessionId)", "testcase": false, "constructor": false}, {"identifier": "newStreamIdentifier", "parameters": "(final long userId, final String sessionId)", "modifiers": "public static", "return": "SessionIdentifier", "signature": "SessionIdentifier newStreamIdentifier(final long userId, final String sessionId)", "full_signature": "public static SessionIdentifier newStreamIdentifier(final long userId, final String sessionId)", "class_method_signature": "SessionIdentifier.newStreamIdentifier(final long userId, final String sessionId)", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/manager/kafka/SessionIdentifier.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other == null || getClass() != other.getClass()) {\n            return false;\n        }\n\n        final SessionIdentifier that = (SessionIdentifier) other;\n\n        if (userId != that.userId) {\n            return false;\n        }\n\n        if (context != that.context) {\n            return false;\n        }\n        return sessionId.equals(that.sessionId);\n    }", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "SessionIdentifier.equals(final Object other)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals"]}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}