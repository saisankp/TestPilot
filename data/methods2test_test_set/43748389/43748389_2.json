{"test_class": {"identifier": "PositionBasedTransformerTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/tags/PositionBasedTransformerTest.java"}, "test_case": {"identifier": "shouldIgnoreIncorrectPosition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldIgnoreIncorrectPosition() {\n        Map<String, PositionBasedTransformer.Category> mappings = new HashMap<String, PositionBasedTransformer.Category>();\n        mappings.put(\"incorrectTag\", new PositionBasedTransformer.Category(42, \".*\"));\n        PositionBasedTransformer transformer = new PositionBasedTransformer(mappings);\n        assertThat(transformer.getTags(\"com.izettle.metrics.influxdb.tags.PositionBasedTransformer.count\")).isEmpty();\n    }", "signature": "void shouldIgnoreIncorrectPosition()", "full_signature": "@Test public void shouldIgnoreIncorrectPosition()", "class_method_signature": "PositionBasedTransformerTest.shouldIgnoreIncorrectPosition()", "testcase": true, "constructor": false, "invocations": ["put", "isEmpty", "assertThat", "getTags"]}, "focal_class": {"identifier": "PositionBasedTransformer", "superclass": "", "interfaces": "implements Transformer", "fields": [{"original_string": "private static final String SEPARATOR = \"\\\\.\";", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = \"\\\\.\"", "var_name": "SEPARATOR"}, {"original_string": "private final Map<String, Category> mappings;", "modifier": "private final", "type": "Map<String, Category>", "declarator": "mappings", "var_name": "mappings"}], "methods": [{"identifier": "PositionBasedTransformer", "parameters": "(Map<String, Category> mappings)", "modifiers": "public", "return": "", "signature": " PositionBasedTransformer(Map<String, Category> mappings)", "full_signature": "public  PositionBasedTransformer(Map<String, Category> mappings)", "class_method_signature": "PositionBasedTransformer.PositionBasedTransformer(Map<String, Category> mappings)", "testcase": false, "constructor": true}, {"identifier": "getTags", "parameters": "(String metricsName)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags(String metricsName)", "full_signature": "@Override public Map<String, String> getTags(String metricsName)", "class_method_signature": "PositionBasedTransformer.getTags(String metricsName)", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/tags/PositionBasedTransformer.java"}, "focal_method": {"identifier": "getTags", "parameters": "(String metricsName)", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getTags(String metricsName) {\n        String[] parts = metricsName.split(SEPARATOR);\n        Map<String, String> tags = new HashMap<String, String>();\n\n        for (Map.Entry<String, Category> entry : mappings.entrySet()) {\n            final Pattern pattern = entry.getValue().getMapping();\n            final int position = entry.getValue().position;\n\n            if ((parts.length > position) && pattern.matcher(metricsName).matches()) {\n                tags.put(entry.getKey(), parts[position]);\n            }\n        }\n\n        return tags;\n    }", "signature": "Map<String, String> getTags(String metricsName)", "full_signature": "@Override public Map<String, String> getTags(String metricsName)", "class_method_signature": "PositionBasedTransformer.getTags(String metricsName)", "testcase": false, "constructor": false, "invocations": ["split", "entrySet", "getMapping", "getValue", "getValue", "matches", "matcher", "put", "getKey"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}