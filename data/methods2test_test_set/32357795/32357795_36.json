{"test_class": {"identifier": "TMXMLWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TopicMapIF topicmap;", "modifier": "private", "type": "TopicMapIF", "declarator": "topicmap", "var_name": "topicmap"}, {"original_string": "private TopicMapBuilderIF builder;", "modifier": "private", "type": "TopicMapBuilderIF", "declarator": "builder", "var_name": "builder"}, {"original_string": "private final static String testdataDirectory = \"tmxmlWriter\";", "modifier": "private final static", "type": "String", "declarator": "testdataDirectory = \"tmxmlWriter\"", "var_name": "testdataDirectory"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/xml/TMXMLWriterTest.java"}, "test_case": {"identifier": "testWriterClosing2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWriterClosing2() throws IOException {\n    // make sure the writer does not close writer objects passed in to it\n    MockWriter mock = new MockWriter();\n    TMXMLWriter writer = new TMXMLWriter(mock, \"iso-8859-1\");\n    writer.close();\n    Assert.assertFalse(\"Exporter closes external writer object\", mock.isClosed());\n  }", "signature": "void testWriterClosing2()", "full_signature": "@Test public void testWriterClosing2()", "class_method_signature": "TMXMLWriterTest.testWriterClosing2()", "testcase": true, "constructor": false, "invocations": ["close", "assertFalse", "isClosed"]}, "focal_class": {"identifier": "TMXMLWriter", "superclass": "extends AbstractTopicMapExporter", "interfaces": "implements TopicMapWriterIF", "fields": [{"original_string": "private static final String CDATA = \"CDATA\";", "modifier": "private static final", "type": "String", "declarator": "CDATA = \"CDATA\"", "var_name": "CDATA"}, {"original_string": "private static final String SCOPE = \"scope\";", "modifier": "private static final", "type": "String", "declarator": "SCOPE = \"scope\"", "var_name": "SCOPE"}, {"original_string": "public static final String PROPERTY_PREFIXES = \"prefixes\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_PREFIXES = \"prefixes\"", "var_name": "PROPERTY_PREFIXES"}, {"original_string": "public static final String PROPERTY_DOCUMENT_ELEMENT = \"documentElement\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_DOCUMENT_ELEMENT = \"documentElement\"", "var_name": "PROPERTY_DOCUMENT_ELEMENT"}, {"original_string": "protected static final AttributesImpl EMPTY_ATTR_LIST = new AttributesImpl();", "modifier": "protected static final", "type": "AttributesImpl", "declarator": "EMPTY_ATTR_LIST = new AttributesImpl()", "var_name": "EMPTY_ATTR_LIST"}, {"original_string": "protected static final String EMPTY_NAMESPACE = \"\";", "modifier": "protected static final", "type": "String", "declarator": "EMPTY_NAMESPACE = \"\"", "var_name": "EMPTY_NAMESPACE"}, {"original_string": "protected static final String EMPTY_LOCALNAME = \"\";", "modifier": "protected static final", "type": "String", "declarator": "EMPTY_LOCALNAME = \"\"", "var_name": "EMPTY_LOCALNAME"}, {"original_string": "private ContentHandler out;", "modifier": "private", "type": "ContentHandler", "declarator": "out", "var_name": "out"}, {"original_string": "private Writer writer = null;", "modifier": "private", "type": "Writer", "declarator": "writer = null", "var_name": "writer"}, {"original_string": "private String docelem = \"topicmap\";", "modifier": "private", "type": "String", "declarator": "docelem = \"topicmap\"", "var_name": "docelem"}, {"original_string": "private AttributesImpl atts = new AttributesImpl();", "modifier": "private", "type": "AttributesImpl", "declarator": "atts = new AttributesImpl()", "var_name": "atts"}, {"original_string": "private Map nsuris;", "modifier": "private", "type": "Map", "declarator": "nsuris", "var_name": "nsuris"}, {"original_string": "private Map prefixes;", "modifier": "private", "type": "Map", "declarator": "prefixes", "var_name": "prefixes"}, {"original_string": "private Set exported;", "modifier": "private", "type": "Set", "declarator": "exported", "var_name": "exported"}, {"original_string": "private Set unassigned;", "modifier": "private", "type": "Set", "declarator": "unassigned", "var_name": "unassigned"}, {"original_string": "public static final String NS_ISO = \"http://psi.topicmaps.org/iso13250/model/\";", "modifier": "public static final", "type": "String", "declarator": "NS_ISO = \"http://psi.topicmaps.org/iso13250/model/\"", "var_name": "NS_ISO"}, {"original_string": "public static final String NS_XTM = \"http://www.topicmaps.org/xtm/1.0/core.xtm#\";", "modifier": "public static final", "type": "String", "declarator": "NS_XTM = \"http://www.topicmaps.org/xtm/1.0/core.xtm#\"", "var_name": "NS_XTM"}, {"original_string": "public static final String NS_TM = \"http://psi.ontopia.net/xml/tm-xml/\";", "modifier": "public static final", "type": "String", "declarator": "NS_TM = \"http://psi.ontopia.net/xml/tm-xml/\"", "var_name": "NS_TM"}, {"original_string": "public static final String XSD_ANYURI = \"http://www.w3.org/2001/XMLSchema#anyURI\";", "modifier": "public static final", "type": "String", "declarator": "XSD_ANYURI = \"http://www.w3.org/2001/XMLSchema#anyURI\"", "var_name": "XSD_ANYURI"}, {"original_string": "public static final String XSD_STRING = \"http://www.w3.org/2001/XMLSchema#string\";", "modifier": "public static final", "type": "String", "declarator": "XSD_STRING = \"http://www.w3.org/2001/XMLSchema#string\"", "var_name": "XSD_STRING"}], "methods": [{"identifier": "TMXMLWriter", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(Writer out)", "full_signature": "public  TMXMLWriter(Writer out)", "class_method_signature": "TMXMLWriter.TMXMLWriter(Writer out)", "testcase": false, "constructor": true}, {"identifier": "TMXMLWriter", "parameters": "(Writer out, String encoding)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(Writer out, String encoding)", "full_signature": "public  TMXMLWriter(Writer out, String encoding)", "class_method_signature": "TMXMLWriter.TMXMLWriter(Writer out, String encoding)", "testcase": false, "constructor": true}, {"identifier": "TMXMLWriter", "parameters": "(File out)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(File out)", "full_signature": "public  TMXMLWriter(File out)", "class_method_signature": "TMXMLWriter.TMXMLWriter(File out)", "testcase": false, "constructor": true}, {"identifier": "TMXMLWriter", "parameters": "(File out, String encoding)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(File out, String encoding)", "full_signature": "public  TMXMLWriter(File out, String encoding)", "class_method_signature": "TMXMLWriter.TMXMLWriter(File out, String encoding)", "testcase": false, "constructor": true}, {"identifier": "TMXMLWriter", "parameters": "(OutputStream out, String encoding)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(OutputStream out, String encoding)", "full_signature": "public  TMXMLWriter(OutputStream out, String encoding)", "class_method_signature": "TMXMLWriter.TMXMLWriter(OutputStream out, String encoding)", "testcase": false, "constructor": true}, {"identifier": "TMXMLWriter", "parameters": "(ContentHandler out)", "modifiers": "public", "return": "", "signature": " TMXMLWriter(ContentHandler out)", "full_signature": "public  TMXMLWriter(ContentHandler out)", "class_method_signature": "TMXMLWriter.TMXMLWriter(ContentHandler out)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "TMXMLWriter.init()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "TMXMLWriter.close()", "testcase": false, "constructor": false}, {"identifier": "getDocumentElement", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDocumentElement()", "full_signature": "public String getDocumentElement()", "class_method_signature": "TMXMLWriter.getDocumentElement()", "testcase": false, "constructor": false}, {"identifier": "setDocumentElement", "parameters": "(String docelem)", "modifiers": "public", "return": "void", "signature": "void setDocumentElement(String docelem)", "full_signature": "public void setDocumentElement(String docelem)", "class_method_signature": "TMXMLWriter.setDocumentElement(String docelem)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(TopicMapIF topicmap)", "modifiers": "@Override public", "return": "void", "signature": "void write(TopicMapIF topicmap)", "full_signature": "@Override public void write(TopicMapIF topicmap)", "class_method_signature": "TMXMLWriter.write(TopicMapIF topicmap)", "testcase": false, "constructor": false}, {"identifier": "startTopicMap", "parameters": "(TopicMapIF topicmap)", "modifiers": "public", "return": "void", "signature": "void startTopicMap(TopicMapIF topicmap)", "full_signature": "public void startTopicMap(TopicMapIF topicmap)", "class_method_signature": "TMXMLWriter.startTopicMap(TopicMapIF topicmap)", "testcase": false, "constructor": false}, {"identifier": "gatherPrefixes", "parameters": "(Collection topics)", "modifiers": "public", "return": "void", "signature": "void gatherPrefixes(Collection topics)", "full_signature": "public void gatherPrefixes(Collection topics)", "class_method_signature": "TMXMLWriter.gatherPrefixes(Collection topics)", "testcase": false, "constructor": false}, {"identifier": "writeTopics", "parameters": "(Collection topics)", "modifiers": "public", "return": "void", "signature": "void writeTopics(Collection topics)", "full_signature": "public void writeTopics(Collection topics)", "class_method_signature": "TMXMLWriter.writeTopics(Collection topics)", "testcase": false, "constructor": false}, {"identifier": "writeTopic", "parameters": "(TopicIF topic)", "modifiers": "public", "return": "void", "signature": "void writeTopic(TopicIF topic)", "full_signature": "public void writeTopic(TopicIF topic)", "class_method_signature": "TMXMLWriter.writeTopic(TopicIF topic)", "testcase": false, "constructor": false}, {"identifier": "endTopicMap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void endTopicMap()", "full_signature": "public void endTopicMap()", "class_method_signature": "TMXMLWriter.endTopicMap()", "testcase": false, "constructor": false}, {"identifier": "gatherPrefixes", "parameters": "(TopicIF topic)", "modifiers": "public", "return": "void", "signature": "void gatherPrefixes(TopicIF topic)", "full_signature": "public void gatherPrefixes(TopicIF topic)", "class_method_signature": "TMXMLWriter.gatherPrefixes(TopicIF topic)", "testcase": false, "constructor": false}, {"identifier": "getNamespaceURIMapping", "parameters": "()", "modifiers": "public", "return": "Map", "signature": "Map getNamespaceURIMapping()", "full_signature": "public Map getNamespaceURIMapping()", "class_method_signature": "TMXMLWriter.getNamespaceURIMapping()", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "(ScopedIF scoped)", "modifiers": "private", "return": "String", "signature": "String getScope(ScopedIF scoped)", "full_signature": "private String getScope(ScopedIF scoped)", "class_method_signature": "TMXMLWriter.getScope(ScopedIF scoped)", "testcase": false, "constructor": false}, {"identifier": "findPrefixFor", "parameters": "(Collection topics)", "modifiers": "private", "return": "void", "signature": "void findPrefixFor(Collection topics)", "full_signature": "private void findPrefixFor(Collection topics)", "class_method_signature": "TMXMLWriter.findPrefixFor(Collection topics)", "testcase": false, "constructor": false}, {"identifier": "findPrefixFor", "parameters": "(TopicIF type)", "modifiers": "private", "return": "void", "signature": "void findPrefixFor(TopicIF type)", "full_signature": "private void findPrefixFor(TopicIF type)", "class_method_signature": "TMXMLWriter.findPrefixFor(TopicIF type)", "testcase": false, "constructor": false}, {"identifier": "writeText", "parameters": "(String text)", "modifiers": "private", "return": "void", "signature": "void writeText(String text)", "full_signature": "private void writeText(String text)", "class_method_signature": "TMXMLWriter.writeText(String text)", "testcase": false, "constructor": false}, {"identifier": "getElementTypeName", "parameters": "(TopicIF topic, String def)", "modifiers": "private", "return": "String", "signature": "String getElementTypeName(TopicIF topic, String def)", "full_signature": "private String getElementTypeName(TopicIF topic, String def)", "class_method_signature": "TMXMLWriter.getElementTypeName(TopicIF topic, String def)", "testcase": false, "constructor": false}, {"identifier": "getElementTypeName", "parameters": "(String psi)", "modifiers": "private", "return": "String", "signature": "String getElementTypeName(String psi)", "full_signature": "private String getElementTypeName(String psi)", "class_method_signature": "TMXMLWriter.getElementTypeName(String psi)", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "(String baseurl)", "modifiers": "private", "return": "String", "signature": "String getPrefix(String baseurl)", "full_signature": "private String getPrefix(String baseurl)", "class_method_signature": "TMXMLWriter.getPrefix(String baseurl)", "testcase": false, "constructor": false}, {"identifier": "assignRemainingNamespaces", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void assignRemainingNamespaces()", "full_signature": "private void assignRemainingNamespaces()", "class_method_signature": "TMXMLWriter.assignRemainingNamespaces()", "testcase": false, "constructor": false}, {"identifier": "getTopicId", "parameters": "(TopicIF topic)", "modifiers": "private", "return": "String", "signature": "String getTopicId(TopicIF topic)", "full_signature": "private String getTopicId(TopicIF topic)", "class_method_signature": "TMXMLWriter.getTopicId(TopicIF topic)", "testcase": false, "constructor": false}, {"identifier": "extractRelativeId", "parameters": "(String base, LocatorIF srcloc)", "modifiers": "private", "return": "String", "signature": "String extractRelativeId(String base, LocatorIF srcloc)", "full_signature": "private String extractRelativeId(String base, LocatorIF srcloc)", "class_method_signature": "TMXMLWriter.extractRelativeId(String base, LocatorIF srcloc)", "testcase": false, "constructor": false}, {"identifier": "makePrinter", "parameters": "(Writer out, String encoding)", "modifiers": "private", "return": "PrettyPrinter", "signature": "PrettyPrinter makePrinter(Writer out, String encoding)", "full_signature": "private PrettyPrinter makePrinter(Writer out, String encoding)", "class_method_signature": "TMXMLWriter.makePrinter(Writer out, String encoding)", "testcase": false, "constructor": false}, {"identifier": "addPrefix", "parameters": "(String prefix, String nsuri)", "modifiers": "public", "return": "void", "signature": "void addPrefix(String prefix, String nsuri)", "full_signature": "public void addPrefix(String prefix, String nsuri)", "class_method_signature": "TMXMLWriter.addPrefix(String prefix, String nsuri)", "testcase": false, "constructor": false}, {"identifier": "getSubjectIndicatorRef", "parameters": "(TopicIF topic, LocatorIF indicator)", "modifiers": "protected", "return": "String", "signature": "String getSubjectIndicatorRef(TopicIF topic, LocatorIF indicator)", "full_signature": "protected String getSubjectIndicatorRef(TopicIF topic, LocatorIF indicator)", "class_method_signature": "TMXMLWriter.getSubjectIndicatorRef(TopicIF topic, LocatorIF indicator)", "testcase": false, "constructor": false}, {"identifier": "addReifierAttribute", "parameters": "(ReifiableIF tmobject, AttributesImpl atts)", "modifiers": "private", "return": "void", "signature": "void addReifierAttribute(ReifiableIF tmobject, AttributesImpl atts)", "full_signature": "private void addReifierAttribute(ReifiableIF tmobject, AttributesImpl atts)", "class_method_signature": "TMXMLWriter.addReifierAttribute(ReifiableIF tmobject, AttributesImpl atts)", "testcase": false, "constructor": false}, {"identifier": "setAdditionalProperties", "parameters": "(Map<String, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void setAdditionalProperties(Map<String, Object> properties)", "full_signature": "@Override public void setAdditionalProperties(Map<String, Object> properties)", "class_method_signature": "TMXMLWriter.setAdditionalProperties(Map<String, Object> properties)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/xml/TMXMLWriter.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() throws IOException {\n    if (writer != null)\n      writer.close();\n  }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "TMXMLWriter.close()", "testcase": false, "constructor": false, "invocations": ["close"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}