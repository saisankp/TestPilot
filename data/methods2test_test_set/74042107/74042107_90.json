{"test_class": {"identifier": "ProductionSiteTest", "superclass": "", "interfaces": "implements Observer", "fields": [{"original_string": "private ProductionSite prodSite;", "modifier": "private", "type": "ProductionSite", "declarator": "prodSite", "var_name": "prodSite"}, {"original_string": "private boolean updated;", "modifier": "private", "type": "boolean", "declarator": "updated", "var_name": "updated"}], "file": "src/osip-model/src/test/java/edu/kit/pse/osip/core/model/base/ProductionSiteTest.java"}, "test_case": {"identifier": "testTooHighInputTemperature", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testTooHighInputTemperature() {\n        prodSite.setInputTemperature(TankSelector.MIX, SimulationConstants.MAX_TEMPERATURE + 1);\n    }", "signature": "void testTooHighInputTemperature()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testTooHighInputTemperature()", "class_method_signature": "ProductionSiteTest.testTooHighInputTemperature()", "testcase": true, "constructor": false, "invocations": ["setInputTemperature"]}, "focal_class": {"identifier": "ProductionSite", "superclass": "extends Observable", "interfaces": "", "fields": [{"original_string": "private MixTank mixTank;", "modifier": "private", "type": "MixTank", "declarator": "mixTank", "var_name": "mixTank"}, {"original_string": "private final EnumMap<TankSelector, Tank> tanks = new EnumMap<>(TankSelector.class);", "modifier": "private final", "type": "EnumMap<TankSelector, Tank>", "declarator": "tanks = new EnumMap<>(TankSelector.class)", "var_name": "tanks"}, {"original_string": "private final EnumMap<TankSelector, Float> inputTemperature = new EnumMap<>(TankSelector.class);", "modifier": "private final", "type": "EnumMap<TankSelector, Float>", "declarator": "inputTemperature = new EnumMap<>(TankSelector.class)", "var_name": "inputTemperature"}], "methods": [{"identifier": "ProductionSite", "parameters": "()", "modifiers": "public", "return": "", "signature": " ProductionSite()", "full_signature": "public  ProductionSite()", "class_method_signature": "ProductionSite.ProductionSite()", "testcase": false, "constructor": true}, {"identifier": "initTanks", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initTanks()", "full_signature": "private void initTanks()", "class_method_signature": "ProductionSite.initTanks()", "testcase": false, "constructor": false}, {"identifier": "instantiateTank", "parameters": "(float capacity, TankSelector tankSelector, Liquid liquid, Pipe outPipe,\n        Pipe inPipe)", "modifiers": "protected", "return": "Tank", "signature": "Tank instantiateTank(float capacity, TankSelector tankSelector, Liquid liquid, Pipe outPipe,\n        Pipe inPipe)", "full_signature": "protected Tank instantiateTank(float capacity, TankSelector tankSelector, Liquid liquid, Pipe outPipe,\n        Pipe inPipe)", "class_method_signature": "ProductionSite.instantiateTank(float capacity, TankSelector tankSelector, Liquid liquid, Pipe outPipe,\n        Pipe inPipe)", "testcase": false, "constructor": false}, {"identifier": "instantiateMixTank", "parameters": "(float capacity, Liquid liquid, Pipe outPipe)", "modifiers": "protected", "return": "MixTank", "signature": "MixTank instantiateMixTank(float capacity, Liquid liquid, Pipe outPipe)", "full_signature": "protected MixTank instantiateMixTank(float capacity, Liquid liquid, Pipe outPipe)", "class_method_signature": "ProductionSite.instantiateMixTank(float capacity, Liquid liquid, Pipe outPipe)", "testcase": false, "constructor": false}, {"identifier": "getInputTemperature", "parameters": "(TankSelector tank)", "modifiers": "public", "return": "float", "signature": "float getInputTemperature(TankSelector tank)", "full_signature": "public float getInputTemperature(TankSelector tank)", "class_method_signature": "ProductionSite.getInputTemperature(TankSelector tank)", "testcase": false, "constructor": false}, {"identifier": "setInputTemperature", "parameters": "(TankSelector tank, float temperature)", "modifiers": "public", "return": "void", "signature": "void setInputTemperature(TankSelector tank, float temperature)", "full_signature": "public void setInputTemperature(TankSelector tank, float temperature)", "class_method_signature": "ProductionSite.setInputTemperature(TankSelector tank, float temperature)", "testcase": false, "constructor": false}, {"identifier": "getUpperTank", "parameters": "(TankSelector tank)", "modifiers": "public", "return": "Tank", "signature": "Tank getUpperTank(TankSelector tank)", "full_signature": "public Tank getUpperTank(TankSelector tank)", "class_method_signature": "ProductionSite.getUpperTank(TankSelector tank)", "testcase": false, "constructor": false}, {"identifier": "getMixTank", "parameters": "()", "modifiers": "public", "return": "MixTank", "signature": "MixTank getMixTank()", "full_signature": "public MixTank getMixTank()", "class_method_signature": "ProductionSite.getMixTank()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void reset()", "full_signature": "public synchronized void reset()", "class_method_signature": "ProductionSite.reset()", "testcase": false, "constructor": false}], "file": "src/osip-model/src/main/java/edu/kit/pse/osip/core/model/base/ProductionSite.java"}, "focal_method": {"identifier": "setInputTemperature", "parameters": "(TankSelector tank, float temperature)", "modifiers": "public", "return": "void", "body": "public void setInputTemperature(TankSelector tank, float temperature) {\n        if (temperature > SimulationConstants.MAX_TEMPERATURE) {\n            throw new IllegalArgumentException(\"Tank input temperature must not be grater than \"\n                + SimulationConstants.MAX_TEMPERATURE);\n        }\n        if (temperature < SimulationConstants.MIN_TEMPERATURE) {\n            throw new IllegalArgumentException(\"Tank input temperature must not be smaller than \"\n                    + SimulationConstants.MIN_TEMPERATURE);\n        }\n\n        inputTemperature.put(tank, temperature);\n        setChanged();\n        notifyObservers();\n    }", "signature": "void setInputTemperature(TankSelector tank, float temperature)", "full_signature": "public void setInputTemperature(TankSelector tank, float temperature)", "class_method_signature": "ProductionSite.setInputTemperature(TankSelector tank, float temperature)", "testcase": false, "constructor": false, "invocations": ["put", "setChanged", "notifyObservers"]}, "repository": {"repo_id": 74042107, "url": "https://github.com/ByteHamster/PSE", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 18396, "license": "licensed"}}