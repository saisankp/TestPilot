{"test_class": {"identifier": "MachineTypeConstraintTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MACHINE_ID = \"1234\";", "modifier": "private static final", "type": "String", "declarator": "MACHINE_ID = \"1234\"", "var_name": "MACHINE_ID"}, {"original_string": "private static final String MACHINE_TYPE = \"machineType1\";", "modifier": "private static final", "type": "String", "declarator": "MACHINE_TYPE = \"machineType1\"", "var_name": "MACHINE_TYPE"}, {"original_string": "private static final String MACHINE_TYPE_ATTRIBUTE_NAME = \"machineType\";", "modifier": "private static final", "type": "String", "declarator": "MACHINE_TYPE_ATTRIBUTE_NAME = \"machineType\"", "var_name": "MACHINE_TYPE_ATTRIBUTE_NAME"}, {"original_string": "private final SchedulerConfiguration schedulerConfiguration = mock(SchedulerConfiguration.class);", "modifier": "private final", "type": "SchedulerConfiguration", "declarator": "schedulerConfiguration = mock(SchedulerConfiguration.class)", "var_name": "schedulerConfiguration"}, {"original_string": "private final AgentManagementService agentManagementService = mock(AgentManagementService.class);", "modifier": "private final", "type": "AgentManagementService", "declarator": "agentManagementService = mock(AgentManagementService.class)", "var_name": "agentManagementService"}, {"original_string": "private final MachineTypeConstraint constraint = new MachineTypeConstraint(schedulerConfiguration, agentManagementService, MACHINE_TYPE);", "modifier": "private final", "type": "MachineTypeConstraint", "declarator": "constraint = new MachineTypeConstraint(schedulerConfiguration, agentManagementService, MACHINE_TYPE)", "var_name": "constraint"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/scheduler/constraint/MachineTypeConstraintTest.java"}, "test_case": {"identifier": "machineTypeDoesMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void machineTypeDoesMatch() {\n        AgentInstance instance = AgentGenerator.agentInstances().getValue().toBuilder()\n                .withId(MACHINE_ID)\n                .withAttributes(Collections.singletonMap(MACHINE_TYPE_ATTRIBUTE_NAME, MACHINE_TYPE))\n                .build();\n        when(agentManagementService.findAgentInstance(MACHINE_ID)).thenReturn(Optional.of(instance));\n        Result result = constraint.evaluate(createTaskRequest(TASK_ID), createVirtualMachineCurrentStateMock(MACHINE_ID), createTaskTrackerState());\n        assertThat(result.isSuccessful()).isTrue();\n    }", "signature": "void machineTypeDoesMatch()", "full_signature": "@Test public void machineTypeDoesMatch()", "class_method_signature": "MachineTypeConstraintTest.machineTypeDoesMatch()", "testcase": true, "constructor": false, "invocations": ["build", "withAttributes", "withId", "toBuilder", "getValue", "agentInstances", "singletonMap", "thenReturn", "when", "findAgentInstance", "of", "evaluate", "createTaskRequest", "createVirtualMachineCurrentStateMock", "createTaskTrackerState", "isTrue", "assertThat", "isSuccessful"]}, "focal_class": {"identifier": "MachineTypeConstraint", "superclass": "", "interfaces": "implements ConstraintEvaluator", "fields": [{"original_string": "public static final String NAME = \"MachineTypeConstraint\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"MachineTypeConstraint\"", "var_name": "NAME"}, {"original_string": "private static final Result VALID = new Result(true, null);", "modifier": "private static final", "type": "Result", "declarator": "VALID = new Result(true, null)", "var_name": "VALID"}, {"original_string": "private static final Result MACHINE_DOES_NOT_EXIST = new Result(false, \"The machine does not exist\");", "modifier": "private static final", "type": "Result", "declarator": "MACHINE_DOES_NOT_EXIST = new Result(false, \"The machine does not exist\")", "var_name": "MACHINE_DOES_NOT_EXIST"}, {"original_string": "private static final Result MACHINE_TYPE_DOES_NOT_MATCH = new Result(false, \"The machine type does not match the specified machine type\");", "modifier": "private static final", "type": "Result", "declarator": "MACHINE_TYPE_DOES_NOT_MATCH = new Result(false, \"The machine type does not match the specified machine type\")", "var_name": "MACHINE_TYPE_DOES_NOT_MATCH"}, {"original_string": "private final SchedulerConfiguration configuration;", "modifier": "private final", "type": "SchedulerConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final AgentManagementService agentManagementService;", "modifier": "private final", "type": "AgentManagementService", "declarator": "agentManagementService", "var_name": "agentManagementService"}, {"original_string": "private final String machineType;", "modifier": "private final", "type": "String", "declarator": "machineType", "var_name": "machineType"}], "methods": [{"identifier": "MachineTypeConstraint", "parameters": "(SchedulerConfiguration configuration, AgentManagementService agentManagementService, String machineType)", "modifiers": "public", "return": "", "signature": " MachineTypeConstraint(SchedulerConfiguration configuration, AgentManagementService agentManagementService, String machineType)", "full_signature": "public  MachineTypeConstraint(SchedulerConfiguration configuration, AgentManagementService agentManagementService, String machineType)", "class_method_signature": "MachineTypeConstraint.MachineTypeConstraint(SchedulerConfiguration configuration, AgentManagementService agentManagementService, String machineType)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "MachineTypeConstraint.getName()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "modifiers": "@Override public", "return": "Result", "signature": "Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "full_signature": "@Override public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "class_method_signature": "MachineTypeConstraint.evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/constraint/MachineTypeConstraint.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "modifiers": "@Override public", "return": "Result", "body": "@Override\n    public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState) {\n        Optional<AgentInstance> instanceOpt = SchedulerUtils.findInstance(agentManagementService, configuration.getInstanceAttributeName(), targetVM);\n        if (!instanceOpt.isPresent()) {\n            return MACHINE_DOES_NOT_EXIST;\n        }\n\n        AgentInstance agentInstance = instanceOpt.get();\n        String instanceInstanceType = agentInstance.getAttributes().getOrDefault(configuration.getMachineTypeAttributeName(), \"\");\n        return instanceInstanceType.equalsIgnoreCase(machineType) ? VALID : MACHINE_TYPE_DOES_NOT_MATCH;\n    }", "signature": "Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "full_signature": "@Override public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "class_method_signature": "MachineTypeConstraint.evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "testcase": false, "constructor": false, "invocations": ["findInstance", "getInstanceAttributeName", "isPresent", "get", "getOrDefault", "getAttributes", "getMachineTypeAttributeName", "equalsIgnoreCase"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}