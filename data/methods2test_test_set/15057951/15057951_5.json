{"test_class": {"identifier": "StreamPartReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-serializer/src/test/java/org/smartparam/serializer/util/StreamPartReaderTest.java"}, "test_case": {"identifier": "shouldThrowExceptionWhenDanglingOpeningCharacterDetected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldThrowExceptionWhenDanglingOpeningCharacterDetected() throws IOException {\n        // given\n        String text = \"{ this has danglign opening character\";\n        StringReader reader = new StringReader(text);\n\n        // when\n        try {\n            StreamPartReader.readPart(reader, '{', '}');\n            fail(\"expected IllegalState exception but none thrown\");\n        } catch (IllegalStateException exception) {\n            // then\n            assertThat(exception).isInstanceOf(IllegalStateException.class);\n        }\n\n    }", "signature": "void shouldThrowExceptionWhenDanglingOpeningCharacterDetected()", "full_signature": "@Test public void shouldThrowExceptionWhenDanglingOpeningCharacterDetected()", "class_method_signature": "StreamPartReaderTest.shouldThrowExceptionWhenDanglingOpeningCharacterDetected()", "testcase": true, "constructor": false, "invocations": ["readPart", "fail", "isInstanceOf", "assertThat"]}, "focal_class": {"identifier": "StreamPartReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int PART_BUFFER_SIZE = 100;", "modifier": "private static final", "type": "int", "declarator": "PART_BUFFER_SIZE = 100", "var_name": "PART_BUFFER_SIZE"}], "methods": [{"identifier": "StreamPartReader", "parameters": "()", "modifiers": "private", "return": "", "signature": " StreamPartReader()", "full_signature": "private  StreamPartReader()", "class_method_signature": "StreamPartReader.StreamPartReader()", "testcase": false, "constructor": true}, {"identifier": "readPart", "parameters": "(Reader reader, char openingChar, char closingChar)", "modifiers": "public static", "return": "String", "signature": "String readPart(Reader reader, char openingChar, char closingChar)", "full_signature": "public static String readPart(Reader reader, char openingChar, char closingChar)", "class_method_signature": "StreamPartReader.readPart(Reader reader, char openingChar, char closingChar)", "testcase": false, "constructor": false}], "file": "smartparam-serializer/src/main/java/org/smartparam/serializer/util/StreamPartReader.java"}, "focal_method": {"identifier": "readPart", "parameters": "(Reader reader, char openingChar, char closingChar)", "modifiers": "public static", "return": "String", "body": "public static String readPart(Reader reader, char openingChar, char closingChar) throws IOException {\n        StringBuilder part = new StringBuilder(PART_BUFFER_SIZE);\n\n        int characterCode = reader.read();\n        int pairCounter = 0;\n        char character;\n        boolean read = false;\n        while (characterCode != -1) {\n            character = (char) characterCode;\n            if (character == openingChar) {\n                read = true;\n                pairCounter++;\n            }\n\n            if (read) {\n                part.append(character);\n            }\n\n            if (character == closingChar) {\n                pairCounter--;\n                if (pairCounter == 0) {\n                    break;\n                }\n            }\n\n            characterCode = reader.read();\n        }\n\n        if (pairCounter != 0) {\n            throw new IllegalStateException(\"Stream ended but no ending char found! Possibly because of dangling opening char.\");\n        }\n\n        return part.toString();\n    }", "signature": "String readPart(Reader reader, char openingChar, char closingChar)", "full_signature": "public static String readPart(Reader reader, char openingChar, char closingChar)", "class_method_signature": "StreamPartReader.readPart(Reader reader, char openingChar, char closingChar)", "testcase": false, "constructor": false, "invocations": ["read", "append", "read", "toString"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}