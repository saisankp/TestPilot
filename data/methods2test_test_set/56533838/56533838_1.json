{"test_class": {"identifier": "BuildFileGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SRC_DIR = Paths.get(\"googleapis\").toString();", "modifier": "private static final", "type": "String", "declarator": "SRC_DIR = Paths.get(\"googleapis\").toString()", "var_name": "SRC_DIR"}, {"original_string": "private static final String PATH_PREFIX =\n      Paths.get(\"rules_gapic\", \"bazel\", \"src\", \"test\", \"data\").toString();", "modifier": "private static final", "type": "String", "declarator": "PATH_PREFIX =\n      Paths.get(\"rules_gapic\", \"bazel\", \"src\", \"test\", \"data\").toString()", "var_name": "PATH_PREFIX"}], "file": "rules_gapic/bazel/src/test/java/com/google/api/codegen/bazel/BuildFileGeneratorTest.java"}, "test_case": {"identifier": "testRegeneration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRegeneration() throws IOException, InterruptedException {\n    // In this test we run the generator twice, changing the generated\n    // google/example/library/v1/BUILD.bazel\n    // after the first run, and verifying that some changed values are preserved\n    // (and some are not).\n    Path tempDirPath = getTemporaryDirectory();\n\n    // I'm lazy, so let's just \"cp -r\" stuff.\n    Path fixturesPath = Paths.get(PATH_PREFIX, SRC_DIR);\n    new ProcessBuilder(new String[] {\"cp\", \"-r\", fixturesPath.toString(), tempDirPath.toString()})\n        .start()\n        .waitFor();\n\n    String buildozerPath = getBuildozerPath();\n    Path copiedGoogleapis = Paths.get(tempDirPath.toString(), \"googleapis\");\n    ArgsParser args =\n        new ArgsParser(new String[] {\"--buildozer=\" + buildozerPath, \"--src=\" + copiedGoogleapis});\n    new BuildFileGenerator()\n        .generateBuildFiles(args.createApisVisitor(null, tempDirPath.toString()));\n\n    Path fileBodyPathPrefix =\n        Paths.get(copiedGoogleapis.toString(), \"google\", \"example\", \"library\");\n    Path gapicBuildFilePath = Paths.get(fileBodyPathPrefix.toString(), \"v1\", \"BUILD.bazel\");\n    String rawBuildFilePath = Paths.get(fileBodyPathPrefix.toString(), \"BUILD.bazel\").toString();\n\n    Assert.assertEquals(\n        ApisVisitor.readFile(gapicBuildFilePath.toString() + \".baseline\"),\n        ApisVisitor.readFile(gapicBuildFilePath.toString()));\n    Assert.assertEquals(\n        ApisVisitor.readFile(rawBuildFilePath + \".baseline\"),\n        ApisVisitor.readFile(rawBuildFilePath));\n\n    // Now change some values in google/example/library/v1/BUILD.bazel\n    Buildozer.setBinaryPath(buildozerPath);\n    Buildozer buildozer = Buildozer.getInstance();\n    // The following values should be preserved:\n    buildozer.batchSetAttribute(\n        gapicBuildFilePath, \"library_nodejs_gapic\", \"package_name\", \"@google-cloud/library\");\n    buildozer.batchRemoveAttribute(\n        gapicBuildFilePath, \"library_nodejs_gapic\", \"extra_protoc_parameters\");\n    buildozer.batchAddAttribute(\n        gapicBuildFilePath, \"library_nodejs_gapic\", \"extra_protoc_parameters\", \"param1\");\n    buildozer.batchAddAttribute(\n        gapicBuildFilePath, \"library_nodejs_gapic\", \"extra_protoc_parameters\", \"param2\");\n    buildozer.batchSetAttribute(\n        gapicBuildFilePath,\n        \"google-cloud-example-library-v1-csharp\",\n        \"name\",\n        \"renamed_csharp_rule\");\n    buildozer.batchSetAttribute(\n        gapicBuildFilePath, \"google-cloud-example-library-v1-java\", \"name\", \"renamed_java_rule\");\n\n    // The following values should NOT be preserved:\n    buildozer.batchSetAttribute(\n        gapicBuildFilePath,\n        \"library_nodejs_gapic\",\n        \"grpc_service_config\",\n        \"fake_grpc_service_config\");\n\n    buildozer.commit();\n\n    // Run the generator again\n    new BuildFileGenerator()\n        .generateBuildFiles(args.createApisVisitor(null, tempDirPath.toString()));\n\n    // Check that values are preserved\n    Assert.assertEquals(\n        \"@google-cloud/library\",\n        buildozer.getAttribute(gapicBuildFilePath, \"library_nodejs_gapic\", \"package_name\"));\n    Assert.assertEquals(\n        \"[param1 param2]\",\n        buildozer.getAttribute(\n            gapicBuildFilePath, \"library_nodejs_gapic\", \"extra_protoc_parameters\"));\n    Assert.assertEquals(\n        \"renamed_csharp_rule\",\n        buildozer.getAttribute(gapicBuildFilePath, \"%csharp_gapic_assembly_pkg\", \"name\"));\n    Assert.assertEquals(\n        \"renamed_java_rule\",\n        buildozer.getAttribute(gapicBuildFilePath, \"%java_gapic_assembly_gradle_pkg\", \"name\"));\n    // Check that grpc_service_config value is not preserved:\n    Assert.assertEquals(\n        \"library_example_grpc_service_config.json\",\n        buildozer.getAttribute(gapicBuildFilePath, \"library_nodejs_gapic\", \"grpc_service_config\"));\n\n    // Now run with overwrite and verify it actually ignores all the changes\n    ArgsParser argsOverwrite =\n        new ArgsParser(\n            new String[] {\n              \"--overwrite\", \"--buildozer=\" + buildozerPath, \"--src=\" + copiedGoogleapis\n            });\n    new BuildFileGenerator()\n        .generateBuildFiles(argsOverwrite.createApisVisitor(null, tempDirPath.toString()));\n    Assert.assertEquals(\n        ApisVisitor.readFile(gapicBuildFilePath.toString() + \".baseline\"),\n        ApisVisitor.readFile(gapicBuildFilePath.toString()));\n    Assert.assertEquals(\n        ApisVisitor.readFile(rawBuildFilePath + \".baseline\"),\n        ApisVisitor.readFile(rawBuildFilePath));\n  }", "signature": "void testRegeneration()", "full_signature": "@Test public void testRegeneration()", "class_method_signature": "BuildFileGeneratorTest.testRegeneration()", "testcase": true, "constructor": false, "invocations": ["getTemporaryDirectory", "get", "waitFor", "start", "toString", "toString", "getBuildozerPath", "get", "toString", "generateBuildFiles", "createApisVisitor", "toString", "get", "toString", "get", "toString", "toString", "get", "toString", "assertEquals", "readFile", "toString", "readFile", "toString", "assertEquals", "readFile", "readFile", "setBinaryPath", "getInstance", "batchSetAttribute", "batchRemoveAttribute", "batchAddAttribute", "batchAddAttribute", "batchSetAttribute", "batchSetAttribute", "batchSetAttribute", "commit", "generateBuildFiles", "createApisVisitor", "toString", "assertEquals", "getAttribute", "assertEquals", "getAttribute", "assertEquals", "getAttribute", "assertEquals", "getAttribute", "assertEquals", "getAttribute", "generateBuildFiles", "createApisVisitor", "toString", "assertEquals", "readFile", "toString", "readFile", "toString", "assertEquals", "readFile", "readFile"]}, "focal_class": {"identifier": "BuildFileGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "BuildFileGenerator.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "generateBuildFiles", "parameters": "(ApisVisitor visitor)", "modifiers": "", "return": "void", "signature": "void generateBuildFiles(ApisVisitor visitor)", "full_signature": " void generateBuildFiles(ApisVisitor visitor)", "class_method_signature": "BuildFileGenerator.generateBuildFiles(ApisVisitor visitor)", "testcase": false, "constructor": false}], "file": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BuildFileGenerator.java"}, "focal_method": {"identifier": "generateBuildFiles", "parameters": "(ApisVisitor visitor)", "modifiers": "", "return": "void", "body": "void generateBuildFiles(ApisVisitor visitor) throws IOException {\n    System.out.println(\"\\n\\n========== READING INPUT DIRECTORY ==========\");\n    Files.walkFileTree(visitor.getSrcDir(), visitor);\n    visitor.setWriterMode(true);\n    System.out.println(\"\\n\\n========== WRITING GENERATED FILES ==========\");\n    Files.walkFileTree(visitor.getSrcDir(), visitor);\n\n    System.out.println(\"\\nBUILD.bazel file generation completed successfully\\n\");\n  }", "signature": "void generateBuildFiles(ApisVisitor visitor)", "full_signature": " void generateBuildFiles(ApisVisitor visitor)", "class_method_signature": "BuildFileGenerator.generateBuildFiles(ApisVisitor visitor)", "testcase": false, "constructor": false, "invocations": ["println", "walkFileTree", "getSrcDir", "setWriterMode", "println", "walkFileTree", "getSrcDir", "println"]}, "repository": {"repo_id": 56533838, "url": "https://github.com/googleapis/gapic-generator", "stars": 143, "created": "4/18/2016 6:58:04 PM +00:00", "updates": "2020-01-24T22:28:55+00:00", "fork": "False", "license": "licensed"}}