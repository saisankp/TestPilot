{"test_class": {"identifier": "StringRegexpReplaceResponseFormatterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] templateResource;", "modifier": "private", "type": "byte[]", "declarator": "templateResource", "var_name": "templateResource"}, {"original_string": "private ParameterList parameterList;", "modifier": "private", "type": "ParameterList", "declarator": "parameterList", "var_name": "parameterList"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private HttpServletResponse response;", "modifier": "private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private StringRegexpReplaceResponseFormatter underTest;", "modifier": "private", "type": "StringRegexpReplaceResponseFormatter", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/stub/response/formatter/string/StringRegexpReplaceResponseFormatterTest.java"}, "test_case": {"identifier": "testFormatTemplateWhenMultipleParametersShouldReplaceString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormatTemplateWhenMultipleParametersShouldReplaceString() throws Exception {\n        //GIVEN\n        templateResource = \"123 this is a test template 123\".getBytes();\n        parameterList.addParameter(new Parameter(\"[0-2]+\", \"HELLO\"));\n        parameterList.addParameter(new Parameter(\"is\", \"is not\"));\n        //WHEN\n        byte[] actual = underTest.formatResponse(request, response, templateResource, parameterList);\n        //THEN\n        assertEquals(actual, \"HELLO3 this not is not a test template HELLO3\".getBytes());\n    }", "signature": "void testFormatTemplateWhenMultipleParametersShouldReplaceString()", "full_signature": "@Test public void testFormatTemplateWhenMultipleParametersShouldReplaceString()", "class_method_signature": "StringRegexpReplaceResponseFormatterTest.testFormatTemplateWhenMultipleParametersShouldReplaceString()", "testcase": true, "constructor": false, "invocations": ["getBytes", "addParameter", "addParameter", "formatResponse", "assertEquals", "getBytes"]}, "focal_class": {"identifier": "StringRegexpReplaceResponseFormatter", "superclass": "", "interfaces": "implements ResponseFormatter", "fields": [], "methods": [{"identifier": "formatResponse", "parameters": "(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "full_signature": "@Override public byte[] formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "class_method_signature": "StringRegexpReplaceResponseFormatter.formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "(final byte[] templateResource, final ParameterList params)", "modifiers": "private", "return": "String", "signature": "String getTemplate(final byte[] templateResource, final ParameterList params)", "full_signature": "private String getTemplate(final byte[] templateResource, final ParameterList params)", "class_method_signature": "StringRegexpReplaceResponseFormatter.getTemplate(final byte[] templateResource, final ParameterList params)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/stub/response/formatter/string/StringRegexpReplaceResponseFormatter.java"}, "focal_method": {"identifier": "formatResponse", "parameters": "(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params) throws Exception {\n        byte[] result = templateResource;\n        String template = null;\n        if (!params.getAllParameters().isEmpty()) {\n            template = getTemplate(templateResource, params);\n            result = template.getBytes(StandardCharsets.UTF_8);\n        }\n        return result;\n    }", "signature": "byte[] formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "full_signature": "@Override public byte[] formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "class_method_signature": "StringRegexpReplaceResponseFormatter.formatResponse(final WilmaHttpRequest wilmaRequest, final HttpServletResponse resp,\n                                 final byte[] templateResource, final ParameterList params)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getAllParameters", "getTemplate", "getBytes"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}