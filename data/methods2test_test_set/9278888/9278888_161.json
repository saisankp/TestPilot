{"test_class": {"identifier": "DubboServerRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Invoker invoker = mock(Invoker.class);", "modifier": "", "type": "Invoker", "declarator": "invoker = mock(Invoker.class)", "var_name": "invoker"}, {"original_string": "Invocation invocation = mock(Invocation.class);", "modifier": "", "type": "Invocation", "declarator": "invocation = mock(Invocation.class)", "var_name": "invocation"}, {"original_string": "URL url = URL.valueOf(\"dubbo://localhost:6666?scope=remote&interface=brave.dubbo.GreeterService\");", "modifier": "", "type": "URL", "declarator": "url = URL.valueOf(\"dubbo://localhost:6666?scope=remote&interface=brave.dubbo.GreeterService\")", "var_name": "url"}, {"original_string": "DubboServerRequest request = new DubboServerRequest(invoker, invocation);", "modifier": "", "type": "DubboServerRequest", "declarator": "request = new DubboServerRequest(invoker, invocation)", "var_name": "request"}], "file": "instrumentation/dubbo-rpc/src/test/java/brave/dubbo/rpc/DubboServerRequestTest.java"}, "test_case": {"identifier": "invocation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void invocation() {\n    assertThat(request.invocation()).isSameAs(invocation);\n  }", "signature": "void invocation()", "full_signature": "@Test public void invocation()", "class_method_signature": "DubboServerRequestTest.invocation()", "testcase": true, "constructor": false, "invocations": ["isSameAs", "assertThat", "invocation"]}, "focal_class": {"identifier": "DubboServerRequest", "superclass": "extends RpcServerRequest", "interfaces": "implements DubboRequest", "fields": [{"original_string": "final Invoker<?> invoker;", "modifier": "final", "type": "Invoker<?>", "declarator": "invoker", "var_name": "invoker"}, {"original_string": "final Invocation invocation;", "modifier": "final", "type": "Invocation", "declarator": "invocation", "var_name": "invocation"}], "methods": [{"identifier": "DubboServerRequest", "parameters": "(Invoker<?> invoker, Invocation invocation)", "modifiers": "", "return": "", "signature": " DubboServerRequest(Invoker<?> invoker, Invocation invocation)", "full_signature": "  DubboServerRequest(Invoker<?> invoker, Invocation invocation)", "class_method_signature": "DubboServerRequest.DubboServerRequest(Invoker<?> invoker, Invocation invocation)", "testcase": false, "constructor": true}, {"identifier": "invoker", "parameters": "()", "modifiers": "@Override public", "return": "Invoker<?>", "signature": "Invoker<?> invoker()", "full_signature": "@Override public Invoker<?> invoker()", "class_method_signature": "DubboServerRequest.invoker()", "testcase": false, "constructor": false}, {"identifier": "invocation", "parameters": "()", "modifiers": "@Override public", "return": "Invocation", "signature": "Invocation invocation()", "full_signature": "@Override public Invocation invocation()", "class_method_signature": "DubboServerRequest.invocation()", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "()", "modifiers": "@Override public", "return": "Invocation", "signature": "Invocation unwrap()", "full_signature": "@Override public Invocation unwrap()", "class_method_signature": "DubboServerRequest.unwrap()", "testcase": false, "constructor": false}, {"identifier": "method", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String method()", "full_signature": "@Override public String method()", "class_method_signature": "DubboServerRequest.method()", "testcase": false, "constructor": false}, {"identifier": "service", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String service()", "full_signature": "@Override public String service()", "class_method_signature": "DubboServerRequest.service()", "testcase": false, "constructor": false}, {"identifier": "parseRemoteIpAndPort", "parameters": "(Span span)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean parseRemoteIpAndPort(Span span)", "full_signature": "@Override public boolean parseRemoteIpAndPort(Span span)", "class_method_signature": "DubboServerRequest.parseRemoteIpAndPort(Span span)", "testcase": false, "constructor": false}, {"identifier": "propagationField", "parameters": "(String keyName)", "modifiers": "@Override protected", "return": "String", "signature": "String propagationField(String keyName)", "full_signature": "@Override protected String propagationField(String keyName)", "class_method_signature": "DubboServerRequest.propagationField(String keyName)", "testcase": false, "constructor": false}], "file": "instrumentation/dubbo-rpc/src/main/java/brave/dubbo/rpc/DubboServerRequest.java"}, "focal_method": {"identifier": "invocation", "parameters": "()", "modifiers": "@Override public", "return": "Invocation", "body": "@Override public Invocation invocation() {\n    return invocation;\n  }", "signature": "Invocation invocation()", "full_signature": "@Override public Invocation invocation()", "class_method_signature": "DubboServerRequest.invocation()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}