{"test_class": {"identifier": "ParameterUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PARAM_WITH_WHITESPACE = \"-Djboss.server.base.dir=Does contain whitespaces\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_WITH_WHITESPACE = \"-Djboss.server.base.dir=Does contain whitespaces\"", "var_name": "PARAM_WITH_WHITESPACE"}, {"original_string": "private static final String QUOTED_PARAM_WITH_WHITESPACE = \"\\\"\" + PARAM_WITH_WHITESPACE + \"\\\"\";", "modifier": "private static final", "type": "String", "declarator": "QUOTED_PARAM_WITH_WHITESPACE = \"\\\"\" + PARAM_WITH_WHITESPACE + \"\\\"\"", "var_name": "QUOTED_PARAM_WITH_WHITESPACE"}, {"original_string": "private static final String PARAM_WITHOUT_WHITESPACE = \"-Djboss.http.port=8080\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_WITHOUT_WHITESPACE = \"-Djboss.http.port=8080\"", "var_name": "PARAM_WITHOUT_WHITESPACE"}], "file": "common/src/test/java/org/jboss/as/arquillian/container/ParameterUtilsTest.java"}, "test_case": {"identifier": "onlyParamsWithoutWhitespaces", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onlyParamsWithoutWhitespaces() {\n        List<String> splitParams = ParameterUtils.splitParams(PARAM_WITHOUT_WHITESPACE.concat(\" \").concat(PARAM_WITHOUT_WHITESPACE).concat(\" \").concat(PARAM_WITHOUT_WHITESPACE));\n        Assert.assertArrayEquals(new String[] {PARAM_WITHOUT_WHITESPACE, PARAM_WITHOUT_WHITESPACE, PARAM_WITHOUT_WHITESPACE}, splitParams.toArray(new String[0]));\n    }", "signature": "void onlyParamsWithoutWhitespaces()", "full_signature": "@Test public void onlyParamsWithoutWhitespaces()", "class_method_signature": "ParameterUtilsTest.onlyParamsWithoutWhitespaces()", "testcase": true, "constructor": false, "invocations": ["splitParams", "concat", "concat", "concat", "concat", "assertArrayEquals", "toArray"]}, "focal_class": {"identifier": "ParameterUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern WHITESPACE_IF_NOT_QUOTED = Pattern.compile(\"\\\"([^\\\"]*)\\\"|(\\\\S+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "WHITESPACE_IF_NOT_QUOTED = Pattern.compile(\"\\\"([^\\\"]*)\\\"|(\\\\S+)\")", "var_name": "WHITESPACE_IF_NOT_QUOTED"}], "methods": [{"identifier": "splitParams", "parameters": "(String parameterString)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> splitParams(String parameterString)", "full_signature": "public static List<String> splitParams(String parameterString)", "class_method_signature": "ParameterUtils.splitParams(String parameterString)", "testcase": false, "constructor": false}, {"identifier": "ParameterUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ParameterUtils()", "full_signature": "private  ParameterUtils()", "class_method_signature": "ParameterUtils.ParameterUtils()", "testcase": false, "constructor": true}], "file": "common/src/main/java/org/jboss/as/arquillian/container/ParameterUtils.java"}, "focal_method": {"identifier": "splitParams", "parameters": "(String parameterString)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> splitParams(String parameterString) {\n\n        ArrayList<String> params = new ArrayList<>();\n        Matcher m = WHITESPACE_IF_NOT_QUOTED.matcher(parameterString);\n        while (m.find()) {\n            if (m.group(1) != null) {\n                // Add double-quoted string without the quotes\n                params.add(m.group(1));\n            } else {\n                // Add unquoted word\n                params.add(m.group(2));\n            }\n        }\n        return params;\n    }", "signature": "List<String> splitParams(String parameterString)", "full_signature": "public static List<String> splitParams(String parameterString)", "class_method_signature": "ParameterUtils.splitParams(String parameterString)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "group", "add", "group", "add", "group"]}, "repository": {"repo_id": 21427154, "url": "https://github.com/wildfly/wildfly-arquillian", "language": "Java", "is_fork": false, "fork_count": 60, "stargazer_count": 29, "size": 1721, "license": "licensed"}}