{"test_class": {"identifier": "GeosupportVersionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GeosupportVersion geosupportVersion;", "modifier": "private", "type": "GeosupportVersion", "declarator": "geosupportVersion", "var_name": "geosupportVersion"}, {"original_string": "private List<FileInfo> fileInfoList;", "modifier": "private", "type": "List<FileInfo>", "declarator": "fileInfoList", "var_name": "fileInfoList"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/domain/GeosupportVersionTest.java"}, "test_case": {"identifier": "testGetVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetVersion()\n    {\n        assertEquals(GeosupportVersion.VERSION_NOT_AVAILABLE,this.geosupportVersion.getVersion());\n        addTag(GeosupportVersion.GEO_FILE_TAG, \"0132\");\n        assertEquals(\"13.2\", geosupportVersion.getVersion());\n    }", "signature": "void testGetVersion()", "full_signature": "@Test public void testGetVersion()", "class_method_signature": "GeosupportVersionTest.testGetVersion()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getVersion", "addTag", "assertEquals", "getVersion"]}, "focal_class": {"identifier": "GeosupportVersion", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String GEO_FILE_TAG = \"GEO\";", "modifier": "public static final", "type": "String", "declarator": "GEO_FILE_TAG = \"GEO\"", "var_name": "GEO_FILE_TAG"}, {"original_string": "public static final String PAD_FILE_TAG = \"PAD\";", "modifier": "public static final", "type": "String", "declarator": "PAD_FILE_TAG = \"PAD\"", "var_name": "PAD_FILE_TAG"}, {"original_string": "public static final String RELEASE_NOT_AVAILABLE = \"RELEASE_NOT_AVAILABLE\";", "modifier": "public static final", "type": "String", "declarator": "RELEASE_NOT_AVAILABLE = \"RELEASE_NOT_AVAILABLE\"", "var_name": "RELEASE_NOT_AVAILABLE"}, {"original_string": "public static final String VERSION_NOT_AVAILABLE = \"VERSION_NOT_AVAILABLE\";", "modifier": "public static final", "type": "String", "declarator": "VERSION_NOT_AVAILABLE = \"VERSION_NOT_AVAILABLE\"", "var_name": "VERSION_NOT_AVAILABLE"}, {"original_string": "private List<FileInfo> geoFileInfo;", "modifier": "private", "type": "List<FileInfo>", "declarator": "geoFileInfo", "var_name": "geoFileInfo"}, {"original_string": "private ThinFileInfo thinFileInfo;", "modifier": "private", "type": "ThinFileInfo", "declarator": "thinFileInfo", "var_name": "thinFileInfo"}, {"original_string": "private FileInfo grid1RFileInfo;", "modifier": "private", "type": "FileInfo", "declarator": "grid1RFileInfo", "var_name": "grid1RFileInfo"}, {"original_string": "private FileInfo auxsegFileInfo;", "modifier": "private", "type": "FileInfo", "declarator": "auxsegFileInfo", "var_name": "auxsegFileInfo"}, {"original_string": "private FileInfo tpadFileInfo;", "modifier": "private", "type": "FileInfo", "declarator": "tpadFileInfo", "var_name": "tpadFileInfo"}, {"original_string": "private FileInfo apequivFileInfo;", "modifier": "private", "type": "FileInfo", "declarator": "apequivFileInfo", "var_name": "apequivFileInfo"}, {"original_string": "private List<String> dsNames;", "modifier": "private", "type": "List<String>", "declarator": "dsNames", "var_name": "dsNames"}], "methods": [{"identifier": "GeosupportVersion", "parameters": "()", "modifiers": "public", "return": "", "signature": " GeosupportVersion()", "full_signature": "public  GeosupportVersion()", "class_method_signature": "GeosupportVersion.GeosupportVersion()", "testcase": false, "constructor": true}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "GeosupportVersion.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getRelease", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRelease()", "full_signature": "public String getRelease()", "class_method_signature": "GeosupportVersion.getRelease()", "testcase": false, "constructor": false}, {"identifier": "formatVersion", "parameters": "(String version)", "modifiers": "", "return": "String", "signature": "String formatVersion(String version)", "full_signature": " String formatVersion(String version)", "class_method_signature": "GeosupportVersion.formatVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "formatRelease", "parameters": "(String version)", "modifiers": "", "return": "String", "signature": "String formatRelease(String version)", "full_signature": " String formatRelease(String version)", "class_method_signature": "GeosupportVersion.formatRelease(String version)", "testcase": false, "constructor": false}, {"identifier": "findGeoFileInfo", "parameters": "(String tag)", "modifiers": "private", "return": "FileInfo", "signature": "FileInfo findGeoFileInfo(String tag)", "full_signature": "private FileInfo findGeoFileInfo(String tag)", "class_method_signature": "GeosupportVersion.findGeoFileInfo(String tag)", "testcase": false, "constructor": false}, {"identifier": "getGeoFileInfo", "parameters": "()", "modifiers": "public", "return": "List<FileInfo>", "signature": "List<FileInfo> getGeoFileInfo()", "full_signature": "public List<FileInfo> getGeoFileInfo()", "class_method_signature": "GeosupportVersion.getGeoFileInfo()", "testcase": false, "constructor": false}, {"identifier": "getThinFileInfo", "parameters": "()", "modifiers": "public", "return": "ThinFileInfo", "signature": "ThinFileInfo getThinFileInfo()", "full_signature": "public ThinFileInfo getThinFileInfo()", "class_method_signature": "GeosupportVersion.getThinFileInfo()", "testcase": false, "constructor": false}, {"identifier": "getGrid1RFileInfo", "parameters": "()", "modifiers": "public", "return": "FileInfo", "signature": "FileInfo getGrid1RFileInfo()", "full_signature": "public FileInfo getGrid1RFileInfo()", "class_method_signature": "GeosupportVersion.getGrid1RFileInfo()", "testcase": false, "constructor": false}, {"identifier": "getAuxsegFileInfo", "parameters": "()", "modifiers": "public", "return": "FileInfo", "signature": "FileInfo getAuxsegFileInfo()", "full_signature": "public FileInfo getAuxsegFileInfo()", "class_method_signature": "GeosupportVersion.getAuxsegFileInfo()", "testcase": false, "constructor": false}, {"identifier": "getTpadFileInfo", "parameters": "()", "modifiers": "public", "return": "FileInfo", "signature": "FileInfo getTpadFileInfo()", "full_signature": "public FileInfo getTpadFileInfo()", "class_method_signature": "GeosupportVersion.getTpadFileInfo()", "testcase": false, "constructor": false}, {"identifier": "getApequivFileInfo", "parameters": "()", "modifiers": "public", "return": "FileInfo", "signature": "FileInfo getApequivFileInfo()", "full_signature": "public FileInfo getApequivFileInfo()", "class_method_signature": "GeosupportVersion.getApequivFileInfo()", "testcase": false, "constructor": false}, {"identifier": "setGeoFileInfo", "parameters": "(List<FileInfo> geoFileInfo)", "modifiers": "public", "return": "void", "signature": "void setGeoFileInfo(List<FileInfo> geoFileInfo)", "full_signature": "public void setGeoFileInfo(List<FileInfo> geoFileInfo)", "class_method_signature": "GeosupportVersion.setGeoFileInfo(List<FileInfo> geoFileInfo)", "testcase": false, "constructor": false}, {"identifier": "setThinFileInfo", "parameters": "(ThinFileInfo thinFileInfo)", "modifiers": "public", "return": "void", "signature": "void setThinFileInfo(ThinFileInfo thinFileInfo)", "full_signature": "public void setThinFileInfo(ThinFileInfo thinFileInfo)", "class_method_signature": "GeosupportVersion.setThinFileInfo(ThinFileInfo thinFileInfo)", "testcase": false, "constructor": false}, {"identifier": "setGrid1RFileInfo", "parameters": "(FileInfo grid1rFileInfo)", "modifiers": "public", "return": "void", "signature": "void setGrid1RFileInfo(FileInfo grid1rFileInfo)", "full_signature": "public void setGrid1RFileInfo(FileInfo grid1rFileInfo)", "class_method_signature": "GeosupportVersion.setGrid1RFileInfo(FileInfo grid1rFileInfo)", "testcase": false, "constructor": false}, {"identifier": "setAuxsegFileInfo", "parameters": "(FileInfo auxsegFileInfo)", "modifiers": "public", "return": "void", "signature": "void setAuxsegFileInfo(FileInfo auxsegFileInfo)", "full_signature": "public void setAuxsegFileInfo(FileInfo auxsegFileInfo)", "class_method_signature": "GeosupportVersion.setAuxsegFileInfo(FileInfo auxsegFileInfo)", "testcase": false, "constructor": false}, {"identifier": "setTpadFileInfo", "parameters": "(FileInfo tpadFileInfo)", "modifiers": "public", "return": "void", "signature": "void setTpadFileInfo(FileInfo tpadFileInfo)", "full_signature": "public void setTpadFileInfo(FileInfo tpadFileInfo)", "class_method_signature": "GeosupportVersion.setTpadFileInfo(FileInfo tpadFileInfo)", "testcase": false, "constructor": false}, {"identifier": "setApequivFileInfo", "parameters": "(FileInfo apequivFileInfo)", "modifiers": "public", "return": "void", "signature": "void setApequivFileInfo(FileInfo apequivFileInfo)", "full_signature": "public void setApequivFileInfo(FileInfo apequivFileInfo)", "class_method_signature": "GeosupportVersion.setApequivFileInfo(FileInfo apequivFileInfo)", "testcase": false, "constructor": false}, {"identifier": "getDsNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDsNames()", "full_signature": "public List<String> getDsNames()", "class_method_signature": "GeosupportVersion.getDsNames()", "testcase": false, "constructor": false}, {"identifier": "setDsNames", "parameters": "(List<String> dsNames)", "modifiers": "public", "return": "void", "signature": "void setDsNames(List<String> dsNames)", "full_signature": "public void setDsNames(List<String> dsNames)", "class_method_signature": "GeosupportVersion.setDsNames(List<String> dsNames)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GeosupportVersion.toString()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/domain/GeosupportVersion.java"}, "focal_method": {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getVersion()\n    {\n        FileInfo f = findGeoFileInfo(GEO_FILE_TAG);\n        if (f != null && f.getRelease() != null)\n        {\n            return formatVersion(f.getRelease());\n        }\n        return VERSION_NOT_AVAILABLE;\n    }", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "GeosupportVersion.getVersion()", "testcase": false, "constructor": false, "invocations": ["findGeoFileInfo", "getRelease", "formatVersion", "getRelease"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}