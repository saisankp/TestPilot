{"test_class": {"identifier": "Ed25519SchemeProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/ed25519/Ed25519SchemeProviderTest.java"}, "test_case": {"identifier": "success_GeneratePrivateKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_GeneratePrivateKey() {\n        SchemeProvider provider = new Ed25519SchemeProvider(HashAlgorithm.KECCAK_512);\n        PrivateKey privateKey = provider.generatePrivateKey();\n\n        assertNotNull(privateKey);\n        assertThat((privateKey instanceof PrivateKeyEd25519), is(true));\n    }", "signature": "void success_GeneratePrivateKey()", "full_signature": "@Test public void success_GeneratePrivateKey()", "class_method_signature": "Ed25519SchemeProviderTest.success_GeneratePrivateKey()", "testcase": true, "constructor": false, "invocations": ["generatePrivateKey", "assertNotNull", "assertThat", "is"]}, "focal_class": {"identifier": "Ed25519SchemeProvider", "superclass": "extends SchemeProvider", "interfaces": "", "fields": [{"original_string": "private final HashAlgorithm hashAlgorithm;", "modifier": "private final", "type": "HashAlgorithm", "declarator": "hashAlgorithm", "var_name": "hashAlgorithm"}], "methods": [{"identifier": "Ed25519SchemeProvider", "parameters": "(HashAlgorithm algorithm)", "modifiers": "public", "return": "", "signature": " Ed25519SchemeProvider(HashAlgorithm algorithm)", "full_signature": "public  Ed25519SchemeProvider(HashAlgorithm algorithm)", "class_method_signature": "Ed25519SchemeProvider.Ed25519SchemeProvider(HashAlgorithm algorithm)", "testcase": false, "constructor": true}, {"identifier": "getSigner", "parameters": "()", "modifiers": "@Override public", "return": "EdDsaSigner", "signature": "EdDsaSigner getSigner()", "full_signature": "@Override public EdDsaSigner getSigner()", "class_method_signature": "Ed25519SchemeProvider.getSigner()", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyDelegate", "parameters": "()", "modifiers": "@Override public", "return": "PublicKeyDelegate", "signature": "PublicKeyDelegate getPublicKeyDelegate()", "full_signature": "@Override public PublicKeyDelegate getPublicKeyDelegate()", "class_method_signature": "Ed25519SchemeProvider.getPublicKeyDelegate()", "testcase": false, "constructor": false}, {"identifier": "generatePrivateKey", "parameters": "()", "modifiers": "@Override public", "return": "PrivateKey", "signature": "PrivateKey generatePrivateKey()", "full_signature": "@Override public PrivateKey generatePrivateKey()", "class_method_signature": "Ed25519SchemeProvider.generatePrivateKey()", "testcase": false, "constructor": false}, {"identifier": "preHash", "parameters": "(byte[] input)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] preHash(byte[] input)", "full_signature": "@Override public byte[] preHash(byte[] input)", "class_method_signature": "Ed25519SchemeProvider.preHash(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "dom", "parameters": "(byte[] context)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] dom(byte[] context)", "full_signature": "@Override public byte[] dom(byte[] context)", "class_method_signature": "Ed25519SchemeProvider.dom(byte[] context)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/ed25519/Ed25519SchemeProvider.java"}, "focal_method": {"identifier": "generatePrivateKey", "parameters": "()", "modifiers": "@Override public", "return": "PrivateKey", "body": "@Override\n    public PrivateKey generatePrivateKey() {\n        SecureRandom random = new SecureRandom();\n        byte[] seed = new byte[32];\n        random.nextBytes(seed);\n        return PrivateKey.newInstance(seed);\n    }", "signature": "PrivateKey generatePrivateKey()", "full_signature": "@Override public PrivateKey generatePrivateKey()", "class_method_signature": "Ed25519SchemeProvider.generatePrivateKey()", "testcase": false, "constructor": false, "invocations": ["nextBytes", "newInstance"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}