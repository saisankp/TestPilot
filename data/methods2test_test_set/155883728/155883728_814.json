{"test_class": {"identifier": "DefaultRepoInitFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/repoinit/DefaultRepoInitFactoryTest.java"}, "test_case": {"identifier": "testNewParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNewParser() {\n        assertNull(\"null for null\",\n                new DefaultRepoInitFactory(null).newParser());\n        assertNull(\"null for wrong constructor\",\n                new DefaultRepoInitFactory(ParserTypeWrongConstructor.class)\n                        .newParser());\n        assertNotNull(\"expect non null\", new DefaultRepoInitFactory(ParserType.class).newParser());\n    }", "signature": "void testNewParser()", "full_signature": "@Test public void testNewParser()", "class_method_signature": "DefaultRepoInitFactoryTest.testNewParser()", "testcase": true, "constructor": false, "invocations": ["assertNull", "newParser", "assertNull", "newParser", "assertNotNull", "newParser"]}, "focal_class": {"identifier": "DefaultRepoInitFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DefaultRepoInitFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DefaultRepoInitFactory.class)", "var_name": "LOGGER"}, {"original_string": "private static final String REPO_INIT_PARSER_IMPL_CLASS =\n            \"org.apache.sling.repoinit.parser.impl.RepoInitParserService\";", "modifier": "private static final", "type": "String", "declarator": "REPO_INIT_PARSER_IMPL_CLASS =\n            \"org.apache.sling.repoinit.parser.impl.RepoInitParserService\"", "var_name": "REPO_INIT_PARSER_IMPL_CLASS"}, {"original_string": "Class<? extends RepoInitParser> parserClazz;", "modifier": "", "type": "Class<? extends RepoInitParser>", "declarator": "parserClazz", "var_name": "parserClazz"}, {"original_string": "static final OakMachine.RepoInitProcessor NOOP_PROCESSOR = (admin, reader) -> {\n        throw new RepoInitParsingException(\"repoinit processor is not available\", null);\n    };", "modifier": "static final", "type": "OakMachine.RepoInitProcessor", "declarator": "NOOP_PROCESSOR = (admin, reader) -> {\n        throw new RepoInitParsingException(\"repoinit processor is not available\", null);\n    }", "var_name": "NOOP_PROCESSOR"}], "methods": [{"identifier": "DefaultRepoInitFactory", "parameters": "(final @Nullable Class<? extends RepoInitParser> parserClazz)", "modifiers": "", "return": "", "signature": " DefaultRepoInitFactory(final @Nullable Class<? extends RepoInitParser> parserClazz)", "full_signature": "  DefaultRepoInitFactory(final @Nullable Class<? extends RepoInitParser> parserClazz)", "class_method_signature": "DefaultRepoInitFactory.DefaultRepoInitFactory(final @Nullable Class<? extends RepoInitParser> parserClazz)", "testcase": false, "constructor": true}, {"identifier": "newFactoryInstance", "parameters": "(final @NotNull ClassLoader parserCl)", "modifiers": "public static", "return": "DefaultRepoInitFactory", "signature": "DefaultRepoInitFactory newFactoryInstance(final @NotNull ClassLoader parserCl)", "full_signature": "public static DefaultRepoInitFactory newFactoryInstance(final @NotNull ClassLoader parserCl)", "class_method_signature": "DefaultRepoInitFactory.newFactoryInstance(final @NotNull ClassLoader parserCl)", "testcase": false, "constructor": false}, {"identifier": "loadClazz", "parameters": "(final @NotNull ClassLoader classLoader,\n                                                      final @NotNull Class<T> iface,\n                                                      final @NotNull String clazzName)", "modifiers": "static", "return": "Class<? extends T>", "signature": "Class<? extends T> loadClazz(final @NotNull ClassLoader classLoader,\n                                                      final @NotNull Class<T> iface,\n                                                      final @NotNull String clazzName)", "full_signature": "static Class<? extends T> loadClazz(final @NotNull ClassLoader classLoader,\n                                                      final @NotNull Class<T> iface,\n                                                      final @NotNull String clazzName)", "class_method_signature": "DefaultRepoInitFactory.loadClazz(final @NotNull ClassLoader classLoader,\n                                                      final @NotNull Class<T> iface,\n                                                      final @NotNull String clazzName)", "testcase": false, "constructor": false}, {"identifier": "newDefaultRepoInitProcessor", "parameters": "(\n            final @NotNull ClassLoader defaultClassLoader)", "modifiers": "public static", "return": "OakMachine.RepoInitProcessor", "signature": "OakMachine.RepoInitProcessor newDefaultRepoInitProcessor(\n            final @NotNull ClassLoader defaultClassLoader)", "full_signature": "public static OakMachine.RepoInitProcessor newDefaultRepoInitProcessor(\n            final @NotNull ClassLoader defaultClassLoader)", "class_method_signature": "DefaultRepoInitFactory.newDefaultRepoInitProcessor(\n            final @NotNull ClassLoader defaultClassLoader)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "", "return": "OakMachine.RepoInitProcessor", "signature": "OakMachine.RepoInitProcessor newInstance()", "full_signature": " OakMachine.RepoInitProcessor newInstance()", "class_method_signature": "DefaultRepoInitFactory.newInstance()", "testcase": false, "constructor": false}, {"identifier": "bindParser", "parameters": "(final @NotNull RepoInitParser parser)", "modifiers": "public static", "return": "OakMachine.RepoInitProcessor", "signature": "OakMachine.RepoInitProcessor bindParser(final @NotNull RepoInitParser parser)", "full_signature": "public static OakMachine.RepoInitProcessor bindParser(final @NotNull RepoInitParser parser)", "class_method_signature": "DefaultRepoInitFactory.bindParser(final @NotNull RepoInitParser parser)", "testcase": false, "constructor": false}, {"identifier": "newParser", "parameters": "()", "modifiers": "", "return": "RepoInitParser", "signature": "RepoInitParser newParser()", "full_signature": " RepoInitParser newParser()", "class_method_signature": "DefaultRepoInitFactory.newParser()", "testcase": false, "constructor": false}, {"identifier": "newOpsProcessor", "parameters": "()", "modifiers": "static", "return": "JcrRepoInitOpsProcessor", "signature": "JcrRepoInitOpsProcessor newOpsProcessor()", "full_signature": "static JcrRepoInitOpsProcessor newOpsProcessor()", "class_method_signature": "DefaultRepoInitFactory.newOpsProcessor()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/repoinit/DefaultRepoInitFactory.java"}, "focal_method": {"identifier": "newParser", "parameters": "()", "modifiers": "", "return": "RepoInitParser", "body": "RepoInitParser newParser() {\n        if (parserClazz != null) {\n            try {\n                return parserClazz.getConstructor().newInstance();\n            } catch (Exception e) {\n                LOGGER.warn(\"failed to construct instance of \" + parserClazz.getName(), e);\n            }\n        }\n        return null;\n    }", "signature": "RepoInitParser newParser()", "full_signature": " RepoInitParser newParser()", "class_method_signature": "DefaultRepoInitFactory.newParser()", "testcase": false, "constructor": false, "invocations": ["newInstance", "getConstructor", "warn", "getName"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}