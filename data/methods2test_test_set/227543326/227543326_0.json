{"test_class": {"identifier": "ZebraSeataConfigurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "zebra/zebra-distributed-transaction/src/test/java/com/guosen/zebra/distributed/transaction/seata/conf/ZebraSeataConfigurationTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGet() {\n        Properties properties = new Properties();\n        properties.put(\"transport.heartbeat\", true);\n        properties.put(\"service.default.grouplist\", \"127.0.0.1:8091\");\n        properties.put(\"transport.shutdown.wait\", 3);\n\n        ZebraSeataConfiguration zebraSeataConfiguration = new ZebraSeataConfiguration(properties);\n\n        boolean transportHeartbeat = zebraSeataConfiguration.getBoolean(\"transport.heartbeat\");\n        assertThat(transportHeartbeat, is(true));\n\n        String serviceDefaultGroupList = zebraSeataConfiguration.getConfig(\"service.default.grouplist\");\n        assertThat(serviceDefaultGroupList, is(\"127.0.0.1:8091\"));\n\n        int transportShutdownWait = zebraSeataConfiguration.getInt(\"transport.shutdown.wait\");\n        assertThat(transportShutdownWait, is(3));\n\n        String configOfDefaultValue = zebraSeataConfiguration.getConfig(\"hello.world\", \"ping.pong\");\n        assertThat(configOfDefaultValue, is(\"ping.pong\"));\n\n\n        String notExistConf = zebraSeataConfiguration.getConfig(\"not.exist\");\n        assertThat(notExistConf, is(nullValue()));\n    }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "ZebraSeataConfigurationTest.testGet()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "getBoolean", "assertThat", "is", "getConfig", "assertThat", "is", "getInt", "assertThat", "is", "getConfig", "assertThat", "is", "getConfig", "assertThat", "is", "nullValue"]}, "focal_class": {"identifier": "ZebraSeataConfiguration", "superclass": "extends AbstractConfiguration", "interfaces": "", "fields": [{"original_string": "private final Properties seataConfiguration;", "modifier": "private final", "type": "Properties", "declarator": "seataConfiguration", "var_name": "seataConfiguration"}], "methods": [{"identifier": "ZebraSeataConfiguration", "parameters": "(Properties seataConfiguration)", "modifiers": "public", "return": "", "signature": " ZebraSeataConfiguration(Properties seataConfiguration)", "full_signature": "public  ZebraSeataConfiguration(Properties seataConfiguration)", "class_method_signature": "ZebraSeataConfiguration.ZebraSeataConfiguration(Properties seataConfiguration)", "testcase": false, "constructor": true}, {"identifier": "getTypeName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTypeName()", "full_signature": "@Override public String getTypeName()", "class_method_signature": "ZebraSeataConfiguration.getTypeName()", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(String dataId, String defaultValue, long timeoutMills)", "modifiers": "@Override public", "return": "String", "signature": "String getConfig(String dataId, String defaultValue, long timeoutMills)", "full_signature": "@Override public String getConfig(String dataId, String defaultValue, long timeoutMills)", "class_method_signature": "ZebraSeataConfiguration.getConfig(String dataId, String defaultValue, long timeoutMills)", "testcase": false, "constructor": false}, {"identifier": "putConfig", "parameters": "(String dataId, String content, long timeoutMills)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean putConfig(String dataId, String content, long timeoutMills)", "full_signature": "@Override public boolean putConfig(String dataId, String content, long timeoutMills)", "class_method_signature": "ZebraSeataConfiguration.putConfig(String dataId, String content, long timeoutMills)", "testcase": false, "constructor": false}, {"identifier": "putConfigIfAbsent", "parameters": "(String dataId, String content, long timeoutMills)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean putConfigIfAbsent(String dataId, String content, long timeoutMills)", "full_signature": "@Override public boolean putConfigIfAbsent(String dataId, String content, long timeoutMills)", "class_method_signature": "ZebraSeataConfiguration.putConfigIfAbsent(String dataId, String content, long timeoutMills)", "testcase": false, "constructor": false}, {"identifier": "removeConfig", "parameters": "(String dataId, long timeoutMills)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeConfig(String dataId, long timeoutMills)", "full_signature": "@Override public boolean removeConfig(String dataId, long timeoutMills)", "class_method_signature": "ZebraSeataConfiguration.removeConfig(String dataId, long timeoutMills)", "testcase": false, "constructor": false}, {"identifier": "addConfigListener", "parameters": "(String dataId, Object listener)", "modifiers": "@Override public", "return": "void", "signature": "void addConfigListener(String dataId, Object listener)", "full_signature": "@Override public void addConfigListener(String dataId, Object listener)", "class_method_signature": "ZebraSeataConfiguration.addConfigListener(String dataId, Object listener)", "testcase": false, "constructor": false}, {"identifier": "removeConfigListener", "parameters": "(String dataId, Object listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeConfigListener(String dataId, Object listener)", "full_signature": "@Override public void removeConfigListener(String dataId, Object listener)", "class_method_signature": "ZebraSeataConfiguration.removeConfigListener(String dataId, Object listener)", "testcase": false, "constructor": false}, {"identifier": "getConfigListeners", "parameters": "(String dataId)", "modifiers": "@Override public", "return": "List", "signature": "List getConfigListeners(String dataId)", "full_signature": "@Override public List getConfigListeners(String dataId)", "class_method_signature": "ZebraSeataConfiguration.getConfigListeners(String dataId)", "testcase": false, "constructor": false}], "file": "zebra/zebra-distributed-transaction/src/main/java/com/guosen/zebra/distributed/transaction/seata/conf/ZebraSeataConfiguration.java"}, "focal_method": {"identifier": "getConfig", "parameters": "(String dataId, String defaultValue, long timeoutMills)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getConfig(String dataId, String defaultValue, long timeoutMills) {\n        // \u5ffd\u7565timeoutMills\u53c2\u6570\uff0czebra seata\u7684\u914d\u7f6e\u90fd\u5728seataConfiguration\u5bf9\u8c61\u4e2d\u4e86\n        // \u6b64\u5904\u4e0d\u8981\u76f4\u63a5\u8f6c\u6362\u4e3aString\u6216\u8005String.valueOf\uff0c\u56e0\u4e3a\u53ef\u80fd\u8981\u8fd4\u56denull\u6216\u8005\u53d6\u5230\u7684\u5bf9\u8c61\u4e0d\u662fString\u7c7b\u578b\n        Object value = seataConfiguration.getOrDefault(dataId, defaultValue);\n        return value == null ? null : String.valueOf(value);\n    }", "signature": "String getConfig(String dataId, String defaultValue, long timeoutMills)", "full_signature": "@Override public String getConfig(String dataId, String defaultValue, long timeoutMills)", "class_method_signature": "ZebraSeataConfiguration.getConfig(String dataId, String defaultValue, long timeoutMills)", "testcase": false, "constructor": false, "invocations": ["getOrDefault", "valueOf"]}, "repository": {"repo_id": 227543326, "url": "https://github.com/gszebra/zebra", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 15, "size": 2223, "license": "licensed"}}