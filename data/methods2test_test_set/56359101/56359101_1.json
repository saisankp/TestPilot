{"test_class": {"identifier": "WakeOnLanHostServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "wakeonlan-service/src/test/java/br/com/autonomiccs/wakeonlan/services/WakeOnLanHostServiceTest.java"}, "test_case": {"identifier": "startHostTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startHostTest() throws Exception {\n        String mac = \"4f:2e:34:d9:fe:76\";\n        String commandToBeExecuted = String.format(\"%s %s\", \"/usr/bin/wakeonlan\", mac);\n\n        ShellCommandUtils shellCommandUtils = Mockito.mock(ShellCommandUtils.class);\n        Mockito.when(shellCommandUtils.executeCommand(commandToBeExecuted)).thenReturn(\"test\");\n\n        WakeOnLanHostService service = new WakeOnLanHostService();\n        service.shellCommandUtils = shellCommandUtils;\n\n        String commandReturn = service.startHost(mac);\n\n        Assert.assertEquals(\"test\", commandReturn);\n        Mockito.verify(shellCommandUtils).executeCommand(commandToBeExecuted);\n    }", "signature": "void startHostTest()", "full_signature": "@Test public void startHostTest()", "class_method_signature": "WakeOnLanHostServiceTest.startHostTest()", "testcase": true, "constructor": false, "invocations": ["format", "mock", "thenReturn", "when", "executeCommand", "startHost", "assertEquals", "executeCommand", "verify"]}, "focal_class": {"identifier": "WakeOnLanHostService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    protected ShellCommandUtils shellCommandUtils;", "modifier": "@Autowired\n    protected", "type": "ShellCommandUtils", "declarator": "shellCommandUtils", "var_name": "shellCommandUtils"}, {"original_string": "private final String wakeOnLanCommand = \"/usr/bin/wakeonlan\";", "modifier": "private final", "type": "String", "declarator": "wakeOnLanCommand = \"/usr/bin/wakeonlan\"", "var_name": "wakeOnLanCommand"}], "methods": [{"identifier": "startHost", "parameters": "(String mac)", "modifiers": "public", "return": "String", "signature": "String startHost(String mac)", "full_signature": "public String startHost(String mac)", "class_method_signature": "WakeOnLanHostService.startHost(String mac)", "testcase": false, "constructor": false}], "file": "wakeonlan-service/src/main/java/br/com/autonomiccs/wakeonlan/services/WakeOnLanHostService.java"}, "focal_method": {"identifier": "startHost", "parameters": "(String mac)", "modifiers": "public", "return": "String", "body": "public String startHost(String mac) {\n        return shellCommandUtils.executeCommand(String.format(\"%s %s\", wakeOnLanCommand, mac));\n    }", "signature": "String startHost(String mac)", "full_signature": "public String startHost(String mac)", "class_method_signature": "WakeOnLanHostService.startHost(String mac)", "testcase": false, "constructor": false, "invocations": ["executeCommand", "format"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}