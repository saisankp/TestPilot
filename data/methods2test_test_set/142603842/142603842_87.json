{"test_class": {"identifier": "RegionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private RegionProperties regionProperties;", "modifier": "@Mock\n    private", "type": "RegionProperties", "declarator": "regionProperties", "var_name": "regionProperties"}, {"original_string": "@Mock\n    private Region region;", "modifier": "@Mock\n    private", "type": "Region", "declarator": "region", "var_name": "region"}, {"original_string": "@InjectMocks\n    private RegionService regionService;", "modifier": "@InjectMocks\n    private", "type": "RegionService", "declarator": "regionService", "var_name": "regionService"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/service/region/RegionServiceTest.java"}, "test_case": {"identifier": "should_return_country_codes_from_properties", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void should_return_country_codes_from_properties() {\n        List<String> countryCodes = Arrays.asList(\"XY\", \"WZ\");\n        when(regionProperties.getCountryCodes()).thenReturn(countryCodes);\n\n        assertThat(regionService.countryCodes()).isEqualTo(countryCodes);\n    }", "signature": "void should_return_country_codes_from_properties()", "full_signature": "@Test void should_return_country_codes_from_properties()", "class_method_signature": "RegionServiceTest.should_return_country_codes_from_properties()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getCountryCodes", "isEqualTo", "assertThat", "countryCodes"]}, "focal_class": {"identifier": "RegionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RegionProperties regionProperties;", "modifier": "private final", "type": "RegionProperties", "declarator": "regionProperties", "var_name": "regionProperties"}, {"original_string": "private final Region region;", "modifier": "private final", "type": "Region", "declarator": "region", "var_name": "region"}], "methods": [{"identifier": "RegionService", "parameters": "(RegionProperties regionProperties, Region region)", "modifiers": "@Autowired", "return": "", "signature": " RegionService(RegionProperties regionProperties, Region region)", "full_signature": "@Autowired  RegionService(RegionProperties regionProperties, Region region)", "class_method_signature": "RegionService.RegionService(RegionProperties regionProperties, Region region)", "testcase": false, "constructor": true}, {"identifier": "countryCodes", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> countryCodes()", "full_signature": "public List<String> countryCodes()", "class_method_signature": "RegionService.countryCodes()", "testcase": false, "constructor": false}, {"identifier": "boundingBox", "parameters": "()", "modifiers": "public", "return": "BoundingBox", "signature": "BoundingBox boundingBox()", "full_signature": "public BoundingBox boundingBox()", "class_method_signature": "RegionService.boundingBox()", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/service/region/RegionService.java"}, "focal_method": {"identifier": "countryCodes", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> countryCodes() {\n        return regionProperties.getCountryCodes();\n    }", "signature": "List<String> countryCodes()", "full_signature": "public List<String> countryCodes()", "class_method_signature": "RegionService.countryCodes()", "testcase": false, "constructor": false, "invocations": ["getCountryCodes"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}