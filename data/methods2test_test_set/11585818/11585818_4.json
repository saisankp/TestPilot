{"test_class": {"identifier": "AsynchronousSpanSinkTest", "superclass": "", "interfaces": "", "fields": [], "file": "telemetry-lib/src/test/java/com/yammer/telemetry/tracing/AsynchronousSpanSinkTest.java"}, "test_case": {"identifier": "testSubmitsExpectedRecordTasksToExecutor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSubmitsExpectedRecordTasksToExecutor() {\n        ExecutorService executor = mock(ExecutorService.class);\n\n        AsynchronousSpanSink.JobFactory jobFactory = mock(AsynchronousSpanSink.JobFactory.class);\n        SpanSink sink = new AsynchronousSpanSink(executor, jobFactory);\n\n        SpanData spanData = new BeanSpanData();\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run() {\n            }\n        };\n\n        when(jobFactory.createJob(eq(spanData))).thenReturn(runnable);\n\n        sink.record(spanData);\n\n        verify(jobFactory).createJob(eq(spanData));\n        verify(executor).execute(eq(runnable));\n    }", "signature": "void testSubmitsExpectedRecordTasksToExecutor()", "full_signature": "@Test public void testSubmitsExpectedRecordTasksToExecutor()", "class_method_signature": "AsynchronousSpanSinkTest.testSubmitsExpectedRecordTasksToExecutor()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "createJob", "eq", "record", "createJob", "verify", "eq", "execute", "verify", "eq"]}, "focal_class": {"identifier": "AsynchronousSpanSink", "superclass": "", "interfaces": "implements SpanSink", "fields": [{"original_string": "private final ExecutorService executor;", "modifier": "private final", "type": "ExecutorService", "declarator": "executor", "var_name": "executor"}, {"original_string": "private final JobFactory jobFactory;", "modifier": "private final", "type": "JobFactory", "declarator": "jobFactory", "var_name": "jobFactory"}], "methods": [{"identifier": "AsynchronousSpanSink", "parameters": "(JobFactory jobFactory)", "modifiers": "public", "return": "", "signature": " AsynchronousSpanSink(JobFactory jobFactory)", "full_signature": "public  AsynchronousSpanSink(JobFactory jobFactory)", "class_method_signature": "AsynchronousSpanSink.AsynchronousSpanSink(JobFactory jobFactory)", "testcase": false, "constructor": true}, {"identifier": "AsynchronousSpanSink", "parameters": "(ExecutorService executor, JobFactory jobFactory)", "modifiers": "public", "return": "", "signature": " AsynchronousSpanSink(ExecutorService executor, JobFactory jobFactory)", "full_signature": "public  AsynchronousSpanSink(ExecutorService executor, JobFactory jobFactory)", "class_method_signature": "AsynchronousSpanSink.AsynchronousSpanSink(ExecutorService executor, JobFactory jobFactory)", "testcase": false, "constructor": true}, {"identifier": "record", "parameters": "(SpanData spanData)", "modifiers": "@Override public", "return": "void", "signature": "void record(SpanData spanData)", "full_signature": "@Override public void record(SpanData spanData)", "class_method_signature": "AsynchronousSpanSink.record(SpanData spanData)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(long timeout, TimeUnit timeunit)", "modifiers": "public", "return": "int", "signature": "int shutdown(long timeout, TimeUnit timeunit)", "full_signature": "public int shutdown(long timeout, TimeUnit timeunit)", "class_method_signature": "AsynchronousSpanSink.shutdown(long timeout, TimeUnit timeunit)", "testcase": false, "constructor": false}], "file": "telemetry-lib/src/main/java/com/yammer/telemetry/tracing/AsynchronousSpanSink.java"}, "focal_method": {"identifier": "record", "parameters": "(SpanData spanData)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void record(SpanData spanData) {\n        Runnable job = jobFactory.createJob(spanData);\n        executor.execute(job);\n    }", "signature": "void record(SpanData spanData)", "full_signature": "@Override public void record(SpanData spanData)", "class_method_signature": "AsynchronousSpanSink.record(SpanData spanData)", "testcase": false, "constructor": false, "invocations": ["createJob", "execute"]}, "repository": {"repo_id": 11585818, "url": "https://github.com/yammer/telemetry", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 20, "size": 990, "license": "licensed"}}