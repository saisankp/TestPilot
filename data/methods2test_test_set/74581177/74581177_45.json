{"test_class": {"identifier": "ParameterPathTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bbva/kltt/apirest/core/parsed_info/parameters/ParameterPathTest.java"}, "test_case": {"identifier": "invalidParameterAliasNotEqualsName", "parameters": "()", "modifiers": "@Test(expected = APIRestGeneratorException.class) public", "return": "void", "body": "@Test(expected = APIRestGeneratorException.class)\n\tpublic void invalidParameterAliasNotEqualsName() throws APIRestGeneratorException\n\t{\n\t\tfinal ParameterPath parameterPath = new ParameterPath(ConstantsTest.NAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \"differentValueThanName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.DESCRIPTION,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.REQUIRED,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.TYPE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.AUTO_INJECTED) ;\n\t\tparameterPath.validate() ;\n\t}", "signature": "void invalidParameterAliasNotEqualsName()", "full_signature": "@Test(expected = APIRestGeneratorException.class) public void invalidParameterAliasNotEqualsName()", "class_method_signature": "ParameterPathTest.invalidParameterAliasNotEqualsName()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "ParameterPath", "superclass": "extends ParameterNoBody", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ParameterPath.class) ;", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ParameterPath.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "ParameterPath", "parameters": "(final String name,\n\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t final String autoInjected)", "modifiers": "public", "return": "", "signature": " ParameterPath(final String name,\n\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t final String autoInjected)", "full_signature": "public  ParameterPath(final String name,\n\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t final String autoInjected)", "class_method_signature": "ParameterPath.ParameterPath(final String name,\n\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t final String autoInjected)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "ParameterPath.validate()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClassName()", "full_signature": "@Override public String getClassName()", "class_method_signature": "ParameterPath.getClassName()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/bbva/kltt/apirest/core/parsed_info/parameters/ParameterPath.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void validate() throws APIRestGeneratorException\n\t{\n\t\tsuper.validate() ;\n\t\t\n\t\tString errorString = null ;\n\t\t\n\t\tif (!this.isRequired())\n\t\t{\n\t\t\terrorString = \"The 'name' field '\" + this.getName()  + \"' in PATH must contain a field 'required' as 'true'\" ;\n\t\t}\n\t\telse if (this.getAlias() != null && !this.getAlias().equals(this.getName()))\n\t\t{\n\t\t\t// The alias name must be the same than the 'name'\n\t\t\terrorString = \"The 'alias' field '\" + this.getAlias()  + \"' in PATH must be the same than the 'name' value '\" + this.getName() + \"'\" ;\n\t\t}\n\t\telse if (this.isAutoInjected())\n\t\t{\n\t\t\terrorString = \"Auto Injection cannot be implemented for path parameters\" ;\n\t\t}\n\t\t\n\t\tif (errorString != null)\n\t\t{\n\t\t\tParameterPath.LOGGER.error(errorString) ;\n\t\t\tthrow new APIRestGeneratorException(errorString) ;\n\t\t}\n\t}", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "ParameterPath.validate()", "testcase": false, "constructor": false, "invocations": ["validate", "isRequired", "getName", "getAlias", "equals", "getAlias", "getName", "getAlias", "getName", "isAutoInjected", "error"]}, "repository": {"repo_id": 74581177, "url": "https://github.com/BBVA-CIB/APIRestGenerator", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 147303, "license": "licensed"}}