{"test_class": {"identifier": "ConnectionLoggerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/ConnectionLoggerFactoryTest.java"}, "test_case": {"identifier": "verifyAllCategoriesAndTypesRunWithoutException", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"squid:S2699\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"squid:S2699\")\n    public void verifyAllCategoriesAndTypesRunWithoutException() {\n        // make sure that developers won't forget to add new categories in the ConnectionLoggerFactory.\n        // Otherwise an exception will be thrown.\n\n        Arrays.stream(LogCategory.values())\n                .forEach(category -> {\n                    Arrays.stream(LogType.values())\n                            .forEach(type -> ConnectionLoggerFactory.newEvictingLogger(1, 1, category, type, \"1\"));\n                });\n    }", "signature": "void verifyAllCategoriesAndTypesRunWithoutException()", "full_signature": "@Test @SuppressWarnings(\"squid:S2699\") public void verifyAllCategoriesAndTypesRunWithoutException()", "class_method_signature": "ConnectionLoggerFactoryTest.verifyAllCategoriesAndTypesRunWithoutException()", "testcase": true, "constructor": false, "invocations": ["forEach", "stream", "values", "forEach", "stream", "values", "newEvictingLogger"]}, "focal_class": {"identifier": "ConnectionLoggerFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EMPTY_PAYLOAD_MAPPING_MESSAGE = \"Payload mapping returned null, message is dropped.\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY_PAYLOAD_MAPPING_MESSAGE = \"Payload mapping returned null, message is dropped.\"", "var_name": "EMPTY_PAYLOAD_MAPPING_MESSAGE"}], "methods": [{"identifier": "ConnectionLoggerFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConnectionLoggerFactory()", "full_signature": "private  ConnectionLoggerFactory()", "class_method_signature": "ConnectionLoggerFactory.ConnectionLoggerFactory()", "testcase": false, "constructor": true}, {"identifier": "newEvictingLogger", "parameters": "(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "modifiers": "static", "return": "ConnectionLogger", "signature": "ConnectionLogger newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "full_signature": "static ConnectionLogger newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "testcase": false, "constructor": false}, {"identifier": "newMuteableLogger", "parameters": "(final ConnectionId connectionId, final ConnectionLogger delegate)", "modifiers": "static", "return": "MuteableConnectionLogger", "signature": "MuteableConnectionLogger newMuteableLogger(final ConnectionId connectionId, final ConnectionLogger delegate)", "full_signature": "static MuteableConnectionLogger newMuteableLogger(final ConnectionId connectionId, final ConnectionLogger delegate)", "class_method_signature": "ConnectionLoggerFactory.newMuteableLogger(final ConnectionId connectionId, final ConnectionLogger delegate)", "testcase": false, "constructor": false}, {"identifier": "newSourceLogger", "parameters": "(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "modifiers": "private static", "return": "ConnectionLogger", "signature": "ConnectionLogger newSourceLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "full_signature": "private static ConnectionLogger newSourceLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newSourceLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "testcase": false, "constructor": false}, {"identifier": "newTargetLogger", "parameters": "(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "modifiers": "private static", "return": "ConnectionLogger", "signature": "ConnectionLogger newTargetLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "full_signature": "private static ConnectionLogger newTargetLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newTargetLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "testcase": false, "constructor": false}, {"identifier": "newResponseLogger", "parameters": "(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "modifiers": "private static", "return": "ConnectionLogger", "signature": "ConnectionLogger newResponseLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "full_signature": "private static ConnectionLogger newResponseLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newResponseLogger(final LogType type, final int successCapacity,\n            final int failureCapacity,\n            @Nullable final String address)", "testcase": false, "constructor": false}, {"identifier": "newConnectionLogger", "parameters": "(final LogType type, final int successCapacity, final int failureCapacity,\n            @Nullable final String address)", "modifiers": "private static", "return": "ConnectionLogger", "signature": "ConnectionLogger newConnectionLogger(final LogType type, final int successCapacity, final int failureCapacity,\n            @Nullable final String address)", "full_signature": "private static ConnectionLogger newConnectionLogger(final LogType type, final int successCapacity, final int failureCapacity,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newConnectionLogger(final LogType type, final int successCapacity, final int failureCapacity,\n            @Nullable final String address)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/monitoring/logs/ConnectionLoggerFactory.java"}, "focal_method": {"identifier": "newEvictingLogger", "parameters": "(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "modifiers": "static", "return": "ConnectionLogger", "body": "static ConnectionLogger newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address) {\n\n        switch (logCategory) {\n            case SOURCE:\n                return newSourceLogger(logType, successCapacity, failureCapacity, address);\n            case TARGET:\n                return newTargetLogger(logType, successCapacity, failureCapacity, address);\n            case RESPONSE:\n                return newResponseLogger(logType, successCapacity, failureCapacity, address);\n            case CONNECTION:\n                return newConnectionLogger(logType, successCapacity, failureCapacity, address);\n            default:\n                throw new AssertionError(\"Missing switch case.\");\n        }\n\n    }", "signature": "ConnectionLogger newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "full_signature": "static ConnectionLogger newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "class_method_signature": "ConnectionLoggerFactory.newEvictingLogger(\n            final int successCapacity, final int failureCapacity,\n            final LogCategory logCategory, final LogType logType,\n            @Nullable final String address)", "testcase": false, "constructor": false, "invocations": ["newSourceLogger", "newTargetLogger", "newResponseLogger", "newConnectionLogger"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}