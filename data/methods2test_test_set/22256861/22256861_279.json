{"test_class": {"identifier": "RgbProfilesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static RGBImageProfileManager profileManager = RGBImageProfileManager.getInstance();", "modifier": "private static", "type": "RGBImageProfileManager", "declarator": "profileManager = RGBImageProfileManager.getInstance()", "var_name": "profileManager"}, {"original_string": "private static RGBImageProfile[] storedProfiles;", "modifier": "private static", "type": "RGBImageProfile[]", "declarator": "storedProfiles", "var_name": "storedProfiles"}], "file": "s3tbx-c2rcc/src/test/java/org/esa/s3tbx/c2rcc/util/RgbProfilesTest.java"}, "test_case": {"identifier": "installMeris4RgbProfiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void installMeris4RgbProfiles() throws Exception {\n        assertEquals(0, profileManager.getProfileCount());\n        RgbProfiles.installMeris4RgbProfiles();\n        assertEquals(9, profileManager.getProfileCount());\n    }", "signature": "void installMeris4RgbProfiles()", "full_signature": "@Test public void installMeris4RgbProfiles()", "class_method_signature": "RgbProfilesTest.installMeris4RgbProfiles()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getProfileCount", "installMeris4RgbProfiles", "assertEquals", "getProfileCount"]}, "focal_class": {"identifier": "RgbProfiles", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] RGB_BAND_NAMES = {\n            \"rhow\", \"rrs\", \"rhown\", \"rpath\", \"rtoa\",\n            \"rtosa_gc\", \"rtosagc_aann\", \"tdown\", \"tup\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "RGB_BAND_NAMES = {\n            \"rhow\", \"rrs\", \"rhown\", \"rpath\", \"rtoa\",\n            \"rtosa_gc\", \"rtosagc_aann\", \"tdown\", \"tup\"\n    }", "var_name": "RGB_BAND_NAMES"}], "methods": [{"identifier": "installRgbProfiles", "parameters": "(String productType, String redExpr, String greenExpr, String blueExpr)", "modifiers": "public static", "return": "void", "signature": "void installRgbProfiles(String productType, String redExpr, String greenExpr, String blueExpr)", "full_signature": "public static void installRgbProfiles(String productType, String redExpr, String greenExpr, String blueExpr)", "class_method_signature": "RgbProfiles.installRgbProfiles(String productType, String redExpr, String greenExpr, String blueExpr)", "testcase": false, "constructor": false}, {"identifier": "installMerisRgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installMerisRgbProfiles()", "full_signature": "public static void installMerisRgbProfiles()", "class_method_signature": "RgbProfiles.installMerisRgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installMeris4RgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installMeris4RgbProfiles()", "full_signature": "public static void installMeris4RgbProfiles()", "class_method_signature": "RgbProfiles.installMeris4RgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installS2MsiRgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installS2MsiRgbProfiles()", "full_signature": "public static void installS2MsiRgbProfiles()", "class_method_signature": "RgbProfiles.installS2MsiRgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installLandsat7RgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installLandsat7RgbProfiles()", "full_signature": "public static void installLandsat7RgbProfiles()", "class_method_signature": "RgbProfiles.installLandsat7RgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installLandsat8RgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installLandsat8RgbProfiles()", "full_signature": "public static void installLandsat8RgbProfiles()", "class_method_signature": "RgbProfiles.installLandsat8RgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installModisRgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installModisRgbProfiles()", "full_signature": "public static void installModisRgbProfiles()", "class_method_signature": "RgbProfiles.installModisRgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installSeaWifsRgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installSeaWifsRgbProfiles()", "full_signature": "public static void installSeaWifsRgbProfiles()", "class_method_signature": "RgbProfiles.installSeaWifsRgbProfiles()", "testcase": false, "constructor": false}, {"identifier": "installViirsRgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void installViirsRgbProfiles()", "full_signature": "public static void installViirsRgbProfiles()", "class_method_signature": "RgbProfiles.installViirsRgbProfiles()", "testcase": false, "constructor": false}], "file": "s3tbx-c2rcc/src/main/java/org/esa/s3tbx/c2rcc/util/RgbProfiles.java"}, "focal_method": {"identifier": "installMeris4RgbProfiles", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void installMeris4RgbProfiles() {\n        installRgbProfiles(\"C2RCC_MERIS4\",\n                           \"log(0.05 + 0.35 * %1$s_2 + 0.60 * %1$s_5 + %1$s_6 + 0.13 * %1$s_7)\",\n                           \"log(0.05 + 0.21 * %1$s_3 + 0.50 * %1$s_4 + %1$s_5 + 0.38 * %1$s_6)\",\n                           \"log(0.05 + 0.21 * %1$s_1 + 1.75 * %1$s_2 + 0.47 * %1$s_3 + 0.16 * %1$s_4)\");\n    }", "signature": "void installMeris4RgbProfiles()", "full_signature": "public static void installMeris4RgbProfiles()", "class_method_signature": "RgbProfiles.installMeris4RgbProfiles()", "testcase": false, "constructor": false, "invocations": ["installRgbProfiles"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}