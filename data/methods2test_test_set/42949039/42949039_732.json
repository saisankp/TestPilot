{"test_class": {"identifier": "JsonHelperTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/helper/JsonHelperTest.java"}, "test_case": {"identifier": "testObjectToJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testObjectToJson()\n    {\n        assertEquals(String.format(\"\\\"%s\\\"\", STRING_VALUE), jsonHelper.objectToJson(STRING_VALUE));\n    }", "signature": "void testObjectToJson()", "full_signature": "@Test public void testObjectToJson()", "class_method_signature": "JsonHelperTest.testObjectToJson()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "format", "objectToJson"]}, "focal_class": {"identifier": "JsonHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getKeyValue", "parameters": "(JSONObject jsonObject, Object key, Class<T> classType)", "modifiers": "public", "return": "T", "signature": "T getKeyValue(JSONObject jsonObject, Object key, Class<T> classType)", "full_signature": "public T getKeyValue(JSONObject jsonObject, Object key, Class<T> classType)", "class_method_signature": "JsonHelper.getKeyValue(JSONObject jsonObject, Object key, Class<T> classType)", "testcase": false, "constructor": false}, {"identifier": "objectToJson", "parameters": "(Object object)", "modifiers": "public", "return": "String", "signature": "String objectToJson(Object object)", "full_signature": "public String objectToJson(Object object)", "class_method_signature": "JsonHelper.objectToJson(Object object)", "testcase": false, "constructor": false}, {"identifier": "unmarshallJsonToListOfObjects", "parameters": "(Class<T> classType, String jsonContent)", "modifiers": "public", "return": "List<T>", "signature": "List<T> unmarshallJsonToListOfObjects(Class<T> classType, String jsonContent)", "full_signature": "public List<T> unmarshallJsonToListOfObjects(Class<T> classType, String jsonContent)", "class_method_signature": "JsonHelper.unmarshallJsonToListOfObjects(Class<T> classType, String jsonContent)", "testcase": false, "constructor": false}, {"identifier": "unmarshallJsonToObject", "parameters": "(Class<T> classType, String jsonContent)", "modifiers": "public", "return": "T", "signature": "T unmarshallJsonToObject(Class<T> classType, String jsonContent)", "full_signature": "public T unmarshallJsonToObject(Class<T> classType, String jsonContent)", "class_method_signature": "JsonHelper.unmarshallJsonToObject(Class<T> classType, String jsonContent)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/helper/JsonHelper.java"}, "focal_method": {"identifier": "objectToJson", "parameters": "(Object object)", "modifiers": "public", "return": "String", "body": "public String objectToJson(Object object) throws IllegalStateException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n\n        StringWriter stringWriter = new StringWriter();\n\n        try\n        {\n            mapper.writeValue(stringWriter, object);\n        }\n        catch (IOException e)\n        {\n            throw new IllegalStateException(e);\n        }\n\n        return stringWriter.toString();\n    }", "signature": "String objectToJson(Object object)", "full_signature": "public String objectToJson(Object object)", "class_method_signature": "JsonHelper.objectToJson(Object object)", "testcase": false, "constructor": false, "invocations": ["writeValue", "toString"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}