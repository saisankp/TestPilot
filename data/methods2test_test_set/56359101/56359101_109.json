{"test_class": {"identifier": "AdministrationAgentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private AdministrationAgent administrationAgent;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "AdministrationAgent", "declarator": "administrationAgent", "var_name": "administrationAgent"}, {"original_string": "@Mock\n    private ClusterService clusterService;", "modifier": "@Mock\n    private", "type": "ClusterService", "declarator": "clusterService", "var_name": "clusterService"}, {"original_string": "@Mock\n    private AutonomicClusterManagementHeuristicService autonomicManagementHeuristicService;", "modifier": "@Mock\n    private", "type": "AutonomicClusterManagementHeuristicService", "declarator": "autonomicManagementHeuristicService", "var_name": "autonomicManagementHeuristicService"}, {"original_string": "@Mock\n    private ClusterAdministrationHeuristicAlgorithm clusterAdministrationHeuristicAlgorithm;", "modifier": "@Mock\n    private", "type": "ClusterAdministrationHeuristicAlgorithm", "declarator": "clusterAdministrationHeuristicAlgorithm", "var_name": "clusterAdministrationHeuristicAlgorithm"}, {"original_string": "@Mock\n    private ZoneService zoneService;", "modifier": "@Mock\n    private", "type": "ZoneService", "declarator": "zoneService", "var_name": "zoneService"}, {"original_string": "@Mock\n    private AutonomicClusterManagementService autonomicClusterManagementService;", "modifier": "@Mock\n    private", "type": "AutonomicClusterManagementService", "declarator": "autonomicClusterManagementService", "var_name": "autonomicClusterManagementService"}, {"original_string": "@Mock\n    private CloudResourcesService cloudResourcesService;", "modifier": "@Mock\n    private", "type": "CloudResourcesService", "declarator": "cloudResourcesService", "var_name": "cloudResourcesService"}, {"original_string": "@Mock\n    private ClusterResourcesService clusterResourcesService;", "modifier": "@Mock\n    private", "type": "ClusterResourcesService", "declarator": "clusterResourcesService", "var_name": "clusterResourcesService"}, {"original_string": "@Mock\n    private HostService hostService;", "modifier": "@Mock\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Mock\n    private VirtualMachineService virtualMachineService;", "modifier": "@Mock\n    private", "type": "VirtualMachineService", "declarator": "virtualMachineService", "var_name": "virtualMachineService"}, {"original_string": "@Mock\n    private ThreadUtils threadUtils;", "modifier": "@Mock\n    private", "type": "ThreadUtils", "declarator": "threadUtils", "var_name": "threadUtils"}, {"original_string": "@Mock\n    private UserVmService userVmService;", "modifier": "@Mock\n    private", "type": "UserVmService", "declarator": "userVmService", "var_name": "userVmService"}, {"original_string": "@Mock\n    private HypervisorManager hypervisorManager;", "modifier": "@Mock\n    private", "type": "HypervisorManager", "declarator": "hypervisorManager", "var_name": "hypervisorManager"}, {"original_string": "@Mock\n    private HostResourcesService hostResourcesService;", "modifier": "@Mock\n    private", "type": "HostResourcesService", "declarator": "hostResourcesService", "var_name": "hostResourcesService"}, {"original_string": "@Mock\n    private ResourceManager resourceManager;", "modifier": "@Mock\n    private", "type": "ResourceManager", "declarator": "resourceManager", "var_name": "resourceManager"}], "file": "autonomic-administration-plugin/src/test/java/br/com/autonomiccs/autonomic/administration/plugin/AdministrationAgentTest.java"}, "test_case": {"identifier": "getClusterToManageFromZoneTestListOfClustersEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getClusterToManageFromZoneTestListOfClustersEmpty() {\n        List<ClusterVO> clusters = new ArrayList<>();\n        Mockito.doReturn(clusters).when(clusterService).listAllClustersOnZone(Mockito.anyLong());\n\n        ClusterVO result = administrationAgent.getClusterToManageFromZone(clusterAdministrationHeuristicAlgorithm, null);\n\n        Assert.assertNull(result);\n        verifyGetClusterToManageFromZoneCalledMethods(0, 0, 0);\n    }", "signature": "void getClusterToManageFromZoneTestListOfClustersEmpty()", "full_signature": "@Test public void getClusterToManageFromZoneTestListOfClustersEmpty()", "class_method_signature": "AdministrationAgentTest.getClusterToManageFromZoneTestListOfClustersEmpty()", "testcase": true, "constructor": false, "invocations": ["listAllClustersOnZone", "when", "doReturn", "anyLong", "getClusterToManageFromZone", "assertNull", "verifyGetClusterToManageFromZoneCalledMethods"]}, "focal_class": {"identifier": "AdministrationAgent", "superclass": "", "interfaces": "implements InitializingBean", "fields": [{"original_string": "@Autowired\n    private ClusterService clusterService;", "modifier": "@Autowired\n    private", "type": "ClusterService", "declarator": "clusterService", "var_name": "clusterService"}, {"original_string": "@Autowired\n    private UserVmService userVmService;", "modifier": "@Autowired\n    private", "type": "UserVmService", "declarator": "userVmService", "var_name": "userVmService"}, {"original_string": "@Autowired\n    private HypervisorManager hypervisorManager;", "modifier": "@Autowired\n    private", "type": "HypervisorManager", "declarator": "hypervisorManager", "var_name": "hypervisorManager"}, {"original_string": "@Autowired\n    private ResourceManager resourceManager;", "modifier": "@Autowired\n    private", "type": "ResourceManager", "declarator": "resourceManager", "var_name": "resourceManager"}, {"original_string": "@Autowired\n    private HostService hostService;", "modifier": "@Autowired\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Autowired\n    private AutonomicClusterManagementService autonomicClusterManagementService;", "modifier": "@Autowired\n    private", "type": "AutonomicClusterManagementService", "declarator": "autonomicClusterManagementService", "var_name": "autonomicClusterManagementService"}, {"original_string": "@Autowired\n    private ClusterResourcesService clusterResourcesService;", "modifier": "@Autowired\n    private", "type": "ClusterResourcesService", "declarator": "clusterResourcesService", "var_name": "clusterResourcesService"}, {"original_string": "@Autowired\n    private CloudResourcesService cloudResourcesService;", "modifier": "@Autowired\n    private", "type": "CloudResourcesService", "declarator": "cloudResourcesService", "var_name": "cloudResourcesService"}, {"original_string": "@Autowired\n    private ThreadUtils threadUtils;", "modifier": "@Autowired\n    private", "type": "ThreadUtils", "declarator": "threadUtils", "var_name": "threadUtils"}, {"original_string": "@Autowired\n    private ZoneService zoneService;", "modifier": "@Autowired\n    private", "type": "ZoneService", "declarator": "zoneService", "var_name": "zoneService"}, {"original_string": "@Autowired\n    private HostResourcesService hostResourcesService;", "modifier": "@Autowired\n    private", "type": "HostResourcesService", "declarator": "hostResourcesService", "var_name": "hostResourcesService"}, {"original_string": "@Autowired\n    private AutonomicClusterManagementHeuristicService autonomicManagementHeuristicService;", "modifier": "@Autowired\n    private", "type": "AutonomicClusterManagementHeuristicService", "declarator": "autonomicManagementHeuristicService", "var_name": "autonomicManagementHeuristicService"}, {"original_string": "@Autowired\n    private VirtualMachineService virtualMachineService;", "modifier": "@Autowired\n    private", "type": "VirtualMachineService", "declarator": "virtualMachineService", "var_name": "virtualMachineService"}, {"original_string": "private Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "receiveClusterToBeManaged", "parameters": "(Long clusterId)", "modifiers": "public", "return": "void", "signature": "void receiveClusterToBeManaged(Long clusterId)", "full_signature": "public void receiveClusterToBeManaged(Long clusterId)", "class_method_signature": "AdministrationAgent.receiveClusterToBeManaged(Long clusterId)", "testcase": false, "constructor": false}, {"identifier": "searchClusterToBeManaged", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long searchClusterToBeManaged()", "full_signature": "public Long searchClusterToBeManaged()", "class_method_signature": "AdministrationAgent.searchClusterToBeManaged()", "testcase": false, "constructor": false}, {"identifier": "getClusterToManage", "parameters": "(ClusterAdministrationHeuristicAlgorithm algorithm)", "modifiers": "protected", "return": "ClusterVO", "signature": "ClusterVO getClusterToManage(ClusterAdministrationHeuristicAlgorithm algorithm)", "full_signature": "protected ClusterVO getClusterToManage(ClusterAdministrationHeuristicAlgorithm algorithm)", "class_method_signature": "AdministrationAgent.getClusterToManage(ClusterAdministrationHeuristicAlgorithm algorithm)", "testcase": false, "constructor": false}, {"identifier": "getClusterToManageFromZone", "parameters": "(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "modifiers": "protected", "return": "ClusterVO", "signature": "ClusterVO getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "full_signature": "protected ClusterVO getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "class_method_signature": "AdministrationAgent.getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "workOnCluster", "parameters": "(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "modifiers": "protected", "return": "void", "signature": "void workOnCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "full_signature": "protected void workOnCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "class_method_signature": "AdministrationAgent.workOnCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "processCluster", "parameters": "(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "modifiers": "protected", "return": "void", "signature": "void processCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "full_signature": "protected void processCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "class_method_signature": "AdministrationAgent.processCluster(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "shutdownIdleHosts", "parameters": "(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "modifiers": "protected", "return": "void", "signature": "void shutdownIdleHosts(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "full_signature": "protected void shutdownIdleHosts(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "class_method_signature": "AdministrationAgent.shutdownIdleHosts(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "createAllClustersResourcesUp", "parameters": "()", "modifiers": "public", "return": "List<ClusterResourcesUp>", "signature": "List<ClusterResourcesUp> createAllClustersResourcesUp()", "full_signature": "public List<ClusterResourcesUp> createAllClustersResourcesUp()", "class_method_signature": "AdministrationAgent.createAllClustersResourcesUp()", "testcase": false, "constructor": false}, {"identifier": "mapAndExecuteVMsMigrations", "parameters": "(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "modifiers": "protected", "return": "void", "signature": "void mapAndExecuteVMsMigrations(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "full_signature": "protected void mapAndExecuteVMsMigrations(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "class_method_signature": "AdministrationAgent.mapAndExecuteVMsMigrations(ClusterVO cluster, ClusterAdministrationHeuristicAlgorithm administrationAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "migrateVM", "parameters": "(VMInstanceVO vm, HostVO host)", "modifiers": "protected", "return": "void", "signature": "void migrateVM(VMInstanceVO vm, HostVO host)", "full_signature": "protected void migrateVM(VMInstanceVO vm, HostVO host)", "class_method_signature": "AdministrationAgent.migrateVM(VMInstanceVO vm, HostVO host)", "testcase": false, "constructor": false}, {"identifier": "getClusterUpHosts", "parameters": "(ClusterVO cluster)", "modifiers": "protected", "return": "List<HostResources>", "signature": "List<HostResources> getClusterUpHosts(ClusterVO cluster)", "full_signature": "protected List<HostResources> getClusterUpHosts(ClusterVO cluster)", "class_method_signature": "AdministrationAgent.getClusterUpHosts(ClusterVO cluster)", "testcase": false, "constructor": false}, {"identifier": "getClusterIdleHosts", "parameters": "(ClusterVO cluster)", "modifiers": "protected", "return": "List<HostResources>", "signature": "List<HostResources> getClusterIdleHosts(ClusterVO cluster)", "full_signature": "protected List<HostResources> getClusterIdleHosts(ClusterVO cluster)", "class_method_signature": "AdministrationAgent.getClusterIdleHosts(ClusterVO cluster)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "AdministrationAgent.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "shutdownHost", "parameters": "(long hostId)", "modifiers": "protected", "return": "void", "signature": "void shutdownHost(long hostId)", "full_signature": "protected void shutdownHost(long hostId)", "class_method_signature": "AdministrationAgent.shutdownHost(long hostId)", "testcase": false, "constructor": false}, {"identifier": "checkIfHostIsUpAndEnabled", "parameters": "(long hostId)", "modifiers": "protected", "return": "void", "signature": "void checkIfHostIsUpAndEnabled(long hostId)", "full_signature": "protected void checkIfHostIsUpAndEnabled(long hostId)", "class_method_signature": "AdministrationAgent.checkIfHostIsUpAndEnabled(long hostId)", "testcase": false, "constructor": false}, {"identifier": "putHostInMaintenance", "parameters": "(long hostId)", "modifiers": "protected", "return": "void", "signature": "void putHostInMaintenance(long hostId)", "full_signature": "protected void putHostInMaintenance(long hostId)", "class_method_signature": "AdministrationAgent.putHostInMaintenance(long hostId)", "testcase": false, "constructor": false}], "file": "autonomic-administration-plugin/src/main/java/br/com/autonomiccs/autonomic/administration/plugin/AdministrationAgent.java"}, "focal_method": {"identifier": "getClusterToManageFromZone", "parameters": "(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "modifiers": "protected", "return": "ClusterVO", "body": "protected ClusterVO getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId) {\n        List<ClusterVO> clusters = clusterService.listAllClustersOnZone(zoneId);\n        for (ClusterVO cluster : clusters) {\n            if (cluster.getRemoved() != null) {\n                continue;\n            }\n            if (autonomicClusterManagementService.isClusterBeingAdministrated(cluster.getId())) {\n                continue;\n            }\n            if (autonomicClusterManagementService.canProcessCluster(cluster.getId(), algorithm)) {\n                autonomicClusterManagementService.setClusterWorkInProgress(cluster.getId());\n                return cluster;\n            }\n        }\n        return null;\n    }", "signature": "ClusterVO getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "full_signature": "protected ClusterVO getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "class_method_signature": "AdministrationAgent.getClusterToManageFromZone(ClusterAdministrationHeuristicAlgorithm algorithm, Long zoneId)", "testcase": false, "constructor": false, "invocations": ["listAllClustersOnZone", "getRemoved", "isClusterBeingAdministrated", "getId", "canProcessCluster", "getId", "setClusterWorkInProgress", "getId"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}