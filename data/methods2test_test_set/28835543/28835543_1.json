{"test_class": {"identifier": "ChatroomTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "static ActorSystem system = ActorSystem.apply();", "modifier": "static", "type": "ActorSystem", "declarator": "system = ActorSystem.apply()", "var_name": "system"}], "file": "ch8/java-akka-chat/src/test/java/com/akkachat/ChatroomTest.java"}, "test_case": {"identifier": "testShouldSendUpdateWhenUserPosts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldSendUpdateWhenUserPosts() {\n        //Given\n        Props props = Props.create(Chatroom.class);\n        TestActorRef<Chatroom> ref = TestActorRef.create(system, props);\n        Chatroom chatroom = ref.underlyingActor();\n\n        final TestProbe probe = new TestProbe(system);\n        UserRef userRef = new UserRef(probe.ref(), \"user\");\n        chatroom.joinChatroom(new Messages.JoinChatroom(userRef));\n\n        //When\n        Messages.PostToChatroom msg = new Messages.PostToChatroom(\"test\", \"user\");\n        ref.tell(msg, probe.ref());\n\n        //Then\n        probe.expectMsg(msg);\n    }", "signature": "void testShouldSendUpdateWhenUserPosts()", "full_signature": "@Test public void testShouldSendUpdateWhenUserPosts()", "class_method_signature": "ChatroomTest.testShouldSendUpdateWhenUserPosts()", "testcase": true, "constructor": false, "invocations": ["create", "create", "underlyingActor", "ref", "joinChatroom", "tell", "ref", "expectMsg"]}, "focal_class": {"identifier": "Chatroom", "superclass": "extends AbstractActor", "interfaces": "", "fields": [{"original_string": "List<Messages.PostToChatroom> chatHistory = new ArrayList<>();", "modifier": "", "type": "List<Messages.PostToChatroom>", "declarator": "chatHistory = new ArrayList<>()", "var_name": "chatHistory"}, {"original_string": "List<UserRef> joinedUsers = new ArrayList<>();", "modifier": "", "type": "List<UserRef>", "declarator": "joinedUsers = new ArrayList<>()", "var_name": "joinedUsers"}], "methods": [{"identifier": "receive", "parameters": "()", "modifiers": "@Override public", "return": "PartialFunction<Object, BoxedUnit>", "signature": "PartialFunction<Object, BoxedUnit> receive()", "full_signature": "@Override public PartialFunction<Object, BoxedUnit> receive()", "class_method_signature": "Chatroom.receive()", "testcase": false, "constructor": false}, {"identifier": "joinChatroom", "parameters": "(Messages.JoinChatroom msg)", "modifiers": "public", "return": "List<Messages.PostToChatroom>", "signature": "List<Messages.PostToChatroom> joinChatroom(Messages.JoinChatroom msg)", "full_signature": "public List<Messages.PostToChatroom> joinChatroom(Messages.JoinChatroom msg)", "class_method_signature": "Chatroom.joinChatroom(Messages.JoinChatroom msg)", "testcase": false, "constructor": false}], "file": "ch8/java-akka-chat/src/main/java/com/akkachat/Chatroom.java"}, "focal_method": {"identifier": "joinChatroom", "parameters": "(Messages.JoinChatroom msg)", "modifiers": "public", "return": "List<Messages.PostToChatroom>", "body": "public List<Messages.PostToChatroom> joinChatroom(Messages.JoinChatroom msg) {\n        joinedUsers.add(msg.userRef);\n        return chatHistory;\n    }", "signature": "List<Messages.PostToChatroom> joinChatroom(Messages.JoinChatroom msg)", "full_signature": "public List<Messages.PostToChatroom> joinChatroom(Messages.JoinChatroom msg)", "class_method_signature": "Chatroom.joinChatroom(Messages.JoinChatroom msg)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 28835543, "url": "https://github.com/jasongoodwin/learning-akka", "language": "Java", "is_fork": false, "fork_count": 168, "stargazer_count": 242, "size": 2286, "license": "licensed"}}