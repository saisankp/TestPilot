{"test_class": {"identifier": "PromiseProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Object mImpl = new Object();", "modifier": "private", "type": "Object", "declarator": "mImpl = new Object()", "var_name": "mImpl"}, {"original_string": "@Mock\n    private MessageSender mSender;", "modifier": "@Mock\n    private", "type": "MessageSender", "declarator": "mSender", "var_name": "mSender"}, {"original_string": "@Mock\n    private Message<Object, Object> mMessage;", "modifier": "@Mock\n    private", "type": "Message<Object, Object>", "declarator": "mMessage", "var_name": "mMessage"}, {"original_string": "@Mock\n    private ActorThread mThread;", "modifier": "@Mock\n    private", "type": "ActorThread", "declarator": "mThread", "var_name": "mThread"}, {"original_string": "@Mock\n    private ResultListener<Object> mListener;", "modifier": "@Mock\n    private", "type": "ResultListener<Object>", "declarator": "mListener", "var_name": "mListener"}, {"original_string": "@Mock\n    private Promise<Object> mResultPromise;", "modifier": "@Mock\n    private", "type": "Promise<Object>", "declarator": "mResultPromise", "var_name": "mResultPromise"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/PromiseProxyTest.java"}, "test_case": {"identifier": "thenNothing_deliverSelf_always", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thenNothing_deliverSelf_always() throws Exception {\n        PromiseProxy promise = new PromiseProxy(mSender, mMessage);\n        promise.thenNothing();\n\n        Mockito.verify(mSender).deliver(promise);\n    }", "signature": "void thenNothing_deliverSelf_always()", "full_signature": "@Test public void thenNothing_deliverSelf_always()", "class_method_signature": "PromiseProxyTest.thenNothing_deliverSelf_always()", "testcase": true, "constructor": false, "invocations": ["thenNothing", "deliver", "verify"]}, "focal_class": {"identifier": "PromiseProxy", "superclass": "extends Promise<R>", "interfaces": "implements Message<T, R>, ActionHandle, ResultListener<R>", "fields": [{"original_string": "@NonNull\n    private final MessageSender mSender;", "modifier": "@NonNull\n    private final", "type": "MessageSender", "declarator": "mSender", "var_name": "mSender"}, {"original_string": "@NonNull\n    private final Message<T, R> mMessage;", "modifier": "@NonNull\n    private final", "type": "Message<T, R>", "declarator": "mMessage", "var_name": "mMessage"}, {"original_string": "@Nullable\n    private ActorThread mActorThread = null;", "modifier": "@Nullable\n    private", "type": "ActorThread", "declarator": "mActorThread = null", "var_name": "mActorThread"}, {"original_string": "@Nullable\n    private volatile ResultListener<R> mListener = null;", "modifier": "@Nullable\n    private volatile", "type": "ResultListener<R>", "declarator": "mListener = null", "var_name": "mListener"}], "methods": [{"identifier": "PromiseProxy", "parameters": "(@NonNull MessageSender sender, @NonNull Message<T, R> message)", "modifiers": "", "return": "", "signature": " PromiseProxy(@NonNull MessageSender sender, @NonNull Message<T, R> message)", "full_signature": "  PromiseProxy(@NonNull MessageSender sender, @NonNull Message<T, R> message)", "class_method_signature": "PromiseProxy.PromiseProxy(@NonNull MessageSender sender, @NonNull Message<T, R> message)", "testcase": false, "constructor": true}, {"identifier": "thenNothing", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void thenNothing()", "full_signature": "@Override public void thenNothing()", "class_method_signature": "PromiseProxy.thenNothing()", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@NonNull ResultListener<R> listener)", "modifiers": "@NonNull @Override public", "return": "ActionHandle", "signature": "ActionHandle then(@NonNull ResultListener<R> listener)", "full_signature": "@NonNull @Override public ActionHandle then(@NonNull ResultListener<R> listener)", "class_method_signature": "PromiseProxy.then(@NonNull ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "modifiers": "@NonNull @Override public", "return": "ActionHandle", "signature": "ActionHandle then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "full_signature": "@NonNull @Override public ActionHandle then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "class_method_signature": "PromiseProxy.then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "R", "signature": "R get()", "full_signature": "@Nullable @Override public R get()", "class_method_signature": "PromiseProxy.get()", "testcase": false, "constructor": false}, {"identifier": "onResult", "parameters": "(@Nullable R result)", "modifiers": "@Override public", "return": "void", "signature": "void onResult(@Nullable R result)", "full_signature": "@Override public void onResult(@Nullable R result)", "class_method_signature": "PromiseProxy.onResult(@Nullable R result)", "testcase": false, "constructor": false}, {"identifier": "forget", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void forget()", "full_signature": "@Override public void forget()", "class_method_signature": "PromiseProxy.forget()", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@NonNull T impl)", "modifiers": "@Override public", "return": "Promise<R>", "signature": "Promise<R> invoke(@NonNull T impl)", "full_signature": "@Override public Promise<R> invoke(@NonNull T impl)", "class_method_signature": "PromiseProxy.invoke(@NonNull T impl)", "testcase": false, "constructor": false}, {"identifier": "exception", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "ActorInvokeException", "signature": "ActorInvokeException exception()", "full_signature": "@NonNull @Override public ActorInvokeException exception()", "class_method_signature": "PromiseProxy.exception()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PromiseProxy.toString()", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/PromiseProxy.java"}, "focal_method": {"identifier": "thenNothing", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void thenNothing() {\n        mSender.deliver(this);\n    }", "signature": "void thenNothing()", "full_signature": "@Override public void thenNothing()", "class_method_signature": "PromiseProxy.thenNothing()", "testcase": false, "constructor": false, "invocations": ["deliver"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}