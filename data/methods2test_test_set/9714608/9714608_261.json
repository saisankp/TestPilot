{"test_class": {"identifier": "ResourcesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_NAME_1 = \"/org/arakhne/afc/vmutil/test.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_NAME_1 = \"/org/arakhne/afc/vmutil/test.txt\"", "var_name": "TEST_NAME_1"}, {"original_string": "private static final String TEST_NAME_2 = \"org/arakhne/afc/vmutil/test.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_NAME_2 = \"org/arakhne/afc/vmutil/test.txt\"", "var_name": "TEST_NAME_2"}, {"original_string": "private static final String TEST_NAME_3 = \"test.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_NAME_3 = \"test.txt\"", "var_name": "TEST_NAME_3"}, {"original_string": "private static final String TEST_NAME_4 = \"/test.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_NAME_4 = \"/test.txt\"", "var_name": "TEST_NAME_4"}, {"original_string": "private static final String PACKAGE_NAME = \"org.arakhne.afc.vmutil\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"org.arakhne.afc.vmutil\"", "var_name": "PACKAGE_NAME"}], "file": "core/vmutils/src/test/java/org/arakhne/afc/vmutil/ResourcesTest.java"}, "test_case": {"identifier": "getResourceClassString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getResourceClassString() {\n\t\tassertNull(Resources.getResource(ResourcesTest.class, null));\n\n\t\tURL u1 = Resources.getResource(ResourcesTest.class, TEST_NAME_1);\n\t\tassertNotNull(u1);\n\n\t\tURL u2 = Resources.getResource(ResourcesTest.class, TEST_NAME_2);\n\t\tassertNotNull(u2);\n\n\t\tURL u3 = Resources.getResource(ResourcesTest.class, TEST_NAME_3);\n\t\tassertNotNull(u3);\n\n\t\tassertEquals(u1,u2);\n\t\tassertEquals(u1,u3);\n\n\t\tassertNull(Resources.getResource((Class<?>)null, null));\n\n\t\tu1 = Resources.getResource((Class<?>)null, TEST_NAME_1);\n\t\tassertNull(u1);\n\n\t\tu2 = Resources.getResource((Class<?>)null, TEST_NAME_2);\n\t\tassertNull(u2);\n\t}", "signature": "void getResourceClassString()", "full_signature": "@Test public void getResourceClassString()", "class_method_signature": "ResourcesTest.getResourceClassString()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getResource", "getResource", "assertNotNull", "getResource", "assertNotNull", "getResource", "assertNotNull", "assertEquals", "assertEquals", "assertNull", "getResource", "getResource", "assertNull", "getResource", "assertNull"]}, "focal_class": {"identifier": "Resources", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String NAME_SEPARATOR = \"/\";", "modifier": "public static final", "type": "String", "declarator": "NAME_SEPARATOR = \"/\"", "var_name": "NAME_SEPARATOR"}, {"original_string": "private static ResourceWrapper currentResourceInstance;", "modifier": "private static", "type": "ResourceWrapper", "declarator": "currentResourceInstance", "var_name": "currentResourceInstance"}], "methods": [{"identifier": "Resources", "parameters": "()", "modifiers": "private", "return": "", "signature": " Resources()", "full_signature": "private  Resources()", "class_method_signature": "Resources.Resources()", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(String path)", "modifiers": "@Pure public static", "return": "URL", "signature": "URL getResource(String path)", "full_signature": "@Pure public static URL getResource(String path)", "class_method_signature": "Resources.getResource(String path)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(ClassLoader classLoader, Package packagename, String path)", "modifiers": "@Pure @Deprecated(since = \"17.0\") public static", "return": "URL", "signature": "URL getResource(ClassLoader classLoader, Package packagename, String path)", "full_signature": "@Pure @Deprecated(since = \"17.0\") public static URL getResource(ClassLoader classLoader, Package packagename, String path)", "class_method_signature": "Resources.getResource(ClassLoader classLoader, Package packagename, String path)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(Class<?> classname, String path)", "modifiers": "@Pure public static", "return": "URL", "signature": "URL getResource(Class<?> classname, String path)", "full_signature": "@Pure public static URL getResource(Class<?> classname, String path)", "class_method_signature": "Resources.getResource(Class<?> classname, String path)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "@Pure @Deprecated(since = \"17.0\") public static", "return": "URL", "signature": "URL getResource(ClassLoader classLoader, String path)", "full_signature": "@Pure @Deprecated(since = \"17.0\") public static URL getResource(ClassLoader classLoader, String path)", "class_method_signature": "Resources.getResource(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String path)", "modifiers": "@Pure public static", "return": "InputStream", "signature": "InputStream getResourceAsStream(String path)", "full_signature": "@Pure public static InputStream getResourceAsStream(String path)", "class_method_signature": "Resources.getResourceAsStream(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(ClassLoader classLoader, Package packagename, String path)", "modifiers": "@Pure @Deprecated(since = \"17.0\") public static", "return": "InputStream", "signature": "InputStream getResourceAsStream(ClassLoader classLoader, Package packagename, String path)", "full_signature": "@Pure @Deprecated(since = \"17.0\") public static InputStream getResourceAsStream(ClassLoader classLoader, Package packagename, String path)", "class_method_signature": "Resources.getResourceAsStream(ClassLoader classLoader, Package packagename, String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(Class<?> classname, String path)", "modifiers": "@Pure public static", "return": "InputStream", "signature": "InputStream getResourceAsStream(Class<?> classname, String path)", "full_signature": "@Pure public static InputStream getResourceAsStream(Class<?> classname, String path)", "class_method_signature": "Resources.getResourceAsStream(Class<?> classname, String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "@Pure @Deprecated(since = \"17.0\") public static", "return": "InputStream", "signature": "InputStream getResourceAsStream(ClassLoader classLoader, String path)", "full_signature": "@Pure @Deprecated(since = \"17.0\") public static InputStream getResourceAsStream(ClassLoader classLoader, String path)", "class_method_signature": "Resources.getResourceAsStream(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "getPropertyFile", "parameters": "(Class<?> classname, Locale locale)", "modifiers": "@Pure public static", "return": "URL", "signature": "URL getPropertyFile(Class<?> classname, Locale locale)", "full_signature": "@Pure public static URL getPropertyFile(Class<?> classname, Locale locale)", "class_method_signature": "Resources.getPropertyFile(Class<?> classname, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getPropertyFile", "parameters": "(ClassLoader classLoader, Class<?> classname, Locale locale)", "modifiers": "@Pure @Deprecated(since = \"17.0\") public static", "return": "URL", "signature": "URL getPropertyFile(ClassLoader classLoader, Class<?> classname, Locale locale)", "full_signature": "@Pure @Deprecated(since = \"17.0\") public static URL getPropertyFile(ClassLoader classLoader, Class<?> classname, Locale locale)", "class_method_signature": "Resources.getPropertyFile(ClassLoader classLoader, Class<?> classname, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "translateResourceName", "parameters": "(String resourceName)", "modifiers": "@Pure public static", "return": "String", "signature": "String translateResourceName(String resourceName)", "full_signature": "@Pure public static String translateResourceName(String resourceName)", "class_method_signature": "Resources.translateResourceName(String resourceName)", "testcase": false, "constructor": false}], "file": "core/vmutils/src/main/java/org/arakhne/afc/vmutil/Resources.java"}, "focal_method": {"identifier": "getResource", "parameters": "(String path)", "modifiers": "@Pure public static", "return": "URL", "body": "@Pure\n\tpublic static URL getResource(String path) {\n\t\ttry {\n\t\t\tfinal Class<?> type = Caller.getCallerClass(1);\n\t\t\tif (type != null) {\n\t\t\t\treturn getResource(type, path);\n\t\t\t}\n\t\t} catch (Throwable exception) {\n\t\t\t//\n\t\t}\n\t\treturn getResource((ClassLoader) null, path);\n\t}", "signature": "URL getResource(String path)", "full_signature": "@Pure public static URL getResource(String path)", "class_method_signature": "Resources.getResource(String path)", "testcase": false, "constructor": false, "invocations": ["getCallerClass", "getResource", "getResource"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}