{"test_class": {"identifier": "MaterialTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Material material;", "modifier": "private", "type": "Material", "declarator": "material", "var_name": "material"}, {"original_string": "private final Geometry geometry = new Geometry(\"Geometry\", new Box(1, 1, 1));", "modifier": "private final", "type": "Geometry", "declarator": "geometry = new Geometry(\"Geometry\", new Box(1, 1, 1))", "var_name": "geometry"}, {"original_string": "private final EnumSet<Caps> myCaps = EnumSet.noneOf(Caps.class);", "modifier": "private final", "type": "EnumSet<Caps>", "declarator": "myCaps = EnumSet.noneOf(Caps.class)", "var_name": "myCaps"}, {"original_string": "private final RenderManager renderManager = new RenderManager(new NullRenderer() {\n        @Override\n        public EnumSet<Caps> getCaps() {\n            return MaterialTest.this.myCaps;\n        }\n    });", "modifier": "private final", "type": "RenderManager", "declarator": "renderManager = new RenderManager(new NullRenderer() {\n        @Override\n        public EnumSet<Caps> getCaps() {\n            return MaterialTest.this.myCaps;\n        }\n    })", "var_name": "renderManager"}], "file": "jme3-core/src/test/java/com/jme3/material/MaterialTest.java"}, "test_case": {"identifier": "testForcedColorSpace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testForcedColorSpace(){\n       \n        Image img=new Image(Format.RGBA8,2,2,BufferUtils.createByteBuffer(16),null,ColorSpace.sRGB);\n        Image img2=new Image(Format.RGBA8,2,2,BufferUtils.createByteBuffer(16),null,ColorSpace.sRGB);\n        Texture2D tx=new Texture2D(img);\n        Texture2D tx2=new Texture2D(img2);\n\n        assertTrue(tx2.getImage().getColorSpace()==ColorSpace.sRGB);\n        assertTrue(tx2.getImage().getColorSpace()==ColorSpace.sRGB);\n\n        AssetManager assetManager = TestUtil.createAssetManager();\n        MaterialDef def=new MaterialDef(assetManager,\"test\");\n        def.addMaterialParamTexture(VarType.Texture2D, \"ColorMap\",ColorSpace.Linear, null);\n        Material mat=new Material(def);\n        \n        mat.setTexture(\"ColorMap\",tx);          \n        assertTrue(tx.getImage().getColorSpace()==ColorSpace.Linear);\n        \n        mat.setTexture(\"ColorMap\",tx2);  \n        assertTrue(tx2.getImage().getColorSpace()==ColorSpace.Linear);       \n    \n    }", "signature": "void testForcedColorSpace()", "full_signature": "@Test public void testForcedColorSpace()", "class_method_signature": "MaterialTest.testForcedColorSpace()", "testcase": true, "constructor": false, "invocations": ["createByteBuffer", "createByteBuffer", "assertTrue", "getColorSpace", "getImage", "assertTrue", "getColorSpace", "getImage", "createAssetManager", "addMaterialParamTexture", "setTexture", "assertTrue", "getColorSpace", "getImage", "setTexture", "assertTrue", "getColorSpace", "getImage"]}, "focal_class": {"identifier": "Material", "superclass": "", "interfaces": "implements CloneableSmartAsset, Cloneable, Savable", "fields": [{"original_string": "public static final int SAVABLE_VERSION = 2;", "modifier": "public static final", "type": "int", "declarator": "SAVABLE_VERSION = 2", "var_name": "SAVABLE_VERSION"}, {"original_string": "private static final Logger logger = Logger.getLogger(Material.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(Material.class.getName())", "var_name": "logger"}, {"original_string": "private AssetKey key;", "modifier": "private", "type": "AssetKey", "declarator": "key", "var_name": "key"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private MaterialDef def;", "modifier": "private", "type": "MaterialDef", "declarator": "def", "var_name": "def"}, {"original_string": "private ListMap<String, MatParam> paramValues = new ListMap<String, MatParam>();", "modifier": "private", "type": "ListMap<String, MatParam>", "declarator": "paramValues = new ListMap<String, MatParam>()", "var_name": "paramValues"}, {"original_string": "private Technique technique;", "modifier": "private", "type": "Technique", "declarator": "technique", "var_name": "technique"}, {"original_string": "private HashMap<String, Technique> techniques = new HashMap<String, Technique>();", "modifier": "private", "type": "HashMap<String, Technique>", "declarator": "techniques = new HashMap<String, Technique>()", "var_name": "techniques"}, {"original_string": "private RenderState additionalState = null;", "modifier": "private", "type": "RenderState", "declarator": "additionalState = null", "var_name": "additionalState"}, {"original_string": "private RenderState mergedRenderState = new RenderState();", "modifier": "private", "type": "RenderState", "declarator": "mergedRenderState = new RenderState()", "var_name": "mergedRenderState"}, {"original_string": "private boolean transparent = false;", "modifier": "private", "type": "boolean", "declarator": "transparent = false", "var_name": "transparent"}, {"original_string": "private boolean receivesShadows = false;", "modifier": "private", "type": "boolean", "declarator": "receivesShadows = false", "var_name": "receivesShadows"}, {"original_string": "private int sortingId = -1;", "modifier": "private", "type": "int", "declarator": "sortingId = -1", "var_name": "sortingId"}], "methods": [{"identifier": "Material", "parameters": "(MaterialDef def)", "modifiers": "public", "return": "", "signature": " Material(MaterialDef def)", "full_signature": "public  Material(MaterialDef def)", "class_method_signature": "Material.Material(MaterialDef def)", "testcase": false, "constructor": true}, {"identifier": "Material", "parameters": "(AssetManager contentMan, String defName)", "modifiers": "public", "return": "", "signature": " Material(AssetManager contentMan, String defName)", "full_signature": "public  Material(AssetManager contentMan, String defName)", "class_method_signature": "Material.Material(AssetManager contentMan, String defName)", "testcase": false, "constructor": true}, {"identifier": "Material", "parameters": "()", "modifiers": "public", "return": "", "signature": " Material()", "full_signature": "public  Material()", "class_method_signature": "Material.Material()", "testcase": false, "constructor": true}, {"identifier": "getAssetName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAssetName()", "full_signature": "public String getAssetName()", "class_method_signature": "Material.getAssetName()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Material.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "Material.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "setKey", "parameters": "(AssetKey key)", "modifiers": "@Override public", "return": "void", "signature": "void setKey(AssetKey key)", "full_signature": "@Override public void setKey(AssetKey key)", "class_method_signature": "Material.setKey(AssetKey key)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "AssetKey", "signature": "AssetKey getKey()", "full_signature": "@Override public AssetKey getKey()", "class_method_signature": "Material.getKey()", "testcase": false, "constructor": false}, {"identifier": "getSortId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSortId()", "full_signature": "public int getSortId()", "class_method_signature": "Material.getSortId()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Material", "signature": "Material clone()", "full_signature": "@Override public Material clone()", "class_method_signature": "Material.clone()", "testcase": false, "constructor": false}, {"identifier": "contentEquals", "parameters": "(Object otherObj)", "modifiers": "public", "return": "boolean", "signature": "boolean contentEquals(Object otherObj)", "full_signature": "public boolean contentEquals(Object otherObj)", "class_method_signature": "Material.contentEquals(Object otherObj)", "testcase": false, "constructor": false}, {"identifier": "contentHashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int contentHashCode()", "full_signature": "public int contentHashCode()", "class_method_signature": "Material.contentHashCode()", "testcase": false, "constructor": false}, {"identifier": "getActiveTechnique", "parameters": "()", "modifiers": "public", "return": "Technique", "signature": "Technique getActiveTechnique()", "full_signature": "public Technique getActiveTechnique()", "class_method_signature": "Material.getActiveTechnique()", "testcase": false, "constructor": false}, {"identifier": "isTransparent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTransparent()", "full_signature": "public boolean isTransparent()", "class_method_signature": "Material.isTransparent()", "testcase": false, "constructor": false}, {"identifier": "setTransparent", "parameters": "(boolean transparent)", "modifiers": "public", "return": "void", "signature": "void setTransparent(boolean transparent)", "full_signature": "public void setTransparent(boolean transparent)", "class_method_signature": "Material.setTransparent(boolean transparent)", "testcase": false, "constructor": false}, {"identifier": "isReceivesShadows", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReceivesShadows()", "full_signature": "public boolean isReceivesShadows()", "class_method_signature": "Material.isReceivesShadows()", "testcase": false, "constructor": false}, {"identifier": "setReceivesShadows", "parameters": "(boolean receivesShadows)", "modifiers": "public", "return": "void", "signature": "void setReceivesShadows(boolean receivesShadows)", "full_signature": "public void setReceivesShadows(boolean receivesShadows)", "class_method_signature": "Material.setReceivesShadows(boolean receivesShadows)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalRenderState", "parameters": "()", "modifiers": "public", "return": "RenderState", "signature": "RenderState getAdditionalRenderState()", "full_signature": "public RenderState getAdditionalRenderState()", "class_method_signature": "Material.getAdditionalRenderState()", "testcase": false, "constructor": false}, {"identifier": "getMaterialDef", "parameters": "()", "modifiers": "public", "return": "MaterialDef", "signature": "MaterialDef getMaterialDef()", "full_signature": "public MaterialDef getMaterialDef()", "class_method_signature": "Material.getMaterialDef()", "testcase": false, "constructor": false}, {"identifier": "getParam", "parameters": "(String name)", "modifiers": "public", "return": "MatParam", "signature": "MatParam getParam(String name)", "full_signature": "public MatParam getParam(String name)", "class_method_signature": "Material.getParam(String name)", "testcase": false, "constructor": false}, {"identifier": "getParamValue", "parameters": "(final String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getParamValue(final String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public T getParamValue(final String name)", "class_method_signature": "Material.getParamValue(final String name)", "testcase": false, "constructor": false}, {"identifier": "getTextureParam", "parameters": "(String name)", "modifiers": "public", "return": "MatParamTexture", "signature": "MatParamTexture getTextureParam(String name)", "full_signature": "public MatParamTexture getTextureParam(String name)", "class_method_signature": "Material.getTextureParam(String name)", "testcase": false, "constructor": false}, {"identifier": "getParams", "parameters": "()", "modifiers": "public", "return": "Collection<MatParam>", "signature": "Collection<MatParam> getParams()", "full_signature": "public Collection<MatParam> getParams()", "class_method_signature": "Material.getParams()", "testcase": false, "constructor": false}, {"identifier": "getParamsMap", "parameters": "()", "modifiers": "public", "return": "ListMap<String, MatParam>", "signature": "ListMap<String, MatParam> getParamsMap()", "full_signature": "public ListMap<String, MatParam> getParamsMap()", "class_method_signature": "Material.getParamsMap()", "testcase": false, "constructor": false}, {"identifier": "checkSetParam", "parameters": "(VarType type, String name)", "modifiers": "private", "return": "void", "signature": "void checkSetParam(VarType type, String name)", "full_signature": "private void checkSetParam(VarType type, String name)", "class_method_signature": "Material.checkSetParam(VarType type, String name)", "testcase": false, "constructor": false}, {"identifier": "setParam", "parameters": "(String name, VarType type, Object value)", "modifiers": "public", "return": "void", "signature": "void setParam(String name, VarType type, Object value)", "full_signature": "public void setParam(String name, VarType type, Object value)", "class_method_signature": "Material.setParam(String name, VarType type, Object value)", "testcase": false, "constructor": false}, {"identifier": "clearParam", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void clearParam(String name)", "full_signature": "public void clearParam(String name)", "class_method_signature": "Material.clearParam(String name)", "testcase": false, "constructor": false}, {"identifier": "setTextureParam", "parameters": "(String name, VarType type, Texture value)", "modifiers": "public", "return": "void", "signature": "void setTextureParam(String name, VarType type, Texture value)", "full_signature": "public void setTextureParam(String name, VarType type, Texture value)", "class_method_signature": "Material.setTextureParam(String name, VarType type, Texture value)", "testcase": false, "constructor": false}, {"identifier": "checkTextureParamColorSpace", "parameters": "(String name, Texture value)", "modifiers": "private", "return": "void", "signature": "void checkTextureParamColorSpace(String name, Texture value)", "full_signature": "private void checkTextureParamColorSpace(String name, Texture value)", "class_method_signature": "Material.checkTextureParamColorSpace(String name, Texture value)", "testcase": false, "constructor": false}, {"identifier": "setTexture", "parameters": "(String name, Texture value)", "modifiers": "public", "return": "void", "signature": "void setTexture(String name, Texture value)", "full_signature": "public void setTexture(String name, Texture value)", "class_method_signature": "Material.setTexture(String name, Texture value)", "testcase": false, "constructor": false}, {"identifier": "setMatrix4", "parameters": "(String name, Matrix4f value)", "modifiers": "public", "return": "void", "signature": "void setMatrix4(String name, Matrix4f value)", "full_signature": "public void setMatrix4(String name, Matrix4f value)", "class_method_signature": "Material.setMatrix4(String name, Matrix4f value)", "testcase": false, "constructor": false}, {"identifier": "setBoolean", "parameters": "(String name, boolean value)", "modifiers": "public", "return": "void", "signature": "void setBoolean(String name, boolean value)", "full_signature": "public void setBoolean(String name, boolean value)", "class_method_signature": "Material.setBoolean(String name, boolean value)", "testcase": false, "constructor": false}, {"identifier": "setFloat", "parameters": "(String name, float value)", "modifiers": "public", "return": "void", "signature": "void setFloat(String name, float value)", "full_signature": "public void setFloat(String name, float value)", "class_method_signature": "Material.setFloat(String name, float value)", "testcase": false, "constructor": false}, {"identifier": "setFloat", "parameters": "(String name, Float value)", "modifiers": "public", "return": "void", "signature": "void setFloat(String name, Float value)", "full_signature": "public void setFloat(String name, Float value)", "class_method_signature": "Material.setFloat(String name, Float value)", "testcase": false, "constructor": false}, {"identifier": "setInt", "parameters": "(String name, int value)", "modifiers": "public", "return": "void", "signature": "void setInt(String name, int value)", "full_signature": "public void setInt(String name, int value)", "class_method_signature": "Material.setInt(String name, int value)", "testcase": false, "constructor": false}, {"identifier": "setColor", "parameters": "(String name, ColorRGBA value)", "modifiers": "public", "return": "void", "signature": "void setColor(String name, ColorRGBA value)", "full_signature": "public void setColor(String name, ColorRGBA value)", "class_method_signature": "Material.setColor(String name, ColorRGBA value)", "testcase": false, "constructor": false}, {"identifier": "setUniformBufferObject", "parameters": "(final String name, final BufferObject value)", "modifiers": "public", "return": "void", "signature": "void setUniformBufferObject(final String name, final BufferObject value)", "full_signature": "public void setUniformBufferObject(final String name, final BufferObject value)", "class_method_signature": "Material.setUniformBufferObject(final String name, final BufferObject value)", "testcase": false, "constructor": false}, {"identifier": "setShaderStorageBufferObject", "parameters": "(final String name, final BufferObject value)", "modifiers": "public", "return": "void", "signature": "void setShaderStorageBufferObject(final String name, final BufferObject value)", "full_signature": "public void setShaderStorageBufferObject(final String name, final BufferObject value)", "class_method_signature": "Material.setShaderStorageBufferObject(final String name, final BufferObject value)", "testcase": false, "constructor": false}, {"identifier": "setVector2", "parameters": "(String name, Vector2f value)", "modifiers": "public", "return": "void", "signature": "void setVector2(String name, Vector2f value)", "full_signature": "public void setVector2(String name, Vector2f value)", "class_method_signature": "Material.setVector2(String name, Vector2f value)", "testcase": false, "constructor": false}, {"identifier": "setVector3", "parameters": "(String name, Vector3f value)", "modifiers": "public", "return": "void", "signature": "void setVector3(String name, Vector3f value)", "full_signature": "public void setVector3(String name, Vector3f value)", "class_method_signature": "Material.setVector3(String name, Vector3f value)", "testcase": false, "constructor": false}, {"identifier": "setVector4", "parameters": "(String name, Vector4f value)", "modifiers": "public", "return": "void", "signature": "void setVector4(String name, Vector4f value)", "full_signature": "public void setVector4(String name, Vector4f value)", "class_method_signature": "Material.setVector4(String name, Vector4f value)", "testcase": false, "constructor": false}, {"identifier": "selectTechnique", "parameters": "(String name, final RenderManager renderManager)", "modifiers": "public", "return": "void", "signature": "void selectTechnique(String name, final RenderManager renderManager)", "full_signature": "public void selectTechnique(String name, final RenderManager renderManager)", "class_method_signature": "Material.selectTechnique(String name, final RenderManager renderManager)", "testcase": false, "constructor": false}, {"identifier": "applyOverrides", "parameters": "(Renderer renderer, Shader shader, SafeArrayList<MatParamOverride> overrides, int unit)", "modifiers": "private", "return": "int", "signature": "int applyOverrides(Renderer renderer, Shader shader, SafeArrayList<MatParamOverride> overrides, int unit)", "full_signature": "private int applyOverrides(Renderer renderer, Shader shader, SafeArrayList<MatParamOverride> overrides, int unit)", "class_method_signature": "Material.applyOverrides(Renderer renderer, Shader shader, SafeArrayList<MatParamOverride> overrides, int unit)", "testcase": false, "constructor": false}, {"identifier": "updateShaderMaterialParameters", "parameters": "(Renderer renderer, Shader shader,\n                                               SafeArrayList<MatParamOverride> worldOverrides, SafeArrayList<MatParamOverride> forcedOverrides)", "modifiers": "private", "return": "int", "signature": "int updateShaderMaterialParameters(Renderer renderer, Shader shader,\n                                               SafeArrayList<MatParamOverride> worldOverrides, SafeArrayList<MatParamOverride> forcedOverrides)", "full_signature": "private int updateShaderMaterialParameters(Renderer renderer, Shader shader,\n                                               SafeArrayList<MatParamOverride> worldOverrides, SafeArrayList<MatParamOverride> forcedOverrides)", "class_method_signature": "Material.updateShaderMaterialParameters(Renderer renderer, Shader shader,\n                                               SafeArrayList<MatParamOverride> worldOverrides, SafeArrayList<MatParamOverride> forcedOverrides)", "testcase": false, "constructor": false}, {"identifier": "isBO", "parameters": "(final VarType type)", "modifiers": "private", "return": "boolean", "signature": "boolean isBO(final VarType type)", "full_signature": "private boolean isBO(final VarType type)", "class_method_signature": "Material.isBO(final VarType type)", "testcase": false, "constructor": false}, {"identifier": "updateRenderState", "parameters": "(RenderManager renderManager, Renderer renderer, TechniqueDef techniqueDef)", "modifiers": "private", "return": "void", "signature": "void updateRenderState(RenderManager renderManager, Renderer renderer, TechniqueDef techniqueDef)", "full_signature": "private void updateRenderState(RenderManager renderManager, Renderer renderer, TechniqueDef techniqueDef)", "class_method_signature": "Material.updateRenderState(RenderManager renderManager, Renderer renderer, TechniqueDef techniqueDef)", "testcase": false, "constructor": false}, {"identifier": "preload", "parameters": "(RenderManager renderManager, Geometry geometry)", "modifiers": "public", "return": "void", "signature": "void preload(RenderManager renderManager, Geometry geometry)", "full_signature": "public void preload(RenderManager renderManager, Geometry geometry)", "class_method_signature": "Material.preload(RenderManager renderManager, Geometry geometry)", "testcase": false, "constructor": false}, {"identifier": "clearUniformsSetByCurrent", "parameters": "(Shader shader)", "modifiers": "private", "return": "void", "signature": "void clearUniformsSetByCurrent(Shader shader)", "full_signature": "private void clearUniformsSetByCurrent(Shader shader)", "class_method_signature": "Material.clearUniformsSetByCurrent(Shader shader)", "testcase": false, "constructor": false}, {"identifier": "resetUniformsNotSetByCurrent", "parameters": "(Shader shader)", "modifiers": "private", "return": "void", "signature": "void resetUniformsNotSetByCurrent(Shader shader)", "full_signature": "private void resetUniformsNotSetByCurrent(Shader shader)", "class_method_signature": "Material.resetUniformsNotSetByCurrent(Shader shader)", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(Geometry geometry, LightList lights, RenderManager renderManager)", "modifiers": "public", "return": "void", "signature": "void render(Geometry geometry, LightList lights, RenderManager renderManager)", "full_signature": "public void render(Geometry geometry, LightList lights, RenderManager renderManager)", "class_method_signature": "Material.render(Geometry geometry, LightList lights, RenderManager renderManager)", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(Geometry geom, RenderManager rm)", "modifiers": "public", "return": "void", "signature": "void render(Geometry geom, RenderManager rm)", "full_signature": "public void render(Geometry geom, RenderManager rm)", "class_method_signature": "Material.render(Geometry geom, RenderManager rm)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(JmeExporter ex)", "modifiers": "@Override public", "return": "void", "signature": "void write(JmeExporter ex)", "full_signature": "@Override public void write(JmeExporter ex)", "class_method_signature": "Material.write(JmeExporter ex)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Material.toString()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(JmeImporter im)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void read(JmeImporter im)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void read(JmeImporter im)", "class_method_signature": "Material.read(JmeImporter im)", "testcase": false, "constructor": false}], "file": "jme3-core/src/main/java/com/jme3/material/Material.java"}, "focal_method": {"identifier": "setTexture", "parameters": "(String name, Texture value)", "modifiers": "public", "return": "void", "body": "public void setTexture(String name, Texture value) {\n        if (value == null) {\n            // clear it\n            clearParam(name);\n            return;\n        }\n\n        VarType paramType = null;\n        switch (value.getType()) {\n            case TwoDimensional:\n                paramType = VarType.Texture2D;\n                break;\n            case TwoDimensionalArray:\n                paramType = VarType.TextureArray;\n                break;\n            case ThreeDimensional:\n                paramType = VarType.Texture3D;\n                break;\n            case CubeMap:\n                paramType = VarType.TextureCubeMap;\n                break;\n            default:\n                throw new UnsupportedOperationException(\"Unknown texture type: \" + value.getType());\n        }\n\n        setTextureParam(name, paramType, value);\n    }", "signature": "void setTexture(String name, Texture value)", "full_signature": "public void setTexture(String name, Texture value)", "class_method_signature": "Material.setTexture(String name, Texture value)", "testcase": false, "constructor": false, "invocations": ["clearParam", "getType", "getType", "setTextureParam"]}, "repository": {"repo_id": 17960746, "url": "https://github.com/jMonkeyEngine/jmonkeyengine", "language": "Java", "is_fork": false, "fork_count": 957, "stargazer_count": 2373, "size": 861551, "license": "licensed"}}