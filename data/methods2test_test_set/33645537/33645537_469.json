{"test_class": {"identifier": "IsBSTTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IsBST isBST;", "modifier": "private", "type": "IsBST", "declarator": "isBST", "var_name": "isBST"}], "file": "algs/src/test/java/com/github/pedrovgs/problem18/IsBSTTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullBinaryTreesIterative", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void shouldNotAcceptNullBinaryTreesIterative() {\n    isBST.checkIterative(null);\n  }", "signature": "void shouldNotAcceptNullBinaryTreesIterative()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullBinaryTreesIterative()", "class_method_signature": "IsBSTTest.shouldNotAcceptNullBinaryTreesIterative()", "testcase": true, "constructor": false, "invocations": ["checkIterative"]}, "focal_class": {"identifier": "IsBST", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BinaryTreeInOrder binaryTreeInOrder = new BinaryTreeInOrder();", "modifier": "private", "type": "BinaryTreeInOrder", "declarator": "binaryTreeInOrder = new BinaryTreeInOrder()", "var_name": "binaryTreeInOrder"}], "methods": [{"identifier": "checkRecursive", "parameters": "(BinaryNode<Integer> root)", "modifiers": "public", "return": "boolean", "signature": "boolean checkRecursive(BinaryNode<Integer> root)", "full_signature": "public boolean checkRecursive(BinaryNode<Integer> root)", "class_method_signature": "IsBST.checkRecursive(BinaryNode<Integer> root)", "testcase": false, "constructor": false}, {"identifier": "checkRecursiveInner", "parameters": "(BinaryNode<Integer> root)", "modifiers": "private", "return": "boolean", "signature": "boolean checkRecursiveInner(BinaryNode<Integer> root)", "full_signature": "private boolean checkRecursiveInner(BinaryNode<Integer> root)", "class_method_signature": "IsBST.checkRecursiveInner(BinaryNode<Integer> root)", "testcase": false, "constructor": false}, {"identifier": "checkIterative", "parameters": "(BinaryNode<Integer> root)", "modifiers": "public", "return": "boolean", "signature": "boolean checkIterative(BinaryNode<Integer> root)", "full_signature": "public boolean checkIterative(BinaryNode<Integer> root)", "class_method_signature": "IsBST.checkIterative(BinaryNode<Integer> root)", "testcase": false, "constructor": false}, {"identifier": "isListOrdered", "parameters": "(List<BinaryNode<Integer>> nodes)", "modifiers": "private", "return": "boolean", "signature": "boolean isListOrdered(List<BinaryNode<Integer>> nodes)", "full_signature": "private boolean isListOrdered(List<BinaryNode<Integer>> nodes)", "class_method_signature": "IsBST.isListOrdered(List<BinaryNode<Integer>> nodes)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(BinaryNode<Integer> root)", "modifiers": "private", "return": "void", "signature": "void validateInput(BinaryNode<Integer> root)", "full_signature": "private void validateInput(BinaryNode<Integer> root)", "class_method_signature": "IsBST.validateInput(BinaryNode<Integer> root)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem18/IsBST.java"}, "focal_method": {"identifier": "checkIterative", "parameters": "(BinaryNode<Integer> root)", "modifiers": "public", "return": "boolean", "body": "public boolean checkIterative(BinaryNode<Integer> root) {\n    validateInput(root);\n    List<BinaryNode<Integer>> nodesInOrder = binaryTreeInOrder.getRecursive(root);\n    return isListOrdered(nodesInOrder);\n  }", "signature": "boolean checkIterative(BinaryNode<Integer> root)", "full_signature": "public boolean checkIterative(BinaryNode<Integer> root)", "class_method_signature": "IsBST.checkIterative(BinaryNode<Integer> root)", "testcase": false, "constructor": false, "invocations": ["validateInput", "getRecursive", "isListOrdered"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}