{"test_class": {"identifier": "urn_perun_user_attribute_def_def_uid_namespaceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_attribute_def_def_uid_namespace classInstance;", "modifier": "private static", "type": "urn_perun_user_attribute_def_def_uid_namespace", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static User user;", "modifier": "private static", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private static Attribute attributeToCheck;", "modifier": "private static", "type": "Attribute", "declarator": "attributeToCheck", "var_name": "attributeToCheck"}, {"original_string": "private static Attribute minUid;", "modifier": "private static", "type": "Attribute", "declarator": "minUid", "var_name": "minUid"}, {"original_string": "private static Attribute maxUid;", "modifier": "private static", "type": "Attribute", "declarator": "maxUid", "var_name": "maxUid"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_uid_namespaceTest.java"}, "test_case": {"identifier": "testCheckWithUidLesserThanMin", "parameters": "()", "modifiers": "@Test(expected = WrongReferenceAttributeValueException.class) public", "return": "void", "body": "@Test(expected = WrongReferenceAttributeValueException.class)\n\tpublic void testCheckWithUidLesserThanMin() throws Exception {\n\t\tSystem.out.println(\"testCheckWithUidLesserThanMin()\");\n\t\tminUid.setValue(2);\n\t\tmaxUid.setValue(6);\n\t\tattributeToCheck.setValue(1);\n\n\t\tclassInstance.checkAttributeSemantics(session, user, attributeToCheck);\n\t}", "signature": "void testCheckWithUidLesserThanMin()", "full_signature": "@Test(expected = WrongReferenceAttributeValueException.class) public void testCheckWithUidLesserThanMin()", "class_method_signature": "urn_perun_user_attribute_def_def_uid_namespaceTest.testCheckWithUidLesserThanMin()", "testcase": true, "constructor": false, "invocations": ["println", "setValue", "setValue", "setValue", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_user_attribute_def_def_uid_namespace", "superclass": "extends UserAttributesModuleAbstract", "interfaces": "implements UserAttributesModuleImplApi", "fields": [{"original_string": "private static final String A_E_namespace_minUID = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-minUID\";", "modifier": "private static final", "type": "String", "declarator": "A_E_namespace_minUID = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-minUID\"", "var_name": "A_E_namespace_minUID"}, {"original_string": "private static final String A_E_namespace_maxUID = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-maxUID\";", "modifier": "private static final", "type": "String", "declarator": "A_E_namespace_maxUID = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-maxUID\"", "var_name": "A_E_namespace_maxUID"}, {"original_string": "private static final String A_E_namespace_namespace_uid_policy = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-uid-policy\";", "modifier": "private static final", "type": "String", "declarator": "A_E_namespace_namespace_uid_policy = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-uid-policy\"", "var_name": "A_E_namespace_namespace_uid_policy"}, {"original_string": "private static final String UID_POLICY_INCREMENT = \"increment\";", "modifier": "private static final", "type": "String", "declarator": "UID_POLICY_INCREMENT = \"increment\"", "var_name": "UID_POLICY_INCREMENT"}], "methods": [{"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_uid_namespace.checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "fillAttribute", "parameters": "(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "full_signature": "@Override public Attribute fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_uid_namespace.fillAttribute(PerunSessionImpl sess, User user, AttributeDefinition attribute)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "@Override public List<String> getDependencies()", "class_method_signature": "urn_perun_user_attribute_def_def_uid_namespace.getDependencies()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_uid_namespace.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n\t\tInteger uid = attribute.valueAsInteger();\n\t\tString uidNamespace = attribute.getFriendlyNameParameter();\n\n\t\tif (uid == null) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute was not filled, therefore there is nothing to be checked.\");\n\t\t}\n\n\t\tAttribute minUidAttribute;\n\t\tAttribute maxUidAttribute;\n\t\ttry {\n\t\t\tminUidAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, uidNamespace, A_E_namespace_minUID);\n\t\t\tmaxUidAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, uidNamespace, A_E_namespace_maxUID);\n\t\t} catch (AttributeNotExistsException e) {\n\t\t\tthrow new ConsistencyErrorException(\"minUid and maxUid attributes are required\", e);\n\t\t}\n\n\t\tInteger min = minUidAttribute.valueAsInteger();\n\t\tInteger max = maxUidAttribute.valueAsInteger();\n\t\tif(min == null) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, minUidAttribute);\n\t\t}\n\t\tif (max == null) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, maxUidAttribute);\n\t\t}\n\t\t//uid is in proper range\n\t\tif (uid < min) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, minUidAttribute, user, null, uidNamespace, null, \"UID \" + uid + \" is lesser than min \" + min);\n\t\t}\n\n\t\tif (uid > max) {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, maxUidAttribute, user, null, uidNamespace, null, \"UID \" + uid + \" is higher than max \" + max);\n\t\t}\n\n\t\t// Get all users who have set attribute urn:perun:member:attribute-def:def:uid-namespace:[uid-namespace], with the value.\n\t\tList<User> usersWithUid = sess.getPerunBl().getUsersManagerBl().getUsersByAttribute(sess, attribute);\n\t\tusersWithUid.remove(user); //remove self\n\t\tif (!usersWithUid.isEmpty()) {\n\t\t\tif(usersWithUid.size() > 1) throw new ConsistencyErrorException(\"FATAL ERROR: Duplicated UID detected.\" +  attribute + \" \" + usersWithUid);\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"UID \" + attribute.getValue() + \" is already occupied by \" + usersWithUid.get(0)  + \". We can't set it for \" + user + \".\");\n\t\t}\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "class_method_signature": "urn_perun_user_attribute_def_def_uid_namespace.checkAttributeSemantics(PerunSessionImpl sess, User user, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["valueAsInteger", "getFriendlyNameParameter", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getAttribute", "getAttributesManagerBl", "getPerunBl", "valueAsInteger", "valueAsInteger", "getUsersByAttribute", "getUsersManagerBl", "getPerunBl", "remove", "isEmpty", "size", "getValue", "get"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}