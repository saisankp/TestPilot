{"test_class": {"identifier": "TestRetriableCommand", "superclass": "", "interfaces": "", "fields": [], "file": "conduit-distcp/src/test/java/com/inmobi/conduit/distcp/tools/util/TestRetriableCommand.java"}, "test_case": {"identifier": "testRetriableCommand", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRetriableCommand() {\n    try {\n      new MyRetriableCommand(5).execute(0);\n      Assert.assertTrue(false);\n    }\n    catch (Exception e) {\n      Assert.assertTrue(true);\n    }\n\n\n    try {\n      new MyRetriableCommand(3).execute(0);\n      Assert.assertTrue(true);\n    }\n    catch (Exception e) {\n      Assert.assertTrue(false);\n    }\n\n    try {\n      new MyRetriableCommand(5, RetryPolicies.\n          retryUpToMaximumCountWithFixedSleep(5, 0, TimeUnit.MILLISECONDS)).execute(0);\n      Assert.assertTrue(true);\n    }\n    catch (Exception e) {\n      Assert.assertTrue(false);\n    }\n  }", "signature": "void testRetriableCommand()", "full_signature": "@Test public void testRetriableCommand()", "class_method_signature": "TestRetriableCommand.testRetriableCommand()", "testcase": true, "constructor": false, "invocations": ["execute", "assertTrue", "assertTrue", "execute", "assertTrue", "assertTrue", "execute", "retryUpToMaximumCountWithFixedSleep", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "RetriableCommand", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(RetriableCommand.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(RetriableCommand.class)", "var_name": "LOG"}, {"original_string": "private static final long DELAY_MILLISECONDS = 500;", "modifier": "private static final", "type": "long", "declarator": "DELAY_MILLISECONDS = 500", "var_name": "DELAY_MILLISECONDS"}, {"original_string": "private static final int  MAX_RETRIES        = 3;", "modifier": "private static final", "type": "int", "declarator": "MAX_RETRIES        = 3", "var_name": "MAX_RETRIES"}, {"original_string": "private RetryPolicy retryPolicy = RetryPolicies.\n      exponentialBackoffRetry(MAX_RETRIES, DELAY_MILLISECONDS, TimeUnit.MILLISECONDS);", "modifier": "private", "type": "RetryPolicy", "declarator": "retryPolicy = RetryPolicies.\n      exponentialBackoffRetry(MAX_RETRIES, DELAY_MILLISECONDS, TimeUnit.MILLISECONDS)", "var_name": "retryPolicy"}, {"original_string": "protected String description;", "modifier": "protected", "type": "String", "declarator": "description", "var_name": "description"}], "methods": [{"identifier": "RetriableCommand", "parameters": "(String description)", "modifiers": "public", "return": "", "signature": " RetriableCommand(String description)", "full_signature": "public  RetriableCommand(String description)", "class_method_signature": "RetriableCommand.RetriableCommand(String description)", "testcase": false, "constructor": true}, {"identifier": "RetriableCommand", "parameters": "(String description, RetryPolicy retryPolicy)", "modifiers": "public", "return": "", "signature": " RetriableCommand(String description, RetryPolicy retryPolicy)", "full_signature": "public  RetriableCommand(String description, RetryPolicy retryPolicy)", "class_method_signature": "RetriableCommand.RetriableCommand(String description, RetryPolicy retryPolicy)", "testcase": false, "constructor": true}, {"identifier": "doExecute", "parameters": "(Object... arguments)", "modifiers": "protected abstract", "return": "Object", "signature": "Object doExecute(Object... arguments)", "full_signature": "protected abstract Object doExecute(Object... arguments)", "class_method_signature": "RetriableCommand.doExecute(Object... arguments)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(Object... arguments)", "modifiers": "public", "return": "Object", "signature": "Object execute(Object... arguments)", "full_signature": "public Object execute(Object... arguments)", "class_method_signature": "RetriableCommand.execute(Object... arguments)", "testcase": false, "constructor": false}, {"identifier": "setRetryPolicy", "parameters": "(RetryPolicy retryHandler)", "modifiers": "public", "return": "RetriableCommand", "signature": "RetriableCommand setRetryPolicy(RetryPolicy retryHandler)", "full_signature": "public RetriableCommand setRetryPolicy(RetryPolicy retryHandler)", "class_method_signature": "RetriableCommand.setRetryPolicy(RetryPolicy retryHandler)", "testcase": false, "constructor": false}], "file": "conduit-distcp/src/main/java/com/inmobi/conduit/distcp/tools/util/RetriableCommand.java"}, "focal_method": {"identifier": "RetriableCommand", "parameters": "(String description)", "modifiers": "public", "return": "", "body": "public RetriableCommand(String description) {\n    this.description = description;\n  }", "signature": " RetriableCommand(String description)", "full_signature": "public  RetriableCommand(String description)", "class_method_signature": "RetriableCommand.RetriableCommand(String description)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}