{"test_class": {"identifier": "StreamCatalogServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Tested\n    private StreamCatalogService streamCatalogService;", "modifier": "@Tested\n    private", "type": "StreamCatalogService", "declarator": "streamCatalogService", "var_name": "streamCatalogService"}, {"original_string": "@Injectable\n    private StorageManager dao;", "modifier": "@Injectable\n    private", "type": "StorageManager", "declarator": "dao", "var_name": "dao"}, {"original_string": "@Injectable\n    private FileStorage fileStorage;", "modifier": "@Injectable\n    private", "type": "FileStorage", "declarator": "fileStorage", "var_name": "fileStorage"}, {"original_string": "@Injectable\n    private MLModelRegistryClient modelRegistryClient;", "modifier": "@Injectable\n    private", "type": "MLModelRegistryClient", "declarator": "modelRegistryClient", "var_name": "modelRegistryClient"}, {"original_string": "@Injectable\n    private Map<String, Object> configuration;", "modifier": "@Injectable\n    private", "type": "Map<String, Object>", "declarator": "configuration", "var_name": "configuration"}], "file": "streams/catalog/src/test/java/com/hortonworks/streamline/streams/catalog/service/StreamCatalogServiceTest.java"}, "test_case": {"identifier": "testtranslateFunctionsProjection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testtranslateFunctionsProjection() {\n        String result;\n        Map<String, String> table = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n        table.put(\"FOO\", \"FOO_FN\");\n        table.put(\"foo2\", \"foo2_fn\");\n\n        result = streamCatalogService.translateFunctions(\"select foo(arg1), FOO(arg2), FOO (arg3) from stream\",\n                table);\n        Assert.assertEquals(\"select FOO_FN(arg1), FOO_FN(arg2), FOO_FN (arg3) from stream\", result);\n\n        result = streamCatalogService.translateFunctions(\"select foo2(arg1, arg2), bar(arg2), BAZ(arg3, arg4) from stream\",\n                table);\n        Assert.assertEquals(\"select foo2_fn(arg1, arg2), bar(arg2), BAZ(arg3, arg4) from stream\", result);\n\n    }", "signature": "void testtranslateFunctionsProjection()", "full_signature": "@Test public void testtranslateFunctionsProjection()", "class_method_signature": "StreamCatalogServiceTest.testtranslateFunctionsProjection()", "testcase": true, "constructor": false, "invocations": ["put", "put", "translateFunctions", "assertEquals", "translateFunctions", "assertEquals"]}, "focal_class": {"identifier": "StreamCatalogService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(StreamCatalogService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(StreamCatalogService.class)", "var_name": "LOG"}, {"original_string": "private static final String NOTIFIER_INFO_NAMESPACE = new Notifier().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "NOTIFIER_INFO_NAMESPACE = new Notifier().getNameSpace()", "var_name": "NOTIFIER_INFO_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_NAMESPACE = new Topology().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_NAMESPACE = new Topology().getNameSpace()", "var_name": "TOPOLOGY_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_VERSIONINFO_NAMESPACE = new TopologyVersion().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_VERSIONINFO_NAMESPACE = new TopologyVersion().getNameSpace()", "var_name": "TOPOLOGY_VERSIONINFO_NAMESPACE"}, {"original_string": "private static final String STREAMINFO_NAMESPACE = new TopologyStream().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "STREAMINFO_NAMESPACE = new TopologyStream().getNameSpace()", "var_name": "STREAMINFO_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_COMPONENT_NAMESPACE = new TopologyComponent().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_COMPONENT_NAMESPACE = new TopologyComponent().getNameSpace()", "var_name": "TOPOLOGY_COMPONENT_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_SOURCE_NAMESPACE = new TopologySource().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_SOURCE_NAMESPACE = new TopologySource().getNameSpace()", "var_name": "TOPOLOGY_SOURCE_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_SOURCE_STREAM_MAPPING_NAMESPACE = new TopologySourceStreamMap().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_SOURCE_STREAM_MAPPING_NAMESPACE = new TopologySourceStreamMap().getNameSpace()", "var_name": "TOPOLOGY_SOURCE_STREAM_MAPPING_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_SINK_NAMESPACE = new TopologySink().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_SINK_NAMESPACE = new TopologySink().getNameSpace()", "var_name": "TOPOLOGY_SINK_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_PROCESSOR_NAMESPACE = new TopologyProcessor().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_PROCESSOR_NAMESPACE = new TopologyProcessor().getNameSpace()", "var_name": "TOPOLOGY_PROCESSOR_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_PROCESSOR_STREAM_MAPPING_NAMESPACE = new TopologyProcessorStreamMap().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_PROCESSOR_STREAM_MAPPING_NAMESPACE = new TopologyProcessorStreamMap().getNameSpace()", "var_name": "TOPOLOGY_PROCESSOR_STREAM_MAPPING_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_EDGE_NAMESPACE = new TopologyEdge().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_EDGE_NAMESPACE = new TopologyEdge().getNameSpace()", "var_name": "TOPOLOGY_EDGE_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_RULEINFO_NAMESPACE = new TopologyRule().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_RULEINFO_NAMESPACE = new TopologyRule().getNameSpace()", "var_name": "TOPOLOGY_RULEINFO_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_BRANCHRULEINFO_NAMESPACE = new TopologyBranchRule().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_BRANCHRULEINFO_NAMESPACE = new TopologyBranchRule().getNameSpace()", "var_name": "TOPOLOGY_BRANCHRULEINFO_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_WINDOWINFO_NAMESPACE = new TopologyWindow().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_WINDOWINFO_NAMESPACE = new TopologyWindow().getNameSpace()", "var_name": "TOPOLOGY_WINDOWINFO_NAMESPACE"}, {"original_string": "private static final String UDF_NAMESPACE = new UDF().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "UDF_NAMESPACE = new UDF().getNameSpace()", "var_name": "UDF_NAMESPACE"}, {"original_string": "private static final String TOPOLOGY_STATE_NAMESPACE = new TopologyState().getNameSpace();", "modifier": "private static final", "type": "String", "declarator": "TOPOLOGY_STATE_NAMESPACE = new TopologyState().getNameSpace()", "var_name": "TOPOLOGY_STATE_NAMESPACE"}, {"original_string": "private static final ArrayList<Class<?>> UDF_CLASSES = Lists.newArrayList(UDAF.class, UDAF2.class, com.hortonworks.streamline.streams.rule.UDF.class, UDF2.class,\n                                                                              UDF3.class, UDF4.class, UDF5.class, UDF6.class, UDF7.class);", "modifier": "private static final", "type": "ArrayList<Class<?>>", "declarator": "UDF_CLASSES = Lists.newArrayList(UDAF.class, UDAF2.class, com.hortonworks.streamline.streams.rule.UDF.class, UDF2.class,\n                                                                              UDF3.class, UDF4.class, UDF5.class, UDF6.class, UDF7.class)", "var_name": "UDF_CLASSES"}, {"original_string": "public static final long PLACEHOLDER_ID = -1L;", "modifier": "public static final", "type": "long", "declarator": "PLACEHOLDER_ID = -1L", "var_name": "PLACEHOLDER_ID"}, {"original_string": "private static final String CLONE_SUFFIX = \"-clone\";", "modifier": "private static final", "type": "String", "declarator": "CLONE_SUFFIX = \"-clone\"", "var_name": "CLONE_SUFFIX"}, {"original_string": "private final StorageManager dao;", "modifier": "private final", "type": "StorageManager", "declarator": "dao", "var_name": "dao"}, {"original_string": "private final FileStorage fileStorage;", "modifier": "private final", "type": "FileStorage", "declarator": "fileStorage", "var_name": "fileStorage"}, {"original_string": "private final TopologyDagBuilder topologyDagBuilder;", "modifier": "private final", "type": "TopologyDagBuilder", "declarator": "topologyDagBuilder", "var_name": "topologyDagBuilder"}], "methods": [{"identifier": "StreamCatalogService", "parameters": "(StorageManager dao, FileStorage fileStorage, MLModelRegistryClient modelRegistryClient)", "modifiers": "public", "return": "", "signature": " StreamCatalogService(StorageManager dao, FileStorage fileStorage, MLModelRegistryClient modelRegistryClient)", "full_signature": "public  StreamCatalogService(StorageManager dao, FileStorage fileStorage, MLModelRegistryClient modelRegistryClient)", "class_method_signature": "StreamCatalogService.StreamCatalogService(StorageManager dao, FileStorage fileStorage, MLModelRegistryClient modelRegistryClient)", "testcase": false, "constructor": true}, {"identifier": "addNotifierInfo", "parameters": "(Notifier notifier)", "modifiers": "public", "return": "Notifier", "signature": "Notifier addNotifierInfo(Notifier notifier)", "full_signature": "public Notifier addNotifierInfo(Notifier notifier)", "class_method_signature": "StreamCatalogService.addNotifierInfo(Notifier notifier)", "testcase": false, "constructor": false}, {"identifier": "getNotifierInfo", "parameters": "(Long id)", "modifiers": "public", "return": "Notifier", "signature": "Notifier getNotifierInfo(Long id)", "full_signature": "public Notifier getNotifierInfo(Long id)", "class_method_signature": "StreamCatalogService.getNotifierInfo(Long id)", "testcase": false, "constructor": false}, {"identifier": "listNotifierInfos", "parameters": "()", "modifiers": "public", "return": "Collection<Notifier>", "signature": "Collection<Notifier> listNotifierInfos()", "full_signature": "public Collection<Notifier> listNotifierInfos()", "class_method_signature": "StreamCatalogService.listNotifierInfos()", "testcase": false, "constructor": false}, {"identifier": "listNotifierInfos", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<Notifier>", "signature": "Collection<Notifier> listNotifierInfos(List<QueryParam> params)", "full_signature": "public Collection<Notifier> listNotifierInfos(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listNotifierInfos(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "removeNotifierInfo", "parameters": "(Long notifierId)", "modifiers": "public", "return": "Notifier", "signature": "Notifier removeNotifierInfo(Long notifierId)", "full_signature": "public Notifier removeNotifierInfo(Long notifierId)", "class_method_signature": "StreamCatalogService.removeNotifierInfo(Long notifierId)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateNotifierInfo", "parameters": "(Long id, Notifier notifier)", "modifiers": "public", "return": "Notifier", "signature": "Notifier addOrUpdateNotifierInfo(Long id, Notifier notifier)", "full_signature": "public Notifier addOrUpdateNotifierInfo(Long id, Notifier notifier)", "class_method_signature": "StreamCatalogService.addOrUpdateNotifierInfo(Long id, Notifier notifier)", "testcase": false, "constructor": false}, {"identifier": "listCurrentTopologyVersionInfos", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyVersion>", "signature": "Collection<TopologyVersion> listCurrentTopologyVersionInfos()", "full_signature": "public Collection<TopologyVersion> listCurrentTopologyVersionInfos()", "class_method_signature": "StreamCatalogService.listCurrentTopologyVersionInfos()", "testcase": false, "constructor": false}, {"identifier": "listTopologyVersionInfos", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyVersion>", "signature": "Collection<TopologyVersion> listTopologyVersionInfos(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyVersion> listTopologyVersionInfos(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyVersionInfos(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getCurrentTopologyVersionInfo", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Optional<TopologyVersion>", "signature": "Optional<TopologyVersion> getCurrentTopologyVersionInfo(Long topologyId)", "full_signature": "public Optional<TopologyVersion> getCurrentTopologyVersionInfo(Long topologyId)", "class_method_signature": "StreamCatalogService.getCurrentTopologyVersionInfo(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "getLatestVersionInfo", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Optional<TopologyVersion>", "signature": "Optional<TopologyVersion> getLatestVersionInfo(Long topologyId)", "full_signature": "public Optional<TopologyVersion> getLatestVersionInfo(Long topologyId)", "class_method_signature": "StreamCatalogService.getLatestVersionInfo(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyVersionInfo", "parameters": "(Long versionId)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion getTopologyVersionInfo(Long versionId)", "full_signature": "public TopologyVersion getTopologyVersionInfo(Long versionId)", "class_method_signature": "StreamCatalogService.getTopologyVersionInfo(Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyVersionInfo", "parameters": "(TopologyVersion topologyVersion)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion addTopologyVersionInfo(TopologyVersion topologyVersion)", "full_signature": "public TopologyVersion addTopologyVersionInfo(TopologyVersion topologyVersion)", "class_method_signature": "StreamCatalogService.addTopologyVersionInfo(TopologyVersion topologyVersion)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyVersionInfo", "parameters": "(Long versionId, TopologyVersion topologyVersion)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion addOrUpdateTopologyVersionInfo(Long versionId, TopologyVersion topologyVersion)", "full_signature": "public TopologyVersion addOrUpdateTopologyVersionInfo(Long versionId, TopologyVersion topologyVersion)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyVersionInfo(Long versionId, TopologyVersion topologyVersion)", "testcase": false, "constructor": false}, {"identifier": "getVersionTimestamp", "parameters": "(Long versionId)", "modifiers": "public", "return": "Long", "signature": "Long getVersionTimestamp(Long versionId)", "full_signature": "public Long getVersionTimestamp(Long versionId)", "class_method_signature": "StreamCatalogService.getVersionTimestamp(Long versionId)", "testcase": false, "constructor": false}, {"identifier": "updateVersionTimestamp", "parameters": "(Long versionId)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion updateVersionTimestamp(Long versionId)", "full_signature": "public TopologyVersion updateVersionTimestamp(Long versionId)", "class_method_signature": "StreamCatalogService.updateVersionTimestamp(Long versionId)", "testcase": false, "constructor": false}, {"identifier": "updateVersionTimestamp", "parameters": "(Long versionId, Long timestamp)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion updateVersionTimestamp(Long versionId, Long timestamp)", "full_signature": "public TopologyVersion updateVersionTimestamp(Long versionId, Long timestamp)", "class_method_signature": "StreamCatalogService.updateVersionTimestamp(Long versionId, Long timestamp)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyVersionInfo", "parameters": "(Long versionId)", "modifiers": "public", "return": "TopologyVersion", "signature": "TopologyVersion removeTopologyVersionInfo(Long versionId)", "full_signature": "public TopologyVersion removeTopologyVersionInfo(Long versionId)", "class_method_signature": "StreamCatalogService.removeTopologyVersionInfo(Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listTopologies", "parameters": "()", "modifiers": "public", "return": "Collection<Topology>", "signature": "Collection<Topology> listTopologies()", "full_signature": "public Collection<Topology> listTopologies()", "class_method_signature": "StreamCatalogService.listTopologies()", "testcase": false, "constructor": false}, {"identifier": "listTopologies", "parameters": "(Long versionId)", "modifiers": "private", "return": "Collection<Topology>", "signature": "Collection<Topology> listTopologies(Long versionId)", "full_signature": "private Collection<Topology> listTopologies(Long versionId)", "class_method_signature": "StreamCatalogService.listTopologies(Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listTopologies", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<Topology>", "signature": "Collection<Topology> listTopologies(List<QueryParam> queryParams)", "full_signature": "public Collection<Topology> listTopologies(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologies(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getCurrentVersionId", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Long", "signature": "Long getCurrentVersionId(Long topologyId)", "full_signature": "public Long getCurrentVersionId(Long topologyId)", "class_method_signature": "StreamCatalogService.getCurrentVersionId(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "getTopology", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Topology", "signature": "Topology getTopology(Long topologyId)", "full_signature": "public Topology getTopology(Long topologyId)", "class_method_signature": "StreamCatalogService.getTopology(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "getTopology", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "Topology", "signature": "Topology getTopology(Long topologyId, Long versionId)", "full_signature": "public Topology getTopology(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopology(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopology", "parameters": "(Topology topology)", "modifiers": "public", "return": "Topology", "signature": "Topology addTopology(Topology topology)", "full_signature": "public Topology addTopology(Topology topology)", "class_method_signature": "StreamCatalogService.addTopology(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "removeOnlyTopologyEntity", "parameters": "(Long topologyId, Long versionId)", "modifiers": "private", "return": "Topology", "signature": "Topology removeOnlyTopologyEntity(Long topologyId, Long versionId)", "full_signature": "private Topology removeOnlyTopologyEntity(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.removeOnlyTopologyEntity(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addCurrentTopologyVersionInfo", "parameters": "(Long topologyId, Long timestamp)", "modifiers": "private", "return": "TopologyVersion", "signature": "TopologyVersion addCurrentTopologyVersionInfo(Long topologyId, Long timestamp)", "full_signature": "private TopologyVersion addCurrentTopologyVersionInfo(Long topologyId, Long timestamp)", "class_method_signature": "StreamCatalogService.addCurrentTopologyVersionInfo(Long topologyId, Long timestamp)", "testcase": false, "constructor": false}, {"identifier": "removeTopology", "parameters": "(Long topologyId, boolean recurse)", "modifiers": "public", "return": "Topology", "signature": "Topology removeTopology(Long topologyId, boolean recurse)", "full_signature": "public Topology removeTopology(Long topologyId, boolean recurse)", "class_method_signature": "StreamCatalogService.removeTopology(Long topologyId, boolean recurse)", "testcase": false, "constructor": false}, {"identifier": "removeTopology", "parameters": "(Long topologyId, Long versionId, boolean recurse)", "modifiers": "public", "return": "Topology", "signature": "Topology removeTopology(Long topologyId, Long versionId, boolean recurse)", "full_signature": "public Topology removeTopology(Long topologyId, Long versionId, boolean recurse)", "class_method_signature": "StreamCatalogService.removeTopology(Long topologyId, Long versionId, boolean recurse)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyDependencies", "parameters": "(Long topologyId, Long versionId)", "modifiers": "private", "return": "void", "signature": "void removeTopologyDependencies(Long topologyId, Long versionId)", "full_signature": "private void removeTopologyDependencies(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.removeTopologyDependencies(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "cloneTopologyVersion", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "Topology", "signature": "Topology cloneTopologyVersion(Long topologyId, Long versionId)", "full_signature": "public Topology cloneTopologyVersion(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.cloneTopologyVersion(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "copyTopologyDependencies", "parameters": "(Long topologyId, Long oldVersionId, Long newVersionId)", "modifiers": "private", "return": "void", "signature": "void copyTopologyDependencies(Long topologyId, Long oldVersionId, Long newVersionId)", "full_signature": "private void copyTopologyDependencies(Long topologyId, Long oldVersionId, Long newVersionId)", "class_method_signature": "StreamCatalogService.copyTopologyDependencies(Long topologyId, Long oldVersionId, Long newVersionId)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopology", "parameters": "(Long topologyId, Topology topology)", "modifiers": "public", "return": "Topology", "signature": "Topology addOrUpdateTopology(Long topologyId, Topology topology)", "full_signature": "public Topology addOrUpdateTopology(Long topologyId, Topology topology)", "class_method_signature": "StreamCatalogService.addOrUpdateTopology(Long topologyId, Topology topology)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopology", "parameters": "(Long topologyId, Long versionId, Topology topology)", "modifiers": "private", "return": "Topology", "signature": "Topology addOrUpdateTopology(Long topologyId, Long versionId, Topology topology)", "full_signature": "private Topology addOrUpdateTopology(Long topologyId, Long versionId, Topology topology)", "class_method_signature": "StreamCatalogService.addOrUpdateTopology(Long topologyId, Long versionId, Topology topology)", "testcase": false, "constructor": false}, {"identifier": "getTopologyComponent", "parameters": "(Long topologyId, Long topologyComponentId)", "modifiers": "public", "return": "TopologyComponent", "signature": "TopologyComponent getTopologyComponent(Long topologyId, Long topologyComponentId)", "full_signature": "public TopologyComponent getTopologyComponent(Long topologyId, Long topologyComponentId)", "class_method_signature": "StreamCatalogService.getTopologyComponent(Long topologyId, Long topologyComponentId)", "testcase": false, "constructor": false}, {"identifier": "exportTopology", "parameters": "(Topology topology)", "modifiers": "public", "return": "String", "signature": "String exportTopology(Topology topology)", "full_signature": "public String exportTopology(Topology topology)", "class_method_signature": "StreamCatalogService.exportTopology(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "doExportTopology", "parameters": "(Topology topology)", "modifiers": "private", "return": "TopologyData", "signature": "TopologyData doExportTopology(Topology topology)", "full_signature": "private TopologyData doExportTopology(Topology topology)", "class_method_signature": "StreamCatalogService.doExportTopology(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "importOutputStreams", "parameters": "(Long newTopologyId, Map<Long, Long> oldToNewStreamIds, List<TopologyStream> streams)", "modifiers": "private", "return": "List<Long>", "signature": "List<Long> importOutputStreams(Long newTopologyId, Map<Long, Long> oldToNewStreamIds, List<TopologyStream> streams)", "full_signature": "private List<Long> importOutputStreams(Long newTopologyId, Map<Long, Long> oldToNewStreamIds, List<TopologyStream> streams)", "class_method_signature": "StreamCatalogService.importOutputStreams(Long newTopologyId, Map<Long, Long> oldToNewStreamIds, List<TopologyStream> streams)", "testcase": false, "constructor": false}, {"identifier": "getCurrentTopologyComponentBundle", "parameters": "(TopologyComponentBundle.TopologyComponentType type, String subType)", "modifiers": "private", "return": "TopologyComponentBundle", "signature": "TopologyComponentBundle getCurrentTopologyComponentBundle(TopologyComponentBundle.TopologyComponentType type, String subType)", "full_signature": "private TopologyComponentBundle getCurrentTopologyComponentBundle(TopologyComponentBundle.TopologyComponentType type, String subType)", "class_method_signature": "StreamCatalogService.getCurrentTopologyComponentBundle(TopologyComponentBundle.TopologyComponentType type, String subType)", "testcase": false, "constructor": false}, {"identifier": "doImportTopology", "parameters": "(Topology newTopology, TopologyData topologyData)", "modifiers": "private", "return": "Topology", "signature": "Topology doImportTopology(Topology newTopology, TopologyData topologyData)", "full_signature": "private Topology doImportTopology(Topology newTopology, TopologyData topologyData)", "class_method_signature": "StreamCatalogService.doImportTopology(Topology newTopology, TopologyData topologyData)", "testcase": false, "constructor": false}, {"identifier": "updateNotifierJarFileName", "parameters": "(TopologySink sink)", "modifiers": "private", "return": "void", "signature": "void updateNotifierJarFileName(TopologySink sink)", "full_signature": "private void updateNotifierJarFileName(TopologySink sink)", "class_method_signature": "StreamCatalogService.updateNotifierJarFileName(TopologySink sink)", "testcase": false, "constructor": false}, {"identifier": "importTopology", "parameters": "(Long namespaceId, TopologyData topologyData)", "modifiers": "public", "return": "Topology", "signature": "Topology importTopology(Long namespaceId, TopologyData topologyData)", "full_signature": "public Topology importTopology(Long namespaceId, TopologyData topologyData)", "class_method_signature": "StreamCatalogService.importTopology(Long namespaceId, TopologyData topologyData)", "testcase": false, "constructor": false}, {"identifier": "cloneTopology", "parameters": "(Long namespaceId, Topology topology)", "modifiers": "public", "return": "Topology", "signature": "Topology cloneTopology(Long namespaceId, Topology topology)", "full_signature": "public Topology cloneTopology(Long namespaceId, Topology topology)", "class_method_signature": "StreamCatalogService.cloneTopology(Long namespaceId, Topology topology)", "testcase": false, "constructor": false}, {"identifier": "getLatestCloneName", "parameters": "(String topologyName, Collection<Topology> topologies)", "modifiers": "", "return": "Optional<String>", "signature": "Optional<String> getLatestCloneName(String topologyName, Collection<Topology> topologies)", "full_signature": " Optional<String> getLatestCloneName(String topologyName, Collection<Topology> topologies)", "class_method_signature": "StreamCatalogService.getLatestCloneName(String topologyName, Collection<Topology> topologies)", "testcase": false, "constructor": false}, {"identifier": "getNextCloneName", "parameters": "(String topologyName)", "modifiers": "", "return": "String", "signature": "String getNextCloneName(String topologyName)", "full_signature": " String getNextCloneName(String topologyName)", "class_method_signature": "StreamCatalogService.getNextCloneName(String topologyName)", "testcase": false, "constructor": false}, {"identifier": "getTopologyState", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Optional<TopologyState>", "signature": "Optional<TopologyState> getTopologyState(Long topologyId)", "full_signature": "public Optional<TopologyState> getTopologyState(Long topologyId)", "class_method_signature": "StreamCatalogService.getTopologyState(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyState", "parameters": "(Long topologyId, TopologyState state)", "modifiers": "public", "return": "TopologyState", "signature": "TopologyState addTopologyState(Long topologyId, TopologyState state)", "full_signature": "public TopologyState addTopologyState(Long topologyId, TopologyState state)", "class_method_signature": "StreamCatalogService.addTopologyState(Long topologyId, TopologyState state)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyState", "parameters": "(Long topologyID, TopologyState state)", "modifiers": "public", "return": "TopologyState", "signature": "TopologyState addOrUpdateTopologyState(Long topologyID, TopologyState state)", "full_signature": "public TopologyState addOrUpdateTopologyState(Long topologyID, TopologyState state)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyState(Long topologyID, TopologyState state)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyState", "parameters": "(Long topologyId)", "modifiers": "public", "return": "TopologyState", "signature": "TopologyState removeTopologyState(Long topologyId)", "full_signature": "public TopologyState removeTopologyState(Long topologyId)", "class_method_signature": "StreamCatalogService.removeTopologyState(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyComponentBundleTypes", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyComponentBundle.TopologyComponentType>", "signature": "Collection<TopologyComponentBundle.TopologyComponentType> listTopologyComponentBundleTypes()", "full_signature": "public Collection<TopologyComponentBundle.TopologyComponentType> listTopologyComponentBundleTypes()", "class_method_signature": "StreamCatalogService.listTopologyComponentBundleTypes()", "testcase": false, "constructor": false}, {"identifier": "listTopologyComponentBundlesForTypeWithFilter", "parameters": "(TopologyComponentBundle.TopologyComponentType componentType,\n                                                                                  List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyComponentBundle>", "signature": "Collection<TopologyComponentBundle> listTopologyComponentBundlesForTypeWithFilter(TopologyComponentBundle.TopologyComponentType componentType,\n                                                                                  List<QueryParam> params)", "full_signature": "public Collection<TopologyComponentBundle> listTopologyComponentBundlesForTypeWithFilter(TopologyComponentBundle.TopologyComponentType componentType,\n                                                                                  List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologyComponentBundlesForTypeWithFilter(TopologyComponentBundle.TopologyComponentType componentType,\n                                                                                  List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "getTopologyComponentBundle", "parameters": "(Long topologyComponentBundleId)", "modifiers": "public", "return": "TopologyComponentBundle", "signature": "TopologyComponentBundle getTopologyComponentBundle(Long topologyComponentBundleId)", "full_signature": "public TopologyComponentBundle getTopologyComponentBundle(Long topologyComponentBundleId)", "class_method_signature": "StreamCatalogService.getTopologyComponentBundle(Long topologyComponentBundleId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyComponentBundle", "parameters": "(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "modifiers": "public", "return": "TopologyComponentBundle", "signature": "TopologyComponentBundle addTopologyComponentBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "full_signature": "public TopologyComponentBundle addTopologyComponentBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "class_method_signature": "StreamCatalogService.addTopologyComponentBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyComponentBundle", "parameters": "(Long id, TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "modifiers": "public", "return": "TopologyComponentBundle", "signature": "TopologyComponentBundle addOrUpdateTopologyComponentBundle(Long id, TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "full_signature": "public TopologyComponentBundle addOrUpdateTopologyComponentBundle(Long id, TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyComponentBundle(Long id, TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyComponentBundle", "parameters": "(Long id)", "modifiers": "public", "return": "TopologyComponentBundle", "signature": "TopologyComponentBundle removeTopologyComponentBundle(Long id)", "full_signature": "public TopologyComponentBundle removeTopologyComponentBundle(Long id)", "class_method_signature": "StreamCatalogService.removeTopologyComponentBundle(Long id)", "testcase": false, "constructor": false}, {"identifier": "getFileFromJarStorage", "parameters": "(String fileName)", "modifiers": "public", "return": "InputStream", "signature": "InputStream getFileFromJarStorage(String fileName)", "full_signature": "public InputStream getFileFromJarStorage(String fileName)", "class_method_signature": "StreamCatalogService.getFileFromJarStorage(String fileName)", "testcase": false, "constructor": false}, {"identifier": "listCustomProcessorsFromBundleWithFilter", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<CustomProcessorInfo>", "signature": "Collection<CustomProcessorInfo> listCustomProcessorsFromBundleWithFilter(List<QueryParam> params)", "full_signature": "public Collection<CustomProcessorInfo> listCustomProcessorsFromBundleWithFilter(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listCustomProcessorsFromBundleWithFilter(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "listCustomProcessorBundlesWithFilter", "parameters": "(List<QueryParam> params)", "modifiers": "private", "return": "Collection<TopologyComponentBundle>", "signature": "Collection<TopologyComponentBundle> listCustomProcessorBundlesWithFilter(List<QueryParam> params)", "full_signature": "private Collection<TopologyComponentBundle> listCustomProcessorBundlesWithFilter(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listCustomProcessorBundlesWithFilter(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "addCustomProcessorInfoAsBundle", "parameters": "(CustomProcessorInfo customProcessorInfo, InputStream jarFile)", "modifiers": "public", "return": "CustomProcessorInfo", "signature": "CustomProcessorInfo addCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile)", "full_signature": "public CustomProcessorInfo addCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile)", "class_method_signature": "StreamCatalogService.addCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile)", "testcase": false, "constructor": false}, {"identifier": "updateCustomProcessorInfoAsBundle", "parameters": "(CustomProcessorInfo customProcessorInfo, InputStream jarFile, boolean verify)", "modifiers": "public", "return": "CustomProcessorInfo", "signature": "CustomProcessorInfo updateCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile, boolean verify)", "full_signature": "public CustomProcessorInfo updateCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile, boolean verify)", "class_method_signature": "StreamCatalogService.updateCustomProcessorInfoAsBundle(CustomProcessorInfo customProcessorInfo, InputStream jarFile, boolean verify)", "testcase": false, "constructor": false}, {"identifier": "upgradeCustomProcessorsWithDigest", "parameters": "()", "modifiers": "public", "return": "Collection<CustomProcessorInfo>", "signature": "Collection<CustomProcessorInfo> upgradeCustomProcessorsWithDigest()", "full_signature": "public Collection<CustomProcessorInfo> upgradeCustomProcessorsWithDigest()", "class_method_signature": "StreamCatalogService.upgradeCustomProcessorsWithDigest()", "testcase": false, "constructor": false}, {"identifier": "uploadFileToStorage", "parameters": "(InputStream inputStream, String jarFileName)", "modifiers": "public", "return": "String", "signature": "String uploadFileToStorage(InputStream inputStream, String jarFileName)", "full_signature": "public String uploadFileToStorage(InputStream inputStream, String jarFileName)", "class_method_signature": "StreamCatalogService.uploadFileToStorage(InputStream inputStream, String jarFileName)", "testcase": false, "constructor": false}, {"identifier": "downloadFileFromStorage", "parameters": "(String jarName)", "modifiers": "public", "return": "InputStream", "signature": "InputStream downloadFileFromStorage(String jarName)", "full_signature": "public InputStream downloadFileFromStorage(String jarName)", "class_method_signature": "StreamCatalogService.downloadFileFromStorage(String jarName)", "testcase": false, "constructor": false}, {"identifier": "deleteFileFromStorage", "parameters": "(String jarName)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteFileFromStorage(String jarName)", "full_signature": "public boolean deleteFileFromStorage(String jarName)", "class_method_signature": "StreamCatalogService.deleteFileFromStorage(String jarName)", "testcase": false, "constructor": false}, {"identifier": "removeCustomProcessorInfoAsBundle", "parameters": "(String name)", "modifiers": "public", "return": "CustomProcessorInfo", "signature": "CustomProcessorInfo removeCustomProcessorInfoAsBundle(String name)", "full_signature": "public CustomProcessorInfo removeCustomProcessorInfoAsBundle(String name)", "class_method_signature": "StreamCatalogService.removeCustomProcessorInfoAsBundle(String name)", "testcase": false, "constructor": false}, {"identifier": "getTopologyEditorToolbar", "parameters": "(long userId)", "modifiers": "public", "return": "Optional<TopologyEditorToolbar>", "signature": "Optional<TopologyEditorToolbar> getTopologyEditorToolbar(long userId)", "full_signature": "public Optional<TopologyEditorToolbar> getTopologyEditorToolbar(long userId)", "class_method_signature": "StreamCatalogService.getTopologyEditorToolbar(long userId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyEditorToolbar", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyEditorToolbar>", "signature": "Collection<TopologyEditorToolbar> listTopologyEditorToolbar(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyEditorToolbar> listTopologyEditorToolbar(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyEditorToolbar(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEditorToolbar", "parameters": "(TopologyEditorToolbar toolbar)", "modifiers": "public", "return": "TopologyEditorToolbar", "signature": "TopologyEditorToolbar addTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "full_signature": "public TopologyEditorToolbar addTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "class_method_signature": "StreamCatalogService.addTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyEditorToolbar", "parameters": "(TopologyEditorToolbar toolbar)", "modifiers": "public", "return": "TopologyEditorToolbar", "signature": "TopologyEditorToolbar addOrUpdateTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "full_signature": "public TopologyEditorToolbar addOrUpdateTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyEditorToolbar(TopologyEditorToolbar toolbar)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEditorToolbar", "parameters": "(long userId)", "modifiers": "public", "return": "Optional<TopologyEditorToolbar>", "signature": "Optional<TopologyEditorToolbar> removeTopologyEditorToolbar(long userId)", "full_signature": "public Optional<TopologyEditorToolbar> removeTopologyEditorToolbar(long userId)", "class_method_signature": "StreamCatalogService.removeTopologyEditorToolbar(long userId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyEditorMetadata", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyEditorMetadata>", "signature": "Collection<TopologyEditorMetadata> listTopologyEditorMetadata()", "full_signature": "public Collection<TopologyEditorMetadata> listTopologyEditorMetadata()", "class_method_signature": "StreamCatalogService.listTopologyEditorMetadata()", "testcase": false, "constructor": false}, {"identifier": "listTopologyEditorMetadata", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyEditorMetadata>", "signature": "Collection<TopologyEditorMetadata> listTopologyEditorMetadata(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyEditorMetadata> listTopologyEditorMetadata(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyEditorMetadata(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getTopologyEditorMetadata", "parameters": "(Long topologyId)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata getTopologyEditorMetadata(Long topologyId)", "full_signature": "public TopologyEditorMetadata getTopologyEditorMetadata(Long topologyId)", "class_method_signature": "StreamCatalogService.getTopologyEditorMetadata(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyEditorMetadata", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata getTopologyEditorMetadata(Long topologyId, Long versionId)", "full_signature": "public TopologyEditorMetadata getTopologyEditorMetadata(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopologyEditorMetadata(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEditorMetadata", "parameters": "(Long topologyId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata addTopologyEditorMetadata(Long topologyId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "full_signature": "public TopologyEditorMetadata addTopologyEditorMetadata(Long topologyId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "class_method_signature": "StreamCatalogService.addTopologyEditorMetadata(Long topologyId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEditorMetadata", "parameters": "(Long topologyId,\n                                                            Long versionId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata addTopologyEditorMetadata(Long topologyId,\n                                                            Long versionId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "full_signature": "public TopologyEditorMetadata addTopologyEditorMetadata(Long topologyId,\n                                                            Long versionId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "class_method_signature": "StreamCatalogService.addTopologyEditorMetadata(Long topologyId,\n                                                            Long versionId,\n                                                            TopologyEditorMetadata topologyEditorMetadata)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyEditorMetadata", "parameters": "(Long topologyId, TopologyEditorMetadata topologyEditorMetadata)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata addOrUpdateTopologyEditorMetadata(Long topologyId, TopologyEditorMetadata topologyEditorMetadata)", "full_signature": "public TopologyEditorMetadata addOrUpdateTopologyEditorMetadata(Long topologyId, TopologyEditorMetadata topologyEditorMetadata)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyEditorMetadata(Long topologyId, TopologyEditorMetadata topologyEditorMetadata)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEditorMetadata", "parameters": "(Long topologyId)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata removeTopologyEditorMetadata(Long topologyId)", "full_signature": "public TopologyEditorMetadata removeTopologyEditorMetadata(Long topologyId)", "class_method_signature": "StreamCatalogService.removeTopologyEditorMetadata(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEditorMetadata", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "TopologyEditorMetadata", "signature": "TopologyEditorMetadata removeTopologyEditorMetadata(Long topologyId, Long versionId)", "full_signature": "public TopologyEditorMetadata removeTopologyEditorMetadata(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.removeTopologyEditorMetadata(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "getTopologySource", "parameters": "(Long topologyId, Long sourceId)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource getTopologySource(Long topologyId, Long sourceId)", "full_signature": "public TopologySource getTopologySource(Long topologyId, Long sourceId)", "class_method_signature": "StreamCatalogService.getTopologySource(Long topologyId, Long sourceId)", "testcase": false, "constructor": false}, {"identifier": "getTopologySource", "parameters": "(Long topologyId, Long sourceId, Long versionId)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource getTopologySource(Long topologyId, Long sourceId, Long versionId)", "full_signature": "public TopologySource getTopologySource(Long topologyId, Long sourceId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopologySource(Long topologyId, Long sourceId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "getNextTopologyComponentId", "parameters": "()", "modifiers": "private", "return": "Long", "signature": "Long getNextTopologyComponentId()", "full_signature": "private Long getNextTopologyComponentId()", "class_method_signature": "StreamCatalogService.getNextTopologyComponentId()", "testcase": false, "constructor": false}, {"identifier": "validateTopology", "parameters": "(Topology topology)", "modifiers": "private", "return": "void", "signature": "void validateTopology(Topology topology)", "full_signature": "private void validateTopology(Topology topology)", "class_method_signature": "StreamCatalogService.validateTopology(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "validateTopologySource", "parameters": "(TopologySource topologySource)", "modifiers": "private", "return": "void", "signature": "void validateTopologySource(TopologySource topologySource)", "full_signature": "private void validateTopologySource(TopologySource topologySource)", "class_method_signature": "StreamCatalogService.validateTopologySource(TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "validateTopologySink", "parameters": "(TopologySink topologySink)", "modifiers": "private", "return": "void", "signature": "void validateTopologySink(TopologySink topologySink)", "full_signature": "private void validateTopologySink(TopologySink topologySink)", "class_method_signature": "StreamCatalogService.validateTopologySink(TopologySink topologySink)", "testcase": false, "constructor": false}, {"identifier": "validateTopologyProcessor", "parameters": "(TopologyProcessor topologyProcessor)", "modifiers": "private", "return": "void", "signature": "void validateTopologyProcessor(TopologyProcessor topologyProcessor)", "full_signature": "private void validateTopologyProcessor(TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.validateTopologyProcessor(TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "addTopologySource", "parameters": "(Long topologyId, TopologySource topologySource)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource addTopologySource(Long topologyId, TopologySource topologySource)", "full_signature": "public TopologySource addTopologySource(Long topologyId, TopologySource topologySource)", "class_method_signature": "StreamCatalogService.addTopologySource(Long topologyId, TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "addTopologySource", "parameters": "(Long topologyId,\n                                            Long versionId,\n                                            TopologySource topologySource)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource addTopologySource(Long topologyId,\n                                            Long versionId,\n                                            TopologySource topologySource)", "full_signature": "public TopologySource addTopologySource(Long topologyId,\n                                            Long versionId,\n                                            TopologySource topologySource)", "class_method_signature": "StreamCatalogService.addTopologySource(Long topologyId,\n                                            Long versionId,\n                                            TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "addTopologyOutputComponent", "parameters": "(TopologyOutputComponent outputComponent)", "modifiers": "private", "return": "List<TopologyStream>", "signature": "List<TopologyStream> addTopologyOutputComponent(TopologyOutputComponent outputComponent)", "full_signature": "private List<TopologyStream> addTopologyOutputComponent(TopologyOutputComponent outputComponent)", "class_method_signature": "StreamCatalogService.addTopologyOutputComponent(TopologyOutputComponent outputComponent)", "testcase": false, "constructor": false}, {"identifier": "getOutputStreams", "parameters": "(Long topologyId, Long versionId, List<Long> outputStreamIds)", "modifiers": "private", "return": "List<TopologyStream>", "signature": "List<TopologyStream> getOutputStreams(Long topologyId, Long versionId, List<Long> outputStreamIds)", "full_signature": "private List<TopologyStream> getOutputStreams(Long topologyId, Long versionId, List<Long> outputStreamIds)", "class_method_signature": "StreamCatalogService.getOutputStreams(Long topologyId, Long versionId, List<Long> outputStreamIds)", "testcase": false, "constructor": false}, {"identifier": "getComponentsToReconfigure", "parameters": "(Topology topology)", "modifiers": "public", "return": "Map<String, Set<Long>>", "signature": "Map<String, Set<Long>> getComponentsToReconfigure(Topology topology)", "full_signature": "public Map<String, Set<Long>> getComponentsToReconfigure(Topology topology)", "class_method_signature": "StreamCatalogService.getComponentsToReconfigure(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologySource", "parameters": "(Long topologyId, Long sourceId, TopologySource topologySource)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource addOrUpdateTopologySource(Long topologyId, Long sourceId, TopologySource topologySource)", "full_signature": "public TopologySource addOrUpdateTopologySource(Long topologyId, Long sourceId, TopologySource topologySource)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologySource(Long topologyId, Long sourceId, TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "updateOutputStreams", "parameters": "(TopologyOutputComponent outputComponent)", "modifiers": "private", "return": "List<Long>", "signature": "List<Long> updateOutputStreams(TopologyOutputComponent outputComponent)", "full_signature": "private List<Long> updateOutputStreams(TopologyOutputComponent outputComponent)", "class_method_signature": "StreamCatalogService.updateOutputStreams(TopologyOutputComponent outputComponent)", "testcase": false, "constructor": false}, {"identifier": "removeTopologySource", "parameters": "(Long topologyId, Long sourceId, boolean removeEdges)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource removeTopologySource(Long topologyId, Long sourceId, boolean removeEdges)", "full_signature": "public TopologySource removeTopologySource(Long topologyId, Long sourceId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologySource(Long topologyId, Long sourceId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "removeTopologySource", "parameters": "(Long topologyId, Long sourceId, Long versionId, boolean removeEdges)", "modifiers": "public", "return": "TopologySource", "signature": "TopologySource removeTopologySource(Long topologyId, Long sourceId, Long versionId, boolean removeEdges)", "full_signature": "public TopologySource removeTopologySource(Long topologyId, Long sourceId, Long versionId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologySource(Long topologyId, Long sourceId, Long versionId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "removeAllEdges", "parameters": "(TopologyComponent c)", "modifiers": "private", "return": "void", "signature": "void removeAllEdges(TopologyComponent c)", "full_signature": "private void removeAllEdges(TopologyComponent c)", "class_method_signature": "StreamCatalogService.removeAllEdges(TopologyComponent c)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEdge", "parameters": "(List<QueryParam> queryParams)", "modifiers": "private", "return": "void", "signature": "void removeTopologyEdge(List<QueryParam> queryParams)", "full_signature": "private void removeTopologyEdge(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.removeTopologyEdge(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "removeAllTopologyTestSources", "parameters": "(TopologySource topologySource)", "modifiers": "private", "return": "void", "signature": "void removeAllTopologyTestSources(TopologySource topologySource)", "full_signature": "private void removeAllTopologyTestSources(TopologySource topologySource)", "class_method_signature": "StreamCatalogService.removeAllTopologyTestSources(TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "listTopologySources", "parameters": "()", "modifiers": "public", "return": "Collection<TopologySource>", "signature": "Collection<TopologySource> listTopologySources()", "full_signature": "public Collection<TopologySource> listTopologySources()", "class_method_signature": "StreamCatalogService.listTopologySources()", "testcase": false, "constructor": false}, {"identifier": "listTopologySources", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologySource>", "signature": "Collection<TopologySource> listTopologySources(List<QueryParam> params)", "full_signature": "public Collection<TopologySource> listTopologySources(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologySources(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "addOutputStreams", "parameters": "(Long topologyId, Long versionId, List<TopologyStream> streams)", "modifiers": "private", "return": "List<TopologyStream>", "signature": "List<TopologyStream> addOutputStreams(Long topologyId, Long versionId, List<TopologyStream> streams)", "full_signature": "private List<TopologyStream> addOutputStreams(Long topologyId, Long versionId, List<TopologyStream> streams)", "class_method_signature": "StreamCatalogService.addOutputStreams(Long topologyId, Long versionId, List<TopologyStream> streams)", "testcase": false, "constructor": false}, {"identifier": "addSourceStreamMapping", "parameters": "(TopologySource topologySource, List<Long> streamIds)", "modifiers": "private", "return": "void", "signature": "void addSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "full_signature": "private void addSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "class_method_signature": "StreamCatalogService.addSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "testcase": false, "constructor": false}, {"identifier": "removeSourceStreamMapping", "parameters": "(TopologySource topologySource)", "modifiers": "private", "return": "void", "signature": "void removeSourceStreamMapping(TopologySource topologySource)", "full_signature": "private void removeSourceStreamMapping(TopologySource topologySource)", "class_method_signature": "StreamCatalogService.removeSourceStreamMapping(TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "removeSourceStreamMapping", "parameters": "(TopologySource topologySource, List<Long> streamIds)", "modifiers": "private", "return": "void", "signature": "void removeSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "full_signature": "private void removeSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "class_method_signature": "StreamCatalogService.removeSourceStreamMapping(TopologySource topologySource, List<Long> streamIds)", "testcase": false, "constructor": false}, {"identifier": "getOutputStreamIds", "parameters": "(TopologySource topologySource)", "modifiers": "private", "return": "List<Long>", "signature": "List<Long> getOutputStreamIds(TopologySource topologySource)", "full_signature": "private List<Long> getOutputStreamIds(TopologySource topologySource)", "class_method_signature": "StreamCatalogService.getOutputStreamIds(TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "listTopologySourceStreamMapping", "parameters": "(List<QueryParam> params)", "modifiers": "private", "return": "Collection<TopologySourceStreamMap>", "signature": "Collection<TopologySourceStreamMap> listTopologySourceStreamMapping(List<QueryParam> params)", "full_signature": "private Collection<TopologySourceStreamMap> listTopologySourceStreamMapping(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologySourceStreamMapping(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "fillProcessorStreams", "parameters": "(TopologyProcessor processor)", "modifiers": "private", "return": "void", "signature": "void fillProcessorStreams(TopologyProcessor processor)", "full_signature": "private void fillProcessorStreams(TopologyProcessor processor)", "class_method_signature": "StreamCatalogService.fillProcessorStreams(TopologyProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "fillProcessorStreams", "parameters": "(Collection<TopologyProcessor> processors)", "modifiers": "private", "return": "Collection<TopologyProcessor>", "signature": "Collection<TopologyProcessor> fillProcessorStreams(Collection<TopologyProcessor> processors)", "full_signature": "private Collection<TopologyProcessor> fillProcessorStreams(Collection<TopologyProcessor> processors)", "class_method_signature": "StreamCatalogService.fillProcessorStreams(Collection<TopologyProcessor> processors)", "testcase": false, "constructor": false}, {"identifier": "getOutputStreams", "parameters": "(TopologyProcessor topologyProcessor)", "modifiers": "private", "return": "List<TopologyStream>", "signature": "List<TopologyStream> getOutputStreams(TopologyProcessor topologyProcessor)", "full_signature": "private List<TopologyStream> getOutputStreams(TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.getOutputStreams(TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "fillSourceStreams", "parameters": "(TopologySource source)", "modifiers": "private", "return": "void", "signature": "void fillSourceStreams(TopologySource source)", "full_signature": "private void fillSourceStreams(TopologySource source)", "class_method_signature": "StreamCatalogService.fillSourceStreams(TopologySource source)", "testcase": false, "constructor": false}, {"identifier": "fillSourceStreams", "parameters": "(Collection<TopologySource> sources)", "modifiers": "private", "return": "Collection<TopologySource>", "signature": "Collection<TopologySource> fillSourceStreams(Collection<TopologySource> sources)", "full_signature": "private Collection<TopologySource> fillSourceStreams(Collection<TopologySource> sources)", "class_method_signature": "StreamCatalogService.fillSourceStreams(Collection<TopologySource> sources)", "testcase": false, "constructor": false}, {"identifier": "getOutputStreams", "parameters": "(TopologySource topologySource)", "modifiers": "private", "return": "List<TopologyStream>", "signature": "List<TopologyStream> getOutputStreams(TopologySource topologySource)", "full_signature": "private List<TopologyStream> getOutputStreams(TopologySource topologySource)", "class_method_signature": "StreamCatalogService.getOutputStreams(TopologySource topologySource)", "testcase": false, "constructor": false}, {"identifier": "getTopologySink", "parameters": "(Long topologyId, Long sinkId)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink getTopologySink(Long topologyId, Long sinkId)", "full_signature": "public TopologySink getTopologySink(Long topologyId, Long sinkId)", "class_method_signature": "StreamCatalogService.getTopologySink(Long topologyId, Long sinkId)", "testcase": false, "constructor": false}, {"identifier": "getTopologySink", "parameters": "(Long topologyId, Long sinkId, Long versionId)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink getTopologySink(Long topologyId, Long sinkId, Long versionId)", "full_signature": "public TopologySink getTopologySink(Long topologyId, Long sinkId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopologySink(Long topologyId, Long sinkId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopologySink", "parameters": "(Long topologyId, TopologySink topologySink)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink addTopologySink(Long topologyId, TopologySink topologySink)", "full_signature": "public TopologySink addTopologySink(Long topologyId, TopologySink topologySink)", "class_method_signature": "StreamCatalogService.addTopologySink(Long topologyId, TopologySink topologySink)", "testcase": false, "constructor": false}, {"identifier": "addTopologySink", "parameters": "(Long topologyId,\n                                        Long versionId,\n                                        TopologySink topologySink)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink addTopologySink(Long topologyId,\n                                        Long versionId,\n                                        TopologySink topologySink)", "full_signature": "public TopologySink addTopologySink(Long topologyId,\n                                        Long versionId,\n                                        TopologySink topologySink)", "class_method_signature": "StreamCatalogService.addTopologySink(Long topologyId,\n                                        Long versionId,\n                                        TopologySink topologySink)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologySink", "parameters": "(Long topologyId, Long id, TopologySink topologySink)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink addOrUpdateTopologySink(Long topologyId, Long id, TopologySink topologySink)", "full_signature": "public TopologySink addOrUpdateTopologySink(Long topologyId, Long id, TopologySink topologySink)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologySink(Long topologyId, Long id, TopologySink topologySink)", "testcase": false, "constructor": false}, {"identifier": "removeTopologySink", "parameters": "(Long topologyId, Long sinkId, boolean removeEdges)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink removeTopologySink(Long topologyId, Long sinkId, boolean removeEdges)", "full_signature": "public TopologySink removeTopologySink(Long topologyId, Long sinkId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologySink(Long topologyId, Long sinkId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "removeTopologySink", "parameters": "(Long topologyId, Long sinkId, Long versionId, boolean removeEdges)", "modifiers": "public", "return": "TopologySink", "signature": "TopologySink removeTopologySink(Long topologyId, Long sinkId, Long versionId, boolean removeEdges)", "full_signature": "public TopologySink removeTopologySink(Long topologyId, Long sinkId, Long versionId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologySink(Long topologyId, Long sinkId, Long versionId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "removeAllTopologyTestSinks", "parameters": "(TopologySink topologySink)", "modifiers": "private", "return": "void", "signature": "void removeAllTopologyTestSinks(TopologySink topologySink)", "full_signature": "private void removeAllTopologyTestSinks(TopologySink topologySink)", "class_method_signature": "StreamCatalogService.removeAllTopologyTestSinks(TopologySink topologySink)", "testcase": false, "constructor": false}, {"identifier": "listTopologySinks", "parameters": "()", "modifiers": "public", "return": "Collection<TopologySink>", "signature": "Collection<TopologySink> listTopologySinks()", "full_signature": "public Collection<TopologySink> listTopologySinks()", "class_method_signature": "StreamCatalogService.listTopologySinks()", "testcase": false, "constructor": false}, {"identifier": "listTopologySinks", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologySink>", "signature": "Collection<TopologySink> listTopologySinks(List<QueryParam> params)", "full_signature": "public Collection<TopologySink> listTopologySinks(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologySinks(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "getTopologyProcessor", "parameters": "(Long topologyId, Long processorId)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor getTopologyProcessor(Long topologyId, Long processorId)", "full_signature": "public TopologyProcessor getTopologyProcessor(Long topologyId, Long processorId)", "class_method_signature": "StreamCatalogService.getTopologyProcessor(Long topologyId, Long processorId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyProcessor", "parameters": "(Long topologyId, Long processorId, Long versionId)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor getTopologyProcessor(Long topologyId, Long processorId, Long versionId)", "full_signature": "public TopologyProcessor getTopologyProcessor(Long topologyId, Long processorId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopologyProcessor(Long topologyId, Long processorId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyProcessor", "parameters": "(Long topologyId, TopologyProcessor topologyProcessor)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor addTopologyProcessor(Long topologyId, TopologyProcessor topologyProcessor)", "full_signature": "public TopologyProcessor addTopologyProcessor(Long topologyId, TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.addTopologyProcessor(Long topologyId, TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "addTopologyProcessor", "parameters": "(Long topologyId,\n                                                  Long versionId,\n                                                  TopologyProcessor topologyProcessor)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor addTopologyProcessor(Long topologyId,\n                                                  Long versionId,\n                                                  TopologyProcessor topologyProcessor)", "full_signature": "public TopologyProcessor addTopologyProcessor(Long topologyId,\n                                                  Long versionId,\n                                                  TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.addTopologyProcessor(Long topologyId,\n                                                  Long versionId,\n                                                  TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyProcessor", "parameters": "(Long topologyId, Long id, TopologyProcessor topologyProcessor)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor addOrUpdateTopologyProcessor(Long topologyId, Long id, TopologyProcessor topologyProcessor)", "full_signature": "public TopologyProcessor addOrUpdateTopologyProcessor(Long topologyId, Long id, TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyProcessor(Long topologyId, Long id, TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyProcessor", "parameters": "(Long topologyId, Long processorId, boolean removeEdges)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor removeTopologyProcessor(Long topologyId, Long processorId, boolean removeEdges)", "full_signature": "public TopologyProcessor removeTopologyProcessor(Long topologyId, Long processorId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologyProcessor(Long topologyId, Long processorId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyProcessor", "parameters": "(Long topologyId, Long processorId, Long versionId, boolean removeEdges)", "modifiers": "public", "return": "TopologyProcessor", "signature": "TopologyProcessor removeTopologyProcessor(Long topologyId, Long processorId, Long versionId, boolean removeEdges)", "full_signature": "public TopologyProcessor removeTopologyProcessor(Long topologyId, Long processorId, Long versionId, boolean removeEdges)", "class_method_signature": "StreamCatalogService.removeTopologyProcessor(Long topologyId, Long processorId, Long versionId, boolean removeEdges)", "testcase": false, "constructor": false}, {"identifier": "listTopologyProcessors", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyProcessor>", "signature": "Collection<TopologyProcessor> listTopologyProcessors()", "full_signature": "public Collection<TopologyProcessor> listTopologyProcessors()", "class_method_signature": "StreamCatalogService.listTopologyProcessors()", "testcase": false, "constructor": false}, {"identifier": "listTopologyProcessors", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyProcessor>", "signature": "Collection<TopologyProcessor> listTopologyProcessors(List<QueryParam> params)", "full_signature": "public Collection<TopologyProcessor> listTopologyProcessors(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologyProcessors(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "createProcessorStreamMapping", "parameters": "(TopologyProcessor topologyProcessor, List<TopologyStream> streams)", "modifiers": "private", "return": "void", "signature": "void createProcessorStreamMapping(TopologyProcessor topologyProcessor, List<TopologyStream> streams)", "full_signature": "private void createProcessorStreamMapping(TopologyProcessor topologyProcessor, List<TopologyStream> streams)", "class_method_signature": "StreamCatalogService.createProcessorStreamMapping(TopologyProcessor topologyProcessor, List<TopologyStream> streams)", "testcase": false, "constructor": false}, {"identifier": "addProcessorStreamMapping", "parameters": "(TopologyProcessor topologyProcessor, List<Long> streamIds)", "modifiers": "private", "return": "void", "signature": "void addProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "full_signature": "private void addProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "class_method_signature": "StreamCatalogService.addProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "testcase": false, "constructor": false}, {"identifier": "removeProcessorStreamMapping", "parameters": "(TopologyProcessor topologyProcessor)", "modifiers": "private", "return": "void", "signature": "void removeProcessorStreamMapping(TopologyProcessor topologyProcessor)", "full_signature": "private void removeProcessorStreamMapping(TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.removeProcessorStreamMapping(TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "removeProcessorStreamMapping", "parameters": "(TopologyProcessor topologyProcessor, List<Long> streamIds)", "modifiers": "private", "return": "void", "signature": "void removeProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "full_signature": "private void removeProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "class_method_signature": "StreamCatalogService.removeProcessorStreamMapping(TopologyProcessor topologyProcessor, List<Long> streamIds)", "testcase": false, "constructor": false}, {"identifier": "getOutputStreamIds", "parameters": "(TopologyProcessor topologyProcessor)", "modifiers": "private", "return": "List<Long>", "signature": "List<Long> getOutputStreamIds(TopologyProcessor topologyProcessor)", "full_signature": "private List<Long> getOutputStreamIds(TopologyProcessor topologyProcessor)", "class_method_signature": "StreamCatalogService.getOutputStreamIds(TopologyProcessor topologyProcessor)", "testcase": false, "constructor": false}, {"identifier": "listTopologyProcessorStreamMapping", "parameters": "(List<QueryParam> params)", "modifiers": "private", "return": "Collection<TopologyProcessorStreamMap>", "signature": "Collection<TopologyProcessorStreamMap> listTopologyProcessorStreamMapping(List<QueryParam> params)", "full_signature": "private Collection<TopologyProcessorStreamMap> listTopologyProcessorStreamMapping(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologyProcessorStreamMapping(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "getTopologyEdge", "parameters": "(Long topologyId, Long edgeId)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge getTopologyEdge(Long topologyId, Long edgeId)", "full_signature": "public TopologyEdge getTopologyEdge(Long topologyId, Long edgeId)", "class_method_signature": "StreamCatalogService.getTopologyEdge(Long topologyId, Long edgeId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyEdge", "parameters": "(Long topologyId, Long edgeId, Long versionId)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge getTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "full_signature": "public TopologyEdge getTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "class_method_signature": "StreamCatalogService.getTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEdge", "parameters": "(Long topologyId, TopologyEdge topologyEdge, boolean reconfigure)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge addTopologyEdge(Long topologyId, TopologyEdge topologyEdge, boolean reconfigure)", "full_signature": "public TopologyEdge addTopologyEdge(Long topologyId, TopologyEdge topologyEdge, boolean reconfigure)", "class_method_signature": "StreamCatalogService.addTopologyEdge(Long topologyId, TopologyEdge topologyEdge, boolean reconfigure)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEdge", "parameters": "(Long topologyId, TopologyEdge topologyEdge)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge addTopologyEdge(Long topologyId, TopologyEdge topologyEdge)", "full_signature": "public TopologyEdge addTopologyEdge(Long topologyId, TopologyEdge topologyEdge)", "class_method_signature": "StreamCatalogService.addTopologyEdge(Long topologyId, TopologyEdge topologyEdge)", "testcase": false, "constructor": false}, {"identifier": "addTopologyEdge", "parameters": "(Long topologyId,\n                                        Long versionId,\n                                        TopologyEdge topologyEdge)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge addTopologyEdge(Long topologyId,\n                                        Long versionId,\n                                        TopologyEdge topologyEdge)", "full_signature": "public TopologyEdge addTopologyEdge(Long topologyId,\n                                        Long versionId,\n                                        TopologyEdge topologyEdge)", "class_method_signature": "StreamCatalogService.addTopologyEdge(Long topologyId,\n                                        Long versionId,\n                                        TopologyEdge topologyEdge)", "testcase": false, "constructor": false}, {"identifier": "getFrom", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "TopologyOutputComponent", "signature": "TopologyOutputComponent getFrom(TopologyEdge edge)", "full_signature": "private TopologyOutputComponent getFrom(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.getFrom(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "getTo", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "TopologyComponent", "signature": "TopologyComponent getTo(TopologyEdge edge)", "full_signature": "private TopologyComponent getTo(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.getTo(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "getEdgesFrom", "parameters": "(TopologyOutputComponent component)", "modifiers": "private", "return": "Set<TopologyEdge>", "signature": "Set<TopologyEdge> getEdgesFrom(TopologyOutputComponent component)", "full_signature": "private Set<TopologyEdge> getEdgesFrom(TopologyOutputComponent component)", "class_method_signature": "StreamCatalogService.getEdgesFrom(TopologyOutputComponent component)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureTarget", "parameters": "(TopologyStream stream)", "modifiers": "private", "return": "void", "signature": "void setReconfigureTarget(TopologyStream stream)", "full_signature": "private void setReconfigureTarget(TopologyStream stream)", "class_method_signature": "StreamCatalogService.setReconfigureTarget(TopologyStream stream)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureRules", "parameters": "(List<TopologyProcessor> processors, List<TopologyStream> affectedStreams)", "modifiers": "private", "return": "void", "signature": "void setReconfigureRules(List<TopologyProcessor> processors, List<TopologyStream> affectedStreams)", "full_signature": "private void setReconfigureRules(List<TopologyProcessor> processors, List<TopologyStream> affectedStreams)", "class_method_signature": "StreamCatalogService.setReconfigureRules(List<TopologyProcessor> processors, List<TopologyStream> affectedStreams)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureOnAllComponentsInTopology", "parameters": "(Topology topology)", "modifiers": "public", "return": "void", "signature": "void setReconfigureOnAllComponentsInTopology(Topology topology)", "full_signature": "public void setReconfigureOnAllComponentsInTopology(Topology topology)", "class_method_signature": "StreamCatalogService.setReconfigureOnAllComponentsInTopology(Topology topology)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureOnTopologyComponent", "parameters": "(TopologyComponent component)", "modifiers": "private", "return": "void", "signature": "void setReconfigureOnTopologyComponent(TopologyComponent component)", "full_signature": "private void setReconfigureOnTopologyComponent(TopologyComponent component)", "class_method_signature": "StreamCatalogService.setReconfigureOnTopologyComponent(TopologyComponent component)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureTarget", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "void", "signature": "void setReconfigureTarget(TopologyEdge edge)", "full_signature": "private void setReconfigureTarget(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.setReconfigureTarget(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "setReconfigureTarget", "parameters": "(TopologyEdge edge, TopologyStream stream)", "modifiers": "private", "return": "void", "signature": "void setReconfigureTarget(TopologyEdge edge, TopologyStream stream)", "full_signature": "private void setReconfigureTarget(TopologyEdge edge, TopologyStream stream)", "class_method_signature": "StreamCatalogService.setReconfigureTarget(TopologyEdge edge, TopologyStream stream)", "testcase": false, "constructor": false}, {"identifier": "validateEdge", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "void", "signature": "void validateEdge(TopologyEdge edge)", "full_signature": "private void validateEdge(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.validateEdge(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "getFieldPatterns", "parameters": "(List<Schema.Field> fields)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getFieldPatterns(List<Schema.Field> fields)", "full_signature": "private Set<String> getFieldPatterns(List<Schema.Field> fields)", "class_method_signature": "StreamCatalogService.getFieldPatterns(List<Schema.Field> fields)", "testcase": false, "constructor": false}, {"identifier": "checkDuplicateEdge", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "void", "signature": "void checkDuplicateEdge(TopologyEdge edge)", "full_signature": "private void checkDuplicateEdge(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.checkDuplicateEdge(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyEdge", "parameters": "(Long topologyId, Long id, TopologyEdge topologyEdge)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge addOrUpdateTopologyEdge(Long topologyId, Long id, TopologyEdge topologyEdge)", "full_signature": "public TopologyEdge addOrUpdateTopologyEdge(Long topologyId, Long id, TopologyEdge topologyEdge)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyEdge(Long topologyId, Long id, TopologyEdge topologyEdge)", "testcase": false, "constructor": false}, {"identifier": "getStreamIds", "parameters": "(TopologyEdge edge)", "modifiers": "private", "return": "Set<Long>", "signature": "Set<Long> getStreamIds(TopologyEdge edge)", "full_signature": "private Set<Long> getStreamIds(TopologyEdge edge)", "class_method_signature": "StreamCatalogService.getStreamIds(TopologyEdge edge)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEdge", "parameters": "(Long topologyId, Long edgeId)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge removeTopologyEdge(Long topologyId, Long edgeId)", "full_signature": "public TopologyEdge removeTopologyEdge(Long topologyId, Long edgeId)", "class_method_signature": "StreamCatalogService.removeTopologyEdge(Long topologyId, Long edgeId)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyEdge", "parameters": "(Long topologyId, Long edgeId, Long versionId)", "modifiers": "public", "return": "TopologyEdge", "signature": "TopologyEdge removeTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "full_signature": "public TopologyEdge removeTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "class_method_signature": "StreamCatalogService.removeTopologyEdge(Long topologyId, Long edgeId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyEdges", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyEdge>", "signature": "Collection<TopologyEdge> listTopologyEdges()", "full_signature": "public Collection<TopologyEdge> listTopologyEdges()", "class_method_signature": "StreamCatalogService.listTopologyEdges()", "testcase": false, "constructor": false}, {"identifier": "listTopologyEdges", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyEdge>", "signature": "Collection<TopologyEdge> listTopologyEdges(List<QueryParam> params)", "full_signature": "public Collection<TopologyEdge> listTopologyEdges(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listTopologyEdges(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "getStreamInfo", "parameters": "(Long topologyId, Long streamId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream getStreamInfo(Long topologyId, Long streamId)", "full_signature": "public TopologyStream getStreamInfo(Long topologyId, Long streamId)", "class_method_signature": "StreamCatalogService.getStreamInfo(Long topologyId, Long streamId)", "testcase": false, "constructor": false}, {"identifier": "getStreamInfo", "parameters": "(Long topologyId, Long streamId, Long versionId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream getStreamInfo(Long topologyId, Long streamId, Long versionId)", "full_signature": "public TopologyStream getStreamInfo(Long topologyId, Long streamId, Long versionId)", "class_method_signature": "StreamCatalogService.getStreamInfo(Long topologyId, Long streamId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "getStreamInfoByName", "parameters": "(Long topologyId, String streamId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream getStreamInfoByName(Long topologyId, String streamId)", "full_signature": "public TopologyStream getStreamInfoByName(Long topologyId, String streamId)", "class_method_signature": "StreamCatalogService.getStreamInfoByName(Long topologyId, String streamId)", "testcase": false, "constructor": false}, {"identifier": "getStreamInfoByName", "parameters": "(Long topologyId,\n                                              String streamId,\n                                              Long versionId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream getStreamInfoByName(Long topologyId,\n                                              String streamId,\n                                              Long versionId)", "full_signature": "public TopologyStream getStreamInfoByName(Long topologyId,\n                                              String streamId,\n                                              Long versionId)", "class_method_signature": "StreamCatalogService.getStreamInfoByName(Long topologyId,\n                                              String streamId,\n                                              Long versionId)", "testcase": false, "constructor": false}, {"identifier": "validateStreamInfo", "parameters": "(TopologyStream topologyStream)", "modifiers": "private", "return": "void", "signature": "void validateStreamInfo(TopologyStream topologyStream)", "full_signature": "private void validateStreamInfo(TopologyStream topologyStream)", "class_method_signature": "StreamCatalogService.validateStreamInfo(TopologyStream topologyStream)", "testcase": false, "constructor": false}, {"identifier": "addStreamInfo", "parameters": "(Long topologyId, TopologyStream topologyStream)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream addStreamInfo(Long topologyId, TopologyStream topologyStream)", "full_signature": "public TopologyStream addStreamInfo(Long topologyId, TopologyStream topologyStream)", "class_method_signature": "StreamCatalogService.addStreamInfo(Long topologyId, TopologyStream topologyStream)", "testcase": false, "constructor": false}, {"identifier": "addStreamInfo", "parameters": "(Long topologyId,\n                                        Long versionId,\n                                        TopologyStream topologyStream)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream addStreamInfo(Long topologyId,\n                                        Long versionId,\n                                        TopologyStream topologyStream)", "full_signature": "public TopologyStream addStreamInfo(Long topologyId,\n                                        Long versionId,\n                                        TopologyStream topologyStream)", "class_method_signature": "StreamCatalogService.addStreamInfo(Long topologyId,\n                                        Long versionId,\n                                        TopologyStream topologyStream)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateStreamInfo", "parameters": "(Long topologyId, Long id, TopologyStream stream)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream addOrUpdateStreamInfo(Long topologyId, Long id, TopologyStream stream)", "full_signature": "public TopologyStream addOrUpdateStreamInfo(Long topologyId, Long id, TopologyStream stream)", "class_method_signature": "StreamCatalogService.addOrUpdateStreamInfo(Long topologyId, Long id, TopologyStream stream)", "testcase": false, "constructor": false}, {"identifier": "removeStreamInfo", "parameters": "(Long topologyId, Long streamId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream removeStreamInfo(Long topologyId, Long streamId)", "full_signature": "public TopologyStream removeStreamInfo(Long topologyId, Long streamId)", "class_method_signature": "StreamCatalogService.removeStreamInfo(Long topologyId, Long streamId)", "testcase": false, "constructor": false}, {"identifier": "removeStreamInfo", "parameters": "(Long topologyId, Long streamId, Long versionId)", "modifiers": "public", "return": "TopologyStream", "signature": "TopologyStream removeStreamInfo(Long topologyId, Long streamId, Long versionId)", "full_signature": "public TopologyStream removeStreamInfo(Long topologyId, Long streamId, Long versionId)", "class_method_signature": "StreamCatalogService.removeStreamInfo(Long topologyId, Long streamId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listStreamInfos", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyStream>", "signature": "Collection<TopologyStream> listStreamInfos()", "full_signature": "public Collection<TopologyStream> listStreamInfos()", "class_method_signature": "StreamCatalogService.listStreamInfos()", "testcase": false, "constructor": false}, {"identifier": "listStreamInfos", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyStream>", "signature": "Collection<TopologyStream> listStreamInfos(List<QueryParam> params)", "full_signature": "public Collection<TopologyStream> listStreamInfos(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listStreamInfos(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "listRules", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyRule>", "signature": "Collection<TopologyRule> listRules()", "full_signature": "public Collection<TopologyRule> listRules()", "class_method_signature": "StreamCatalogService.listRules()", "testcase": false, "constructor": false}, {"identifier": "listRules", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyRule>", "signature": "Collection<TopologyRule> listRules(List<QueryParam> params)", "full_signature": "public Collection<TopologyRule> listRules(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listRules(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "addRule", "parameters": "(Long topologyId, TopologyRule topologyRule)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule addRule(Long topologyId, TopologyRule topologyRule)", "full_signature": "public TopologyRule addRule(Long topologyId, TopologyRule topologyRule)", "class_method_signature": "StreamCatalogService.addRule(Long topologyId, TopologyRule topologyRule)", "testcase": false, "constructor": false}, {"identifier": "addRule", "parameters": "(Long topologyId,\n                                Long versionId,\n                                TopologyRule topologyRule)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule addRule(Long topologyId,\n                                Long versionId,\n                                TopologyRule topologyRule)", "full_signature": "public TopologyRule addRule(Long topologyId,\n                                Long versionId,\n                                TopologyRule topologyRule)", "class_method_signature": "StreamCatalogService.addRule(Long topologyId,\n                                Long versionId,\n                                TopologyRule topologyRule)", "testcase": false, "constructor": false}, {"identifier": "getRule", "parameters": "(Long topologyId, Long ruleId)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule getRule(Long topologyId, Long ruleId)", "full_signature": "public TopologyRule getRule(Long topologyId, Long ruleId)", "class_method_signature": "StreamCatalogService.getRule(Long topologyId, Long ruleId)", "testcase": false, "constructor": false}, {"identifier": "getRule", "parameters": "(Long topologyId, Long ruleId, Long versionId)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule getRule(Long topologyId, Long ruleId, Long versionId)", "full_signature": "public TopologyRule getRule(Long topologyId, Long ruleId, Long versionId)", "class_method_signature": "StreamCatalogService.getRule(Long topologyId, Long ruleId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateRule", "parameters": "(Long topologyId, Long ruleId, TopologyRule topologyRule)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule addOrUpdateRule(Long topologyId, Long ruleId, TopologyRule topologyRule)", "full_signature": "public TopologyRule addOrUpdateRule(Long topologyId, Long ruleId, TopologyRule topologyRule)", "class_method_signature": "StreamCatalogService.addOrUpdateRule(Long topologyId, Long ruleId, TopologyRule topologyRule)", "testcase": false, "constructor": false}, {"identifier": "removeRule", "parameters": "(Long topologyId, Long ruleId)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule removeRule(Long topologyId, Long ruleId)", "full_signature": "public TopologyRule removeRule(Long topologyId, Long ruleId)", "class_method_signature": "StreamCatalogService.removeRule(Long topologyId, Long ruleId)", "testcase": false, "constructor": false}, {"identifier": "removeRule", "parameters": "(Long topologyId, Long ruleId, Long versionId)", "modifiers": "public", "return": "TopologyRule", "signature": "TopologyRule removeRule(Long topologyId, Long ruleId, Long versionId)", "full_signature": "public TopologyRule removeRule(Long topologyId, Long ruleId, Long versionId)", "class_method_signature": "StreamCatalogService.removeRule(Long topologyId, Long ruleId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listWindows", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyWindow>", "signature": "Collection<TopologyWindow> listWindows()", "full_signature": "public Collection<TopologyWindow> listWindows()", "class_method_signature": "StreamCatalogService.listWindows()", "testcase": false, "constructor": false}, {"identifier": "listWindows", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyWindow>", "signature": "Collection<TopologyWindow> listWindows(List<QueryParam> params)", "full_signature": "public Collection<TopologyWindow> listWindows(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listWindows(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "listBranchRules", "parameters": "()", "modifiers": "public", "return": "Collection<TopologyBranchRule>", "signature": "Collection<TopologyBranchRule> listBranchRules()", "full_signature": "public Collection<TopologyBranchRule> listBranchRules()", "class_method_signature": "StreamCatalogService.listBranchRules()", "testcase": false, "constructor": false}, {"identifier": "listBranchRules", "parameters": "(List<QueryParam> params)", "modifiers": "public", "return": "Collection<TopologyBranchRule>", "signature": "Collection<TopologyBranchRule> listBranchRules(List<QueryParam> params)", "full_signature": "public Collection<TopologyBranchRule> listBranchRules(List<QueryParam> params)", "class_method_signature": "StreamCatalogService.listBranchRules(List<QueryParam> params)", "testcase": false, "constructor": false}, {"identifier": "addBranchRule", "parameters": "(Long topologyId, TopologyBranchRule topologyBranchRule)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule addBranchRule(Long topologyId, TopologyBranchRule topologyBranchRule)", "full_signature": "public TopologyBranchRule addBranchRule(Long topologyId, TopologyBranchRule topologyBranchRule)", "class_method_signature": "StreamCatalogService.addBranchRule(Long topologyId, TopologyBranchRule topologyBranchRule)", "testcase": false, "constructor": false}, {"identifier": "addBranchRule", "parameters": "(Long topologyId,\n                                            Long versionId,\n                                            TopologyBranchRule topologyBranchRule)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule addBranchRule(Long topologyId,\n                                            Long versionId,\n                                            TopologyBranchRule topologyBranchRule)", "full_signature": "public TopologyBranchRule addBranchRule(Long topologyId,\n                                            Long versionId,\n                                            TopologyBranchRule topologyBranchRule)", "class_method_signature": "StreamCatalogService.addBranchRule(Long topologyId,\n                                            Long versionId,\n                                            TopologyBranchRule topologyBranchRule)", "testcase": false, "constructor": false}, {"identifier": "getBranchRule", "parameters": "(Long topologyId, Long ruleId)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule getBranchRule(Long topologyId, Long ruleId)", "full_signature": "public TopologyBranchRule getBranchRule(Long topologyId, Long ruleId)", "class_method_signature": "StreamCatalogService.getBranchRule(Long topologyId, Long ruleId)", "testcase": false, "constructor": false}, {"identifier": "getBranchRule", "parameters": "(Long topologyId, Long ruleId, Long versionId)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule getBranchRule(Long topologyId, Long ruleId, Long versionId)", "full_signature": "public TopologyBranchRule getBranchRule(Long topologyId, Long ruleId, Long versionId)", "class_method_signature": "StreamCatalogService.getBranchRule(Long topologyId, Long ruleId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateBranchRule", "parameters": "(Long topologyId, Long ruleId, TopologyBranchRule topologyBranchRule)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule addOrUpdateBranchRule(Long topologyId, Long ruleId, TopologyBranchRule topologyBranchRule)", "full_signature": "public TopologyBranchRule addOrUpdateBranchRule(Long topologyId, Long ruleId, TopologyBranchRule topologyBranchRule)", "class_method_signature": "StreamCatalogService.addOrUpdateBranchRule(Long topologyId, Long ruleId, TopologyBranchRule topologyBranchRule)", "testcase": false, "constructor": false}, {"identifier": "removeBranchRule", "parameters": "(Long topologyId, Long id)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule removeBranchRule(Long topologyId, Long id)", "full_signature": "public TopologyBranchRule removeBranchRule(Long topologyId, Long id)", "class_method_signature": "StreamCatalogService.removeBranchRule(Long topologyId, Long id)", "testcase": false, "constructor": false}, {"identifier": "removeBranchRule", "parameters": "(Long topologyId, Long id, Long versionId)", "modifiers": "public", "return": "TopologyBranchRule", "signature": "TopologyBranchRule removeBranchRule(Long topologyId, Long id, Long versionId)", "full_signature": "public TopologyBranchRule removeBranchRule(Long topologyId, Long id, Long versionId)", "class_method_signature": "StreamCatalogService.removeBranchRule(Long topologyId, Long id, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addWindow", "parameters": "(Long topologyId, TopologyWindow topologyWindow)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow addWindow(Long topologyId, TopologyWindow topologyWindow)", "full_signature": "public TopologyWindow addWindow(Long topologyId, TopologyWindow topologyWindow)", "class_method_signature": "StreamCatalogService.addWindow(Long topologyId, TopologyWindow topologyWindow)", "testcase": false, "constructor": false}, {"identifier": "addWindow", "parameters": "(Long topologyId,\n                                    Long versionId,\n                                    TopologyWindow topologyWindow)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow addWindow(Long topologyId,\n                                    Long versionId,\n                                    TopologyWindow topologyWindow)", "full_signature": "public TopologyWindow addWindow(Long topologyId,\n                                    Long versionId,\n                                    TopologyWindow topologyWindow)", "class_method_signature": "StreamCatalogService.addWindow(Long topologyId,\n                                    Long versionId,\n                                    TopologyWindow topologyWindow)", "testcase": false, "constructor": false}, {"identifier": "getWindow", "parameters": "(Long topologyId, Long windowId)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow getWindow(Long topologyId, Long windowId)", "full_signature": "public TopologyWindow getWindow(Long topologyId, Long windowId)", "class_method_signature": "StreamCatalogService.getWindow(Long topologyId, Long windowId)", "testcase": false, "constructor": false}, {"identifier": "getWindow", "parameters": "(Long topologyId, Long windowId, Long versionId)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow getWindow(Long topologyId, Long windowId, Long versionId)", "full_signature": "public TopologyWindow getWindow(Long topologyId, Long windowId, Long versionId)", "class_method_signature": "StreamCatalogService.getWindow(Long topologyId, Long windowId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateWindow", "parameters": "(Long topologyId, Long windowId, TopologyWindow topologyWindow)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow addOrUpdateWindow(Long topologyId, Long windowId, TopologyWindow topologyWindow)", "full_signature": "public TopologyWindow addOrUpdateWindow(Long topologyId, Long windowId, TopologyWindow topologyWindow)", "class_method_signature": "StreamCatalogService.addOrUpdateWindow(Long topologyId, Long windowId, TopologyWindow topologyWindow)", "testcase": false, "constructor": false}, {"identifier": "removeWindow", "parameters": "(Long topologyId, Long windowId)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow removeWindow(Long topologyId, Long windowId)", "full_signature": "public TopologyWindow removeWindow(Long topologyId, Long windowId)", "class_method_signature": "StreamCatalogService.removeWindow(Long topologyId, Long windowId)", "testcase": false, "constructor": false}, {"identifier": "removeWindow", "parameters": "(Long topologyId, Long windowId, Long versionId)", "modifiers": "public", "return": "TopologyWindow", "signature": "TopologyWindow removeWindow(Long topologyId, Long windowId, Long versionId)", "full_signature": "public TopologyWindow removeWindow(Long topologyId, Long windowId, Long versionId)", "class_method_signature": "StreamCatalogService.removeWindow(Long topologyId, Long windowId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "parseAndSerialize", "parameters": "(TopologyRule topologyRule)", "modifiers": "private", "return": "String", "signature": "String parseAndSerialize(TopologyRule topologyRule)", "full_signature": "private String parseAndSerialize(TopologyRule topologyRule)", "class_method_signature": "StreamCatalogService.parseAndSerialize(TopologyRule topologyRule)", "testcase": false, "constructor": false}, {"identifier": "parseAndSerialize", "parameters": "(TopologyBranchRule ruleInfo)", "modifiers": "private", "return": "String", "signature": "String parseAndSerialize(TopologyBranchRule ruleInfo)", "full_signature": "private String parseAndSerialize(TopologyBranchRule ruleInfo)", "class_method_signature": "StreamCatalogService.parseAndSerialize(TopologyBranchRule ruleInfo)", "testcase": false, "constructor": false}, {"identifier": "parseAndSerialize", "parameters": "(TopologyWindow topologyWindow)", "modifiers": "private", "return": "String", "signature": "String parseAndSerialize(TopologyWindow topologyWindow)", "full_signature": "private String parseAndSerialize(TopologyWindow topologyWindow)", "class_method_signature": "StreamCatalogService.parseAndSerialize(TopologyWindow topologyWindow)", "testcase": false, "constructor": false}, {"identifier": "validateProjection", "parameters": "(List<Expression> projections, List<Expression> groupByExpressions)", "modifiers": "private", "return": "void", "signature": "void validateProjection(List<Expression> projections, List<Expression> groupByExpressions)", "full_signature": "private void validateProjection(List<Expression> projections, List<Expression> groupByExpressions)", "class_method_signature": "StreamCatalogService.validateProjection(List<Expression> projections, List<Expression> groupByExpressions)", "testcase": false, "constructor": false}, {"identifier": "getSqlString", "parameters": "(List<String> streams,\n                                List<Projection> projections,\n                                String condition,\n                                List<String> groupByKeys)", "modifiers": "", "return": "String", "signature": "String getSqlString(List<String> streams,\n                                List<Projection> projections,\n                                String condition,\n                                List<String> groupByKeys)", "full_signature": " String getSqlString(List<String> streams,\n                                List<Projection> projections,\n                                String condition,\n                                List<String> groupByKeys)", "class_method_signature": "StreamCatalogService.getSqlString(List<String> streams,\n                                List<Projection> projections,\n                                String condition,\n                                List<String> groupByKeys)", "testcase": false, "constructor": false}, {"identifier": "getUdfInternalNames", "parameters": "()", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getUdfInternalNames()", "full_signature": "private Map<String, String> getUdfInternalNames()", "class_method_signature": "StreamCatalogService.getUdfInternalNames()", "testcase": false, "constructor": false}, {"identifier": "translateFunctions", "parameters": "(String sql, Map<String, String> udfInternalNames)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String translateFunctions(String sql, Map<String, String> udfInternalNames)", "full_signature": "@VisibleForTesting String translateFunctions(String sql, Map<String, String> udfInternalNames)", "class_method_signature": "StreamCatalogService.translateFunctions(String sql, Map<String, String> udfInternalNames)", "testcase": false, "constructor": false}, {"identifier": "convertNested", "parameters": "(List<String> streams, String expr)", "modifiers": "", "return": "String", "signature": "String convertNested(List<String> streams, String expr)", "full_signature": " String convertNested(List<String> streams, String expr)", "class_method_signature": "StreamCatalogService.convertNested(List<String> streams, String expr)", "testcase": false, "constructor": false}, {"identifier": "convertNested", "parameters": "(List<String> streams, List<String> exprs)", "modifiers": "private", "return": "List<String>", "signature": "List<String> convertNested(List<String> streams, List<String> exprs)", "full_signature": "private List<String> convertNested(List<String> streams, List<String> exprs)", "class_method_signature": "StreamCatalogService.convertNested(List<String> streams, List<String> exprs)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(List<String> streams, List<Projection> projections)", "modifiers": "private", "return": "Optional<String>", "signature": "Optional<String> select(List<String> streams, List<Projection> projections)", "full_signature": "private Optional<String> select(List<String> streams, List<Projection> projections)", "class_method_signature": "StreamCatalogService.select(List<String> streams, List<Projection> projections)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String keyword, String part)", "modifiers": "private", "return": "Optional<String>", "signature": "Optional<String> join(String keyword, String part)", "full_signature": "private Optional<String> join(String keyword, String part)", "class_method_signature": "StreamCatalogService.join(String keyword, String part)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String keyword, Collection<String> parts)", "modifiers": "private", "return": "Optional<String>", "signature": "Optional<String> join(String keyword, Collection<String> parts)", "full_signature": "private Optional<String> join(String keyword, Collection<String> parts)", "class_method_signature": "StreamCatalogService.join(String keyword, Collection<String> parts)", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "(List<String> streams)", "modifiers": "private", "return": "String", "signature": "String getTable(List<String> streams)", "full_signature": "private String getTable(List<String> streams)", "class_method_signature": "StreamCatalogService.getTable(List<String> streams)", "testcase": false, "constructor": false}, {"identifier": "updateRuleWithSql", "parameters": "(Rule rule, String sql, Long topologyId, Long versionId)", "modifiers": "private", "return": "void", "signature": "void updateRuleWithSql(Rule rule, String sql, Long topologyId, Long versionId)", "full_signature": "private void updateRuleWithSql(Rule rule, String sql, Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.updateRuleWithSql(Rule rule, String sql, Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "ensureValidStreams", "parameters": "(Set<String> streamIds, Long topologyId, Long versionId)", "modifiers": "private", "return": "void", "signature": "void ensureValidStreams(Set<String> streamIds, Long topologyId, Long versionId)", "full_signature": "private void ensureValidStreams(Set<String> streamIds, Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.ensureValidStreams(Set<String> streamIds, Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listUDFs", "parameters": "()", "modifiers": "public", "return": "Collection<UDF>", "signature": "Collection<UDF> listUDFs()", "full_signature": "public Collection<UDF> listUDFs()", "class_method_signature": "StreamCatalogService.listUDFs()", "testcase": false, "constructor": false}, {"identifier": "listUDFs", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<UDF>", "signature": "Collection<UDF> listUDFs(List<QueryParam> queryParams)", "full_signature": "public Collection<UDF> listUDFs(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listUDFs(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getUDF", "parameters": "(Long id)", "modifiers": "public", "return": "UDF", "signature": "UDF getUDF(Long id)", "full_signature": "public UDF getUDF(Long id)", "class_method_signature": "StreamCatalogService.getUDF(Long id)", "testcase": false, "constructor": false}, {"identifier": "addUDF", "parameters": "(UDF udf)", "modifiers": "public", "return": "UDF", "signature": "UDF addUDF(UDF udf)", "full_signature": "public UDF addUDF(UDF udf)", "class_method_signature": "StreamCatalogService.addUDF(UDF udf)", "testcase": false, "constructor": false}, {"identifier": "loadUdfsFromJar", "parameters": "(java.io.File jarFile)", "modifiers": "public static", "return": "Map<String, Class<?>>", "signature": "Map<String, Class<?>> loadUdfsFromJar(java.io.File jarFile)", "full_signature": "public static Map<String, Class<?>> loadUdfsFromJar(java.io.File jarFile)", "class_method_signature": "StreamCatalogService.loadUdfsFromJar(java.io.File jarFile)", "testcase": false, "constructor": false}, {"identifier": "removeUDF", "parameters": "(Long id)", "modifiers": "public", "return": "UDF", "signature": "UDF removeUDF(Long id)", "full_signature": "public UDF removeUDF(Long id)", "class_method_signature": "StreamCatalogService.removeUDF(Long id)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateUDF", "parameters": "(Long udfId, UDF udf)", "modifiers": "public", "return": "UDF", "signature": "UDF addOrUpdateUDF(Long udfId, UDF udf)", "full_signature": "public UDF addOrUpdateUDF(Long udfId, UDF udf)", "class_method_signature": "StreamCatalogService.addOrUpdateUDF(Long udfId, UDF udf)", "testcase": false, "constructor": false}, {"identifier": "loadTransformationClassForBundle", "parameters": "(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "modifiers": "private", "return": "void", "signature": "void loadTransformationClassForBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "full_signature": "private void loadTransformationClassForBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "class_method_signature": "StreamCatalogService.loadTransformationClassForBundle(TopologyComponentBundle topologyComponentBundle, java.io.File bundleJar)", "testcase": false, "constructor": false}, {"identifier": "getTopologyComponentBundleJarName", "parameters": "(TopologyComponentBundle topologyComponentBundle)", "modifiers": "private", "return": "String", "signature": "String getTopologyComponentBundleJarName(TopologyComponentBundle topologyComponentBundle)", "full_signature": "private String getTopologyComponentBundleJarName(TopologyComponentBundle topologyComponentBundle)", "class_method_signature": "StreamCatalogService.getTopologyComponentBundleJarName(TopologyComponentBundle topologyComponentBundle)", "testcase": false, "constructor": false}, {"identifier": "listFiles", "parameters": "(List<QueryParam> queryParams)", "modifiers": "private", "return": "Collection<File>", "signature": "Collection<File> listFiles(List<QueryParam> queryParams)", "full_signature": "private Collection<File> listFiles(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listFiles(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunHistory", "parameters": "(Long topologyId)", "modifiers": "public", "return": "Collection<TopologyTestRunHistory>", "signature": "Collection<TopologyTestRunHistory> listTopologyTestRunHistory(Long topologyId)", "full_signature": "public Collection<TopologyTestRunHistory> listTopologyTestRunHistory(Long topologyId)", "class_method_signature": "StreamCatalogService.listTopologyTestRunHistory(Long topologyId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunHistory", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "Collection<TopologyTestRunHistory>", "signature": "Collection<TopologyTestRunHistory> listTopologyTestRunHistory(Long topologyId, Long versionId)", "full_signature": "public Collection<TopologyTestRunHistory> listTopologyTestRunHistory(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.listTopologyTestRunHistory(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunHistory", "parameters": "(Long id)", "modifiers": "public", "return": "TopologyTestRunHistory", "signature": "TopologyTestRunHistory getTopologyTestRunHistory(Long id)", "full_signature": "public TopologyTestRunHistory getTopologyTestRunHistory(Long id)", "class_method_signature": "StreamCatalogService.getTopologyTestRunHistory(Long id)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunHistory", "parameters": "(TopologyTestRunHistory history)", "modifiers": "public", "return": "TopologyTestRunHistory", "signature": "TopologyTestRunHistory addTopologyTestRunHistory(TopologyTestRunHistory history)", "full_signature": "public TopologyTestRunHistory addTopologyTestRunHistory(TopologyTestRunHistory history)", "class_method_signature": "StreamCatalogService.addTopologyTestRunHistory(TopologyTestRunHistory history)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyTestRunHistory", "parameters": "(Long id, TopologyTestRunHistory history)", "modifiers": "public", "return": "TopologyTestRunHistory", "signature": "TopologyTestRunHistory addOrUpdateTopologyTestRunHistory(Long id, TopologyTestRunHistory history)", "full_signature": "public TopologyTestRunHistory addOrUpdateTopologyTestRunHistory(Long id, TopologyTestRunHistory history)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyTestRunHistory(Long id, TopologyTestRunHistory history)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyTestRunHistory", "parameters": "(Long id)", "modifiers": "public", "return": "TopologyTestRunHistory", "signature": "TopologyTestRunHistory removeTopologyTestRunHistory(Long id)", "full_signature": "public TopologyTestRunHistory removeTopologyTestRunHistory(Long id)", "class_method_signature": "StreamCatalogService.removeTopologyTestRunHistory(Long id)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCase", "parameters": "(Long topologyId, Long versionId)", "modifiers": "public", "return": "Collection<TopologyTestRunCase>", "signature": "Collection<TopologyTestRunCase> listTopologyTestRunCase(Long topologyId, Long versionId)", "full_signature": "public Collection<TopologyTestRunCase> listTopologyTestRunCase(Long topologyId, Long versionId)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCase(Long topologyId, Long versionId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCase", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyTestRunCase>", "signature": "Collection<TopologyTestRunCase> listTopologyTestRunCase(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyTestRunCase> listTopologyTestRunCase(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCase(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunCase", "parameters": "(Long topologyId, Long testcaseId)", "modifiers": "public", "return": "TopologyTestRunCase", "signature": "TopologyTestRunCase getTopologyTestRunCase(Long topologyId, Long testcaseId)", "full_signature": "public TopologyTestRunCase getTopologyTestRunCase(Long topologyId, Long testcaseId)", "class_method_signature": "StreamCatalogService.getTopologyTestRunCase(Long topologyId, Long testcaseId)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCase", "parameters": "(Long topologyId, Long newVersionId, TopologyTestRunCase testRunCase)", "modifiers": "private", "return": "TopologyTestRunCase", "signature": "TopologyTestRunCase addTopologyTestRunCase(Long topologyId, Long newVersionId, TopologyTestRunCase testRunCase)", "full_signature": "private TopologyTestRunCase addTopologyTestRunCase(Long topologyId, Long newVersionId, TopologyTestRunCase testRunCase)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCase(Long topologyId, Long newVersionId, TopologyTestRunCase testRunCase)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCase", "parameters": "(TopologyTestRunCase testCase)", "modifiers": "public", "return": "TopologyTestRunCase", "signature": "TopologyTestRunCase addTopologyTestRunCase(TopologyTestRunCase testCase)", "full_signature": "public TopologyTestRunCase addTopologyTestRunCase(TopologyTestRunCase testCase)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCase(TopologyTestRunCase testCase)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyTestRunCase", "parameters": "(Long id, TopologyTestRunCase testCase)", "modifiers": "public", "return": "TopologyTestRunCase", "signature": "TopologyTestRunCase addOrUpdateTopologyTestRunCase(Long id, TopologyTestRunCase testCase)", "full_signature": "public TopologyTestRunCase addOrUpdateTopologyTestRunCase(Long id, TopologyTestRunCase testCase)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyTestRunCase(Long id, TopologyTestRunCase testCase)", "testcase": false, "constructor": false}, {"identifier": "removeTestRunCase", "parameters": "(Long topologyId, Long testcaseId)", "modifiers": "public", "return": "TopologyTestRunCase", "signature": "TopologyTestRunCase removeTestRunCase(Long topologyId, Long testcaseId)", "full_signature": "public TopologyTestRunCase removeTestRunCase(Long topologyId, Long testcaseId)", "class_method_signature": "StreamCatalogService.removeTestRunCase(Long topologyId, Long testcaseId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunCaseSourceBySourceId", "parameters": "(Long testCaseId, Long sourceId)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource getTopologyTestRunCaseSourceBySourceId(Long testCaseId, Long sourceId)", "full_signature": "public TopologyTestRunCaseSource getTopologyTestRunCaseSourceBySourceId(Long testCaseId, Long sourceId)", "class_method_signature": "StreamCatalogService.getTopologyTestRunCaseSourceBySourceId(Long testCaseId, Long sourceId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunCaseSource", "parameters": "(Long testcaseId, Long id)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource getTopologyTestRunCaseSource(Long testcaseId, Long id)", "full_signature": "public TopologyTestRunCaseSource getTopologyTestRunCaseSource(Long testcaseId, Long id)", "class_method_signature": "StreamCatalogService.getTopologyTestRunCaseSource(Long testcaseId, Long id)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCaseSource", "parameters": "(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSource testRunCaseSource)", "modifiers": "private", "return": "void", "signature": "void addTopologyTestRunCaseSource(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSource testRunCaseSource)", "full_signature": "private void addTopologyTestRunCaseSource(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSource testRunCaseSource)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCaseSource(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSource testRunCaseSource)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCaseSource", "parameters": "(TopologyTestRunCaseSource testCaseSource)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource addTopologyTestRunCaseSource(TopologyTestRunCaseSource testCaseSource)", "full_signature": "public TopologyTestRunCaseSource addTopologyTestRunCaseSource(TopologyTestRunCaseSource testCaseSource)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCaseSource(TopologyTestRunCaseSource testCaseSource)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyTestRunCaseSource", "parameters": "(Long id, TopologyTestRunCaseSource testCaseSource)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource addOrUpdateTopologyTestRunCaseSource(Long id, TopologyTestRunCaseSource testCaseSource)", "full_signature": "public TopologyTestRunCaseSource addOrUpdateTopologyTestRunCaseSource(Long id, TopologyTestRunCaseSource testCaseSource)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyTestRunCaseSource(Long id, TopologyTestRunCaseSource testCaseSource)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyTestRunCaseSourceBySourceId", "parameters": "(Long testcaseId, Long sourceId)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource removeTopologyTestRunCaseSourceBySourceId(Long testcaseId, Long sourceId)", "full_signature": "public TopologyTestRunCaseSource removeTopologyTestRunCaseSourceBySourceId(Long testcaseId, Long sourceId)", "class_method_signature": "StreamCatalogService.removeTopologyTestRunCaseSourceBySourceId(Long testcaseId, Long sourceId)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyTestRunCaseSource", "parameters": "(Long id)", "modifiers": "public", "return": "TopologyTestRunCaseSource", "signature": "TopologyTestRunCaseSource removeTopologyTestRunCaseSource(Long id)", "full_signature": "public TopologyTestRunCaseSource removeTopologyTestRunCaseSource(Long id)", "class_method_signature": "StreamCatalogService.removeTopologyTestRunCaseSource(Long id)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCaseSource", "parameters": "(Long testCaseId)", "modifiers": "public", "return": "Collection<TopologyTestRunCaseSource>", "signature": "Collection<TopologyTestRunCaseSource> listTopologyTestRunCaseSource(Long testCaseId)", "full_signature": "public Collection<TopologyTestRunCaseSource> listTopologyTestRunCaseSource(Long testCaseId)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCaseSource(Long testCaseId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCaseSource", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyTestRunCaseSource>", "signature": "Collection<TopologyTestRunCaseSource> listTopologyTestRunCaseSource(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyTestRunCaseSource> listTopologyTestRunCaseSource(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCaseSource(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunCaseSinkBySinkId", "parameters": "(Long testCaseId, Long sinkId)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink getTopologyTestRunCaseSinkBySinkId(Long testCaseId, Long sinkId)", "full_signature": "public TopologyTestRunCaseSink getTopologyTestRunCaseSinkBySinkId(Long testCaseId, Long sinkId)", "class_method_signature": "StreamCatalogService.getTopologyTestRunCaseSinkBySinkId(Long testCaseId, Long sinkId)", "testcase": false, "constructor": false}, {"identifier": "getTopologyTestRunCaseSink", "parameters": "(Long testcaseId, Long id)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink getTopologyTestRunCaseSink(Long testcaseId, Long id)", "full_signature": "public TopologyTestRunCaseSink getTopologyTestRunCaseSink(Long testcaseId, Long id)", "class_method_signature": "StreamCatalogService.getTopologyTestRunCaseSink(Long testcaseId, Long id)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCaseSink", "parameters": "(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSink testRunCaseSink)", "modifiers": "private", "return": "void", "signature": "void addTopologyTestRunCaseSink(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSink testRunCaseSink)", "full_signature": "private void addTopologyTestRunCaseSink(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSink testRunCaseSink)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCaseSink(Long newTestCaseId, Long newVersionId, TopologyTestRunCaseSink testRunCaseSink)", "testcase": false, "constructor": false}, {"identifier": "addTopologyTestRunCaseSink", "parameters": "(TopologyTestRunCaseSink testCaseSink)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink addTopologyTestRunCaseSink(TopologyTestRunCaseSink testCaseSink)", "full_signature": "public TopologyTestRunCaseSink addTopologyTestRunCaseSink(TopologyTestRunCaseSink testCaseSink)", "class_method_signature": "StreamCatalogService.addTopologyTestRunCaseSink(TopologyTestRunCaseSink testCaseSink)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateTopologyTestRunCaseSink", "parameters": "(Long id, TopologyTestRunCaseSink testCaseSink)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink addOrUpdateTopologyTestRunCaseSink(Long id, TopologyTestRunCaseSink testCaseSink)", "full_signature": "public TopologyTestRunCaseSink addOrUpdateTopologyTestRunCaseSink(Long id, TopologyTestRunCaseSink testCaseSink)", "class_method_signature": "StreamCatalogService.addOrUpdateTopologyTestRunCaseSink(Long id, TopologyTestRunCaseSink testCaseSink)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyTestRunCaseSinkBySinkId", "parameters": "(Long testcaseId, Long sinkId)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink removeTopologyTestRunCaseSinkBySinkId(Long testcaseId, Long sinkId)", "full_signature": "public TopologyTestRunCaseSink removeTopologyTestRunCaseSinkBySinkId(Long testcaseId, Long sinkId)", "class_method_signature": "StreamCatalogService.removeTopologyTestRunCaseSinkBySinkId(Long testcaseId, Long sinkId)", "testcase": false, "constructor": false}, {"identifier": "removeTopologyTestRunCaseSink", "parameters": "(Long id)", "modifiers": "public", "return": "TopologyTestRunCaseSink", "signature": "TopologyTestRunCaseSink removeTopologyTestRunCaseSink(Long id)", "full_signature": "public TopologyTestRunCaseSink removeTopologyTestRunCaseSink(Long id)", "class_method_signature": "StreamCatalogService.removeTopologyTestRunCaseSink(Long id)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCaseSink", "parameters": "(Long testCaseId)", "modifiers": "public", "return": "Collection<TopologyTestRunCaseSink>", "signature": "Collection<TopologyTestRunCaseSink> listTopologyTestRunCaseSink(Long testCaseId)", "full_signature": "public Collection<TopologyTestRunCaseSink> listTopologyTestRunCaseSink(Long testCaseId)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCaseSink(Long testCaseId)", "testcase": false, "constructor": false}, {"identifier": "listTopologyTestRunCaseSink", "parameters": "(List<QueryParam> queryParams)", "modifiers": "public", "return": "Collection<TopologyTestRunCaseSink>", "signature": "Collection<TopologyTestRunCaseSink> listTopologyTestRunCaseSink(List<QueryParam> queryParams)", "full_signature": "public Collection<TopologyTestRunCaseSink> listTopologyTestRunCaseSink(List<QueryParam> queryParams)", "class_method_signature": "StreamCatalogService.listTopologyTestRunCaseSink(List<QueryParam> queryParams)", "testcase": false, "constructor": false}, {"identifier": "handleCustomProcessorJar", "parameters": "(InputStream jarFile, CustomProcessorInfo customProcessorInfo, boolean verify)", "modifiers": "private", "return": "void", "signature": "void handleCustomProcessorJar(InputStream jarFile, CustomProcessorInfo customProcessorInfo, boolean verify)", "full_signature": "private void handleCustomProcessorJar(InputStream jarFile, CustomProcessorInfo customProcessorInfo, boolean verify)", "class_method_signature": "StreamCatalogService.handleCustomProcessorJar(InputStream jarFile, CustomProcessorInfo customProcessorInfo, boolean verify)", "testcase": false, "constructor": false}, {"identifier": "verifyCustomProcessorImplFromJar", "parameters": "(java.io.File jarFile, CustomProcessorInfo customProcessorInfo)", "modifiers": "private", "return": "boolean", "signature": "boolean verifyCustomProcessorImplFromJar(java.io.File jarFile, CustomProcessorInfo customProcessorInfo)", "full_signature": "private boolean verifyCustomProcessorImplFromJar(java.io.File jarFile, CustomProcessorInfo customProcessorInfo)", "class_method_signature": "StreamCatalogService.verifyCustomProcessorImplFromJar(java.io.File jarFile, CustomProcessorInfo customProcessorInfo)", "testcase": false, "constructor": false}], "file": "streams/catalog/src/main/java/com/hortonworks/streamline/streams/catalog/service/StreamCatalogService.java"}, "focal_method": {"identifier": "translateFunctions", "parameters": "(String sql, Map<String, String> udfInternalNames)", "modifiers": "@VisibleForTesting", "return": "String", "body": "@VisibleForTesting\n    String translateFunctions(String sql, Map<String, String> udfInternalNames) {\n        StringBuffer sb = new StringBuffer();\n        Pattern pattern = Pattern.compile(\"(\\\\w+)( *\\\\()\");\n        Matcher matcher = pattern.matcher(sql);\n        while (matcher.find()) {\n            String displayName = matcher.group(1);\n            String name = udfInternalNames.get(displayName);\n            if (name != null && !name.equalsIgnoreCase(displayName)) {\n                matcher.appendReplacement(sb, name + matcher.group(2));\n            }\n        }\n        matcher.appendTail(sb);\n        return sb.toString();\n    }", "signature": "String translateFunctions(String sql, Map<String, String> udfInternalNames)", "full_signature": "@VisibleForTesting String translateFunctions(String sql, Map<String, String> udfInternalNames)", "class_method_signature": "StreamCatalogService.translateFunctions(String sql, Map<String, String> udfInternalNames)", "testcase": false, "constructor": false, "invocations": ["compile", "matcher", "find", "group", "get", "equalsIgnoreCase", "appendReplacement", "group", "appendTail", "toString"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}