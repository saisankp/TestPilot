{"test_class": {"identifier": "DAClassWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core-parent/core/src/test/java/fr/javatronic/damapping/processor/sourcegenerator/writer/DAClassWriterTest.java"}, "test_case": {"identifier": "end_returns_parent_writer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void end_returns_parent_writer() throws Exception {\n    FileContextTestImpl fileContext = new FileContextTestImpl();\n    DAWriter parent = new DAWriter() {\n\n    };\n    DAClassWriter<DAWriter> classWriter = new DAClassWriter<DAWriter>(NAME_DATYPE, fileContext,\n        parent, 1\n    );\n\n    assertThat(classWriter.end()).isSameAs(parent);\n  }", "signature": "void end_returns_parent_writer()", "full_signature": "@Test public void end_returns_parent_writer()", "class_method_signature": "DAClassWriterTest.end_returns_parent_writer()", "testcase": true, "constructor": false, "invocations": ["isSameAs", "assertThat", "end"]}, "focal_class": {"identifier": "DAClassWriter", "superclass": "extends AbstractDAWriter<T>", "interfaces": "", "fields": [{"original_string": "protected final DAType classType;", "modifier": "protected final", "type": "DAType", "declarator": "classType", "var_name": "classType"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@Nullable\n  private DAModifier[] modifiers;", "modifier": "@Nullable\n  private", "type": "DAModifier[]", "declarator": "modifiers", "var_name": "modifiers"}, {"original_string": "private List<DAAnnotation> annotations = Collections.emptyList();", "modifier": "private", "type": "List<DAAnnotation>", "declarator": "annotations = Collections.emptyList()", "var_name": "annotations"}, {"original_string": "private List<DAType> implemented = Collections.emptyList();", "modifier": "private", "type": "List<DAType>", "declarator": "implemented = Collections.emptyList()", "var_name": "implemented"}, {"original_string": "private DAType extended;", "modifier": "private", "type": "DAType", "declarator": "extended", "var_name": "extended"}], "methods": [{"identifier": "DAClassWriter", "parameters": "(DAType classType, FileContext fileContext, T parent, int indentOffset)", "modifiers": "", "return": "", "signature": " DAClassWriter(DAType classType, FileContext fileContext, T parent, int indentOffset)", "full_signature": "  DAClassWriter(DAType classType, FileContext fileContext, T parent, int indentOffset)", "class_method_signature": "DAClassWriter.DAClassWriter(DAType classType, FileContext fileContext, T parent, int indentOffset)", "testcase": false, "constructor": true}, {"identifier": "withModifiers", "parameters": "(@Nullable DAModifier... modifiers)", "modifiers": "public", "return": "DAClassWriter<T>", "signature": "DAClassWriter<T> withModifiers(@Nullable DAModifier... modifiers)", "full_signature": "public DAClassWriter<T> withModifiers(@Nullable DAModifier... modifiers)", "class_method_signature": "DAClassWriter.withModifiers(@Nullable DAModifier... modifiers)", "testcase": false, "constructor": false}, {"identifier": "withAnnotations", "parameters": "(List<DAAnnotation> annotations)", "modifiers": "public", "return": "DAClassWriter<T>", "signature": "DAClassWriter<T> withAnnotations(List<DAAnnotation> annotations)", "full_signature": "public DAClassWriter<T> withAnnotations(List<DAAnnotation> annotations)", "class_method_signature": "DAClassWriter.withAnnotations(List<DAAnnotation> annotations)", "testcase": false, "constructor": false}, {"identifier": "withImplemented", "parameters": "(List<DAType> implemented)", "modifiers": "public", "return": "DAClassWriter<T>", "signature": "DAClassWriter<T> withImplemented(List<DAType> implemented)", "full_signature": "public DAClassWriter<T> withImplemented(List<DAType> implemented)", "class_method_signature": "DAClassWriter.withImplemented(List<DAType> implemented)", "testcase": false, "constructor": false}, {"identifier": "withExtended", "parameters": "(DAType extended)", "modifiers": "public", "return": "DAClassWriter<T>", "signature": "DAClassWriter<T> withExtended(DAType extended)", "full_signature": "public DAClassWriter<T> withExtended(DAType extended)", "class_method_signature": "DAClassWriter.withExtended(DAType extended)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "DAClassWriter<T>", "signature": "DAClassWriter<T> start()", "full_signature": "public DAClassWriter<T> start()", "class_method_signature": "DAClassWriter.start()", "testcase": false, "constructor": false}, {"identifier": "newProperty", "parameters": "(String name, DAType type)", "modifiers": "public", "return": "DAPropertyWriter<DAClassWriter<T>>", "signature": "DAPropertyWriter<DAClassWriter<T>> newProperty(String name, DAType type)", "full_signature": "public DAPropertyWriter<DAClassWriter<T>> newProperty(String name, DAType type)", "class_method_signature": "DAClassWriter.newProperty(String name, DAType type)", "testcase": false, "constructor": false}, {"identifier": "newInitializedProperty", "parameters": "(String name, DAType type)", "modifiers": "public", "return": "DAInitializedPropertyWriter<DAClassWriter<T>>", "signature": "DAInitializedPropertyWriter<DAClassWriter<T>> newInitializedProperty(String name, DAType type)", "full_signature": "public DAInitializedPropertyWriter<DAClassWriter<T>> newInitializedProperty(String name, DAType type)", "class_method_signature": "DAClassWriter.newInitializedProperty(String name, DAType type)", "testcase": false, "constructor": false}, {"identifier": "newConstructor", "parameters": "()", "modifiers": "public", "return": "DAConstructorWriter<DAClassWriter<T>>", "signature": "DAConstructorWriter<DAClassWriter<T>> newConstructor()", "full_signature": "public DAConstructorWriter<DAClassWriter<T>> newConstructor()", "class_method_signature": "DAClassWriter.newConstructor()", "testcase": false, "constructor": false}, {"identifier": "newMethod", "parameters": "(String name, DAType returnType)", "modifiers": "public", "return": "DAClassMethodWriter<DAClassWriter<T>>", "signature": "DAClassMethodWriter<DAClassWriter<T>> newMethod(String name, DAType returnType)", "full_signature": "public DAClassMethodWriter<DAClassWriter<T>> newMethod(String name, DAType returnType)", "class_method_signature": "DAClassWriter.newMethod(String name, DAType returnType)", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T end()", "full_signature": "public T end()", "class_method_signature": "DAClassWriter.end()", "testcase": false, "constructor": false}, {"identifier": "newClass", "parameters": "(DAType classType)", "modifiers": "public", "return": "DAClassWriter<DAClassWriter<T>>", "signature": "DAClassWriter<DAClassWriter<T>> newClass(DAType classType)", "full_signature": "public DAClassWriter<DAClassWriter<T>> newClass(DAType classType)", "class_method_signature": "DAClassWriter.newClass(DAType classType)", "testcase": false, "constructor": false}, {"identifier": "appendExtended", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void appendExtended()", "full_signature": "private void appendExtended()", "class_method_signature": "DAClassWriter.appendExtended()", "testcase": false, "constructor": false}, {"identifier": "appendImplemented", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void appendImplemented()", "full_signature": "private void appendImplemented()", "class_method_signature": "DAClassWriter.appendImplemented()", "testcase": false, "constructor": false}], "file": "core-parent/core/src/main/java/fr/javatronic/damapping/processor/sourcegenerator/writer/DAClassWriter.java"}, "focal_method": {"identifier": "end", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T end() throws IOException {\n    commons.appendIndent();\n    commons.append(\"}\");\n    commons.newLine();\n    return parent;\n  }", "signature": "T end()", "full_signature": "public T end()", "class_method_signature": "DAClassWriter.end()", "testcase": false, "constructor": false, "invocations": ["appendIndent", "append", "newLine"]}, "repository": {"repo_id": 14714017, "url": "https://github.com/lesaint/damapping", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 4324, "license": "licensed"}}