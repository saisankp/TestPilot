{"test_class": {"identifier": "VATTest", "superclass": "", "interfaces": "", "fields": [], "file": "shared-kernel/src/test/java/net/pkhapps/ddd/shared/domain/financial/VATTest.java"}, "test_case": {"identifier": "toString_returnedAsFormattedString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toString_returnedAsFormattedString() {\n        assertThat(new VAT(24).toString()).isEqualTo(\"24 %\");\n    }", "signature": "void toString_returnedAsFormattedString()", "full_signature": "@Test public void toString_returnedAsFormattedString()", "class_method_signature": "VATTest.toString_returnedAsFormattedString()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "VAT", "superclass": "", "interfaces": "implements ValueObject", "fields": [{"original_string": "private final int percentage;", "modifier": "private final", "type": "int", "declarator": "percentage", "var_name": "percentage"}], "methods": [{"identifier": "VAT", "parameters": "(int percentage)", "modifiers": "@JsonCreator public", "return": "", "signature": " VAT(int percentage)", "full_signature": "@JsonCreator public  VAT(int percentage)", "class_method_signature": "VAT.VAT(int percentage)", "testcase": false, "constructor": true}, {"identifier": "valueOf", "parameters": "(Integer percentage)", "modifiers": "public static", "return": "VAT", "signature": "VAT valueOf(Integer percentage)", "full_signature": "public static VAT valueOf(Integer percentage)", "class_method_signature": "VAT.valueOf(Integer percentage)", "testcase": false, "constructor": false}, {"identifier": "toInteger", "parameters": "()", "modifiers": "@JsonValue public", "return": "int", "signature": "int toInteger()", "full_signature": "@JsonValue public int toInteger()", "class_method_signature": "VAT.toInteger()", "testcase": false, "constructor": false}, {"identifier": "toDouble", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double toDouble()", "full_signature": "public double toDouble()", "class_method_signature": "VAT.toDouble()", "testcase": false, "constructor": false}, {"identifier": "addTax", "parameters": "(@NonNull Money amount)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money addTax(@NonNull Money amount)", "full_signature": "@NonNull public Money addTax(@NonNull Money amount)", "class_method_signature": "VAT.addTax(@NonNull Money amount)", "testcase": false, "constructor": false}, {"identifier": "subtractTax", "parameters": "(@NonNull Money amount)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money subtractTax(@NonNull Money amount)", "full_signature": "@NonNull public Money subtractTax(@NonNull Money amount)", "class_method_signature": "VAT.subtractTax(@NonNull Money amount)", "testcase": false, "constructor": false}, {"identifier": "calculateTax", "parameters": "(@NonNull Money amount)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money calculateTax(@NonNull Money amount)", "full_signature": "@NonNull public Money calculateTax(@NonNull Money amount)", "class_method_signature": "VAT.calculateTax(@NonNull Money amount)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "VAT.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "VAT.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "VAT.toString()", "testcase": false, "constructor": false}], "file": "shared-kernel/src/main/java/net/pkhapps/ddd/shared/domain/financial/VAT.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return String.format(\"%d %%\", percentage);\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "VAT.toString()", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 158126654, "url": "https://github.com/peholmst/DDDExample", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 18, "size": 110, "license": "licensed"}}