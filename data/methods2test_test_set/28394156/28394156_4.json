{"test_class": {"identifier": "WorkerExecutionMonitorServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    WorkerExecutionMonitorService workerExecutionMonitorService;", "modifier": "@Autowired", "type": "WorkerExecutionMonitorService", "declarator": "workerExecutionMonitorService", "var_name": "workerExecutionMonitorService"}, {"original_string": "@Autowired\n    EventBus eventBus;", "modifier": "@Autowired", "type": "EventBus", "declarator": "eventBus", "var_name": "eventBus"}, {"original_string": "@Autowired\n    WorkerMonitors workerMonitors;", "modifier": "@Autowired", "type": "WorkerMonitors", "declarator": "workerMonitors", "var_name": "workerMonitors"}], "file": "worker/worker-manager/score-worker-manager-impl/src/test/java/io/cloudslang/worker/management/services/WorkerExecutionMonitorServiceImplTest.java"}, "test_case": {"identifier": "testWorkerExecutionMonitorServiceCollectMonitor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWorkerExecutionMonitorServiceCollectMonitor() throws InterruptedException {\n        HashMap<WorkerMonitorInfoEnum, Serializable> monitorInfo = new HashMap<>();\n        when(workerMonitors.getMonitorInfo()).thenReturn(monitorInfo);\n\n        ScoreEvent scoreEvent = new ScoreEvent(EventConstants.WORKER_EXECUTION_MONITOR, monitorInfo);\n\n        workerExecutionMonitorService.collectMonitorInformation();\n        verify(eventBus, times(1)).dispatch(refEq(scoreEvent));\n    }", "signature": "void testWorkerExecutionMonitorServiceCollectMonitor()", "full_signature": "@Test public void testWorkerExecutionMonitorServiceCollectMonitor()", "class_method_signature": "WorkerExecutionMonitorServiceImplTest.testWorkerExecutionMonitorServiceCollectMonitor()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getMonitorInfo", "collectMonitorInformation", "dispatch", "verify", "times", "refEq"]}, "focal_class": {"identifier": "WorkerExecutionMonitorServiceImpl", "superclass": "", "interfaces": "implements WorkerExecutionMonitorService", "fields": [{"original_string": "protected static final Logger logger = Logger.getLogger(WorkerExecutionMonitorServiceImpl.class);", "modifier": "protected static final", "type": "Logger", "declarator": "logger = Logger.getLogger(WorkerExecutionMonitorServiceImpl.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private EventBus eventBus;", "modifier": "@Autowired\n    private", "type": "EventBus", "declarator": "eventBus", "var_name": "eventBus"}, {"original_string": "@Autowired\n    private WorkerMonitors workerMonitors;", "modifier": "@Autowired\n    private", "type": "WorkerMonitors", "declarator": "workerMonitors", "var_name": "workerMonitors"}, {"original_string": "@Autowired\n    private List<ScheduledWorkerMonitor> scheduledWorkerMonitors;", "modifier": "@Autowired\n    private", "type": "List<ScheduledWorkerMonitor>", "declarator": "scheduledWorkerMonitors", "var_name": "scheduledWorkerMonitors"}], "methods": [{"identifier": "collectMonitorInformation", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void collectMonitorInformation()", "full_signature": "@Override public void collectMonitorInformation()", "class_method_signature": "WorkerExecutionMonitorServiceImpl.collectMonitorInformation()", "testcase": false, "constructor": false}, {"identifier": "executeScheduledWorkerMonitors", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void executeScheduledWorkerMonitors()", "full_signature": "@Override public void executeScheduledWorkerMonitors()", "class_method_signature": "WorkerExecutionMonitorServiceImpl.executeScheduledWorkerMonitors()", "testcase": false, "constructor": false}], "file": "worker/worker-manager/score-worker-manager-impl/src/main/java/io/cloudslang/worker/management/services/WorkerExecutionMonitorServiceImpl.java"}, "focal_method": {"identifier": "collectMonitorInformation", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void collectMonitorInformation() {\n        if(logger.isDebugEnabled()) {\n            logger.debug(\"Collecting Worker Monitors\");\n        }\n        try {\n            Map<WorkerMonitorInfoEnum, Serializable> monitorInfo = workerMonitors.getMonitorInfo();\n            if(logger.isDebugEnabled()) {\n                logger.debug(\"Sending Worker Monitors Info:[\" + monitorInfo +\"]\");\n            }\n            ScoreEvent event = new ScoreEvent(EventConstants.WORKER_EXECUTION_MONITOR, (Serializable) monitorInfo);\n            eventBus.dispatch(event);\n        } catch (InterruptedException e) {\n            logger.error(\"Failed to dispatch monitor info event\", e);\n        }\n    }", "signature": "void collectMonitorInformation()", "full_signature": "@Override public void collectMonitorInformation()", "class_method_signature": "WorkerExecutionMonitorServiceImpl.collectMonitorInformation()", "testcase": false, "constructor": false, "invocations": ["isDebugEnabled", "debug", "getMonitorInfo", "isDebugEnabled", "debug", "dispatch", "error"]}, "repository": {"repo_id": 28394156, "url": "https://github.com/CloudSlang/score", "stars": 76, "created": "12/23/2014 11:19:26 AM +00:00", "updates": "2020-01-27T14:36:32+00:00", "fork": "False", "license": "licensed"}}