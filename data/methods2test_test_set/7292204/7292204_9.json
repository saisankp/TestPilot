{"test_class": {"identifier": "ReflectionTest", "superclass": "", "interfaces": "", "fields": [], "file": "owner/src/test/java/org/aeonbits/owner/util/ReflectionTest.java"}, "test_case": {"identifier": "testAvailableWithExistentClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAvailableWithExistentClass(){\n        boolean available = Reflection.isClassAvailable(\"java.lang.String\");\n        assertTrue(available);\n    }", "signature": "void testAvailableWithExistentClass()", "full_signature": "@Test public void testAvailableWithExistentClass()", "class_method_signature": "ReflectionTest.testAvailableWithExistentClass()", "testcase": true, "constructor": false, "invocations": ["isClassAvailable", "assertTrue"]}, "focal_class": {"identifier": "Reflection", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Java8Support JAVA_8_SUPPORT = getJava8Support();", "modifier": "private static final", "type": "Java8Support", "declarator": "JAVA_8_SUPPORT = getJava8Support()", "var_name": "JAVA_8_SUPPORT"}], "methods": [{"identifier": "Reflection", "parameters": "()", "modifiers": "private", "return": "", "signature": " Reflection()", "full_signature": "private  Reflection()", "class_method_signature": "Reflection.Reflection()", "testcase": false, "constructor": true}, {"identifier": "isClassAvailable", "parameters": "(String className)", "modifiers": "public static", "return": "boolean", "signature": "boolean isClassAvailable(String className)", "full_signature": "public static boolean isClassAvailable(String className)", "class_method_signature": "Reflection.isClassAvailable(String className)", "testcase": false, "constructor": false}, {"identifier": "forName", "parameters": "(String className)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> forName(String className)", "full_signature": "public static Class<?> forName(String className)", "class_method_signature": "Reflection.forName(String className)", "testcase": false, "constructor": false}, {"identifier": "getJava8Support", "parameters": "()", "modifiers": "private static", "return": "Java8Support", "signature": "Java8Support getJava8Support()", "full_signature": "private static Java8Support getJava8Support()", "class_method_signature": "Reflection.getJava8Support()", "testcase": false, "constructor": false}, {"identifier": "java8NotSupported", "parameters": "()", "modifiers": "private static", "return": "Java8Support", "signature": "Java8Support java8NotSupported()", "full_signature": "private static Java8Support java8NotSupported()", "class_method_signature": "Reflection.java8NotSupported()", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "(Method method)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDefault(Method method)", "full_signature": "public static boolean isDefault(Method method)", "class_method_signature": "Reflection.isDefault(Method method)", "testcase": false, "constructor": false}, {"identifier": "invokeDefaultMethod", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "public static", "return": "Object", "signature": "Object invokeDefaultMethod(Object proxy, Method method, Object[] args)", "full_signature": "public static Object invokeDefaultMethod(Object proxy, Method method, Object[] args)", "class_method_signature": "Reflection.invokeDefaultMethod(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}], "file": "owner/src/main/java/org/aeonbits/owner/util/Reflection.java"}, "focal_method": {"identifier": "isClassAvailable", "parameters": "(String className)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isClassAvailable(String className) {\n        return forName(className) != null;\n    }", "signature": "boolean isClassAvailable(String className)", "full_signature": "public static boolean isClassAvailable(String className)", "class_method_signature": "Reflection.isClassAvailable(String className)", "testcase": false, "constructor": false, "invocations": ["forName"]}, "repository": {"repo_id": 7292204, "url": "https://github.com/lviggiano/owner", "stars": 723, "created": "12/23/2012 5:38:31 AM +00:00", "updates": "2020-01-21T03:13:31+00:00", "fork": "False", "license": "licensed"}}