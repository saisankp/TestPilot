{"test_class": {"identifier": "CoroutinesAgentTest", "superclass": "", "interfaces": "", "fields": [], "file": "java-agent/src/test/java/com/offbynull/coroutines/javaagent/CoroutinesAgentTest.java"}, "test_case": {"identifier": "mustFailIfUnknownArg", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void mustFailIfUnknownArg() throws Exception {\n        Instrumentation inst = mock(Instrumentation.class);\n        String agentArgs = \"pewpewpew=false\";\n        \n        assertThrows(IllegalArgumentException.class, () -> {\n            CoroutinesAgent.premain(agentArgs, inst);\n        });\n    }", "signature": "void mustFailIfUnknownArg()", "full_signature": "@Test public void mustFailIfUnknownArg()", "class_method_signature": "CoroutinesAgentTest.mustFailIfUnknownArg()", "testcase": true, "constructor": false, "invocations": ["mock", "assertThrows", "premain"]}, "focal_class": {"identifier": "CoroutinesAgent", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CoroutinesAgent", "parameters": "()", "modifiers": "private", "return": "", "signature": " CoroutinesAgent()", "full_signature": "private  CoroutinesAgent()", "class_method_signature": "CoroutinesAgent.CoroutinesAgent()", "testcase": false, "constructor": true}, {"identifier": "premain", "parameters": "(String agentArgs, Instrumentation inst)", "modifiers": "public static", "return": "void", "signature": "void premain(String agentArgs, Instrumentation inst)", "full_signature": "public static void premain(String agentArgs, Instrumentation inst)", "class_method_signature": "CoroutinesAgent.premain(String agentArgs, Instrumentation inst)", "testcase": false, "constructor": false}], "file": "java-agent/src/main/java/com/offbynull/coroutines/javaagent/CoroutinesAgent.java"}, "focal_method": {"identifier": "premain", "parameters": "(String agentArgs, Instrumentation inst)", "modifiers": "public static", "return": "void", "body": "public static void premain(String agentArgs, Instrumentation inst) {\n        // How do agent args work? http://stackoverflow.com/questions/23287228/how-do-i-pass-arguments-to-a-java-instrumentation-agent\n        // e.g. java -javaagent:/path/to/agent.jar=argumentstring\n        \n        MarkerType markerType = MarkerType.NONE;\n        boolean debugMode = false;\n        boolean autoSerializable = true;\n        if (agentArgs != null && !agentArgs.isEmpty()) {\n            String[] splitArgs = agentArgs.split(\",\");\n            for (String splitArg : splitArgs) {\n                String[] keyVal = splitArg.split(\"=\", 2);\n                if (keyVal.length != 2) {\n                    throw new IllegalArgumentException(\"Unrecognized arg passed to Coroutines Java agent: \" + splitArg);\n                }\n                \n                String key = keyVal[0];\n                String val = keyVal[1];\n\n                switch (key) {\n                    case \"markerType\":\n                        try {\n                            markerType = MarkerType.valueOf(val);\n                        } catch (IllegalArgumentException iae) {\n                            throw new IllegalArgumentException(\"Unable to parse marker type -- must be one of the following: \"\n                                    + Arrays.toString(MarkerType.values()), iae);\n                        }\n                        break;\n                    case \"debugMode\":\n                        if (val.equalsIgnoreCase(\"true\")) {\n                            debugMode = true;\n                        } else if (val.equalsIgnoreCase(\"false\")) {\n                            debugMode = false;\n                        } else {\n                            throw new IllegalArgumentException(\"Unable to parse debug mode -- must be true or false\");\n                        }\n                        break;\n                    case \"autoSerializable\":\n                        if (val.equalsIgnoreCase(\"true\")) {\n                            autoSerializable = true;\n                        } else if (val.equalsIgnoreCase(\"false\")) {\n                            autoSerializable = false;\n                        } else {\n                            throw new IllegalArgumentException(\"Unable to parse debug mode -- must be true or false\");\n                        }\n                        break;                        \n                    default:\n                        throw new IllegalArgumentException(\"Unrecognized arg passed to Coroutines Java agent: \" + keyVal);\n                }\n            }\n        }\n        \n        inst.addTransformer(new CoroutinesClassFileTransformer(markerType, debugMode, autoSerializable));\n    }", "signature": "void premain(String agentArgs, Instrumentation inst)", "full_signature": "public static void premain(String agentArgs, Instrumentation inst)", "class_method_signature": "CoroutinesAgent.premain(String agentArgs, Instrumentation inst)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "split", "split", "valueOf", "toString", "values", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "addTransformer"]}, "repository": {"repo_id": 31940141, "url": "https://github.com/offbynull/coroutines", "language": "Java", "is_fork": false, "fork_count": 45, "stargazer_count": 287, "size": 841, "license": "licensed"}}