{"test_class": {"identifier": "StreamDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String carsJson = \"\"//\n      + \"[\\n\"//\n      + \"  {\\n\"//\n      + \"    \\\"name\\\": \\\"Megane\\\",\\n\"//\n      + \"    \\\"manufacturer\\\": \\\"Renault\\\"\\n\"//\n      + \"  },\\n\"//\n      + \"  {\\n\"//\n      + \"    \\\"name\\\": \\\"C4\\\",\\n\"//\n      + \"    \\\"manufacturer\\\": \\\"Citro\u00ebn\\\"\\n\"//\n      + \"  }\\n\"//\n      + \"]\\n\";", "modifier": "private", "type": "String", "declarator": "carsJson = \"\"//\n      + \"[\\n\"//\n      + \"  {\\n\"//\n      + \"    \\\"name\\\": \\\"Megane\\\",\\n\"//\n      + \"    \\\"manufacturer\\\": \\\"Renault\\\"\\n\"//\n      + \"  },\\n\"//\n      + \"  {\\n\"//\n      + \"    \\\"name\\\": \\\"C4\\\",\\n\"//\n      + \"    \\\"manufacturer\\\": \\\"Citro\u00ebn\\\"\\n\"//\n      + \"  }\\n\"//\n      + \"]\\n\"", "var_name": "carsJson"}], "file": "core/src/test/java/feign/stream/StreamDecoderTest.java"}, "test_case": {"identifier": "simpleStreamTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void simpleStreamTest() {\n    MockWebServer server = new MockWebServer();\n    server.enqueue(new MockResponse().setBody(\"foo\\nbar\"));\n\n    StreamInterface api = Feign.builder()\n        .decoder(StreamDecoder.create(\n            (response, type) -> new BufferedReader(response.body().asReader(UTF_8)).lines()\n                .iterator()))\n        .doNotCloseAfterDecode()\n        .target(StreamInterface.class, server.url(\"/\").toString());\n\n    try (Stream<String> stream = api.get()) {\n      assertThat(stream.collect(Collectors.toList())).isEqualTo(Arrays.asList(\"foo\", \"bar\"));\n    }\n  }", "signature": "void simpleStreamTest()", "full_signature": "@Test public void simpleStreamTest()", "class_method_signature": "StreamDecoderTest.simpleStreamTest()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setBody", "target", "doNotCloseAfterDecode", "decoder", "builder", "create", "iterator", "lines", "asReader", "body", "toString", "url", "get", "isEqualTo", "assertThat", "collect", "toList", "asList"]}, "focal_class": {"identifier": "StreamDecoder", "superclass": "", "interfaces": "implements Decoder", "fields": [{"original_string": "private final Decoder iteratorDecoder;", "modifier": "private final", "type": "Decoder", "declarator": "iteratorDecoder", "var_name": "iteratorDecoder"}], "methods": [{"identifier": "StreamDecoder", "parameters": "(Decoder iteratorDecoder)", "modifiers": "", "return": "", "signature": " StreamDecoder(Decoder iteratorDecoder)", "full_signature": "  StreamDecoder(Decoder iteratorDecoder)", "class_method_signature": "StreamDecoder.StreamDecoder(Decoder iteratorDecoder)", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(Response response, Type type)", "modifiers": "@Override public", "return": "Object", "signature": "Object decode(Response response, Type type)", "full_signature": "@Override public Object decode(Response response, Type type)", "class_method_signature": "StreamDecoder.decode(Response response, Type type)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Decoder iteratorDecoder)", "modifiers": "public static", "return": "StreamDecoder", "signature": "StreamDecoder create(Decoder iteratorDecoder)", "full_signature": "public static StreamDecoder create(Decoder iteratorDecoder)", "class_method_signature": "StreamDecoder.create(Decoder iteratorDecoder)", "testcase": false, "constructor": false}], "file": "core/src/main/java/feign/stream/StreamDecoder.java"}, "focal_method": {"identifier": "create", "parameters": "(Decoder iteratorDecoder)", "modifiers": "public static", "return": "StreamDecoder", "body": "public static StreamDecoder create(Decoder iteratorDecoder) {\n    return new StreamDecoder(iteratorDecoder);\n  }", "signature": "StreamDecoder create(Decoder iteratorDecoder)", "full_signature": "public static StreamDecoder create(Decoder iteratorDecoder)", "class_method_signature": "StreamDecoder.create(Decoder iteratorDecoder)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10981994, "url": "https://github.com/OpenFeign/feign", "stars": 5385, "created": "6/26/2013 11:28:16 PM +00:00", "updates": "2020-01-27T14:44:13+00:00", "fork": "False", "license": "licensed"}}