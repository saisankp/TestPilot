{"test_class": {"identifier": "TestScriptletProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DataField[] dataFields1 = new DataField[]{\n        new DataField(\"temperature\",\"INTEGER\",\"\"),\n        new DataField(\"speed\",\"DOUBLE\",\"\"),\n        new DataField(\"angle\",\"INTEGER\",\"\"),\n        new DataField(\"image\",\"DOUBLE\",\"\")\n    };", "modifier": "private static final", "type": "DataField[]", "declarator": "dataFields1 = new DataField[]{\n        new DataField(\"temperature\",\"INTEGER\",\"\"),\n        new DataField(\"speed\",\"DOUBLE\",\"\"),\n        new DataField(\"angle\",\"INTEGER\",\"\"),\n        new DataField(\"image\",\"DOUBLE\",\"\")\n    }", "var_name": "dataFields1"}, {"original_string": "private static final DataField[] dataFields2 = new DataField[]{\n        new DataField(\"temperature\",\"INTEGER\",\"\"),\n        new DataField(\"speed\",\"DOUBLE\",\"\"),\n        new DataField(\"atm\",\"DOUBLE\",\"\")\n\n    };", "modifier": "private static final", "type": "DataField[]", "declarator": "dataFields2 = new DataField[]{\n        new DataField(\"temperature\",\"INTEGER\",\"\"),\n        new DataField(\"speed\",\"DOUBLE\",\"\"),\n        new DataField(\"atm\",\"DOUBLE\",\"\")\n\n    }", "var_name": "dataFields2"}, {"original_string": "private static final Serializable[] data1 = new Serializable[] {\n            23,\n            2.34,\n            -9,\n            -4.5\n    };", "modifier": "private static final", "type": "Serializable[]", "declarator": "data1 = new Serializable[] {\n            23,\n            2.34,\n            -9,\n            -4.5\n    }", "var_name": "data1"}, {"original_string": "private static final Serializable[] data2 = new Serializable[] {\n            23,\n            2.34,\n            -4.5\n    };", "modifier": "private static final", "type": "Serializable[]", "declarator": "data2 = new Serializable[] {\n            23,\n            2.34,\n            -4.5\n    }", "var_name": "data2"}], "file": "modules/x-gsn/src/main/java/org/openiot/gsn/processor/TestScriptletProcessor.java"}, "test_case": {"identifier": "testCorrectProcessorParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCorrectProcessorParameters() {\n        ScriptletProcessor processor = new ScriptletProcessor();\n        TreeMap<String,String> parameters = new TreeMap<String,String>();\n        boolean status = processor.initialize(dataFields1, parameters);\n        assertFalse(status);\n        //\n        parameters = new TreeMap<String,String>();\n        parameters.put(\"anyparam\",\"println 'Hello World!';\");\n        status = processor.initialize(dataFields1, parameters);\n        assertFalse(status);\n        //\n        parameters = new TreeMap<String,String>();\n        parameters.put(\"scriptlet\",\"println 'Hello World!';\");\n        status = processor.initialize(dataFields1, parameters);\n        assertTrue(status);\n        //\n        parameters = new TreeMap<String,String>();\n        parameters.put(\"scriplet-periodic\",\"println 'Hello World!';\");\n        status = processor.initialize(dataFields1, parameters);\n        assertFalse(status);\n        //\n        parameters = new TreeMap<String,String>();\n        parameters.put(\"scriplet-periodic\",\"println 'Hello World!';\");\n        parameters.put(\"period\",\"2000\");\n        status = processor.initialize(dataFields1, parameters);\n        assertTrue(status);\n    }", "signature": "void testCorrectProcessorParameters()", "full_signature": "@Test public void testCorrectProcessorParameters()", "class_method_signature": "TestScriptletProcessor.testCorrectProcessorParameters()", "testcase": true, "constructor": false, "invocations": ["initialize", "assertFalse", "put", "initialize", "assertFalse", "put", "initialize", "assertTrue", "put", "initialize", "assertFalse", "put", "put", "initialize", "assertTrue"]}, "focal_class": {"identifier": "ScriptletProcessor", "superclass": "extends AbstractVirtualSensor", "interfaces": "", "fields": [{"original_string": "private static final transient Logger logger = Logger.getLogger(ScriptletProcessor.class);", "modifier": "private static final transient", "type": "Logger", "declarator": "logger = Logger.getLogger(ScriptletProcessor.class)", "var_name": "logger"}, {"original_string": "private static final String PARAM_SCRIPTLET = \"scriptlet\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_SCRIPTLET = \"scriptlet\"", "var_name": "PARAM_SCRIPTLET"}, {"original_string": "private static final String PARAM_SCRIPTLETPERIODIC = \"scriplet-periodic\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_SCRIPTLETPERIODIC = \"scriplet-periodic\"", "var_name": "PARAM_SCRIPTLETPERIODIC"}, {"original_string": "private static final String PARAM_PERIOD = \"period\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_PERIOD = \"period\"", "var_name": "PARAM_PERIOD"}, {"original_string": "private static final String PARAM_PERSITANT = \"persistant\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_PERSITANT = \"persistant\"", "var_name": "PARAM_PERSITANT"}, {"original_string": "private Timer timer = null;", "modifier": "private", "type": "Timer", "declarator": "timer = null", "var_name": "timer"}, {"original_string": "protected Script scriptlet = null;", "modifier": "protected", "type": "Script", "declarator": "scriptlet = null", "var_name": "scriptlet"}, {"original_string": "protected Script scriptletPeriodic = null;", "modifier": "protected", "type": "Script", "declarator": "scriptletPeriodic = null", "var_name": "scriptletPeriodic"}, {"original_string": "protected final Binding context = new Binding();", "modifier": "protected final", "type": "Binding", "declarator": "context = new Binding()", "var_name": "context"}, {"original_string": "protected DataField[] outputStructure = null;", "modifier": "protected", "type": "DataField[]", "declarator": "outputStructure = null", "var_name": "outputStructure"}, {"original_string": "private long period = -1;", "modifier": "private", "type": "long", "declarator": "period = -1", "var_name": "period"}, {"original_string": "private boolean persistant = true;", "modifier": "private", "type": "boolean", "declarator": "persistant = true", "var_name": "persistant"}, {"original_string": "private TimerTask periodicalTask = null;", "modifier": "private", "type": "TimerTask", "declarator": "periodicalTask = null", "var_name": "periodicalTask"}], "methods": [{"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean initialize()", "full_signature": "@Override public boolean initialize()", "class_method_signature": "ScriptletProcessor.initialize()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "ScriptletProcessor.dispose()", "testcase": false, "constructor": false}, {"identifier": "dataAvailable", "parameters": "(String inputStreamName, StreamElement se)", "modifiers": "@Override public", "return": "void", "signature": "void dataAvailable(String inputStreamName, StreamElement se)", "full_signature": "@Override public void dataAvailable(String inputStreamName, StreamElement se)", "class_method_signature": "ScriptletProcessor.dataAvailable(String inputStreamName, StreamElement se)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(DataField[] outputStructure, TreeMap<String, String> parameters)", "modifiers": "protected", "return": "boolean", "signature": "boolean initialize(DataField[] outputStructure, TreeMap<String, String> parameters)", "full_signature": "protected boolean initialize(DataField[] outputStructure, TreeMap<String, String> parameters)", "class_method_signature": "ScriptletProcessor.initialize(DataField[] outputStructure, TreeMap<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "initScriptlet", "parameters": "(String ps)", "modifiers": "protected", "return": "Script", "signature": "Script initScriptlet(String ps)", "full_signature": "protected Script initScriptlet(String ps)", "class_method_signature": "ScriptletProcessor.initScriptlet(String ps)", "testcase": false, "constructor": false}, {"identifier": "formatOutputStreamElement", "parameters": "(Binding binding)", "modifiers": "protected", "return": "StreamElement", "signature": "StreamElement formatOutputStreamElement(Binding binding)", "full_signature": "protected StreamElement formatOutputStreamElement(Binding binding)", "class_method_signature": "ScriptletProcessor.formatOutputStreamElement(Binding binding)", "testcase": false, "constructor": false}, {"identifier": "updateContext", "parameters": "(StreamElement se)", "modifiers": "protected", "return": "Binding", "signature": "Binding updateContext(StreamElement se)", "full_signature": "protected Binding updateContext(StreamElement se)", "class_method_signature": "ScriptletProcessor.updateContext(StreamElement se)", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(Script script, StreamElement se, boolean persist)", "modifiers": "protected", "return": "void", "signature": "void evaluate(Script script, StreamElement se, boolean persist)", "full_signature": "protected void evaluate(Script script, StreamElement se, boolean persist)", "class_method_signature": "ScriptletProcessor.evaluate(Script script, StreamElement se, boolean persist)", "testcase": false, "constructor": false}, {"identifier": "getTimer", "parameters": "()", "modifiers": "private synchronized", "return": "Timer", "signature": "Timer getTimer()", "full_signature": "private synchronized Timer getTimer()", "class_method_signature": "ScriptletProcessor.getTimer()", "testcase": false, "constructor": false}], "file": "modules/x-gsn/src/main/java/org/openiot/gsn/processor/ScriptletProcessor.java"}, "focal_method": {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean initialize() {\n        return initialize(\n                getVirtualSensorConfiguration().getOutputStructure(),\n                getVirtualSensorConfiguration().getMainClassInitialParams()\n        );\n    }", "signature": "boolean initialize()", "full_signature": "@Override public boolean initialize()", "class_method_signature": "ScriptletProcessor.initialize()", "testcase": false, "constructor": false, "invocations": ["initialize", "getOutputStructure", "getVirtualSensorConfiguration", "getMainClassInitialParams", "getVirtualSensorConfiguration"]}, "repository": {"repo_id": 9221446, "url": "https://github.com/OpenIotOrg/openiot", "language": "Java", "is_fork": false, "fork_count": 201, "stargazer_count": 417, "size": 101270, "license": "licensed"}}