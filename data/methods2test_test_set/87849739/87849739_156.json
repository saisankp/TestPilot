{"test_class": {"identifier": "ImmutableJsonKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "json/src/test/java/org/eclipse/ditto/json/ImmutableJsonKeyTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithEmptyKeyValue", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void tryToCreateInstanceWithEmptyKeyValue() {\n        ImmutableJsonKey.of(\"\");\n    }", "signature": "void tryToCreateInstanceWithEmptyKeyValue()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void tryToCreateInstanceWithEmptyKeyValue()", "class_method_signature": "ImmutableJsonKeyTest.tryToCreateInstanceWithEmptyKeyValue()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "ImmutableJsonKey", "superclass": "", "interfaces": "implements JsonKey", "fields": [{"original_string": "private final String keyValue;", "modifier": "private final", "type": "String", "declarator": "keyValue", "var_name": "keyValue"}], "methods": [{"identifier": "ImmutableJsonKey", "parameters": "(final String theKeyValue)", "modifiers": "private", "return": "", "signature": " ImmutableJsonKey(final String theKeyValue)", "full_signature": "private  ImmutableJsonKey(final String theKeyValue)", "class_method_signature": "ImmutableJsonKey.ImmutableJsonKey(final String theKeyValue)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence keyValue)", "modifiers": "public static", "return": "JsonKey", "signature": "JsonKey of(final CharSequence keyValue)", "full_signature": "public static JsonKey of(final CharSequence keyValue)", "class_method_signature": "ImmutableJsonKey.of(final CharSequence keyValue)", "testcase": false, "constructor": false}, {"identifier": "asPointer", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer asPointer()", "full_signature": "@Override public JsonPointer asPointer()", "class_method_signature": "ImmutableJsonKey.asPointer()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "ImmutableJsonKey.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "ImmutableJsonKey.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "ImmutableJsonKey.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableJsonKey.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonKey.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String toString()", "full_signature": "@Override @Nonnull public String toString()", "class_method_signature": "ImmutableJsonKey.toString()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/ImmutableJsonKey.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence keyValue)", "modifiers": "public static", "return": "JsonKey", "body": "public static JsonKey of(final CharSequence keyValue) {\n        requireNonNull(keyValue, \"The key string must not be null!\");\n\n        if (JsonKey.class.isAssignableFrom(keyValue.getClass())) {\n            return ((JsonKey) keyValue);\n        } else  if (0 == keyValue.length()) {\n            throw new IllegalArgumentException(\"The key string must not be empty!\");\n        }\n\n        return new ImmutableJsonKey(keyValue.toString());\n    }", "signature": "JsonKey of(final CharSequence keyValue)", "full_signature": "public static JsonKey of(final CharSequence keyValue)", "class_method_signature": "ImmutableJsonKey.of(final CharSequence keyValue)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "isAssignableFrom", "getClass", "length", "toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}