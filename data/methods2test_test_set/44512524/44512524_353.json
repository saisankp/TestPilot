{"test_class": {"identifier": "WordSplitTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String[] ANY_WORDS = { \"foo\", \"bar\" };", "modifier": "final", "type": "String[]", "declarator": "ANY_WORDS = { \"foo\", \"bar\" }", "var_name": "ANY_WORDS"}, {"original_string": "final String sep = System.getProperty(\"line.separator\");", "modifier": "final", "type": "String", "declarator": "sep = System.getProperty(\"line.separator\")", "var_name": "sep"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/operation/WordSplitTest.java"}, "test_case": {"identifier": "sentenceShouldBeSplittedWithWhitespace", "parameters": "(String sentence)", "modifiers": "@Test(dataProvider = \"getSentenceWithWhiteSpace\") public", "return": "void", "body": "@Test(dataProvider = \"getSentenceWithWhiteSpace\")\n  public void sentenceShouldBeSplittedWithWhitespace(String sentence) {\n    String[] rets = WordSplit.splitSentence(sentence);\n    assertEquals(ANY_WORDS.length, rets.length);\n    for (int i = 0; i < rets.length; i++) {\n      assertEquals(ANY_WORDS[i], rets[i]);\n    }\n  }", "signature": "void sentenceShouldBeSplittedWithWhitespace(String sentence)", "full_signature": "@Test(dataProvider = \"getSentenceWithWhiteSpace\") public void sentenceShouldBeSplittedWithWhitespace(String sentence)", "class_method_signature": "WordSplitTest.sentenceShouldBeSplittedWithWhitespace(String sentence)", "testcase": true, "constructor": false, "invocations": ["splitSentence", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "WordSplit", "superclass": "extends BaseFunction", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(WordSplit.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(WordSplit.class)", "var_name": "LOG"}, {"original_string": "private static final long serialVersionUID = -8605358179216330897L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8605358179216330897L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "splitSentence", "parameters": "(String sentence)", "modifiers": "public static", "return": "String[]", "signature": "String[] splitSentence(String sentence)", "full_signature": "public static String[] splitSentence(String sentence)", "class_method_signature": "WordSplit.splitSentence(String sentence)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(TridentTuple tuple, TridentCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void execute(TridentTuple tuple, TridentCollector collector)", "full_signature": "@Override public void execute(TridentTuple tuple, TridentCollector collector)", "class_method_signature": "WordSplit.execute(TridentTuple tuple, TridentCollector collector)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/operation/WordSplit.java"}, "focal_method": {"identifier": "splitSentence", "parameters": "(String sentence)", "modifiers": "public static", "return": "String[]", "body": "public static String[] splitSentence(String sentence) {\n    if (sentence != null) {\n      return sentence.split(\"\\\\s+\");\n    }\n    return null;\n  }", "signature": "String[] splitSentence(String sentence)", "full_signature": "public static String[] splitSentence(String sentence)", "class_method_signature": "WordSplit.splitSentence(String sentence)", "testcase": false, "constructor": false, "invocations": ["split"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}