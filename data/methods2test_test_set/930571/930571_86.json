{"test_class": {"identifier": "WidMVELEvaluatorTest", "superclass": "extends AbstractBaseTest", "interfaces": "", "fields": [], "file": "jbpm-flow/src/test/java/org/jbpm/util/WidMVELEvaluatorTest.java"}, "test_case": {"identifier": "testWidBackwardsCompatPkgImports", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWidBackwardsCompatPkgImports() throws Exception {\n        assertCorrectWids(WidMVELEvaluator.eval(getResouceContent(\"/wids/test-backwardscompatpkgimport.wid\")));\n    }", "signature": "void testWidBackwardsCompatPkgImports()", "full_signature": "@Test public void testWidBackwardsCompatPkgImports()", "class_method_signature": "WidMVELEvaluatorTest.testWidBackwardsCompatPkgImports()", "testcase": true, "constructor": false, "invocations": ["assertCorrectWids", "eval", "getResouceContent"]}, "focal_class": {"identifier": "WidMVELEvaluator", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static ParserContext WID_PARSER_CONTEXT;", "modifier": "public static", "type": "ParserContext", "declarator": "WID_PARSER_CONTEXT", "var_name": "WID_PARSER_CONTEXT"}, {"original_string": "public static final String DATA_TYPE_PACKAGE = \"org.jbpm.process.core.datatype.impl.type\";", "modifier": "public static final", "type": "String", "declarator": "DATA_TYPE_PACKAGE = \"org.jbpm.process.core.datatype.impl.type\"", "var_name": "DATA_TYPE_PACKAGE"}], "methods": [{"identifier": "eval", "parameters": "(final String expression)", "modifiers": "public static", "return": "Object", "signature": "Object eval(final String expression)", "full_signature": "public static Object eval(final String expression)", "class_method_signature": "WidMVELEvaluator.eval(final String expression)", "testcase": false, "constructor": false}, {"identifier": "getRevisedExpression", "parameters": "(String expression)", "modifiers": "private static", "return": "String", "signature": "String getRevisedExpression(String expression)", "full_signature": "private static String getRevisedExpression(String expression)", "class_method_signature": "WidMVELEvaluator.getRevisedExpression(String expression)", "testcase": false, "constructor": false}], "file": "jbpm-flow/src/main/java/org/jbpm/util/WidMVELEvaluator.java"}, "focal_method": {"identifier": "eval", "parameters": "(final String expression)", "modifiers": "public static", "return": "Object", "body": "public static Object eval(final String expression) {\n        ExpressionCompiler compiler = new ExpressionCompiler(getRevisedExpression(expression),\n                                                             WID_PARSER_CONTEXT);\n\n        if(KiePolicyHelper.isPolicyEnabled()) {\n            return AccessController.doPrivileged(new PrivilegedAction<Object>() {\n                @Override\n                public Object run() {\n                    return MVEL.executeExpression(compiler.compile(),\n                                                  new HashMap());\n                }\n            }, KiePolicyHelper.getAccessContext());\n        } else {\n            return MVEL.executeExpression(compiler.compile(),\n                                          new HashMap());\n        }\n    }", "signature": "Object eval(final String expression)", "full_signature": "public static Object eval(final String expression)", "class_method_signature": "WidMVELEvaluator.eval(final String expression)", "testcase": false, "constructor": false, "invocations": ["getRevisedExpression", "isPolicyEnabled", "doPrivileged", "executeExpression", "compile", "getAccessContext", "executeExpression", "compile"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}