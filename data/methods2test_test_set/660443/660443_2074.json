{"test_class": {"identifier": "CDKOWLReaderTest", "superclass": "extends SimpleChemObjectReaderTest", "interfaces": "", "fields": [{"original_string": "private ILoggingTool logger = LoggingToolFactory.createLoggingTool(CDKOWLReaderTest.class);", "modifier": "private", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(CDKOWLReaderTest.class)", "var_name": "logger"}], "file": "storage/iordf/src/test/java/org/openscience/cdk/io/rdf/CDKOWLReaderTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() {\n        Assert.assertTrue(chemObjectIO.accepts(AtomContainer.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "CDKOWLReaderTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "CDKOWLReader", "superclass": "extends DefaultChemObjectReader", "interfaces": "", "fields": [{"original_string": "private Reader input;", "modifier": "private", "type": "Reader", "declarator": "input", "var_name": "input"}], "methods": [{"identifier": "CDKOWLReader", "parameters": "(Reader input)", "modifiers": "public", "return": "", "signature": " CDKOWLReader(Reader input)", "full_signature": "public  CDKOWLReader(Reader input)", "class_method_signature": "CDKOWLReader.CDKOWLReader(Reader input)", "testcase": false, "constructor": true}, {"identifier": "CDKOWLReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " CDKOWLReader()", "full_signature": "public  CDKOWLReader()", "class_method_signature": "CDKOWLReader.CDKOWLReader()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "CDKOWLReader.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(Reader reader)", "full_signature": "@Override public void setReader(Reader reader)", "class_method_signature": "CDKOWLReader.setReader(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(InputStream input)", "full_signature": "@Override public void setReader(InputStream input)", "class_method_signature": "CDKOWLReader.setReader(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "CDKOWLReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(T object)", "modifiers": "@Override public", "return": "T", "signature": "T read(T object)", "full_signature": "@Override public T read(T object)", "class_method_signature": "CDKOWLReader.read(T object)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "CDKOWLReader.close()", "testcase": false, "constructor": false}], "file": "storage/iordf/src/main/java/org/openscience/cdk/io/rdf/CDKOWLReader.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        if (IAtomContainer.class.equals(classObject)) return true;\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (int i = 0; i < interfaces.length; i++) {\n            if (IAtomContainer.class.equals(interfaces[i])) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "CDKOWLReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["equals", "getInterfaces", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}