{"test_class": {"identifier": "SingleModelBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/inference/builder/SingleModelBuilderTest.java"}, "test_case": {"identifier": "testBuild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuild() {\n        SyncModelBuilder mdlBuilder = new SingleModelBuilder();\n\n        Model<Integer, Integer> infMdl = mdlBuilder.build(\n            ModelBuilderTestUtil.getReader(),\n            ModelBuilderTestUtil.getParser()\n        );\n\n        for (int i = 0; i < 100; i++)\n            assertEquals(Integer.valueOf(i), infMdl.predict(i));\n    }", "signature": "void testBuild()", "full_signature": "@Test public void testBuild()", "class_method_signature": "SingleModelBuilderTest.testBuild()", "testcase": true, "constructor": false, "invocations": ["build", "getReader", "getParser", "assertEquals", "valueOf", "predict"]}, "focal_class": {"identifier": "SingleModelBuilder", "superclass": "", "interfaces": "implements SyncModelBuilder", "fields": [], "methods": [{"identifier": "build", "parameters": "(ModelReader reader,\n        ModelParser<I, O, M> parser)", "modifiers": "@Override public", "return": "M", "signature": "M build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "full_signature": "@Override public M build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "class_method_signature": "SingleModelBuilder.build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/inference/builder/SingleModelBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(ModelReader reader,\n        ModelParser<I, O, M> parser)", "modifiers": "@Override public", "return": "M", "body": "@Override public <I extends Serializable, O extends Serializable, M extends Model<I, O>> M build(ModelReader reader,\n        ModelParser<I, O, M> parser) {\n        return parser.parse(reader.read());\n    }", "signature": "M build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "full_signature": "@Override public M build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "class_method_signature": "SingleModelBuilder.build(ModelReader reader,\n        ModelParser<I, O, M> parser)", "testcase": false, "constructor": false, "invocations": ["parse", "read"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}