{"test_class": {"identifier": "XmlCredentialsUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/org/solenopsis/lasius/credentials/XmlCredentialsUtilTest.java"}, "test_case": {"identifier": "test_singleUserDefinedXmlConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_singleUserDefinedXmlConfiguration() {\n        final Collection<Credentials> credsCollection = XmlCredentialsUtil.getCredentials(getClass().getClassLoader().getResource(\"singleUserDefinedXmlConfiguration.xml\"), \"org\", \"org.url\", \"user\", \"password\", \"token\", \"org.api\");\n        final Credentials[] creds = credsCollection.toArray(new Credentials[0]);\n\n        Assert.assertEquals(\"Should have 1 element\", 1, creds.length);\n        Assert.assertEquals(\"Should be same url\", \"http://theurl\", creds[0].getUrl());\n        Assert.assertEquals(\"Should be same user name\", \"theuser\", creds[0].getUserName());\n        Assert.assertEquals(\"Should be same user name\", \"the password\", creds[0].getPassword());\n        Assert.assertEquals(\"Should be same user name\", \"the token\", creds[0].getToken());\n        Assert.assertEquals(\"Should be same user name\", \"30.0\", creds[0].getApiVersion());\n    }", "signature": "void test_singleUserDefinedXmlConfiguration()", "full_signature": "@Test public void test_singleUserDefinedXmlConfiguration()", "class_method_signature": "XmlCredentialsUtilTest.test_singleUserDefinedXmlConfiguration()", "testcase": true, "constructor": false, "invocations": ["getCredentials", "getResource", "getClassLoader", "getClass", "toArray", "assertEquals", "assertEquals", "getUrl", "assertEquals", "getUserName", "assertEquals", "getPassword", "assertEquals", "getToken", "assertEquals", "getApiVersion"]}, "focal_class": {"identifier": "XmlCredentialsUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createXmlConfiguration", "parameters": "(final String fileName)", "modifiers": "public static", "return": "XMLConfiguration", "signature": "XMLConfiguration createXmlConfiguration(final String fileName)", "full_signature": "public static XMLConfiguration createXmlConfiguration(final String fileName)", "class_method_signature": "XmlCredentialsUtil.createXmlConfiguration(final String fileName)", "testcase": false, "constructor": false}, {"identifier": "createXmlConfiguration", "parameters": "(final File file)", "modifiers": "public static", "return": "XMLConfiguration", "signature": "XMLConfiguration createXmlConfiguration(final File file)", "full_signature": "public static XMLConfiguration createXmlConfiguration(final File file)", "class_method_signature": "XmlCredentialsUtil.createXmlConfiguration(final File file)", "testcase": false, "constructor": false}, {"identifier": "createXmlConfiguration", "parameters": "(final URL url)", "modifiers": "public static", "return": "XMLConfiguration", "signature": "XMLConfiguration createXmlConfiguration(final URL url)", "full_signature": "public static XMLConfiguration createXmlConfiguration(final URL url)", "class_method_signature": "XmlCredentialsUtil.createXmlConfiguration(final URL url)", "testcase": false, "constructor": false}, {"identifier": "convertToCredentials", "parameters": "(final HierarchicalConfiguration hierarchicalConfiguration, final Object url, final String userNameElement, final String passwordElement, final String tokenElement, final Object apiVersion)", "modifiers": "public static", "return": "Credentials", "signature": "Credentials convertToCredentials(final HierarchicalConfiguration hierarchicalConfiguration, final Object url, final String userNameElement, final String passwordElement, final String tokenElement, final Object apiVersion)", "full_signature": "public static Credentials convertToCredentials(final HierarchicalConfiguration hierarchicalConfiguration, final Object url, final String userNameElement, final String passwordElement, final String tokenElement, final Object apiVersion)", "class_method_signature": "XmlCredentialsUtil.convertToCredentials(final HierarchicalConfiguration hierarchicalConfiguration, final Object url, final String userNameElement, final String passwordElement, final String tokenElement, final Object apiVersion)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "modifiers": "public static", "return": "Collection<Credentials>", "signature": "Collection<Credentials> getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "full_signature": "public static Collection<Credentials> getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "class_method_signature": "XmlCredentialsUtil.getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "(final String fileName, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "modifiers": "public static", "return": "Collection<Credentials>", "signature": "Collection<Credentials> getCredentials(final String fileName, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "full_signature": "public static Collection<Credentials> getCredentials(final String fileName, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "class_method_signature": "XmlCredentialsUtil.getCredentials(final String fileName, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "(final File file, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "modifiers": "public static", "return": "Collection<Credentials>", "signature": "Collection<Credentials> getCredentials(final File file, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "full_signature": "public static Collection<Credentials> getCredentials(final File file, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "class_method_signature": "XmlCredentialsUtil.getCredentials(final File file, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "(final URL url, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "modifiers": "public static", "return": "Collection<Credentials>", "signature": "Collection<Credentials> getCredentials(final URL url, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "full_signature": "public static Collection<Credentials> getCredentials(final URL url, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "class_method_signature": "XmlCredentialsUtil.getCredentials(final URL url, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/solenopsis/lasius/credentials/XmlCredentialsUtil.java"}, "focal_method": {"identifier": "getCredentials", "parameters": "(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "modifiers": "public static", "return": "Collection<Credentials>", "body": "public static Collection<Credentials> getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement) {\n        IntegrityUtil.ensure(xmlConfiguration, \"Must provide an XMLConfiguration!\");\n        IntegrityUtil.ensure(rootElement, \"Must provide a root element!\");\n        IntegrityUtil.ensure(urlElement, \"Must provide a url element!\");\n        IntegrityUtil.ensure(userNameElement, \"Must provide a user name element!\");\n        IntegrityUtil.ensure(passwordElement, \"Must provide a password element!\");\n        IntegrityUtil.ensure(tokenElement, \"Must provide a token element!\");\n        IntegrityUtil.ensure(apiVersionElement, \"Must provide an api version element!\");\n\n        final List<HierarchicalConfiguration> configurationList = xmlConfiguration.configurationsAt(rootElement);\n        IntegrityUtil.ensure(configurationList, \"No configuration found using [\" + rootElement + \"]\");\n\n        final List<Credentials> retVal = new ArrayList(configurationList.size());\n\n        for (final HierarchicalConfiguration hierarchicalConfiguration : configurationList) {\n            retVal.add(convertToCredentials(hierarchicalConfiguration, xmlConfiguration.getProperty(urlElement), userNameElement, passwordElement, tokenElement, xmlConfiguration.getProperty(apiVersionElement)));\n        }\n\n        return retVal;\n    }", "signature": "Collection<Credentials> getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "full_signature": "public static Collection<Credentials> getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "class_method_signature": "XmlCredentialsUtil.getCredentials(final XMLConfiguration xmlConfiguration, final String rootElement, final String urlElement, final String userNameElement, final String passwordElement, final String tokenElement, final String apiVersionElement)", "testcase": false, "constructor": false, "invocations": ["ensure", "ensure", "ensure", "ensure", "ensure", "ensure", "ensure", "configurationsAt", "ensure", "size", "add", "convertToCredentials", "getProperty", "getProperty"]}, "repository": {"repo_id": 4705783, "url": "https://github.com/solenopsis/Lasius", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 908, "license": "licensed"}}