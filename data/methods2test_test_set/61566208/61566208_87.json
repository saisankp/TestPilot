{"test_class": {"identifier": "FruIdEventsHelperUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger( FruIdEventsHelperUtilTest.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( FruIdEventsHelperUtilTest.class )", "var_name": "logger"}], "file": "modules/hms-aggregator/src/test/java/com/vmware/vrack/hms/aggregator/util/FruIdEventsHelperUtilTest.java"}, "test_case": {"identifier": "addFruIDtoStorageEventsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addFruIDtoStorageEventsTest()\n    {\n\n        List<Event> events = new ArrayList<Event>();\n        List<Event> storageEventsFruID = new ArrayList<Event>();\n        Event event = new Event();\n        Body body = new Body();\n        Header header = new Header();\n\n        try\n        {\n            // Construct Storage/HDD Event for Testing\n            body.setDescription( \"Storage drive for rack EVO:RACK node N3 and HDD HDD_0 drive slot is full: DrivePresence\" );\n            Map<String, String> data = new HashMap<String, String>();\n            data.put( \"unit\", \"DISCRETE\" );\n            data.put( \"eventName\", \"HDD_SLOT_FULL\" );\n            body.setData( data );\n\n            Map<EventComponent, String> compIdentifier = new HashMap<EventComponent, String>();\n            compIdentifier.put( EventComponent.STORAGE, \"0\" );\n            compIdentifier.put( EventComponent.SERVER, \"N5\" );\n            header.addComponentIdentifier( compIdentifier );\n            header.setAgent( \"HMS\" );\n            header.setEventName( EventCatalog.HDD_UP );\n            header.setSeverity( EventSeverity.INFORMATIONAL );\n            header.setVersion( \"1.0\" );\n\n            event.setBody( body );\n            event.setHeader( header );\n            events.add( event );\n\n            // Construct Storage/HDD FRU Information\n            List<StorageInfo> storageInfoList = new ArrayList<StorageInfo>();\n            StorageInfo storageInfo = new StorageInfo();\n            ComponentIdentifier cpuComponentIdentifier = new ComponentIdentifier();\n            cpuComponentIdentifier.setManufacturer( \"ATA\" );\n            cpuComponentIdentifier.setProduct( \"32G MLC SATADOM\" );\n            storageInfo.setComponentIdentifier( cpuComponentIdentifier );\n            storageInfo.setDiskCapacityInMB( 29579 );\n            storageInfo.setHostId( \"N5\" );\n            storageInfo.setFruId( \"-9080809091211679985\" );\n            storageInfo.setDiskType( \"SSD\" );\n            storageInfo.setLocation( \"0\" );\n            storageInfo.setId( \"0\" );\n            storageInfoList.add( storageInfo );\n\n            storageEventsFruID = FruIdEventsHelperUtil.addFruIDtoStorageEvents( events, storageInfoList );\n            Map<String, String> eventData = storageEventsFruID.get( 0 ).getBody().getData();\n            assertNotNull( eventData.get( \"fruID\" ) );\n        }\n        catch ( Exception e )\n        {\n            logger.info( \"Integrate FRU ID with Storage or HDD Events Test Failed\" );\n        }\n    }", "signature": "void addFruIDtoStorageEventsTest()", "full_signature": "@Test public void addFruIDtoStorageEventsTest()", "class_method_signature": "FruIdEventsHelperUtilTest.addFruIDtoStorageEventsTest()", "testcase": true, "constructor": false, "invocations": ["setDescription", "put", "put", "setData", "put", "put", "addComponentIdentifier", "setAgent", "setEventName", "setSeverity", "setVersion", "setBody", "setHeader", "add", "setManufacturer", "setProduct", "setComponentIdentifier", "setDiskCapacityInMB", "setHostId", "setFruId", "setDiskType", "setLocation", "setId", "add", "addFruIDtoStorageEvents", "getData", "getBody", "get", "assertNotNull", "get", "info"]}, "focal_class": {"identifier": "FruIdEventsHelperUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger( FruIdEventsHelperUtil.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( FruIdEventsHelperUtil.class )", "var_name": "logger"}], "methods": [{"identifier": "addFruIDtoEvents", "parameters": "( List<Event> aggregatedEvents, String nodeID,\n                                                ServerComponent serverComponent )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoEvents( List<Event> aggregatedEvents, String nodeID,\n                                                ServerComponent serverComponent )", "full_signature": "public static List<Event> addFruIDtoEvents( List<Event> aggregatedEvents, String nodeID,\n                                                ServerComponent serverComponent )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoEvents( List<Event> aggregatedEvents, String nodeID,\n                                                ServerComponent serverComponent )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoSwitchEventsHelper", "parameters": "( List<Event> aggregatedSwitchEvents, String switchID )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoSwitchEventsHelper( List<Event> aggregatedSwitchEvents, String switchID )", "full_signature": "public static List<Event> addFruIDtoSwitchEventsHelper( List<Event> aggregatedSwitchEvents, String switchID )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoSwitchEventsHelper( List<Event> aggregatedSwitchEvents, String switchID )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoCpuEvents", "parameters": "( List<Event> aggregatedEvents, List<CpuInfo> cpuInfoList )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoCpuEvents( List<Event> aggregatedEvents, List<CpuInfo> cpuInfoList )", "full_signature": "public static List<Event> addFruIDtoCpuEvents( List<Event> aggregatedEvents, List<CpuInfo> cpuInfoList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoCpuEvents( List<Event> aggregatedEvents, List<CpuInfo> cpuInfoList )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoMemoryEvents", "parameters": "( List<Event> aggregatedEvents, List<MemoryInfo> memoryInfoList )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoMemoryEvents( List<Event> aggregatedEvents, List<MemoryInfo> memoryInfoList )", "full_signature": "public static List<Event> addFruIDtoMemoryEvents( List<Event> aggregatedEvents, List<MemoryInfo> memoryInfoList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoMemoryEvents( List<Event> aggregatedEvents, List<MemoryInfo> memoryInfoList )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoStorageEvents", "parameters": "( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "full_signature": "public static List<Event> addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoStorageControllerEvents", "parameters": "( List<Event> aggregatedEvents,\n                                                                 List<StorageController> storageControllerList )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoStorageControllerEvents( List<Event> aggregatedEvents,\n                                                                 List<StorageController> storageControllerList )", "full_signature": "public static List<Event> addFruIDtoStorageControllerEvents( List<Event> aggregatedEvents,\n                                                                 List<StorageController> storageControllerList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoStorageControllerEvents( List<Event> aggregatedEvents,\n                                                                 List<StorageController> storageControllerList )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoEthernetControllerEvents", "parameters": "( List<Event> aggregatedEvents,\n                                                                  List<EthernetController> ethernetControllerList )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoEthernetControllerEvents( List<Event> aggregatedEvents,\n                                                                  List<EthernetController> ethernetControllerList )", "full_signature": "public static List<Event> addFruIDtoEthernetControllerEvents( List<Event> aggregatedEvents,\n                                                                  List<EthernetController> ethernetControllerList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoEthernetControllerEvents( List<Event> aggregatedEvents,\n                                                                  List<EthernetController> ethernetControllerList )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoHostEvents", "parameters": "( List<Event> aggregatedEvents, String serverFruID )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoHostEvents( List<Event> aggregatedEvents, String serverFruID )", "full_signature": "public static List<Event> addFruIDtoHostEvents( List<Event> aggregatedEvents, String serverFruID )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoHostEvents( List<Event> aggregatedEvents, String serverFruID )", "testcase": false, "constructor": false}, {"identifier": "addFruIDtoSwitchEvents", "parameters": "( List<Event> aggregatedEvents, String switchFruID )", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> addFruIDtoSwitchEvents( List<Event> aggregatedEvents, String switchFruID )", "full_signature": "public static List<Event> addFruIDtoSwitchEvents( List<Event> aggregatedEvents, String switchFruID )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoSwitchEvents( List<Event> aggregatedEvents, String switchFruID )", "testcase": false, "constructor": false}], "file": "modules/hms-aggregator/src/main/java/com/vmware/vrack/hms/aggregator/util/FruIdEventsHelperUtil.java"}, "focal_method": {"identifier": "addFruIDtoStorageEvents", "parameters": "( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "modifiers": "public static", "return": "List<Event>", "body": "public static List<Event> addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )\n    {\n\n        List<Event> events = new ArrayList<Event>();\n        StorageInfo storageInfo = new StorageInfo();\n\n        try\n        {\n            for ( int i = 0; i < aggregatedEvents.size(); i++ )\n            {\n                Event event = aggregatedEvents.get( i );\n                Map<EventComponent, String> eventComponentIdentifier = event.getHeader().getComponentIdentifier();\n                Map<String, String> eventBody = event.getBody().getData();\n                String componentId = eventComponentIdentifier.get( EventComponent.STORAGE );\n\n                for ( int j = 0; j < storageInfoList.size(); j++ )\n                {\n                    // String deviceProductLocation = storageInfoList.get(j).getLocation() + \" \"\n                    // + storageInfoList.get(j).getComponentIdentifier().getProduct();\n                    if ( componentId.equals( storageInfoList.get( j ).getId() ) )\n                    {\n                        storageInfo = storageInfoList.get( j );\n                        eventBody.put( \"fruID\", storageInfo.getFruId() );\n                        break;\n                    }\n                }\n                events.add( event );\n            }\n            return events;\n        }\n        catch ( Exception e )\n        {\n            logger.error( \"HMS aggregator error in adding Fru ID to Storage or HDD Events\", e );\n        }\n\n        return null;\n    }", "signature": "List<Event> addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "full_signature": "public static List<Event> addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "class_method_signature": "FruIdEventsHelperUtil.addFruIDtoStorageEvents( List<Event> aggregatedEvents, List<StorageInfo> storageInfoList )", "testcase": false, "constructor": false, "invocations": ["size", "get", "getComponentIdentifier", "getHeader", "getData", "getBody", "get", "size", "equals", "getId", "get", "get", "put", "getFruId", "add", "error"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}