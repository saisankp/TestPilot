{"test_class": {"identifier": "DebugBondTest", "superclass": "extends AbstractBondTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugBondTest.java"}, "test_case": {"identifier": "testDebugBond", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDebugBond() {\n        IBond bond = new DebugBond();\n        Assert.assertEquals(0, bond.getAtomCount());\n        Assert.assertNull(bond.getBegin());\n        Assert.assertNull(bond.getEnd());\n        Assert.assertNull(bond.getOrder());\n        Assert.assertEquals(IBond.Stereo.NONE, bond.getStereo());\n    }", "signature": "void testDebugBond()", "full_signature": "@Test public void testDebugBond()", "class_method_signature": "DebugBondTest.testDebugBond()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAtomCount", "assertNull", "getBegin", "assertNull", "getEnd", "assertNull", "getOrder", "assertEquals", "getStereo"]}, "focal_class": {"identifier": "DebugBond", "superclass": "extends Bond", "interfaces": "implements IBond", "fields": [{"original_string": "private static final long serialVersionUID = -2330398179697796261L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2330398179697796261L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool              logger           = LoggingToolFactory.createLoggingTool(DebugBond.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger           = LoggingToolFactory.createLoggingTool(DebugBond.class)", "var_name": "logger"}], "methods": [{"identifier": "DebugBond", "parameters": "()", "modifiers": "public", "return": "", "signature": " DebugBond()", "full_signature": "public  DebugBond()", "class_method_signature": "DebugBond.DebugBond()", "testcase": false, "constructor": true}, {"identifier": "DebugBond", "parameters": "(IAtom atom1, IAtom atom2)", "modifiers": "public", "return": "", "signature": " DebugBond(IAtom atom1, IAtom atom2)", "full_signature": "public  DebugBond(IAtom atom1, IAtom atom2)", "class_method_signature": "DebugBond.DebugBond(IAtom atom1, IAtom atom2)", "testcase": false, "constructor": true}, {"identifier": "DebugBond", "parameters": "(IAtom atom1, IAtom atom2, IBond.Order order)", "modifiers": "public", "return": "", "signature": " DebugBond(IAtom atom1, IAtom atom2, IBond.Order order)", "full_signature": "public  DebugBond(IAtom atom1, IAtom atom2, IBond.Order order)", "class_method_signature": "DebugBond.DebugBond(IAtom atom1, IAtom atom2, IBond.Order order)", "testcase": false, "constructor": true}, {"identifier": "DebugBond", "parameters": "(IAtom atom1, IAtom atom2, IBond.Order order, IBond.Stereo stereo)", "modifiers": "public", "return": "", "signature": " DebugBond(IAtom atom1, IAtom atom2, IBond.Order order, IBond.Stereo stereo)", "full_signature": "public  DebugBond(IAtom atom1, IAtom atom2, IBond.Order order, IBond.Stereo stereo)", "class_method_signature": "DebugBond.DebugBond(IAtom atom1, IAtom atom2, IBond.Order order, IBond.Stereo stereo)", "testcase": false, "constructor": true}, {"identifier": "DebugBond", "parameters": "(IAtom[] atoms)", "modifiers": "public", "return": "", "signature": " DebugBond(IAtom[] atoms)", "full_signature": "public  DebugBond(IAtom[] atoms)", "class_method_signature": "DebugBond.DebugBond(IAtom[] atoms)", "testcase": false, "constructor": true}, {"identifier": "DebugBond", "parameters": "(IAtom[] atoms, IBond.Order order)", "modifiers": "public", "return": "", "signature": " DebugBond(IAtom[] atoms, IBond.Order order)", "full_signature": "public  DebugBond(IAtom[] atoms, IBond.Order order)", "class_method_signature": "DebugBond.DebugBond(IAtom[] atoms, IBond.Order order)", "testcase": false, "constructor": true}, {"identifier": "getElectronCount", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getElectronCount()", "full_signature": "@Override public Integer getElectronCount()", "class_method_signature": "DebugBond.getElectronCount()", "testcase": false, "constructor": false}, {"identifier": "setElectronCount", "parameters": "(Integer electronCount)", "modifiers": "@Override public", "return": "void", "signature": "void setElectronCount(Integer electronCount)", "full_signature": "@Override public void setElectronCount(Integer electronCount)", "class_method_signature": "DebugBond.setElectronCount(Integer electronCount)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "DebugBond.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "DebugBond.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "DebugBond.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "DebugBond.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "DebugBond.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "DebugBond.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "DebugBond.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "DebugBond.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "DebugBond.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "DebugBond.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugBond.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "DebugBond.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "DebugBond.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "DebugBond.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "DebugBond.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "DebugBond.getFlags()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IBond", "signature": "IBond clone()", "full_signature": "@Override public IBond clone()", "class_method_signature": "DebugBond.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "DebugBond.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "atoms", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IAtom>", "signature": "Iterable<IAtom> atoms()", "full_signature": "@Override public Iterable<IAtom> atoms()", "class_method_signature": "DebugBond.atoms()", "testcase": false, "constructor": false}, {"identifier": "setAtoms", "parameters": "(IAtom[] atoms)", "modifiers": "@Override public", "return": "void", "signature": "void setAtoms(IAtom[] atoms)", "full_signature": "@Override public void setAtoms(IAtom[] atoms)", "class_method_signature": "DebugBond.setAtoms(IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "getAtomCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAtomCount()", "full_signature": "@Override public int getAtomCount()", "class_method_signature": "DebugBond.getAtomCount()", "testcase": false, "constructor": false}, {"identifier": "getAtom", "parameters": "(int position)", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getAtom(int position)", "full_signature": "@Override public IAtom getAtom(int position)", "class_method_signature": "DebugBond.getAtom(int position)", "testcase": false, "constructor": false}, {"identifier": "getBegin", "parameters": "()", "modifiers": "public", "return": "IAtom", "signature": "IAtom getBegin()", "full_signature": "public IAtom getBegin()", "class_method_signature": "DebugBond.getBegin()", "testcase": false, "constructor": false}, {"identifier": "getEnd", "parameters": "()", "modifiers": "public", "return": "IAtom", "signature": "IAtom getEnd()", "full_signature": "public IAtom getEnd()", "class_method_signature": "DebugBond.getEnd()", "testcase": false, "constructor": false}, {"identifier": "getOther", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getOther(IAtom atom)", "full_signature": "@Override public IAtom getOther(IAtom atom)", "class_method_signature": "DebugBond.getOther(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IAtom atom)", "full_signature": "@Override public boolean contains(IAtom atom)", "class_method_signature": "DebugBond.contains(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "setAtom", "parameters": "(IAtom atom, int position)", "modifiers": "@Override public", "return": "void", "signature": "void setAtom(IAtom atom, int position)", "full_signature": "@Override public void setAtom(IAtom atom, int position)", "class_method_signature": "DebugBond.setAtom(IAtom atom, int position)", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "Order", "signature": "Order getOrder()", "full_signature": "@Override public Order getOrder()", "class_method_signature": "DebugBond.getOrder()", "testcase": false, "constructor": false}, {"identifier": "setOrder", "parameters": "(Order order)", "modifiers": "@Override public", "return": "void", "signature": "void setOrder(Order order)", "full_signature": "@Override public void setOrder(Order order)", "class_method_signature": "DebugBond.setOrder(Order order)", "testcase": false, "constructor": false}, {"identifier": "getStereo", "parameters": "()", "modifiers": "@Override public", "return": "IBond.Stereo", "signature": "IBond.Stereo getStereo()", "full_signature": "@Override public IBond.Stereo getStereo()", "class_method_signature": "DebugBond.getStereo()", "testcase": false, "constructor": false}, {"identifier": "setStereo", "parameters": "(IBond.Stereo stereo)", "modifiers": "@Override public", "return": "void", "signature": "void setStereo(IBond.Stereo stereo)", "full_signature": "@Override public void setStereo(IBond.Stereo stereo)", "class_method_signature": "DebugBond.setStereo(IBond.Stereo stereo)", "testcase": false, "constructor": false}, {"identifier": "get2DCenter", "parameters": "()", "modifiers": "@Override public", "return": "Point2d", "signature": "Point2d get2DCenter()", "full_signature": "@Override public Point2d get2DCenter()", "class_method_signature": "DebugBond.get2DCenter()", "testcase": false, "constructor": false}, {"identifier": "get3DCenter", "parameters": "()", "modifiers": "@Override public", "return": "Point3d", "signature": "Point3d get3DCenter()", "full_signature": "@Override public Point3d get3DCenter()", "class_method_signature": "DebugBond.get3DCenter()", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean compare(Object object)", "full_signature": "@Override public boolean compare(Object object)", "class_method_signature": "DebugBond.compare(Object object)", "testcase": false, "constructor": false}, {"identifier": "isConnectedTo", "parameters": "(IBond bond)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isConnectedTo(IBond bond)", "full_signature": "@Override public boolean isConnectedTo(IBond bond)", "class_method_signature": "DebugBond.isConnectedTo(IBond bond)", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugBond.java"}, "focal_method": {"identifier": "DebugBond", "parameters": "()", "modifiers": "public", "return": "", "body": "public DebugBond() {\n        super();\n    }", "signature": " DebugBond()", "full_signature": "public  DebugBond()", "class_method_signature": "DebugBond.DebugBond()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}