{"test_class": {"identifier": "SystemContentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RepositoryConfiguration config;", "modifier": "private", "type": "RepositoryConfiguration", "declarator": "config", "var_name": "config"}, {"original_string": "private JcrRepository repository;", "modifier": "private", "type": "JcrRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private SystemContent system;", "modifier": "private", "type": "SystemContent", "declarator": "system", "var_name": "system"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/SystemContentTest.java"}, "test_case": {"identifier": "shouldStoreNodeTypeDefinitionsInSystemCatalog", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldStoreNodeTypeDefinitionsInSystemCatalog() {\n        Collection<JcrNodeType> nodeTypes = repository.nodeTypeManager().getNodeTypes().getAllNodeTypes();\n        for (int i = 0; i != 3; ++i) {\n            system.store(nodeTypes, true);\n            assertThat(repository.nodeTypeManager().refreshFromSystem(), is(true));\n        }\n    }", "signature": "void shouldStoreNodeTypeDefinitionsInSystemCatalog()", "full_signature": "@Test public void shouldStoreNodeTypeDefinitionsInSystemCatalog()", "class_method_signature": "SystemContentTest.shouldStoreNodeTypeDefinitionsInSystemCatalog()", "testcase": true, "constructor": false, "invocations": ["getAllNodeTypes", "getNodeTypes", "nodeTypeManager", "store", "assertThat", "refreshFromSystem", "nodeTypeManager", "is"]}, "focal_class": {"identifier": "SystemContent", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String GENERATED_PREFIX = \"ns\";", "modifier": "public static final", "type": "String", "declarator": "GENERATED_PREFIX = \"ns\"", "var_name": "GENERATED_PREFIX"}, {"original_string": "private static final Name GENERATED_NAMESPACE_NODE_NAME = new BasicName(\"\", GENERATED_PREFIX);", "modifier": "private static final", "type": "Name", "declarator": "GENERATED_NAMESPACE_NODE_NAME = new BasicName(\"\", GENERATED_PREFIX)", "var_name": "GENERATED_NAMESPACE_NODE_NAME"}, {"original_string": "protected static final Pattern GENERATED_PREFIX_PATTERN = Pattern.compile(\"ns(\\\\d{3})\");", "modifier": "protected static final", "type": "Pattern", "declarator": "GENERATED_PREFIX_PATTERN = Pattern.compile(\"ns(\\\\d{3})\")", "var_name": "GENERATED_PREFIX_PATTERN"}, {"original_string": "private static final Set<Name> NON_EXTENDED_PROPERTIES = Collections.unmodifiableSet(JcrLexicon.PRIMARY_TYPE,\n                                                                                         JcrLexicon.MIXIN_TYPES,\n                                                                                         ModeShapeLexicon.KIND,\n                                                                                         ModeShapeLexicon.WORKSPACES,\n                                                                                         JcrLexicon.DESCRIPTION);", "modifier": "private static final", "type": "Set<Name>", "declarator": "NON_EXTENDED_PROPERTIES = Collections.unmodifiableSet(JcrLexicon.PRIMARY_TYPE,\n                                                                                         JcrLexicon.MIXIN_TYPES,\n                                                                                         ModeShapeLexicon.KIND,\n                                                                                         ModeShapeLexicon.WORKSPACES,\n                                                                                         JcrLexicon.DESCRIPTION)", "var_name": "NON_EXTENDED_PROPERTIES"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(SystemContent.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(SystemContent.class)", "var_name": "LOGGER"}, {"original_string": "private final SessionCache system;", "modifier": "private final", "type": "SessionCache", "declarator": "system", "var_name": "system"}, {"original_string": "private NodeKey systemKey;", "modifier": "private", "type": "NodeKey", "declarator": "systemKey", "var_name": "systemKey"}, {"original_string": "private NodeKey nodeTypesKey;", "modifier": "private", "type": "NodeKey", "declarator": "nodeTypesKey", "var_name": "nodeTypesKey"}, {"original_string": "private NodeKey namespacesKey;", "modifier": "private", "type": "NodeKey", "declarator": "namespacesKey", "var_name": "namespacesKey"}, {"original_string": "private NodeKey locksKey;", "modifier": "private", "type": "NodeKey", "declarator": "locksKey", "var_name": "locksKey"}, {"original_string": "private NodeKey versionStorageKey;", "modifier": "private", "type": "NodeKey", "declarator": "versionStorageKey", "var_name": "versionStorageKey"}, {"original_string": "private NodeKey indexesKey;", "modifier": "private", "type": "NodeKey", "declarator": "indexesKey", "var_name": "indexesKey"}, {"original_string": "private final PropertyFactory propertyFactory;", "modifier": "private final", "type": "PropertyFactory", "declarator": "propertyFactory", "var_name": "propertyFactory"}, {"original_string": "private final ValueFactory<Boolean> booleans;", "modifier": "private final", "type": "ValueFactory<Boolean>", "declarator": "booleans", "var_name": "booleans"}, {"original_string": "private final ValueFactory<String> strings;", "modifier": "private final", "type": "ValueFactory<String>", "declarator": "strings", "var_name": "strings"}, {"original_string": "private final NameFactory names;", "modifier": "private final", "type": "NameFactory", "declarator": "names", "var_name": "names"}, {"original_string": "private final ReferenceFactory referenceFactory;", "modifier": "private final", "type": "ReferenceFactory", "declarator": "referenceFactory", "var_name": "referenceFactory"}, {"original_string": "private final ReferenceFactory weakReferenceFactory;", "modifier": "private final", "type": "ReferenceFactory", "declarator": "weakReferenceFactory", "var_name": "weakReferenceFactory"}, {"original_string": "private final javax.jcr.ValueFactory jcrValues;", "modifier": "private final", "type": "javax.jcr.ValueFactory", "declarator": "jcrValues", "var_name": "jcrValues"}], "methods": [{"identifier": "SystemContent", "parameters": "( SessionCache systemCache )", "modifiers": "", "return": "", "signature": " SystemContent( SessionCache systemCache )", "full_signature": "  SystemContent( SessionCache systemCache )", "class_method_signature": "SystemContent.SystemContent( SessionCache systemCache )", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void save()", "full_signature": "public void save()", "class_method_signature": "SystemContent.save()", "testcase": false, "constructor": false}, {"identifier": "context", "parameters": "()", "modifiers": "private final", "return": "ExecutionContext", "signature": "ExecutionContext context()", "full_signature": "private final ExecutionContext context()", "class_method_signature": "SystemContent.context()", "testcase": false, "constructor": false}, {"identifier": "cache", "parameters": "()", "modifiers": "public final", "return": "SessionCache", "signature": "SessionCache cache()", "full_signature": "public final SessionCache cache()", "class_method_signature": "SystemContent.cache()", "testcase": false, "constructor": false}, {"identifier": "systemKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey systemKey()", "full_signature": "public NodeKey systemKey()", "class_method_signature": "SystemContent.systemKey()", "testcase": false, "constructor": false}, {"identifier": "nodeTypesKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey nodeTypesKey()", "full_signature": "public NodeKey nodeTypesKey()", "class_method_signature": "SystemContent.nodeTypesKey()", "testcase": false, "constructor": false}, {"identifier": "indexesKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey indexesKey()", "full_signature": "public NodeKey indexesKey()", "class_method_signature": "SystemContent.indexesKey()", "testcase": false, "constructor": false}, {"identifier": "namespacesKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey namespacesKey()", "full_signature": "public NodeKey namespacesKey()", "class_method_signature": "SystemContent.namespacesKey()", "testcase": false, "constructor": false}, {"identifier": "locksKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey locksKey()", "full_signature": "public NodeKey locksKey()", "class_method_signature": "SystemContent.locksKey()", "testcase": false, "constructor": false}, {"identifier": "versionStorageKey", "parameters": "()", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey versionStorageKey()", "full_signature": "public NodeKey versionStorageKey()", "class_method_signature": "SystemContent.versionStorageKey()", "testcase": false, "constructor": false}, {"identifier": "systemNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode systemNode()", "full_signature": "public CachedNode systemNode()", "class_method_signature": "SystemContent.systemNode()", "testcase": false, "constructor": false}, {"identifier": "nodeTypesNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode nodeTypesNode()", "full_signature": "public CachedNode nodeTypesNode()", "class_method_signature": "SystemContent.nodeTypesNode()", "testcase": false, "constructor": false}, {"identifier": "namespacesNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode namespacesNode()", "full_signature": "public CachedNode namespacesNode()", "class_method_signature": "SystemContent.namespacesNode()", "testcase": false, "constructor": false}, {"identifier": "indexesNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode indexesNode()", "full_signature": "public CachedNode indexesNode()", "class_method_signature": "SystemContent.indexesNode()", "testcase": false, "constructor": false}, {"identifier": "locksNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode locksNode()", "full_signature": "public CachedNode locksNode()", "class_method_signature": "SystemContent.locksNode()", "testcase": false, "constructor": false}, {"identifier": "versionStorageNode", "parameters": "()", "modifiers": "public", "return": "CachedNode", "signature": "CachedNode versionStorageNode()", "full_signature": "public CachedNode versionStorageNode()", "class_method_signature": "SystemContent.versionStorageNode()", "testcase": false, "constructor": false}, {"identifier": "mutableNodeTypesNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableNodeTypesNode()", "full_signature": "public MutableCachedNode mutableNodeTypesNode()", "class_method_signature": "SystemContent.mutableNodeTypesNode()", "testcase": false, "constructor": false}, {"identifier": "mutableNamespacesNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableNamespacesNode()", "full_signature": "public MutableCachedNode mutableNamespacesNode()", "class_method_signature": "SystemContent.mutableNamespacesNode()", "testcase": false, "constructor": false}, {"identifier": "mutableIndexesNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableIndexesNode()", "full_signature": "public MutableCachedNode mutableIndexesNode()", "class_method_signature": "SystemContent.mutableIndexesNode()", "testcase": false, "constructor": false}, {"identifier": "mutableLocksNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableLocksNode()", "full_signature": "public MutableCachedNode mutableLocksNode()", "class_method_signature": "SystemContent.mutableLocksNode()", "testcase": false, "constructor": false}, {"identifier": "mutableVersionStorageNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableVersionStorageNode()", "full_signature": "public MutableCachedNode mutableVersionStorageNode()", "class_method_signature": "SystemContent.mutableVersionStorageNode()", "testcase": false, "constructor": false}, {"identifier": "mutableSystemNode", "parameters": "()", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode mutableSystemNode()", "full_signature": "public MutableCachedNode mutableSystemNode()", "class_method_signature": "SystemContent.mutableSystemNode()", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "modifiers": "public", "return": "void", "signature": "void store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "full_signature": "public void store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "class_method_signature": "SystemContent.store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( JcrNodeType nodeType,\n                       boolean updateExisting )", "modifiers": "public", "return": "void", "signature": "void store( JcrNodeType nodeType,\n                       boolean updateExisting )", "full_signature": "public void store( JcrNodeType nodeType,\n                       boolean updateExisting )", "class_method_signature": "SystemContent.store( JcrNodeType nodeType,\n                       boolean updateExisting )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( JcrNodeType nodeType,\n                        MutableCachedNode nodeTypes,\n                        boolean updateExisting )", "modifiers": "private", "return": "void", "signature": "void store( JcrNodeType nodeType,\n                        MutableCachedNode nodeTypes,\n                        boolean updateExisting )", "full_signature": "private void store( JcrNodeType nodeType,\n                        MutableCachedNode nodeTypes,\n                        boolean updateExisting )", "class_method_signature": "SystemContent.store( JcrNodeType nodeType,\n                        MutableCachedNode nodeTypes,\n                        boolean updateExisting )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( MutableCachedNode nodeTypeNode,\n                        JcrPropertyDefinition propertyDef )", "modifiers": "private", "return": "void", "signature": "void store( MutableCachedNode nodeTypeNode,\n                        JcrPropertyDefinition propertyDef )", "full_signature": "private void store( MutableCachedNode nodeTypeNode,\n                        JcrPropertyDefinition propertyDef )", "class_method_signature": "SystemContent.store( MutableCachedNode nodeTypeNode,\n                        JcrPropertyDefinition propertyDef )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( MutableCachedNode nodeTypeNode,\n                        JcrNodeDefinition childNodeDef )", "modifiers": "private", "return": "void", "signature": "void store( MutableCachedNode nodeTypeNode,\n                        JcrNodeDefinition childNodeDef )", "full_signature": "private void store( MutableCachedNode nodeTypeNode,\n                        JcrNodeDefinition childNodeDef )", "class_method_signature": "SystemContent.store( MutableCachedNode nodeTypeNode,\n                        JcrNodeDefinition childNodeDef )", "testcase": false, "constructor": false}, {"identifier": "readIndexDefinition", "parameters": "( CachedNode indexDefn,\n                                                Name providerName )", "modifiers": "public", "return": "IndexDefinition", "signature": "IndexDefinition readIndexDefinition( CachedNode indexDefn,\n                                                Name providerName )", "full_signature": "public IndexDefinition readIndexDefinition( CachedNode indexDefn,\n                                                Name providerName )", "class_method_signature": "SystemContent.readIndexDefinition( CachedNode indexDefn,\n                                                Name providerName )", "testcase": false, "constructor": false}, {"identifier": "readIndexColumnDefinition", "parameters": "( CachedNode indexColumnDefn )", "modifiers": "public", "return": "IndexColumnDefinition", "signature": "IndexColumnDefinition readIndexColumnDefinition( CachedNode indexColumnDefn )", "full_signature": "public IndexColumnDefinition readIndexColumnDefinition( CachedNode indexColumnDefn )", "class_method_signature": "SystemContent.readIndexColumnDefinition( CachedNode indexColumnDefn )", "testcase": false, "constructor": false}, {"identifier": "readAllIndexDefinitions", "parameters": "(Set<String> providerNames)", "modifiers": "public", "return": "List<IndexDefinition>", "signature": "List<IndexDefinition> readAllIndexDefinitions(Set<String> providerNames)", "full_signature": "public List<IndexDefinition> readAllIndexDefinitions(Set<String> providerNames)", "class_method_signature": "SystemContent.readAllIndexDefinitions(Set<String> providerNames)", "testcase": false, "constructor": false}, {"identifier": "nodeKey", "parameters": "( NodeKey prototype,\n                                   IndexDefinition defn )", "modifiers": "private final", "return": "NodeKey", "signature": "NodeKey nodeKey( NodeKey prototype,\n                                   IndexDefinition defn )", "full_signature": "private final NodeKey nodeKey( NodeKey prototype,\n                                   IndexDefinition defn )", "class_method_signature": "SystemContent.nodeKey( NodeKey prototype,\n                                   IndexDefinition defn )", "testcase": false, "constructor": false}, {"identifier": "nodeKey", "parameters": "( NodeKey indexDefnKey,\n                                   IndexColumnDefinition defn )", "modifiers": "private final", "return": "NodeKey", "signature": "NodeKey nodeKey( NodeKey indexDefnKey,\n                                   IndexColumnDefinition defn )", "full_signature": "private final NodeKey nodeKey( NodeKey indexDefnKey,\n                                   IndexColumnDefinition defn )", "class_method_signature": "SystemContent.nodeKey( NodeKey indexDefnKey,\n                                   IndexColumnDefinition defn )", "testcase": false, "constructor": false}, {"identifier": "nodeKey", "parameters": "( NodeKey prototype,\n                                   String providerName )", "modifiers": "private final", "return": "NodeKey", "signature": "NodeKey nodeKey( NodeKey prototype,\n                                   String providerName )", "full_signature": "private final NodeKey nodeKey( NodeKey prototype,\n                                   String providerName )", "class_method_signature": "SystemContent.nodeKey( NodeKey prototype,\n                                   String providerName )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( IndexDefinition indexDefn )", "modifiers": "public", "return": "void", "signature": "void remove( IndexDefinition indexDefn )", "full_signature": "public void remove( IndexDefinition indexDefn )", "class_method_signature": "SystemContent.remove( IndexDefinition indexDefn )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( IndexDefinition indexDefn, boolean updateExisting )", "modifiers": "protected", "return": "void", "signature": "void store( IndexDefinition indexDefn, boolean updateExisting )", "full_signature": "protected void store( IndexDefinition indexDefn, boolean updateExisting )", "class_method_signature": "SystemContent.store( IndexDefinition indexDefn, boolean updateExisting )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( IndexDefinition indexDefn,\n                        MutableCachedNode indexes,\n                        boolean updateExisting )", "modifiers": "private", "return": "void", "signature": "void store( IndexDefinition indexDefn,\n                        MutableCachedNode indexes,\n                        boolean updateExisting )", "full_signature": "private void store( IndexDefinition indexDefn,\n                        MutableCachedNode indexes,\n                        boolean updateExisting )", "class_method_signature": "SystemContent.store( IndexDefinition indexDefn,\n                        MutableCachedNode indexes,\n                        boolean updateExisting )", "testcase": false, "constructor": false}, {"identifier": "createProperty", "parameters": "( String name,\n                                     Object valueOrValues )", "modifiers": "private", "return": "Property", "signature": "Property createProperty( String name,\n                                     Object valueOrValues )", "full_signature": "private Property createProperty( String name,\n                                     Object valueOrValues )", "class_method_signature": "SystemContent.createProperty( String name,\n                                     Object valueOrValues )", "testcase": false, "constructor": false}, {"identifier": "propertyTypeOf", "parameters": "( Object[] values )", "modifiers": "private", "return": "PropertyType", "signature": "PropertyType propertyTypeOf( Object[] values )", "full_signature": "private PropertyType propertyTypeOf( Object[] values )", "class_method_signature": "SystemContent.propertyTypeOf( Object[] values )", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "( MutableCachedNode indexDefn,\n                           IndexColumnDefinition columnDefn )", "modifiers": "private", "return": "NodeKey", "signature": "NodeKey store( MutableCachedNode indexDefn,\n                           IndexColumnDefinition columnDefn )", "full_signature": "private NodeKey store( MutableCachedNode indexDefn,\n                           IndexColumnDefinition columnDefn )", "class_method_signature": "SystemContent.store( MutableCachedNode indexDefn,\n                           IndexColumnDefinition columnDefn )", "testcase": false, "constructor": false}, {"identifier": "readNodeTypes", "parameters": "( Set<Name> nodeTypesToRefresh )", "modifiers": "public", "return": "List<NodeTypeDefinition>", "signature": "List<NodeTypeDefinition> readNodeTypes( Set<Name> nodeTypesToRefresh )", "full_signature": "public List<NodeTypeDefinition> readNodeTypes( Set<Name> nodeTypesToRefresh )", "class_method_signature": "SystemContent.readNodeTypes( Set<Name> nodeTypesToRefresh )", "testcase": false, "constructor": false}, {"identifier": "readAllNodeTypes", "parameters": "()", "modifiers": "public", "return": "List<NodeTypeDefinition>", "signature": "List<NodeTypeDefinition> readAllNodeTypes()", "full_signature": "public List<NodeTypeDefinition> readAllNodeTypes()", "class_method_signature": "SystemContent.readAllNodeTypes()", "testcase": false, "constructor": false}, {"identifier": "readNodeTypeDefinition", "parameters": "( CachedNode nodeType )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "NodeTypeDefinition", "signature": "NodeTypeDefinition readNodeTypeDefinition( CachedNode nodeType )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public NodeTypeDefinition readNodeTypeDefinition( CachedNode nodeType )", "class_method_signature": "SystemContent.readNodeTypeDefinition( CachedNode nodeType )", "testcase": false, "constructor": false}, {"identifier": "readPropertyDefinition", "parameters": "( CachedNode propDefn )", "modifiers": "protected", "return": "PropertyDefinition", "signature": "PropertyDefinition readPropertyDefinition( CachedNode propDefn )", "full_signature": "protected PropertyDefinition readPropertyDefinition( CachedNode propDefn )", "class_method_signature": "SystemContent.readPropertyDefinition( CachedNode propDefn )", "testcase": false, "constructor": false}, {"identifier": "readChildNodeDefinition", "parameters": "( CachedNode childDefn )", "modifiers": "protected", "return": "NodeDefinition", "signature": "NodeDefinition readChildNodeDefinition( CachedNode childDefn )", "full_signature": "protected NodeDefinition readChildNodeDefinition( CachedNode childDefn )", "class_method_signature": "SystemContent.readChildNodeDefinition( CachedNode childDefn )", "testcase": false, "constructor": false}, {"identifier": "propertyType", "parameters": "( Object value )", "modifiers": "protected final", "return": "int", "signature": "int propertyType( Object value )", "full_signature": "protected final int propertyType( Object value )", "class_method_signature": "SystemContent.propertyType( Object value )", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "( CachedNode node,\n                                     Name propertyName )", "modifiers": "protected final", "return": "Iterable<?>", "signature": "Iterable<?> all( CachedNode node,\n                                     Name propertyName )", "full_signature": "protected final Iterable<?> all( CachedNode node,\n                                     Name propertyName )", "class_method_signature": "SystemContent.all( CachedNode node,\n                                     Name propertyName )", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "( CachedNode node,\n                                  Name propertyName )", "modifiers": "protected final", "return": "Object", "signature": "Object first( CachedNode node,\n                                  Name propertyName )", "full_signature": "protected final Object first( CachedNode node,\n                                  Name propertyName )", "class_method_signature": "SystemContent.first( CachedNode node,\n                                  Name propertyName )", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "( CachedNode node,\n                                  Name propertyName,\n                                  Object defaultValue )", "modifiers": "protected final", "return": "Object", "signature": "Object first( CachedNode node,\n                                  Name propertyName,\n                                  Object defaultValue )", "full_signature": "protected final Object first( CachedNode node,\n                                  Name propertyName,\n                                  Object defaultValue )", "class_method_signature": "SystemContent.first( CachedNode node,\n                                  Name propertyName,\n                                  Object defaultValue )", "testcase": false, "constructor": false}, {"identifier": "readAllNamespaces", "parameters": "()", "modifiers": "public", "return": "Collection<Namespace>", "signature": "Collection<Namespace> readAllNamespaces()", "full_signature": "public Collection<Namespace> readAllNamespaces()", "class_method_signature": "SystemContent.readAllNamespaces()", "testcase": false, "constructor": false}, {"identifier": "prefixFor", "parameters": "( Segment segment )", "modifiers": "private", "return": "String", "signature": "String prefixFor( Segment segment )", "full_signature": "private String prefixFor( Segment segment )", "class_method_signature": "SystemContent.prefixFor( Segment segment )", "testcase": false, "constructor": false}, {"identifier": "prefixFor", "parameters": "( String name,\n                              int counter )", "modifiers": "private", "return": "String", "signature": "String prefixFor( String name,\n                              int counter )", "full_signature": "private String prefixFor( String name,\n                              int counter )", "class_method_signature": "SystemContent.prefixFor( String name,\n                              int counter )", "testcase": false, "constructor": false}, {"identifier": "nameForPrefix", "parameters": "( String prefix )", "modifiers": "private", "return": "Name", "signature": "Name nameForPrefix( String prefix )", "full_signature": "private Name nameForPrefix( String prefix )", "class_method_signature": "SystemContent.nameForPrefix( String prefix )", "testcase": false, "constructor": false}, {"identifier": "registerNamespaces", "parameters": "( Map<String, String> newUrisByPrefix )", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> registerNamespaces( Map<String, String> newUrisByPrefix )", "full_signature": "public Set<String> registerNamespaces( Map<String, String> newUrisByPrefix )", "class_method_signature": "SystemContent.registerNamespaces( Map<String, String> newUrisByPrefix )", "testcase": false, "constructor": false}, {"identifier": "readNamespacePrefix", "parameters": "( String namespaceUri,\n                                       boolean generateIfMissing )", "modifiers": "public", "return": "String", "signature": "String readNamespacePrefix( String namespaceUri,\n                                       boolean generateIfMissing )", "full_signature": "public String readNamespacePrefix( String namespaceUri,\n                                       boolean generateIfMissing )", "class_method_signature": "SystemContent.readNamespacePrefix( String namespaceUri,\n                                       boolean generateIfMissing )", "testcase": false, "constructor": false}, {"identifier": "unregisterNamespace", "parameters": "( String namespaceUri )", "modifiers": "protected", "return": "boolean", "signature": "boolean unregisterNamespace( String namespaceUri )", "full_signature": "protected boolean unregisterNamespace( String namespaceUri )", "class_method_signature": "SystemContent.unregisterNamespace( String namespaceUri )", "testcase": false, "constructor": false}, {"identifier": "unregisterNodeTypes", "parameters": "( JcrNodeType... nodeTypes )", "modifiers": "protected", "return": "void", "signature": "void unregisterNodeTypes( JcrNodeType... nodeTypes )", "full_signature": "protected void unregisterNodeTypes( JcrNodeType... nodeTypes )", "class_method_signature": "SystemContent.unregisterNodeTypes( JcrNodeType... nodeTypes )", "testcase": false, "constructor": false}, {"identifier": "keyForNamespaceUri", "parameters": "( String namespaceUri )", "modifiers": "protected final", "return": "NodeKey", "signature": "NodeKey keyForNamespaceUri( String namespaceUri )", "full_signature": "protected final NodeKey keyForNamespaceUri( String namespaceUri )", "class_method_signature": "SystemContent.keyForNamespaceUri( String namespaceUri )", "testcase": false, "constructor": false}, {"identifier": "storeLock", "parameters": "( ModeShapeLock lock )", "modifiers": "", "return": "void", "signature": "void storeLock( ModeShapeLock lock )", "full_signature": " void storeLock( ModeShapeLock lock )", "class_method_signature": "SystemContent.storeLock( ModeShapeLock lock )", "testcase": false, "constructor": false}, {"identifier": "removeLock", "parameters": "( ModeShapeLock lock )", "modifiers": "", "return": "void", "signature": "void removeLock( ModeShapeLock lock )", "full_signature": " void removeLock( ModeShapeLock lock )", "class_method_signature": "SystemContent.removeLock( ModeShapeLock lock )", "testcase": false, "constructor": false}, {"identifier": "changeLockHeldBySession", "parameters": "( String lockToken,\n                                     boolean value )", "modifiers": "", "return": "boolean", "signature": "boolean changeLockHeldBySession( String lockToken,\n                                     boolean value )", "full_signature": " boolean changeLockHeldBySession( String lockToken,\n                                     boolean value )", "class_method_signature": "SystemContent.changeLockHeldBySession( String lockToken,\n                                     boolean value )", "testcase": false, "constructor": false}, {"identifier": "versionHistoryNodeKeyFor", "parameters": "( NodeKey versionableNodeKey )", "modifiers": "public", "return": "NodeKey", "signature": "NodeKey versionHistoryNodeKeyFor( NodeKey versionableNodeKey )", "full_signature": "public NodeKey versionHistoryNodeKeyFor( NodeKey versionableNodeKey )", "class_method_signature": "SystemContent.versionHistoryNodeKeyFor( NodeKey versionableNodeKey )", "testcase": false, "constructor": false}, {"identifier": "hasVersionHistory", "parameters": "( NodeKey versionableNodeKey )", "modifiers": "public", "return": "boolean", "signature": "boolean hasVersionHistory( NodeKey versionableNodeKey )", "full_signature": "public boolean hasVersionHistory( NodeKey versionableNodeKey )", "class_method_signature": "SystemContent.hasVersionHistory( NodeKey versionableNodeKey )", "testcase": false, "constructor": false}, {"identifier": "initializeVersionStorage", "parameters": "( NodeKey versionableNodeKey,\n                                                          NodeKey versionHistoryKey,\n                                                          NodeKey versionKey,\n                                                          Name primaryTypeName,\n                                                          Set<Name> mixinTypeNames,\n                                                          Path versionHistoryPath,\n                                                          NodeKey originalVersionKey,\n                                                          DateTime now )", "modifiers": "protected", "return": "MutableCachedNode", "signature": "MutableCachedNode initializeVersionStorage( NodeKey versionableNodeKey,\n                                                          NodeKey versionHistoryKey,\n                                                          NodeKey versionKey,\n                                                          Name primaryTypeName,\n                                                          Set<Name> mixinTypeNames,\n                                                          Path versionHistoryPath,\n                                                          NodeKey originalVersionKey,\n                                                          DateTime now )", "full_signature": "protected MutableCachedNode initializeVersionStorage( NodeKey versionableNodeKey,\n                                                          NodeKey versionHistoryKey,\n                                                          NodeKey versionKey,\n                                                          Name primaryTypeName,\n                                                          Set<Name> mixinTypeNames,\n                                                          Path versionHistoryPath,\n                                                          NodeKey originalVersionKey,\n                                                          DateTime now )", "class_method_signature": "SystemContent.initializeVersionStorage( NodeKey versionableNodeKey,\n                                                          NodeKey versionHistoryKey,\n                                                          NodeKey versionKey,\n                                                          Name primaryTypeName,\n                                                          Set<Name> mixinTypeNames,\n                                                          Path versionHistoryPath,\n                                                          NodeKey originalVersionKey,\n                                                          DateTime now )", "testcase": false, "constructor": false}, {"identifier": "recordNewVersion", "parameters": "( CachedNode versionableNode,\n                                               SessionCache cacheForVersionableNode,\n                                               Path versionHistoryPath,\n                                               NodeKey originalVersionKey,\n                                               Collection<Property> versionableProperties,\n                                               DateTime now,\n                                               AtomicReference<MutableCachedNode> frozenNodeOutput )", "modifiers": "public", "return": "MutableCachedNode", "signature": "MutableCachedNode recordNewVersion( CachedNode versionableNode,\n                                               SessionCache cacheForVersionableNode,\n                                               Path versionHistoryPath,\n                                               NodeKey originalVersionKey,\n                                               Collection<Property> versionableProperties,\n                                               DateTime now,\n                                               AtomicReference<MutableCachedNode> frozenNodeOutput )", "full_signature": "public MutableCachedNode recordNewVersion( CachedNode versionableNode,\n                                               SessionCache cacheForVersionableNode,\n                                               Path versionHistoryPath,\n                                               NodeKey originalVersionKey,\n                                               Collection<Property> versionableProperties,\n                                               DateTime now,\n                                               AtomicReference<MutableCachedNode> frozenNodeOutput )", "class_method_signature": "SystemContent.recordNewVersion( CachedNode versionableNode,\n                                               SessionCache cacheForVersionableNode,\n                                               Path versionHistoryPath,\n                                               NodeKey originalVersionKey,\n                                               Collection<Property> versionableProperties,\n                                               DateTime now,\n                                               AtomicReference<MutableCachedNode> frozenNodeOutput )", "testcase": false, "constructor": false}, {"identifier": "nextNameForVersionNode", "parameters": "( Property predecessors,\n                                           ChildReferences historyChildren )", "modifiers": "protected", "return": "Name", "signature": "Name nextNameForVersionNode( Property predecessors,\n                                           ChildReferences historyChildren )", "full_signature": "protected Name nextNameForVersionNode( Property predecessors,\n                                           ChildReferences historyChildren )", "class_method_signature": "SystemContent.nextNameForVersionNode( Property predecessors,\n                                           ChildReferences historyChildren )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/SystemContent.java"}, "focal_method": {"identifier": "store", "parameters": "( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "modifiers": "public", "return": "void", "body": "public void store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting ) {\n        MutableCachedNode nodeTypesNode = mutableNodeTypesNode();\n        Set<Name> names = new HashSet<Name>();\n        Set<NodeKey> keys = new HashSet<NodeKey>();\n        for (JcrNodeType nodeType : nodeTypes) {\n            if (!names.add(nodeType.getInternalName())) {\n                Logger.getLogger(getClass()).debug(\"Found duplicate node type: \" + nodeType);\n            }\n            if (!keys.add(nodeType.key())) {\n                Logger.getLogger(getClass()).debug(\"Found duplicate key: \" + nodeType);\n            }\n        }\n        for (JcrNodeType nodeType : nodeTypes) {\n            store(nodeType, nodeTypesNode, updateExisting);\n        }\n    }", "signature": "void store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "full_signature": "public void store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "class_method_signature": "SystemContent.store( Iterable<JcrNodeType> nodeTypes,\n                       boolean updateExisting )", "testcase": false, "constructor": false, "invocations": ["mutableNodeTypesNode", "add", "getInternalName", "debug", "getLogger", "getClass", "add", "key", "debug", "getLogger", "getClass", "store"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}