{"test_class": {"identifier": "SelectParserTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "web/api/src/test/java/leap/web/api/query/SelectParserTest.java"}, "test_case": {"identifier": "testSingle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSingle() {\n        Select select = SelectParser.parse(\"name\");\n        assertSingleSelect(select, \"name\", null, null);\n        select = SelectParser.parse(\"name n\");\n        assertSingleSelect(select, \"name\", \"n\", null);\n        select = SelectParser.parse(\"t.name\");\n        assertSingleSelect(select, \"name\", null, \"t\");\n        select = SelectParser.parse(\"t.name n\");\n        assertSingleSelect(select, \"name\", \"n\", \"t\");\n    }", "signature": "void testSingle()", "full_signature": "@Test public void testSingle()", "class_method_signature": "SelectParserTest.testSingle()", "testcase": true, "constructor": false, "invocations": ["parse", "assertSingleSelect", "parse", "assertSingleSelect", "parse", "assertSingleSelect", "parse", "assertSingleSelect"]}, "focal_class": {"identifier": "SelectParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SELETE = \"select\";", "modifier": "public static final", "type": "String", "declarator": "SELETE = \"select\"", "var_name": "SELETE"}], "methods": [{"identifier": "parse", "parameters": "(String expr)", "modifiers": "public static", "return": "Select", "signature": "Select parse(String expr)", "full_signature": "public static Select parse(String expr)", "class_method_signature": "SelectParser.parse(String expr)", "testcase": false, "constructor": false}], "file": "web/api/src/main/java/leap/web/api/query/SelectParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String expr)", "modifiers": "public static", "return": "Select", "body": "public static Select parse(String expr) {\n        List<Select.Item> items = new ArrayList<>();\n        Select.Item item;\n        String[] names = Strings.split(expr, ',');\n        for (String name : names) {\n            String[] parts = Strings.splitWhitespaces(name);\n            if (parts.length <= 2) {\n                String[] join = Strings.split(parts[0], \".\");\n                if (join.length == 1) {\n                    if (parts.length == 1) {\n                        item = new Select.Item(parts[0]);\n                    } else {\n                        item = new Select.Item(parts[0], parts[1]);\n                    }\n                } else if (join.length == 2) {\n                    if (parts.length == 1) {\n                        item = new Select.Item(join[1], null, join[0]);\n                    } else {\n                        item = new Select.Item(join[1], parts[1], join[0]);\n                    }\n                } else {\n                    throw new BadRequestException(\"Invalid join item '\" + parts[0] + \"'\");\n                }\n            } else {\n                throw new BadRequestException(\"Invalid select item '\" + name + \"'\");\n            }\n            items.add(item);\n        }\n        return new Select(items.toArray(new Select.Item[items.size()]));\n    }", "signature": "Select parse(String expr)", "full_signature": "public static Select parse(String expr)", "class_method_signature": "SelectParser.parse(String expr)", "testcase": false, "constructor": false, "invocations": ["split", "splitWhitespaces", "split", "add", "toArray", "size"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}