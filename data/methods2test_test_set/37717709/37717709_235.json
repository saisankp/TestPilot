{"test_class": {"identifier": "TestEventSubscription", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/event/TestEventSubscription.java"}, "test_case": {"identifier": "testGetSubscriber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSubscriber() {\n        final String type = \"test.dummy.event\";\n        final EventSubscriber subscriber = new MockEventSubscriber();\n        final EventSubscription subscription =\n                new EventSubscription(type, subscriber);\n        Assert.assertEquals(subscriber, subscription.getSubscriber());\n    }", "signature": "void testGetSubscriber()", "full_signature": "@Test public void testGetSubscriber()", "class_method_signature": "TestEventSubscription.testGetSubscriber()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSubscriber"]}, "focal_class": {"identifier": "EventSubscription", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String type;", "modifier": "private final", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private final EventSubscriber subscriber;", "modifier": "private final", "type": "EventSubscriber", "declarator": "subscriber", "var_name": "subscriber"}], "methods": [{"identifier": "EventSubscription", "parameters": "(final String eventType,\n            final EventSubscriber eventSubscriber)", "modifiers": "public", "return": "", "signature": " EventSubscription(final String eventType,\n            final EventSubscriber eventSubscriber)", "full_signature": "public  EventSubscription(final String eventType,\n            final EventSubscriber eventSubscriber)", "class_method_signature": "EventSubscription.EventSubscription(final String eventType,\n            final EventSubscriber eventSubscriber)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "EventSubscription.getType()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final String eventType)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(final String eventType)", "full_signature": "public boolean matches(final String eventType)", "class_method_signature": "EventSubscription.matches(final String eventType)", "testcase": false, "constructor": false}, {"identifier": "getSubscriber", "parameters": "()", "modifiers": "public", "return": "EventSubscriber", "signature": "EventSubscriber getSubscriber()", "full_signature": "public EventSubscriber getSubscriber()", "class_method_signature": "EventSubscription.getSubscriber()", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(final JVoiceXMLEvent event)", "modifiers": "public", "return": "void", "signature": "void publish(final JVoiceXMLEvent event)", "full_signature": "public void publish(final JVoiceXMLEvent event)", "class_method_signature": "EventSubscription.publish(final JVoiceXMLEvent event)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EventSubscription.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "EventSubscription.equals(final Object obj)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/event/EventSubscription.java"}, "focal_method": {"identifier": "getSubscriber", "parameters": "()", "modifiers": "public", "return": "EventSubscriber", "body": "public EventSubscriber getSubscriber() {\n        return subscriber;\n    }", "signature": "EventSubscriber getSubscriber()", "full_signature": "public EventSubscriber getSubscriber()", "class_method_signature": "EventSubscription.getSubscriber()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}