{"test_class": {"identifier": "ParticleTypeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    private ParticleType invalidParticleType = new ParticleType();", "modifier": "@Spy\n    private", "type": "ParticleType", "declarator": "invalidParticleType = new ParticleType()", "var_name": "invalidParticleType"}, {"original_string": "@Spy\n    private ParticleType particleType = new ParticleType();", "modifier": "@Spy\n    private", "type": "ParticleType", "declarator": "particleType = new ParticleType()", "var_name": "particleType"}], "file": "ParticleNativeAPI-api/src/test/java/com/github/fierioziy/particlenativeapi/api/types/ParticleTypeTest.java"}, "test_case": {"identifier": "test_packet_Pos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_packet_Pos() {\n        FakePacket target = new FakePacket(true,\n                2D, 3D, 4D,\n                0D, 0D, 0D,\n                0D, 1);\n\n        particleType.packet(true, target.getX(), target.getY(), target.getZ());\n\n        verifyArgumentPass(target);\n    }", "signature": "void test_packet_Pos()", "full_signature": "@Test public void test_packet_Pos()", "class_method_signature": "ParticleTypeTest.test_packet_Pos()", "testcase": true, "constructor": false, "invocations": ["packet", "getX", "getY", "getZ", "verifyArgumentPass"]}, "focal_class": {"identifier": "ParticleType", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "packet", "parameters": "(boolean far, Location loc)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Location loc)", "full_signature": "public Object packet(boolean far, Location loc)", "class_method_signature": "ParticleType.packet(boolean far, Location loc)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Vector loc)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Vector loc)", "full_signature": "public Object packet(boolean far, Vector loc)", "class_method_signature": "ParticleType.packet(boolean far, Vector loc)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, double x, double y, double z)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, double x, double y, double z)", "full_signature": "public Object packet(boolean far, double x, double y, double z)", "class_method_signature": "ParticleType.packet(boolean far, double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Location loc, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Location loc, int count)", "full_signature": "public Object packet(boolean far, Location loc, int count)", "class_method_signature": "ParticleType.packet(boolean far, Location loc, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Vector loc, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Vector loc, int count)", "full_signature": "public Object packet(boolean far, Vector loc, int count)", "class_method_signature": "ParticleType.packet(boolean far, Vector loc, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, double x, double y, double z, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, double x, double y, double z, int count)", "full_signature": "public Object packet(boolean far, double x, double y, double z, int count)", "class_method_signature": "ParticleType.packet(boolean far, double x, double y, double z, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Location loc, double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Location loc, double speed, int count)", "full_signature": "public Object packet(boolean far, Location loc, double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, Location loc, double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Vector loc, double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Vector loc, double speed, int count)", "full_signature": "public Object packet(boolean far, Vector loc, double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, Vector loc, double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, double x, double y, double z,\n                         double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, double x, double y, double z,\n                         double speed, int count)", "full_signature": "public Object packet(boolean far, double x, double y, double z,\n                         double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, double x, double y, double z,\n                         double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "full_signature": "public Object packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "class_method_signature": "ParticleType.packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "full_signature": "public Object packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "class_method_signature": "ParticleType.packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "full_signature": "public Object packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "class_method_signature": "ParticleType.packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "full_signature": "public Object packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, Location loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "full_signature": "public Object packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, Vector loc,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "modifiers": "public", "return": "Object", "signature": "Object packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "full_signature": "public Object packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, double x, double y, double z,\n                         double offsetX, double offsetY, double offsetZ,\n                         double speed, int count)", "testcase": false, "constructor": false}, {"identifier": "packet", "parameters": "(boolean far, float x, float  y, float z,\n                         float offsetX, float offsetY, float offsetZ,\n                         float speed, int count)", "modifiers": "@Deprecated public", "return": "Object", "signature": "Object packet(boolean far, float x, float  y, float z,\n                         float offsetX, float offsetY, float offsetZ,\n                         float speed, int count)", "full_signature": "@Deprecated public Object packet(boolean far, float x, float  y, float z,\n                         float offsetX, float offsetY, float offsetZ,\n                         float speed, int count)", "class_method_signature": "ParticleType.packet(boolean far, float x, float  y, float z,\n                         float offsetX, float offsetY, float offsetZ,\n                         float speed, int count)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "ParticleType.isValid()", "testcase": false, "constructor": false}], "file": "ParticleNativeAPI-api/src/main/java/com/github/fierioziy/particlenativeapi/api/types/ParticleType.java"}, "focal_method": {"identifier": "packet", "parameters": "(boolean far, Location loc)", "modifiers": "public", "return": "Object", "body": "public Object packet(boolean far, Location loc) {\n        return packet(far,\n                loc.getX(), loc.getY(), loc.getZ(),\n                0D,         0D,         0D,\n                0D, 1);\n    }", "signature": "Object packet(boolean far, Location loc)", "full_signature": "public Object packet(boolean far, Location loc)", "class_method_signature": "ParticleType.packet(boolean far, Location loc)", "testcase": false, "constructor": false, "invocations": ["packet", "getX", "getY", "getZ"]}, "repository": {"repo_id": 249420621, "url": "https://github.com/Fierioziy/ParticleNativeAPI", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 2068, "license": "licensed"}}