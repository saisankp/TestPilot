{"test_class": {"identifier": "ElectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Sha256Hash mockHash  = new Sha256Hash(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");", "modifier": "private", "type": "Sha256Hash", "declarator": "mockHash  = new Sha256Hash(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\")", "var_name": "mockHash"}], "file": "app/src/test/java/com/digitalvotingpass/electionchoice/ElectionTest.java"}, "test_case": {"identifier": "equalsActualEqual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void equalsActualEqual() throws Exception {\n        Election e1 = new Election(\"Delft\", \"Municipal election\", new Asset(\"G_Delft\", mockHash));\n        Election e2 = new Election(\"Delft\", \"Municipal election\", new Asset(\"G_Delft\", mockHash));\n        assertTrue(e1.equals(e2));\n    }", "signature": "void equalsActualEqual()", "full_signature": "@Test public void equalsActualEqual()", "class_method_signature": "ElectionTest.equalsActualEqual()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals"]}, "focal_class": {"identifier": "Election", "superclass": "", "interfaces": "", "fields": [{"original_string": "public String kind;", "modifier": "public", "type": "String", "declarator": "kind", "var_name": "kind"}, {"original_string": "public String place;", "modifier": "public", "type": "String", "declarator": "place", "var_name": "place"}, {"original_string": "public Asset asset;", "modifier": "public", "type": "Asset", "declarator": "asset", "var_name": "asset"}], "methods": [{"identifier": "Election", "parameters": "(String kind, String place, Asset asset)", "modifiers": "public", "return": "", "signature": " Election(String kind, String place, Asset asset)", "full_signature": "public  Election(String kind, String place, Asset asset)", "class_method_signature": "Election.Election(String kind, String place, Asset asset)", "testcase": false, "constructor": true}, {"identifier": "getKind", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKind()", "full_signature": "public String getKind()", "class_method_signature": "Election.getKind()", "testcase": false, "constructor": false}, {"identifier": "getPlace", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPlace()", "full_signature": "public String getPlace()", "class_method_signature": "Election.getPlace()", "testcase": false, "constructor": false}, {"identifier": "getAsset", "parameters": "()", "modifiers": "public", "return": "Asset", "signature": "Asset getAsset()", "full_signature": "public Asset getAsset()", "class_method_signature": "Election.getAsset()", "testcase": false, "constructor": false}, {"identifier": "parseElection", "parameters": "(Asset a, Context context)", "modifiers": "public static", "return": "Election", "signature": "Election parseElection(Asset a, Context context)", "full_signature": "public static Election parseElection(Asset a, Context context)", "class_method_signature": "Election.parseElection(Asset a, Context context)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Election.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Election.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Election.toString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/digitalvotingpass/electionchoice/Election.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object obj) {\n        if(obj instanceof Election) {\n            Election that = (Election) obj;\n            return this.getPlace().equals(that.getPlace()) &&\n                    this.getKind().equals(that.getKind()) &&\n                    this.getAsset().getName().equals(that.getAsset().getName());\n        } else {\n            return false;\n        }\n    }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Election.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "getPlace", "getPlace", "equals", "getKind", "getKind", "equals", "getName", "getAsset", "getName", "getAsset"]}, "repository": {"repo_id": 89679757, "url": "https://github.com/digital-voting-pass/polling-station-app", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 34, "size": 58794, "license": "licensed"}}