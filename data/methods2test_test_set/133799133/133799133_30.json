{"test_class": {"identifier": "TestEidasSaml", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_P12 = \"/eidassignertest.p12\";", "modifier": "private static final", "type": "String", "declarator": "TEST_P12 = \"/eidassignertest.p12\"", "var_name": "TEST_P12"}], "file": "eidas-starterkit/src/test/java/de/governikus/eumw/eidasstarterkit/TestEidasSaml.java"}, "test_case": {"identifier": "requestFromXMLfile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void requestFromXMLfile() throws IOException, CertificateException, XMLParserException,\n    UnmarshallingException, ErrorCodeException, InitializationException, ComponentInitializationException\n  {\n    String issuer = \"https://test/\";\n    String destination = \"test destination\";\n    String providerName = \"test providername\";\n    Map<EidasPersonAttributes, Boolean> requestedAttributes = new HashMap<>();\n    requestedAttributes.put(EidasNaturalPersonAttributes.BIRTH_NAME, true);\n    requestedAttributes.put(EidasNaturalPersonAttributes.CURRENT_ADDRESS, false);\n    requestedAttributes.put(EidasNaturalPersonAttributes.DATE_OF_BIRTH, true);\n    requestedAttributes.put(EidasNaturalPersonAttributes.FAMILY_NAME, false);\n    requestedAttributes.put(EidasNaturalPersonAttributes.FIRST_NAME, true);\n    requestedAttributes.put(EidasNaturalPersonAttributes.GENDER, true);\n    requestedAttributes.put(EidasNaturalPersonAttributes.PERSON_IDENTIFIER, true);\n    requestedAttributes.put(EidasNaturalPersonAttributes.PLACE_OF_BIRTH, false);\n    requestedAttributes.put(EidasLegalPersonAttributes.LEGAL_PERSON_IDENTIFIER, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.LEGAL_NAME, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.LEGAL_ADDRESS, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.VAT_REGISTRATION, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.TAX_REFERENCE, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.D2012_17_EU_IDENTIFIER, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.LEI, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.EORI, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.SEED, true);\n    requestedAttributes.put(EidasLegalPersonAttributes.SIC, true);\n    X509Certificate cert = Utils.readCert(TestEidasSaml.class.getResourceAsStream(\"/EidasSignerTest_x509.cer\"));\n    List<X509Certificate> authors = new ArrayList<>();\n    authors.add(cert);\n\n\n    byte[] request = Files.readAllBytes(Paths.get(\"src/test/resources/EidasSamlRequest_13062017.xml\"));\n\n\n    EidasRequest result = EidasSaml.parseRequest(new ByteArrayInputStream(request), authors);\n    assertEquals(issuer, result.getIssuer());\n    assertEquals(destination, result.getDestination());\n    assertEquals(providerName, result.getProviderName());\n    assertEquals(destination, result.getDestination());\n    assertEquals(requestedAttributes.size(), result.getRequestedAttributes().size());\n    for ( Map.Entry<EidasPersonAttributes, Boolean> entry : result.getRequestedAttributes() )\n    {\n      assertEquals(requestedAttributes.get(entry.getKey()), entry.getValue());\n    }\n  }", "signature": "void requestFromXMLfile()", "full_signature": "@Test public void requestFromXMLfile()", "class_method_signature": "TestEidasSaml.requestFromXMLfile()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "readCert", "getResourceAsStream", "add", "readAllBytes", "get", "parseRequest", "assertEquals", "getIssuer", "assertEquals", "getDestination", "assertEquals", "getProviderName", "assertEquals", "getDestination", "assertEquals", "size", "size", "getRequestedAttributes", "getRequestedAttributes", "assertEquals", "get", "getKey", "getValue"]}, "focal_class": {"identifier": "EidasSaml", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean isInit = false;", "modifier": "private static", "type": "boolean", "declarator": "isInit = false", "var_name": "isInit"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void init()", "full_signature": "public static synchronized void init()", "class_method_signature": "EidasSaml.init()", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "parseRequest", "parameters": "(InputStream is)", "modifiers": "public static", "return": "EidasRequest", "signature": "EidasRequest parseRequest(InputStream is)", "full_signature": "public static EidasRequest parseRequest(InputStream is)", "class_method_signature": "EidasSaml.parseRequest(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "parseRequest", "parameters": "(InputStream is, List<X509Certificate> authors)", "modifiers": "public static", "return": "EidasRequest", "signature": "EidasRequest parseRequest(InputStream is, List<X509Certificate> authors)", "full_signature": "public static EidasRequest parseRequest(InputStream is, List<X509Certificate> authors)", "class_method_signature": "EidasSaml.parseRequest(InputStream is, List<X509Certificate> authors)", "testcase": false, "constructor": false}, {"identifier": "verifyRequest", "parameters": "(EidasRequest request, List<X509Certificate> authors)", "modifiers": "public static", "return": "void", "signature": "void verifyRequest(EidasRequest request, List<X509Certificate> authors)", "full_signature": "public static void verifyRequest(EidasRequest request, List<X509Certificate> authors)", "class_method_signature": "EidasSaml.verifyRequest(EidasRequest request, List<X509Certificate> authors)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "full_signature": "public static byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "class_method_signature": "EidasSaml.createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "testcase": false, "constructor": false}, {"identifier": "parseResponse", "parameters": "(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "modifiers": "public static", "return": "EidasResponse", "signature": "EidasResponse parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "full_signature": "public static EidasResponse parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "class_method_signature": "EidasSaml.parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "testcase": false, "constructor": false}, {"identifier": "createMetaDataService", "parameters": "(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "full_signature": "public static byte[] createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "class_method_signature": "EidasSaml.createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "testcase": false, "constructor": false}, {"identifier": "parseMetaDataService", "parameters": "(InputStream is)", "modifiers": "static", "return": "EidasMetadataService", "signature": "EidasMetadataService parseMetaDataService(InputStream is)", "full_signature": "static EidasMetadataService parseMetaDataService(InputStream is)", "class_method_signature": "EidasSaml.parseMetaDataService(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "createMetaDataNode", "parameters": "(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "full_signature": "public static byte[] createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "class_method_signature": "EidasSaml.createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "testcase": false, "constructor": false}, {"identifier": "parseMetaDataNode", "parameters": "(InputStream is, X509Certificate signer)", "modifiers": "public static", "return": "EidasMetadataNode", "signature": "EidasMetadataNode parseMetaDataNode(InputStream is, X509Certificate signer)", "full_signature": "public static EidasMetadataNode parseMetaDataNode(InputStream is, X509Certificate signer)", "class_method_signature": "EidasSaml.parseMetaDataNode(InputStream is, X509Certificate signer)", "testcase": false, "constructor": false}, {"identifier": "validateXMLRequest", "parameters": "(InputStream is, boolean resetStreamAfterValidation)", "modifiers": "public static", "return": "void", "signature": "void validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "full_signature": "public static void validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "class_method_signature": "EidasSaml.validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "testcase": false, "constructor": false}, {"identifier": "EidasSaml", "parameters": "()", "modifiers": "private", "return": "", "signature": " EidasSaml()", "full_signature": "private  EidasSaml()", "class_method_signature": "EidasSaml.EidasSaml()", "testcase": false, "constructor": true}], "file": "eidas-starterkit/src/main/java/de/governikus/eumw/eidasstarterkit/EidasSaml.java"}, "focal_method": {"identifier": "parseRequest", "parameters": "(InputStream is)", "modifiers": "public static", "return": "EidasRequest", "body": "public static EidasRequest parseRequest(InputStream is) throws InitializationException, XMLParserException,\n    UnmarshallingException, ErrorCodeException, ComponentInitializationException\n  {\n    init();\n    return EidasRequest.parse(is);\n  }", "signature": "EidasRequest parseRequest(InputStream is)", "full_signature": "public static EidasRequest parseRequest(InputStream is)", "class_method_signature": "EidasSaml.parseRequest(InputStream is)", "testcase": false, "constructor": false, "invocations": ["init", "parse"]}, "repository": {"repo_id": 133799133, "url": "https://github.com/Governikus/eidas-middleware", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 15, "size": 2286, "license": "licensed"}}