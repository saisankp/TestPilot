{"test_class": {"identifier": "TsMonikerTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtss/src/test/java/ec/tss/TsMonikerTest.java"}, "test_case": {"identifier": "testHashcode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashcode() {\n        TsMoniker provided = TsMoniker.createProvidedMoniker(\"ABC\", \"123\");\n        assertThat(provided.hashCode())\n                .isEqualTo(TsMoniker.createProvidedMoniker(\"ABC\", \"123\").hashCode())\n                .isNotEqualTo(TsMoniker.createProvidedMoniker(\"ABC\", \"xxx\").hashCode())\n                .isNotEqualTo(TsMoniker.createProvidedMoniker(\"xxx\", \"123\").hashCode())\n                .isNotEqualTo(TsMoniker.createAnonymousMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createDynamicMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createProvidedMoniker(\"\", \"\").hashCode());\n\n        TsMoniker anonymous = TsMoniker.createAnonymousMoniker();\n        assertThat(anonymous.hashCode())\n                .isEqualTo(anonymous.hashCode())\n                .isNotEqualTo(TsMoniker.createAnonymousMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createDynamicMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createProvidedMoniker(\"\", \"\").hashCode());\n\n        TsMoniker dynamic = TsMoniker.createDynamicMoniker();\n        assertThat(dynamic.hashCode())\n                .isEqualTo(dynamic.hashCode())\n                .isNotEqualTo(TsMoniker.createAnonymousMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createDynamicMoniker().hashCode())\n                .isNotEqualTo(TsMoniker.createProvidedMoniker(\"\", \"\").hashCode());\n    }", "signature": "void testHashcode()", "full_signature": "@Test public void testHashcode()", "class_method_signature": "TsMonikerTest.testHashcode()", "testcase": true, "constructor": false, "invocations": ["createProvidedMoniker", "isNotEqualTo", "isNotEqualTo", "isNotEqualTo", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "hashCode", "hashCode", "createProvidedMoniker", "hashCode", "createProvidedMoniker", "hashCode", "createProvidedMoniker", "hashCode", "createAnonymousMoniker", "hashCode", "createDynamicMoniker", "hashCode", "createProvidedMoniker", "createAnonymousMoniker", "isNotEqualTo", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "hashCode", "hashCode", "hashCode", "createAnonymousMoniker", "hashCode", "createDynamicMoniker", "hashCode", "createProvidedMoniker", "createDynamicMoniker", "isNotEqualTo", "isNotEqualTo", "isNotEqualTo", "isEqualTo", "assertThat", "hashCode", "hashCode", "hashCode", "createAnonymousMoniker", "hashCode", "createDynamicMoniker", "hashCode", "createProvidedMoniker"]}, "focal_class": {"identifier": "TsMoniker", "superclass": "", "interfaces": "implements Comparable<TsMoniker>", "fields": [{"original_string": "@Nullable\n    private final String m_source;", "modifier": "@Nullable\n    private final", "type": "String", "declarator": "m_source", "var_name": "m_source"}, {"original_string": "@Nullable\n    private final String m_id;", "modifier": "@Nullable\n    private final", "type": "String", "declarator": "m_id", "var_name": "m_id"}, {"original_string": "@Nullable\n    private final UUID uuid;", "modifier": "@Nullable\n    private final", "type": "UUID", "declarator": "uuid", "var_name": "uuid"}], "methods": [{"identifier": "create", "parameters": "(@Nullable String source, @Nullable String id)", "modifiers": "@NonNull public static", "return": "TsMoniker", "signature": "TsMoniker create(@Nullable String source, @Nullable String id)", "full_signature": "@NonNull public static TsMoniker create(@Nullable String source, @Nullable String id)", "class_method_signature": "TsMoniker.create(@Nullable String source, @Nullable String id)", "testcase": false, "constructor": false}, {"identifier": "createAnonymousMoniker", "parameters": "()", "modifiers": "@NonNull public static", "return": "TsMoniker", "signature": "TsMoniker createAnonymousMoniker()", "full_signature": "@NonNull public static TsMoniker createAnonymousMoniker()", "class_method_signature": "TsMoniker.createAnonymousMoniker()", "testcase": false, "constructor": false}, {"identifier": "createDynamicMoniker", "parameters": "()", "modifiers": "@NonNull public static", "return": "TsMoniker", "signature": "TsMoniker createDynamicMoniker()", "full_signature": "@NonNull public static TsMoniker createDynamicMoniker()", "class_method_signature": "TsMoniker.createDynamicMoniker()", "testcase": false, "constructor": false}, {"identifier": "createProvidedMoniker", "parameters": "(@NonNull String source, @NonNull String id)", "modifiers": "@NonNull public static", "return": "TsMoniker", "signature": "TsMoniker createProvidedMoniker(@NonNull String source, @NonNull String id)", "full_signature": "@NonNull public static TsMoniker createProvidedMoniker(@NonNull String source, @NonNull String id)", "class_method_signature": "TsMoniker.createProvidedMoniker(@NonNull String source, @NonNull String id)", "testcase": false, "constructor": false}, {"identifier": "ofInternal", "parameters": "(boolean dynamic, @NonNull UUID uuid)", "modifiers": "@Internal static", "return": "TsMoniker", "signature": "TsMoniker ofInternal(boolean dynamic, @NonNull UUID uuid)", "full_signature": "@Internal static TsMoniker ofInternal(boolean dynamic, @NonNull UUID uuid)", "class_method_signature": "TsMoniker.ofInternal(boolean dynamic, @NonNull UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "TsMoniker", "parameters": "(String m_source, String m_id, UUID uuid)", "modifiers": "private", "return": "", "signature": " TsMoniker(String m_source, String m_id, UUID uuid)", "full_signature": "private  TsMoniker(String m_source, String m_id, UUID uuid)", "class_method_signature": "TsMoniker.TsMoniker(String m_source, String m_id, UUID uuid)", "testcase": false, "constructor": true}, {"identifier": "TsMoniker", "parameters": "()", "modifiers": "@Deprecated public", "return": "", "signature": " TsMoniker()", "full_signature": "@Deprecated public  TsMoniker()", "class_method_signature": "TsMoniker.TsMoniker()", "testcase": false, "constructor": true}, {"identifier": "TsMoniker", "parameters": "(@NonNull String source, @NonNull String id)", "modifiers": "public", "return": "", "signature": " TsMoniker(@NonNull String source, @NonNull String id)", "full_signature": "public  TsMoniker(@NonNull String source, @NonNull String id)", "class_method_signature": "TsMoniker.TsMoniker(@NonNull String source, @NonNull String id)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getId()", "full_signature": "@Nullable public String getId()", "class_method_signature": "TsMoniker.getId()", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getSource()", "full_signature": "@Nullable public String getSource()", "class_method_signature": "TsMoniker.getSource()", "testcase": false, "constructor": false}, {"identifier": "getUuid", "parameters": "()", "modifiers": "@Internal", "return": "UUID", "signature": "UUID getUuid()", "full_signature": "@Internal UUID getUuid()", "class_method_signature": "TsMoniker.getUuid()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@NonNull public", "return": "Type", "signature": "Type getType()", "full_signature": "@NonNull public Type getType()", "class_method_signature": "TsMoniker.getType()", "testcase": false, "constructor": false}, {"identifier": "isAnonymous", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean isAnonymous()", "full_signature": "@Deprecated public boolean isAnonymous()", "class_method_signature": "TsMoniker.isAnonymous()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TsMoniker.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(TsMoniker other)", "modifiers": "private", "return": "boolean", "signature": "boolean equals(TsMoniker other)", "full_signature": "private boolean equals(TsMoniker other)", "class_method_signature": "TsMoniker.equals(TsMoniker other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TsMoniker.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TsMoniker.toString()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(TsMoniker o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(TsMoniker o)", "full_signature": "@Override public int compareTo(TsMoniker o)", "class_method_signature": "TsMoniker.compareTo(TsMoniker o)", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/tss/TsMoniker.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        switch (getType()) {\n            case ANONYMOUS:\n            case DYNAMIC:\n                return uuid.hashCode();\n            case PROVIDED:\n                return 0 ^ m_source.hashCode() ^ m_id.hashCode();\n            default:\n                throw new RuntimeException();\n        }\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TsMoniker.hashCode()", "testcase": false, "constructor": false, "invocations": ["getType", "hashCode", "hashCode", "hashCode"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}