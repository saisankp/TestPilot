{"test_class": {"identifier": "KieModuleDeploymentHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static Logger logger = LoggerFactory.getLogger(KieModuleDeploymentHelperTest.class);", "modifier": "protected static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KieModuleDeploymentHelperTest.class)", "var_name": "logger"}, {"original_string": "private ZipInputStream zip;", "modifier": "private", "type": "ZipInputStream", "declarator": "zip", "var_name": "zip"}], "file": "kie-ci/src/test/java/org/kie/api/builder/helper/KieModuleDeploymentHelperTest.java"}, "test_case": {"identifier": "testFluentDeploymentHelper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFluentDeploymentHelper() throws Exception {\n        int numFiles = 0;\n        int numDirs = 0;\n        \n        FluentKieModuleDeploymentHelper deploymentHelper = KieModuleDeploymentHelper.newFluentInstance();\n\n        String groupId = \"org.kie.api.builder.fluent\";\n        String artifactId = \"test-kjar\";\n        String version = \"0.1-SNAPSHOT\";\n        deploymentHelper = deploymentHelper.setGroupId(groupId)\n                .setArtifactId(artifactId)\n                .setVersion(version)\n                .addResourceFilePath(\"builder/test/\", \"builder/simple_query_test.drl\")\n                .addResourceFilePath(\"/META-INF/WorkDefinitions.conf\") // from the drools-core jar\n                .addClass(KieModuleDeploymentHelperTest.class)\n                .addClass(KieModule.class)\n                .addClass(Cheese.class);\n        // class dirs\n        numDirs += 5; // org.kie.api.builder.helper\n        numDirs += 2; // (org.)drools.compiler\n        \n        // pom.xml, pom.properties\n        numFiles += 3;\n        // kmodule.xml, kmodule.info\n        numFiles += 2;\n        // kbase.cache x 2\n        numFiles += 2;\n        // drl files\n        numFiles += 2;\n        // WorkDefinitions\n        ++numFiles;\n        // classes\n        numFiles += 3;\n        \n        // META-INF/maven/org.kie.api.builder/test-kjar\n        numDirs += 4;\n        // defaultKiebase, META-INF/defaultKieBase\n        numDirs += 2;\n        \n        KieBaseModel kbaseModel = deploymentHelper.getKieModuleModel().newKieBaseModel(\"otherKieBase\");\n        kbaseModel.setEqualsBehavior(EqualityBehaviorOption.EQUALITY).setEventProcessingMode(EventProcessingOption.STREAM);\n        kbaseModel.newKieSessionModel(\"otherKieSession\").setClockType(ClockTypeOption.get(\"realtime\"));\n        // META-INF/otherKieBase\n        ++numDirs;\n\n        deploymentHelper.getKieModuleModel().getKieBaseModels().get(\"defaultKieBase\").newKieSessionModel(\"secondKieSession\");\n\n        deploymentHelper.createKieJarAndDeployToMaven();\n\n        File artifactFile = MavenRepository.getMavenRepository().resolveArtifact(groupId + \":\" + artifactId + \":\" + version).getFile();\n        zip = new ZipInputStream(new FileInputStream(artifactFile));\n\n        Set<String> jarFiles = new HashSet<String>();\n        Set<String> jarDirs = new HashSet<String>();\n        ZipEntry ze = zip.getNextEntry();\n        logger.debug(\"Getting files form deployed jar: \");\n        while( ze != null ) { \n            String fileName = ze.getName();\n            if( fileName.endsWith(\"drl\")\n                    || fileName.endsWith(\"class\")\n                    || fileName.endsWith(\"tst\")\n                    || fileName.endsWith(\"conf\")\n                    || fileName.endsWith(\"xml\")\n                    || fileName.endsWith(\"info\")\n                    || fileName.endsWith(\"properties\")\n                    || fileName.endsWith(\"cache\") ) { \n                jarFiles.add(fileName);\n                logger.debug(\"> \" + fileName);\n            } else { \n                jarDirs.add(fileName);\n                logger.debug(\"] \" + fileName);\n            }\n            ze = zip.getNextEntry();\n        }\n        assertEquals(\"Num files in kjar\", numFiles, jarFiles.size());\n    }", "signature": "void testFluentDeploymentHelper()", "full_signature": "@Test public void testFluentDeploymentHelper()", "class_method_signature": "KieModuleDeploymentHelperTest.testFluentDeploymentHelper()", "testcase": true, "constructor": false, "invocations": ["newFluentInstance", "addClass", "addClass", "addClass", "addResourceFilePath", "addResourceFilePath", "setVersion", "setArtifactId", "setGroupId", "newKieBaseModel", "getKieModuleModel", "setEventProcessingMode", "setEqualsBehavior", "setClockType", "newKieSessionModel", "get", "newKieSessionModel", "get", "getKieBaseModels", "getKieModuleModel", "createKieJarAndDeployToMaven", "getFile", "resolveArtifact", "getMavenRepository", "getNextEntry", "debug", "getName", "endsWith", "endsWith", "endsWith", "endsWith", "endsWith", "endsWith", "endsWith", "endsWith", "add", "debug", "add", "debug", "getNextEntry", "assertEquals", "size"]}, "focal_class": {"identifier": "KieModuleDeploymentHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "newFluentInstance", "parameters": "()", "modifiers": "public static final", "return": "FluentKieModuleDeploymentHelper", "signature": "FluentKieModuleDeploymentHelper newFluentInstance()", "full_signature": "public static final FluentKieModuleDeploymentHelper newFluentInstance()", "class_method_signature": "KieModuleDeploymentHelper.newFluentInstance()", "testcase": false, "constructor": false}, {"identifier": "newSingleInstance", "parameters": "()", "modifiers": "public static final", "return": "SingleKieModuleDeploymentHelper", "signature": "SingleKieModuleDeploymentHelper newSingleInstance()", "full_signature": "public static final SingleKieModuleDeploymentHelper newSingleInstance()", "class_method_signature": "KieModuleDeploymentHelper.newSingleInstance()", "testcase": false, "constructor": false}], "file": "kie-ci/src/main/java/org/kie/api/builder/helper/KieModuleDeploymentHelper.java"}, "focal_method": {"identifier": "newFluentInstance", "parameters": "()", "modifiers": "public static final", "return": "FluentKieModuleDeploymentHelper", "body": "public static final FluentKieModuleDeploymentHelper newFluentInstance() { \n        return new KieModuleDeploymentHelperImpl();\n    }", "signature": "FluentKieModuleDeploymentHelper newFluentInstance()", "full_signature": "public static final FluentKieModuleDeploymentHelper newFluentInstance()", "class_method_signature": "KieModuleDeploymentHelper.newFluentInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}