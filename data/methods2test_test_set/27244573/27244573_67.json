{"test_class": {"identifier": "SurvexImporterTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/thirdparty/survex/SurvexImporterTest.java"}, "test_case": {"identifier": "testBasicImportRecordsPromotions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBasicImportRecordsPromotions() throws Exception {\n        final String testContent =\n                \"1\\t2\\t5.0\\t0.0\\t0.0\\t; {from: 5.0 0.0 0.0, 5.0 0.0 0.0, 5.0 0.0 0.0}\";\n        Survey survey = new Survey(\"Test\");\n        SurvexImporter.parse(testContent, survey);\n        Leg leg = survey.getOrigin().getConnectedOnwardLegs().get(0);\n        Assert.assertEquals(3, leg.getPromotedFrom().length);\n    }", "signature": "void testBasicImportRecordsPromotions()", "full_signature": "@Test public void testBasicImportRecordsPromotions()", "class_method_signature": "SurvexImporterTest.testBasicImportRecordsPromotions()", "testcase": true, "constructor": false, "invocations": ["parse", "get", "getConnectedOnwardLegs", "getOrigin", "assertEquals", "getPromotedFrom"]}, "focal_class": {"identifier": "SurvexImporter", "superclass": "extends Importer", "interfaces": "", "fields": [{"original_string": "public static final Pattern COMMENT_INSTRUCTION_REGEX = Pattern.compile(\"(\\\\{.*?\\\\})\");", "modifier": "public static final", "type": "Pattern", "declarator": "COMMENT_INSTRUCTION_REGEX = Pattern.compile(\"(\\\\{.*?\\\\})\")", "var_name": "COMMENT_INSTRUCTION_REGEX"}], "methods": [{"identifier": "toSurvey", "parameters": "(File file)", "modifiers": "@Override public", "return": "Survey", "signature": "Survey toSurvey(File file)", "full_signature": "@Override public Survey toSurvey(File file)", "class_method_signature": "SurvexImporter.toSurvey(File file)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String text, Survey survey)", "modifiers": "public static", "return": "void", "signature": "void parse(String text, Survey survey)", "full_signature": "public static void parse(String text, Survey survey)", "class_method_signature": "SurvexImporter.parse(String text, Survey survey)", "testcase": false, "constructor": false}, {"identifier": "addLegToSurvey", "parameters": "(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "modifiers": "private static", "return": "void", "signature": "void addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "full_signature": "private static void addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "class_method_signature": "SurvexImporter.addLegToSurvey(\n            Survey survey, Map<String, Station> nameToStation, String[] fields, String comment)", "testcase": false, "constructor": false}, {"identifier": "retrieveOrCreateStation", "parameters": "(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "modifiers": "private static", "return": "Station", "signature": "Station retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "full_signature": "private static Station retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "class_method_signature": "SurvexImporter.retrieveOrCreateStation(Map<String, Station> nameToStation,\n                                                   String name, String comment)", "testcase": false, "constructor": false}, {"identifier": "extractCommentInstructions", "parameters": "(String comment)", "modifiers": "private static", "return": "String", "signature": "String extractCommentInstructions(String comment)", "full_signature": "private static String extractCommentInstructions(String comment)", "class_method_signature": "SurvexImporter.extractCommentInstructions(String comment)", "testcase": false, "constructor": false}, {"identifier": "parseAnyPromotedLegs", "parameters": "(String instructions)", "modifiers": "public static", "return": "Leg[]", "signature": "Leg[] parseAnyPromotedLegs(String instructions)", "full_signature": "public static Leg[] parseAnyPromotedLegs(String instructions)", "class_method_signature": "SurvexImporter.parseAnyPromotedLegs(String instructions)", "testcase": false, "constructor": false}, {"identifier": "canHandleFile", "parameters": "(File file)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandleFile(File file)", "full_signature": "@Override public boolean canHandleFile(File file)", "class_method_signature": "SurvexImporter.canHandleFile(File file)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/thirdparty/survex/SurvexImporter.java"}, "focal_method": {"identifier": "parse", "parameters": "(String text, Survey survey)", "modifiers": "public static", "return": "void", "body": "public static void parse(String text, Survey survey) throws Exception {\n\n        Map<String, Station> nameToStation = new HashMap<>();\n\n        String[] lines = text.split(\"\\n\");\n        for (String line : lines) {\n\n            String trimmed = line.trim();\n            if (trimmed.equals(\"\") || trimmed.startsWith(\";\") || trimmed.startsWith(\"*\")) {\n                continue;\n            }\n\n            try {\n                String comment = \"\";\n                if (line.contains(\";\")) {\n                    comment = line.substring(line.indexOf(\";\") + 1).trim();\n                }\n\n                String[] fields = line.trim().split(\"\\\\s+\");\n                addLegToSurvey(survey, nameToStation, fields, comment);\n\n            } catch (Exception exception) {\n                throw new Exception(\"Error importing this line: \" + line);\n            }\n        }\n    }", "signature": "void parse(String text, Survey survey)", "full_signature": "public static void parse(String text, Survey survey)", "class_method_signature": "SurvexImporter.parse(String text, Survey survey)", "testcase": false, "constructor": false, "invocations": ["split", "trim", "equals", "startsWith", "startsWith", "contains", "trim", "substring", "indexOf", "split", "trim", "addLegToSurvey"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}