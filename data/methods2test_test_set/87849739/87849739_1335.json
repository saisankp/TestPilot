{"test_class": {"identifier": "NullFeatureTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_FEATURE_ID = \"Feature ID\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_FEATURE_ID = \"Feature ID\"", "var_name": "KNOWN_FEATURE_ID"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/NullFeatureTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithNullFeatureId", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void tryToCreateInstanceWithNullFeatureId() {\n        NullFeature.of(null);\n    }", "signature": "void tryToCreateInstanceWithNullFeatureId()", "full_signature": "@Test(expected = NullPointerException.class) public void tryToCreateInstanceWithNullFeatureId()", "class_method_signature": "NullFeatureTest.tryToCreateInstanceWithNullFeatureId()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "NullFeature", "superclass": "", "interfaces": "implements Feature", "fields": [{"original_string": "private final String featureId;", "modifier": "private final", "type": "String", "declarator": "featureId", "var_name": "featureId"}], "methods": [{"identifier": "NullFeature", "parameters": "(final String featureId)", "modifiers": "private", "return": "", "signature": " NullFeature(final String featureId)", "full_signature": "private  NullFeature(final String featureId)", "class_method_signature": "NullFeature.NullFeature(final String featureId)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final String featureId)", "modifiers": "public static", "return": "NullFeature", "signature": "NullFeature of(final String featureId)", "full_signature": "public static NullFeature of(final String featureId)", "class_method_signature": "NullFeature.of(final String featureId)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "NullFeature.getId()", "testcase": false, "constructor": false}, {"identifier": "getDefinition", "parameters": "()", "modifiers": "@Override public", "return": "Optional<FeatureDefinition>", "signature": "Optional<FeatureDefinition> getDefinition()", "full_signature": "@Override public Optional<FeatureDefinition> getDefinition()", "class_method_signature": "NullFeature.getDefinition()", "testcase": false, "constructor": false}, {"identifier": "setDefinition", "parameters": "(final FeatureDefinition featureDefinition)", "modifiers": "@Override public", "return": "Feature", "signature": "Feature setDefinition(final FeatureDefinition featureDefinition)", "full_signature": "@Override public Feature setDefinition(final FeatureDefinition featureDefinition)", "class_method_signature": "NullFeature.setDefinition(final FeatureDefinition featureDefinition)", "testcase": false, "constructor": false}, {"identifier": "removeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "Feature", "signature": "Feature removeDefinition()", "full_signature": "@Override public Feature removeDefinition()", "class_method_signature": "NullFeature.removeDefinition()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Optional<FeatureProperties>", "signature": "Optional<FeatureProperties> getProperties()", "full_signature": "@Override public Optional<FeatureProperties> getProperties()", "class_method_signature": "NullFeature.getProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(final FeatureProperties properties)", "modifiers": "@Override public", "return": "Feature", "signature": "Feature setProperties(final FeatureProperties properties)", "full_signature": "@Override public Feature setProperties(final FeatureProperties properties)", "class_method_signature": "NullFeature.setProperties(final FeatureProperties properties)", "testcase": false, "constructor": false}, {"identifier": "removeProperties", "parameters": "()", "modifiers": "@Override public", "return": "Feature", "signature": "Feature removeProperties()", "full_signature": "@Override public Feature removeProperties()", "class_method_signature": "NullFeature.removeProperties()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(final JsonPointer pointer)", "modifiers": "@Override public", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getProperty(final JsonPointer pointer)", "full_signature": "@Override public Optional<JsonValue> getProperty(final JsonPointer pointer)", "class_method_signature": "NullFeature.getProperty(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(final JsonPointer pointer, final JsonValue propertyValue)", "modifiers": "@Override public", "return": "Feature", "signature": "Feature setProperty(final JsonPointer pointer, final JsonValue propertyValue)", "full_signature": "@Override public Feature setProperty(final JsonPointer pointer, final JsonValue propertyValue)", "class_method_signature": "NullFeature.setProperty(final JsonPointer pointer, final JsonValue propertyValue)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(final JsonPointer pointer)", "modifiers": "@Override public", "return": "Feature", "signature": "Feature removeProperty(final JsonPointer pointer)", "full_signature": "@Override public Feature removeProperty(final JsonPointer pointer)", "class_method_signature": "NullFeature.removeProperty(final JsonPointer pointer)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson()", "full_signature": "@Override public JsonObject toJson()", "class_method_signature": "NullFeature.toJson()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "NullFeature.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "NullFeature.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public boolean equals(final Object o)", "class_method_signature": "NullFeature.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "NullFeature.toString()", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/NullFeature.java"}, "focal_method": {"identifier": "of", "parameters": "(final String featureId)", "modifiers": "public static", "return": "NullFeature", "body": "public static NullFeature of(final String featureId) {\n        ConditionChecker.checkNotNull(featureId, \"ID of the Feature\");\n\n        final Validator validator = NoControlCharactersNoSlashesValidator.getInstance(featureId);\n        if (!validator.isValid()) {\n            throw JsonKeyInvalidException.newBuilderWithDescription(featureId, validator.getReason().orElse(null))\n                    .build();\n        }\n        return new NullFeature(featureId);\n    }", "signature": "NullFeature of(final String featureId)", "full_signature": "public static NullFeature of(final String featureId)", "class_method_signature": "NullFeature.of(final String featureId)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getInstance", "isValid", "build", "newBuilderWithDescription", "orElse", "getReason"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}