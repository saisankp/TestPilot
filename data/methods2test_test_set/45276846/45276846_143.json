{"test_class": {"identifier": "TestServiceHost", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAINTENANCE_INTERVAL_MILLIS = 100;", "modifier": "private static final", "type": "int", "declarator": "MAINTENANCE_INTERVAL_MILLIS = 100", "var_name": "MAINTENANCE_INTERVAL_MILLIS"}, {"original_string": "private VerificationHost host;", "modifier": "private", "type": "VerificationHost", "declarator": "host", "var_name": "host"}, {"original_string": "public String testURI;", "modifier": "public", "type": "String", "declarator": "testURI", "var_name": "testURI"}, {"original_string": "public int requestCount = 1000;", "modifier": "public", "type": "int", "declarator": "requestCount = 1000", "var_name": "requestCount"}, {"original_string": "public int rateLimitedRequestCount = 10;", "modifier": "public", "type": "int", "declarator": "rateLimitedRequestCount = 10", "var_name": "rateLimitedRequestCount"}, {"original_string": "public int connectionCount = 32;", "modifier": "public", "type": "int", "declarator": "connectionCount = 32", "var_name": "connectionCount"}, {"original_string": "public long serviceCount = 10;", "modifier": "public", "type": "long", "declarator": "serviceCount = 10", "var_name": "serviceCount"}, {"original_string": "public int iterationCount = 1;", "modifier": "public", "type": "int", "declarator": "iterationCount = 1", "var_name": "iterationCount"}, {"original_string": "public long testDurationSeconds = 0;", "modifier": "public", "type": "long", "declarator": "testDurationSeconds = 0", "var_name": "testDurationSeconds"}, {"original_string": "public int indexFileThreshold = 100;", "modifier": "public", "type": "int", "declarator": "indexFileThreshold = 100", "var_name": "indexFileThreshold"}, {"original_string": "public long serviceCacheClearDelaySeconds = 2;", "modifier": "public", "type": "long", "declarator": "serviceCacheClearDelaySeconds = 2", "var_name": "serviceCacheClearDelaySeconds"}, {"original_string": "@Rule\n    public TemporaryFolder tmpFolder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmpFolder = new TemporaryFolder()", "var_name": "tmpFolder"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestServiceHost.java"}, "test_case": {"identifier": "registerForServiceAvailabilityTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void registerForServiceAvailabilityTimeout()\n            throws Throwable {\n        setUp(false);\n        int c = 10;\n        this.host.testStart(c);\n        // issue requests to service paths we know do not exist, but induce the automatic\n        // queuing behavior for service availability, by setting targetReplicated = true\n        for (int i = 0; i < c; i++) {\n            this.host.send(Operation\n                    .createGet(UriUtils.buildUri(this.host, UUID.randomUUID().toString()))\n                    .setExpiration(Utils.fromNowMicrosUtc(TimeUnit.SECONDS.toMicros(1)))\n                    .setCompletion(this.host.getExpectedFailureCompletion()));\n        }\n        this.host.testWait();\n    }", "signature": "void registerForServiceAvailabilityTimeout()", "full_signature": "@Test public void registerForServiceAvailabilityTimeout()", "class_method_signature": "TestServiceHost.registerForServiceAvailabilityTimeout()", "testcase": true, "constructor": false, "invocations": ["setUp", "testStart", "send", "setCompletion", "setExpiration", "createGet", "buildUri", "toString", "randomUUID", "fromNowMicrosUtc", "toMicros", "getExpectedFailureCompletion", "testWait"]}, "focal_class": {"identifier": "ServiceHost", "superclass": "", "interfaces": "implements ServiceRequestSender", "fields": [{"original_string": "protected static final LogFormatter LOG_FORMATTER = new LogFormatter();", "modifier": "protected static final", "type": "LogFormatter", "declarator": "LOG_FORMATTER = new LogFormatter()", "var_name": "LOG_FORMATTER"}, {"original_string": "protected static final LogFormatter COLOR_LOG_FORMATTER = new ColorLogFormatter();", "modifier": "protected static final", "type": "LogFormatter", "declarator": "COLOR_LOG_FORMATTER = new ColorLogFormatter()", "var_name": "COLOR_LOG_FORMATTER"}, {"original_string": "public static final String SERVICE_HOST_STATE_FILE = \"serviceHostState.json\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_HOST_STATE_FILE = \"serviceHostState.json\"", "var_name": "SERVICE_HOST_STATE_FILE"}, {"original_string": "public static final Double DEFAULT_PCT_MEMORY_LIMIT = 0.49;", "modifier": "public static final", "type": "Double", "declarator": "DEFAULT_PCT_MEMORY_LIMIT = 0.49", "var_name": "DEFAULT_PCT_MEMORY_LIMIT"}, {"original_string": "public static final Double DEFAULT_PCT_MEMORY_LIMIT_DOCUMENT_INDEX = 0.45;", "modifier": "public static final", "type": "Double", "declarator": "DEFAULT_PCT_MEMORY_LIMIT_DOCUMENT_INDEX = 0.45", "var_name": "DEFAULT_PCT_MEMORY_LIMIT_DOCUMENT_INDEX"}, {"original_string": "public static final Double DEFAULT_PCT_MEMORY_LIMIT_SERVICE_CONTEXT_INDEX = 0.01;", "modifier": "public static final", "type": "Double", "declarator": "DEFAULT_PCT_MEMORY_LIMIT_SERVICE_CONTEXT_INDEX = 0.01", "var_name": "DEFAULT_PCT_MEMORY_LIMIT_SERVICE_CONTEXT_INDEX"}, {"original_string": "public static final String LOOPBACK_ADDRESS = \"127.0.0.1\";", "modifier": "public static final", "type": "String", "declarator": "LOOPBACK_ADDRESS = \"127.0.0.1\"", "var_name": "LOOPBACK_ADDRESS"}, {"original_string": "public static final String LOCAL_HOST = LOOPBACK_ADDRESS;", "modifier": "public static final", "type": "String", "declarator": "LOCAL_HOST = LOOPBACK_ADDRESS", "var_name": "LOCAL_HOST"}, {"original_string": "public static final String DEFAULT_BIND_ADDRESS = ServiceHost.LOCAL_HOST;", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_BIND_ADDRESS = ServiceHost.LOCAL_HOST", "var_name": "DEFAULT_BIND_ADDRESS"}, {"original_string": "public static final int PORT_VALUE_HTTP_DEFAULT = 8000;", "modifier": "public static final", "type": "int", "declarator": "PORT_VALUE_HTTP_DEFAULT = 8000", "var_name": "PORT_VALUE_HTTP_DEFAULT"}, {"original_string": "public static final int PORT_VALUE_LISTENER_DISABLED = -1;", "modifier": "public static final", "type": "int", "declarator": "PORT_VALUE_LISTENER_DISABLED = -1", "var_name": "PORT_VALUE_LISTENER_DISABLED"}, {"original_string": "public static final int DEFAULT_PORT = PORT_VALUE_HTTP_DEFAULT;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_PORT = PORT_VALUE_HTTP_DEFAULT", "var_name": "DEFAULT_PORT"}, {"original_string": "public static final String ALL_INTERFACES = \"0.0.0.0\";", "modifier": "public static final", "type": "String", "declarator": "ALL_INTERFACES = \"0.0.0.0\"", "var_name": "ALL_INTERFACES"}, {"original_string": "public static final String ROOT_PATH = \"\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_PATH = \"\"", "var_name": "ROOT_PATH"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_STATS = \"/stats\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_STATS = \"/stats\"", "var_name": "SERVICE_URI_SUFFIX_STATS"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_SUBSCRIPTIONS = \"/subscriptions\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_SUBSCRIPTIONS = \"/subscriptions\"", "var_name": "SERVICE_URI_SUFFIX_SUBSCRIPTIONS"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_SYNCHRONIZATION = \"/synchronization\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_SYNCHRONIZATION = \"/synchronization\"", "var_name": "SERVICE_URI_SUFFIX_SYNCHRONIZATION"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_AVAILABLE = \"/available\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_AVAILABLE = \"/available\"", "var_name": "SERVICE_URI_SUFFIX_AVAILABLE"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_CONFIG = \"/config\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_CONFIG = \"/config\"", "var_name": "SERVICE_URI_SUFFIX_CONFIG"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_TEMPLATE = \"/template\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_TEMPLATE = \"/template\"", "var_name": "SERVICE_URI_SUFFIX_TEMPLATE"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_UI = \"/ui\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_UI = \"/ui\"", "var_name": "SERVICE_URI_SUFFIX_UI"}, {"original_string": "public static final String SERVICE_URI_SUFFIX_REPLICATION = \"/replication\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_URI_SUFFIX_REPLICATION = \"/replication\"", "var_name": "SERVICE_URI_SUFFIX_REPLICATION"}, {"original_string": "public static final String DCP_ENVIRONMENT_VAR_PREFIX = \"XENON_\";", "modifier": "public static final", "type": "String", "declarator": "DCP_ENVIRONMENT_VAR_PREFIX = \"XENON_\"", "var_name": "DCP_ENVIRONMENT_VAR_PREFIX"}, {"original_string": "public static final String GIT_COMMIT_PROPERTIES_RESOURCE_NAME = \"xenon.git.properties\";", "modifier": "public static final", "type": "String", "declarator": "GIT_COMMIT_PROPERTIES_RESOURCE_NAME = \"xenon.git.properties\"", "var_name": "GIT_COMMIT_PROPERTIES_RESOURCE_NAME"}, {"original_string": "public static final String GIT_COMMIT_SOURCE_PROPERTY_PREFIX = \"git.commit\";", "modifier": "public static final", "type": "String", "declarator": "GIT_COMMIT_SOURCE_PROPERTY_PREFIX = \"git.commit\"", "var_name": "GIT_COMMIT_SOURCE_PROPERTY_PREFIX"}, {"original_string": "public static final String GIT_COMMIT_SOURCE_PROPERTY_COMMIT_ID = GIT_COMMIT_SOURCE_PROPERTY_PREFIX\n            + \".id\";", "modifier": "public static final", "type": "String", "declarator": "GIT_COMMIT_SOURCE_PROPERTY_COMMIT_ID = GIT_COMMIT_SOURCE_PROPERTY_PREFIX\n            + \".id\"", "var_name": "GIT_COMMIT_SOURCE_PROPERTY_COMMIT_ID"}, {"original_string": "public static final String GIT_COMMIT_SOURCE_PROPERTY_COMMIT_TIME = GIT_COMMIT_SOURCE_PROPERTY_PREFIX\n            + \".time\";", "modifier": "public static final", "type": "String", "declarator": "GIT_COMMIT_SOURCE_PROPERTY_COMMIT_TIME = GIT_COMMIT_SOURCE_PROPERTY_PREFIX\n            + \".time\"", "var_name": "GIT_COMMIT_SOURCE_PROPERTY_COMMIT_TIME"}, {"original_string": "public static final String[] RESERVED_SERVICE_URI_PATHS = {\n            SERVICE_URI_SUFFIX_AVAILABLE,\n            SERVICE_URI_SUFFIX_SYNCHRONIZATION,\n            SERVICE_URI_SUFFIX_REPLICATION,\n            SERVICE_URI_SUFFIX_STATS,\n            SERVICE_URI_SUFFIX_SUBSCRIPTIONS,\n            SERVICE_URI_SUFFIX_UI,\n            SERVICE_URI_SUFFIX_CONFIG,\n            SERVICE_URI_SUFFIX_TEMPLATE };", "modifier": "public static final", "type": "String[]", "declarator": "RESERVED_SERVICE_URI_PATHS = {\n            SERVICE_URI_SUFFIX_AVAILABLE,\n            SERVICE_URI_SUFFIX_SYNCHRONIZATION,\n            SERVICE_URI_SUFFIX_REPLICATION,\n            SERVICE_URI_SUFFIX_STATS,\n            SERVICE_URI_SUFFIX_SUBSCRIPTIONS,\n            SERVICE_URI_SUFFIX_UI,\n            SERVICE_URI_SUFFIX_CONFIG,\n            SERVICE_URI_SUFFIX_TEMPLATE }", "var_name": "RESERVED_SERVICE_URI_PATHS"}, {"original_string": "static final Path DEFAULT_TMPDIR = Paths.get(System.getProperty(\"java.io.tmpdir\"));", "modifier": "static final", "type": "Path", "declarator": "DEFAULT_TMPDIR = Paths.get(System.getProperty(\"java.io.tmpdir\"))", "var_name": "DEFAULT_TMPDIR"}, {"original_string": "static final Path DEFAULT_SANDBOX = DEFAULT_TMPDIR.resolve(\"xenon\");", "modifier": "static final", "type": "Path", "declarator": "DEFAULT_SANDBOX = DEFAULT_TMPDIR.resolve(\"xenon\")", "var_name": "DEFAULT_SANDBOX"}, {"original_string": "static final Path DEFAULT_RESOURCE_SANDBOX_DIR = Paths.get(\"resources\");", "modifier": "static final", "type": "Path", "declarator": "DEFAULT_RESOURCE_SANDBOX_DIR = Paths.get(\"resources\")", "var_name": "DEFAULT_RESOURCE_SANDBOX_DIR"}, {"original_string": "private static final String DEFAULT_AUTO_BACKUP_DIR = \"auto-backup\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_AUTO_BACKUP_DIR = \"auto-backup\"", "var_name": "DEFAULT_AUTO_BACKUP_DIR"}, {"original_string": "public static final int DEFAULT_SERVICE_STATE_COST_BYTES = 4096;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SERVICE_STATE_COST_BYTES = 4096", "var_name": "DEFAULT_SERVICE_STATE_COST_BYTES"}, {"original_string": "public static final int DEFAULT_SERVICE_INSTANCE_COST_BYTES = 4096;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SERVICE_INSTANCE_COST_BYTES = 4096", "var_name": "DEFAULT_SERVICE_INSTANCE_COST_BYTES"}, {"original_string": "private static final boolean APPEND_PORT_TO_SANDBOX = XenonConfiguration.bool(\n            ServiceHost.class,\n            \"APPEND_PORT_TO_SANDBOX\",\n            true\n    );", "modifier": "private static final", "type": "boolean", "declarator": "APPEND_PORT_TO_SANDBOX = XenonConfiguration.bool(\n            ServiceHost.class,\n            \"APPEND_PORT_TO_SANDBOX\",\n            true\n    )", "var_name": "APPEND_PORT_TO_SANDBOX"}, {"original_string": "private static final boolean  ENABLE_REQUEST_LOGGING = XenonConfiguration.bool(\n            ServiceHost.class,\n            \"ENABLE_REQUEST_LOGGING\",\n            false\n    );", "modifier": "private static final", "type": "boolean", "declarator": "ENABLE_REQUEST_LOGGING = XenonConfiguration.bool(\n            ServiceHost.class,\n            \"ENABLE_REQUEST_LOGGING\",\n            false\n    )", "var_name": "ENABLE_REQUEST_LOGGING"}, {"original_string": "private static final int DEFAULT_NODEGROUP_REPLICATION_FACTOR = XenonConfiguration.integer(\n            ServiceHost.class,\n            \"REPLICATION_FACTOR\",\n            0\n    );", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_NODEGROUP_REPLICATION_FACTOR = XenonConfiguration.integer(\n            ServiceHost.class,\n            \"REPLICATION_FACTOR\",\n            0\n    )", "var_name": "DEFAULT_NODEGROUP_REPLICATION_FACTOR"}, {"original_string": "private static final int DEFAULT_NODEGROUP_REPLICATION_QUORUM = XenonConfiguration.integer(\n            ServiceHost.class,\n            \"REPLICATION_QUORUM\",\n            0\n    );", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_NODEGROUP_REPLICATION_QUORUM = XenonConfiguration.integer(\n            ServiceHost.class,\n            \"REPLICATION_QUORUM\",\n            0\n    )", "var_name": "DEFAULT_NODEGROUP_REPLICATION_QUORUM"}, {"original_string": "protected final Thread defaultShutdownHook = new Thread(() -> {\n        this.log(Level.WARNING, \"Host stopping ...\");\n        this.stop();\n        this.log(Level.WARNING, \"Host is stopped\");\n    });", "modifier": "protected final", "type": "Thread", "declarator": "defaultShutdownHook = new Thread(() -> {\n        this.log(Level.WARNING, \"Host stopping ...\");\n        this.stop();\n        this.log(Level.WARNING, \"Host is stopped\");\n    })", "var_name": "defaultShutdownHook"}, {"original_string": "private Logger logger = Logger.getLogger(getClass().getName());", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(getClass().getName())", "var_name": "logger"}, {"original_string": "private FileHandler handler;", "modifier": "private", "type": "FileHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private final Map<String, ServiceDocumentDescription> descriptionCache = new HashMap<>();", "modifier": "private final", "type": "Map<String, ServiceDocumentDescription>", "declarator": "descriptionCache = new HashMap<>()", "var_name": "descriptionCache"}, {"original_string": "private final Map<String, ServiceDocumentDescription> descriptionCachePerFactoryLink = new HashMap<>();", "modifier": "private final", "type": "Map<String, ServiceDocumentDescription>", "declarator": "descriptionCachePerFactoryLink = new HashMap<>()", "var_name": "descriptionCachePerFactoryLink"}, {"original_string": "private final ServiceDocumentDescription.Builder descriptionBuilder = Builder.create();", "modifier": "private final", "type": "ServiceDocumentDescription.Builder", "declarator": "descriptionBuilder = Builder.create()", "var_name": "descriptionBuilder"}, {"original_string": "private ExecutorService executor;", "modifier": "private", "type": "ExecutorService", "declarator": "executor", "var_name": "executor"}, {"original_string": "private ForkJoinPool executorPool;", "modifier": "private", "type": "ForkJoinPool", "declarator": "executorPool", "var_name": "executorPool"}, {"original_string": "private ScheduledExecutorService scheduledExecutor;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "scheduledExecutor", "var_name": "scheduledExecutor"}, {"original_string": "private ScheduledThreadPoolExecutor scheduledExecutorPool;", "modifier": "private", "type": "ScheduledThreadPoolExecutor", "declarator": "scheduledExecutorPool", "var_name": "scheduledExecutorPool"}, {"original_string": "private final ConcurrentHashMap<String, AttachedServiceInfo> attachedServices = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentHashMap<String, AttachedServiceInfo>", "declarator": "attachedServices = new ConcurrentHashMap<>()", "var_name": "attachedServices"}, {"original_string": "private final ConcurrentSkipListMap<String, Service> attachedNamespaceServices = new ConcurrentSkipListMap<>();", "modifier": "private final", "type": "ConcurrentSkipListMap<String, Service>", "declarator": "attachedNamespaceServices = new ConcurrentSkipListMap<>()", "var_name": "attachedNamespaceServices"}, {"original_string": "private final ConcurrentSkipListSet<String> coreServices = new ConcurrentSkipListSet<>();", "modifier": "private final", "type": "ConcurrentSkipListSet<String>", "declarator": "coreServices = new ConcurrentSkipListSet<>()", "var_name": "coreServices"}, {"original_string": "private final ConcurrentHashMap<String, Class<? extends Service>> privilegedServiceTypes = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentHashMap<String, Class<? extends Service>>", "declarator": "privilegedServiceTypes = new ConcurrentHashMap<>()", "var_name": "privilegedServiceTypes"}, {"original_string": "private final Set<String> pendingServiceDeletions = Collections\n            .synchronizedSet(new HashSet<String>());", "modifier": "private final", "type": "Set<String>", "declarator": "pendingServiceDeletions = Collections\n            .synchronizedSet(new HashSet<String>())", "var_name": "pendingServiceDeletions"}, {"original_string": "private final Tracer otTracer;", "modifier": "private final", "type": "Tracer", "declarator": "otTracer", "var_name": "otTracer"}, {"original_string": "private OperationProcessingChain opProcessingChain;", "modifier": "private", "type": "OperationProcessingChain", "declarator": "opProcessingChain", "var_name": "opProcessingChain"}, {"original_string": "private AuthorizationFilter authorizationFilter;", "modifier": "private", "type": "AuthorizationFilter", "declarator": "authorizationFilter", "var_name": "authorizationFilter"}, {"original_string": "private ServiceHostState state;", "modifier": "private", "type": "ServiceHostState", "declarator": "state", "var_name": "state"}, {"original_string": "private Service documentIndexService;", "modifier": "private", "type": "Service", "declarator": "documentIndexService", "var_name": "documentIndexService"}, {"original_string": "private Service authorizationService;", "modifier": "private", "type": "Service", "declarator": "authorizationService", "var_name": "authorizationService"}, {"original_string": "private Service transactionService;", "modifier": "private", "type": "Service", "declarator": "transactionService", "var_name": "transactionService"}, {"original_string": "private Service managementService;", "modifier": "private", "type": "Service", "declarator": "managementService", "var_name": "managementService"}, {"original_string": "private Service authenticationService;", "modifier": "private", "type": "Service", "declarator": "authenticationService", "var_name": "authenticationService"}, {"original_string": "private Service basicAuthenticationService;", "modifier": "private", "type": "Service", "declarator": "basicAuthenticationService", "var_name": "basicAuthenticationService"}, {"original_string": "private SystemHostInfo info = new SystemHostInfo();", "modifier": "private", "type": "SystemHostInfo", "declarator": "info = new SystemHostInfo()", "var_name": "info"}, {"original_string": "private ServiceClient client;", "modifier": "private", "type": "ServiceClient", "declarator": "client", "var_name": "client"}, {"original_string": "private ServiceRequestListener httpListener;", "modifier": "private", "type": "ServiceRequestListener", "declarator": "httpListener", "var_name": "httpListener"}, {"original_string": "private ServiceRequestListener httpsListener;", "modifier": "private", "type": "ServiceRequestListener", "declarator": "httpsListener", "var_name": "httpsListener"}, {"original_string": "private URI documentIndexServiceUri;", "modifier": "private", "type": "URI", "declarator": "documentIndexServiceUri", "var_name": "documentIndexServiceUri"}, {"original_string": "private URI operationIndexServiceUri;", "modifier": "private", "type": "URI", "declarator": "operationIndexServiceUri", "var_name": "operationIndexServiceUri"}, {"original_string": "private URI authorizationServiceUri;", "modifier": "private", "type": "URI", "declarator": "authorizationServiceUri", "var_name": "authorizationServiceUri"}, {"original_string": "private URI transactionServiceUri;", "modifier": "private", "type": "URI", "declarator": "transactionServiceUri", "var_name": "transactionServiceUri"}, {"original_string": "private URI managementServiceUri;", "modifier": "private", "type": "URI", "declarator": "managementServiceUri", "var_name": "managementServiceUri"}, {"original_string": "private URI authenticationServiceUri;", "modifier": "private", "type": "URI", "declarator": "authenticationServiceUri", "var_name": "authenticationServiceUri"}, {"original_string": "private URI basicAuthenticationServiceUri;", "modifier": "private", "type": "URI", "declarator": "basicAuthenticationServiceUri", "var_name": "basicAuthenticationServiceUri"}, {"original_string": "private ScheduledFuture<?> maintenanceTask;", "modifier": "private", "type": "ScheduledFuture<?>", "declarator": "maintenanceTask", "var_name": "maintenanceTask"}, {"original_string": "private final ServiceSynchronizationTracker serviceSynchTracker = ServiceSynchronizationTracker\n            .create(this);", "modifier": "private final", "type": "ServiceSynchronizationTracker", "declarator": "serviceSynchTracker = ServiceSynchronizationTracker\n            .create(this)", "var_name": "serviceSynchTracker"}, {"original_string": "private final ServiceMaintenanceTracker serviceMaintTracker = ServiceMaintenanceTracker\n            .create(this);", "modifier": "private final", "type": "ServiceMaintenanceTracker", "declarator": "serviceMaintTracker = ServiceMaintenanceTracker\n            .create(this)", "var_name": "serviceMaintTracker"}, {"original_string": "private final ServiceResourceTracker serviceResourceTracker = ServiceResourceTracker\n            .create(this, this.attachedServices);", "modifier": "private final", "type": "ServiceResourceTracker", "declarator": "serviceResourceTracker = ServiceResourceTracker\n            .create(this, this.attachedServices)", "var_name": "serviceResourceTracker"}, {"original_string": "private final OperationTracker operationTracker = OperationTracker.create(this);", "modifier": "private final", "type": "OperationTracker", "declarator": "operationTracker = OperationTracker.create(this)", "var_name": "operationTracker"}, {"original_string": "private String hashedId;", "modifier": "private", "type": "String", "declarator": "hashedId", "var_name": "hashedId"}, {"original_string": "private String logPrefix;", "modifier": "private", "type": "String", "declarator": "logPrefix", "var_name": "logPrefix"}, {"original_string": "private URI cachedUri;", "modifier": "private", "type": "URI", "declarator": "cachedUri", "var_name": "cachedUri"}, {"original_string": "private String cachedPublicUriString;", "modifier": "private", "type": "String", "declarator": "cachedPublicUriString", "var_name": "cachedPublicUriString"}, {"original_string": "private Signer tokenSigner;", "modifier": "private", "type": "Signer", "declarator": "tokenSigner", "var_name": "tokenSigner"}, {"original_string": "private Verifier tokenVerifier;", "modifier": "private", "type": "Verifier", "declarator": "tokenVerifier", "var_name": "tokenVerifier"}, {"original_string": "private AuthorizationContext systemAuthorizationContext;", "modifier": "private", "type": "AuthorizationContext", "declarator": "systemAuthorizationContext", "var_name": "systemAuthorizationContext"}, {"original_string": "private AuthorizationContext guestAuthorizationContext;", "modifier": "private", "type": "AuthorizationContext", "declarator": "guestAuthorizationContext", "var_name": "guestAuthorizationContext"}, {"original_string": "private ScheduledExecutorService serviceScheduledExecutor;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "serviceScheduledExecutor", "var_name": "serviceScheduledExecutor"}, {"original_string": "private List<String> skipLoggingPragmaDirectives = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "skipLoggingPragmaDirectives = new ArrayList<>()", "var_name": "skipLoggingPragmaDirectives"}, {"original_string": "private ThreadLocal<SelectAndForwardRequest> selectOwnerRequests = ThreadLocal\n            .withInitial(SelectAndForwardRequest::new);", "modifier": "private", "type": "ThreadLocal<SelectAndForwardRequest>", "declarator": "selectOwnerRequests = ThreadLocal\n            .withInitial(SelectAndForwardRequest::new)", "var_name": "selectOwnerRequests"}], "methods": [{"identifier": "create", "parameters": "(String... args)", "modifiers": "public static", "return": "ServiceHost", "signature": "ServiceHost create(String... args)", "full_signature": "public static ServiceHost create(String... args)", "class_method_signature": "ServiceHost.create(String... args)", "testcase": false, "constructor": false}, {"identifier": "ServiceHost", "parameters": "()", "modifiers": "protected", "return": "", "signature": " ServiceHost()", "full_signature": "protected  ServiceHost()", "class_method_signature": "ServiceHost.ServiceHost()", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "(String[] args)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost initialize(String[] args)", "full_signature": "public ServiceHost initialize(String[] args)", "class_method_signature": "ServiceHost.initialize(String[] args)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(String[] args, Arguments hostArgs)", "modifiers": "protected", "return": "ServiceHost", "signature": "ServiceHost initialize(String[] args, Arguments hostArgs)", "full_signature": "protected ServiceHost initialize(String[] args, Arguments hostArgs)", "class_method_signature": "ServiceHost.initialize(String[] args, Arguments hostArgs)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(Arguments args)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost initialize(Arguments args)", "full_signature": "public ServiceHost initialize(Arguments args)", "class_method_signature": "ServiceHost.initialize(Arguments args)", "testcase": false, "constructor": false}, {"identifier": "constructOpProcessingChain", "parameters": "()", "modifiers": "protected", "return": "OperationProcessingChain", "signature": "OperationProcessingChain constructOpProcessingChain()", "full_signature": "protected OperationProcessingChain constructOpProcessingChain()", "class_method_signature": "ServiceHost.constructOpProcessingChain()", "testcase": false, "constructor": false}, {"identifier": "allocateExecutors", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void allocateExecutors()", "full_signature": "private void allocateExecutors()", "class_method_signature": "ServiceHost.allocateExecutors()", "testcase": false, "constructor": false}, {"identifier": "getJWTSecret", "parameters": "()", "modifiers": "protected", "return": "byte[]", "signature": "byte[] getJWTSecret()", "full_signature": "protected byte[] getJWTSecret()", "class_method_signature": "ServiceHost.getJWTSecret()", "testcase": false, "constructor": false}, {"identifier": "initializeStateFromArguments", "parameters": "(File s, Arguments args)", "modifiers": "private", "return": "void", "signature": "void initializeStateFromArguments(File s, Arguments args)", "full_signature": "private void initializeStateFromArguments(File s, Arguments args)", "class_method_signature": "ServiceHost.initializeStateFromArguments(File s, Arguments args)", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocation()", "full_signature": "public String getLocation()", "class_method_signature": "ServiceHost.getLocation()", "testcase": false, "constructor": false}, {"identifier": "setLocation", "parameters": "(String location)", "modifiers": "public", "return": "void", "signature": "void setLocation(String location)", "full_signature": "public void setLocation(String location)", "class_method_signature": "ServiceHost.setLocation(String location)", "testcase": false, "constructor": false}, {"identifier": "getScheduledExecutorPool", "parameters": "()", "modifiers": "", "return": "ScheduledThreadPoolExecutor", "signature": "ScheduledThreadPoolExecutor getScheduledExecutorPool()", "full_signature": " ScheduledThreadPoolExecutor getScheduledExecutorPool()", "class_method_signature": "ServiceHost.getScheduledExecutorPool()", "testcase": false, "constructor": false}, {"identifier": "getExecutorPool", "parameters": "()", "modifiers": "", "return": "ForkJoinPool", "signature": "ForkJoinPool getExecutorPool()", "full_signature": " ForkJoinPool getExecutorPool()", "class_method_signature": "ServiceHost.getExecutorPool()", "testcase": false, "constructor": false}, {"identifier": "configureLogging", "parameters": "(File storageSandboxDir)", "modifiers": "protected", "return": "void", "signature": "void configureLogging(File storageSandboxDir)", "full_signature": "protected void configureLogging(File storageSandboxDir)", "class_method_signature": "ServiceHost.configureLogging(File storageSandboxDir)", "testcase": false, "constructor": false}, {"identifier": "configureLoggerFormatter", "parameters": "(Logger logger)", "modifiers": "protected", "return": "void", "signature": "void configureLoggerFormatter(Logger logger)", "full_signature": "protected void configureLoggerFormatter(Logger logger)", "class_method_signature": "ServiceHost.configureLoggerFormatter(Logger logger)", "testcase": false, "constructor": false}, {"identifier": "removeLogging", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void removeLogging()", "full_signature": "protected void removeLogging()", "class_method_signature": "ServiceHost.removeLogging()", "testcase": false, "constructor": false}, {"identifier": "loadState", "parameters": "(URI storageSandbox, File s)", "modifiers": "private", "return": "void", "signature": "void loadState(URI storageSandbox, File s)", "full_signature": "private void loadState(URI storageSandbox, File s)", "class_method_signature": "ServiceHost.loadState(URI storageSandbox, File s)", "testcase": false, "constructor": false}, {"identifier": "saveState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void saveState()", "full_signature": "private void saveState()", "class_method_signature": "ServiceHost.saveState()", "testcase": false, "constructor": false}, {"identifier": "saveState", "parameters": "(File sandboxDir)", "modifiers": "private", "return": "void", "signature": "void saveState(File sandboxDir)", "full_signature": "private void saveState(File sandboxDir)", "class_method_signature": "ServiceHost.saveState(File sandboxDir)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ServiceHost.toString()", "testcase": false, "constructor": false}, {"identifier": "isStarted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStarted()", "full_signature": "public boolean isStarted()", "class_method_signature": "ServiceHost.isStarted()", "testcase": false, "constructor": false}, {"identifier": "isStopping", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStopping()", "full_signature": "public boolean isStopping()", "class_method_signature": "ServiceHost.isStopping()", "testcase": false, "constructor": false}, {"identifier": "isServiceStateCaching", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isServiceStateCaching()", "full_signature": "public boolean isServiceStateCaching()", "class_method_signature": "ServiceHost.isServiceStateCaching()", "testcase": false, "constructor": false}, {"identifier": "isTracingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTracingEnabled()", "full_signature": "public boolean isTracingEnabled()", "class_method_signature": "ServiceHost.isTracingEnabled()", "testcase": false, "constructor": false}, {"identifier": "setServiceStateCaching", "parameters": "(boolean enable)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setServiceStateCaching(boolean enable)", "full_signature": "public ServiceHost setServiceStateCaching(boolean enable)", "class_method_signature": "ServiceHost.setServiceStateCaching(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPort()", "full_signature": "public int getPort()", "class_method_signature": "ServiceHost.getPort()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(int port)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setPort(int port)", "full_signature": "public ServiceHost setPort(int port)", "class_method_signature": "ServiceHost.setPort(int port)", "testcase": false, "constructor": false}, {"identifier": "isAuthorizationEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAuthorizationEnabled()", "full_signature": "public boolean isAuthorizationEnabled()", "class_method_signature": "ServiceHost.isAuthorizationEnabled()", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationEnabled", "parameters": "(boolean isAuthorizationEnabled)", "modifiers": "public", "return": "void", "signature": "void setAuthorizationEnabled(boolean isAuthorizationEnabled)", "full_signature": "public void setAuthorizationEnabled(boolean isAuthorizationEnabled)", "class_method_signature": "ServiceHost.setAuthorizationEnabled(boolean isAuthorizationEnabled)", "testcase": false, "constructor": false}, {"identifier": "isPeerSynchronizationEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPeerSynchronizationEnabled()", "full_signature": "public boolean isPeerSynchronizationEnabled()", "class_method_signature": "ServiceHost.isPeerSynchronizationEnabled()", "testcase": false, "constructor": false}, {"identifier": "setPeerSynchronizationEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setPeerSynchronizationEnabled(boolean enabled)", "full_signature": "public void setPeerSynchronizationEnabled(boolean enabled)", "class_method_signature": "ServiceHost.setPeerSynchronizationEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "isRequestLoggingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRequestLoggingEnabled()", "full_signature": "public boolean isRequestLoggingEnabled()", "class_method_signature": "ServiceHost.isRequestLoggingEnabled()", "testcase": false, "constructor": false}, {"identifier": "getRequestLoggingInfo", "parameters": "()", "modifiers": "public", "return": "RequestLoggingInfo", "signature": "RequestLoggingInfo getRequestLoggingInfo()", "full_signature": "public RequestLoggingInfo getRequestLoggingInfo()", "class_method_signature": "ServiceHost.getRequestLoggingInfo()", "testcase": false, "constructor": false}, {"identifier": "getSkipLoggingPragmaDirectives", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSkipLoggingPragmaDirectives()", "full_signature": "public List<String> getSkipLoggingPragmaDirectives()", "class_method_signature": "ServiceHost.getSkipLoggingPragmaDirectives()", "testcase": false, "constructor": false}, {"identifier": "setRequestLoggingInfo", "parameters": "(RequestLoggingInfo loggingInfo)", "modifiers": "public", "return": "void", "signature": "void setRequestLoggingInfo(RequestLoggingInfo loggingInfo)", "full_signature": "public void setRequestLoggingInfo(RequestLoggingInfo loggingInfo)", "class_method_signature": "ServiceHost.setRequestLoggingInfo(RequestLoggingInfo loggingInfo)", "testcase": false, "constructor": false}, {"identifier": "getPeerSynchronizationTimeLimitSeconds", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPeerSynchronizationTimeLimitSeconds()", "full_signature": "public int getPeerSynchronizationTimeLimitSeconds()", "class_method_signature": "ServiceHost.getPeerSynchronizationTimeLimitSeconds()", "testcase": false, "constructor": false}, {"identifier": "setPeerSynchronizationTimeLimitSeconds", "parameters": "(int seconds)", "modifiers": "public", "return": "void", "signature": "void setPeerSynchronizationTimeLimitSeconds(int seconds)", "full_signature": "public void setPeerSynchronizationTimeLimitSeconds(int seconds)", "class_method_signature": "ServiceHost.setPeerSynchronizationTimeLimitSeconds(int seconds)", "testcase": false, "constructor": false}, {"identifier": "isAutoBackupEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAutoBackupEnabled()", "full_signature": "public boolean isAutoBackupEnabled()", "class_method_signature": "ServiceHost.isAutoBackupEnabled()", "testcase": false, "constructor": false}, {"identifier": "setAutoBackupEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setAutoBackupEnabled(boolean enabled)", "full_signature": "public void setAutoBackupEnabled(boolean enabled)", "class_method_signature": "ServiceHost.setAutoBackupEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "getSecurePort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSecurePort()", "full_signature": "public int getSecurePort()", "class_method_signature": "ServiceHost.getSecurePort()", "testcase": false, "constructor": false}, {"identifier": "setSecurePort", "parameters": "(int port)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setSecurePort(int port)", "full_signature": "public ServiceHost setSecurePort(int port)", "class_method_signature": "ServiceHost.setSecurePort(int port)", "testcase": false, "constructor": false}, {"identifier": "setPrivateKeyFileReference", "parameters": "(URI fileReference)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setPrivateKeyFileReference(URI fileReference)", "full_signature": "public ServiceHost setPrivateKeyFileReference(URI fileReference)", "class_method_signature": "ServiceHost.setPrivateKeyFileReference(URI fileReference)", "testcase": false, "constructor": false}, {"identifier": "setPrivateKeyPassphrase", "parameters": "(String privateKeyPassphrase)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setPrivateKeyPassphrase(String privateKeyPassphrase)", "full_signature": "public ServiceHost setPrivateKeyPassphrase(String privateKeyPassphrase)", "class_method_signature": "ServiceHost.setPrivateKeyPassphrase(String privateKeyPassphrase)", "testcase": false, "constructor": false}, {"identifier": "setCertificateFileReference", "parameters": "(URI fileReference)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setCertificateFileReference(URI fileReference)", "full_signature": "public ServiceHost setCertificateFileReference(URI fileReference)", "class_method_signature": "ServiceHost.setCertificateFileReference(URI fileReference)", "testcase": false, "constructor": false}, {"identifier": "setBindAddress", "parameters": "(String address)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setBindAddress(String address)", "full_signature": "public ServiceHost setBindAddress(String address)", "class_method_signature": "ServiceHost.setBindAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "setPublicUri", "parameters": "(URI publicUri)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setPublicUri(URI publicUri)", "full_signature": "public ServiceHost setPublicUri(URI publicUri)", "class_method_signature": "ServiceHost.setPublicUri(URI publicUri)", "testcase": false, "constructor": false}, {"identifier": "getStorageSandbox", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getStorageSandbox()", "full_signature": "public URI getStorageSandbox()", "class_method_signature": "ServiceHost.getStorageSandbox()", "testcase": false, "constructor": false}, {"identifier": "getMaintenanceIntervalMicros", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaintenanceIntervalMicros()", "full_signature": "public long getMaintenanceIntervalMicros()", "class_method_signature": "ServiceHost.getMaintenanceIntervalMicros()", "testcase": false, "constructor": false}, {"identifier": "getMaintenanceCheckIntervalMicros", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaintenanceCheckIntervalMicros()", "full_signature": "public long getMaintenanceCheckIntervalMicros()", "class_method_signature": "ServiceHost.getMaintenanceCheckIntervalMicros()", "testcase": false, "constructor": false}, {"identifier": "setMaintenanceIntervalMicros", "parameters": "(long micros)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setMaintenanceIntervalMicros(long micros)", "full_signature": "public ServiceHost setMaintenanceIntervalMicros(long micros)", "class_method_signature": "ServiceHost.setMaintenanceIntervalMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "setMaintenanceCheckIntervalMicros", "parameters": "(long intervalMicros)", "modifiers": "", "return": "ServiceHost", "signature": "ServiceHost setMaintenanceCheckIntervalMicros(long intervalMicros)", "full_signature": " ServiceHost setMaintenanceCheckIntervalMicros(long intervalMicros)", "class_method_signature": "ServiceHost.setMaintenanceCheckIntervalMicros(long intervalMicros)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "ServiceHost.getId()", "testcase": false, "constructor": false}, {"identifier": "nextUUID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nextUUID()", "full_signature": "public String nextUUID()", "class_method_signature": "ServiceHost.nextUUID()", "testcase": false, "constructor": false}, {"identifier": "getOperationTimeoutMicros", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getOperationTimeoutMicros()", "full_signature": "public long getOperationTimeoutMicros()", "class_method_signature": "ServiceHost.getOperationTimeoutMicros()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "public", "return": "ServiceHostState", "signature": "ServiceHostState getState()", "full_signature": "public ServiceHostState getState()", "class_method_signature": "ServiceHost.getState()", "testcase": false, "constructor": false}, {"identifier": "getStateNoCloning", "parameters": "()", "modifiers": "", "return": "ServiceHostState", "signature": "ServiceHostState getStateNoCloning()", "full_signature": " ServiceHostState getStateNoCloning()", "class_method_signature": "ServiceHost.getStateNoCloning()", "testcase": false, "constructor": false}, {"identifier": "getDocumentIndexService", "parameters": "()", "modifiers": "", "return": "Service", "signature": "Service getDocumentIndexService()", "full_signature": " Service getDocumentIndexService()", "class_method_signature": "ServiceHost.getDocumentIndexService()", "testcase": false, "constructor": false}, {"identifier": "getDocumentIndexServiceUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getDocumentIndexServiceUri()", "full_signature": "public URI getDocumentIndexServiceUri()", "class_method_signature": "ServiceHost.getDocumentIndexServiceUri()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationServiceUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getAuthorizationServiceUri()", "full_signature": "public URI getAuthorizationServiceUri()", "class_method_signature": "ServiceHost.getAuthorizationServiceUri()", "testcase": false, "constructor": false}, {"identifier": "getTransactionServiceUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getTransactionServiceUri()", "full_signature": "public URI getTransactionServiceUri()", "class_method_signature": "ServiceHost.getTransactionServiceUri()", "testcase": false, "constructor": false}, {"identifier": "getManagementServiceUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getManagementServiceUri()", "full_signature": "public URI getManagementServiceUri()", "class_method_signature": "ServiceHost.getManagementServiceUri()", "testcase": false, "constructor": false}, {"identifier": "setDocumentIndexingService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setDocumentIndexingService(Service service)", "full_signature": "public ServiceHost setDocumentIndexingService(Service service)", "class_method_signature": "ServiceHost.setDocumentIndexingService(Service service)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setAuthorizationService(Service service)", "full_signature": "public ServiceHost setAuthorizationService(Service service)", "class_method_signature": "ServiceHost.setAuthorizationService(Service service)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationService", "parameters": "()", "modifiers": "", "return": "Service", "signature": "Service getAuthorizationService()", "full_signature": " Service getAuthorizationService()", "class_method_signature": "ServiceHost.getAuthorizationService()", "testcase": false, "constructor": false}, {"identifier": "setTransactionService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setTransactionService(Service service)", "full_signature": "public ServiceHost setTransactionService(Service service)", "class_method_signature": "ServiceHost.setTransactionService(Service service)", "testcase": false, "constructor": false}, {"identifier": "setManagementService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setManagementService(Service service)", "full_signature": "public ServiceHost setManagementService(Service service)", "class_method_signature": "ServiceHost.setManagementService(Service service)", "testcase": false, "constructor": false}, {"identifier": "getManagementService", "parameters": "()", "modifiers": "", "return": "Service", "signature": "Service getManagementService()", "full_signature": " Service getManagementService()", "class_method_signature": "ServiceHost.getManagementService()", "testcase": false, "constructor": false}, {"identifier": "getServiceResourceTracker", "parameters": "()", "modifiers": "", "return": "ServiceResourceTracker", "signature": "ServiceResourceTracker getServiceResourceTracker()", "full_signature": " ServiceResourceTracker getServiceResourceTracker()", "class_method_signature": "ServiceHost.getServiceResourceTracker()", "testcase": false, "constructor": false}, {"identifier": "getOperationTracker", "parameters": "()", "modifiers": "", "return": "OperationTracker", "signature": "OperationTracker getOperationTracker()", "full_signature": " OperationTracker getOperationTracker()", "class_method_signature": "ServiceHost.getOperationTracker()", "testcase": false, "constructor": false}, {"identifier": "setAuthenticationService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setAuthenticationService(Service service)", "full_signature": "public ServiceHost setAuthenticationService(Service service)", "class_method_signature": "ServiceHost.setAuthenticationService(Service service)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationService", "parameters": "()", "modifiers": "", "return": "Service", "signature": "Service getAuthenticationService()", "full_signature": " Service getAuthenticationService()", "class_method_signature": "ServiceHost.getAuthenticationService()", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationServiceUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getAuthenticationServiceUri()", "full_signature": "public URI getAuthenticationServiceUri()", "class_method_signature": "ServiceHost.getAuthenticationServiceUri()", "testcase": false, "constructor": false}, {"identifier": "setBasicAuthenticationService", "parameters": "(Service service)", "modifiers": "private", "return": "ServiceHost", "signature": "ServiceHost setBasicAuthenticationService(Service service)", "full_signature": "private ServiceHost setBasicAuthenticationService(Service service)", "class_method_signature": "ServiceHost.setBasicAuthenticationService(Service service)", "testcase": false, "constructor": false}, {"identifier": "getBasicAuthenticationServiceUri", "parameters": "()", "modifiers": "", "return": "URI", "signature": "URI getBasicAuthenticationServiceUri()", "full_signature": " URI getBasicAuthenticationServiceUri()", "class_method_signature": "ServiceHost.getBasicAuthenticationServiceUri()", "testcase": false, "constructor": false}, {"identifier": "getScheduledExecutor", "parameters": "()", "modifiers": "public", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService getScheduledExecutor()", "full_signature": "public ScheduledExecutorService getScheduledExecutor()", "class_method_signature": "ServiceHost.getScheduledExecutor()", "testcase": false, "constructor": false}, {"identifier": "getExecutor", "parameters": "()", "modifiers": "public", "return": "ExecutorService", "signature": "ExecutorService getExecutor()", "full_signature": "public ExecutorService getExecutor()", "class_method_signature": "ServiceHost.getExecutor()", "testcase": false, "constructor": false}, {"identifier": "allocateExecutor", "parameters": "(Service s)", "modifiers": "public", "return": "ExecutorService", "signature": "ExecutorService allocateExecutor(Service s)", "full_signature": "public ExecutorService allocateExecutor(Service s)", "class_method_signature": "ServiceHost.allocateExecutor(Service s)", "testcase": false, "constructor": false}, {"identifier": "allocateExecutor", "parameters": "(Service s, int threadCount)", "modifiers": "public", "return": "ExecutorService", "signature": "ExecutorService allocateExecutor(Service s, int threadCount)", "full_signature": "public ExecutorService allocateExecutor(Service s, int threadCount)", "class_method_signature": "ServiceHost.allocateExecutor(Service s, int threadCount)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@SuppressWarnings(\"try\") public", "return": "ServiceHost", "signature": "ServiceHost start()", "full_signature": "@SuppressWarnings(\"try\") public ServiceHost start()", "class_method_signature": "ServiceHost.start()", "testcase": false, "constructor": false}, {"identifier": "setSystemProperties", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setSystemProperties()", "full_signature": "private void setSystemProperties()", "class_method_signature": "ServiceHost.setSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "startImpl", "parameters": "()", "modifiers": "private", "return": "ServiceHost", "signature": "ServiceHost startImpl()", "full_signature": "private ServiceHost startImpl()", "class_method_signature": "ServiceHost.startImpl()", "testcase": false, "constructor": false}, {"identifier": "startDefaultCoreServicesSynchronously", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startDefaultCoreServicesSynchronously()", "full_signature": "public void startDefaultCoreServicesSynchronously()", "class_method_signature": "ServiceHost.startDefaultCoreServicesSynchronously()", "testcase": false, "constructor": false}, {"identifier": "startDefaultCoreServicesSynchronously", "parameters": "(boolean joinPeerNodes)", "modifiers": "public", "return": "void", "signature": "void startDefaultCoreServicesSynchronously(boolean joinPeerNodes)", "full_signature": "public void startDefaultCoreServicesSynchronously(boolean joinPeerNodes)", "class_method_signature": "ServiceHost.startDefaultCoreServicesSynchronously(boolean joinPeerNodes)", "testcase": false, "constructor": false}, {"identifier": "createDefaultDocumentIndexService", "parameters": "()", "modifiers": "protected", "return": "Service", "signature": "Service createDefaultDocumentIndexService()", "full_signature": "protected Service createDefaultDocumentIndexService()", "class_method_signature": "ServiceHost.createDefaultDocumentIndexService()", "testcase": false, "constructor": false}, {"identifier": "startDocumentIndexService", "parameters": "(Service documentIndexService,\n                                             NodeSelectorService defaultNodeSelectorService)", "modifiers": "protected", "return": "void", "signature": "void startDocumentIndexService(Service documentIndexService,\n                                             NodeSelectorService defaultNodeSelectorService)", "full_signature": "protected void startDocumentIndexService(Service documentIndexService,\n                                             NodeSelectorService defaultNodeSelectorService)", "class_method_signature": "ServiceHost.startDocumentIndexService(Service documentIndexService,\n                                             NodeSelectorService defaultNodeSelectorService)", "testcase": false, "constructor": false}, {"identifier": "createOrStartShardsManagerWhenDefaultNodeGroupIsAvailable", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createOrStartShardsManagerWhenDefaultNodeGroupIsAvailable()", "full_signature": "public void createOrStartShardsManagerWhenDefaultNodeGroupIsAvailable()", "class_method_signature": "ServiceHost.createOrStartShardsManagerWhenDefaultNodeGroupIsAvailable()", "testcase": false, "constructor": false}, {"identifier": "createOrStartShardsManagerSynchronously", "parameters": "(int replicationFactor)", "modifiers": "public", "return": "void", "signature": "void createOrStartShardsManagerSynchronously(int replicationFactor)", "full_signature": "public void createOrStartShardsManagerSynchronously(int replicationFactor)", "class_method_signature": "ServiceHost.createOrStartShardsManagerSynchronously(int replicationFactor)", "testcase": false, "constructor": false}, {"identifier": "getInitialPeerHosts", "parameters": "()", "modifiers": "public", "return": "List<URI>", "signature": "List<URI> getInitialPeerHosts()", "full_signature": "public List<URI> getInitialPeerHosts()", "class_method_signature": "ServiceHost.getInitialPeerHosts()", "testcase": false, "constructor": false}, {"identifier": "copyResourceToSandbox", "parameters": "(URL url, Path resourcePath)", "modifiers": "public", "return": "Path", "signature": "Path copyResourceToSandbox(URL url, Path resourcePath)", "full_signature": "public Path copyResourceToSandbox(URL url, Path resourcePath)", "class_method_signature": "ServiceHost.copyResourceToSandbox(URL url, Path resourcePath)", "testcase": false, "constructor": false}, {"identifier": "startUiFileContentServices", "parameters": "(Service s)", "modifiers": "private", "return": "void", "signature": "void startUiFileContentServices(Service s)", "full_signature": "private void startUiFileContentServices(Service s)", "class_method_signature": "ServiceHost.startUiFileContentServices(Service s)", "testcase": false, "constructor": false}, {"identifier": "discoverUiResources", "parameters": "(Path path, Service s, boolean hasCustomResources,\n            Map<Path, String> pathToURIPath)", "modifiers": "private", "return": "Path", "signature": "Path discoverUiResources(Path path, Service s, boolean hasCustomResources,\n            Map<Path, String> pathToURIPath)", "full_signature": "private Path discoverUiResources(Path path, Service s, boolean hasCustomResources,\n            Map<Path, String> pathToURIPath)", "class_method_signature": "ServiceHost.discoverUiResources(Path path, Service s, boolean hasCustomResources,\n            Map<Path, String> pathToURIPath)", "testcase": false, "constructor": false}, {"identifier": "getBaseUriPath", "parameters": "(Path path, Service s, boolean hasCustomResources)", "modifiers": "private", "return": "Path", "signature": "Path getBaseUriPath(Path path, Service s, boolean hasCustomResources)", "full_signature": "private Path getBaseUriPath(Path path, Service s, boolean hasCustomResources)", "class_method_signature": "ServiceHost.getBaseUriPath(Path path, Service s, boolean hasCustomResources)", "testcase": false, "constructor": false}, {"identifier": "discoverJarResources", "parameters": "(Path path, Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath, String prefix)", "modifiers": "public", "return": "Path", "signature": "Path discoverJarResources(Path path, Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath, String prefix)", "full_signature": "public Path discoverJarResources(Path path, Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath, String prefix)", "class_method_signature": "ServiceHost.discoverJarResources(Path path, Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath, String prefix)", "testcase": false, "constructor": false}, {"identifier": "discoverFileResources", "parameters": "(Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath,\n            String prefix)", "modifiers": "public", "return": "Path", "signature": "Path discoverFileResources(Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath,\n            String prefix)", "full_signature": "public Path discoverFileResources(Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath,\n            String prefix)", "class_method_signature": "ServiceHost.discoverFileResources(Service s, Map<Path, String> pathToURIPath,\n            Path baseUriPath,\n            String prefix)", "testcase": false, "constructor": false}, {"identifier": "startDefaultReplicationAndNodeGroupServices", "parameters": "()", "modifiers": "private", "return": "NodeSelectorService", "signature": "NodeSelectorService startDefaultReplicationAndNodeGroupServices()", "full_signature": "private NodeSelectorService startDefaultReplicationAndNodeGroupServices()", "class_method_signature": "ServiceHost.startDefaultReplicationAndNodeGroupServices()", "testcase": false, "constructor": false}, {"identifier": "createNodeSelectorService", "parameters": "(List<Operation> startNodeSelectorPosts,\n            List<Service> nodeSelectorServices, String nodeSelectorPath,\n            Integer replicationFactor, Integer replicationQuorum)", "modifiers": "private", "return": "NodeSelectorService", "signature": "NodeSelectorService createNodeSelectorService(List<Operation> startNodeSelectorPosts,\n            List<Service> nodeSelectorServices, String nodeSelectorPath,\n            Integer replicationFactor, Integer replicationQuorum)", "full_signature": "private NodeSelectorService createNodeSelectorService(List<Operation> startNodeSelectorPosts,\n            List<Service> nodeSelectorServices, String nodeSelectorPath,\n            Integer replicationFactor, Integer replicationQuorum)", "class_method_signature": "ServiceHost.createNodeSelectorService(List<Operation> startNodeSelectorPosts,\n            List<Service> nodeSelectorServices, String nodeSelectorPath,\n            Integer replicationFactor, Integer replicationQuorum)", "testcase": false, "constructor": false}, {"identifier": "joinPeers", "parameters": "(List<URI> peers, String nodeGroupUriPath)", "modifiers": "public", "return": "void", "signature": "void joinPeers(List<URI> peers, String nodeGroupUriPath)", "full_signature": "public void joinPeers(List<URI> peers, String nodeGroupUriPath)", "class_method_signature": "ServiceHost.joinPeers(List<URI> peers, String nodeGroupUriPath)", "testcase": false, "constructor": false}, {"identifier": "normalizePeerNodeList", "parameters": "(String[] peers)", "modifiers": "private", "return": "List<URI>", "signature": "List<URI> normalizePeerNodeList(String[] peers)", "full_signature": "private List<URI> normalizePeerNodeList(String[] peers)", "class_method_signature": "ServiceHost.normalizePeerNodeList(String[] peers)", "testcase": false, "constructor": false}, {"identifier": "sendJoinPeerRequest", "parameters": "(JoinPeerRequest joinBody, URI localNodeGroupUri)", "modifiers": "private", "return": "void", "signature": "void sendJoinPeerRequest(JoinPeerRequest joinBody, URI localNodeGroupUri)", "full_signature": "private void sendJoinPeerRequest(JoinPeerRequest joinBody, URI localNodeGroupUri)", "class_method_signature": "ServiceHost.sendJoinPeerRequest(JoinPeerRequest joinBody, URI localNodeGroupUri)", "testcase": false, "constructor": false}, {"identifier": "startFactoryServicesSynchronously", "parameters": "(Service... services)", "modifiers": "public", "return": "void", "signature": "void startFactoryServicesSynchronously(Service... services)", "full_signature": "public void startFactoryServicesSynchronously(Service... services)", "class_method_signature": "ServiceHost.startFactoryServicesSynchronously(Service... services)", "testcase": false, "constructor": false}, {"identifier": "startCoreServicesSynchronously", "parameters": "(Service... services)", "modifiers": "protected", "return": "void", "signature": "void startCoreServicesSynchronously(Service... services)", "full_signature": "protected void startCoreServicesSynchronously(Service... services)", "class_method_signature": "ServiceHost.startCoreServicesSynchronously(Service... services)", "testcase": false, "constructor": false}, {"identifier": "startCoreServicesSynchronously", "parameters": "(List<Operation> startPosts,\n            List<Service> services)", "modifiers": "protected", "return": "void", "signature": "void startCoreServicesSynchronously(List<Operation> startPosts,\n            List<Service> services)", "full_signature": "protected void startCoreServicesSynchronously(List<Operation> startPosts,\n            List<Service> services)", "class_method_signature": "ServiceHost.startCoreServicesSynchronously(List<Operation> startPosts,\n            List<Service> services)", "testcase": false, "constructor": false}, {"identifier": "startFactoryChildServiceSynchronously", "parameters": "(String factoryLink, ServiceDocument serviceState)", "modifiers": "protected", "return": "void", "signature": "void startFactoryChildServiceSynchronously(String factoryLink, ServiceDocument serviceState)", "full_signature": "protected void startFactoryChildServiceSynchronously(String factoryLink, ServiceDocument serviceState)", "class_method_signature": "ServiceHost.startFactoryChildServiceSynchronously(String factoryLink, ServiceDocument serviceState)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationContext", "parameters": "(AuthorizationContext context)", "modifiers": "protected", "return": "void", "signature": "void setAuthorizationContext(AuthorizationContext context)", "full_signature": "protected void setAuthorizationContext(AuthorizationContext context)", "class_method_signature": "ServiceHost.setAuthorizationContext(AuthorizationContext context)", "testcase": false, "constructor": false}, {"identifier": "startSubscriptionService", "parameters": "(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "modifiers": "public", "return": "URI", "signature": "URI startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "full_signature": "public URI startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "class_method_signature": "ServiceHost.startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "testcase": false, "constructor": false}, {"identifier": "startReliableSubscriptionService", "parameters": "(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "modifiers": "public", "return": "URI", "signature": "URI startReliableSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "full_signature": "public URI startReliableSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "class_method_signature": "ServiceHost.startReliableSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer)", "testcase": false, "constructor": false}, {"identifier": "startSubscriptionService", "parameters": "(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer,\n            ServiceSubscriber request)", "modifiers": "public", "return": "URI", "signature": "URI startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer,\n            ServiceSubscriber request)", "full_signature": "public URI startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer,\n            ServiceSubscriber request)", "class_method_signature": "ServiceHost.startSubscriptionService(\n            Operation subscribe,\n            Consumer<Operation> notificationConsumer,\n            ServiceSubscriber request)", "testcase": false, "constructor": false}, {"identifier": "startSubscriptionService", "parameters": "(\n            Operation subscribe,\n            Service notificationTarget,\n            ServiceSubscriber request)", "modifiers": "public", "return": "URI", "signature": "URI startSubscriptionService(\n            Operation subscribe,\n            Service notificationTarget,\n            ServiceSubscriber request)", "full_signature": "public URI startSubscriptionService(\n            Operation subscribe,\n            Service notificationTarget,\n            ServiceSubscriber request)", "class_method_signature": "ServiceHost.startSubscriptionService(\n            Operation subscribe,\n            Service notificationTarget,\n            ServiceSubscriber request)", "testcase": false, "constructor": false}, {"identifier": "stopSubscriptionService", "parameters": "(\n            Operation unsubscribe,\n            URI notificationTarget)", "modifiers": "public", "return": "void", "signature": "void stopSubscriptionService(\n            Operation unsubscribe,\n            URI notificationTarget)", "full_signature": "public void stopSubscriptionService(\n            Operation unsubscribe,\n            URI notificationTarget)", "class_method_signature": "ServiceHost.stopSubscriptionService(\n            Operation unsubscribe,\n            URI notificationTarget)", "testcase": false, "constructor": false}, {"identifier": "isServiceStartingOrAvailable", "parameters": "(ProcessingStage stage)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceStartingOrAvailable(ProcessingStage stage)", "full_signature": "public static boolean isServiceStartingOrAvailable(ProcessingStage stage)", "class_method_signature": "ServiceHost.isServiceStartingOrAvailable(ProcessingStage stage)", "testcase": false, "constructor": false}, {"identifier": "isServiceStarting", "parameters": "(ProcessingStage stage)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceStarting(ProcessingStage stage)", "full_signature": "public static boolean isServiceStarting(ProcessingStage stage)", "class_method_signature": "ServiceHost.isServiceStarting(ProcessingStage stage)", "testcase": false, "constructor": false}, {"identifier": "isServiceStarting", "parameters": "(Service service, String path)", "modifiers": "", "return": "boolean", "signature": "boolean isServiceStarting(Service service, String path)", "full_signature": " boolean isServiceStarting(Service service, String path)", "class_method_signature": "ServiceHost.isServiceStarting(Service service, String path)", "testcase": false, "constructor": false}, {"identifier": "startService", "parameters": "(Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startService(Service service)", "full_signature": "public ServiceHost startService(Service service)", "class_method_signature": "ServiceHost.startService(Service service)", "testcase": false, "constructor": false}, {"identifier": "startService", "parameters": "(Operation post, Service service)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startService(Operation post, Service service)", "full_signature": "public ServiceHost startService(Operation post, Service service)", "class_method_signature": "ServiceHost.startService(Operation post, Service service)", "testcase": false, "constructor": false}, {"identifier": "startService", "parameters": "(Operation post, Service service, Operation onDemandTriggeringOp)", "modifiers": "protected", "return": "ServiceHost", "signature": "ServiceHost startService(Operation post, Service service, Operation onDemandTriggeringOp)", "full_signature": "protected ServiceHost startService(Operation post, Service service, Operation onDemandTriggeringOp)", "class_method_signature": "ServiceHost.startService(Operation post, Service service, Operation onDemandTriggeringOp)", "testcase": false, "constructor": false}, {"identifier": "startFactory", "parameters": "(Service instanceService)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startFactory(Service instanceService)", "full_signature": "public ServiceHost startFactory(Service instanceService)", "class_method_signature": "ServiceHost.startFactory(Service instanceService)", "testcase": false, "constructor": false}, {"identifier": "startFactory", "parameters": "(Class<? extends Service> instServiceClass,\n            Supplier<FactoryService> factoryCreator)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startFactory(Class<? extends Service> instServiceClass,\n            Supplier<FactoryService> factoryCreator)", "full_signature": "public ServiceHost startFactory(Class<? extends Service> instServiceClass,\n            Supplier<FactoryService> factoryCreator)", "class_method_signature": "ServiceHost.startFactory(Class<? extends Service> instServiceClass,\n            Supplier<FactoryService> factoryCreator)", "testcase": false, "constructor": false}, {"identifier": "startFactory", "parameters": "(Supplier<FactoryService> factoryCreator, String servicePath)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startFactory(Supplier<FactoryService> factoryCreator, String servicePath)", "full_signature": "public ServiceHost startFactory(Supplier<FactoryService> factoryCreator, String servicePath)", "class_method_signature": "ServiceHost.startFactory(Supplier<FactoryService> factoryCreator, String servicePath)", "testcase": false, "constructor": false}, {"identifier": "startIdempotentFactory", "parameters": "(Service instanceService)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost startIdempotentFactory(Service instanceService)", "full_signature": "public ServiceHost startIdempotentFactory(Service instanceService)", "class_method_signature": "ServiceHost.startIdempotentFactory(Service instanceService)", "testcase": false, "constructor": false}, {"identifier": "processPendingServiceAvailableOperations", "parameters": "(Service s, Throwable e, boolean logFailure)", "modifiers": "", "return": "void", "signature": "void processPendingServiceAvailableOperations(Service s, Throwable e, boolean logFailure)", "full_signature": " void processPendingServiceAvailableOperations(Service s, Throwable e, boolean logFailure)", "class_method_signature": "ServiceHost.processPendingServiceAvailableOperations(Service s, Throwable e, boolean logFailure)", "testcase": false, "constructor": false}, {"identifier": "restoreActionOnChildServiceToPostOnFactory", "parameters": "(String link, Operation op)", "modifiers": "", "return": "void", "signature": "void restoreActionOnChildServiceToPostOnFactory(String link, Operation op)", "full_signature": " void restoreActionOnChildServiceToPostOnFactory(String link, Operation op)", "class_method_signature": "ServiceHost.restoreActionOnChildServiceToPostOnFactory(String link, Operation op)", "testcase": false, "constructor": false}, {"identifier": "synchAllVersions", "parameters": "(Operation post, Service service, Operation onDemandTriggeringOp)", "modifiers": "private", "return": "void", "signature": "void synchAllVersions(Operation post, Service service, Operation onDemandTriggeringOp)", "full_signature": "private void synchAllVersions(Operation post, Service service, Operation onDemandTriggeringOp)", "class_method_signature": "ServiceHost.synchAllVersions(Operation post, Service service, Operation onDemandTriggeringOp)", "testcase": false, "constructor": false}, {"identifier": "checkIfServiceExistsAndAttach", "parameters": "(Service service, String servicePath,\n            Operation post, Operation onDemandTriggeringOp)", "modifiers": "private", "return": "boolean", "signature": "boolean checkIfServiceExistsAndAttach(Service service, String servicePath,\n            Operation post, Operation onDemandTriggeringOp)", "full_signature": "private boolean checkIfServiceExistsAndAttach(Service service, String servicePath,\n            Operation post, Operation onDemandTriggeringOp)", "class_method_signature": "ServiceHost.checkIfServiceExistsAndAttach(Service service, String servicePath,\n            Operation post, Operation onDemandTriggeringOp)", "testcase": false, "constructor": false}, {"identifier": "isServiceIndexed", "parameters": "(Service s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceIndexed(Service s)", "full_signature": "public static boolean isServiceIndexed(Service s)", "class_method_signature": "ServiceHost.isServiceIndexed(Service s)", "testcase": false, "constructor": false}, {"identifier": "isServiceImmutable", "parameters": "(Service s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceImmutable(Service s)", "full_signature": "public static boolean isServiceImmutable(Service s)", "class_method_signature": "ServiceHost.isServiceImmutable(Service s)", "testcase": false, "constructor": false}, {"identifier": "processServiceStart", "parameters": "(ProcessingStage next, Service s,\n            Operation post, boolean hasClientSuppliedInitialState)", "modifiers": "private", "return": "void", "signature": "void processServiceStart(ProcessingStage next, Service s,\n            Operation post, boolean hasClientSuppliedInitialState)", "full_signature": "private void processServiceStart(ProcessingStage next, Service s,\n            Operation post, boolean hasClientSuppliedInitialState)", "class_method_signature": "ServiceHost.processServiceStart(ProcessingStage next, Service s,\n            Operation post, boolean hasClientSuppliedInitialState)", "testcase": false, "constructor": false}, {"identifier": "extractAndApplyContext", "parameters": "(Operation op)", "modifiers": "private", "return": "OperationContext", "signature": "OperationContext extractAndApplyContext(Operation op)", "full_signature": "private OperationContext extractAndApplyContext(Operation op)", "class_method_signature": "ServiceHost.extractAndApplyContext(Operation op)", "testcase": false, "constructor": false}, {"identifier": "isDocumentOwner", "parameters": "(Service s)", "modifiers": "", "return": "boolean", "signature": "boolean isDocumentOwner(Service s)", "full_signature": " boolean isDocumentOwner(Service s)", "class_method_signature": "ServiceHost.isDocumentOwner(Service s)", "testcase": false, "constructor": false}, {"identifier": "normalizeInitialServiceState", "parameters": "(Service s, Operation post, Long finalVersion)", "modifiers": "", "return": "void", "signature": "void normalizeInitialServiceState(Service s, Operation post, Long finalVersion)", "full_signature": " void normalizeInitialServiceState(Service s, Operation post, Long finalVersion)", "class_method_signature": "ServiceHost.normalizeInitialServiceState(Service s, Operation post, Long finalVersion)", "testcase": false, "constructor": false}, {"identifier": "scheduleNodeGroupChangeMaintenance", "parameters": "(String nodeSelectorPath)", "modifiers": "public", "return": "void", "signature": "void scheduleNodeGroupChangeMaintenance(String nodeSelectorPath)", "full_signature": "public void scheduleNodeGroupChangeMaintenance(String nodeSelectorPath)", "class_method_signature": "ServiceHost.scheduleNodeGroupChangeMaintenance(String nodeSelectorPath)", "testcase": false, "constructor": false}, {"identifier": "setFactoriesAvailabilityIfOwner", "parameters": "(boolean isAvailable)", "modifiers": "public", "return": "void", "signature": "void setFactoriesAvailabilityIfOwner(boolean isAvailable)", "full_signature": "public void setFactoriesAvailabilityIfOwner(boolean isAvailable)", "class_method_signature": "ServiceHost.setFactoriesAvailabilityIfOwner(boolean isAvailable)", "testcase": false, "constructor": false}, {"identifier": "loadServiceState", "parameters": "(Service s, Operation op)", "modifiers": "protected", "return": "void", "signature": "void loadServiceState(Service s, Operation op)", "full_signature": "protected void loadServiceState(Service s, Operation op)", "class_method_signature": "ServiceHost.loadServiceState(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "getIndexServiceForService", "parameters": "(Service s)", "modifiers": "private", "return": "Service", "signature": "Service getIndexServiceForService(Service s)", "full_signature": "private Service getIndexServiceForService(Service s)", "class_method_signature": "ServiceHost.getIndexServiceForService(Service s)", "testcase": false, "constructor": false}, {"identifier": "isAuthorized", "parameters": "(Service service, ServiceDocument document, Operation op)", "modifiers": "public", "return": "boolean", "signature": "boolean isAuthorized(Service service, ServiceDocument document, Operation op)", "full_signature": "public boolean isAuthorized(Service service, ServiceDocument document, Operation op)", "class_method_signature": "ServiceHost.isAuthorized(Service service, ServiceDocument document, Operation op)", "testcase": false, "constructor": false}, {"identifier": "loadInitialServiceState", "parameters": "(Service s, Operation serviceStartPost, ProcessingStage next,\n            boolean hasClientSuppliedState)", "modifiers": "", "return": "void", "signature": "void loadInitialServiceState(Service s, Operation serviceStartPost, ProcessingStage next,\n            boolean hasClientSuppliedState)", "full_signature": " void loadInitialServiceState(Service s, Operation serviceStartPost, ProcessingStage next,\n            boolean hasClientSuppliedState)", "class_method_signature": "ServiceHost.loadInitialServiceState(Service s, Operation serviceStartPost, ProcessingStage next,\n            boolean hasClientSuppliedState)", "testcase": false, "constructor": false}, {"identifier": "getCachedServiceState", "parameters": "(Service s, Operation op)", "modifiers": "", "return": "ServiceDocument", "signature": "ServiceDocument getCachedServiceState(Service s, Operation op)", "full_signature": " ServiceDocument getCachedServiceState(Service s, Operation op)", "class_method_signature": "ServiceHost.getCachedServiceState(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "cacheServiceState", "parameters": "(Service s, ServiceDocument st, Operation op)", "modifiers": "", "return": "void", "signature": "void cacheServiceState(Service s, ServiceDocument st, Operation op)", "full_signature": " void cacheServiceState(Service s, ServiceDocument st, Operation op)", "class_method_signature": "ServiceHost.cacheServiceState(Service s, ServiceDocument st, Operation op)", "testcase": false, "constructor": false}, {"identifier": "clearTransactionalCachedServiceState", "parameters": "(Service s, String transactionId)", "modifiers": "", "return": "void", "signature": "void clearTransactionalCachedServiceState(Service s, String transactionId)", "full_signature": " void clearTransactionalCachedServiceState(Service s, String transactionId)", "class_method_signature": "ServiceHost.clearTransactionalCachedServiceState(Service s, String transactionId)", "testcase": false, "constructor": false}, {"identifier": "handleLoadInitialStateCompletion", "parameters": "(Service s, Operation serviceStartPost,\n            ProcessingStage next,\n            boolean hasClientSuppliedState, Operation indexQueryOperation, Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleLoadInitialStateCompletion(Service s, Operation serviceStartPost,\n            ProcessingStage next,\n            boolean hasClientSuppliedState, Operation indexQueryOperation, Throwable e)", "full_signature": "private void handleLoadInitialStateCompletion(Service s, Operation serviceStartPost,\n            ProcessingStage next,\n            boolean hasClientSuppliedState, Operation indexQueryOperation, Throwable e)", "class_method_signature": "ServiceHost.handleLoadInitialStateCompletion(Service s, Operation serviceStartPost,\n            ProcessingStage next,\n            boolean hasClientSuppliedState, Operation indexQueryOperation, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "checkServiceExistsOrDeleted", "parameters": "(Service s, ServiceDocument stateFromStore,\n            Operation serviceStartPost)", "modifiers": "private", "return": "boolean", "signature": "boolean checkServiceExistsOrDeleted(Service s, ServiceDocument stateFromStore,\n            Operation serviceStartPost)", "full_signature": "private boolean checkServiceExistsOrDeleted(Service s, ServiceDocument stateFromStore,\n            Operation serviceStartPost)", "class_method_signature": "ServiceHost.checkServiceExistsOrDeleted(Service s, ServiceDocument stateFromStore,\n            Operation serviceStartPost)", "testcase": false, "constructor": false}, {"identifier": "markAsPendingDelete", "parameters": "(Service service)", "modifiers": "", "return": "void", "signature": "void markAsPendingDelete(Service service)", "full_signature": " void markAsPendingDelete(Service service)", "class_method_signature": "ServiceHost.markAsPendingDelete(Service service)", "testcase": false, "constructor": false}, {"identifier": "unmarkAsPendingDelete", "parameters": "(Service service)", "modifiers": "", "return": "void", "signature": "void unmarkAsPendingDelete(Service service)", "full_signature": " void unmarkAsPendingDelete(Service service)", "class_method_signature": "ServiceHost.unmarkAsPendingDelete(Service service)", "testcase": false, "constructor": false}, {"identifier": "stopService", "parameters": "(Service service)", "modifiers": "public", "return": "void", "signature": "void stopService(Service service)", "full_signature": "public void stopService(Service service)", "class_method_signature": "ServiceHost.stopService(Service service)", "testcase": false, "constructor": false}, {"identifier": "findService", "parameters": "(String uriPath)", "modifiers": "protected", "return": "Service", "signature": "Service findService(String uriPath)", "full_signature": "protected Service findService(String uriPath)", "class_method_signature": "ServiceHost.findService(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "findService", "parameters": "(String uriPath, boolean doExactMatch)", "modifiers": "protected", "return": "Service", "signature": "Service findService(String uriPath, boolean doExactMatch)", "full_signature": "protected Service findService(String uriPath, boolean doExactMatch)", "class_method_signature": "ServiceHost.findService(String uriPath, boolean doExactMatch)", "testcase": false, "constructor": false}, {"identifier": "findNamespaceOwnerService", "parameters": "(String uriPath)", "modifiers": "private", "return": "Service", "signature": "Service findNamespaceOwnerService(String uriPath)", "full_signature": "private Service findNamespaceOwnerService(String uriPath)", "class_method_signature": "ServiceHost.findNamespaceOwnerService(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "findHelperService", "parameters": "(String uriPath)", "modifiers": "", "return": "Service", "signature": "Service findHelperService(String uriPath)", "full_signature": " Service findHelperService(String uriPath)", "class_method_signature": "ServiceHost.findHelperService(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation inboundOp)", "modifiers": "public", "return": "boolean", "signature": "boolean handleRequest(Operation inboundOp)", "full_signature": "public boolean handleRequest(Operation inboundOp)", "class_method_signature": "ServiceHost.handleRequest(Operation inboundOp)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Service service, Operation inboundOp)", "modifiers": "@SuppressWarnings(\"try\") public", "return": "boolean", "signature": "boolean handleRequest(Service service, Operation inboundOp)", "full_signature": "@SuppressWarnings(\"try\") public boolean handleRequest(Service service, Operation inboundOp)", "class_method_signature": "ServiceHost.handleRequest(Service service, Operation inboundOp)", "testcase": false, "constructor": false}, {"identifier": "passThroughProcessingChain", "parameters": "(Operation inboundOp)", "modifiers": "private", "return": "void", "signature": "void passThroughProcessingChain(Operation inboundOp)", "full_signature": "private void passThroughProcessingChain(Operation inboundOp)", "class_method_signature": "ServiceHost.passThroughProcessingChain(Operation inboundOp)", "testcase": false, "constructor": false}, {"identifier": "handleRequestAfterOpProcessingChain", "parameters": "(Service service, Operation inboundOp)", "modifiers": "private", "return": "void", "signature": "void handleRequestAfterOpProcessingChain(Service service, Operation inboundOp)", "full_signature": "private void handleRequestAfterOpProcessingChain(Service service, Operation inboundOp)", "class_method_signature": "ServiceHost.handleRequestAfterOpProcessingChain(Service service, Operation inboundOp)", "testcase": false, "constructor": false}, {"identifier": "retryOnDemandLoadConflict", "parameters": "(Operation op, Service s)", "modifiers": "", "return": "void", "signature": "void retryOnDemandLoadConflict(Operation op, Service s)", "full_signature": " void retryOnDemandLoadConflict(Operation op, Service s)", "class_method_signature": "ServiceHost.retryOnDemandLoadConflict(Operation op, Service s)", "testcase": false, "constructor": false}, {"identifier": "queueOrScheduleRequest", "parameters": "(Service s, Operation op)", "modifiers": "", "return": "void", "signature": "void queueOrScheduleRequest(Service s, Operation op)", "full_signature": " void queueOrScheduleRequest(Service s, Operation op)", "class_method_signature": "ServiceHost.queueOrScheduleRequest(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "queueOrScheduleRequestInternal", "parameters": "(Service s, Operation op)", "modifiers": "private", "return": "void", "signature": "void queueOrScheduleRequestInternal(Service s, Operation op)", "full_signature": "private void queueOrScheduleRequestInternal(Service s, Operation op)", "class_method_signature": "ServiceHost.queueOrScheduleRequestInternal(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleUncaughtException", "parameters": "(Service s, Operation op, Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleUncaughtException(Service s, Operation op, Throwable e)", "full_signature": "private void handleUncaughtException(Service s, Operation op, Throwable e)", "class_method_signature": "ServiceHost.handleUncaughtException(Service s, Operation op, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "sendRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void sendRequest(Operation op)", "full_signature": "@Override public void sendRequest(Operation op)", "class_method_signature": "ServiceHost.sendRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "nestContinuationActivation", "parameters": "(Operation op, Continuation cont)", "modifiers": "private", "return": "void", "signature": "void nestContinuationActivation(Operation op, Continuation cont)", "full_signature": "private void nestContinuationActivation(Operation op, Continuation cont)", "class_method_signature": "ServiceHost.nestContinuationActivation(Operation op, Continuation cont)", "testcase": false, "constructor": false}, {"identifier": "traceOperation", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void traceOperation(Operation op)", "full_signature": "private void traceOperation(Operation op)", "class_method_signature": "ServiceHost.traceOperation(Operation op)", "testcase": false, "constructor": false}, {"identifier": "prepareForwardRequest", "parameters": "(Operation fwdOp)", "modifiers": "", "return": "void", "signature": "void prepareForwardRequest(Operation fwdOp)", "full_signature": " void prepareForwardRequest(Operation fwdOp)", "class_method_signature": "ServiceHost.prepareForwardRequest(Operation fwdOp)", "testcase": false, "constructor": false}, {"identifier": "prepareRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void prepareRequest(Operation op)", "full_signature": "private void prepareRequest(Operation op)", "class_method_signature": "ServiceHost.prepareRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "ServiceHost.stop()", "testcase": false, "constructor": false}, {"identifier": "stopServices", "parameters": "(Set<Service> servicesToClose)", "modifiers": "private", "return": "List<Service>", "signature": "List<Service> stopServices(Set<Service> servicesToClose)", "full_signature": "private List<Service> stopServices(Set<Service> servicesToClose)", "class_method_signature": "ServiceHost.stopServices(Set<Service> servicesToClose)", "testcase": false, "constructor": false}, {"identifier": "stopPrivilegedServices", "parameters": "(List<Service> privilegedServiceInstances)", "modifiers": "private", "return": "void", "signature": "void stopPrivilegedServices(List<Service> privilegedServiceInstances)", "full_signature": "private void stopPrivilegedServices(List<Service> privilegedServiceInstances)", "class_method_signature": "ServiceHost.stopPrivilegedServices(List<Service> privilegedServiceInstances)", "testcase": false, "constructor": false}, {"identifier": "stopCoreServices", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stopCoreServices()", "full_signature": "private void stopCoreServices()", "class_method_signature": "ServiceHost.stopCoreServices()", "testcase": false, "constructor": false}, {"identifier": "waitForServiceStop", "parameters": "(final CountDownLatch latch)", "modifiers": "private", "return": "void", "signature": "void waitForServiceStop(final CountDownLatch latch)", "full_signature": "private void waitForServiceStop(final CountDownLatch latch)", "class_method_signature": "ServiceHost.waitForServiceStop(final CountDownLatch latch)", "testcase": false, "constructor": false}, {"identifier": "sendServiceStop", "parameters": "(final CompletionHandler removeServiceCompletion,\n            final Service s)", "modifiers": "private", "return": "void", "signature": "void sendServiceStop(final CompletionHandler removeServiceCompletion,\n            final Service s)", "full_signature": "private void sendServiceStop(final CompletionHandler removeServiceCompletion,\n            final Service s)", "class_method_signature": "ServiceHost.sendServiceStop(final CompletionHandler removeServiceCompletion,\n            final Service s)", "testcase": false, "constructor": false}, {"identifier": "isServiceCreate", "parameters": "(Operation op)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceCreate(Operation op)", "full_signature": "public static boolean isServiceCreate(Operation op)", "class_method_signature": "ServiceHost.isServiceCreate(Operation op)", "testcase": false, "constructor": false}, {"identifier": "isServiceStop", "parameters": "(Operation op)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceStop(Operation op)", "full_signature": "public static boolean isServiceStop(Operation op)", "class_method_signature": "ServiceHost.isServiceStop(Operation op)", "testcase": false, "constructor": false}, {"identifier": "isServiceDeleteAndStop", "parameters": "(Operation op)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceDeleteAndStop(Operation op)", "full_signature": "public static boolean isServiceDeleteAndStop(Operation op)", "class_method_signature": "ServiceHost.isServiceDeleteAndStop(Operation op)", "testcase": false, "constructor": false}, {"identifier": "isServiceAvailable", "parameters": "(Service s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isServiceAvailable(Service s)", "full_signature": "public static boolean isServiceAvailable(Service s)", "class_method_signature": "ServiceHost.isServiceAvailable(Service s)", "testcase": false, "constructor": false}, {"identifier": "isForServiceNamespace", "parameters": "(Service s, Operation op)", "modifiers": "public static", "return": "boolean", "signature": "boolean isForServiceNamespace(Service s, Operation op)", "full_signature": "public static boolean isForServiceNamespace(Service s, Operation op)", "class_method_signature": "ServiceHost.isForServiceNamespace(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "isHelperServicePath", "parameters": "(String serviceUriPath)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHelperServicePath(String serviceUriPath)", "full_signature": "public static boolean isHelperServicePath(String serviceUriPath)", "class_method_signature": "ServiceHost.isHelperServicePath(String serviceUriPath)", "testcase": false, "constructor": false}, {"identifier": "toggleDebuggingMode", "parameters": "(boolean enable)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost toggleDebuggingMode(boolean enable)", "full_signature": "public ServiceHost toggleDebuggingMode(boolean enable)", "class_method_signature": "ServiceHost.toggleDebuggingMode(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "setLoggingLevel", "parameters": "(Level newLevel)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setLoggingLevel(Level newLevel)", "full_signature": "public ServiceHost setLoggingLevel(Level newLevel)", "class_method_signature": "ServiceHost.setLoggingLevel(Level newLevel)", "testcase": false, "constructor": false}, {"identifier": "toggleOperationProcessingLogging", "parameters": "(boolean loggingEnabled)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost toggleOperationProcessingLogging(boolean loggingEnabled)", "full_signature": "public ServiceHost toggleOperationProcessingLogging(boolean loggingEnabled)", "class_method_signature": "ServiceHost.toggleOperationProcessingLogging(boolean loggingEnabled)", "testcase": false, "constructor": false}, {"identifier": "setOperationProcessingLogFilter", "parameters": "(Predicate<Operation> logFilter)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setOperationProcessingLogFilter(Predicate<Operation> logFilter)", "full_signature": "public ServiceHost setOperationProcessingLogFilter(Predicate<Operation> logFilter)", "class_method_signature": "ServiceHost.setOperationProcessingLogFilter(Predicate<Operation> logFilter)", "testcase": false, "constructor": false}, {"identifier": "setOperationTracingLevel", "parameters": "(Level newLevel)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setOperationTracingLevel(Level newLevel)", "full_signature": "public ServiceHost setOperationTracingLevel(Level newLevel)", "class_method_signature": "ServiceHost.setOperationTracingLevel(Level newLevel)", "testcase": false, "constructor": false}, {"identifier": "getOperationTracingLevel", "parameters": "()", "modifiers": "public", "return": "Level", "signature": "Level getOperationTracingLevel()", "full_signature": "public Level getOperationTracingLevel()", "class_method_signature": "ServiceHost.getOperationTracingLevel()", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void log(Level level, String fmt, Object... args)", "full_signature": "public void log(Level level, String fmt, Object... args)", "class_method_signature": "ServiceHost.log(Level level, String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void log(Level level, Supplier<String> messageSupplier)", "full_signature": "public void log(Level level, Supplier<String> messageSupplier)", "class_method_signature": "ServiceHost.log(Level level, Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, Integer nestingLevel, String fmt, Object... args)", "modifiers": "protected", "return": "void", "signature": "void log(Level level, Integer nestingLevel, String fmt, Object... args)", "full_signature": "protected void log(Level level, Integer nestingLevel, String fmt, Object... args)", "class_method_signature": "ServiceHost.log(Level level, Integer nestingLevel, String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, Integer nestingLevel, Supplier<String> messageSupplier)", "modifiers": "protected", "return": "void", "signature": "void log(Level level, Integer nestingLevel, Supplier<String> messageSupplier)", "full_signature": "protected void log(Level level, Integer nestingLevel, Supplier<String> messageSupplier)", "class_method_signature": "ServiceHost.log(Level level, Integer nestingLevel, Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "registerForServiceAvailability", "parameters": "(CompletionHandler completion,\n            String... servicePaths)", "modifiers": "public", "return": "void", "signature": "void registerForServiceAvailability(CompletionHandler completion,\n            String... servicePaths)", "full_signature": "public void registerForServiceAvailability(CompletionHandler completion,\n            String... servicePaths)", "class_method_signature": "ServiceHost.registerForServiceAvailability(CompletionHandler completion,\n            String... servicePaths)", "testcase": false, "constructor": false}, {"identifier": "registerForServiceAvailability", "parameters": "(CompletionHandler completion, boolean checkReplica,\n            String... servicePaths)", "modifiers": "public", "return": "void", "signature": "void registerForServiceAvailability(CompletionHandler completion, boolean checkReplica,\n            String... servicePaths)", "full_signature": "public void registerForServiceAvailability(CompletionHandler completion, boolean checkReplica,\n            String... servicePaths)", "class_method_signature": "ServiceHost.registerForServiceAvailability(CompletionHandler completion, boolean checkReplica,\n            String... servicePaths)", "testcase": false, "constructor": false}, {"identifier": "registerForServiceAvailability", "parameters": "(CompletionHandler completion,\n            String nodeSelectorPath, boolean checkReplica, String... servicePaths)", "modifiers": "public", "return": "void", "signature": "void registerForServiceAvailability(CompletionHandler completion,\n            String nodeSelectorPath, boolean checkReplica, String... servicePaths)", "full_signature": "public void registerForServiceAvailability(CompletionHandler completion,\n            String nodeSelectorPath, boolean checkReplica, String... servicePaths)", "class_method_signature": "ServiceHost.registerForServiceAvailability(CompletionHandler completion,\n            String nodeSelectorPath, boolean checkReplica, String... servicePaths)", "testcase": false, "constructor": false}, {"identifier": "registerForServiceAvailability", "parameters": "(Operation opTemplate, String... servicePaths)", "modifiers": "public", "return": "void", "signature": "void registerForServiceAvailability(Operation opTemplate, String... servicePaths)", "full_signature": "public void registerForServiceAvailability(Operation opTemplate, String... servicePaths)", "class_method_signature": "ServiceHost.registerForServiceAvailability(Operation opTemplate, String... servicePaths)", "testcase": false, "constructor": false}, {"identifier": "registerForServiceAvailability", "parameters": "(Operation opTemplate, boolean checkReplica,\n            String nodeSelectorPath, String... servicePaths)", "modifiers": "private", "return": "void", "signature": "void registerForServiceAvailability(Operation opTemplate, boolean checkReplica,\n            String nodeSelectorPath, String... servicePaths)", "full_signature": "private void registerForServiceAvailability(Operation opTemplate, boolean checkReplica,\n            String nodeSelectorPath, String... servicePaths)", "class_method_signature": "ServiceHost.registerForServiceAvailability(Operation opTemplate, boolean checkReplica,\n            String nodeSelectorPath, String... servicePaths)", "testcase": false, "constructor": false}, {"identifier": "getOperationForServiceAvailability", "parameters": "(Operation op, String link,\n            boolean doClone)", "modifiers": "private", "return": "Operation", "signature": "Operation getOperationForServiceAvailability(Operation op, String link,\n            boolean doClone)", "full_signature": "private Operation getOperationForServiceAvailability(Operation op, String link,\n            boolean doClone)", "class_method_signature": "ServiceHost.getOperationForServiceAvailability(Operation op, String link,\n            boolean doClone)", "testcase": false, "constructor": false}, {"identifier": "hasPendingServiceAvailableCompletions", "parameters": "(String selfLink)", "modifiers": "", "return": "boolean", "signature": "boolean hasPendingServiceAvailableCompletions(String selfLink)", "full_signature": " boolean hasPendingServiceAvailableCompletions(String selfLink)", "class_method_signature": "ServiceHost.hasPendingServiceAvailableCompletions(String selfLink)", "testcase": false, "constructor": false}, {"identifier": "setRequestRateLimit", "parameters": "(String key, double operationsPerSecond)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setRequestRateLimit(String key, double operationsPerSecond)", "full_signature": "public ServiceHost setRequestRateLimit(String key, double operationsPerSecond)", "class_method_signature": "ServiceHost.setRequestRateLimit(String key, double operationsPerSecond)", "testcase": false, "constructor": false}, {"identifier": "setRequestRateLimit", "parameters": "(String key, RequestRateInfo ri)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setRequestRateLimit(String key, RequestRateInfo ri)", "full_signature": "public ServiceHost setRequestRateLimit(String key, RequestRateInfo ri)", "class_method_signature": "ServiceHost.setRequestRateLimit(String key, RequestRateInfo ri)", "testcase": false, "constructor": false}, {"identifier": "getRequestRateLimit", "parameters": "(String key)", "modifiers": "public", "return": "RequestRateInfo", "signature": "RequestRateInfo getRequestRateLimit(String key)", "full_signature": "public RequestRateInfo getRequestRateLimit(String key)", "class_method_signature": "ServiceHost.getRequestRateLimit(String key)", "testcase": false, "constructor": false}, {"identifier": "setServiceMemoryLimit", "parameters": "(String servicePath, double percentOfTotal)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setServiceMemoryLimit(String servicePath, double percentOfTotal)", "full_signature": "public ServiceHost setServiceMemoryLimit(String servicePath, double percentOfTotal)", "class_method_signature": "ServiceHost.setServiceMemoryLimit(String servicePath, double percentOfTotal)", "testcase": false, "constructor": false}, {"identifier": "getServiceMemoryLimitMB", "parameters": "(String servicePath, MemoryLimitType limitType)", "modifiers": "public", "return": "Long", "signature": "Long getServiceMemoryLimitMB(String servicePath, MemoryLimitType limitType)", "full_signature": "public Long getServiceMemoryLimitMB(String servicePath, MemoryLimitType limitType)", "class_method_signature": "ServiceHost.getServiceMemoryLimitMB(String servicePath, MemoryLimitType limitType)", "testcase": false, "constructor": false}, {"identifier": "getServiceStage", "parameters": "(String servicePath)", "modifiers": "public", "return": "ProcessingStage", "signature": "ProcessingStage getServiceStage(String servicePath)", "full_signature": "public ProcessingStage getServiceStage(String servicePath)", "class_method_signature": "ServiceHost.getServiceStage(String servicePath)", "testcase": false, "constructor": false}, {"identifier": "checkServiceAvailable", "parameters": "(String servicePath)", "modifiers": "public", "return": "boolean", "signature": "boolean checkServiceAvailable(String servicePath)", "full_signature": "public boolean checkServiceAvailable(String servicePath)", "class_method_signature": "ServiceHost.checkServiceAvailable(String servicePath)", "testcase": false, "constructor": false}, {"identifier": "checkReplicatedServiceAvailable", "parameters": "(CompletionHandler ch, String servicePath)", "modifiers": "public", "return": "void", "signature": "void checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath)", "full_signature": "public void checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath)", "class_method_signature": "ServiceHost.checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath)", "testcase": false, "constructor": false}, {"identifier": "checkReplicatedServiceAvailable", "parameters": "(CompletionHandler ch, String servicePath,\n            String nodeSelectorPath)", "modifiers": "public", "return": "void", "signature": "void checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath,\n            String nodeSelectorPath)", "full_signature": "public void checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath,\n            String nodeSelectorPath)", "class_method_signature": "ServiceHost.checkReplicatedServiceAvailable(CompletionHandler ch, String servicePath,\n            String nodeSelectorPath)", "testcase": false, "constructor": false}, {"identifier": "getSystemInfo", "parameters": "()", "modifiers": "public", "return": "SystemHostInfo", "signature": "SystemHostInfo getSystemInfo()", "full_signature": "public SystemHostInfo getSystemInfo()", "class_method_signature": "ServiceHost.getSystemInfo()", "testcase": false, "constructor": false}, {"identifier": "updateSystemInfo", "parameters": "(boolean enumerateNetworkInterfaces)", "modifiers": "public", "return": "SystemHostInfo", "signature": "SystemHostInfo updateSystemInfo(boolean enumerateNetworkInterfaces)", "full_signature": "public SystemHostInfo updateSystemInfo(boolean enumerateNetworkInterfaces)", "class_method_signature": "ServiceHost.updateSystemInfo(boolean enumerateNetworkInterfaces)", "testcase": false, "constructor": false}, {"identifier": "updateMemoryAndDiskInfo", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateMemoryAndDiskInfo()", "full_signature": "public void updateMemoryAndDiskInfo()", "class_method_signature": "ServiceHost.updateMemoryAndDiskInfo()", "testcase": false, "constructor": false}, {"identifier": "checkAndSetPreferredAddress", "parameters": "(String address)", "modifiers": "private", "return": "boolean", "signature": "boolean checkAndSetPreferredAddress(String address)", "full_signature": "private boolean checkAndSetPreferredAddress(String address)", "class_method_signature": "ServiceHost.checkAndSetPreferredAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "clearUriAndLogPrefix", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clearUriAndLogPrefix()", "full_signature": "private void clearUriAndLogPrefix()", "class_method_signature": "ServiceHost.clearUriAndLogPrefix()", "testcase": false, "constructor": false}, {"identifier": "normalizeAddress", "parameters": "(String address)", "modifiers": "private", "return": "String", "signature": "String normalizeAddress(String address)", "full_signature": "private String normalizeAddress(String address)", "class_method_signature": "ServiceHost.normalizeAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Runnable task)", "modifiers": "public", "return": "void", "signature": "void run(Runnable task)", "full_signature": "public void run(Runnable task)", "class_method_signature": "ServiceHost.run(Runnable task)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(ExecutorService executor, Runnable task)", "modifiers": "public", "return": "void", "signature": "void run(ExecutorService executor, Runnable task)", "full_signature": "public void run(ExecutorService executor, Runnable task)", "class_method_signature": "ServiceHost.run(ExecutorService executor, Runnable task)", "testcase": false, "constructor": false}, {"identifier": "schedule", "parameters": "(Runnable task, long delay, TimeUnit unit)", "modifiers": "public", "return": "ScheduledFuture<?>", "signature": "ScheduledFuture<?> schedule(Runnable task, long delay, TimeUnit unit)", "full_signature": "public ScheduledFuture<?> schedule(Runnable task, long delay, TimeUnit unit)", "class_method_signature": "ServiceHost.schedule(Runnable task, long delay, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "scheduleCore", "parameters": "(Runnable task, long delay, TimeUnit unit)", "modifiers": "public", "return": "ScheduledFuture<?>", "signature": "ScheduledFuture<?> scheduleCore(Runnable task, long delay, TimeUnit unit)", "full_signature": "public ScheduledFuture<?> scheduleCore(Runnable task, long delay, TimeUnit unit)", "class_method_signature": "ServiceHost.scheduleCore(Runnable task, long delay, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "schedule", "parameters": "(ScheduledExecutorService e, Runnable task, long delay,\n            TimeUnit unit)", "modifiers": "private", "return": "ScheduledFuture<?>", "signature": "ScheduledFuture<?> schedule(ScheduledExecutorService e, Runnable task, long delay,\n            TimeUnit unit)", "full_signature": "private ScheduledFuture<?> schedule(ScheduledExecutorService e, Runnable task, long delay,\n            TimeUnit unit)", "class_method_signature": "ServiceHost.schedule(ScheduledExecutorService e, Runnable task, long delay,\n            TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "executeRunnableSafe", "parameters": "(Runnable task)", "modifiers": "private", "return": "void", "signature": "void executeRunnableSafe(Runnable task)", "full_signature": "private void executeRunnableSafe(Runnable task)", "class_method_signature": "ServiceHost.executeRunnableSafe(Runnable task)", "testcase": false, "constructor": false}, {"identifier": "scheduleMaintenance", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scheduleMaintenance()", "full_signature": "private void scheduleMaintenance()", "class_method_signature": "ServiceHost.scheduleMaintenance()", "testcase": false, "constructor": false}, {"identifier": "scheduleServiceMaintenance", "parameters": "(Service s)", "modifiers": "protected", "return": "void", "signature": "void scheduleServiceMaintenance(Service s)", "full_signature": "protected void scheduleServiceMaintenance(Service s)", "class_method_signature": "ServiceHost.scheduleServiceMaintenance(Service s)", "testcase": false, "constructor": false}, {"identifier": "performMaintenanceStage", "parameters": "(Operation post, MaintenanceStage stage, long deadline)", "modifiers": "protected", "return": "void", "signature": "void performMaintenanceStage(Operation post, MaintenanceStage stage, long deadline)", "full_signature": "protected void performMaintenanceStage(Operation post, MaintenanceStage stage, long deadline)", "class_method_signature": "ServiceHost.performMaintenanceStage(Operation post, MaintenanceStage stage, long deadline)", "testcase": false, "constructor": false}, {"identifier": "performNodeSelectorChangeMaintenance", "parameters": "(Operation post, long now,\n            MaintenanceStage nextStage, boolean isCheckRequired, long deadline)", "modifiers": "private", "return": "void", "signature": "void performNodeSelectorChangeMaintenance(Operation post, long now,\n            MaintenanceStage nextStage, boolean isCheckRequired, long deadline)", "full_signature": "private void performNodeSelectorChangeMaintenance(Operation post, long now,\n            MaintenanceStage nextStage, boolean isCheckRequired, long deadline)", "class_method_signature": "ServiceHost.performNodeSelectorChangeMaintenance(Operation post, long now,\n            MaintenanceStage nextStage, boolean isCheckRequired, long deadline)", "testcase": false, "constructor": false}, {"identifier": "performIOMaintenance", "parameters": "(Operation post, long now, MaintenanceStage nextStage,\n            long deadline)", "modifiers": "private", "return": "void", "signature": "void performIOMaintenance(Operation post, long now, MaintenanceStage nextStage,\n            long deadline)", "full_signature": "private void performIOMaintenance(Operation post, long now, MaintenanceStage nextStage,\n            long deadline)", "class_method_signature": "ServiceHost.performIOMaintenance(Operation post, long now, MaintenanceStage nextStage,\n            long deadline)", "testcase": false, "constructor": false}, {"identifier": "setOperationTimeOutMicros", "parameters": "(long timeoutMicros)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setOperationTimeOutMicros(long timeoutMicros)", "full_signature": "public ServiceHost setOperationTimeOutMicros(long timeoutMicros)", "class_method_signature": "ServiceHost.setOperationTimeOutMicros(long timeoutMicros)", "testcase": false, "constructor": false}, {"identifier": "setServiceCacheClearDelayMicros", "parameters": "(long delayMicros)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setServiceCacheClearDelayMicros(long delayMicros)", "full_signature": "public ServiceHost setServiceCacheClearDelayMicros(long delayMicros)", "class_method_signature": "ServiceHost.setServiceCacheClearDelayMicros(long delayMicros)", "testcase": false, "constructor": false}, {"identifier": "getServiceCacheClearDelayMicros", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getServiceCacheClearDelayMicros()", "full_signature": "public long getServiceCacheClearDelayMicros()", "class_method_signature": "ServiceHost.getServiceCacheClearDelayMicros()", "testcase": false, "constructor": false}, {"identifier": "setProcessOwner", "parameters": "(boolean isOwner)", "modifiers": "public", "return": "ServiceHost", "signature": "ServiceHost setProcessOwner(boolean isOwner)", "full_signature": "public ServiceHost setProcessOwner(boolean isOwner)", "class_method_signature": "ServiceHost.setProcessOwner(boolean isOwner)", "testcase": false, "constructor": false}, {"identifier": "isProcessOwner", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isProcessOwner()", "full_signature": "public boolean isProcessOwner()", "class_method_signature": "ServiceHost.isProcessOwner()", "testcase": false, "constructor": false}, {"identifier": "setListener", "parameters": "(ServiceRequestListener listener)", "modifiers": "public", "return": "void", "signature": "void setListener(ServiceRequestListener listener)", "full_signature": "public void setListener(ServiceRequestListener listener)", "class_method_signature": "ServiceHost.setListener(ServiceRequestListener listener)", "testcase": false, "constructor": false}, {"identifier": "getSecureListener", "parameters": "()", "modifiers": "public", "return": "ServiceRequestListener", "signature": "ServiceRequestListener getSecureListener()", "full_signature": "public ServiceRequestListener getSecureListener()", "class_method_signature": "ServiceHost.getSecureListener()", "testcase": false, "constructor": false}, {"identifier": "setSecureListener", "parameters": "(ServiceRequestListener listener)", "modifiers": "public", "return": "void", "signature": "void setSecureListener(ServiceRequestListener listener)", "full_signature": "public void setSecureListener(ServiceRequestListener listener)", "class_method_signature": "ServiceHost.setSecureListener(ServiceRequestListener listener)", "testcase": false, "constructor": false}, {"identifier": "getListener", "parameters": "()", "modifiers": "public", "return": "ServiceRequestListener", "signature": "ServiceRequestListener getListener()", "full_signature": "public ServiceRequestListener getListener()", "class_method_signature": "ServiceHost.getListener()", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "ServiceClient", "signature": "ServiceClient getClient()", "full_signature": "public ServiceClient getClient()", "class_method_signature": "ServiceHost.getClient()", "testcase": false, "constructor": false}, {"identifier": "setClient", "parameters": "(ServiceClient client)", "modifiers": "public", "return": "void", "signature": "void setClient(ServiceClient client)", "full_signature": "public void setClient(ServiceClient client)", "class_method_signature": "ServiceHost.setClient(ServiceClient client)", "testcase": false, "constructor": false}, {"identifier": "saveServiceState", "parameters": "(Service s, Operation op, ServiceDocument state)", "modifiers": "protected", "return": "void", "signature": "void saveServiceState(Service s, Operation op, ServiceDocument state)", "full_signature": "protected void saveServiceState(Service s, Operation op, ServiceDocument state)", "class_method_signature": "ServiceHost.saveServiceState(Service s, Operation op, ServiceDocument state)", "testcase": false, "constructor": false}, {"identifier": "selectServiceOwnerAndSynchState", "parameters": "(Service s, Operation op)", "modifiers": "", "return": "void", "signature": "void selectServiceOwnerAndSynchState(Service s, Operation op)", "full_signature": " void selectServiceOwnerAndSynchState(Service s, Operation op)", "class_method_signature": "ServiceHost.selectServiceOwnerAndSynchState(Service s, Operation op)", "testcase": false, "constructor": false}, {"identifier": "findNodeSelectorService", "parameters": "(String path, Operation request)", "modifiers": "", "return": "NodeSelectorService", "signature": "NodeSelectorService findNodeSelectorService(String path, Operation request)", "full_signature": " NodeSelectorService findNodeSelectorService(String path, Operation request)", "class_method_signature": "ServiceHost.findNodeSelectorService(String path, Operation request)", "testcase": false, "constructor": false}, {"identifier": "broadcastRequest", "parameters": "(String selectorPath, boolean excludeThisHost, Operation request)", "modifiers": "public", "return": "void", "signature": "void broadcastRequest(String selectorPath, boolean excludeThisHost, Operation request)", "full_signature": "public void broadcastRequest(String selectorPath, boolean excludeThisHost, Operation request)", "class_method_signature": "ServiceHost.broadcastRequest(String selectorPath, boolean excludeThisHost, Operation request)", "testcase": false, "constructor": false}, {"identifier": "broadcastRequest", "parameters": "(String selectorPath, String key, boolean excludeThisHost,\n            Operation request)", "modifiers": "public", "return": "void", "signature": "void broadcastRequest(String selectorPath, String key, boolean excludeThisHost,\n            Operation request)", "full_signature": "public void broadcastRequest(String selectorPath, String key, boolean excludeThisHost,\n            Operation request)", "class_method_signature": "ServiceHost.broadcastRequest(String selectorPath, String key, boolean excludeThisHost,\n            Operation request)", "testcase": false, "constructor": false}, {"identifier": "selectOwner", "parameters": "(String selectorPath, String key, Operation op)", "modifiers": "public", "return": "void", "signature": "void selectOwner(String selectorPath, String key, Operation op)", "full_signature": "public void selectOwner(String selectorPath, String key, Operation op)", "class_method_signature": "ServiceHost.selectOwner(String selectorPath, String key, Operation op)", "testcase": false, "constructor": false}, {"identifier": "findOwnerNode", "parameters": "(String selectorPath, String path)", "modifiers": "public", "return": "SelectOwnerResponse", "signature": "SelectOwnerResponse findOwnerNode(String selectorPath, String path)", "full_signature": "public SelectOwnerResponse findOwnerNode(String selectorPath, String path)", "class_method_signature": "ServiceHost.findOwnerNode(String selectorPath, String path)", "testcase": false, "constructor": false}, {"identifier": "forwardRequest", "parameters": "(String groupPath, Operation request)", "modifiers": "public", "return": "void", "signature": "void forwardRequest(String groupPath, Operation request)", "full_signature": "public void forwardRequest(String groupPath, Operation request)", "class_method_signature": "ServiceHost.forwardRequest(String groupPath, Operation request)", "testcase": false, "constructor": false}, {"identifier": "forwardRequest", "parameters": "(String selectorPath, String key, Operation request)", "modifiers": "public", "return": "void", "signature": "void forwardRequest(String selectorPath, String key, Operation request)", "full_signature": "public void forwardRequest(String selectorPath, String key, Operation request)", "class_method_signature": "ServiceHost.forwardRequest(String selectorPath, String key, Operation request)", "testcase": false, "constructor": false}, {"identifier": "replicateRequest", "parameters": "(EnumSet<ServiceOption> serviceOptions, ServiceDocument state,\n            String selectorPath,\n            String selectionKey,\n            Operation op)", "modifiers": "public", "return": "void", "signature": "void replicateRequest(EnumSet<ServiceOption> serviceOptions, ServiceDocument state,\n            String selectorPath,\n            String selectionKey,\n            Operation op)", "full_signature": "public void replicateRequest(EnumSet<ServiceOption> serviceOptions, ServiceDocument state,\n            String selectorPath,\n            String selectionKey,\n            Operation op)", "class_method_signature": "ServiceHost.replicateRequest(EnumSet<ServiceOption> serviceOptions, ServiceDocument state,\n            String selectorPath,\n            String selectionKey,\n            Operation op)", "testcase": false, "constructor": false}, {"identifier": "queryServiceUris", "parameters": "(String servicePath, Operation get)", "modifiers": "public", "return": "void", "signature": "void queryServiceUris(String servicePath, Operation get)", "full_signature": "public void queryServiceUris(String servicePath, Operation get)", "class_method_signature": "ServiceHost.queryServiceUris(String servicePath, Operation get)", "testcase": false, "constructor": false}, {"identifier": "queryServiceUris", "parameters": "(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get)", "modifiers": "public", "return": "void", "signature": "void queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get)", "full_signature": "public void queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get)", "class_method_signature": "ServiceHost.queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get)", "testcase": false, "constructor": false}, {"identifier": "queryServiceUris", "parameters": "(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get, EnumSet<ServiceOption> exclusionOptions)", "modifiers": "public", "return": "void", "signature": "void queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get, EnumSet<ServiceOption> exclusionOptions)", "full_signature": "public void queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get, EnumSet<ServiceOption> exclusionOptions)", "class_method_signature": "ServiceHost.queryServiceUris(EnumSet<ServiceOption> options, boolean matchAllOptions,\n            Operation get, EnumSet<ServiceOption> exclusionOptions)", "testcase": false, "constructor": false}, {"identifier": "buildDocumentDescription", "parameters": "(String servicePath)", "modifiers": "public", "return": "ServiceDocumentDescription", "signature": "ServiceDocumentDescription buildDocumentDescription(String servicePath)", "full_signature": "public ServiceDocumentDescription buildDocumentDescription(String servicePath)", "class_method_signature": "ServiceHost.buildDocumentDescription(String servicePath)", "testcase": false, "constructor": false}, {"identifier": "buildDocumentDescription", "parameters": "(Service s)", "modifiers": "", "return": "ServiceDocumentDescription", "signature": "ServiceDocumentDescription buildDocumentDescription(Service s)", "full_signature": " ServiceDocumentDescription buildDocumentDescription(Service s)", "class_method_signature": "ServiceHost.buildDocumentDescription(Service s)", "testcase": false, "constructor": false}, {"identifier": "getPublicUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getPublicUri()", "full_signature": "public URI getPublicUri()", "class_method_signature": "ServiceHost.getPublicUri()", "testcase": false, "constructor": false}, {"identifier": "getPublicUriAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPublicUriAsString()", "full_signature": "public String getPublicUriAsString()", "class_method_signature": "ServiceHost.getPublicUriAsString()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getUri()", "full_signature": "public URI getUri()", "class_method_signature": "ServiceHost.getUri()", "testcase": false, "constructor": false}, {"identifier": "getSecureUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getSecureUri()", "full_signature": "public URI getSecureUri()", "class_method_signature": "ServiceHost.getSecureUri()", "testcase": false, "constructor": false}, {"identifier": "getPreferredAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPreferredAddress()", "full_signature": "public String getPreferredAddress()", "class_method_signature": "ServiceHost.getPreferredAddress()", "testcase": false, "constructor": false}, {"identifier": "setRequestPayloadSizeLimit", "parameters": "(int limit)", "modifiers": "public", "return": "void", "signature": "void setRequestPayloadSizeLimit(int limit)", "full_signature": "public void setRequestPayloadSizeLimit(int limit)", "class_method_signature": "ServiceHost.setRequestPayloadSizeLimit(int limit)", "testcase": false, "constructor": false}, {"identifier": "setResponsePayloadSizeLimit", "parameters": "(int limit)", "modifiers": "public", "return": "void", "signature": "void setResponsePayloadSizeLimit(int limit)", "full_signature": "public void setResponsePayloadSizeLimit(int limit)", "class_method_signature": "ServiceHost.setResponsePayloadSizeLimit(int limit)", "testcase": false, "constructor": false}, {"identifier": "getTokenSigner", "parameters": "()", "modifiers": "protected", "return": "Signer", "signature": "Signer getTokenSigner()", "full_signature": "protected Signer getTokenSigner()", "class_method_signature": "ServiceHost.getTokenSigner()", "testcase": false, "constructor": false}, {"identifier": "getTokenVerifier", "parameters": "()", "modifiers": "protected", "return": "Verifier", "signature": "Verifier getTokenVerifier()", "full_signature": "protected Verifier getTokenVerifier()", "class_method_signature": "ServiceHost.getTokenVerifier()", "testcase": false, "constructor": false}, {"identifier": "cacheAuthorizationContext", "parameters": "(Service s, AuthorizationContext ctx)", "modifiers": "public", "return": "void", "signature": "void cacheAuthorizationContext(Service s, AuthorizationContext ctx)", "full_signature": "public void cacheAuthorizationContext(Service s, AuthorizationContext ctx)", "class_method_signature": "ServiceHost.cacheAuthorizationContext(Service s, AuthorizationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "cacheAuthorizationContext", "parameters": "(Service s, String token, AuthorizationContext ctx)", "modifiers": "public", "return": "void", "signature": "void cacheAuthorizationContext(Service s, String token, AuthorizationContext ctx)", "full_signature": "public void cacheAuthorizationContext(Service s, String token, AuthorizationContext ctx)", "class_method_signature": "ServiceHost.cacheAuthorizationContext(Service s, String token, AuthorizationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "clearAuthorizationContext", "parameters": "(Service s, String userLink)", "modifiers": "public", "return": "void", "signature": "void clearAuthorizationContext(Service s, String userLink)", "full_signature": "public void clearAuthorizationContext(Service s, String userLink)", "class_method_signature": "ServiceHost.clearAuthorizationContext(Service s, String userLink)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContext", "parameters": "(Service s, String token)", "modifiers": "public", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContext(Service s, String token)", "full_signature": "public AuthorizationContext getAuthorizationContext(Service s, String token)", "class_method_signature": "ServiceHost.getAuthorizationContext(Service s, String token)", "testcase": false, "constructor": false}, {"identifier": "populateAuthorizationContext", "parameters": "(String authToken, String referrerPath, Consumer<AuthorizationContext> callback)", "modifiers": "public", "return": "void", "signature": "void populateAuthorizationContext(String authToken, String referrerPath, Consumer<AuthorizationContext> callback)", "full_signature": "public void populateAuthorizationContext(String authToken, String referrerPath, Consumer<AuthorizationContext> callback)", "class_method_signature": "ServiceHost.populateAuthorizationContext(String authToken, String referrerPath, Consumer<AuthorizationContext> callback)", "testcase": false, "constructor": false}, {"identifier": "getSystemAuthorizationContext", "parameters": "()", "modifiers": "protected", "return": "AuthorizationContext", "signature": "AuthorizationContext getSystemAuthorizationContext()", "full_signature": "protected AuthorizationContext getSystemAuthorizationContext()", "class_method_signature": "ServiceHost.getSystemAuthorizationContext()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContextForSubject", "parameters": "(String subject)", "modifiers": "protected", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContextForSubject(String subject)", "full_signature": "protected AuthorizationContext getAuthorizationContextForSubject(String subject)", "class_method_signature": "ServiceHost.getAuthorizationContextForSubject(String subject)", "testcase": false, "constructor": false}, {"identifier": "getGuestAuthorizationContext", "parameters": "()", "modifiers": "protected", "return": "AuthorizationContext", "signature": "AuthorizationContext getGuestAuthorizationContext()", "full_signature": "protected AuthorizationContext getGuestAuthorizationContext()", "class_method_signature": "ServiceHost.getGuestAuthorizationContext()", "testcase": false, "constructor": false}, {"identifier": "addPrivilegedService", "parameters": "(Class<? extends Service> serviceType)", "modifiers": "protected", "return": "void", "signature": "void addPrivilegedService(Class<? extends Service> serviceType)", "full_signature": "protected void addPrivilegedService(Class<? extends Service> serviceType)", "class_method_signature": "ServiceHost.addPrivilegedService(Class<? extends Service> serviceType)", "testcase": false, "constructor": false}, {"identifier": "isPrivilegedService", "parameters": "(Service service)", "modifiers": "protected", "return": "boolean", "signature": "boolean isPrivilegedService(Service service)", "full_signature": "protected boolean isPrivilegedService(Service service)", "class_method_signature": "ServiceHost.isPrivilegedService(Service service)", "testcase": false, "constructor": false}, {"identifier": "scheduleServiceOptionToggleMaintenance", "parameters": "(String path, EnumSet<ServiceOption> newOptions,\n            EnumSet<ServiceOption> removedOptions)", "modifiers": "", "return": "void", "signature": "void scheduleServiceOptionToggleMaintenance(String path, EnumSet<ServiceOption> newOptions,\n            EnumSet<ServiceOption> removedOptions)", "full_signature": " void scheduleServiceOptionToggleMaintenance(String path, EnumSet<ServiceOption> newOptions,\n            EnumSet<ServiceOption> removedOptions)", "class_method_signature": "ServiceHost.scheduleServiceOptionToggleMaintenance(String path, EnumSet<ServiceOption> newOptions,\n            EnumSet<ServiceOption> removedOptions)", "testcase": false, "constructor": false}, {"identifier": "getCurrentHttpScheme", "parameters": "()", "modifiers": "protected", "return": "HttpScheme", "signature": "HttpScheme getCurrentHttpScheme()", "full_signature": "protected HttpScheme getCurrentHttpScheme()", "class_method_signature": "ServiceHost.getCurrentHttpScheme()", "testcase": false, "constructor": false}, {"identifier": "isHostEqual", "parameters": "(URI remoteService)", "modifiers": "", "return": "boolean", "signature": "boolean isHostEqual(URI remoteService)", "full_signature": " boolean isHostEqual(URI remoteService)", "class_method_signature": "ServiceHost.isHostEqual(URI remoteService)", "testcase": false, "constructor": false}, {"identifier": "getRuntimeShutdownHook", "parameters": "()", "modifiers": "public", "return": "Thread", "signature": "Thread getRuntimeShutdownHook()", "full_signature": "public Thread getRuntimeShutdownHook()", "class_method_signature": "ServiceHost.getRuntimeShutdownHook()", "testcase": false, "constructor": false}, {"identifier": "registerRuntimeShutdownHook", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void registerRuntimeShutdownHook()", "full_signature": "public void registerRuntimeShutdownHook()", "class_method_signature": "ServiceHost.registerRuntimeShutdownHook()", "testcase": false, "constructor": false}, {"identifier": "unregisterRuntimeShutdownHook", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean unregisterRuntimeShutdownHook()", "full_signature": "public boolean unregisterRuntimeShutdownHook()", "class_method_signature": "ServiceHost.unregisterRuntimeShutdownHook()", "testcase": false, "constructor": false}, {"identifier": "failRequestServiceAlreadyStarted", "parameters": "(String path, Service s, Operation post)", "modifiers": "public", "return": "void", "signature": "void failRequestServiceAlreadyStarted(String path, Service s, Operation post)", "full_signature": "public void failRequestServiceAlreadyStarted(String path, Service s, Operation post)", "class_method_signature": "ServiceHost.failRequestServiceAlreadyStarted(String path, Service s, Operation post)", "testcase": false, "constructor": false}, {"identifier": "getTracer", "parameters": "()", "modifiers": "public", "return": "Tracer", "signature": "Tracer getTracer()", "full_signature": "public Tracer getTracer()", "class_method_signature": "ServiceHost.getTracer()", "testcase": false, "constructor": false}, {"identifier": "configureHttpListener", "parameters": "(ServiceRequestListener httpListener)", "modifiers": "protected", "return": "void", "signature": "void configureHttpListener(ServiceRequestListener httpListener)", "full_signature": "protected void configureHttpListener(ServiceRequestListener httpListener)", "class_method_signature": "ServiceHost.configureHttpListener(ServiceRequestListener httpListener)", "testcase": false, "constructor": false}, {"identifier": "configureHttpsListener", "parameters": "(ServiceRequestListener httpsListener)", "modifiers": "protected", "return": "void", "signature": "void configureHttpsListener(ServiceRequestListener httpsListener)", "full_signature": "protected void configureHttpsListener(ServiceRequestListener httpsListener)", "class_method_signature": "ServiceHost.configureHttpsListener(ServiceRequestListener httpsListener)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/ServiceHost.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return String.format(\"[\"\n                + \"%n isStarted: %s\"\n                + \"%n httpPort: %d\"\n                + \"%n httpsPort: %d\"\n                + \"%n id: %s\"\n                + \"%n attached services: %d\"\n                + \"%n]\",\n                isStarted(),\n                this.state.httpPort,\n                this.state.httpsPort,\n                this.state.id,\n                this.attachedServices.size());\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ServiceHost.toString()", "testcase": false, "constructor": false, "invocations": ["format", "isStarted", "size"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}