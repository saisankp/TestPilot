{"test_class": {"identifier": "WorkflowEngineFactoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WorkflowEngineFactory factory;", "modifier": "private", "type": "WorkflowEngineFactory", "declarator": "factory", "var_name": "factory"}], "file": "rice-middleware/impl/src/test/java/org/kuali/rice/kew/engine/WorkflowEngineFactoryImplTest.java"}, "test_case": {"identifier": "simulationEngineCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void simulationEngineCreate() {\n        OrchestrationConfig config = new OrchestrationConfig(EngineCapability.SIMULATION);\n        WorkflowEngine workflowEngine = factory.newEngine(config);\n        \n        assertNotNull(workflowEngine);\n        assertFalse(workflowEngine instanceof BlanketApproveEngine);\n        assertTrue(workflowEngine instanceof SimulationEngine);\n    }", "signature": "void simulationEngineCreate()", "full_signature": "@Test public void simulationEngineCreate()", "class_method_signature": "WorkflowEngineFactoryImplTest.simulationEngineCreate()", "testcase": true, "constructor": false, "invocations": ["newEngine", "assertNotNull", "assertFalse", "assertTrue"]}, "focal_class": {"identifier": "WorkflowEngineFactoryImpl", "superclass": "", "interfaces": "implements WorkflowEngineFactory, InitializingBean", "fields": [{"original_string": "private RouteNodeService routeNodeService;", "modifier": "private", "type": "RouteNodeService", "declarator": "routeNodeService", "var_name": "routeNodeService"}, {"original_string": "private RouteHeaderService routeHeaderService;", "modifier": "private", "type": "RouteHeaderService", "declarator": "routeHeaderService", "var_name": "routeHeaderService"}, {"original_string": "private ParameterService parameterService;", "modifier": "private", "type": "ParameterService", "declarator": "parameterService", "var_name": "parameterService"}], "methods": [{"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "WorkflowEngineFactoryImpl.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "newEngine", "parameters": "(OrchestrationConfig config)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "E", "signature": "E newEngine(OrchestrationConfig config)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public E newEngine(OrchestrationConfig config)", "class_method_signature": "WorkflowEngineFactoryImpl.newEngine(OrchestrationConfig config)", "testcase": false, "constructor": false}, {"identifier": "getRouteNodeService", "parameters": "()", "modifiers": "public", "return": "RouteNodeService", "signature": "RouteNodeService getRouteNodeService()", "full_signature": "public RouteNodeService getRouteNodeService()", "class_method_signature": "WorkflowEngineFactoryImpl.getRouteNodeService()", "testcase": false, "constructor": false}, {"identifier": "setRouteNodeService", "parameters": "(RouteNodeService routeNodeService)", "modifiers": "public", "return": "void", "signature": "void setRouteNodeService(RouteNodeService routeNodeService)", "full_signature": "public void setRouteNodeService(RouteNodeService routeNodeService)", "class_method_signature": "WorkflowEngineFactoryImpl.setRouteNodeService(RouteNodeService routeNodeService)", "testcase": false, "constructor": false}, {"identifier": "getRouteHeaderService", "parameters": "()", "modifiers": "public", "return": "RouteHeaderService", "signature": "RouteHeaderService getRouteHeaderService()", "full_signature": "public RouteHeaderService getRouteHeaderService()", "class_method_signature": "WorkflowEngineFactoryImpl.getRouteHeaderService()", "testcase": false, "constructor": false}, {"identifier": "setRouteHeaderService", "parameters": "(RouteHeaderService routeHeaderService)", "modifiers": "public", "return": "void", "signature": "void setRouteHeaderService(RouteHeaderService routeHeaderService)", "full_signature": "public void setRouteHeaderService(RouteHeaderService routeHeaderService)", "class_method_signature": "WorkflowEngineFactoryImpl.setRouteHeaderService(RouteHeaderService routeHeaderService)", "testcase": false, "constructor": false}, {"identifier": "getParameterService", "parameters": "()", "modifiers": "public", "return": "ParameterService", "signature": "ParameterService getParameterService()", "full_signature": "public ParameterService getParameterService()", "class_method_signature": "WorkflowEngineFactoryImpl.getParameterService()", "testcase": false, "constructor": false}, {"identifier": "setParameterService", "parameters": "(ParameterService parameterService)", "modifiers": "public", "return": "void", "signature": "void setParameterService(ParameterService parameterService)", "full_signature": "public void setParameterService(ParameterService parameterService)", "class_method_signature": "WorkflowEngineFactoryImpl.setParameterService(ParameterService parameterService)", "testcase": false, "constructor": false}], "file": "rice-middleware/impl/src/main/java/org/kuali/rice/kew/engine/WorkflowEngineFactoryImpl.java"}, "focal_method": {"identifier": "newEngine", "parameters": "(OrchestrationConfig config)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "E", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public <E extends WorkflowEngine> E newEngine(OrchestrationConfig config) {\n        switch (config.getCapability()) {\n            case STANDARD:\n                return (E) new StandardWorkflowEngine(routeNodeService, routeHeaderService, parameterService, config);\n            case BLANKET_APPROVAL:\n                return (E) new BlanketApproveEngine(routeNodeService, routeHeaderService, parameterService, config);\n            case SIMULATION:\n                return (E) new SimulationEngine(routeNodeService, routeHeaderService, parameterService, config);\n        }\n        \n        return null;\n    }", "signature": "E newEngine(OrchestrationConfig config)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public E newEngine(OrchestrationConfig config)", "class_method_signature": "WorkflowEngineFactoryImpl.newEngine(OrchestrationConfig config)", "testcase": false, "constructor": false, "invocations": ["getCapability"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}