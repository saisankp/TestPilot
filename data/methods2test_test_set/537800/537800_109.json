{"test_class": {"identifier": "MetricsStatsCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PREFIX = \"foo\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"foo\"", "var_name": "PREFIX"}, {"original_string": "private MetricsStatsCounter stats;", "modifier": "private", "type": "MetricsStatsCounter", "declarator": "stats", "var_name": "stats"}, {"original_string": "private MetricRegistry registry;", "modifier": "private", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}], "file": "metrics-caffeine/src/test/java/com/codahale/metrics/caffeine/MetricsStatsCounterTest.java"}, "test_case": {"identifier": "loadSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void loadSuccess() {\n    stats.recordLoadSuccess(256);\n    assertThat(registry.timer(PREFIX + \".loads-success\").getCount()).isEqualTo(1);\n  }", "signature": "void loadSuccess()", "full_signature": "@Test public void loadSuccess()", "class_method_signature": "MetricsStatsCounterTest.loadSuccess()", "testcase": true, "constructor": false, "invocations": ["recordLoadSuccess", "isEqualTo", "assertThat", "getCount", "timer"]}, "focal_class": {"identifier": "MetricsStatsCounter", "superclass": "", "interfaces": "implements StatsCounter", "fields": [{"original_string": "private final Counter hitCount;", "modifier": "private final", "type": "Counter", "declarator": "hitCount", "var_name": "hitCount"}, {"original_string": "private final Counter missCount;", "modifier": "private final", "type": "Counter", "declarator": "missCount", "var_name": "missCount"}, {"original_string": "private final Timer loadSuccess;", "modifier": "private final", "type": "Timer", "declarator": "loadSuccess", "var_name": "loadSuccess"}, {"original_string": "private final Timer loadFailure;", "modifier": "private final", "type": "Timer", "declarator": "loadFailure", "var_name": "loadFailure"}, {"original_string": "private final Histogram evictions;", "modifier": "private final", "type": "Histogram", "declarator": "evictions", "var_name": "evictions"}, {"original_string": "private final Counter evictionWeight;", "modifier": "private final", "type": "Counter", "declarator": "evictionWeight", "var_name": "evictionWeight"}, {"original_string": "private final EnumMap<RemovalCause, Histogram> evictionsWithCause;", "modifier": "private final", "type": "EnumMap<RemovalCause, Histogram>", "declarator": "evictionsWithCause", "var_name": "evictionsWithCause"}, {"original_string": "private final LongAdder totalLoadTime = new LongAdder();", "modifier": "private final", "type": "LongAdder", "declarator": "totalLoadTime = new LongAdder()", "var_name": "totalLoadTime"}], "methods": [{"identifier": "MetricsStatsCounter", "parameters": "(MetricRegistry registry, String metricsPrefix)", "modifiers": "public", "return": "", "signature": " MetricsStatsCounter(MetricRegistry registry, String metricsPrefix)", "full_signature": "public  MetricsStatsCounter(MetricRegistry registry, String metricsPrefix)", "class_method_signature": "MetricsStatsCounter.MetricsStatsCounter(MetricRegistry registry, String metricsPrefix)", "testcase": false, "constructor": true}, {"identifier": "recordHits", "parameters": "(int count)", "modifiers": "@Override public", "return": "void", "signature": "void recordHits(int count)", "full_signature": "@Override public void recordHits(int count)", "class_method_signature": "MetricsStatsCounter.recordHits(int count)", "testcase": false, "constructor": false}, {"identifier": "recordMisses", "parameters": "(int count)", "modifiers": "@Override public", "return": "void", "signature": "void recordMisses(int count)", "full_signature": "@Override public void recordMisses(int count)", "class_method_signature": "MetricsStatsCounter.recordMisses(int count)", "testcase": false, "constructor": false}, {"identifier": "recordLoadSuccess", "parameters": "(long loadTime)", "modifiers": "@Override public", "return": "void", "signature": "void recordLoadSuccess(long loadTime)", "full_signature": "@Override public void recordLoadSuccess(long loadTime)", "class_method_signature": "MetricsStatsCounter.recordLoadSuccess(long loadTime)", "testcase": false, "constructor": false}, {"identifier": "recordLoadFailure", "parameters": "(long loadTime)", "modifiers": "@Override public", "return": "void", "signature": "void recordLoadFailure(long loadTime)", "full_signature": "@Override public void recordLoadFailure(long loadTime)", "class_method_signature": "MetricsStatsCounter.recordLoadFailure(long loadTime)", "testcase": false, "constructor": false}, {"identifier": "recordEviction", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"deprecation\") public", "return": "void", "signature": "void recordEviction()", "full_signature": "@Override @SuppressWarnings(\"deprecation\") public void recordEviction()", "class_method_signature": "MetricsStatsCounter.recordEviction()", "testcase": false, "constructor": false}, {"identifier": "recordEviction", "parameters": "(int weight)", "modifiers": "@Override public", "return": "void", "signature": "void recordEviction(int weight)", "full_signature": "@Override public void recordEviction(int weight)", "class_method_signature": "MetricsStatsCounter.recordEviction(int weight)", "testcase": false, "constructor": false}, {"identifier": "recordEviction", "parameters": "(@NonNegative int weight, RemovalCause cause)", "modifiers": "@Override public", "return": "void", "signature": "void recordEviction(@NonNegative int weight, RemovalCause cause)", "full_signature": "@Override public void recordEviction(@NonNegative int weight, RemovalCause cause)", "class_method_signature": "MetricsStatsCounter.recordEviction(@NonNegative int weight, RemovalCause cause)", "testcase": false, "constructor": false}, {"identifier": "snapshot", "parameters": "()", "modifiers": "@Override public", "return": "CacheStats", "signature": "CacheStats snapshot()", "full_signature": "@Override public CacheStats snapshot()", "class_method_signature": "MetricsStatsCounter.snapshot()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MetricsStatsCounter.toString()", "testcase": false, "constructor": false}], "file": "metrics-caffeine/src/main/java/com/codahale/metrics/caffeine/MetricsStatsCounter.java"}, "focal_method": {"identifier": "recordLoadSuccess", "parameters": "(long loadTime)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void recordLoadSuccess(long loadTime) {\n    loadSuccess.update(loadTime, TimeUnit.NANOSECONDS);\n    totalLoadTime.add(loadTime);\n  }", "signature": "void recordLoadSuccess(long loadTime)", "full_signature": "@Override public void recordLoadSuccess(long loadTime)", "class_method_signature": "MetricsStatsCounter.recordLoadSuccess(long loadTime)", "testcase": false, "constructor": false, "invocations": ["update", "add"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}