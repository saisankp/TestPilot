{"test_class": {"identifier": "TransactionAwareDirContextInvocationHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ContextSource contextSourceMock;", "modifier": "private", "type": "ContextSource", "declarator": "contextSourceMock", "var_name": "contextSourceMock"}, {"original_string": "private DirContext dirContextMock;", "modifier": "private", "type": "DirContext", "declarator": "dirContextMock", "var_name": "dirContextMock"}, {"original_string": "private TransactionAwareDirContextInvocationHandler tested;", "modifier": "private", "type": "TransactionAwareDirContextInvocationHandler", "declarator": "tested", "var_name": "tested"}, {"original_string": "private DirContextHolder holder;", "modifier": "private", "type": "DirContextHolder", "declarator": "holder", "var_name": "holder"}], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/manager/TransactionAwareDirContextInvocationHandlerTest.java"}, "test_case": {"identifier": "testDoCloseConnection_NoTransaction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoCloseConnection_NoTransaction() throws NamingException {\n        tested.doCloseConnection(dirContextMock, contextSourceMock);\n\n        verify(dirContextMock).close();\n    }", "signature": "void testDoCloseConnection_NoTransaction()", "full_signature": "@Test public void testDoCloseConnection_NoTransaction()", "class_method_signature": "TransactionAwareDirContextInvocationHandlerTest.testDoCloseConnection_NoTransaction()", "testcase": true, "constructor": false, "invocations": ["doCloseConnection", "close", "verify"]}, "focal_class": {"identifier": "TransactionAwareDirContextInvocationHandler", "superclass": "", "interfaces": "implements\n        InvocationHandler", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(TransactionAwareDirContextInvocationHandler.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TransactionAwareDirContextInvocationHandler.class)", "var_name": "log"}, {"original_string": "private DirContext target;", "modifier": "private", "type": "DirContext", "declarator": "target", "var_name": "target"}, {"original_string": "private ContextSource contextSource;", "modifier": "private", "type": "ContextSource", "declarator": "contextSource", "var_name": "contextSource"}], "methods": [{"identifier": "TransactionAwareDirContextInvocationHandler", "parameters": "(DirContext target,\n            ContextSource contextSource)", "modifiers": "public", "return": "", "signature": " TransactionAwareDirContextInvocationHandler(DirContext target,\n            ContextSource contextSource)", "full_signature": "public  TransactionAwareDirContextInvocationHandler(DirContext target,\n            ContextSource contextSource)", "class_method_signature": "TransactionAwareDirContextInvocationHandler.TransactionAwareDirContextInvocationHandler(DirContext target,\n            ContextSource contextSource)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "public", "return": "Object", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "TransactionAwareDirContextInvocationHandler.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}, {"identifier": "doCloseConnection", "parameters": "(DirContext context, ContextSource contextSource)", "modifiers": "", "return": "void", "signature": "void doCloseConnection(DirContext context, ContextSource contextSource)", "full_signature": " void doCloseConnection(DirContext context, ContextSource contextSource)", "class_method_signature": "TransactionAwareDirContextInvocationHandler.doCloseConnection(DirContext context, ContextSource contextSource)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/manager/TransactionAwareDirContextInvocationHandler.java"}, "focal_method": {"identifier": "doCloseConnection", "parameters": "(DirContext context, ContextSource contextSource)", "modifiers": "", "return": "void", "body": "void doCloseConnection(DirContext context, ContextSource contextSource)\n            throws javax.naming.NamingException {\n        DirContextHolder transactionContextHolder = (DirContextHolder) TransactionSynchronizationManager\n                .getResource(contextSource);\n        if (transactionContextHolder == null\n                || transactionContextHolder.getCtx() != context) {\n            log.debug(\"Closing context\");\n            // This is not the transactional context or the transaction is\n            // no longer active - we should close it.\n            context.close();\n        } else {\n            log.debug(\"Leaving transactional context open\");\n        }\n    }", "signature": "void doCloseConnection(DirContext context, ContextSource contextSource)", "full_signature": " void doCloseConnection(DirContext context, ContextSource contextSource)", "class_method_signature": "TransactionAwareDirContextInvocationHandler.doCloseConnection(DirContext context, ContextSource contextSource)", "testcase": false, "constructor": false, "invocations": ["getResource", "getCtx", "debug", "close", "debug"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}