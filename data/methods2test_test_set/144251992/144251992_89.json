{"test_class": {"identifier": "RepositoryUserProjectServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<String> LOB_DEPENDENT_STATUS = Set.of(\"open\");", "modifier": "private static final", "type": "Set<String>", "declarator": "LOB_DEPENDENT_STATUS = Set.of(\"open\")", "var_name": "LOB_DEPENDENT_STATUS"}, {"original_string": "private static final Set<String> EXCLUDED_STATUS = Set.of(\"closed\");", "modifier": "private static final", "type": "Set<String>", "declarator": "EXCLUDED_STATUS = Set.of(\"closed\")", "var_name": "EXCLUDED_STATUS"}, {"original_string": "@Mock\n    private UserService userServiceMock;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userServiceMock", "var_name": "userServiceMock"}, {"original_string": "@Mock\n    private ProjectRepository projectRepoMock;", "modifier": "@Mock\n    private", "type": "ProjectRepository", "declarator": "projectRepoMock", "var_name": "projectRepoMock"}, {"original_string": "@Mock\n    private HibernateSearchService managerHibernateSearchServiceMock;", "modifier": "@Mock\n    private", "type": "HibernateSearchService", "declarator": "managerHibernateSearchServiceMock", "var_name": "managerHibernateSearchServiceMock"}, {"original_string": "@Mock\n    private HibernateSearchService staffHibernateSearchServiceMock;", "modifier": "@Mock\n    private", "type": "HibernateSearchService", "declarator": "staffHibernateSearchServiceMock", "var_name": "staffHibernateSearchServiceMock"}, {"original_string": "@Mock\n    private User userMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "userMock", "var_name": "userMock"}, {"original_string": "@Mock\n    private UserData userDataMock;", "modifier": "@Mock\n    private", "type": "UserData", "declarator": "userDataMock", "var_name": "userDataMock"}, {"original_string": "@Mock\n    private Project projectMock;", "modifier": "@Mock\n    private", "type": "Project", "declarator": "projectMock", "var_name": "projectMock"}, {"original_string": "@Mock\n    private ProjectBoardConfigurationProperties propertiesMock;", "modifier": "@Mock\n    private", "type": "ProjectBoardConfigurationProperties", "declarator": "propertiesMock", "var_name": "propertiesMock"}, {"original_string": "private RepositoryUserProjectService userProjectService;", "modifier": "private", "type": "RepositoryUserProjectService", "declarator": "userProjectService", "var_name": "userProjectService"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/ad/project/service/RepositoryUserProjectServiceTest.java"}, "test_case": {"identifier": "getProjectsForUserPaginatedReturnsLobDependentProjectsWhenUserIsNoManager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getProjectsForUserPaginatedReturnsLobDependentProjectsWhenUserIsNoManager() {\n        // given\n        var userLob = \"LoB Test1234\";\n        var pageable = PageRequest.of(0, 100);\n        var expectedStatusSpecification = new ProjectSpecification(EXCLUDED_STATUS, LOB_DEPENDENT_STATUS, userLob);\n        var expectedProjects = List.of(projectMock);\n        var expectedPage = new PageImpl<>(expectedProjects);\n\n        given(userServiceMock.getUserData(userMock)).willReturn(userDataMock);\n        given(userDataMock.getLob()).willReturn(userLob);\n        given(projectRepoMock.findAll(expectedStatusSpecification, pageable)).willReturn(expectedPage);\n\n        // when\n        var actualPage = userProjectService.getProjectsForUserPaginated(userMock, pageable);\n\n        // then\n        assertThat(actualPage).isEqualTo(expectedPage);\n    }", "signature": "void getProjectsForUserPaginatedReturnsLobDependentProjectsWhenUserIsNoManager()", "full_signature": "@Test public void getProjectsForUserPaginatedReturnsLobDependentProjectsWhenUserIsNoManager()", "class_method_signature": "RepositoryUserProjectServiceTest.getProjectsForUserPaginatedReturnsLobDependentProjectsWhenUserIsNoManager()", "testcase": true, "constructor": false, "invocations": ["of", "of", "willReturn", "given", "getUserData", "willReturn", "given", "getLob", "willReturn", "given", "findAll", "getProjectsForUserPaginated", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "RepositoryUserProjectService", "superclass": "", "interfaces": "implements PageableUserProjectService", "fields": [{"original_string": "private final ProjectRepository projectRepo;", "modifier": "private final", "type": "ProjectRepository", "declarator": "projectRepo", "var_name": "projectRepo"}, {"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final HibernateSearchService managerSearchService;", "modifier": "private final", "type": "HibernateSearchService", "declarator": "managerSearchService", "var_name": "managerSearchService"}, {"original_string": "private final HibernateSearchService staffSearchService;", "modifier": "private final", "type": "HibernateSearchService", "declarator": "staffSearchService", "var_name": "staffSearchService"}, {"original_string": "private final Set<String> lobDependentStatus;", "modifier": "private final", "type": "Set<String>", "declarator": "lobDependentStatus", "var_name": "lobDependentStatus"}, {"original_string": "private final Set<String> excludedStatus;", "modifier": "private final", "type": "Set<String>", "declarator": "excludedStatus", "var_name": "excludedStatus"}], "methods": [{"identifier": "RepositoryUserProjectService", "parameters": "(ProjectRepository projectRepo,\n                                        UserService userService,\n                                        @Qualifier(\"managerSearchService\") HibernateSearchService managerSearchService,\n                                        @Qualifier(\"staffSearchService\") HibernateSearchService staffSearchService,\n                                        ProjectBoardConfigurationProperties properties)", "modifiers": "@Autowired public", "return": "", "signature": " RepositoryUserProjectService(ProjectRepository projectRepo,\n                                        UserService userService,\n                                        @Qualifier(\"managerSearchService\") HibernateSearchService managerSearchService,\n                                        @Qualifier(\"staffSearchService\") HibernateSearchService staffSearchService,\n                                        ProjectBoardConfigurationProperties properties)", "full_signature": "@Autowired public  RepositoryUserProjectService(ProjectRepository projectRepo,\n                                        UserService userService,\n                                        @Qualifier(\"managerSearchService\") HibernateSearchService managerSearchService,\n                                        @Qualifier(\"staffSearchService\") HibernateSearchService staffSearchService,\n                                        ProjectBoardConfigurationProperties properties)", "class_method_signature": "RepositoryUserProjectService.RepositoryUserProjectService(ProjectRepository projectRepo,\n                                        UserService userService,\n                                        @Qualifier(\"managerSearchService\") HibernateSearchService managerSearchService,\n                                        @Qualifier(\"staffSearchService\") HibernateSearchService staffSearchService,\n                                        ProjectBoardConfigurationProperties properties)", "testcase": false, "constructor": true}, {"identifier": "getProjectsForUser", "parameters": "(User user, Sort sort)", "modifiers": "@Override public", "return": "List<Project>", "signature": "List<Project> getProjectsForUser(User user, Sort sort)", "full_signature": "@Override public List<Project> getProjectsForUser(User user, Sort sort)", "class_method_signature": "RepositoryUserProjectService.getProjectsForUser(User user, Sort sort)", "testcase": false, "constructor": false}, {"identifier": "searchProjectsForUser", "parameters": "(User user, String query, Sort sort)", "modifiers": "@Override public", "return": "List<Project>", "signature": "List<Project> searchProjectsForUser(User user, String query, Sort sort)", "full_signature": "@Override public List<Project> searchProjectsForUser(User user, String query, Sort sort)", "class_method_signature": "RepositoryUserProjectService.searchProjectsForUser(User user, String query, Sort sort)", "testcase": false, "constructor": false}, {"identifier": "getProjectsForUserPaginated", "parameters": "(User user, Pageable pageable)", "modifiers": "@Override public", "return": "Page<Project>", "signature": "Page<Project> getProjectsForUserPaginated(User user, Pageable pageable)", "full_signature": "@Override public Page<Project> getProjectsForUserPaginated(User user, Pageable pageable)", "class_method_signature": "RepositoryUserProjectService.getProjectsForUserPaginated(User user, Pageable pageable)", "testcase": false, "constructor": false}, {"identifier": "searchProjectsForUserPaginated", "parameters": "(String query, User user, Pageable pageable)", "modifiers": "@Override public", "return": "Page<Project>", "signature": "Page<Project> searchProjectsForUserPaginated(String query, User user, Pageable pageable)", "full_signature": "@Override public Page<Project> searchProjectsForUserPaginated(String query, User user, Pageable pageable)", "class_method_signature": "RepositoryUserProjectService.searchProjectsForUserPaginated(String query, User user, Pageable pageable)", "testcase": false, "constructor": false}, {"identifier": "getProjectSpecificationForUser", "parameters": "(User user)", "modifiers": "private", "return": "Specification<Project>", "signature": "Specification<Project> getProjectSpecificationForUser(User user)", "full_signature": "private Specification<Project> getProjectSpecificationForUser(User user)", "class_method_signature": "RepositoryUserProjectService.getProjectSpecificationForUser(User user)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/ad/project/service/RepositoryUserProjectService.java"}, "focal_method": {"identifier": "getProjectsForUserPaginated", "parameters": "(User user, Pageable pageable)", "modifiers": "@Override public", "return": "Page<Project>", "body": "@Override\n    public Page<Project> getProjectsForUserPaginated(User user, Pageable pageable) {\n        return projectRepo.findAll(getProjectSpecificationForUser(user), pageable);\n    }", "signature": "Page<Project> getProjectsForUserPaginated(User user, Pageable pageable)", "full_signature": "@Override public Page<Project> getProjectsForUserPaginated(User user, Pageable pageable)", "class_method_signature": "RepositoryUserProjectService.getProjectsForUserPaginated(User user, Pageable pageable)", "testcase": false, "constructor": false, "invocations": ["findAll", "getProjectSpecificationForUser"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}