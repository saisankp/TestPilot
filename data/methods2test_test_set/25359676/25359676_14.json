{"test_class": {"identifier": "ComponentServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private DataObjectService dataObjectService;", "modifier": "@Mock private", "type": "DataObjectService", "declarator": "dataObjectService", "var_name": "dataObjectService"}, {"original_string": "@Mock private NamespaceService namespaceService;", "modifier": "@Mock private", "type": "NamespaceService", "declarator": "namespaceService", "var_name": "namespaceService"}, {"original_string": "@Mock private ComponentSetDaoJpa componentSetDao;", "modifier": "@Mock private", "type": "ComponentSetDaoJpa", "declarator": "componentSetDao", "var_name": "componentSetDao"}, {"original_string": "@InjectMocks private ComponentServiceImpl componentService = new ComponentServiceImpl();", "modifier": "@InjectMocks private", "type": "ComponentServiceImpl", "declarator": "componentService = new ComponentServiceImpl()", "var_name": "componentService"}, {"original_string": "private static final String NAMESPACE_CODE = \"MyNamespaceCode\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_CODE = \"MyNamespaceCode\"", "var_name": "NAMESPACE_CODE"}, {"original_string": "private static final String CODE = \"MyComponentCode\";", "modifier": "private static final", "type": "String", "declarator": "CODE = \"MyComponentCode\"", "var_name": "CODE"}, {"original_string": "private static final String NAME = \"This is my component!\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"This is my component!\"", "var_name": "NAME"}, {"original_string": "private static final String DERIVED_CODE = \"MyDerivedComponentCode\";", "modifier": "private static final", "type": "String", "declarator": "DERIVED_CODE = \"MyDerivedComponentCode\"", "var_name": "DERIVED_CODE"}, {"original_string": "private static final String DERIVED_NAME = \"This is my derived component!\";", "modifier": "private static final", "type": "String", "declarator": "DERIVED_NAME = \"This is my derived component!\"", "var_name": "DERIVED_NAME"}, {"original_string": "private static final String DERIVED_COMPONENT_SET_ID = \"derivedComponentSetId\";", "modifier": "private static final", "type": "String", "declarator": "DERIVED_COMPONENT_SET_ID = \"derivedComponentSetId\"", "var_name": "DERIVED_COMPONENT_SET_ID"}, {"original_string": "private static final String COMPONENT_SET_ID = \"componentSetId\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_SET_ID = \"componentSetId\"", "var_name": "COMPONENT_SET_ID"}, {"original_string": "final Component component = createComponent();", "modifier": "final", "type": "Component", "declarator": "component = createComponent()", "var_name": "component"}, {"original_string": "final org.kuali.rice.coreservice.impl.component.ComponentBo componentBo = convertComponent(component);", "modifier": "final", "type": "org.kuali.rice.coreservice.impl.component.ComponentBo", "declarator": "componentBo = convertComponent(component)", "var_name": "componentBo"}, {"original_string": "private ComponentService compService = componentService;", "modifier": "private", "type": "ComponentService", "declarator": "compService = componentService", "var_name": "compService"}, {"original_string": "final Component derivedComponent = createDerivedComponent();", "modifier": "final", "type": "Component", "declarator": "derivedComponent = createDerivedComponent()", "var_name": "derivedComponent"}, {"original_string": "final DerivedComponentBo derivedComponentBo = DerivedComponentBo.from(derivedComponent);", "modifier": "final", "type": "DerivedComponentBo", "declarator": "derivedComponentBo = DerivedComponentBo.from(derivedComponent)", "var_name": "derivedComponentBo"}, {"original_string": "final ComponentSetBo componentSetBo = createComponentSet();", "modifier": "final", "type": "ComponentSetBo", "declarator": "componentSetBo = createComponentSet()", "var_name": "componentSetBo"}], "file": "rice-middleware/core-service/impl/src/test/java/org/kuali/rice/coreservice/impl/component/ComponentServiceImplTest.java"}, "test_case": {"identifier": "test_getAllComponentsByNamespaceCode_empty_namespaceCode", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void test_getAllComponentsByNamespaceCode_empty_namespaceCode() throws Exception{\n        getComponentService().getAllComponentsByNamespaceCode(\"\");\n    }", "signature": "void test_getAllComponentsByNamespaceCode_empty_namespaceCode()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void test_getAllComponentsByNamespaceCode_empty_namespaceCode()", "class_method_signature": "ComponentServiceImplTest.test_getAllComponentsByNamespaceCode_empty_namespaceCode()", "testcase": true, "constructor": false, "invocations": ["getAllComponentsByNamespaceCode", "getComponentService"]}, "focal_class": {"identifier": "ComponentServiceImpl", "superclass": "", "interfaces": "implements ComponentService", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ComponentServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ComponentServiceImpl.class)", "var_name": "LOG"}, {"original_string": "private ComponentSetDao componentSetDao;", "modifier": "private", "type": "ComponentSetDao", "declarator": "componentSetDao", "var_name": "componentSetDao"}, {"original_string": "private DataObjectService dataObjectService;", "modifier": "private", "type": "DataObjectService", "declarator": "dataObjectService", "var_name": "dataObjectService"}], "methods": [{"identifier": "getComponentByCode", "parameters": "(String namespaceCode, String componentCode)", "modifiers": "@Override public", "return": "Component", "signature": "Component getComponentByCode(String namespaceCode, String componentCode)", "full_signature": "@Override public Component getComponentByCode(String namespaceCode, String componentCode)", "class_method_signature": "ComponentServiceImpl.getComponentByCode(String namespaceCode, String componentCode)", "testcase": false, "constructor": false}, {"identifier": "getAllComponentsByNamespaceCode", "parameters": "(String namespaceCode)", "modifiers": "@Override public", "return": "List<Component>", "signature": "List<Component> getAllComponentsByNamespaceCode(String namespaceCode)", "full_signature": "@Override public List<Component> getAllComponentsByNamespaceCode(String namespaceCode)", "class_method_signature": "ComponentServiceImpl.getAllComponentsByNamespaceCode(String namespaceCode)", "testcase": false, "constructor": false}, {"identifier": "getActiveComponentsByNamespaceCode", "parameters": "(String namespaceCode)", "modifiers": "@Override public", "return": "List<Component>", "signature": "List<Component> getActiveComponentsByNamespaceCode(String namespaceCode)", "full_signature": "@Override public List<Component> getActiveComponentsByNamespaceCode(String namespaceCode)", "class_method_signature": "ComponentServiceImpl.getActiveComponentsByNamespaceCode(String namespaceCode)", "testcase": false, "constructor": false}, {"identifier": "getDerivedComponentSet", "parameters": "(String componentSetId)", "modifiers": "@Override public", "return": "List<Component>", "signature": "List<Component> getDerivedComponentSet(String componentSetId)", "full_signature": "@Override public List<Component> getDerivedComponentSet(String componentSetId)", "class_method_signature": "ComponentServiceImpl.getDerivedComponentSet(String componentSetId)", "testcase": false, "constructor": false}, {"identifier": "publishDerivedComponents", "parameters": "(String componentSetId, List<Component> components)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void publishDerivedComponents(String componentSetId, List<Component> components)", "full_signature": "@Override @Transactional public void publishDerivedComponents(String componentSetId, List<Component> components)", "class_method_signature": "ComponentServiceImpl.publishDerivedComponents(String componentSetId, List<Component> components)", "testcase": false, "constructor": false}, {"identifier": "validateAndNormalizeComponents", "parameters": "(String componentSetId, List<Component> components)", "modifiers": "protected", "return": "List<Component>", "signature": "List<Component> validateAndNormalizeComponents(String componentSetId, List<Component> components)", "full_signature": "protected List<Component> validateAndNormalizeComponents(String componentSetId, List<Component> components)", "class_method_signature": "ComponentServiceImpl.validateAndNormalizeComponents(String componentSetId, List<Component> components)", "testcase": false, "constructor": false}, {"identifier": "calculateChecksum", "parameters": "(List<Component> components)", "modifiers": "protected", "return": "String", "signature": "String calculateChecksum(List<Component> components)", "full_signature": "protected String calculateChecksum(List<Component> components)", "class_method_signature": "ComponentServiceImpl.calculateChecksum(List<Component> components)", "testcase": false, "constructor": false}, {"identifier": "updateDerivedComponents", "parameters": "(String componentSetId, List<Component> components)", "modifiers": "protected", "return": "void", "signature": "void updateDerivedComponents(String componentSetId, List<Component> components)", "full_signature": "protected void updateDerivedComponents(String componentSetId, List<Component> components)", "class_method_signature": "ComponentServiceImpl.updateDerivedComponents(String componentSetId, List<Component> components)", "testcase": false, "constructor": false}, {"identifier": "translateCollections", "parameters": "(QueryResults<ComponentBo> componentBos,\n            QueryResults<DerivedComponentBo> derivedComponentBos)", "modifiers": "protected", "return": "List<Component>", "signature": "List<Component> translateCollections(QueryResults<ComponentBo> componentBos,\n            QueryResults<DerivedComponentBo> derivedComponentBos)", "full_signature": "protected List<Component> translateCollections(QueryResults<ComponentBo> componentBos,\n            QueryResults<DerivedComponentBo> derivedComponentBos)", "class_method_signature": "ComponentServiceImpl.translateCollections(QueryResults<ComponentBo> componentBos,\n            QueryResults<DerivedComponentBo> derivedComponentBos)", "testcase": false, "constructor": false}, {"identifier": "getComponentSetDao", "parameters": "()", "modifiers": "public", "return": "ComponentSetDao", "signature": "ComponentSetDao getComponentSetDao()", "full_signature": "public ComponentSetDao getComponentSetDao()", "class_method_signature": "ComponentServiceImpl.getComponentSetDao()", "testcase": false, "constructor": false}, {"identifier": "setComponentSetDao", "parameters": "(ComponentSetDao componentSetDao)", "modifiers": "public", "return": "void", "signature": "void setComponentSetDao(ComponentSetDao componentSetDao)", "full_signature": "public void setComponentSetDao(ComponentSetDao componentSetDao)", "class_method_signature": "ComponentServiceImpl.setComponentSetDao(ComponentSetDao componentSetDao)", "testcase": false, "constructor": false}, {"identifier": "getDataObjectService", "parameters": "()", "modifiers": "public", "return": "DataObjectService", "signature": "DataObjectService getDataObjectService()", "full_signature": "public DataObjectService getDataObjectService()", "class_method_signature": "ComponentServiceImpl.getDataObjectService()", "testcase": false, "constructor": false}, {"identifier": "setDataObjectService", "parameters": "(DataObjectService dataObjectService)", "modifiers": "@Required public", "return": "void", "signature": "void setDataObjectService(DataObjectService dataObjectService)", "full_signature": "@Required public void setDataObjectService(DataObjectService dataObjectService)", "class_method_signature": "ComponentServiceImpl.setDataObjectService(DataObjectService dataObjectService)", "testcase": false, "constructor": false}], "file": "rice-middleware/core-service/impl/src/main/java/org/kuali/rice/coreservice/impl/component/ComponentServiceImpl.java"}, "focal_method": {"identifier": "getAllComponentsByNamespaceCode", "parameters": "(String namespaceCode)", "modifiers": "@Override public", "return": "List<Component>", "body": "@Override\n    public List<Component> getAllComponentsByNamespaceCode(String namespaceCode) {\n        if (StringUtils.isBlank(namespaceCode)) {\n            throw new RiceIllegalArgumentException(\"namespaceCode was a null or blank value\");\n        }\n        Map<String, String> criteria = new HashMap<String, String>();\n        criteria.put(\"namespaceCode\", namespaceCode);\n        QueryResults<ComponentBo> componentBos =\n                getDataObjectService().findMatching(ComponentBo.class,\n                        QueryByCriteria.Builder.andAttributes(criteria).build());\n\n        QueryResults<DerivedComponentBo> derivedComponentBos =\n                getDataObjectService().findMatching(DerivedComponentBo.class, QueryByCriteria.Builder.andAttributes(\n                        criteria).build());\n        return translateCollections(componentBos, derivedComponentBos);\n    }", "signature": "List<Component> getAllComponentsByNamespaceCode(String namespaceCode)", "full_signature": "@Override public List<Component> getAllComponentsByNamespaceCode(String namespaceCode)", "class_method_signature": "ComponentServiceImpl.getAllComponentsByNamespaceCode(String namespaceCode)", "testcase": false, "constructor": false, "invocations": ["isBlank", "put", "findMatching", "getDataObjectService", "build", "andAttributes", "findMatching", "getDataObjectService", "build", "andAttributes", "translateCollections"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}