{"test_class": {"identifier": "AuthenticationManagerDaoImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CRYPT_PASSWORD = \"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\";", "modifier": "private static final", "type": "String", "declarator": "CRYPT_PASSWORD = \"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\"", "var_name": "CRYPT_PASSWORD"}, {"original_string": "private static final String CRYPT_NEW_PASSWORD = \"283d47a9338ed1100b5fe2a5aff2d1f7c799bfd0\";", "modifier": "private static final", "type": "String", "declarator": "CRYPT_NEW_PASSWORD = \"283d47a9338ed1100b5fe2a5aff2d1f7c799bfd0\"", "var_name": "CRYPT_NEW_PASSWORD"}, {"original_string": "private static final String NEW_PASSWORD = \"newPassword\";", "modifier": "private static final", "type": "String", "declarator": "NEW_PASSWORD = \"newPassword\"", "var_name": "NEW_PASSWORD"}, {"original_string": "private static final String PASSWORD = \"password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD = \"password\"", "var_name": "PASSWORD"}, {"original_string": "private static final String[] RANDOM_STRING = new String[] { \"random\" };", "modifier": "private static final", "type": "String[]", "declarator": "RANDOM_STRING = new String[] { \"random\" }", "var_name": "RANDOM_STRING"}, {"original_string": "private AuthenticationManager sut;", "modifier": "private", "type": "AuthenticationManager", "declarator": "sut", "var_name": "sut"}, {"original_string": "private ConfigurationUtil cfg = mock(ConfigurationUtil.class);", "modifier": "private", "type": "ConfigurationUtil", "declarator": "cfg = mock(ConfigurationUtil.class)", "var_name": "cfg"}, {"original_string": "private IUserRolesService userRolesService = mock(IUserRolesService.class);", "modifier": "private", "type": "IUserRolesService", "declarator": "userRolesService = mock(IUserRolesService.class)", "var_name": "userRolesService"}, {"original_string": "private User user = new User();", "modifier": "private", "type": "User", "declarator": "user = new User()", "var_name": "user"}], "file": "tntconcept-core/src/test/java/com/autentia/tnt/manager/security/AuthenticationManagerDaoImplTest.java"}, "test_case": {"identifier": "givenIncorrectPasswordChecksPassword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenIncorrectPasswordChecksPassword() throws Exception {\n\n        assertThat(sut.checkPassword(user, \"incorrect-password\"), is(Boolean.FALSE));\n\n    }", "signature": "void givenIncorrectPasswordChecksPassword()", "full_signature": "@Test public void givenIncorrectPasswordChecksPassword()", "class_method_signature": "AuthenticationManagerDaoImplTest.givenIncorrectPasswordChecksPassword()", "testcase": true, "constructor": false, "invocations": ["assertThat", "checkPassword", "is"]}, "focal_class": {"identifier": "AuthenticationManagerDaoImpl", "superclass": "extends AuthenticationManager", "interfaces": "", "fields": [], "methods": [{"identifier": "AuthenticationManagerDaoImpl", "parameters": "(ConfigurationUtil cfg, IUserRolesService userRolesService)", "modifiers": "public", "return": "", "signature": " AuthenticationManagerDaoImpl(ConfigurationUtil cfg, IUserRolesService userRolesService)", "full_signature": "public  AuthenticationManagerDaoImpl(ConfigurationUtil cfg, IUserRolesService userRolesService)", "class_method_signature": "AuthenticationManagerDaoImpl.AuthenticationManagerDaoImpl(ConfigurationUtil cfg, IUserRolesService userRolesService)", "testcase": false, "constructor": true}, {"identifier": "getDefault", "parameters": "()", "modifiers": "public static", "return": "AuthenticationManager", "signature": "AuthenticationManager getDefault()", "full_signature": "public static AuthenticationManager getDefault()", "class_method_signature": "AuthenticationManagerDaoImpl.getDefault()", "testcase": false, "constructor": false}, {"identifier": "checkPassword", "parameters": "(User user, String passwd)", "modifiers": "public", "return": "boolean", "signature": "boolean checkPassword(User user, String passwd)", "full_signature": "public boolean checkPassword(User user, String passwd)", "class_method_signature": "AuthenticationManagerDaoImpl.checkPassword(User user, String passwd)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(User user, String password)", "modifiers": "@Override public", "return": "void", "signature": "void changePassword(User user, String password)", "full_signature": "@Override public void changePassword(User user, String password)", "class_method_signature": "AuthenticationManagerDaoImpl.changePassword(User user, String password)", "testcase": false, "constructor": false}, {"identifier": "resetPassword", "parameters": "(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "modifiers": "public", "return": "String", "signature": "String resetPassword(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "full_signature": "public String resetPassword(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "class_method_signature": "AuthenticationManagerDaoImpl.resetPassword(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "testcase": false, "constructor": false}, {"identifier": "resetPasswordExternal", "parameters": "(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "modifiers": "public", "return": "String", "signature": "String resetPasswordExternal(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "full_signature": "public String resetPasswordExternal(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "class_method_signature": "AuthenticationManagerDaoImpl.resetPasswordExternal(User user, String[] rnd0, String[] rnd1, String[] rnd2, String[] rnd3, String[] rnd4)", "testcase": false, "constructor": false}], "file": "tntconcept-core/src/main/java/com/autentia/tnt/manager/security/AuthenticationManagerDaoImpl.java"}, "focal_method": {"identifier": "checkPassword", "parameters": "(User user, String passwd)", "modifiers": "public", "return": "boolean", "body": "public boolean checkPassword(User user, String passwd) {\n\n        return DigestUtils.shaHex(passwd).equalsIgnoreCase(user.getPassword());\n    }", "signature": "boolean checkPassword(User user, String passwd)", "full_signature": "public boolean checkPassword(User user, String passwd)", "class_method_signature": "AuthenticationManagerDaoImpl.checkPassword(User user, String passwd)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "shaHex", "getPassword"]}, "repository": {"repo_id": 2503314, "url": "https://github.com/autentia/TNTConcept", "stars": 11, "created": "10/3/2011 8:00:30 AM +00:00", "updates": "2020-01-24T12:30:31+00:00", "fork": "False", "license": "licensed"}}