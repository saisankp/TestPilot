{"test_class": {"identifier": "SortedAttributeMetadataTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/metadata/SortedAttributeMetadataTest.java"}, "test_case": {"identifier": "testGetKeysAndValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetKeysAndValues() {\n        IndexedCollection<Car> cars = new ConcurrentIndexedCollection<>();\n        Car car1 = new Car(1, \"Ford\", \"Taurus\", Car.Color.GREEN, 4, 1000.0, emptyList(), Collections.emptyList());\n        Car car2 = new Car(2, \"Toyota\", \"Prius\", Car.Color.BLUE, 4, 2000.0, emptyList(), Collections.emptyList());\n        Car car3 = new Car(3, \"Honda\", \"Civic\", Car.Color.BLUE, 4, 2000.0, emptyList(), Collections.emptyList());\n        cars.addAll(asList(car1, car2, car3));\n\n        // Add a sorted index on Car.MANUFACTURER (a NavigableIndex)...\n        cars.addIndex(NavigableIndex.onAttribute(Car.MANUFACTURER));\n        MetadataEngine<Car> metadataEngine = cars.getMetadataEngine();\n\n        // Access metadata for Car.MANUFACTURER attribute.\n        SortedAttributeMetadata<String, Car> attributeMetadata = metadataEngine.getSortedAttributeMetadata(Car.MANUFACTURER);\n\n        // Call SortedAttributeMetadata.getKeysAndValues() to retrieve keys and values in ascending order.\n        // We retrieve into a List in order to assert the ordering of values returned...\n        assertEquals(\n                asList(keyValue(\"Ford\", car1), keyValue(\"Honda\", car3), keyValue(\"Toyota\", car2)),\n                attributeMetadata.getKeysAndValues().collect(toList())\n        );\n\n        // Test specifying range explicitly...\n        assertEquals(\n                asList(keyValue(\"Ford\", car1), keyValue(\"Honda\", car3)),\n                attributeMetadata.getKeysAndValues(\"Alpha\", true, \"Toyota\", false).collect(toList())\n        );\n    }", "signature": "void testGetKeysAndValues()", "full_signature": "@Test public void testGetKeysAndValues()", "class_method_signature": "SortedAttributeMetadataTest.testGetKeysAndValues()", "testcase": true, "constructor": false, "invocations": ["emptyList", "emptyList", "emptyList", "emptyList", "emptyList", "emptyList", "addAll", "asList", "addIndex", "onAttribute", "getMetadataEngine", "getSortedAttributeMetadata", "assertEquals", "asList", "keyValue", "keyValue", "keyValue", "collect", "getKeysAndValues", "toList", "assertEquals", "asList", "keyValue", "keyValue", "collect", "getKeysAndValues", "toList"]}, "focal_class": {"identifier": "SortedAttributeMetadata", "superclass": "extends AttributeMetadata<A, O>", "interfaces": "", "fields": [{"original_string": "private final SortedKeyStatisticsIndex<A, O> index;", "modifier": "private final", "type": "SortedKeyStatisticsIndex<A, O>", "declarator": "index", "var_name": "index"}], "methods": [{"identifier": "SortedAttributeMetadata", "parameters": "(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "modifiers": "", "return": "", "signature": " SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "full_signature": "  SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "class_method_signature": "SortedAttributeMetadata.SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "testcase": false, "constructor": true}, {"identifier": "getFrequencyDistribution", "parameters": "()", "modifiers": "@Override public", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> getFrequencyDistribution()", "full_signature": "@Override public Stream<KeyFrequency<A>> getFrequencyDistribution()", "class_method_signature": "SortedAttributeMetadata.getFrequencyDistribution()", "testcase": false, "constructor": false}, {"identifier": "getFrequencyDistributionDescending", "parameters": "()", "modifiers": "public", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> getFrequencyDistributionDescending()", "full_signature": "public Stream<KeyFrequency<A>> getFrequencyDistributionDescending()", "class_method_signature": "SortedAttributeMetadata.getFrequencyDistributionDescending()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeys", "parameters": "()", "modifiers": "@Override public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeys()", "full_signature": "@Override public Stream<A> getDistinctKeys()", "class_method_signature": "SortedAttributeMetadata.getDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeysDescending", "parameters": "()", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeysDescending()", "full_signature": "public Stream<A> getDistinctKeysDescending()", "class_method_signature": "SortedAttributeMetadata.getDistinctKeysDescending()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeys", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<A> getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeysDescending", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<A> getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getCountOfDistinctKeys", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getCountOfDistinctKeys()", "full_signature": "@Override public Integer getCountOfDistinctKeys()", "class_method_signature": "SortedAttributeMetadata.getCountOfDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getCountForKey", "parameters": "(A key)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getCountForKey(A key)", "full_signature": "@Override public Integer getCountForKey(A key)", "class_method_signature": "SortedAttributeMetadata.getCountForKey(A key)", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValues", "parameters": "()", "modifiers": "@Override public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValues()", "full_signature": "@Override public Stream<KeyValue<A, O>> getKeysAndValues()", "class_method_signature": "SortedAttributeMetadata.getKeysAndValues()", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValuesDescending", "parameters": "()", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValuesDescending()", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValuesDescending()", "class_method_signature": "SortedAttributeMetadata.getKeysAndValuesDescending()", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValues", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValuesDescending", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/metadata/SortedAttributeMetadata.java"}, "focal_method": {"identifier": "getKeysAndValues", "parameters": "()", "modifiers": "@Override public", "return": "Stream<KeyValue<A, O>>", "body": "@Override\n    public Stream<KeyValue<A, O>> getKeysAndValues() {\n        return super.getKeysAndValues();\n    }", "signature": "Stream<KeyValue<A, O>> getKeysAndValues()", "full_signature": "@Override public Stream<KeyValue<A, O>> getKeysAndValues()", "class_method_signature": "SortedAttributeMetadata.getKeysAndValues()", "testcase": false, "constructor": false, "invocations": ["getKeysAndValues"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}