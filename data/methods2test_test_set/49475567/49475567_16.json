{"test_class": {"identifier": "TableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<TableRow> rows;", "modifier": "private", "type": "List<TableRow>", "declarator": "rows", "var_name": "rows"}, {"original_string": "private TableRow rowOne;", "modifier": "private", "type": "TableRow", "declarator": "rowOne", "var_name": "rowOne"}, {"original_string": "private TableRow rowTwo;", "modifier": "private", "type": "TableRow", "declarator": "rowTwo", "var_name": "rowTwo"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private String caption;", "modifier": "private", "type": "String", "declarator": "caption", "var_name": "caption"}], "file": "geoclient-core/src/test/java/gov/nyc/doitt/gis/geoclient/doc/TableTest.java"}, "test_case": {"identifier": "testToHtml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToHtml()\n    {\n        assertEquals(\"<table>\\n</table>\",new Table().toHtml());\n        assertEquals(\"<table id=\\\"foo\\\">\\n</table>\",new Table(\"foo\",rows,null).toHtml());\n        assertEquals(\"<table id=\\\"foo\\\">\\n<caption>This is a table</caption>\\n</table>\",new Table(\"foo\",rows,caption).toHtml());\n        rows.add(rowOne);\n        String tr1 = rowOne.toHtml() + \"\\n\";\n        assertEquals(\"<table id=\\\"foo\\\">\\n<caption>This is a table</caption>\\n\" + tr1 + \"</table>\",new Table(\"foo\",rows,caption).toHtml());\n        rows.add(rowTwo);\n        String tr2 = rowTwo.toHtml() + \"\\n\";\n        assertEquals(\"<table id=\\\"foo\\\">\\n<caption>This is a table</caption>\\n\" + tr1 + tr2 + \"</table>\",new Table(\"foo\",rows,caption).toHtml());\n    }", "signature": "void testToHtml()", "full_signature": "@Test public void testToHtml()", "class_method_signature": "TableTest.testToHtml()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toHtml", "assertEquals", "toHtml", "assertEquals", "toHtml", "add", "toHtml", "assertEquals", "toHtml", "add", "toHtml", "assertEquals", "toHtml"]}, "focal_class": {"identifier": "Table", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String caption;", "modifier": "private", "type": "String", "declarator": "caption", "var_name": "caption"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private List<TableRow> rows;", "modifier": "private", "type": "List<TableRow>", "declarator": "rows", "var_name": "rows"}], "methods": [{"identifier": "Table", "parameters": "()", "modifiers": "public", "return": "", "signature": " Table()", "full_signature": "public  Table()", "class_method_signature": "Table.Table()", "testcase": false, "constructor": true}, {"identifier": "Table", "parameters": "(String id, List<TableRow> rows, String caption)", "modifiers": "public", "return": "", "signature": " Table(String id, List<TableRow> rows, String caption)", "full_signature": "public  Table(String id, List<TableRow> rows, String caption)", "class_method_signature": "Table.Table(String id, List<TableRow> rows, String caption)", "testcase": false, "constructor": true}, {"identifier": "getCaption", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCaption()", "full_signature": "public String getCaption()", "class_method_signature": "Table.getCaption()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "Table.getId()", "testcase": false, "constructor": false}, {"identifier": "getRows", "parameters": "()", "modifiers": "public", "return": "List<TableRow>", "signature": "List<TableRow> getRows()", "full_signature": "public List<TableRow> getRows()", "class_method_signature": "Table.getRows()", "testcase": false, "constructor": false}, {"identifier": "setCaption", "parameters": "(String caption)", "modifiers": "public", "return": "void", "signature": "void setCaption(String caption)", "full_signature": "public void setCaption(String caption)", "class_method_signature": "Table.setCaption(String caption)", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "Table.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "setRows", "parameters": "(List<TableRow> rows)", "modifiers": "public", "return": "void", "signature": "void setRows(List<TableRow> rows)", "full_signature": "public void setRows(List<TableRow> rows)", "class_method_signature": "Table.setRows(List<TableRow> rows)", "testcase": false, "constructor": false}, {"identifier": "toHtml", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toHtml()", "full_signature": "public String toHtml()", "class_method_signature": "Table.toHtml()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Table.toString()", "testcase": false, "constructor": false}], "file": "geoclient-core/src/main/java/gov/nyc/doitt/gis/geoclient/doc/Table.java"}, "focal_method": {"identifier": "toHtml", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toHtml()\n    {\n        StringBuffer sb = new StringBuffer(\"<table\");\n        if (id != null)\n        {\n            sb.append(\" id=\\\"\" + id + \"\\\"\");\n        }\n        sb.append(\">\\n\");\n        if (caption != null)\n        {\n            sb.append(String.format(\"<caption>%s</caption>\\n\", caption));\n        }\n        for (TableRow tr : this.rows)\n        {\n            sb.append(tr.toHtml());\n            sb.append(\"\\n\");\n        }\n        sb.append(\"</table>\");\n        return sb.toString();\n    }", "signature": "String toHtml()", "full_signature": "public String toHtml()", "class_method_signature": "Table.toHtml()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "format", "append", "toHtml", "append", "append", "toString"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}