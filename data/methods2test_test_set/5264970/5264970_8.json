{"test_class": {"identifier": "ServiceInfoTemplateTest", "superclass": "", "interfaces": "", "fields": [], "file": "cocaine-client/src/test/java/cocaine/msgpack/ServiceInfoTemplateTest.java"}, "test_case": {"identifier": "read", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void read() throws IOException {\n        String service = \"locator\";\n        SocketAddress endpoint = new InetSocketAddress(\"localhost\", 3456);\n        long session = 0L;\n        Map<Integer, String> api = Collections.singletonMap(0, \"invoke\");\n\n        MessagePack pack = new MessagePack();\n        pack.register(SocketAddress.class, SocketAddressTemplate.getInstance());\n        byte[] bytes = pack.write(Arrays.asList(endpoint, session, api));\n\n        ServiceInfo result = pack.read(bytes, ServiceInfoTemplate.create(service));\n\n        Assert.assertEquals(endpoint, result.getEndpoint());\n        Assert.assertEquals(0, result.getApi().getMethod(\"invoke\"));\n    }", "signature": "void read()", "full_signature": "@Test public void read()", "class_method_signature": "ServiceInfoTemplateTest.read()", "testcase": true, "constructor": false, "invocations": ["singletonMap", "register", "getInstance", "write", "asList", "read", "create", "assertEquals", "getEndpoint", "assertEquals", "getMethod", "getApi"]}, "focal_class": {"identifier": "ServiceInfoTemplate", "superclass": "extends AbstractTemplate<ServiceInfo>", "interfaces": "", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "ServiceInfoTemplate", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " ServiceInfoTemplate(String name)", "full_signature": "private  ServiceInfoTemplate(String name)", "class_method_signature": "ServiceInfoTemplate.ServiceInfoTemplate(String name)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(String name)", "modifiers": "public static", "return": "Template<ServiceInfo>", "signature": "Template<ServiceInfo> create(String name)", "full_signature": "public static Template<ServiceInfo> create(String name)", "class_method_signature": "ServiceInfoTemplate.create(String name)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Packer packer, ServiceInfo service, boolean required)", "modifiers": "@Override public", "return": "void", "signature": "void write(Packer packer, ServiceInfo service, boolean required)", "full_signature": "@Override public void write(Packer packer, ServiceInfo service, boolean required)", "class_method_signature": "ServiceInfoTemplate.write(Packer packer, ServiceInfo service, boolean required)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Unpacker unpacker, ServiceInfo service, boolean required)", "modifiers": "@Override public", "return": "ServiceInfo", "signature": "ServiceInfo read(Unpacker unpacker, ServiceInfo service, boolean required)", "full_signature": "@Override public ServiceInfo read(Unpacker unpacker, ServiceInfo service, boolean required)", "class_method_signature": "ServiceInfoTemplate.read(Unpacker unpacker, ServiceInfo service, boolean required)", "testcase": false, "constructor": false}], "file": "cocaine-client/src/main/java/cocaine/msgpack/ServiceInfoTemplate.java"}, "focal_method": {"identifier": "read", "parameters": "(Unpacker unpacker, ServiceInfo service, boolean required)", "modifiers": "@Override public", "return": "ServiceInfo", "body": "@Override\n    public ServiceInfo read(Unpacker unpacker, ServiceInfo service, boolean required) throws IOException {\n        unpacker.readArrayBegin();\n        SocketAddress endpoint = unpacker.read(SocketAddressTemplate.getInstance());\n        unpacker.readInt();\n        Map<Integer, String> api = unpacker.read(Templates.tMap(Templates.TInteger, Templates.TString));\n        unpacker.readArrayEnd();\n\n        return new ServiceInfo(name, endpoint, ServiceApi.of(name, ImmutableBiMap.copyOf(api).inverse()));\n    }", "signature": "ServiceInfo read(Unpacker unpacker, ServiceInfo service, boolean required)", "full_signature": "@Override public ServiceInfo read(Unpacker unpacker, ServiceInfo service, boolean required)", "class_method_signature": "ServiceInfoTemplate.read(Unpacker unpacker, ServiceInfo service, boolean required)", "testcase": false, "constructor": false, "invocations": ["readArrayBegin", "read", "getInstance", "readInt", "read", "tMap", "readArrayEnd", "of", "inverse", "copyOf"]}, "repository": {"repo_id": 5264970, "url": "https://github.com/cocaine/cocaine-framework-java", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 22, "size": 567, "license": "licensed"}}