{"test_class": {"identifier": "FeatureTransformerTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/main/src/test/java/org/geotools/gml/producer/FeatureTransformerTest.java"}, "test_case": {"identifier": "testRemoveInvalidXMLChars", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveInvalidXMLChars() throws Exception {\n        SimpleFeatureType ft = DataUtilities.createType(\"invalidChars\",\n                \"the_geom:Point,data:String\");\n        SimpleFeature feature = SimpleFeatureBuilder.build(ft,\n                new Object[] { new WKTReader().read(\"POINT(0 0)\"),\n                        \"One \" + ((char) 0x7) + \" test\" }, \"123\");\n        SimpleFeatureCollection fc = DataUtilities.collection(feature);\n\n        FeatureTransformer tx = new FeatureTransformer();\n        tx.setIndentation(2);\n        tx.getFeatureTypeNamespaces().declareNamespace(ft, \"gt\", \"http://www.geotools.org\");\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        tx.transform(fc, bos);\n        String result = bos.toString();\n\n        // System.out.println(result);\n\n        Document dom = XMLUnit.buildControlDocument(result);\n        assertXpathEvaluatesTo(\"1\", \"count(//wfs:FeatureCollection)\", dom);\n        assertXpathEvaluatesTo(\"One  test\", \"//gt:data\", dom);\n    }", "signature": "void testRemoveInvalidXMLChars()", "full_signature": "@Test public void testRemoveInvalidXMLChars()", "class_method_signature": "FeatureTransformerTest.testRemoveInvalidXMLChars()", "testcase": true, "constructor": false, "invocations": ["createType", "build", "read", "collection", "setIndentation", "declareNamespace", "getFeatureTypeNamespaces", "transform", "toString", "buildControlDocument", "assertXpathEvaluatesTo", "assertXpathEvaluatesTo"]}, "focal_class": {"identifier": "FeatureTransformer", "superclass": "extends TransformerBase", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = org.geotools.util.logging.Logging.getLogger(\"org.geotools.gml\");", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = org.geotools.util.logging.Logging.getLogger(\"org.geotools.gml\")", "var_name": "LOGGER"}, {"original_string": "private static Set gmlAtts;", "modifier": "private static", "type": "Set", "declarator": "gmlAtts", "var_name": "gmlAtts"}, {"original_string": "private String collectionPrefix = \"wfs\";", "modifier": "private", "type": "String", "declarator": "collectionPrefix = \"wfs\"", "var_name": "collectionPrefix"}, {"original_string": "private String collectionNamespace = \"http://www.opengis.net/wfs\";", "modifier": "private", "type": "String", "declarator": "collectionNamespace = \"http://www.opengis.net/wfs\"", "var_name": "collectionNamespace"}, {"original_string": "private NamespaceSupport nsLookup = new NamespaceSupport();", "modifier": "private", "type": "NamespaceSupport", "declarator": "nsLookup = new NamespaceSupport()", "var_name": "nsLookup"}, {"original_string": "private FeatureTypeNamespaces featureTypeNamespaces = new FeatureTypeNamespaces(nsLookup);", "modifier": "private", "type": "FeatureTypeNamespaces", "declarator": "featureTypeNamespaces = new FeatureTypeNamespaces(nsLookup)", "var_name": "featureTypeNamespaces"}, {"original_string": "private SchemaLocationSupport schemaLocation = new SchemaLocationSupport();", "modifier": "private", "type": "SchemaLocationSupport", "declarator": "schemaLocation = new SchemaLocationSupport()", "var_name": "schemaLocation"}, {"original_string": "private int maxFeatures = -1;", "modifier": "private", "type": "int", "declarator": "maxFeatures = -1", "var_name": "maxFeatures"}, {"original_string": "private boolean prefixGml = false;", "modifier": "private", "type": "boolean", "declarator": "prefixGml = false", "var_name": "prefixGml"}, {"original_string": "private boolean featureBounding = false;", "modifier": "private", "type": "boolean", "declarator": "featureBounding = false", "var_name": "featureBounding"}, {"original_string": "private boolean collectionBounding = true;", "modifier": "private", "type": "boolean", "declarator": "collectionBounding = true", "var_name": "collectionBounding"}, {"original_string": "private String srsName;", "modifier": "private", "type": "String", "declarator": "srsName", "var_name": "srsName"}, {"original_string": "private String lockId;", "modifier": "private", "type": "String", "declarator": "lockId", "var_name": "lockId"}, {"original_string": "private int numDecimals = 4;", "modifier": "private", "type": "int", "declarator": "numDecimals = 4", "var_name": "numDecimals"}], "methods": [{"identifier": "setCollectionNamespace", "parameters": "(String nsURI)", "modifiers": "public", "return": "void", "signature": "void setCollectionNamespace(String nsURI)", "full_signature": "public void setCollectionNamespace(String nsURI)", "class_method_signature": "FeatureTransformer.setCollectionNamespace(String nsURI)", "testcase": false, "constructor": false}, {"identifier": "getCollectionNamespace", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCollectionNamespace()", "full_signature": "public String getCollectionNamespace()", "class_method_signature": "FeatureTransformer.getCollectionNamespace()", "testcase": false, "constructor": false}, {"identifier": "setCollectionPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setCollectionPrefix(String prefix)", "full_signature": "public void setCollectionPrefix(String prefix)", "class_method_signature": "FeatureTransformer.setCollectionPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getCollectionPrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCollectionPrefix()", "full_signature": "public String getCollectionPrefix()", "class_method_signature": "FeatureTransformer.getCollectionPrefix()", "testcase": false, "constructor": false}, {"identifier": "setNumDecimals", "parameters": "(int numDecimals)", "modifiers": "public", "return": "void", "signature": "void setNumDecimals(int numDecimals)", "full_signature": "public void setNumDecimals(int numDecimals)", "class_method_signature": "FeatureTransformer.setNumDecimals(int numDecimals)", "testcase": false, "constructor": false}, {"identifier": "getFeatureNamespaces", "parameters": "()", "modifiers": "public", "return": "NamespaceSupport", "signature": "NamespaceSupport getFeatureNamespaces()", "full_signature": "public NamespaceSupport getFeatureNamespaces()", "class_method_signature": "FeatureTransformer.getFeatureNamespaces()", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeNamespaces", "parameters": "()", "modifiers": "public", "return": "FeatureTypeNamespaces", "signature": "FeatureTypeNamespaces getFeatureTypeNamespaces()", "full_signature": "public FeatureTypeNamespaces getFeatureTypeNamespaces()", "class_method_signature": "FeatureTransformer.getFeatureTypeNamespaces()", "testcase": false, "constructor": false}, {"identifier": "addSchemaLocation", "parameters": "(String nsURI, String uri)", "modifiers": "public", "return": "void", "signature": "void addSchemaLocation(String nsURI, String uri)", "full_signature": "public void addSchemaLocation(String nsURI, String uri)", "class_method_signature": "FeatureTransformer.addSchemaLocation(String nsURI, String uri)", "testcase": false, "constructor": false}, {"identifier": "setSrsName", "parameters": "(String srsName)", "modifiers": "public", "return": "void", "signature": "void setSrsName(String srsName)", "full_signature": "public void setSrsName(String srsName)", "class_method_signature": "FeatureTransformer.setSrsName(String srsName)", "testcase": false, "constructor": false}, {"identifier": "setLockId", "parameters": "(String lockId)", "modifiers": "public", "return": "void", "signature": "void setLockId(String lockId)", "full_signature": "public void setLockId(String lockId)", "class_method_signature": "FeatureTransformer.setLockId(String lockId)", "testcase": false, "constructor": false}, {"identifier": "setGmlPrefixing", "parameters": "(boolean prefixGml)", "modifiers": "public", "return": "void", "signature": "void setGmlPrefixing(boolean prefixGml)", "full_signature": "public void setGmlPrefixing(boolean prefixGml)", "class_method_signature": "FeatureTransformer.setGmlPrefixing(boolean prefixGml)", "testcase": false, "constructor": false}, {"identifier": "loadGmlAttributes", "parameters": "( Set gmlAtts )", "modifiers": "protected", "return": "void", "signature": "void loadGmlAttributes( Set gmlAtts )", "full_signature": "protected void loadGmlAttributes( Set gmlAtts )", "class_method_signature": "FeatureTransformer.loadGmlAttributes( Set gmlAtts )", "testcase": false, "constructor": false}, {"identifier": "setFeatureBounding", "parameters": "(boolean featureBounding)", "modifiers": "public", "return": "void", "signature": "void setFeatureBounding(boolean featureBounding)", "full_signature": "public void setFeatureBounding(boolean featureBounding)", "class_method_signature": "FeatureTransformer.setFeatureBounding(boolean featureBounding)", "testcase": false, "constructor": false}, {"identifier": "setCollectionBounding", "parameters": "(boolean collectionBounding)", "modifiers": "public", "return": "void", "signature": "void setCollectionBounding(boolean collectionBounding)", "full_signature": "public void setCollectionBounding(boolean collectionBounding)", "class_method_signature": "FeatureTransformer.setCollectionBounding(boolean collectionBounding)", "testcase": false, "constructor": false}, {"identifier": "createTranslator", "parameters": "(\n        ContentHandler handler)", "modifiers": "public", "return": "org.geotools.xml.transform.Translator", "signature": "org.geotools.xml.transform.Translator createTranslator(\n        ContentHandler handler)", "full_signature": "public org.geotools.xml.transform.Translator createTranslator(\n        ContentHandler handler)", "class_method_signature": "FeatureTransformer.createTranslator(\n        ContentHandler handler)", "testcase": false, "constructor": false}, {"identifier": "createTranslator", "parameters": "( \n\t\tContentHandler handler, String prefix, String ns, \n\t\tFeatureTypeNamespaces featureTypeNamespaces, SchemaLocationSupport schemaLocationSupport\n\t)", "modifiers": "protected", "return": "FeatureTranslator", "signature": "FeatureTranslator createTranslator( \n\t\tContentHandler handler, String prefix, String ns, \n\t\tFeatureTypeNamespaces featureTypeNamespaces, SchemaLocationSupport schemaLocationSupport\n\t)", "full_signature": "protected FeatureTranslator createTranslator( \n\t\tContentHandler handler, String prefix, String ns, \n\t\tFeatureTypeNamespaces featureTypeNamespaces, SchemaLocationSupport schemaLocationSupport\n\t)", "class_method_signature": "FeatureTransformer.createTranslator( \n\t\tContentHandler handler, String prefix, String ns, \n\t\tFeatureTypeNamespaces featureTypeNamespaces, SchemaLocationSupport schemaLocationSupport\n\t)", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/gml/producer/FeatureTransformer.java"}, "focal_method": {"identifier": "getFeatureTypeNamespaces", "parameters": "()", "modifiers": "public", "return": "FeatureTypeNamespaces", "body": "public FeatureTypeNamespaces getFeatureTypeNamespaces() {\n        return featureTypeNamespaces;\n    }", "signature": "FeatureTypeNamespaces getFeatureTypeNamespaces()", "full_signature": "public FeatureTypeNamespaces getFeatureTypeNamespaces()", "class_method_signature": "FeatureTransformer.getFeatureTypeNamespaces()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}