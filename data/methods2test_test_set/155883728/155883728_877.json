{"test_class": {"identifier": "CNDURLInstallerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private URL cndAUrl;", "modifier": "private", "type": "URL", "declarator": "cndAUrl", "var_name": "cndAUrl"}, {"original_string": "private URL cndBUrl;", "modifier": "private", "type": "URL", "declarator": "cndBUrl", "var_name": "cndBUrl"}, {"original_string": "private URL cndCUrl;", "modifier": "private", "type": "URL", "declarator": "cndCUrl", "var_name": "cndCUrl"}, {"original_string": "private URL cndDUrl;", "modifier": "private", "type": "URL", "declarator": "cndDUrl", "var_name": "cndDUrl"}, {"original_string": "private URL cndEUrl;", "modifier": "private", "type": "URL", "declarator": "cndEUrl", "var_name": "cndEUrl"}, {"original_string": "private URL cndFUrl;", "modifier": "private", "type": "URL", "declarator": "cndFUrl", "var_name": "cndFUrl"}, {"original_string": "private URL cndYUrl;", "modifier": "private", "type": "URL", "declarator": "cndYUrl", "var_name": "cndYUrl"}, {"original_string": "private URL cndZUrl;", "modifier": "private", "type": "URL", "declarator": "cndZUrl", "var_name": "cndZUrl"}], "file": "core/src/test/java/net/adamcin/oakpal/core/CNDURLInstallerTest.java"}, "test_case": {"identifier": "testRegister", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegister() throws Exception {\n        final DefaultErrorListener errorListener = new DefaultErrorListener();\n        final CNDURLInstaller installer = new CNDURLInstaller(errorListener,\n                Arrays.asList(cndFUrl, cndEUrl, cndDUrl, cndCUrl, cndBUrl, cndAUrl),\n                Arrays.asList(cndYUrl, cndZUrl));\n\n        new OakMachine.Builder().build().adminInitAndInspect(session -> {\n            installer.register(session);\n            NodeTypeManager ntManager = session.getWorkspace().getNodeTypeManager();\n            assertTrue(\"has a:primaryType\", ntManager.hasNodeType(\"a:primaryType\"));\n            assertTrue(\"has b:primaryType\", ntManager.hasNodeType(\"b:primaryType\"));\n            assertTrue(\"has c:primaryType\", ntManager.hasNodeType(\"c:primaryType\"));\n            assertTrue(\"has d:primaryType\", ntManager.hasNodeType(\"d:primaryType\"));\n            assertTrue(\"has e:primaryType\", ntManager.hasNodeType(\"e:primaryType\"));\n            assertFalse(\"does not have f:primaryType\", ntManager.hasNodeType(\"f:primaryType\"));\n            assertFalse(\"does not have y:primaryType\", ntManager.hasNodeType(\"y:primaryType\"));\n            assertTrue(\"has z:primaryType\", ntManager.hasNodeType(\"z:primaryType\"));\n        });\n        assertEquals(\"f and y should report errors: \" + errorListener.getReportedViolations(), 2,\n                errorListener.getReportedViolations().size());\n    }", "signature": "void testRegister()", "full_signature": "@Test public void testRegister()", "class_method_signature": "CNDURLInstallerTest.testRegister()", "testcase": true, "constructor": false, "invocations": ["asList", "asList", "adminInitAndInspect", "build", "register", "getNodeTypeManager", "getWorkspace", "assertTrue", "hasNodeType", "assertTrue", "hasNodeType", "assertTrue", "hasNodeType", "assertTrue", "hasNodeType", "assertTrue", "hasNodeType", "assertFalse", "hasNodeType", "assertFalse", "hasNodeType", "assertTrue", "hasNodeType", "assertEquals", "getReportedViolations", "size", "getReportedViolations"]}, "focal_class": {"identifier": "CNDURLInstaller", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_ITERATIONS = 5;", "modifier": "private static final", "type": "int", "declarator": "MAX_ITERATIONS = 5", "var_name": "MAX_ITERATIONS"}, {"original_string": "private final List<URL> unorderedCnds;", "modifier": "private final", "type": "List<URL>", "declarator": "unorderedCnds", "var_name": "unorderedCnds"}, {"original_string": "private final List<URL> postInstallCnds;", "modifier": "private final", "type": "List<URL>", "declarator": "postInstallCnds", "var_name": "postInstallCnds"}, {"original_string": "private final ErrorListener errorListener;", "modifier": "private final", "type": "ErrorListener", "declarator": "errorListener", "var_name": "errorListener"}], "methods": [{"identifier": "CNDURLInstaller", "parameters": "(final @Nullable ErrorListener errorListener,\n                    final @NotNull List<URL> unorderedCnds,\n                    final @Nullable List<URL> postInstallCnds)", "modifiers": "", "return": "", "signature": " CNDURLInstaller(final @Nullable ErrorListener errorListener,\n                    final @NotNull List<URL> unorderedCnds,\n                    final @Nullable List<URL> postInstallCnds)", "full_signature": "  CNDURLInstaller(final @Nullable ErrorListener errorListener,\n                    final @NotNull List<URL> unorderedCnds,\n                    final @Nullable List<URL> postInstallCnds)", "class_method_signature": "CNDURLInstaller.CNDURLInstaller(final @Nullable ErrorListener errorListener,\n                    final @NotNull List<URL> unorderedCnds,\n                    final @Nullable List<URL> postInstallCnds)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(Session session)", "modifiers": "public", "return": "void", "signature": "void register(Session session)", "full_signature": "public void register(Session session)", "class_method_signature": "CNDURLInstaller.register(Session session)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Session session, List<URL> nodeTypeResources)", "modifiers": "public", "return": "void", "signature": "void register(Session session, List<URL> nodeTypeResources)", "full_signature": "public void register(Session session, List<URL> nodeTypeResources)", "class_method_signature": "CNDURLInstaller.register(Session session, List<URL> nodeTypeResources)", "testcase": false, "constructor": false}, {"identifier": "registerByUrl", "parameters": "(Session session, List<URL> nodeTypeUrls)", "modifiers": "public", "return": "void", "signature": "void registerByUrl(Session session, List<URL> nodeTypeUrls)", "full_signature": "public void registerByUrl(Session session, List<URL> nodeTypeUrls)", "class_method_signature": "CNDURLInstaller.registerByUrl(Session session, List<URL> nodeTypeUrls)", "testcase": false, "constructor": false}, {"identifier": "registerNodeTypesByUrl", "parameters": "(Session session, List<URL> nodeTypeUrls)", "modifiers": "private", "return": "void", "signature": "void registerNodeTypesByUrl(Session session, List<URL> nodeTypeUrls)", "full_signature": "private void registerNodeTypesByUrl(Session session, List<URL> nodeTypeUrls)", "class_method_signature": "CNDURLInstaller.registerNodeTypesByUrl(Session session, List<URL> nodeTypeUrls)", "testcase": false, "constructor": false}, {"identifier": "registerNodeTypes", "parameters": "(Session session, List<URL> nodeTypeResources)", "modifiers": "private", "return": "void", "signature": "void registerNodeTypes(Session session, List<URL> nodeTypeResources)", "full_signature": "private void registerNodeTypes(Session session, List<URL> nodeTypeResources)", "class_method_signature": "CNDURLInstaller.registerNodeTypes(Session session, List<URL> nodeTypeResources)", "testcase": false, "constructor": false}, {"identifier": "tryRegisterNodeTypes", "parameters": "(final List<URL> nodeTypeResources,\n                                      final NodeTypeManager nodeTypeManager,\n                                      final NamespaceRegistry namespaceRegistry,\n                                      final ValueFactory valueFactory,\n                                      final boolean logErrors)", "modifiers": "private", "return": "void", "signature": "void tryRegisterNodeTypes(final List<URL> nodeTypeResources,\n                                      final NodeTypeManager nodeTypeManager,\n                                      final NamespaceRegistry namespaceRegistry,\n                                      final ValueFactory valueFactory,\n                                      final boolean logErrors)", "full_signature": "private void tryRegisterNodeTypes(final List<URL> nodeTypeResources,\n                                      final NodeTypeManager nodeTypeManager,\n                                      final NamespaceRegistry namespaceRegistry,\n                                      final ValueFactory valueFactory,\n                                      final boolean logErrors)", "class_method_signature": "CNDURLInstaller.tryRegisterNodeTypes(final List<URL> nodeTypeResources,\n                                      final NodeTypeManager nodeTypeManager,\n                                      final NamespaceRegistry namespaceRegistry,\n                                      final ValueFactory valueFactory,\n                                      final boolean logErrors)", "testcase": false, "constructor": false}, {"identifier": "registerNodeTypesFromUrl", "parameters": "(final URL namedResource,\n                                          final NodeTypeManager nodeTypeManager,\n                                          final NamespaceRegistry namespaceRegistry,\n                                          final ValueFactory valueFactory)", "modifiers": "private", "return": "void", "signature": "void registerNodeTypesFromUrl(final URL namedResource,\n                                          final NodeTypeManager nodeTypeManager,\n                                          final NamespaceRegistry namespaceRegistry,\n                                          final ValueFactory valueFactory)", "full_signature": "private void registerNodeTypesFromUrl(final URL namedResource,\n                                          final NodeTypeManager nodeTypeManager,\n                                          final NamespaceRegistry namespaceRegistry,\n                                          final ValueFactory valueFactory)", "class_method_signature": "CNDURLInstaller.registerNodeTypesFromUrl(final URL namedResource,\n                                          final NodeTypeManager nodeTypeManager,\n                                          final NamespaceRegistry namespaceRegistry,\n                                          final ValueFactory valueFactory)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/CNDURLInstaller.java"}, "focal_method": {"identifier": "register", "parameters": "(Session session)", "modifiers": "public", "return": "void", "body": "public void register(Session session) throws RepositoryException {\n        register(session, unorderedCnds);\n        registerByUrl(session, postInstallCnds);\n    }", "signature": "void register(Session session)", "full_signature": "public void register(Session session)", "class_method_signature": "CNDURLInstaller.register(Session session)", "testcase": false, "constructor": false, "invocations": ["register", "registerByUrl"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}