{"test_class": {"identifier": "SoapMessageDispatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SoapMessageDispatcher dispatcher;", "modifier": "private", "type": "SoapMessageDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "private SoapEndpointInterceptor interceptorMock;", "modifier": "private", "type": "SoapEndpointInterceptor", "declarator": "interceptorMock", "var_name": "interceptorMock"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/server/SoapMessageDispatcherTest.java"}, "test_case": {"identifier": "testProcessMustUnderstandHeadersNotUnderstoodSoap11", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testProcessMustUnderstandHeadersNotUnderstoodSoap11() throws Exception {\n\t\tMessageFactory messageFactory = MessageFactory.newInstance(SOAPConstants.SOAP_1_1_PROTOCOL);\n\t\tSOAPMessage request = messageFactory.createMessage();\n\t\tSOAPHeaderElement header = request.getSOAPHeader()\n\t\t\t\t.addHeaderElement(new QName(\"http://www.springframework.org\", \"Header\", \"spring-ws\"));\n\t\theader.setActor(SOAPConstants.URI_SOAP_ACTOR_NEXT);\n\t\theader.setMustUnderstand(true);\n\t\tSoapMessageFactory factory = new SaajSoapMessageFactory(messageFactory);\n\t\tMessageContext context = new DefaultMessageContext(new SaajSoapMessage(request), factory);\n\t\texpect(interceptorMock.understands(isA(SoapHeaderElement.class))).andReturn(false);\n\n\t\treplay(interceptorMock);\n\n\t\tSoapEndpointInvocationChain chain = new SoapEndpointInvocationChain(new Object(),\n\t\t\t\tnew SoapEndpointInterceptor[] { interceptorMock });\n\n\t\tboolean result = dispatcher.handleRequest(chain, context);\n\t\tAssert.assertFalse(\"Header understood\", result);\n\t\tAssert.assertTrue(\"Context has no response\", context.hasResponse());\n\t\tSoapBody responseBody = ((SoapMessage) context.getResponse()).getSoapBody();\n\t\tAssert.assertTrue(\"Response body has no fault\", responseBody.hasFault());\n\t\tSoap11Fault fault = (Soap11Fault) responseBody.getFault();\n\t\tAssert.assertEquals(\"Invalid fault code\", new QName(SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE, \"MustUnderstand\"),\n\t\t\t\tfault.getFaultCode());\n\t\tAssert.assertEquals(\"Invalid fault string\", SoapMessageDispatcher.DEFAULT_MUST_UNDERSTAND_FAULT_STRING,\n\t\t\t\tfault.getFaultStringOrReason());\n\t\tAssert.assertEquals(\"Invalid fault string locale\", Locale.ENGLISH, fault.getFaultStringLocale());\n\n\t\tverify(interceptorMock);\n\t}", "signature": "void testProcessMustUnderstandHeadersNotUnderstoodSoap11()", "full_signature": "@Test public void testProcessMustUnderstandHeadersNotUnderstoodSoap11()", "class_method_signature": "SoapMessageDispatcherTest.testProcessMustUnderstandHeadersNotUnderstoodSoap11()", "testcase": true, "constructor": false, "invocations": ["newInstance", "createMessage", "addHeaderElement", "getSOAPHeader", "setActor", "setMustUnderstand", "andReturn", "expect", "understands", "isA", "replay", "handleRequest", "assertFalse", "assertTrue", "hasResponse", "getSoapBody", "getResponse", "assertTrue", "hasFault", "getFault", "assertEquals", "getFaultCode", "assertEquals", "getFaultStringOrReason", "assertEquals", "getFaultStringLocale", "verify"]}, "focal_class": {"identifier": "SoapMessageDispatcher", "superclass": "extends MessageDispatcher", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_MUST_UNDERSTAND_FAULT_STRING = \"One or more mandatory SOAP header blocks not understood\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_MUST_UNDERSTAND_FAULT_STRING = \"One or more mandatory SOAP header blocks not understood\"", "var_name": "DEFAULT_MUST_UNDERSTAND_FAULT_STRING"}, {"original_string": "private String mustUnderstandFaultString = DEFAULT_MUST_UNDERSTAND_FAULT_STRING;", "modifier": "private", "type": "String", "declarator": "mustUnderstandFaultString = DEFAULT_MUST_UNDERSTAND_FAULT_STRING", "var_name": "mustUnderstandFaultString"}, {"original_string": "private Locale mustUnderstandFaultStringLocale = Locale.ENGLISH;", "modifier": "private", "type": "Locale", "declarator": "mustUnderstandFaultStringLocale = Locale.ENGLISH", "var_name": "mustUnderstandFaultStringLocale"}], "methods": [{"identifier": "setMustUnderstandFaultString", "parameters": "(String mustUnderstandFaultString)", "modifiers": "public", "return": "void", "signature": "void setMustUnderstandFaultString(String mustUnderstandFaultString)", "full_signature": "public void setMustUnderstandFaultString(String mustUnderstandFaultString)", "class_method_signature": "SoapMessageDispatcher.setMustUnderstandFaultString(String mustUnderstandFaultString)", "testcase": false, "constructor": false}, {"identifier": "setMustUnderstandFaultStringLocale", "parameters": "(Locale mustUnderstandFaultStringLocale)", "modifiers": "public", "return": "void", "signature": "void setMustUnderstandFaultStringLocale(Locale mustUnderstandFaultStringLocale)", "full_signature": "public void setMustUnderstandFaultStringLocale(Locale mustUnderstandFaultStringLocale)", "class_method_signature": "SoapMessageDispatcher.setMustUnderstandFaultStringLocale(Locale mustUnderstandFaultStringLocale)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "full_signature": "@Override protected boolean handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "class_method_signature": "SoapMessageDispatcher.handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "testcase": false, "constructor": false}, {"identifier": "handleHeaders", "parameters": "(EndpointInvocationChain mappedEndpoint, MessageContext messageContext,\n\t\t\tString[] actorsOrRoles, boolean isUltimateReceiver)", "modifiers": "private", "return": "boolean", "signature": "boolean handleHeaders(EndpointInvocationChain mappedEndpoint, MessageContext messageContext,\n\t\t\tString[] actorsOrRoles, boolean isUltimateReceiver)", "full_signature": "private boolean handleHeaders(EndpointInvocationChain mappedEndpoint, MessageContext messageContext,\n\t\t\tString[] actorsOrRoles, boolean isUltimateReceiver)", "class_method_signature": "SoapMessageDispatcher.handleHeaders(EndpointInvocationChain mappedEndpoint, MessageContext messageContext,\n\t\t\tString[] actorsOrRoles, boolean isUltimateReceiver)", "testcase": false, "constructor": false}, {"identifier": "headerUnderstood", "parameters": "(EndpointInvocationChain mappedEndpoint, SoapHeaderElement headerElement)", "modifiers": "private", "return": "boolean", "signature": "boolean headerUnderstood(EndpointInvocationChain mappedEndpoint, SoapHeaderElement headerElement)", "full_signature": "private boolean headerUnderstood(EndpointInvocationChain mappedEndpoint, SoapHeaderElement headerElement)", "class_method_signature": "SoapMessageDispatcher.headerUnderstood(EndpointInvocationChain mappedEndpoint, SoapHeaderElement headerElement)", "testcase": false, "constructor": false}, {"identifier": "createMustUnderstandFault", "parameters": "(SoapMessage soapResponse, List<QName> notUnderstoodHeaderNames,\n\t\t\tString[] actorsOrRoles)", "modifiers": "private", "return": "void", "signature": "void createMustUnderstandFault(SoapMessage soapResponse, List<QName> notUnderstoodHeaderNames,\n\t\t\tString[] actorsOrRoles)", "full_signature": "private void createMustUnderstandFault(SoapMessage soapResponse, List<QName> notUnderstoodHeaderNames,\n\t\t\tString[] actorsOrRoles)", "class_method_signature": "SoapMessageDispatcher.createMustUnderstandFault(SoapMessage soapResponse, List<QName> notUnderstoodHeaderNames,\n\t\t\tString[] actorsOrRoles)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/server/SoapMessageDispatcher.java"}, "focal_method": {"identifier": "handleRequest", "parameters": "(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "modifiers": "@Override protected", "return": "boolean", "body": "@Override\n\tprotected boolean handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext) {\n\t\tif (messageContext.getRequest() instanceof SoapMessage) {\n\t\t\tString[] actorsOrRoles = null;\n\t\t\tboolean isUltimateReceiver = true;\n\t\t\tif (mappedEndpoint instanceof SoapEndpointInvocationChain) {\n\t\t\t\tSoapEndpointInvocationChain soapChain = (SoapEndpointInvocationChain) mappedEndpoint;\n\t\t\t\tactorsOrRoles = soapChain.getActorsOrRoles();\n\t\t\t\tisUltimateReceiver = soapChain.isUltimateReceiver();\n\t\t\t}\n\t\t\treturn handleHeaders(mappedEndpoint, messageContext, actorsOrRoles, isUltimateReceiver);\n\t\t}\n\t\treturn true;\n\t}", "signature": "boolean handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "full_signature": "@Override protected boolean handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "class_method_signature": "SoapMessageDispatcher.handleRequest(EndpointInvocationChain mappedEndpoint, MessageContext messageContext)", "testcase": false, "constructor": false, "invocations": ["getRequest", "getActorsOrRoles", "isUltimateReceiver", "handleHeaders"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}