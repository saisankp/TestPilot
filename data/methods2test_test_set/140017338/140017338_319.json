{"test_class": {"identifier": "XmlSettingsReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XML_ROOT_TAG = \"rootTag\";", "modifier": "private static final", "type": "String", "declarator": "XML_ROOT_TAG = \"rootTag\"", "var_name": "XML_ROOT_TAG"}, {"original_string": "private static final String XML_CHILD_TAG = \"childTag\";", "modifier": "private static final", "type": "String", "declarator": "XML_CHILD_TAG = \"childTag\"", "var_name": "XML_CHILD_TAG"}, {"original_string": "private static final String XML_GRAND_CHILD_TAG = \"grandChildTag\";", "modifier": "private static final", "type": "String", "declarator": "XML_GRAND_CHILD_TAG = \"grandChildTag\"", "var_name": "XML_GRAND_CHILD_TAG"}, {"original_string": "private static final String PARAM_TAG = \"param\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_TAG = \"param\"", "var_name": "PARAM_TAG"}, {"original_string": "private static final String STRING_TAG = \"stringTag\";", "modifier": "private static final", "type": "String", "declarator": "STRING_TAG = \"stringTag\"", "var_name": "STRING_TAG"}, {"original_string": "private static final String INT_TAG = \"intTag\";", "modifier": "private static final", "type": "String", "declarator": "INT_TAG = \"intTag\"", "var_name": "INT_TAG"}, {"original_string": "private static final String BOOL_TAG = \"boolTag\";", "modifier": "private static final", "type": "String", "declarator": "BOOL_TAG = \"boolTag\"", "var_name": "BOOL_TAG"}, {"original_string": "private static final String COMPLEX_TAG = \"boolean\";", "modifier": "private static final", "type": "String", "declarator": "COMPLEX_TAG = \"boolean\"", "var_name": "COMPLEX_TAG"}, {"original_string": "private static final String BOOL_MAP_TAG_1 = \"boolMapKeyTag1\";", "modifier": "private static final", "type": "String", "declarator": "BOOL_MAP_TAG_1 = \"boolMapKeyTag1\"", "var_name": "BOOL_MAP_TAG_1"}, {"original_string": "private static final String BOOL_MAP_TAG_2 = \"boolMapKeyTag2\";", "modifier": "private static final", "type": "String", "declarator": "BOOL_MAP_TAG_2 = \"boolMapKeyTag2\"", "var_name": "BOOL_MAP_TAG_2"}, {"original_string": "private static final String DEFAULT_STRING = \"defaultStringValue\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_STRING = \"defaultStringValue\"", "var_name": "DEFAULT_STRING"}, {"original_string": "private static final int DEFAULT_INT = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_INT = 0", "var_name": "DEFAULT_INT"}, {"original_string": "private static final boolean DEFAULT_BOOL = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_BOOL = false", "var_name": "DEFAULT_BOOL"}, {"original_string": "private String stringValue = \"testStringValue\";", "modifier": "private", "type": "String", "declarator": "stringValue = \"testStringValue\"", "var_name": "stringValue"}, {"original_string": "private int intValue = 2000;", "modifier": "private", "type": "int", "declarator": "intValue = 2000", "var_name": "intValue"}, {"original_string": "private boolean booleanValue = true;", "modifier": "private", "type": "boolean", "declarator": "booleanValue = true", "var_name": "booleanValue"}, {"original_string": "private XmlSettingsReader xsr;", "modifier": "private", "type": "XmlSettingsReader", "declarator": "xsr", "var_name": "xsr"}], "file": "core/runtime/src/test/java/org/eclipse/sw360/antenna/util/XmlSettingsReaderTest.java"}, "test_case": {"identifier": "readValueByXPathExp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readValueByXPathExp() throws Exception {\n        String simpleDefaultStringElement = prepareElement(STRING_TAG, DEFAULT_STRING);\n        String simpleStringElement = prepareElement(STRING_TAG, stringValue);\n        String grandChildXml = prepareElement(XML_GRAND_CHILD_TAG, simpleStringElement);\n        String childXml = prepareElement(XML_CHILD_TAG, grandChildXml);\n        String rootXml = prepareElement(XML_ROOT_TAG, simpleDefaultStringElement + childXml);\n        xsr = new XmlSettingsReader(rootXml);\n\n        \n        String xPath = \"descendant::\" + XML_GRAND_CHILD_TAG;\n        String readStringPropertyByXPath = xsr.getStringPropertyByXPath(xPath, STRING_TAG, DEFAULT_STRING);\n        \n        assertNotEquals(stringValue, DEFAULT_INT);\n        assertEquals(stringValue, readStringPropertyByXPath);\n    }", "signature": "void readValueByXPathExp()", "full_signature": "@Test public void readValueByXPathExp()", "class_method_signature": "XmlSettingsReaderTest.readValueByXPathExp()", "testcase": true, "constructor": false, "invocations": ["prepareElement", "prepareElement", "prepareElement", "prepareElement", "prepareElement", "getStringPropertyByXPath", "assertNotEquals", "assertEquals"]}, "focal_class": {"identifier": "XmlSettingsReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Document doc;", "modifier": "private", "type": "Document", "declarator": "doc", "var_name": "doc"}, {"original_string": "private XPath xpath;", "modifier": "private", "type": "XPath", "declarator": "xpath", "var_name": "xpath"}], "methods": [{"identifier": "XmlSettingsReader", "parameters": "(String xmlString)", "modifiers": "public", "return": "", "signature": " XmlSettingsReader(String xmlString)", "full_signature": "public  XmlSettingsReader(String xmlString)", "class_method_signature": "XmlSettingsReader.XmlSettingsReader(String xmlString)", "testcase": false, "constructor": true}, {"identifier": "initDocumentBuilder", "parameters": "()", "modifiers": "private", "return": "DocumentBuilder", "signature": "DocumentBuilder initDocumentBuilder()", "full_signature": "private DocumentBuilder initDocumentBuilder()", "class_method_signature": "XmlSettingsReader.initDocumentBuilder()", "testcase": false, "constructor": false}, {"identifier": "initXPath", "parameters": "()", "modifiers": "private", "return": "XPath", "signature": "XPath initXPath()", "full_signature": "private XPath initXPath()", "class_method_signature": "XmlSettingsReader.initXPath()", "testcase": false, "constructor": false}, {"identifier": "getIntProperty", "parameters": "(String xPathExp, String tagName, int defaultVal)", "modifiers": "public", "return": "int", "signature": "int getIntProperty(String xPathExp, String tagName, int defaultVal)", "full_signature": "public int getIntProperty(String xPathExp, String tagName, int defaultVal)", "class_method_signature": "XmlSettingsReader.getIntProperty(String xPathExp, String tagName, int defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getStringPropertyByXPath", "parameters": "(String xPathExp, String tagName)", "modifiers": "public", "return": "String", "signature": "String getStringPropertyByXPath(String xPathExp, String tagName)", "full_signature": "public String getStringPropertyByXPath(String xPathExp, String tagName)", "class_method_signature": "XmlSettingsReader.getStringPropertyByXPath(String xPathExp, String tagName)", "testcase": false, "constructor": false}, {"identifier": "getStringPropertyByXPath", "parameters": "(String xPathExp, String tagName, String defaultVal)", "modifiers": "public", "return": "String", "signature": "String getStringPropertyByXPath(String xPathExp, String tagName, String defaultVal)", "full_signature": "public String getStringPropertyByXPath(String xPathExp, String tagName, String defaultVal)", "class_method_signature": "XmlSettingsReader.getStringPropertyByXPath(String xPathExp, String tagName, String defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getBooleanProperty", "parameters": "(String xPathExp, String tagName, boolean defaultVal)", "modifiers": "public", "return": "boolean", "signature": "boolean getBooleanProperty(String xPathExp, String tagName, boolean defaultVal)", "full_signature": "public boolean getBooleanProperty(String xPathExp, String tagName, boolean defaultVal)", "class_method_signature": "XmlSettingsReader.getBooleanProperty(String xPathExp, String tagName, boolean defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getStringProperty", "parameters": "(String tagName)", "modifiers": "public", "return": "String", "signature": "String getStringProperty(String tagName)", "full_signature": "public String getStringProperty(String tagName)", "class_method_signature": "XmlSettingsReader.getStringProperty(String tagName)", "testcase": false, "constructor": false}, {"identifier": "getFileProperty", "parameters": "(String tagName)", "modifiers": "public", "return": "File", "signature": "File getFileProperty(String tagName)", "full_signature": "public File getFileProperty(String tagName)", "class_method_signature": "XmlSettingsReader.getFileProperty(String tagName)", "testcase": false, "constructor": false}, {"identifier": "getStringProperty", "parameters": "(String tagName, String defaultValue)", "modifiers": "public", "return": "String", "signature": "String getStringProperty(String tagName, String defaultValue)", "full_signature": "public String getStringProperty(String tagName, String defaultValue)", "class_method_signature": "XmlSettingsReader.getStringProperty(String tagName, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStringListProperty", "parameters": "(String tagName)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringListProperty(String tagName)", "full_signature": "public List<String> getStringListProperty(String tagName)", "class_method_signature": "XmlSettingsReader.getStringListProperty(String tagName)", "testcase": false, "constructor": false}, {"identifier": "getStringKeyedBooleanMapProperty", "parameters": "(String tagName)", "modifiers": "public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> getStringKeyedBooleanMapProperty(String tagName)", "full_signature": "public Map<String, Boolean> getStringKeyedBooleanMapProperty(String tagName)", "class_method_signature": "XmlSettingsReader.getStringKeyedBooleanMapProperty(String tagName)", "testcase": false, "constructor": false}, {"identifier": "getStringKeyedMapProperty", "parameters": "(String tagName, Function<String, T> mapFunction)", "modifiers": "public", "return": "Map<String, T>", "signature": "Map<String, T> getStringKeyedMapProperty(String tagName, Function<String, T> mapFunction)", "full_signature": "public Map<String, T> getStringKeyedMapProperty(String tagName, Function<String, T> mapFunction)", "class_method_signature": "XmlSettingsReader.getStringKeyedMapProperty(String tagName, Function<String, T> mapFunction)", "testcase": false, "constructor": false}, {"identifier": "getComplexType", "parameters": "(String tagName, Class<T> targetClass)", "modifiers": "public", "return": "T", "signature": "T getComplexType(String tagName, Class<T> targetClass)", "full_signature": "public T getComplexType(String tagName, Class<T> targetClass)", "class_method_signature": "XmlSettingsReader.getComplexType(String tagName, Class<T> targetClass)", "testcase": false, "constructor": false}, {"identifier": "getElement", "parameters": "(Document doc, String tagName)", "modifiers": "private", "return": "Node", "signature": "Node getElement(Document doc, String tagName)", "full_signature": "private Node getElement(Document doc, String tagName)", "class_method_signature": "XmlSettingsReader.getElement(Document doc, String tagName)", "testcase": false, "constructor": false}, {"identifier": "getElementByXPath", "parameters": "(String xPathExp, String tagName, Function<Node,T> callback, T defaultValue)", "modifiers": "private", "return": "T", "signature": "T getElementByXPath(String xPathExp, String tagName, Function<Node,T> callback, T defaultValue)", "full_signature": "private T getElementByXPath(String xPathExp, String tagName, Function<Node,T> callback, T defaultValue)", "class_method_signature": "XmlSettingsReader.getElementByXPath(String xPathExp, String tagName, Function<Node,T> callback, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getElementByXPath", "parameters": "(String xPathExp, String tagName)", "modifiers": "private", "return": "Optional<Node>", "signature": "Optional<Node> getElementByXPath(String xPathExp, String tagName)", "full_signature": "private Optional<Node> getElementByXPath(String xPathExp, String tagName)", "class_method_signature": "XmlSettingsReader.getElementByXPath(String xPathExp, String tagName)", "testcase": false, "constructor": false}], "file": "core/runtime/src/main/java/org/eclipse/sw360/antenna/util/XmlSettingsReader.java"}, "focal_method": {"identifier": "getStringPropertyByXPath", "parameters": "(String xPathExp, String tagName)", "modifiers": "public", "return": "String", "body": "public String getStringPropertyByXPath(String xPathExp, String tagName) {\n        return getStringPropertyByXPath(xPathExp, tagName, null);\n\n    }", "signature": "String getStringPropertyByXPath(String xPathExp, String tagName)", "full_signature": "public String getStringPropertyByXPath(String xPathExp, String tagName)", "class_method_signature": "XmlSettingsReader.getStringPropertyByXPath(String xPathExp, String tagName)", "testcase": false, "constructor": false, "invocations": ["getStringPropertyByXPath"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}