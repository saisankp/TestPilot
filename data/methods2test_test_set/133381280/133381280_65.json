{"test_class": {"identifier": "DefaultAddressServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-reg-server/src/test/java/com/alipay/lookout/remote/report/DefaultAddressServiceTest.java"}, "test_case": {"identifier": "testSetAddressList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetAddressList() {\n        AddressService addressService = new DefaultAddressService();\n        Assert.assertFalse(addressService.isAgentServerExisted());\n        ((DefaultAddressService) addressService).setAddressList(Lists.newArrayList(\"127.0.0.1\",\n            \"127.0.0.2\"));\n        Assert.assertTrue(addressService.isAgentServerExisted());\n        Address address = addressService.getAgentServerHost();\n        System.out.println(address);\n        Assert.assertTrue(address.ip().startsWith(\"127.0.0\"));\n    }", "signature": "void testSetAddressList()", "full_signature": "@Test public void testSetAddressList()", "class_method_signature": "DefaultAddressServiceTest.testSetAddressList()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isAgentServerExisted", "setAddressList", "newArrayList", "assertTrue", "isAgentServerExisted", "getAgentServerHost", "println", "assertTrue", "startsWith", "ip"]}, "focal_class": {"identifier": "DefaultAddressService", "superclass": "", "interfaces": "implements AddressService", "fields": [{"original_string": "private Address       agentTestUrl;", "modifier": "private", "type": "Address", "declarator": "agentTestUrl", "var_name": "agentTestUrl"}, {"original_string": "private List<Address> addressList;", "modifier": "private", "type": "List<Address>", "declarator": "addressList", "var_name": "addressList"}], "methods": [{"identifier": "DefaultAddressService", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultAddressService()", "full_signature": "public  DefaultAddressService()", "class_method_signature": "DefaultAddressService.DefaultAddressService()", "testcase": false, "constructor": true}, {"identifier": "DefaultAddressService", "parameters": "(String appName)", "modifiers": "public", "return": "", "signature": " DefaultAddressService(String appName)", "full_signature": "public  DefaultAddressService(String appName)", "class_method_signature": "DefaultAddressService.DefaultAddressService(String appName)", "testcase": false, "constructor": true}, {"identifier": "clearAddressCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAddressCache()", "full_signature": "public void clearAddressCache()", "class_method_signature": "DefaultAddressService.clearAddressCache()", "testcase": false, "constructor": false}, {"identifier": "setAgentTestUrl", "parameters": "(String agentTestUrl)", "modifiers": "public", "return": "void", "signature": "void setAgentTestUrl(String agentTestUrl)", "full_signature": "public void setAgentTestUrl(String agentTestUrl)", "class_method_signature": "DefaultAddressService.setAgentTestUrl(String agentTestUrl)", "testcase": false, "constructor": false}, {"identifier": "setAgentServerVip", "parameters": "(String agentServerVip)", "modifiers": "public", "return": "void", "signature": "void setAgentServerVip(String agentServerVip)", "full_signature": "public void setAgentServerVip(String agentServerVip)", "class_method_signature": "DefaultAddressService.setAgentServerVip(String agentServerVip)", "testcase": false, "constructor": false}, {"identifier": "setAddressList", "parameters": "(List<String> addresses)", "modifiers": "public", "return": "void", "signature": "void setAddressList(List<String> addresses)", "full_signature": "public void setAddressList(List<String> addresses)", "class_method_signature": "DefaultAddressService.setAddressList(List<String> addresses)", "testcase": false, "constructor": false}, {"identifier": "getAgentTestUrl", "parameters": "()", "modifiers": "protected", "return": "Address", "signature": "Address getAgentTestUrl()", "full_signature": "protected Address getAgentTestUrl()", "class_method_signature": "DefaultAddressService.getAgentTestUrl()", "testcase": false, "constructor": false}, {"identifier": "getAddressList", "parameters": "()", "modifiers": "protected", "return": "List<Address>", "signature": "List<Address> getAddressList()", "full_signature": "protected List<Address> getAddressList()", "class_method_signature": "DefaultAddressService.getAddressList()", "testcase": false, "constructor": false}, {"identifier": "isAgentServerExisted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAgentServerExisted()", "full_signature": "@Override public boolean isAgentServerExisted()", "class_method_signature": "DefaultAddressService.isAgentServerExisted()", "testcase": false, "constructor": false}, {"identifier": "getAgentServerHost", "parameters": "()", "modifiers": "@Override public", "return": "Address", "signature": "Address getAgentServerHost()", "full_signature": "@Override public Address getAgentServerHost()", "class_method_signature": "DefaultAddressService.getAgentServerHost()", "testcase": false, "constructor": false}], "file": "client/lookout-reg-server/src/main/java/com/alipay/lookout/remote/report/DefaultAddressService.java"}, "focal_method": {"identifier": "setAddressList", "parameters": "(List<String> addresses)", "modifiers": "public", "return": "void", "body": "public void setAddressList(List<String> addresses) {\n        if (addresses == null || addresses.isEmpty()) {\n            return;\n        }\n        List<Address> addressList = new ArrayList<Address>();\n        for (String addressStr : addresses) {\n            addressList.add(new Address(addressStr.trim()));\n        }\n        this.addressList = addressList;\n    }", "signature": "void setAddressList(List<String> addresses)", "full_signature": "public void setAddressList(List<String> addresses)", "class_method_signature": "DefaultAddressService.setAddressList(List<String> addresses)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "add", "trim"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}