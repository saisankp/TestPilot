{"test_class": {"identifier": "UiIndicatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/co/smartreceipts/android/widget/model/UiIndicatorTest.java"}, "test_case": {"identifier": "error", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void error() throws Exception {\n        final UiIndicator uiIndicator = UiIndicator.error();\n        assertEquals(UiIndicator.State.Error, uiIndicator.getState());\n        assertEquals(null, uiIndicator.getData().orNull());\n    }", "signature": "void error()", "full_signature": "@Test public void error()", "class_method_signature": "UiIndicatorTest.error()", "testcase": true, "constructor": false, "invocations": ["error", "assertEquals", "getState", "assertEquals", "orNull", "getData"]}, "focal_class": {"identifier": "UiIndicator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final State state;", "modifier": "private final", "type": "State", "declarator": "state", "var_name": "state"}, {"original_string": "private final Optional<T> data;", "modifier": "private final", "type": "Optional<T>", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "UiIndicator", "parameters": "(@NonNull State state, @Nullable T data)", "modifiers": "private", "return": "", "signature": " UiIndicator(@NonNull State state, @Nullable T data)", "full_signature": "private  UiIndicator(@NonNull State state, @Nullable T data)", "class_method_signature": "UiIndicator.UiIndicator(@NonNull State state, @Nullable T data)", "testcase": false, "constructor": true}, {"identifier": "idle", "parameters": "()", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> idle()", "full_signature": "@NonNull public static UiIndicator<T> idle()", "class_method_signature": "UiIndicator.idle()", "testcase": false, "constructor": false}, {"identifier": "loading", "parameters": "()", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> loading()", "full_signature": "@NonNull public static UiIndicator<T> loading()", "class_method_signature": "UiIndicator.loading()", "testcase": false, "constructor": false}, {"identifier": "loading", "parameters": "(@NonNull T data)", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> loading(@NonNull T data)", "full_signature": "@NonNull public static UiIndicator<T> loading(@NonNull T data)", "class_method_signature": "UiIndicator.loading(@NonNull T data)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "()", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> error()", "full_signature": "@NonNull public static UiIndicator<T> error()", "class_method_signature": "UiIndicator.error()", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(@NonNull T data)", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> error(@NonNull T data)", "full_signature": "@NonNull public static UiIndicator<T> error(@NonNull T data)", "class_method_signature": "UiIndicator.error(@NonNull T data)", "testcase": false, "constructor": false}, {"identifier": "success", "parameters": "()", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> success()", "full_signature": "@NonNull public static UiIndicator<T> success()", "class_method_signature": "UiIndicator.success()", "testcase": false, "constructor": false}, {"identifier": "success", "parameters": "(@NonNull T data)", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "signature": "UiIndicator<T> success(@NonNull T data)", "full_signature": "@NonNull public static UiIndicator<T> success(@NonNull T data)", "class_method_signature": "UiIndicator.success(@NonNull T data)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@NonNull public", "return": "State", "signature": "State getState()", "full_signature": "@NonNull public State getState()", "class_method_signature": "UiIndicator.getState()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "@NonNull public", "return": "Optional<T>", "signature": "Optional<T> getData()", "full_signature": "@NonNull public Optional<T> getData()", "class_method_signature": "UiIndicator.getData()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "UiIndicator.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "UiIndicator.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UiIndicator.toString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/widget/model/UiIndicator.java"}, "focal_method": {"identifier": "error", "parameters": "()", "modifiers": "@NonNull public static", "return": "UiIndicator<T>", "body": "@NonNull\n    public static <T> UiIndicator<T> error() {\n        return new UiIndicator<>(State.Error, null);\n    }", "signature": "UiIndicator<T> error()", "full_signature": "@NonNull public static UiIndicator<T> error()", "class_method_signature": "UiIndicator.error()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}