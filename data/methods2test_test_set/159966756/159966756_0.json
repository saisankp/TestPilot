{"test_class": {"identifier": "DownloadInfoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DownloadInfo info = new DownloadInfo(Uri.parse(\"file:///\"),\n            \"http://example.org\",\n            \"example\");", "modifier": "private", "type": "DownloadInfo", "declarator": "info = new DownloadInfo(Uri.parse(\"file:///\"),\n            \"http://example.org\",\n            \"example\")", "var_name": "info"}], "file": "app/src/test/java/com/tachibana/downloader/core/model/data/entity/DownloadInfoTest.java"}, "test_case": {"identifier": "testSetNumPieces", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetNumPieces()\n    {\n        try {\n            info.setNumPieces(0);\n            fail(\"Zero pieces test failed\");\n        } catch (IllegalArgumentException e) { }\n\n        info.partialSupport = false;\n        try {\n            info.setNumPieces(3);\n            fail(\"Partial support test failed\");\n        } catch (IllegalStateException e) { }\n\n        info.partialSupport = true;\n        info.totalBytes = -1;\n        try {\n            info.setNumPieces(3);\n            fail(\"Multipart with unavailable size test failed\");\n        } catch (IllegalStateException e) { }\n\n        info.totalBytes = 0;\n        try {\n            info.setNumPieces(3);\n            fail(\"Multipart with zero size test failed\");\n        } catch (IllegalStateException e) { }\n\n        info.totalBytes = 2;\n        try {\n            info.setNumPieces(3);\n            fail(\"Size less than pieces test failed\");\n        } catch (IllegalStateException e) { }\n    }", "signature": "void testSetNumPieces()", "full_signature": "@Test public void testSetNumPieces()", "class_method_signature": "DownloadInfoTest.testSetNumPieces()", "testcase": true, "constructor": false, "invocations": ["setNumPieces", "fail", "setNumPieces", "fail", "setNumPieces", "fail", "setNumPieces", "fail", "setNumPieces", "fail"]}, "focal_class": {"identifier": "DownloadInfo", "superclass": "", "interfaces": "implements Parcelable, Comparable<DownloadInfo>", "fields": [{"original_string": "public static final int MIN_PIECES = 1;", "modifier": "public static final", "type": "int", "declarator": "MIN_PIECES = 1", "var_name": "MIN_PIECES"}, {"original_string": "public static final int MAX_PIECES = 16;", "modifier": "public static final", "type": "int", "declarator": "MAX_PIECES = 16", "var_name": "MAX_PIECES"}, {"original_string": "public static final int VISIBILITY_VISIBLE = 0;", "modifier": "public static final", "type": "int", "declarator": "VISIBILITY_VISIBLE = 0", "var_name": "VISIBILITY_VISIBLE"}, {"original_string": "public static final int VISIBILITY_VISIBLE_NOTIFY_COMPLETED = 1;", "modifier": "public static final", "type": "int", "declarator": "VISIBILITY_VISIBLE_NOTIFY_COMPLETED = 1", "var_name": "VISIBILITY_VISIBLE_NOTIFY_COMPLETED"}, {"original_string": "public static final int VISIBILITY_HIDDEN = 2;", "modifier": "public static final", "type": "int", "declarator": "VISIBILITY_HIDDEN = 2", "var_name": "VISIBILITY_HIDDEN"}, {"original_string": "public static final int VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION = 3;", "modifier": "public static final", "type": "int", "declarator": "VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION = 3", "var_name": "VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION"}, {"original_string": "public static final int MIN_RETRY_AFTER = 30;", "modifier": "public static final", "type": "int", "declarator": "MIN_RETRY_AFTER = 30", "var_name": "MIN_RETRY_AFTER"}, {"original_string": "public static final int MAX_RETRY_AFTER = 24 * 60 * 60;", "modifier": "public static final", "type": "int", "declarator": "MAX_RETRY_AFTER = 24 * 60 * 60", "var_name": "MAX_RETRY_AFTER"}, {"original_string": "@PrimaryKey\n    @NonNull\n    public UUID id;", "modifier": "@PrimaryKey\n    @NonNull\n    public", "type": "UUID", "declarator": "id", "var_name": "id"}, {"original_string": "@TypeConverters({UriConverter.class})\n    @NonNull\n    public Uri dirPath;", "modifier": "@TypeConverters({UriConverter.class})\n    @NonNull\n    public", "type": "Uri", "declarator": "dirPath", "var_name": "dirPath"}, {"original_string": "@NonNull\n    public String url;", "modifier": "@NonNull\n    public", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "@NonNull\n    public String fileName;", "modifier": "@NonNull\n    public", "type": "String", "declarator": "fileName", "var_name": "fileName"}, {"original_string": "public String description;", "modifier": "public", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "public String mimeType = \"application/octet-stream\";", "modifier": "public", "type": "String", "declarator": "mimeType = \"application/octet-stream\"", "var_name": "mimeType"}, {"original_string": "public long totalBytes = -1;", "modifier": "public", "type": "long", "declarator": "totalBytes = -1", "var_name": "totalBytes"}, {"original_string": "private int numPieces = MIN_PIECES;", "modifier": "private", "type": "int", "declarator": "numPieces = MIN_PIECES", "var_name": "numPieces"}, {"original_string": "public int statusCode = StatusCode.STATUS_PENDING;", "modifier": "public", "type": "int", "declarator": "statusCode = StatusCode.STATUS_PENDING", "var_name": "statusCode"}, {"original_string": "public boolean unmeteredConnectionsOnly = false;", "modifier": "public", "type": "boolean", "declarator": "unmeteredConnectionsOnly = false", "var_name": "unmeteredConnectionsOnly"}, {"original_string": "public boolean retry = true;", "modifier": "public", "type": "boolean", "declarator": "retry = true", "var_name": "retry"}, {"original_string": "public boolean partialSupport = true;", "modifier": "public", "type": "boolean", "declarator": "partialSupport = true", "var_name": "partialSupport"}, {"original_string": "public String statusMsg;", "modifier": "public", "type": "String", "declarator": "statusMsg", "var_name": "statusMsg"}, {"original_string": "public long dateAdded;", "modifier": "public", "type": "long", "declarator": "dateAdded", "var_name": "dateAdded"}, {"original_string": "public int visibility = VISIBILITY_VISIBLE_NOTIFY_COMPLETED;", "modifier": "public", "type": "int", "declarator": "visibility = VISIBILITY_VISIBLE_NOTIFY_COMPLETED", "var_name": "visibility"}, {"original_string": "public boolean hasMetadata = true;", "modifier": "public", "type": "boolean", "declarator": "hasMetadata = true", "var_name": "hasMetadata"}, {"original_string": "public String userAgent;", "modifier": "public", "type": "String", "declarator": "userAgent", "var_name": "userAgent"}, {"original_string": "public int numFailed = 0;", "modifier": "public", "type": "int", "declarator": "numFailed = 0", "var_name": "numFailed"}, {"original_string": "public int retryAfter;", "modifier": "public", "type": "int", "declarator": "retryAfter", "var_name": "retryAfter"}, {"original_string": "public long lastModify;", "modifier": "public", "type": "long", "declarator": "lastModify", "var_name": "lastModify"}, {"original_string": "public String checksum;", "modifier": "public", "type": "String", "declarator": "checksum", "var_name": "checksum"}, {"original_string": "public static final Parcelable.Creator<DownloadInfo> CREATOR =\n            new Parcelable.Creator<DownloadInfo>()\n            {\n                @Override\n                public DownloadInfo createFromParcel(Parcel source)\n                {\n                    return new DownloadInfo(source);\n                }\n\n                @Override\n                public DownloadInfo[] newArray(int size)\n                {\n                    return new DownloadInfo[size];\n                }\n            };", "modifier": "public static final", "type": "Parcelable.Creator<DownloadInfo>", "declarator": "CREATOR =\n            new Parcelable.Creator<DownloadInfo>()\n            {\n                @Override\n                public DownloadInfo createFromParcel(Parcel source)\n                {\n                    return new DownloadInfo(source);\n                }\n\n                @Override\n                public DownloadInfo[] newArray(int size)\n                {\n                    return new DownloadInfo[size];\n                }\n            }", "var_name": "CREATOR"}], "methods": [{"identifier": "DownloadInfo", "parameters": "(@NonNull Uri dirPath,\n                        @NonNull String url,\n                        @NonNull String fileName)", "modifiers": "public", "return": "", "signature": " DownloadInfo(@NonNull Uri dirPath,\n                        @NonNull String url,\n                        @NonNull String fileName)", "full_signature": "public  DownloadInfo(@NonNull Uri dirPath,\n                        @NonNull String url,\n                        @NonNull String fileName)", "class_method_signature": "DownloadInfo.DownloadInfo(@NonNull Uri dirPath,\n                        @NonNull String url,\n                        @NonNull String fileName)", "testcase": false, "constructor": true}, {"identifier": "DownloadInfo", "parameters": "(@NonNull Parcel source)", "modifiers": "@Ignore public", "return": "", "signature": " DownloadInfo(@NonNull Parcel source)", "full_signature": "@Ignore public  DownloadInfo(@NonNull Parcel source)", "class_method_signature": "DownloadInfo.DownloadInfo(@NonNull Parcel source)", "testcase": false, "constructor": true}, {"identifier": "describeContents", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int describeContents()", "full_signature": "@Override public int describeContents()", "class_method_signature": "DownloadInfo.describeContents()", "testcase": false, "constructor": false}, {"identifier": "writeToParcel", "parameters": "(Parcel dest, int flags)", "modifiers": "@Override public", "return": "void", "signature": "void writeToParcel(Parcel dest, int flags)", "full_signature": "@Override public void writeToParcel(Parcel dest, int flags)", "class_method_signature": "DownloadInfo.writeToParcel(Parcel dest, int flags)", "testcase": false, "constructor": false}, {"identifier": "setNumPieces", "parameters": "(int numPieces)", "modifiers": "public", "return": "void", "signature": "void setNumPieces(int numPieces)", "full_signature": "public void setNumPieces(int numPieces)", "class_method_signature": "DownloadInfo.setNumPieces(int numPieces)", "testcase": false, "constructor": false}, {"identifier": "getNumPieces", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumPieces()", "full_signature": "public int getNumPieces()", "class_method_signature": "DownloadInfo.getNumPieces()", "testcase": false, "constructor": false}, {"identifier": "makePieces", "parameters": "()", "modifiers": "public", "return": "List<DownloadPiece>", "signature": "List<DownloadPiece> makePieces()", "full_signature": "public List<DownloadPiece> makePieces()", "class_method_signature": "DownloadInfo.makePieces()", "testcase": false, "constructor": false}, {"identifier": "pieceStartPos", "parameters": "(@NonNull DownloadPiece piece)", "modifiers": "public", "return": "long", "signature": "long pieceStartPos(@NonNull DownloadPiece piece)", "full_signature": "public long pieceStartPos(@NonNull DownloadPiece piece)", "class_method_signature": "DownloadInfo.pieceStartPos(@NonNull DownloadPiece piece)", "testcase": false, "constructor": false}, {"identifier": "pieceEndPos", "parameters": "(@NonNull DownloadPiece piece)", "modifiers": "public", "return": "long", "signature": "long pieceEndPos(@NonNull DownloadPiece piece)", "full_signature": "public long pieceEndPos(@NonNull DownloadPiece piece)", "class_method_signature": "DownloadInfo.pieceEndPos(@NonNull DownloadPiece piece)", "testcase": false, "constructor": false}, {"identifier": "getDownloadedBytes", "parameters": "(@NonNull DownloadPiece piece)", "modifiers": "public", "return": "long", "signature": "long getDownloadedBytes(@NonNull DownloadPiece piece)", "full_signature": "public long getDownloadedBytes(@NonNull DownloadPiece piece)", "class_method_signature": "DownloadInfo.getDownloadedBytes(@NonNull DownloadPiece piece)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(@NonNull DownloadInfo another)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(@NonNull DownloadInfo another)", "full_signature": "@Override public int compareTo(@NonNull DownloadInfo another)", "class_method_signature": "DownloadInfo.compareTo(@NonNull DownloadInfo another)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DownloadInfo.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DownloadInfo.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DownloadInfo.toString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/tachibana/downloader/core/model/data/entity/DownloadInfo.java"}, "focal_method": {"identifier": "setNumPieces", "parameters": "(int numPieces)", "modifiers": "public", "return": "void", "body": "public void setNumPieces(int numPieces)\n    {\n        if (numPieces <= 0)\n            throw new IllegalArgumentException(\"Piece number can't be less or equal zero\");\n\n        if (!partialSupport && numPieces > 1)\n            throw new IllegalStateException(\"The download doesn't support partial download\");\n\n        if ((totalBytes <= 0 && numPieces != 1) || (totalBytes > 0 && totalBytes < numPieces))\n            throw new IllegalStateException(\"The number of pieces can't be more than the number of total bytes\");\n\n        this.numPieces = numPieces;\n    }", "signature": "void setNumPieces(int numPieces)", "full_signature": "public void setNumPieces(int numPieces)", "class_method_signature": "DownloadInfo.setNumPieces(int numPieces)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 159966756, "url": "https://github.com/TachibanaGeneralLaboratories/download-navi", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 164, "size": 4084, "license": "licensed"}}