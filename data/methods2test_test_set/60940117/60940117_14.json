{"test_class": {"identifier": "DefaultRequestLimitRulesSupplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Set<RequestLimitRule> allRules = new HashSet<>();", "modifier": "private final", "type": "Set<RequestLimitRule>", "declarator": "allRules = new HashSet<>()", "var_name": "allRules"}, {"original_string": "private final RequestLimitRulesSupplier<Set<RequestLimitRule>> requestLimitRulesSupplier;", "modifier": "private final", "type": "RequestLimitRulesSupplier<Set<RequestLimitRule>>", "declarator": "requestLimitRulesSupplier", "var_name": "requestLimitRulesSupplier"}], "file": "ratelimitj-core/src/test/java/es/moki/ratelimitj/core/limiter/request/DefaultRequestLimitRulesSupplierTest.java"}, "test_case": {"identifier": "shouldContainLocalhostRulesForLocalhost", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldContainLocalhostRulesForLocalhost() {\n        Set<String> ruleNames = requestLimitRulesSupplier.getRules(\"localhost\")\n                .stream()\n                .map(RequestLimitRule::getName)\n                .collect(Collectors.toSet());\n\n        assertThat(ruleNames).hasSize(2);\n        assertThat(ruleNames).contains(\"localhostPerSeconds\", \"localhostPerHours\");\n    }", "signature": "void shouldContainLocalhostRulesForLocalhost()", "full_signature": "@Test void shouldContainLocalhostRulesForLocalhost()", "class_method_signature": "DefaultRequestLimitRulesSupplierTest.shouldContainLocalhostRulesForLocalhost()", "testcase": true, "constructor": false, "invocations": ["collect", "map", "stream", "getRules", "toSet", "hasSize", "assertThat", "contains", "assertThat"]}, "focal_class": {"identifier": "DefaultRequestLimitRulesSupplier", "superclass": "", "interfaces": "implements RequestLimitRulesSupplier<Set<RequestLimitRule>>", "fields": [{"original_string": "private final Set<RequestLimitRule> defaultRules;", "modifier": "private final", "type": "Set<RequestLimitRule>", "declarator": "defaultRules", "var_name": "defaultRules"}, {"original_string": "private final Map<String, Set<RequestLimitRule>> ruleMap;", "modifier": "private final", "type": "Map<String, Set<RequestLimitRule>>", "declarator": "ruleMap", "var_name": "ruleMap"}], "methods": [{"identifier": "DefaultRequestLimitRulesSupplier", "parameters": "(Set<RequestLimitRule> rules)", "modifiers": "public", "return": "", "signature": " DefaultRequestLimitRulesSupplier(Set<RequestLimitRule> rules)", "full_signature": "public  DefaultRequestLimitRulesSupplier(Set<RequestLimitRule> rules)", "class_method_signature": "DefaultRequestLimitRulesSupplier.DefaultRequestLimitRulesSupplier(Set<RequestLimitRule> rules)", "testcase": false, "constructor": true}, {"identifier": "getRules", "parameters": "(String key)", "modifiers": "@Override public", "return": "Set<RequestLimitRule>", "signature": "Set<RequestLimitRule> getRules(String key)", "full_signature": "@Override public Set<RequestLimitRule> getRules(String key)", "class_method_signature": "DefaultRequestLimitRulesSupplier.getRules(String key)", "testcase": false, "constructor": false}], "file": "ratelimitj-core/src/main/java/es/moki/ratelimitj/core/limiter/request/DefaultRequestLimitRulesSupplier.java"}, "focal_method": {"identifier": "getRules", "parameters": "(String key)", "modifiers": "@Override public", "return": "Set<RequestLimitRule>", "body": "@Override\n    public Set<RequestLimitRule> getRules(String key) {\n        Set<RequestLimitRule> ruleSet = ruleMap.get(key);\n        if (ruleSet != null) {\n            return ruleSet;\n        }\n        return defaultRules;\n    }", "signature": "Set<RequestLimitRule> getRules(String key)", "full_signature": "@Override public Set<RequestLimitRule> getRules(String key)", "class_method_signature": "DefaultRequestLimitRulesSupplier.getRules(String key)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 60940117, "url": "https://github.com/mokies/ratelimitj", "stars": 284, "created": "6/12/2016 3:27:46 AM +00:00", "updates": "2020-01-21T19:53:03+00:00", "fork": "False", "license": "licensed"}}