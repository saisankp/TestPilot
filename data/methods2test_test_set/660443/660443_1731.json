{"test_class": {"identifier": "SimpleAtomCanonicalizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "descriptor/fingerprint/src/test/java/org/openscience/cdk/fingerprint/SimpleAtomCanonicalizerTest.java"}, "test_case": {"identifier": "testCanonicalizeAtoms", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanonicalizeAtoms() throws CDKException {\n\n        IAtomContainer container = TestMoleculeFactory.makeAdenine();\n        AtomContainerManipulator.percieveAtomTypesAndConfigureAtoms(container);\n\n        Collection<IAtom> atoms = new SimpleAtomCanonicalizer().canonicalizeAtoms(container);\n\n        List<IAtom> mutable = new ArrayList<IAtom>(atoms);\n        for (IAtom atom : mutable.subList(0, 5)) {\n            Assert.assertEquals(\"expect sp2 carbons in first 4 entries\", \"C\", atom.getSymbol());\n            Assert.assertEquals(\"expect sp2 carbons in first 4 entries\", IAtomType.Hybridization.SP2,\n                    atom.getHybridization());\n        }\n        for (IAtom atom : mutable.subList(5, 8)) {\n            Assert.assertEquals(\"expect sp2 nitrogen at indices 5-7\", \"N\", atom.getSymbol());\n            Assert.assertEquals(\"expect sp2 nitrogen at indices 5-7\", IAtomType.Hybridization.SP2,\n                    atom.getHybridization());\n        }\n\n        Assert.assertEquals(\"expect nitrogen at indices 8\", \"N\", mutable.get(8).getSymbol());\n        Assert.assertEquals(\"expect sp3 nitrogen at indices 8\", IAtomType.Hybridization.SP3, mutable.get(8)\n                .getHybridization());\n\n        Assert.assertEquals(\"expect nitrogen at indices 9\", \"N\", mutable.get(9).getSymbol());\n        Assert.assertEquals(\"expect sp3 nitrogen at indices 9\", IAtomType.Hybridization.PLANAR3, mutable.get(9)\n                .getHybridization());\n\n    }", "signature": "void testCanonicalizeAtoms()", "full_signature": "@Test public void testCanonicalizeAtoms()", "class_method_signature": "SimpleAtomCanonicalizerTest.testCanonicalizeAtoms()", "testcase": true, "constructor": false, "invocations": ["makeAdenine", "percieveAtomTypesAndConfigureAtoms", "canonicalizeAtoms", "subList", "assertEquals", "getSymbol", "assertEquals", "getHybridization", "subList", "assertEquals", "getSymbol", "assertEquals", "getHybridization", "assertEquals", "getSymbol", "get", "assertEquals", "getHybridization", "get", "assertEquals", "getSymbol", "get", "assertEquals", "getHybridization", "get"]}, "focal_class": {"identifier": "SimpleAtomCanonicalizer", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "canonicalizeAtoms", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "Collection<IAtom>", "signature": "Collection<IAtom> canonicalizeAtoms(IAtomContainer container)", "full_signature": "public Collection<IAtom> canonicalizeAtoms(IAtomContainer container)", "class_method_signature": "SimpleAtomCanonicalizer.canonicalizeAtoms(IAtomContainer container)", "testcase": false, "constructor": false}], "file": "descriptor/fingerprint/src/main/java/org/openscience/cdk/fingerprint/SimpleAtomCanonicalizer.java"}, "focal_method": {"identifier": "canonicalizeAtoms", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "Collection<IAtom>", "body": "public Collection<IAtom> canonicalizeAtoms(IAtomContainer container) {\n\n        List<IAtom> canonicalizedVertexList = new ArrayList<IAtom>();\n        for (IAtom atom : container.atoms()) {\n            canonicalizedVertexList.add(atom);\n        }\n        Collections.sort(canonicalizedVertexList, new SimpleAtomComparator());\n        return canonicalizedVertexList;\n    }", "signature": "Collection<IAtom> canonicalizeAtoms(IAtomContainer container)", "full_signature": "public Collection<IAtom> canonicalizeAtoms(IAtomContainer container)", "class_method_signature": "SimpleAtomCanonicalizer.canonicalizeAtoms(IAtomContainer container)", "testcase": false, "constructor": false, "invocations": ["atoms", "add", "sort"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}