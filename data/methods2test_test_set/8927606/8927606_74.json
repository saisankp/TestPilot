{"test_class": {"identifier": "ApiListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ApiListener listener;", "modifier": "private", "type": "ApiListener", "declarator": "listener", "var_name": "listener"}], "file": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiListenerTest.java"}, "test_case": {"identifier": "testUnknownProduces", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n\tpublic void testUnknownProduces() throws ConfigurationException {\n\t\tlistener.setProduces(\"unknown\");\n\t}", "signature": "void testUnknownProduces()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testUnknownProduces()", "class_method_signature": "ApiListenerTest.testUnknownProduces()", "testcase": true, "constructor": false, "invocations": ["setProduces"]}, "focal_class": {"identifier": "ApiListener", "superclass": "extends PushingListenerAdapter<String>", "interfaces": "implements HasPhysicalDestination, ReceiverAware<String>", "fields": [{"original_string": "private String uriPattern;", "modifier": "private", "type": "String", "declarator": "uriPattern", "var_name": "uriPattern"}, {"original_string": "private boolean updateEtag = true;", "modifier": "private", "type": "boolean", "declarator": "updateEtag = true", "var_name": "updateEtag"}, {"original_string": "private String method;", "modifier": "private", "type": "String", "declarator": "method", "var_name": "method"}, {"original_string": "private List<String> methods = Arrays.asList(\"GET\", \"PUT\", \"POST\", \"DELETE\");", "modifier": "private", "type": "List<String>", "declarator": "methods = Arrays.asList(\"GET\", \"PUT\", \"POST\", \"DELETE\")", "var_name": "methods"}, {"original_string": "private AuthenticationMethods authenticationMethod = AuthenticationMethods.NONE;", "modifier": "private", "type": "AuthenticationMethods", "declarator": "authenticationMethod = AuthenticationMethods.NONE", "var_name": "authenticationMethod"}, {"original_string": "private List<String> authenticationRoles = null;", "modifier": "private", "type": "List<String>", "declarator": "authenticationRoles = null", "var_name": "authenticationRoles"}, {"original_string": "private MediaTypes consumes = MediaTypes.ANY;", "modifier": "private", "type": "MediaTypes", "declarator": "consumes = MediaTypes.ANY", "var_name": "consumes"}, {"original_string": "private MediaTypes produces = MediaTypes.ANY;", "modifier": "private", "type": "MediaTypes", "declarator": "produces = MediaTypes.ANY", "var_name": "produces"}, {"original_string": "private ContentType producedContentType;", "modifier": "private", "type": "ContentType", "declarator": "producedContentType", "var_name": "producedContentType"}, {"original_string": "private String multipartBodyName = null;", "modifier": "private", "type": "String", "declarator": "multipartBodyName = null", "var_name": "multipartBodyName"}, {"original_string": "private IReceiver<String> receiver;", "modifier": "private", "type": "IReceiver<String>", "declarator": "receiver", "var_name": "receiver"}, {"original_string": "private ClassLoader configurationClassLoader = Thread.currentThread().getContextClassLoader();", "modifier": "private", "type": "ClassLoader", "declarator": "configurationClassLoader = Thread.currentThread().getContextClassLoader()", "var_name": "configurationClassLoader"}, {"original_string": "private String messageIdHeader = AppConstants.getInstance(configurationClassLoader).getString(\"apiListener.messageIdHeader\", \"Message-Id\");", "modifier": "private", "type": "String", "declarator": "messageIdHeader = AppConstants.getInstance(configurationClassLoader).getString(\"apiListener.messageIdHeader\", \"Message-Id\")", "var_name": "messageIdHeader"}, {"original_string": "private String charset = null;", "modifier": "private", "type": "String", "declarator": "charset = null", "var_name": "charset"}], "methods": [{"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "ApiListener.configure()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "ApiListener.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ApiListener.close()", "testcase": false, "constructor": false}, {"identifier": "processRequest", "parameters": "(String correlationId, String message, IPipeLineSession requestContext)", "modifiers": "public", "return": "String", "signature": "String processRequest(String correlationId, String message, IPipeLineSession requestContext)", "full_signature": "public String processRequest(String correlationId, String message, IPipeLineSession requestContext)", "class_method_signature": "ApiListener.processRequest(String correlationId, String message, IPipeLineSession requestContext)", "testcase": false, "constructor": false}, {"identifier": "getPhysicalDestinationName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPhysicalDestinationName()", "full_signature": "@Override public String getPhysicalDestinationName()", "class_method_signature": "ApiListener.getPhysicalDestinationName()", "testcase": false, "constructor": false}, {"identifier": "getCleanPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCleanPattern()", "full_signature": "public String getCleanPattern()", "class_method_signature": "ApiListener.getCleanPattern()", "testcase": false, "constructor": false}, {"identifier": "isConsumable", "parameters": "(String contentType)", "modifiers": "public", "return": "boolean", "signature": "boolean isConsumable(String contentType)", "full_signature": "public boolean isConsumable(String contentType)", "class_method_signature": "ApiListener.isConsumable(String contentType)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(String acceptHeader)", "modifiers": "public", "return": "boolean", "signature": "boolean accepts(String acceptHeader)", "full_signature": "public boolean accepts(String acceptHeader)", "class_method_signature": "ApiListener.accepts(String acceptHeader)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentType()", "full_signature": "public String getContentType()", "class_method_signature": "ApiListener.getContentType()", "testcase": false, "constructor": false}, {"identifier": "setMethod", "parameters": "(String method)", "modifiers": "@IbisDoc({\"1\", \"HTTP method eq. GET POST PUT DELETE\", \"\"}) public", "return": "void", "signature": "void setMethod(String method)", "full_signature": "@IbisDoc({\"1\", \"HTTP method eq. GET POST PUT DELETE\", \"\"}) public void setMethod(String method)", "class_method_signature": "ApiListener.setMethod(String method)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethod()", "full_signature": "public String getMethod()", "class_method_signature": "ApiListener.getMethod()", "testcase": false, "constructor": false}, {"identifier": "setUriPattern", "parameters": "(String uriPattern)", "modifiers": "@IbisDoc({\"2\", \"uri pattern to register this listener on, eq. `/my-listener/{something}/here`\", \"\"}) public", "return": "void", "signature": "void setUriPattern(String uriPattern)", "full_signature": "@IbisDoc({\"2\", \"uri pattern to register this listener on, eq. `/my-listener/{something}/here`\", \"\"}) public void setUriPattern(String uriPattern)", "class_method_signature": "ApiListener.setUriPattern(String uriPattern)", "testcase": false, "constructor": false}, {"identifier": "getUriPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUriPattern()", "full_signature": "public String getUriPattern()", "class_method_signature": "ApiListener.getUriPattern()", "testcase": false, "constructor": false}, {"identifier": "setConsumes", "parameters": "(String value)", "modifiers": "@IbisDoc({\"3\", \"the specified contentType on requests, if it doesn't match the request will fail\", \"ANY\"}) public", "return": "void", "signature": "void setConsumes(String value)", "full_signature": "@IbisDoc({\"3\", \"the specified contentType on requests, if it doesn't match the request will fail\", \"ANY\"}) public void setConsumes(String value)", "class_method_signature": "ApiListener.setConsumes(String value)", "testcase": false, "constructor": false}, {"identifier": "getConsumes", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConsumes()", "full_signature": "public String getConsumes()", "class_method_signature": "ApiListener.getConsumes()", "testcase": false, "constructor": false}, {"identifier": "setProduces", "parameters": "(String value)", "modifiers": "@IbisDoc({\"4\", \"the specified contentType on response\", \"ANY\"}) public", "return": "void", "signature": "void setProduces(String value)", "full_signature": "@IbisDoc({\"4\", \"the specified contentType on response\", \"ANY\"}) public void setProduces(String value)", "class_method_signature": "ApiListener.setProduces(String value)", "testcase": false, "constructor": false}, {"identifier": "getProduces", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProduces()", "full_signature": "public String getProduces()", "class_method_signature": "ApiListener.getProduces()", "testcase": false, "constructor": false}, {"identifier": "setCharacterEncoding", "parameters": "(String charset)", "modifiers": "@IbisDoc({\"5\", \"sets the specified character encoding on the response contentType header\", \"UTF-8\"}) public", "return": "void", "signature": "void setCharacterEncoding(String charset)", "full_signature": "@IbisDoc({\"5\", \"sets the specified character encoding on the response contentType header\", \"UTF-8\"}) public void setCharacterEncoding(String charset)", "class_method_signature": "ApiListener.setCharacterEncoding(String charset)", "testcase": false, "constructor": false}, {"identifier": "getCharacterEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCharacterEncoding()", "full_signature": "public String getCharacterEncoding()", "class_method_signature": "ApiListener.getCharacterEncoding()", "testcase": false, "constructor": false}, {"identifier": "setUpdateEtag", "parameters": "(boolean updateEtag)", "modifiers": "@IbisDoc({\"6\", \"automatically generate and validate etags\", \"true\"}) public", "return": "void", "signature": "void setUpdateEtag(boolean updateEtag)", "full_signature": "@IbisDoc({\"6\", \"automatically generate and validate etags\", \"true\"}) public void setUpdateEtag(boolean updateEtag)", "class_method_signature": "ApiListener.setUpdateEtag(boolean updateEtag)", "testcase": false, "constructor": false}, {"identifier": "getUpdateEtag", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getUpdateEtag()", "full_signature": "public boolean getUpdateEtag()", "class_method_signature": "ApiListener.getUpdateEtag()", "testcase": false, "constructor": false}, {"identifier": "setAuthenticationMethod", "parameters": "(String authenticationMethod)", "modifiers": "@IbisDoc({\"7\", \"enables security for this listener, must be one of [NONE, COOKIE, HEADER, AUTHROLE]. If you wish to use the application servers authorisation roles [AUTHROLE], you need to enable them globally for all ApiListeners with the `servlet.ApiListenerServlet.securityroles=ibistester,ibiswebservice` property\", \"NONE\"}) public", "return": "void", "signature": "void setAuthenticationMethod(String authenticationMethod)", "full_signature": "@IbisDoc({\"7\", \"enables security for this listener, must be one of [NONE, COOKIE, HEADER, AUTHROLE]. If you wish to use the application servers authorisation roles [AUTHROLE], you need to enable them globally for all ApiListeners with the `servlet.ApiListenerServlet.securityroles=ibistester,ibiswebservice` property\", \"NONE\"}) public void setAuthenticationMethod(String authenticationMethod)", "class_method_signature": "ApiListener.setAuthenticationMethod(String authenticationMethod)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationMethod", "parameters": "()", "modifiers": "public", "return": "AuthenticationMethods", "signature": "AuthenticationMethods getAuthenticationMethod()", "full_signature": "public AuthenticationMethods getAuthenticationMethod()", "class_method_signature": "ApiListener.getAuthenticationMethod()", "testcase": false, "constructor": false}, {"identifier": "setAuthenticationRoles", "parameters": "(String authRoles)", "modifiers": "@IbisDoc({\"8\", \"only active when AuthenticationMethod=AUTHROLE. comma separated list of authorization roles which are granted for this service, eq. ibistester,ibisobserver\", \"\"}) public", "return": "void", "signature": "void setAuthenticationRoles(String authRoles)", "full_signature": "@IbisDoc({\"8\", \"only active when AuthenticationMethod=AUTHROLE. comma separated list of authorization roles which are granted for this service, eq. ibistester,ibisobserver\", \"\"}) public void setAuthenticationRoles(String authRoles)", "class_method_signature": "ApiListener.setAuthenticationRoles(String authRoles)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationRoles", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAuthenticationRoles()", "full_signature": "public List<String> getAuthenticationRoles()", "class_method_signature": "ApiListener.getAuthenticationRoles()", "testcase": false, "constructor": false}, {"identifier": "setMultipartBodyName", "parameters": "(String multipartBodyName)", "modifiers": "@IbisDoc({\"9\", \"specify the form-part you wish to enter the pipeline\", \"name of the first form-part\"}) public", "return": "void", "signature": "void setMultipartBodyName(String multipartBodyName)", "full_signature": "@IbisDoc({\"9\", \"specify the form-part you wish to enter the pipeline\", \"name of the first form-part\"}) public void setMultipartBodyName(String multipartBodyName)", "class_method_signature": "ApiListener.setMultipartBodyName(String multipartBodyName)", "testcase": false, "constructor": false}, {"identifier": "getMultipartBodyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMultipartBodyName()", "full_signature": "public String getMultipartBodyName()", "class_method_signature": "ApiListener.getMultipartBodyName()", "testcase": false, "constructor": false}, {"identifier": "setMessageIdHeader", "parameters": "(String messageIdHeader)", "modifiers": "@IbisDoc({\"10\", \"name of the header which contains the message-id\", \"message-id\"}) public", "return": "void", "signature": "void setMessageIdHeader(String messageIdHeader)", "full_signature": "@IbisDoc({\"10\", \"name of the header which contains the message-id\", \"message-id\"}) public void setMessageIdHeader(String messageIdHeader)", "class_method_signature": "ApiListener.setMessageIdHeader(String messageIdHeader)", "testcase": false, "constructor": false}, {"identifier": "getMessageIdHeader", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMessageIdHeader()", "full_signature": "public String getMessageIdHeader()", "class_method_signature": "ApiListener.getMessageIdHeader()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ApiListener.toString()", "testcase": false, "constructor": false}, {"identifier": "setReceiver", "parameters": "(IReceiver<String> receiver)", "modifiers": "@Override public", "return": "void", "signature": "void setReceiver(IReceiver<String> receiver)", "full_signature": "@Override public void setReceiver(IReceiver<String> receiver)", "class_method_signature": "ApiListener.setReceiver(IReceiver<String> receiver)", "testcase": false, "constructor": false}, {"identifier": "getReceiver", "parameters": "()", "modifiers": "@Override public", "return": "IReceiver<String>", "signature": "IReceiver<String> getReceiver()", "full_signature": "@Override public IReceiver<String> getReceiver()", "class_method_signature": "ApiListener.getReceiver()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiListener.java"}, "focal_method": {"identifier": "setProduces", "parameters": "(String value)", "modifiers": "@IbisDoc({\"4\", \"the specified contentType on response\", \"ANY\"}) public", "return": "void", "body": "@IbisDoc({\"4\", \"the specified contentType on response\", \"ANY\"})\n\tpublic void setProduces(String value) {\n\t\tString produces = null;\n\t\tif(StringUtils.isEmpty(value))\n\t\t\tproduces = \"ANY\";\n\t\telse\n\t\t\tproduces = value.toUpperCase();\n\n\t\tthis.produces = MediaTypes.valueOf(produces);\n\t}", "signature": "void setProduces(String value)", "full_signature": "@IbisDoc({\"4\", \"the specified contentType on response\", \"ANY\"}) public void setProduces(String value)", "class_method_signature": "ApiListener.setProduces(String value)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "toUpperCase", "valueOf"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}