{"test_class": {"identifier": "AnalyticQueryEngineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Table referenceImplementation;", "modifier": "private static", "type": "Table", "declarator": "referenceImplementation", "var_name": "referenceImplementation"}], "file": "core/src/test/java/tech/tablesaw/analytic/AnalyticQueryEngineTest.java"}, "test_case": {"identifier": "testInvalidSourceColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInvalidSourceColumn() {\n    String destinationColumnName = \"dest\";\n    Table table = Table.create(\"table\", StringColumn.create(\"col1\", new String[] {\"bad\"}));\n\n    AnalyticQuery query =\n        AnalyticQuery.quickQuery()\n            .from(table)\n            .rowsBetween()\n            .preceding(1)\n            .andCurrentRow()\n            .sum(\"col1\")\n            .as(destinationColumnName)\n            .build();\n\n    AnalyticQueryEngine queryEngine = AnalyticQueryEngine.create(query);\n    Throwable thrown = assertThrows(IllegalArgumentException.class, queryEngine::execute);\n    assertTrue(\n        thrown.getMessage().contains(\"Function: SUM Is not compatible with column type: STRING\"));\n  }", "signature": "void testInvalidSourceColumn()", "full_signature": "@Test public void testInvalidSourceColumn()", "class_method_signature": "AnalyticQueryEngineTest.testInvalidSourceColumn()", "testcase": true, "constructor": false, "invocations": ["create", "create", "build", "as", "sum", "andCurrentRow", "preceding", "rowsBetween", "from", "quickQuery", "create", "assertThrows", "assertTrue", "contains", "getMessage"]}, "focal_class": {"identifier": "AnalyticQueryEngine", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AnalyticQuery query;", "modifier": "private final", "type": "AnalyticQuery", "declarator": "query", "var_name": "query"}, {"original_string": "private final Table destination;", "modifier": "private final", "type": "Table", "declarator": "destination", "var_name": "destination"}, {"original_string": "private final IntComparatorChain rowComparator;", "modifier": "private final", "type": "IntComparatorChain", "declarator": "rowComparator", "var_name": "rowComparator"}], "methods": [{"identifier": "AnalyticQueryEngine", "parameters": "(AnalyticQuery query)", "modifiers": "private", "return": "", "signature": " AnalyticQueryEngine(AnalyticQuery query)", "full_signature": "private  AnalyticQueryEngine(AnalyticQuery query)", "class_method_signature": "AnalyticQueryEngine.AnalyticQueryEngine(AnalyticQuery query)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(AnalyticQuery query)", "modifiers": "public static", "return": "AnalyticQueryEngine", "signature": "AnalyticQueryEngine create(AnalyticQuery query)", "full_signature": "public static AnalyticQueryEngine create(AnalyticQuery query)", "class_method_signature": "AnalyticQueryEngine.create(AnalyticQuery query)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "public", "return": "Table", "signature": "Table execute()", "full_signature": "public Table execute()", "class_method_signature": "AnalyticQueryEngine.execute()", "testcase": false, "constructor": false}, {"identifier": "processSlice", "parameters": "(TableSlice slice)", "modifiers": "private", "return": "void", "signature": "void processSlice(TableSlice slice)", "full_signature": "private void processSlice(TableSlice slice)", "class_method_signature": "AnalyticQueryEngine.processSlice(TableSlice slice)", "testcase": false, "constructor": false}, {"identifier": "processAggregateFunctions", "parameters": "(TableSlice slice)", "modifiers": "private", "return": "void", "signature": "void processAggregateFunctions(TableSlice slice)", "full_signature": "private void processAggregateFunctions(TableSlice slice)", "class_method_signature": "AnalyticQueryEngine.processAggregateFunctions(TableSlice slice)", "testcase": false, "constructor": false}, {"identifier": "processNumberingFunctions", "parameters": "(TableSlice slice)", "modifiers": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) private", "return": "void", "signature": "void processNumberingFunctions(TableSlice slice)", "full_signature": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) private void processNumberingFunctions(TableSlice slice)", "class_method_signature": "AnalyticQueryEngine.processNumberingFunctions(TableSlice slice)", "testcase": false, "constructor": false}, {"identifier": "validateColumn", "parameters": "(FunctionMetaData function, Column<?> sourceColumn)", "modifiers": "private", "return": "void", "signature": "void validateColumn(FunctionMetaData function, Column<?> sourceColumn)", "full_signature": "private void validateColumn(FunctionMetaData function, Column<?> sourceColumn)", "class_method_signature": "AnalyticQueryEngine.validateColumn(FunctionMetaData function, Column<?> sourceColumn)", "testcase": false, "constructor": false}, {"identifier": "addColumns", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void addColumns()", "full_signature": "private void addColumns()", "class_method_signature": "AnalyticQueryEngine.addColumns()", "testcase": false, "constructor": false}, {"identifier": "partition", "parameters": "()", "modifiers": "private", "return": "Iterable<TableSlice>", "signature": "Iterable<TableSlice> partition()", "full_signature": "private Iterable<TableSlice> partition()", "class_method_signature": "AnalyticQueryEngine.partition()", "testcase": false, "constructor": false}, {"identifier": "orderBy", "parameters": "(TableSlice tableSlice)", "modifiers": "private", "return": "void", "signature": "void orderBy(TableSlice tableSlice)", "full_signature": "private void orderBy(TableSlice tableSlice)", "class_method_signature": "AnalyticQueryEngine.orderBy(TableSlice tableSlice)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/analytic/AnalyticQueryEngine.java"}, "focal_method": {"identifier": "create", "parameters": "(AnalyticQuery query)", "modifiers": "public static", "return": "AnalyticQueryEngine", "body": "public static AnalyticQueryEngine create(AnalyticQuery query) {\n    return new AnalyticQueryEngine(query);\n  }", "signature": "AnalyticQueryEngine create(AnalyticQuery query)", "full_signature": "public static AnalyticQueryEngine create(AnalyticQuery query)", "class_method_signature": "AnalyticQueryEngine.create(AnalyticQuery query)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}