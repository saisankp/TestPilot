{"test_class": {"identifier": "JavaImageIOMigrateTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "String wsdlLoc = \"/pserv-pa-java-se/JavaImageIOMigrate?wsdl\";", "modifier": "", "type": "String", "declarator": "wsdlLoc = \"/pserv-pa-java-se/JavaImageIOMigrate?wsdl\"", "var_name": "wsdlLoc"}, {"original_string": "Migrate dom = null;", "modifier": "", "type": "Migrate", "declarator": "dom = null", "var_name": "dom"}], "file": "services/java-se/src/test/java/eu/planets_project/services/java_se/image/JavaImageIOMigrateTest.java"}, "test_case": {"identifier": "testDescribe", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDescribe() {\n        ServiceDescription desc = dom.describe();\n        assertTrue(\"The ServiceDescription should not be NULL.\", desc != null);\n        System.out.println(\"Recieved service description: \"\n                + desc.toXmlFormatted());\n    }", "signature": "void testDescribe()", "full_signature": "@Test public void testDescribe()", "class_method_signature": "JavaImageIOMigrateTest.testDescribe()", "testcase": true, "constructor": false, "invocations": ["describe", "assertTrue", "println", "toXmlFormatted"]}, "focal_class": {"identifier": "JavaImageIOMigrate", "superclass": "", "interfaces": "implements Migrate", "fields": [{"original_string": "public static final String NAME = \"JavaImageIOMigrate\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"JavaImageIOMigrate\"", "var_name": "NAME"}, {"original_string": "private static final FormatRegistry format = FormatRegistryFactory.getFormatRegistry();", "modifier": "private static final", "type": "FormatRegistry", "declarator": "format = FormatRegistryFactory.getFormatRegistry()", "var_name": "format"}, {"original_string": "private static Logger log = Logger.getLogger(JavaImageIOMigrate.class.getName());", "modifier": "private static", "type": "Logger", "declarator": "log = Logger.getLogger(JavaImageIOMigrate.class.getName())", "var_name": "log"}], "methods": [{"identifier": "describe", "parameters": "()", "modifiers": "public", "return": "ServiceDescription", "signature": "ServiceDescription describe()", "full_signature": "public ServiceDescription describe()", "class_method_signature": "JavaImageIOMigrate.describe()", "testcase": false, "constructor": false}, {"identifier": "migrate", "parameters": "(DigitalObject dob, URI inputFormat,\n            URI outputFormat, List<Parameter> parameters)", "modifiers": "public", "return": "MigrateResult", "signature": "MigrateResult migrate(DigitalObject dob, URI inputFormat,\n            URI outputFormat, List<Parameter> parameters)", "full_signature": "public MigrateResult migrate(DigitalObject dob, URI inputFormat,\n            URI outputFormat, List<Parameter> parameters)", "class_method_signature": "JavaImageIOMigrate.migrate(DigitalObject dob, URI inputFormat,\n            URI outputFormat, List<Parameter> parameters)", "testcase": false, "constructor": false}, {"identifier": "returnWithErrorMessage", "parameters": "(String message, Exception e )", "modifiers": "private", "return": "MigrateResult", "signature": "MigrateResult returnWithErrorMessage(String message, Exception e )", "full_signature": "private MigrateResult returnWithErrorMessage(String message, Exception e )", "class_method_signature": "JavaImageIOMigrate.returnWithErrorMessage(String message, Exception e )", "testcase": false, "constructor": false}], "file": "services/java-se/src/main/java/eu/planets_project/services/java_se/image/JavaImageIOMigrate.java"}, "focal_method": {"identifier": "describe", "parameters": "()", "modifiers": "public", "return": "ServiceDescription", "body": "public ServiceDescription describe() {    \t\n        ServiceDescription.Builder sd = new ServiceDescription.Builder( NAME, Migrate.class.getCanonicalName());\n        sd.author(\"Andrew Jackson <Andrew.Jackson@bl.uk>\");\n        sd.description(\"A wrapper for the migrations supported by the Java SE built-in ImageIO library.\");\n        sd.classname(this.getClass().getCanonicalName());\n        sd.version(\"1.0.1\");\n        sd.tool(JavaImageIOIdentify.tool);\n        \n        // Migration Paths: List all combinations:\n        List<MigrationPath> paths = new ArrayList<MigrationPath>();\n        for ( String i : JavaImageIOIdentify.unique( ImageIO.getReaderFormatNames() ) ) {\n                for (String j : JavaImageIOIdentify.unique( ImageIO.getWriterFormatNames() )) {\n                    if (!i.equalsIgnoreCase(j) ) {\n                    \n                        MigrationPath p = new MigrationPath(\n                                format.createExtensionUri(i), \n                                format.createExtensionUri(j), \n                                null );\n                        paths.add(p);\n                    }\n                    \n                }\n        }\n        sd.paths(paths.toArray(new MigrationPath[]{}));\n        \n        return sd.build();\n    }", "signature": "ServiceDescription describe()", "full_signature": "public ServiceDescription describe()", "class_method_signature": "JavaImageIOMigrate.describe()", "testcase": false, "constructor": false, "invocations": ["getCanonicalName", "author", "description", "classname", "getCanonicalName", "getClass", "version", "tool", "unique", "getReaderFormatNames", "unique", "getWriterFormatNames", "equalsIgnoreCase", "createExtensionUri", "createExtensionUri", "add", "paths", "toArray", "build"]}, "repository": {"repo_id": 1025030, "url": "https://github.com/opf-labs/planets-suite", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 198462, "license": "licensed"}}