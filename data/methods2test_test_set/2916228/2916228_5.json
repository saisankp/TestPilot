{"test_class": {"identifier": "EnumConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "propoid-ui/src/test/java/propoid/ui/convert/EnumConverterTest.java"}, "test_case": {"identifier": "testFromProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFromProperty() throws Exception {\n\t\tEnumConverter<Encoding> converter = new EnumConverter<Encoding>(\n\t\t\t\tnew Foo().enumP);\n\n\t\tassertEquals(\"UTF_8\", converter.toString(Encoding.UTF_8));\n\t}", "signature": "void testFromProperty()", "full_signature": "@Test public void testFromProperty()", "class_method_signature": "EnumConverterTest.testFromProperty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString"]}, "focal_class": {"identifier": "EnumConverter", "superclass": "", "interfaces": "implements Converter<E>", "fields": [{"original_string": "private int resId;", "modifier": "private", "type": "int", "declarator": "resId", "var_name": "resId"}, {"original_string": "private Property<E> property;", "modifier": "private", "type": "Property<E>", "declarator": "property", "var_name": "property"}], "methods": [{"identifier": "EnumConverter", "parameters": "(Property<E> property)", "modifiers": "public", "return": "", "signature": " EnumConverter(Property<E> property)", "full_signature": "public  EnumConverter(Property<E> property)", "class_method_signature": "EnumConverter.EnumConverter(Property<E> property)", "testcase": false, "constructor": true}, {"identifier": "EnumConverter", "parameters": "(Property<E> property, int resId)", "modifiers": "public", "return": "", "signature": " EnumConverter(Property<E> property, int resId)", "full_signature": "public  EnumConverter(Property<E> property, int resId)", "class_method_signature": "EnumConverter.EnumConverter(Property<E> property, int resId)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "(E value)", "modifiers": "public", "return": "String", "signature": "String toString(E value)", "full_signature": "public String toString(E value)", "class_method_signature": "EnumConverter.toString(E value)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String string)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "E", "signature": "E fromString(String string)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public E fromString(String string)", "class_method_signature": "EnumConverter.fromString(String string)", "testcase": false, "constructor": false}], "file": "propoid-ui/src/main/java/propoid/ui/convert/EnumConverter.java"}, "focal_method": {"identifier": "toString", "parameters": "(E value)", "modifiers": "public", "return": "String", "body": "public String toString(E value) {\n\t\treturn value.toString();\n\t}", "signature": "String toString(E value)", "full_signature": "public String toString(E value)", "class_method_signature": "EnumConverter.toString(E value)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}