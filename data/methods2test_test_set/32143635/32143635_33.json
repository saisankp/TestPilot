{"test_class": {"identifier": "OperationBatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestBatcher batcher;", "modifier": "private", "type": "TestBatcher", "declarator": "batcher", "var_name": "batcher"}, {"original_string": "private int operationCount;", "modifier": "private", "type": "int", "declarator": "operationCount", "var_name": "operationCount"}, {"original_string": "private int resetCount;", "modifier": "private", "type": "int", "declarator": "resetCount", "var_name": "resetCount"}], "file": "rococoa/rococoa-core/src/test/java/org/rococoa/internal/OperationBatcherTest.java"}, "test_case": {"identifier": "batchSizeThree", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void batchSizeThree() {\n        batcher = new TestBatcher(3);\n        assertEquals(0, operationCount);\n        assertEquals(1, resetCount);\n        \n        batcher.operate();\n        assertEquals(0, operationCount);\n        assertEquals(1, resetCount);\n        batcher.operate();\n        assertEquals(0, operationCount);\n        assertEquals(1, resetCount);\n        batcher.operate();\n        assertEquals(1, operationCount);\n        assertEquals(2, resetCount);\n        \n        batcher.operate();\n        assertEquals(1, operationCount);\n        assertEquals(2, resetCount);\n    }", "signature": "void batchSizeThree()", "full_signature": "@Test public void batchSizeThree()", "class_method_signature": "OperationBatcherTest.batchSizeThree()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "operate", "assertEquals", "assertEquals", "operate", "assertEquals", "assertEquals", "operate", "assertEquals", "assertEquals", "operate", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "OperationBatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int batchSize;", "modifier": "private final", "type": "int", "declarator": "batchSize", "var_name": "batchSize"}, {"original_string": "private int count;", "modifier": "private", "type": "int", "declarator": "count", "var_name": "count"}, {"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}], "methods": [{"identifier": "OperationBatcher", "parameters": "(int batchSize)", "modifiers": "public", "return": "", "signature": " OperationBatcher(int batchSize)", "full_signature": "public  OperationBatcher(int batchSize)", "class_method_signature": "OperationBatcher.OperationBatcher(int batchSize)", "testcase": false, "constructor": true}, {"identifier": "operate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void operate()", "full_signature": "public void operate()", "class_method_signature": "OperationBatcher.operate()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "OperationBatcher.close()", "testcase": false, "constructor": false}, {"identifier": "operation", "parameters": "()", "modifiers": "protected abstract", "return": "void", "signature": "void operation()", "full_signature": "protected abstract void operation()", "class_method_signature": "OperationBatcher.operation()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "protected abstract", "return": "void", "signature": "void reset()", "full_signature": "protected abstract void reset()", "class_method_signature": "OperationBatcher.reset()", "testcase": false, "constructor": false}], "file": "rococoa/rococoa-core/src/main/java/org/rococoa/internal/OperationBatcher.java"}, "focal_method": {"identifier": "operate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void operate() {\n        if (closed) {\n            throw new IllegalStateException(\"Batcher closed\");\n        }\n        if (++count < batchSize) {\n            return;\n        }\n        operation();\n        reset();\n        count = 0;\n    }", "signature": "void operate()", "full_signature": "public void operate()", "class_method_signature": "OperationBatcher.operate()", "testcase": false, "constructor": false, "invocations": ["operation", "reset"]}, "repository": {"repo_id": 32143635, "url": "https://github.com/iterate-ch/rococoa", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 17, "size": 2377, "license": "licensed"}}