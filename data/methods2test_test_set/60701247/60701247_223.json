{"test_class": {"identifier": "MultiUserUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/run/util/MultiUserUtilsTest.java"}, "test_case": {"identifier": "getCurrentUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getCurrentUser() throws Exception {\n    IDevice device = createCurrentUserMockDevice(\"10\");\n    assertFalse(MultiUserUtils.isCurrentUserThePrimaryUser(device, 200, TimeUnit.MILLISECONDS, true));\n\n    device = createCurrentUserMockDevice(\"0\");\n    assertTrue(MultiUserUtils.isCurrentUserThePrimaryUser(device, 200, TimeUnit.MILLISECONDS, false));\n  }", "signature": "void getCurrentUser()", "full_signature": "@Test public void getCurrentUser()", "class_method_signature": "MultiUserUtilsTest.getCurrentUser()", "testcase": true, "constructor": false, "invocations": ["createCurrentUserMockDevice", "assertFalse", "isCurrentUserThePrimaryUser", "createCurrentUserMockDevice", "assertTrue", "isCurrentUserThePrimaryUser"]}, "focal_class": {"identifier": "MultiUserUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int PRIMARY_USERID = 0;", "modifier": "public static final", "type": "int", "declarator": "PRIMARY_USERID = 0", "var_name": "PRIMARY_USERID"}], "methods": [{"identifier": "isCurrentUserThePrimaryUser", "parameters": "(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "full_signature": "public static boolean isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "class_method_signature": "MultiUserUtils.isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "hasMultipleUsers", "parameters": "(@Nullable IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasMultipleUsers(@Nullable IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "full_signature": "public static boolean hasMultipleUsers(@Nullable IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "class_method_signature": "MultiUserUtils.hasMultipleUsers(@Nullable IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getUserIdFromAmParameters", "parameters": "(@NotNull String amFlags)", "modifiers": "public static", "return": "int", "signature": "int getUserIdFromAmParameters(@NotNull String amFlags)", "full_signature": "public static int getUserIdFromAmParameters(@NotNull String amFlags)", "class_method_signature": "MultiUserUtils.getUserIdFromAmParameters(@NotNull String amFlags)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/util/MultiUserUtils.java"}, "focal_method": {"identifier": "isCurrentUserThePrimaryUser", "parameters": "(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue) {\n    if (device.getVersion().getApiLevel() < AndroidVersion.SUPPORTS_MULTI_USER.getApiLevel()) {\n      return false;\n    }\n\n    CountDownLatch latch = new CountDownLatch(1);\n    CollectingOutputReceiver receiver = new CollectingOutputReceiver(latch);\n    try {\n      device.executeShellCommand(\"am get-current-user\", receiver);\n    }\n    catch (Exception e) {\n      return defaultValue;\n    }\n\n    try {\n      latch.await(timeout, units);\n    }\n    catch (InterruptedException e) {\n      Logger.getInstance(MultiUserUtils.class).warn(\"Timed out waiting for output from `am get-current-user`, returning \" + defaultValue);\n      return defaultValue;\n    }\n\n    String output = receiver.getOutput();\n    try {\n      return Integer.parseInt(output.trim()) == PRIMARY_USERID;\n    }\n    catch (NumberFormatException e) {\n      if (output.length() > 40) {\n        output = output.substring(0, 40) + \"...\";\n      }\n      Logger.getInstance(MultiUserUtils.class).warn(\"Error parsing output of `am get-current-user`: \" + output);\n      return defaultValue;\n    }\n  }", "signature": "boolean isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "full_signature": "public static boolean isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "class_method_signature": "MultiUserUtils.isCurrentUserThePrimaryUser(@NotNull IDevice device, long timeout, TimeUnit units, boolean defaultValue)", "testcase": false, "constructor": false, "invocations": ["getApiLevel", "getVersion", "getApiLevel", "executeShellCommand", "await", "warn", "getInstance", "getOutput", "parseInt", "trim", "length", "substring", "warn", "getInstance"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}