{"test_class": {"identifier": "DefaultMessageFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DefaultMessageFactory factory;", "modifier": "private final", "type": "DefaultMessageFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private final Class<? extends Message> fixtCreateExpectedClass;", "modifier": "private final", "type": "Class<? extends Message>", "declarator": "fixtCreateExpectedClass", "var_name": "fixtCreateExpectedClass"}], "file": "quickfixj-core/src/test/java/quickfix/DefaultMessageFactoryTest.java"}, "test_case": {"identifier": "testFixtCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFixtCreate() throws Exception {\n        assertMessage(quickfix.fixt11.Logon.class, MsgType.LOGON, factory.create(BEGINSTRING_FIXT11, MsgType.LOGON));\n        assertMessage(fixtCreateExpectedClass, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, MsgType.EMAIL));\n        assertMessage(quickfix.fix40.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(FIX40), MsgType.EMAIL));\n        assertMessage(quickfix.fix41.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(FIX41), MsgType.EMAIL));\n        assertMessage(quickfix.fix42.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(FIX42), MsgType.EMAIL));\n        assertMessage(quickfix.fix43.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(FIX43), MsgType.EMAIL));\n        assertMessage(quickfix.fix44.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(FIX44), MsgType.EMAIL));\n        assertMessage(quickfix.fix50.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(ApplVerID.FIX50), MsgType.EMAIL));\n        assertMessage(quickfix.fix50sp1.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(ApplVerID.FIX50SP1), MsgType.EMAIL));\n        assertMessage(quickfix.fix50sp2.Email.class, MsgType.EMAIL, factory.create(BEGINSTRING_FIXT11, new ApplVerID(ApplVerID.FIX50SP2), MsgType.EMAIL));\n    }", "signature": "void testFixtCreate()", "full_signature": "@Test public void testFixtCreate()", "class_method_signature": "DefaultMessageFactoryTest.testFixtCreate()", "testcase": true, "constructor": false, "invocations": ["assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create", "assertMessage", "create"]}, "focal_class": {"identifier": "DefaultMessageFactory", "superclass": "", "interfaces": "implements MessageFactory", "fields": [{"original_string": "private final Map<String, MessageFactory> messageFactories = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, MessageFactory>", "declarator": "messageFactories = new ConcurrentHashMap<>()", "var_name": "messageFactories"}, {"original_string": "private final ApplVerID defaultApplVerID;", "modifier": "private final", "type": "ApplVerID", "declarator": "defaultApplVerID", "var_name": "defaultApplVerID"}], "methods": [{"identifier": "DefaultMessageFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultMessageFactory()", "full_signature": "public  DefaultMessageFactory()", "class_method_signature": "DefaultMessageFactory.DefaultMessageFactory()", "testcase": false, "constructor": true}, {"identifier": "DefaultMessageFactory", "parameters": "(String defaultApplVerID)", "modifiers": "public", "return": "", "signature": " DefaultMessageFactory(String defaultApplVerID)", "full_signature": "public  DefaultMessageFactory(String defaultApplVerID)", "class_method_signature": "DefaultMessageFactory.DefaultMessageFactory(String defaultApplVerID)", "testcase": false, "constructor": true}, {"identifier": "addFactory", "parameters": "(String beginString)", "modifiers": "private", "return": "void", "signature": "void addFactory(String beginString)", "full_signature": "private void addFactory(String beginString)", "class_method_signature": "DefaultMessageFactory.addFactory(String beginString)", "testcase": false, "constructor": false}, {"identifier": "addFactory", "parameters": "(String beginString, String factoryClassName)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void addFactory(String beginString, String factoryClassName)", "full_signature": "@SuppressWarnings(\"unchecked\") public void addFactory(String beginString, String factoryClassName)", "class_method_signature": "DefaultMessageFactory.addFactory(String beginString, String factoryClassName)", "testcase": false, "constructor": false}, {"identifier": "addFactory", "parameters": "(String beginString, Class<? extends MessageFactory> factoryClass)", "modifiers": "public", "return": "void", "signature": "void addFactory(String beginString, Class<? extends MessageFactory> factoryClass)", "full_signature": "public void addFactory(String beginString, Class<? extends MessageFactory> factoryClass)", "class_method_signature": "DefaultMessageFactory.addFactory(String beginString, Class<? extends MessageFactory> factoryClass)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String beginString, String msgType)", "modifiers": "@Override public", "return": "Message", "signature": "Message create(String beginString, String msgType)", "full_signature": "@Override public Message create(String beginString, String msgType)", "class_method_signature": "DefaultMessageFactory.create(String beginString, String msgType)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String beginString, ApplVerID applVerID, String msgType)", "modifiers": "@Override public", "return": "Message", "signature": "Message create(String beginString, ApplVerID applVerID, String msgType)", "full_signature": "@Override public Message create(String beginString, ApplVerID applVerID, String msgType)", "class_method_signature": "DefaultMessageFactory.create(String beginString, ApplVerID applVerID, String msgType)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String beginString, String msgType, int correspondingFieldID)", "modifiers": "public", "return": "Group", "signature": "Group create(String beginString, String msgType, int correspondingFieldID)", "full_signature": "public Group create(String beginString, String msgType, int correspondingFieldID)", "class_method_signature": "DefaultMessageFactory.create(String beginString, String msgType, int correspondingFieldID)", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/DefaultMessageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(String beginString, String msgType)", "modifiers": "@Override public", "return": "Message", "body": "@Override\n    public Message create(String beginString, String msgType) {\n        return create(beginString, defaultApplVerID, msgType);\n    }", "signature": "Message create(String beginString, String msgType)", "full_signature": "@Override public Message create(String beginString, String msgType)", "class_method_signature": "DefaultMessageFactory.create(String beginString, String msgType)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}