{"test_class": {"identifier": "StringPropagationAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock Propagation<String> delegate;", "modifier": "@Mock", "type": "Propagation<String>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "@Mock Injector<Map<String, String>> delegateInjector;", "modifier": "@Mock", "type": "Injector<Map<String, String>>", "declarator": "delegateInjector", "var_name": "delegateInjector"}, {"original_string": "@Mock Extractor<Map<String, String>> delegateExtractor;", "modifier": "@Mock", "type": "Extractor<Map<String, String>>", "declarator": "delegateExtractor", "var_name": "delegateExtractor"}, {"original_string": "KeyFactory<Integer> keyFactory = Integer::parseInt;", "modifier": "", "type": "KeyFactory<Integer>", "declarator": "keyFactory = Integer::parseInt", "var_name": "keyFactory"}, {"original_string": "Setter<Map<Integer, String>, Integer> setter = (m, k, v) -> m.put(k, v);", "modifier": "", "type": "Setter<Map<Integer, String>, Integer>", "declarator": "setter = (m, k, v) -> m.put(k, v)", "var_name": "setter"}, {"original_string": "Getter<Map<Integer, String>, Integer> getter = (m, k) -> m.get(k);", "modifier": "", "type": "Getter<Map<Integer, String>, Integer>", "declarator": "getter = (m, k) -> m.get(k)", "var_name": "getter"}], "file": "brave/src/test/java/brave/internal/propagation/StringPropagationAdapterTest.java"}, "test_case": {"identifier": "propagation_equalsHashCodeString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void propagation_equalsHashCodeString() {\n    assertDelegates(\n        () -> mock(Propagation.class),\n        p -> StringPropagationAdapter.create(p, keyFactory)\n    );\n  }", "signature": "void propagation_equalsHashCodeString()", "full_signature": "@Test public void propagation_equalsHashCodeString()", "class_method_signature": "StringPropagationAdapterTest.propagation_equalsHashCodeString()", "testcase": true, "constructor": false, "invocations": ["assertDelegates", "mock", "create"]}, "focal_class": {"identifier": "StringPropagationAdapter", "superclass": "", "interfaces": "implements Propagation<K>", "fields": [{"original_string": "final Propagation<String> delegate;", "modifier": "final", "type": "Propagation<String>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "final KeyFactory<K> keyFactory;", "modifier": "final", "type": "KeyFactory<K>", "declarator": "keyFactory", "var_name": "keyFactory"}, {"original_string": "final Map<String, K> map;", "modifier": "final", "type": "Map<String, K>", "declarator": "map", "var_name": "map"}, {"original_string": "final List<K> keysList;", "modifier": "final", "type": "List<K>", "declarator": "keysList", "var_name": "keysList"}], "methods": [{"identifier": "create", "parameters": "(Propagation<String> delegate, KeyFactory<K> keyFactory)", "modifiers": "public static", "return": "Propagation<K>", "signature": "Propagation<K> create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "full_signature": "public static Propagation<K> create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "class_method_signature": "StringPropagationAdapter.create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "testcase": false, "constructor": false}, {"identifier": "StringPropagationAdapter", "parameters": "(Propagation<String> delegate, KeyFactory<K> keyFactory)", "modifiers": "", "return": "", "signature": " StringPropagationAdapter(Propagation<String> delegate, KeyFactory<K> keyFactory)", "full_signature": "  StringPropagationAdapter(Propagation<String> delegate, KeyFactory<K> keyFactory)", "class_method_signature": "StringPropagationAdapter.StringPropagationAdapter(Propagation<String> delegate, KeyFactory<K> keyFactory)", "testcase": false, "constructor": true}, {"identifier": "toKeyList", "parameters": "(List<String> keyNames, KeyFactory<K> keyFactory)", "modifiers": "", "return": "List<K>", "signature": "List<K> toKeyList(List<String> keyNames, KeyFactory<K> keyFactory)", "full_signature": " List<K> toKeyList(List<String> keyNames, KeyFactory<K> keyFactory)", "class_method_signature": "StringPropagationAdapter.toKeyList(List<String> keyNames, KeyFactory<K> keyFactory)", "testcase": false, "constructor": false}, {"identifier": "keys", "parameters": "()", "modifiers": "@Override public", "return": "List<K>", "signature": "List<K> keys()", "full_signature": "@Override public List<K> keys()", "class_method_signature": "StringPropagationAdapter.keys()", "testcase": false, "constructor": false}, {"identifier": "injector", "parameters": "(Setter<R, K> setter)", "modifiers": "@Override public", "return": "Injector<R>", "signature": "Injector<R> injector(Setter<R, K> setter)", "full_signature": "@Override public Injector<R> injector(Setter<R, K> setter)", "class_method_signature": "StringPropagationAdapter.injector(Setter<R, K> setter)", "testcase": false, "constructor": false}, {"identifier": "extractor", "parameters": "(Getter<R, K> getter)", "modifiers": "@Override public", "return": "Extractor<R>", "signature": "Extractor<R> extractor(Getter<R, K> getter)", "full_signature": "@Override public Extractor<R> extractor(Getter<R, K> getter)", "class_method_signature": "StringPropagationAdapter.extractor(Getter<R, K> getter)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StringPropagationAdapter.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StringPropagationAdapter.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "StringPropagationAdapter.equals(Object obj)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/internal/propagation/StringPropagationAdapter.java"}, "focal_method": {"identifier": "create", "parameters": "(Propagation<String> delegate, KeyFactory<K> keyFactory)", "modifiers": "public static", "return": "Propagation<K>", "body": "public static <K> Propagation<K> create(Propagation<String> delegate, KeyFactory<K> keyFactory) {\n    if (delegate == null) throw new NullPointerException(\"delegate == null\");\n    if (keyFactory == null) throw new NullPointerException(\"keyFactory == null\");\n    if (keyFactory == KeyFactory.STRING) return (Propagation<K>) delegate;\n    return new StringPropagationAdapter<>(delegate, keyFactory);\n  }", "signature": "Propagation<K> create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "full_signature": "public static Propagation<K> create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "class_method_signature": "StringPropagationAdapter.create(Propagation<String> delegate, KeyFactory<K> keyFactory)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}