{"test_class": {"identifier": "MustBeRelocatedSelfManagedTaskCollectorStepTest", "superclass": "extends AbstractTaskRelocationTest", "interfaces": "", "fields": [{"original_string": "private final MustBeRelocatedSelfManagedTaskCollectorStep step;", "modifier": "private final", "type": "MustBeRelocatedSelfManagedTaskCollectorStep", "declarator": "step", "var_name": "step"}], "file": "titus-supplementary-component/task-relocation/src/test/java/com/netflix/titus/supplementary/relocation/workflow/step/MustBeRelocatedSelfManagedTaskCollectorStepTest.java"}, "test_case": {"identifier": "testMigrationOfTasksWithPolicy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMigrationOfTasksWithPolicy() {\n        Job<BatchJobExt> job = TestDataFactory.newBatchJob(\"job1\", 1, newSelfManagedDisruptionBudget(1_000));\n        relocationConnectorStubs.addJob(job);\n        relocationConnectorStubs.place(TestDataFactory.REMOVABLE_INSTANCE_GROUP, jobOperations.getTasks().get(0));\n\n        Map<String, TaskRelocationPlan> result = step.collectTasksThatMustBeRelocated();\n        assertThat(result).hasSize(1);\n    }", "signature": "void testMigrationOfTasksWithPolicy()", "full_signature": "@Test public void testMigrationOfTasksWithPolicy()", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStepTest.testMigrationOfTasksWithPolicy()", "testcase": true, "constructor": false, "invocations": ["newBatchJob", "newSelfManagedDisruptionBudget", "addJob", "place", "get", "getTasks", "collectTasksThatMustBeRelocated", "hasSize", "assertThat"]}, "focal_class": {"identifier": "MustBeRelocatedSelfManagedTaskCollectorStep", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MustBeRelocatedSelfManagedTaskCollectorStep.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MustBeRelocatedSelfManagedTaskCollectorStep.class)", "var_name": "logger"}, {"original_string": "private final NodeDataResolver nodeDataResolver;", "modifier": "private final", "type": "NodeDataResolver", "declarator": "nodeDataResolver", "var_name": "nodeDataResolver"}, {"original_string": "private final ReadOnlyJobOperations jobOperations;", "modifier": "private final", "type": "ReadOnlyJobOperations", "declarator": "jobOperations", "var_name": "jobOperations"}, {"original_string": "private final StepMetrics metrics;", "modifier": "private final", "type": "StepMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private Map<String, TaskRelocationPlan> lastResult = Collections.emptyMap();", "modifier": "private", "type": "Map<String, TaskRelocationPlan>", "declarator": "lastResult = Collections.emptyMap()", "var_name": "lastResult"}], "methods": [{"identifier": "MustBeRelocatedSelfManagedTaskCollectorStep", "parameters": "(NodeDataResolver nodeDataResolver,\n                                                       ReadOnlyJobOperations jobOperations,\n                                                       TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " MustBeRelocatedSelfManagedTaskCollectorStep(NodeDataResolver nodeDataResolver,\n                                                       ReadOnlyJobOperations jobOperations,\n                                                       TitusRuntime titusRuntime)", "full_signature": "public  MustBeRelocatedSelfManagedTaskCollectorStep(NodeDataResolver nodeDataResolver,\n                                                       ReadOnlyJobOperations jobOperations,\n                                                       TitusRuntime titusRuntime)", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.MustBeRelocatedSelfManagedTaskCollectorStep(NodeDataResolver nodeDataResolver,\n                                                       ReadOnlyJobOperations jobOperations,\n                                                       TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "collectTasksThatMustBeRelocated", "parameters": "()", "modifiers": "public", "return": "Map<String, TaskRelocationPlan>", "signature": "Map<String, TaskRelocationPlan> collectTasksThatMustBeRelocated()", "full_signature": "public Map<String, TaskRelocationPlan> collectTasksThatMustBeRelocated()", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.collectTasksThatMustBeRelocated()", "testcase": false, "constructor": false}, {"identifier": "buildRelocationPlans", "parameters": "()", "modifiers": "private", "return": "Map<String, TaskRelocationPlan>", "signature": "Map<String, TaskRelocationPlan> buildRelocationPlans()", "full_signature": "private Map<String, TaskRelocationPlan> buildRelocationPlans()", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.buildRelocationPlans()", "testcase": false, "constructor": false}, {"identifier": "findAllJobTaskAgentTriples", "parameters": "(Map<String, Node> nodes)", "modifiers": "private", "return": "List<Triple<Job<?>, Task, Node>>", "signature": "List<Triple<Job<?>, Task, Node>> findAllJobTaskAgentTriples(Map<String, Node> nodes)", "full_signature": "private List<Triple<Job<?>, Task, Node>> findAllJobTaskAgentTriples(Map<String, Node> nodes)", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.findAllJobTaskAgentTriples(Map<String, Node> nodes)", "testcase": false, "constructor": false}, {"identifier": "buildSelfManagedRelocationPlan", "parameters": "(Job<?> job, Task task, String reason)", "modifiers": "private", "return": "TaskRelocationPlan", "signature": "TaskRelocationPlan buildSelfManagedRelocationPlan(Job<?> job, Task task, String reason)", "full_signature": "private TaskRelocationPlan buildSelfManagedRelocationPlan(Job<?> job, Task task, String reason)", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.buildSelfManagedRelocationPlan(Job<?> job, Task task, String reason)", "testcase": false, "constructor": false}], "file": "titus-supplementary-component/task-relocation/src/main/java/com/netflix/titus/supplementary/relocation/workflow/step/MustBeRelocatedSelfManagedTaskCollectorStep.java"}, "focal_method": {"identifier": "collectTasksThatMustBeRelocated", "parameters": "()", "modifiers": "public", "return": "Map<String, TaskRelocationPlan>", "body": "public Map<String, TaskRelocationPlan> collectTasksThatMustBeRelocated() {\n        Stopwatch stopwatch = Stopwatch.createStarted();\n        try {\n            Map<String, TaskRelocationPlan> result = buildRelocationPlans();\n            metrics.onSuccess(result.size(), stopwatch.elapsed(TimeUnit.MILLISECONDS));\n            logger.debug(\"Step results: {}\", result);\n            return result;\n        } catch (Exception e) {\n            logger.error(\"Step processing error\", e);\n            metrics.onError(stopwatch.elapsed(TimeUnit.MILLISECONDS));\n            throw e;\n        }\n    }", "signature": "Map<String, TaskRelocationPlan> collectTasksThatMustBeRelocated()", "full_signature": "public Map<String, TaskRelocationPlan> collectTasksThatMustBeRelocated()", "class_method_signature": "MustBeRelocatedSelfManagedTaskCollectorStep.collectTasksThatMustBeRelocated()", "testcase": false, "constructor": false, "invocations": ["createStarted", "buildRelocationPlans", "onSuccess", "size", "elapsed", "debug", "error", "onError", "elapsed"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}