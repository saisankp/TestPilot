{"test_class": {"identifier": "ByteUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/util/ByteUtilsTest.java"}, "test_case": {"identifier": "success_JoinByteArray_2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_JoinByteArray_2() {\n        byte[] input1 = new byte[]{1, 2, 3, 4, 5};\n        byte[] input2 = new byte[]{6, 7, 8, 9, 10};\n        byte[] input3 = new byte[]{11, 12, 13, 14, 15};\n        byte[] input4 = new byte[]{16, 17, 18, 19, 20};\n\n        byte[] result = ByteUtils.join(input1, input2, input3, input4);\n\n        assertThat(result, is(new byte[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}));\n    }", "signature": "void success_JoinByteArray_2()", "full_signature": "@Test public void success_JoinByteArray_2()", "class_method_signature": "ByteUtilsTest.success_JoinByteArray_2()", "testcase": true, "constructor": false, "invocations": ["join", "assertThat", "is"]}, "focal_class": {"identifier": "ByteUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "split", "parameters": "(byte[] input, int firstLength)", "modifiers": "public static", "return": "byte[][]", "signature": "byte[][] split(byte[] input, int firstLength)", "full_signature": "public static byte[][] split(byte[] input, int firstLength)", "class_method_signature": "ByteUtils.split(byte[] input, int firstLength)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] reverse(byte[] input)", "full_signature": "public static byte[] reverse(byte[] input)", "class_method_signature": "ByteUtils.reverse(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[] value1, byte[] value2)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[] value1, byte[] value2)", "full_signature": "public static byte[] join(byte[] value1, byte[] value2)", "class_method_signature": "ByteUtils.join(byte[] value1, byte[] value2)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[]... inputs)", "full_signature": "public static byte[] join(byte[]... inputs)", "class_method_signature": "ByteUtils.join(byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnHead", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnHead(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnHead(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnHead(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnTail", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnTail(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnTail(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnTail(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "readBit", "parameters": "(byte value, int position)", "modifiers": "public static", "return": "int", "signature": "int readBit(byte value, int position)", "full_signature": "public static int readBit(byte value, int position)", "class_method_signature": "ByteUtils.readBit(byte value, int position)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/util/ByteUtils.java"}, "focal_method": {"identifier": "join", "parameters": "(byte[] value1, byte[] value2)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] join(byte[] value1, byte[] value2) {\n        int length = value1.length + value2.length;\n        byte[] result = new byte[length];\n        System.arraycopy(value1, 0, result, 0, value1.length);\n        System.arraycopy(value2, 0, result, value1.length, value2.length);\n        return result;\n    }", "signature": "byte[] join(byte[] value1, byte[] value2)", "full_signature": "public static byte[] join(byte[] value1, byte[] value2)", "class_method_signature": "ByteUtils.join(byte[] value1, byte[] value2)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "arraycopy"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}