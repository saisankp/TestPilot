{"test_class": {"identifier": "AcknowledgementRequestParseExceptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonObject KNOWN_JSON_REPRESENTATION = JsonObject.newBuilder()\n            .set(DittoRuntimeException.JsonFields.ERROR_CODE, AcknowledgementRequestParseException.ERROR_CODE)\n            .set(DittoRuntimeException.JsonFields.MESSAGE,\n                    MessageFormat.format(AcknowledgementRequestParseException.MESSAGE_TEMPLATE, \"ab\"))\n            .set(DittoRuntimeException.JsonFields.DESCRIPTION, AcknowledgementRequestParseException.DEFAULT_DESCRIPTION)\n            .set(DittoRuntimeException.JsonFields.STATUS, HttpStatusCode.UNPROCESSABLE_ENTITY.toInt())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON_REPRESENTATION = JsonObject.newBuilder()\n            .set(DittoRuntimeException.JsonFields.ERROR_CODE, AcknowledgementRequestParseException.ERROR_CODE)\n            .set(DittoRuntimeException.JsonFields.MESSAGE,\n                    MessageFormat.format(AcknowledgementRequestParseException.MESSAGE_TEMPLATE, \"ab\"))\n            .set(DittoRuntimeException.JsonFields.DESCRIPTION, AcknowledgementRequestParseException.DEFAULT_DESCRIPTION)\n            .set(DittoRuntimeException.JsonFields.STATUS, HttpStatusCode.UNPROCESSABLE_ENTITY.toInt())\n            .build()", "var_name": "KNOWN_JSON_REPRESENTATION"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/acks/AcknowledgementRequestParseExceptionTest.java"}, "test_case": {"identifier": "fromJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromJsonReturnsExpected() {\n        final DittoHeaders dittoHeaders = DittoHeaders.newBuilder().correlationId(testName.getMethodName()).build();\n        final AcknowledgementRequestParseException expected =\n                new AcknowledgementRequestParseException(\"ab\", null, dittoHeaders);\n\n        final AcknowledgementRequestParseException actual =\n                AcknowledgementRequestParseException.fromJson(KNOWN_JSON_REPRESENTATION, dittoHeaders);\n\n        assertThat(actual).isEqualTo(expected);\n    }", "signature": "void fromJsonReturnsExpected()", "full_signature": "@Test public void fromJsonReturnsExpected()", "class_method_signature": "AcknowledgementRequestParseExceptionTest.fromJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["build", "correlationId", "newBuilder", "getMethodName", "fromJson", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "AcknowledgementRequestParseException", "superclass": "extends DittoRuntimeException", "interfaces": "implements AcknowledgementException", "fields": [{"original_string": "public static final String ERROR_CODE = ERROR_CODE_PREFIX + \"request.parsing.failed\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_CODE = ERROR_CODE_PREFIX + \"request.parsing.failed\"", "var_name": "ERROR_CODE"}, {"original_string": "static final String MESSAGE_TEMPLATE = \"<{0}> cannot be parsed to an acknowledgement request!\";", "modifier": "static final", "type": "String", "declarator": "MESSAGE_TEMPLATE = \"<{0}> cannot be parsed to an acknowledgement request!\"", "var_name": "MESSAGE_TEMPLATE"}, {"original_string": "static final String DEFAULT_DESCRIPTION =\n            \"The string to be parsed must be a valid representation of an acknowledgement request.\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION =\n            \"The string to be parsed must be a valid representation of an acknowledgement request.\"", "var_name": "DEFAULT_DESCRIPTION"}, {"original_string": "private static final long serialVersionUID = 6452961856865574058L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 6452961856865574058L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "AcknowledgementRequestParseException", "parameters": "(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "modifiers": "private", "return": "", "signature": " AcknowledgementRequestParseException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "full_signature": "private  AcknowledgementRequestParseException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "class_method_signature": "AcknowledgementRequestParseException.AcknowledgementRequestParseException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "testcase": false, "constructor": true}, {"identifier": "AcknowledgementRequestParseException", "parameters": "(final CharSequence ackRequestString, @Nullable final Throwable cause,\n            final DittoHeaders dittoHeaders)", "modifiers": "public", "return": "", "signature": " AcknowledgementRequestParseException(final CharSequence ackRequestString, @Nullable final Throwable cause,\n            final DittoHeaders dittoHeaders)", "full_signature": "public  AcknowledgementRequestParseException(final CharSequence ackRequestString, @Nullable final Throwable cause,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementRequestParseException.AcknowledgementRequestParseException(final CharSequence ackRequestString, @Nullable final Throwable cause,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "getMessageIncludingCause", "parameters": "(final CharSequence ackRequestString,\n            @Nullable final Throwable cause)", "modifiers": "private static", "return": "String", "signature": "String getMessageIncludingCause(final CharSequence ackRequestString,\n            @Nullable final Throwable cause)", "full_signature": "private static String getMessageIncludingCause(final CharSequence ackRequestString,\n            @Nullable final Throwable cause)", "class_method_signature": "AcknowledgementRequestParseException.getMessageIncludingCause(final CharSequence ackRequestString,\n            @Nullable final Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "AcknowledgementRequestParseException", "signature": "AcknowledgementRequestParseException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static AcknowledgementRequestParseException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementRequestParseException.fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/acks/AcknowledgementRequestParseException.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "AcknowledgementRequestParseException", "body": "public static AcknowledgementRequestParseException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders) {\n        return DittoRuntimeException.fromJson(jsonObject, dittoHeaders, new Builder());\n    }", "signature": "AcknowledgementRequestParseException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static AcknowledgementRequestParseException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementRequestParseException.fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["fromJson"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}