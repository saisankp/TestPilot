{"test_class": {"identifier": "SLF4JLogTest", "superclass": "", "interfaces": "", "fields": [], "file": "quickfixj-core/src/test/java/quickfix/SLF4JLogTest.java"}, "test_case": {"identifier": "testLog4j_correctFQCN", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLog4j_correctFQCN() throws Exception {\n        final MyLog4JLog myLog4j = new MyLog4JLog();\n        final SLF4JLog slf4jLog = new MySLF4JLog(new SessionID(\"FIX.4.2\", \"sender\", \"target\"),\n                \"my-caller-fqcn\", myLog4j);\n\n        final String loggedText = \"TEST123\";\n        slf4jLog.onEvent(loggedText);\n        assertEquals(1, myLog4j.messages.size());\n        assertEquals(\"my-caller-fqcn\", myLog4j.fqcns.get(0));\n        assertEquals(\"TEST123\", myLog4j.messages.get(0));\n        slf4jLog.close();\n    }", "signature": "void testLog4j_correctFQCN()", "full_signature": "@Test public void testLog4j_correctFQCN()", "class_method_signature": "SLF4JLogTest.testLog4j_correctFQCN()", "testcase": true, "constructor": false, "invocations": ["onEvent", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "close"]}, "focal_class": {"identifier": "SLF4JLog", "superclass": "extends AbstractLog", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_EVENT_CATEGORY = \"quickfixj.event\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_EVENT_CATEGORY = \"quickfixj.event\"", "var_name": "DEFAULT_EVENT_CATEGORY"}, {"original_string": "public static final String DEFAULT_ERROR_EVENT_CATEGORY = \"quickfixj.errorEvent\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_ERROR_EVENT_CATEGORY = \"quickfixj.errorEvent\"", "var_name": "DEFAULT_ERROR_EVENT_CATEGORY"}, {"original_string": "public static final String DEFAULT_INCOMING_MSG_CATEGORY = \"quickfixj.msg.incoming\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_INCOMING_MSG_CATEGORY = \"quickfixj.msg.incoming\"", "var_name": "DEFAULT_INCOMING_MSG_CATEGORY"}, {"original_string": "public static final String DEFAULT_OUTGOING_MSG_CATEGORY = \"quickfixj.msg.outgoing\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_OUTGOING_MSG_CATEGORY = \"quickfixj.msg.outgoing\"", "var_name": "DEFAULT_OUTGOING_MSG_CATEGORY"}, {"original_string": "private final Logger eventLog;", "modifier": "private final", "type": "Logger", "declarator": "eventLog", "var_name": "eventLog"}, {"original_string": "private final Logger errorEventLog;", "modifier": "private final", "type": "Logger", "declarator": "errorEventLog", "var_name": "errorEventLog"}, {"original_string": "private final Logger incomingMsgLog;", "modifier": "private final", "type": "Logger", "declarator": "incomingMsgLog", "var_name": "incomingMsgLog"}, {"original_string": "private final Logger outgoingMsgLog;", "modifier": "private final", "type": "Logger", "declarator": "outgoingMsgLog", "var_name": "outgoingMsgLog"}, {"original_string": "private final String logPrefix;", "modifier": "private final", "type": "String", "declarator": "logPrefix", "var_name": "logPrefix"}, {"original_string": "private final String callerFQCN;", "modifier": "private final", "type": "String", "declarator": "callerFQCN", "var_name": "callerFQCN"}, {"original_string": "private static final String FIX_MAJOR_VERSION_VAR = \"\\\\$\\\\{fixMajorVersion}\";", "modifier": "private static final", "type": "String", "declarator": "FIX_MAJOR_VERSION_VAR = \"\\\\$\\\\{fixMajorVersion}\"", "var_name": "FIX_MAJOR_VERSION_VAR"}, {"original_string": "private static final String FIX_MINOR_VERSION_VAR = \"\\\\$\\\\{fixMinorVersion}\";", "modifier": "private static final", "type": "String", "declarator": "FIX_MINOR_VERSION_VAR = \"\\\\$\\\\{fixMinorVersion}\"", "var_name": "FIX_MINOR_VERSION_VAR"}, {"original_string": "private static final String SENDER_COMP_ID_VAR = \"\\\\$\\\\{senderCompID}\";", "modifier": "private static final", "type": "String", "declarator": "SENDER_COMP_ID_VAR = \"\\\\$\\\\{senderCompID}\"", "var_name": "SENDER_COMP_ID_VAR"}, {"original_string": "private static final String SENDER_SUB_ID_VAR = \"\\\\$\\\\{senderSubID}\";", "modifier": "private static final", "type": "String", "declarator": "SENDER_SUB_ID_VAR = \"\\\\$\\\\{senderSubID}\"", "var_name": "SENDER_SUB_ID_VAR"}, {"original_string": "private static final String SENDER_LOC_ID_VAR = \"\\\\$\\\\{senderLocationID}\";", "modifier": "private static final", "type": "String", "declarator": "SENDER_LOC_ID_VAR = \"\\\\$\\\\{senderLocationID}\"", "var_name": "SENDER_LOC_ID_VAR"}, {"original_string": "private static final String TARGET_COMP_ID_VAR = \"\\\\$\\\\{targetCompID}\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_COMP_ID_VAR = \"\\\\$\\\\{targetCompID}\"", "var_name": "TARGET_COMP_ID_VAR"}, {"original_string": "private static final String TARGET_SUB_ID_VAR = \"\\\\$\\\\{targetSubID}\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_SUB_ID_VAR = \"\\\\$\\\\{targetSubID}\"", "var_name": "TARGET_SUB_ID_VAR"}, {"original_string": "private static final String TARGET_LOC_ID_VAR = \"\\\\$\\\\{targetLocationID}\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_LOC_ID_VAR = \"\\\\$\\\\{targetLocationID}\"", "var_name": "TARGET_LOC_ID_VAR"}, {"original_string": "private static final String QUALIFIER_VAR = \"\\\\$\\\\{qualifier}\";", "modifier": "private static final", "type": "String", "declarator": "QUALIFIER_VAR = \"\\\\$\\\\{qualifier}\"", "var_name": "QUALIFIER_VAR"}], "methods": [{"identifier": "SLF4JLog", "parameters": "(SessionID sessionID, String eventCategory, String errorEventCategory,\n            String incomingMsgCategory, String outgoingMsgCategory, boolean prependSessionID,\n            boolean logHeartbeats, String inCallerFQCN)", "modifiers": "public", "return": "", "signature": " SLF4JLog(SessionID sessionID, String eventCategory, String errorEventCategory,\n            String incomingMsgCategory, String outgoingMsgCategory, boolean prependSessionID,\n            boolean logHeartbeats, String inCallerFQCN)", "full_signature": "public  SLF4JLog(SessionID sessionID, String eventCategory, String errorEventCategory,\n            String incomingMsgCategory, String outgoingMsgCategory, boolean prependSessionID,\n            boolean logHeartbeats, String inCallerFQCN)", "class_method_signature": "SLF4JLog.SLF4JLog(SessionID sessionID, String eventCategory, String errorEventCategory,\n            String incomingMsgCategory, String outgoingMsgCategory, boolean prependSessionID,\n            boolean logHeartbeats, String inCallerFQCN)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "(SessionID sessionID, String category, String defaultCategory)", "modifiers": "private", "return": "Logger", "signature": "Logger getLogger(SessionID sessionID, String category, String defaultCategory)", "full_signature": "private Logger getLogger(SessionID sessionID, String category, String defaultCategory)", "class_method_signature": "SLF4JLog.getLogger(SessionID sessionID, String category, String defaultCategory)", "testcase": false, "constructor": false}, {"identifier": "substituteVariables", "parameters": "(SessionID sessionID, String category)", "modifiers": "private", "return": "String", "signature": "String substituteVariables(SessionID sessionID, String category)", "full_signature": "private String substituteVariables(SessionID sessionID, String category)", "class_method_signature": "SLF4JLog.substituteVariables(SessionID sessionID, String category)", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void onEvent(String text)", "full_signature": "public void onEvent(String text)", "class_method_signature": "SLF4JLog.onEvent(String text)", "testcase": false, "constructor": false}, {"identifier": "onErrorEvent", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void onErrorEvent(String text)", "full_signature": "public void onErrorEvent(String text)", "class_method_signature": "SLF4JLog.onErrorEvent(String text)", "testcase": false, "constructor": false}, {"identifier": "logIncoming", "parameters": "(String message)", "modifiers": "@Override protected", "return": "void", "signature": "void logIncoming(String message)", "full_signature": "@Override protected void logIncoming(String message)", "class_method_signature": "SLF4JLog.logIncoming(String message)", "testcase": false, "constructor": false}, {"identifier": "logOutgoing", "parameters": "(String message)", "modifiers": "@Override protected", "return": "void", "signature": "void logOutgoing(String message)", "full_signature": "@Override protected void logOutgoing(String message)", "class_method_signature": "SLF4JLog.logOutgoing(String message)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(org.slf4j.Logger log, String text)", "modifiers": "protected", "return": "void", "signature": "void log(org.slf4j.Logger log, String text)", "full_signature": "protected void log(org.slf4j.Logger log, String text)", "class_method_signature": "SLF4JLog.log(org.slf4j.Logger log, String text)", "testcase": false, "constructor": false}, {"identifier": "logError", "parameters": "(org.slf4j.Logger log, String text)", "modifiers": "protected", "return": "void", "signature": "void logError(org.slf4j.Logger log, String text)", "full_signature": "protected void logError(org.slf4j.Logger log, String text)", "class_method_signature": "SLF4JLog.logError(org.slf4j.Logger log, String text)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "SLF4JLog.clear()", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/SLF4JLog.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(String text)", "modifiers": "public", "return": "void", "body": "public void onEvent(String text) {\n        log(eventLog, text);\n    }", "signature": "void onEvent(String text)", "full_signature": "public void onEvent(String text)", "class_method_signature": "SLF4JLog.onEvent(String text)", "testcase": false, "constructor": false, "invocations": ["log"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}