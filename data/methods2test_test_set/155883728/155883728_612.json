{"test_class": {"identifier": "ItemWrappingVisitorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/ItemWrappingVisitorTest.java"}, "test_case": {"identifier": "testVisitProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testVisitProperty() throws Exception {\n        final String path = \"/correct/path\";\n        ItemVisitor visitor = new FacadeTestingItemVisitor(path);\n        ItemWrappingVisitor<Session> facade = getFacade(visitor);\n        Property delegate = mock(Property.class);\n        when(delegate.getPath()).thenReturn(path);\n        facade.visit(delegate);\n    }", "signature": "void testVisitProperty()", "full_signature": "@Test public void testVisitProperty()", "class_method_signature": "ItemWrappingVisitorTest.testVisitProperty()", "testcase": true, "constructor": false, "invocations": ["getFacade", "mock", "thenReturn", "when", "getPath", "visit"]}, "focal_class": {"identifier": "ItemWrappingVisitor", "superclass": "", "interfaces": "implements ItemVisitor", "fields": [{"original_string": "private final @NotNull ItemVisitor delegate;", "modifier": "private final @NotNull", "type": "ItemVisitor", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "ItemWrappingVisitor", "parameters": "(final @NotNull ItemVisitor delegate,\n                               final @NotNull SessionFacade<S> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " ItemWrappingVisitor(final @NotNull ItemVisitor delegate,\n                               final @NotNull SessionFacade<S> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  ItemWrappingVisitor(final @NotNull ItemVisitor delegate,\n                               final @NotNull SessionFacade<S> session)", "class_method_signature": "ItemWrappingVisitor.ItemWrappingVisitor(final @NotNull ItemVisitor delegate,\n                               final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "visit", "parameters": "(Property property)", "modifiers": "@Override public", "return": "void", "signature": "void visit(Property property)", "full_signature": "@Override public void visit(Property property)", "class_method_signature": "ItemWrappingVisitor.visit(Property property)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Node node)", "modifiers": "@Override public", "return": "void", "signature": "void visit(Node node)", "full_signature": "@Override public void visit(Node node)", "class_method_signature": "ItemWrappingVisitor.visit(Node node)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/ItemWrappingVisitor.java"}, "focal_method": {"identifier": "visit", "parameters": "(Property property)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void visit(Property property) throws RepositoryException {\n        delegate.visit(new PropertyFacade<>(property, session));\n    }", "signature": "void visit(Property property)", "full_signature": "@Override public void visit(Property property)", "class_method_signature": "ItemWrappingVisitor.visit(Property property)", "testcase": false, "constructor": false, "invocations": ["visit"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}