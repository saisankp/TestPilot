{"test_class": {"identifier": "DssDataReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "vortex-api/src/test/java/mil/army/usace/hec/vortex/io/DssDataReaderTest.java"}, "test_case": {"identifier": "GetVariablesFromDss7ReturnsSetOfStrings", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void GetVariablesFromDss7ReturnsSetOfStrings(){\n        String pathToDss = new File(getClass().getResource(\"/normalizer/qpe.dss\").getFile()).toString();\n        Set<String> variables = DssDataReader.getVariables(pathToDss);\n        assertEquals(49, variables.size());\n    }", "signature": "void GetVariablesFromDss7ReturnsSetOfStrings()", "full_signature": "@Test void GetVariablesFromDss7ReturnsSetOfStrings()", "class_method_signature": "DssDataReaderTest.GetVariablesFromDss7ReturnsSetOfStrings()", "testcase": true, "constructor": false, "invocations": ["toString", "getFile", "getResource", "getClass", "getVariables", "assertEquals", "size"]}, "focal_class": {"identifier": "DssDataReader", "superclass": "extends DataReader", "interfaces": "", "fields": [], "methods": [{"identifier": "DssDataReader", "parameters": "(DataReaderBuilder builder)", "modifiers": "", "return": "", "signature": " DssDataReader(DataReaderBuilder builder)", "full_signature": "  DssDataReader(DataReaderBuilder builder)", "class_method_signature": "DssDataReader.DssDataReader(DataReaderBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "getDtos", "parameters": "()", "modifiers": "@Override public", "return": "List<VortexData>", "signature": "List<VortexData> getDtos()", "full_signature": "@Override public List<VortexData> getDtos()", "class_method_signature": "DssDataReader.getDtos()", "testcase": false, "constructor": false}, {"identifier": "dssToDto", "parameters": "(GridData gridData)", "modifiers": "private", "return": "VortexGrid", "signature": "VortexGrid dssToDto(GridData gridData)", "full_signature": "private VortexGrid dssToDto(GridData gridData)", "class_method_signature": "DssDataReader.dssToDto(GridData gridData)", "testcase": false, "constructor": false}, {"identifier": "getVariables", "parameters": "(String pathToDss)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getVariables(String pathToDss)", "full_signature": "public static Set<String> getVariables(String pathToDss)", "class_method_signature": "DssDataReader.getVariables(String pathToDss)", "testcase": false, "constructor": false}, {"identifier": "getDtoCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDtoCount()", "full_signature": "@Override public int getDtoCount()", "class_method_signature": "DssDataReader.getDtoCount()", "testcase": false, "constructor": false}, {"identifier": "getDto", "parameters": "(int idx)", "modifiers": "@Override public", "return": "VortexData", "signature": "VortexData getDto(int idx)", "full_signature": "@Override public VortexData getDto(int idx)", "class_method_signature": "DssDataReader.getDto(int idx)", "testcase": false, "constructor": false}], "file": "vortex-api/src/main/java/mil/army/usace/hec/vortex/io/DssDataReader.java"}, "focal_method": {"identifier": "getVariables", "parameters": "(String pathToDss)", "modifiers": "public static", "return": "Set<String>", "body": "public static Set<String> getVariables(String pathToDss){\n        HecDSSFileAccess.setDefaultDSSFileName(pathToDss);\n        HecDssCatalog catalog = new HecDssCatalog();\n        String[] paths = catalog.getCatalog(false, null);\n        return new HashSet<>(Arrays.asList(paths));\n    }", "signature": "Set<String> getVariables(String pathToDss)", "full_signature": "public static Set<String> getVariables(String pathToDss)", "class_method_signature": "DssDataReader.getVariables(String pathToDss)", "testcase": false, "constructor": false, "invocations": ["setDefaultDSSFileName", "getCatalog", "asList"]}, "repository": {"repo_id": 193537999, "url": "https://github.com/HydrologicEngineeringCenter/Vortex", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 448543, "license": "licensed"}}