{"test_class": {"identifier": "AsyncTaskLifeCycleEventProducerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConnectionFactory connectionFactory;", "modifier": "private", "type": "ConnectionFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "private Queue queue;", "modifier": "private", "type": "Queue", "declarator": "queue", "var_name": "queue"}, {"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private Session session;", "modifier": "private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private MessageProducer producer;", "modifier": "private", "type": "MessageProducer", "declarator": "producer", "var_name": "producer"}, {"original_string": "private TextMessage message;", "modifier": "private", "type": "TextMessage", "declarator": "message", "var_name": "message"}, {"original_string": "private AsyncTaskLifeCycleEventProducer logProducer;", "modifier": "private", "type": "AsyncTaskLifeCycleEventProducer", "declarator": "logProducer", "var_name": "logProducer"}, {"original_string": "private TaskEvent event;", "modifier": "private", "type": "TaskEvent", "declarator": "event", "var_name": "event"}], "file": "jbpm-human-task/jbpm-human-task-audit/src/test/java/org/jbpm/services/task/audit/jms/AsyncTaskLifeCycleEventProducerTest.java"}, "test_case": {"identifier": "testBeforeTaskReleasedEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBeforeTaskReleasedEvent() throws JMSException {     \n        logProducer.beforeTaskReleasedEvent(event);\n                \n        ArgumentCaptor<String> argument = ArgumentCaptor.forClass(String.class);\n        verify(session).createTextMessage(argument.capture());\n        String messageContent = argument.getValue();\n        assertThat(messageContent)\n            .isNotNull()\n            .doesNotContain(\"<auditTask>\")\n            .contains(\"<org.jbpm.services.task.audit.impl.model.TaskEventImpl>\")\n            .contains(\"<type>RELEASED</type>\");\n        verify(message, times(1)).setStringProperty(eq(\"LogType\"), eq(\"Task\"));        \n        verify(producer, times(1)).setPriority(eq(7));\n        verify(producer, times(1)).send(eq(message));\n    }", "signature": "void testBeforeTaskReleasedEvent()", "full_signature": "@Test public void testBeforeTaskReleasedEvent()", "class_method_signature": "AsyncTaskLifeCycleEventProducerTest.testBeforeTaskReleasedEvent()", "testcase": true, "constructor": false, "invocations": ["beforeTaskReleasedEvent", "forClass", "createTextMessage", "verify", "capture", "getValue", "contains", "contains", "doesNotContain", "isNotNull", "assertThat", "setStringProperty", "verify", "times", "eq", "eq", "setPriority", "verify", "times", "eq", "send", "verify", "times", "eq"]}, "focal_class": {"identifier": "AsyncTaskLifeCycleEventProducer", "superclass": "extends PersistableEventListener", "interfaces": "implements TaskLifeCycleEventListener", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(AsyncTaskLifeCycleEventProducer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(AsyncTaskLifeCycleEventProducer.class)", "var_name": "logger"}, {"original_string": "private ConnectionFactory connectionFactory;", "modifier": "private", "type": "ConnectionFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "private Queue queue;", "modifier": "private", "type": "Queue", "declarator": "queue", "var_name": "queue"}, {"original_string": "private boolean transacted = true;", "modifier": "private", "type": "boolean", "declarator": "transacted = true", "var_name": "transacted"}, {"original_string": "private XStream xstream;", "modifier": "private", "type": "XStream", "declarator": "xstream", "var_name": "xstream"}], "methods": [{"identifier": "AsyncTaskLifeCycleEventProducer", "parameters": "()", "modifiers": "public", "return": "", "signature": " AsyncTaskLifeCycleEventProducer()", "full_signature": "public  AsyncTaskLifeCycleEventProducer()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.AsyncTaskLifeCycleEventProducer()", "testcase": false, "constructor": true}, {"identifier": "initXStream", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initXStream()", "full_signature": "private void initXStream()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.initXStream()", "testcase": false, "constructor": false}, {"identifier": "getConnectionFactory", "parameters": "()", "modifiers": "public", "return": "ConnectionFactory", "signature": "ConnectionFactory getConnectionFactory()", "full_signature": "public ConnectionFactory getConnectionFactory()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.getConnectionFactory()", "testcase": false, "constructor": false}, {"identifier": "setConnectionFactory", "parameters": "(ConnectionFactory connectionFactory)", "modifiers": "public", "return": "void", "signature": "void setConnectionFactory(ConnectionFactory connectionFactory)", "full_signature": "public void setConnectionFactory(ConnectionFactory connectionFactory)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.setConnectionFactory(ConnectionFactory connectionFactory)", "testcase": false, "constructor": false}, {"identifier": "getQueue", "parameters": "()", "modifiers": "public", "return": "Queue", "signature": "Queue getQueue()", "full_signature": "public Queue getQueue()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.getQueue()", "testcase": false, "constructor": false}, {"identifier": "setQueue", "parameters": "(Queue queue)", "modifiers": "public", "return": "void", "signature": "void setQueue(Queue queue)", "full_signature": "public void setQueue(Queue queue)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.setQueue(Queue queue)", "testcase": false, "constructor": false}, {"identifier": "isTransacted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTransacted()", "full_signature": "public boolean isTransacted()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.isTransacted()", "testcase": false, "constructor": false}, {"identifier": "setTransacted", "parameters": "(boolean transacted)", "modifiers": "public", "return": "void", "signature": "void setTransacted(boolean transacted)", "full_signature": "public void setTransacted(boolean transacted)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.setTransacted(boolean transacted)", "testcase": false, "constructor": false}, {"identifier": "afterTaskStartedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskStartedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskStartedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskStartedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskActivatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskActivatedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskActivatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskActivatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskClaimedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskClaimedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskClaimedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskClaimedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskSkippedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskSkippedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskSkippedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskSkippedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskStoppedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskStoppedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskStoppedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskStoppedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskCompletedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskCompletedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskCompletedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskCompletedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskFailedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskFailedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskFailedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskFailedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskAddedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskAddedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskAddedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskAddedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskExitedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskExitedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskExitedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskExitedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskReleasedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskReleasedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskReleasedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskReleasedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskResumedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskResumedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskResumedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskResumedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskSuspendedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskSuspendedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskSuspendedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskSuspendedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskForwardedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskForwardedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskForwardedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskForwardedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskDelegatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskDelegatedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskDelegatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskDelegatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskNominatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskNominatedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskNominatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskNominatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskReleasedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskReleasedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskReleasedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskReleasedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskUpdatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskUpdatedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskUpdatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskUpdatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskReassignedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskReassignedEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskReassignedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskReassignedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskOutputVariableChangedEvent", "parameters": "(TaskEvent event, Map<String, Object> variables)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskOutputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "full_signature": "@Override public void afterTaskOutputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskOutputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "testcase": false, "constructor": false}, {"identifier": "afterTaskInputVariableChangedEvent", "parameters": "(TaskEvent event, Map<String, Object> variables)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskInputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "full_signature": "@Override public void afterTaskInputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskInputVariableChangedEvent(TaskEvent event, Map<String, Object> variables)", "testcase": false, "constructor": false}, {"identifier": "indexVariables", "parameters": "(Task task, Map<String, Object> variables, VariableType type)", "modifiers": "protected", "return": "List<TaskVariableImpl>", "signature": "List<TaskVariableImpl> indexVariables(Task task, Map<String, Object> variables, VariableType type)", "full_signature": "protected List<TaskVariableImpl> indexVariables(Task task, Map<String, Object> variables, VariableType type)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.indexVariables(Task task, Map<String, Object> variables, VariableType type)", "testcase": false, "constructor": false}, {"identifier": "afterTaskAssignmentsAddedEvent", "parameters": "(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskAssignmentsAddedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "full_signature": "@Override public void afterTaskAssignmentsAddedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskAssignmentsAddedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "testcase": false, "constructor": false}, {"identifier": "afterTaskAssignmentsRemovedEvent", "parameters": "(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskAssignmentsRemovedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "full_signature": "@Override public void afterTaskAssignmentsRemovedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskAssignmentsRemovedEvent(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities)", "testcase": false, "constructor": false}, {"identifier": "assignmentsUpdated", "parameters": "(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities, String messageSufix)", "modifiers": "protected", "return": "void", "signature": "void assignmentsUpdated(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities, String messageSufix)", "full_signature": "protected void assignmentsUpdated(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities, String messageSufix)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.assignmentsUpdated(TaskEvent event, AssignmentType type, List<OrganizationalEntity> entities, String messageSufix)", "testcase": false, "constructor": false}, {"identifier": "getUpdateFieldLog", "parameters": "(String fieldName, String previousValue, String value)", "modifiers": "protected", "return": "String", "signature": "String getUpdateFieldLog(String fieldName, String previousValue, String value)", "full_signature": "protected String getUpdateFieldLog(String fieldName, String previousValue, String value)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.getUpdateFieldLog(String fieldName, String previousValue, String value)", "testcase": false, "constructor": false}, {"identifier": "getActualOwner", "parameters": "(Task ti)", "modifiers": "protected", "return": "String", "signature": "String getActualOwner(Task ti)", "full_signature": "protected String getActualOwner(Task ti)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.getActualOwner(Task ti)", "testcase": false, "constructor": false}, {"identifier": "createAuditTask", "parameters": "(Task ti, Date date)", "modifiers": "protected", "return": "AuditTaskImpl", "signature": "AuditTaskImpl createAuditTask(Task ti, Date date)", "full_signature": "protected AuditTaskImpl createAuditTask(Task ti, Date date)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.createAuditTask(Task ti, Date date)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(AuditTaskData auditTaskData, int priority)", "modifiers": "protected", "return": "void", "signature": "void sendMessage(AuditTaskData auditTaskData, int priority)", "full_signature": "protected void sendMessage(AuditTaskData auditTaskData, int priority)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.sendMessage(AuditTaskData auditTaskData, int priority)", "testcase": false, "constructor": false}, {"identifier": "getAuditTask", "parameters": "(TaskPersistenceContext persistenceContext, Task ti)", "modifiers": "protected", "return": "AuditTaskImpl", "signature": "AuditTaskImpl getAuditTask(TaskPersistenceContext persistenceContext, Task ti)", "full_signature": "protected AuditTaskImpl getAuditTask(TaskPersistenceContext persistenceContext, Task ti)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.getAuditTask(TaskPersistenceContext persistenceContext, Task ti)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskActivatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskActivatedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskActivatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskActivatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskClaimedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskClaimedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskClaimedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskClaimedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskSkippedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskSkippedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskSkippedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskSkippedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskStartedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskStartedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskStartedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskStartedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskStoppedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskStoppedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskStoppedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskStoppedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskCompletedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskCompletedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskCompletedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskCompletedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskFailedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskFailedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskFailedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskFailedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskAddedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskAddedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskAddedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskAddedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskExitedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskExitedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskExitedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskExitedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskResumedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskResumedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskResumedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskResumedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskSuspendedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskSuspendedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskSuspendedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskSuspendedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskForwardedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskForwardedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskForwardedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskForwardedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskDelegatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskDelegatedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskDelegatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskDelegatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskNominatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskNominatedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskNominatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskNominatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskUpdatedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskUpdatedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskUpdatedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskUpdatedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskReassignedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskReassignedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskReassignedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskReassignedEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "beforeTaskNotificationEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void beforeTaskNotificationEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskNotificationEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskNotificationEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "afterTaskNotificationEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void afterTaskNotificationEvent(TaskEvent event)", "full_signature": "@Override public void afterTaskNotificationEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.afterTaskNotificationEvent(TaskEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AsyncTaskLifeCycleEventProducer.hashCode()", "testcase": false, "constructor": false}], "file": "jbpm-human-task/jbpm-human-task-audit/src/main/java/org/jbpm/services/task/audit/jms/AsyncTaskLifeCycleEventProducer.java"}, "focal_method": {"identifier": "beforeTaskReleasedEvent", "parameters": "(TaskEvent event)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void beforeTaskReleasedEvent(TaskEvent event) {\n        String userId = event.getTaskContext().getUserId();\n        Task ti = event.getTask();\n        TaskEventImpl taskEvent = new TaskEventImpl(ti.getId(), org.kie.internal.task.api.model.TaskEvent.TaskEventType.RELEASED, ti.getTaskData().getProcessInstanceId(), ti.getTaskData().getWorkItemId(), userId);\n        sendMessage(new AuditTaskData(null, taskEvent), 7);\n    }", "signature": "void beforeTaskReleasedEvent(TaskEvent event)", "full_signature": "@Override public void beforeTaskReleasedEvent(TaskEvent event)", "class_method_signature": "AsyncTaskLifeCycleEventProducer.beforeTaskReleasedEvent(TaskEvent event)", "testcase": false, "constructor": false, "invocations": ["getUserId", "getTaskContext", "getTask", "getId", "getProcessInstanceId", "getTaskData", "getWorkItemId", "getTaskData", "sendMessage"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}