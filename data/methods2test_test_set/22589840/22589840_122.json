{"test_class": {"identifier": "LockEntryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LockEntry leOne;", "modifier": "private", "type": "LockEntry", "declarator": "leOne", "var_name": "leOne"}, {"original_string": "private LockEntry sameAsLeOne;", "modifier": "private", "type": "LockEntry", "declarator": "sameAsLeOne", "var_name": "sameAsLeOne"}, {"original_string": "private LockEntry leThree;", "modifier": "private", "type": "LockEntry", "declarator": "leThree", "var_name": "leThree"}], "file": "OLAT-LMS/src/test/java/org/olat/system/coordinate/LockEntryTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() {\n        assertFalse(\"Wrong equals implementation, different types are recognized as equals \", leOne.equals(new Integer(1)));\n        assertFalse(\"Wrong equals implementation, different users are recognized as equals \", leOne.equals(leThree));\n        assertFalse(\"Wrong equals implementation, null value is recognized as equals \", leOne.equals(null));\n        assertTrue(\"Wrong equals implementation, same users are NOT recognized as equals \", leOne.equals(leOne));\n        assertTrue(\"Wrong equals implementation, same users are NOT recognized as equals \", leOne.equals(sameAsLeOne));\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "LockEntryTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "LockEntry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long lockAquiredTime;", "modifier": "private", "type": "long", "declarator": "lockAquiredTime", "var_name": "lockAquiredTime"}, {"original_string": "private OLATPrincipal owner;", "modifier": "private", "type": "OLATPrincipal", "declarator": "owner", "var_name": "owner"}, {"original_string": "private final String key;", "modifier": "private final", "type": "String", "declarator": "key", "var_name": "key"}], "methods": [{"identifier": "LockEntry", "parameters": "(String key, long lockAquiredTime, OLATPrincipal owner)", "modifiers": "public", "return": "", "signature": " LockEntry(String key, long lockAquiredTime, OLATPrincipal owner)", "full_signature": "public  LockEntry(String key, long lockAquiredTime, OLATPrincipal owner)", "class_method_signature": "LockEntry.LockEntry(String key, long lockAquiredTime, OLATPrincipal owner)", "testcase": false, "constructor": true}, {"identifier": "getLockAquiredTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLockAquiredTime()", "full_signature": "public long getLockAquiredTime()", "class_method_signature": "LockEntry.getLockAquiredTime()", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "OLATPrincipal", "signature": "OLATPrincipal getOwner()", "full_signature": "public OLATPrincipal getOwner()", "class_method_signature": "LockEntry.getOwner()", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "LockEntry.getKey()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LockEntry.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "LockEntry.equals(Object obj)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/system/coordinate/LockEntry.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + ((key == null) ? 0 : key.hashCode());\n        result = prime * result + ((owner == null) ? 0 : owner.hashCode());\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LockEntry.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}