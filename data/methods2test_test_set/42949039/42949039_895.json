{"test_class": {"identifier": "HttpErrorResponseExceptionTest", "superclass": "extends AbstractDataBridgeTest", "interfaces": "", "fields": [{"original_string": "final int testStatusCode = Integer.MAX_VALUE;", "modifier": "final", "type": "int", "declarator": "testStatusCode = Integer.MAX_VALUE", "var_name": "testStatusCode"}, {"original_string": "final String testStatusDescription = \"Test Status Description\";", "modifier": "final", "type": "String", "declarator": "testStatusDescription = \"Test Status Description\"", "var_name": "testStatusDescription"}, {"original_string": "final String testResponseMessage = \"Test Response Message\";", "modifier": "final", "type": "String", "declarator": "testResponseMessage = \"Test Response Message\"", "var_name": "testResponseMessage"}, {"original_string": "final String testMessage = \"Test Message\";", "modifier": "final", "type": "String", "declarator": "testMessage = \"Test Message\"", "var_name": "testMessage"}, {"original_string": "final Throwable testCause = new Throwable();", "modifier": "final", "type": "Throwable", "declarator": "testCause = new Throwable()", "var_name": "testCause"}], "file": "herd-code/herd-tools/herd-tools-common/src/test/java/org/finra/herd/tools/common/databridge/HttpErrorResponseExceptionTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals()\n    {\n        HttpErrorResponseException testHttpErrorResponseException =\n            new HttpErrorResponseException(testMessage, testStatusCode, testStatusDescription, testResponseMessage);\n\n        Object nullObject = null;\n\n        assertTrue(testHttpErrorResponseException.equals(testHttpErrorResponseException));\n        assertFalse(testHttpErrorResponseException.equals(nullObject));\n        assertFalse(testHttpErrorResponseException.equals(\"\"));\n        assertTrue(testHttpErrorResponseException.equals(new HttpErrorResponseException(testStatusCode, null, null)));\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "HttpErrorResponseExceptionTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "HttpErrorResponseException", "superclass": "extends RuntimeException", "interfaces": "", "fields": [{"original_string": "private int statusCode;", "modifier": "private", "type": "int", "declarator": "statusCode", "var_name": "statusCode"}, {"original_string": "private String statusDescription;", "modifier": "private", "type": "String", "declarator": "statusDescription", "var_name": "statusDescription"}, {"original_string": "private String responseMessage;", "modifier": "private", "type": "String", "declarator": "responseMessage", "var_name": "responseMessage"}], "methods": [{"identifier": "HttpErrorResponseException", "parameters": "(int statusCode, String statusDescription, String responseMessage)", "modifiers": "public", "return": "", "signature": " HttpErrorResponseException(int statusCode, String statusDescription, String responseMessage)", "full_signature": "public  HttpErrorResponseException(int statusCode, String statusDescription, String responseMessage)", "class_method_signature": "HttpErrorResponseException.HttpErrorResponseException(int statusCode, String statusDescription, String responseMessage)", "testcase": false, "constructor": true}, {"identifier": "HttpErrorResponseException", "parameters": "(String message, int statusCode, String statusDescription, String responseMessage)", "modifiers": "public", "return": "", "signature": " HttpErrorResponseException(String message, int statusCode, String statusDescription, String responseMessage)", "full_signature": "public  HttpErrorResponseException(String message, int statusCode, String statusDescription, String responseMessage)", "class_method_signature": "HttpErrorResponseException.HttpErrorResponseException(String message, int statusCode, String statusDescription, String responseMessage)", "testcase": false, "constructor": true}, {"identifier": "HttpErrorResponseException", "parameters": "(String message, Throwable cause, int statusCode, String statusDescription, String responseMessage)", "modifiers": "public", "return": "", "signature": " HttpErrorResponseException(String message, Throwable cause, int statusCode, String statusDescription, String responseMessage)", "full_signature": "public  HttpErrorResponseException(String message, Throwable cause, int statusCode, String statusDescription, String responseMessage)", "class_method_signature": "HttpErrorResponseException.HttpErrorResponseException(String message, Throwable cause, int statusCode, String statusDescription, String responseMessage)", "testcase": false, "constructor": true}, {"identifier": "HttpErrorResponseException", "parameters": "(Throwable cause, int statusCode, String statusDescription, String responseMessage)", "modifiers": "public", "return": "", "signature": " HttpErrorResponseException(Throwable cause, int statusCode, String statusDescription, String responseMessage)", "full_signature": "public  HttpErrorResponseException(Throwable cause, int statusCode, String statusDescription, String responseMessage)", "class_method_signature": "HttpErrorResponseException.HttpErrorResponseException(Throwable cause, int statusCode, String statusDescription, String responseMessage)", "testcase": false, "constructor": true}, {"identifier": "HttpErrorResponseException", "parameters": "(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace, int statusCode,\n        String statusDescription, String responseMessage)", "modifiers": "protected", "return": "", "signature": " HttpErrorResponseException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace, int statusCode,\n        String statusDescription, String responseMessage)", "full_signature": "protected  HttpErrorResponseException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace, int statusCode,\n        String statusDescription, String responseMessage)", "class_method_signature": "HttpErrorResponseException.HttpErrorResponseException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace, int statusCode,\n        String statusDescription, String responseMessage)", "testcase": false, "constructor": true}, {"identifier": "getStatusCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStatusCode()", "full_signature": "public int getStatusCode()", "class_method_signature": "HttpErrorResponseException.getStatusCode()", "testcase": false, "constructor": false}, {"identifier": "getStatusDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStatusDescription()", "full_signature": "public String getStatusDescription()", "class_method_signature": "HttpErrorResponseException.getStatusDescription()", "testcase": false, "constructor": false}, {"identifier": "getResponseMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResponseMessage()", "full_signature": "public String getResponseMessage()", "class_method_signature": "HttpErrorResponseException.getResponseMessage()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HttpErrorResponseException.toString()", "testcase": false, "constructor": false}, {"identifier": "addTextToString", "parameters": "(String text, StringBuilder stringBuilder)", "modifiers": "private", "return": "void", "signature": "void addTextToString(String text, StringBuilder stringBuilder)", "full_signature": "private void addTextToString(String text, StringBuilder stringBuilder)", "class_method_signature": "HttpErrorResponseException.addTextToString(String text, StringBuilder stringBuilder)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "HttpErrorResponseException.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HttpErrorResponseException.hashCode()", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-tools-common/src/main/java/org/finra/herd/tools/common/databridge/HttpErrorResponseException.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object object)\n    {\n        if (this == object)\n        {\n            return true;\n        }\n        if (object == null || getClass() != object.getClass())\n        {\n            return false;\n        }\n\n        HttpErrorResponseException that = (HttpErrorResponseException) object;\n        return statusCode == that.getStatusCode();\n    }", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "HttpErrorResponseException.equals(Object object)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "getStatusCode"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}