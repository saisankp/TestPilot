{"test_class": {"identifier": "ClassGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/UtilityTools/ClassGeneratorJavaCompileAPI/src/test/java/info/smart_tools/smartactors/utility_tool/class_generator_with_java_compile_api/ClassGeneratorTest.java"}, "test_case": {"identifier": "checkInvalidArgumentExceptionOnNullArg", "parameters": "()", "modifiers": "@Test (expected = InvalidArgumentException.class) public", "return": "void", "body": "@Test (expected = InvalidArgumentException.class)\n    public void checkInvalidArgumentExceptionOnNullArg()\n            throws Exception {\n        ClassGenerator classGenerator = new ClassGenerator(null);\n        classGenerator.generate(null);\n        fail();\n    }", "signature": "void checkInvalidArgumentExceptionOnNullArg()", "full_signature": "@Test (expected = InvalidArgumentException.class) public void checkInvalidArgumentExceptionOnNullArg()", "class_method_signature": "ClassGeneratorTest.checkInvalidArgumentExceptionOnNullArg()", "testcase": true, "constructor": false, "invocations": ["generate", "fail"]}, "focal_class": {"identifier": "ClassGenerator", "superclass": "", "interfaces": "implements IClassGenerator<String>", "fields": [{"original_string": "private InMemoryCodeCompiler compiler;", "modifier": "private", "type": "InMemoryCodeCompiler", "declarator": "compiler", "var_name": "compiler"}], "methods": [{"identifier": "ClassGenerator", "parameters": "(final ClassLoader classLoader)", "modifiers": "public", "return": "", "signature": " ClassGenerator(final ClassLoader classLoader)", "full_signature": "public  ClassGenerator(final ClassLoader classLoader)", "class_method_signature": "ClassGenerator.ClassGenerator(final ClassLoader classLoader)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "(final String source)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> generate(final String source)", "full_signature": "@Override public Class<?> generate(final String source)", "class_method_signature": "ClassGenerator.generate(final String source)", "testcase": false, "constructor": false}, {"identifier": "getFirstSubstringByPattern", "parameters": "(final String source, final Pattern pattern)", "modifiers": "private", "return": "String", "signature": "String getFirstSubstringByPattern(final String source, final Pattern pattern)", "full_signature": "private String getFirstSubstringByPattern(final String source, final Pattern pattern)", "class_method_signature": "ClassGenerator.getFirstSubstringByPattern(final String source, final Pattern pattern)", "testcase": false, "constructor": false}], "file": "CoreFeatures/UtilityTools/ClassGeneratorJavaCompileAPI/src/main/java/info/smart_tools/smartactors/utility_tool/class_generator_with_java_compile_api/ClassGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(final String source)", "modifiers": "@Override public", "return": "Class<?>", "body": "@Override\n    public Class<?> generate(final String source)\n            throws ClassGenerationException, InvalidArgumentException {\n\n        if (null == source || source.isEmpty()) {\n            throw new InvalidArgumentException(\"Source code should not be null or empty.\");\n        }\n        String packageName = getFirstSubstringByPattern(source, Pattern.compile(\"package\\\\s+([\\\\w\\\\.]+)\"));\n        String className = getFirstSubstringByPattern(source, Pattern.compile(\"(?:class|interface)\\\\s+(\\\\w+)\"));\n        if (null == packageName || packageName.isEmpty()) {\n            throw new InvalidArgumentException(\"Source code doesn't contain package name.\");\n        }\n        if (null == className || className.isEmpty()) {\n            throw new InvalidArgumentException(\"Source code doesn't contain class.\");\n        }\n        try {\n            String fullClassName = packageName + \".\" + className;\n            Class<?> compiledClass = this.compiler.compile(fullClassName, source);\n            return compiledClass;\n        } catch (Throwable e) {\n            throw new ClassGenerationException(\"Could not generate class.\", e);\n        }\n    }", "signature": "Class<?> generate(final String source)", "full_signature": "@Override public Class<?> generate(final String source)", "class_method_signature": "ClassGenerator.generate(final String source)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getFirstSubstringByPattern", "compile", "getFirstSubstringByPattern", "compile", "isEmpty", "isEmpty", "compile"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}