{"test_class": {"identifier": "PsqlQueryGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "reactive-source-psql/src/test/java/org/reactivesource/psql/PsqlQueryGeneratorTest.java"}, "test_case": {"identifier": "testGenerateDropTriggerCreatesTheCorrectQuery", "parameters": "()", "modifiers": "@Test(groups = SMALL) public", "return": "void", "body": "@Test(groups = SMALL)\n    public void testGenerateDropTriggerCreatesTheCorrectQuery() {\n        String query = PsqlQueryGenerator.generateDropTriggerQuery(\"trigger_name\", \"table_name\");\n        String expected = String.format(\n                \"DROP TRIGGER IF EXISTS %s ON %s\",\n                \"trigger_name\", \"table_name\");\n        assertEquals(query, expected);\n    }", "signature": "void testGenerateDropTriggerCreatesTheCorrectQuery()", "full_signature": "@Test(groups = SMALL) public void testGenerateDropTriggerCreatesTheCorrectQuery()", "class_method_signature": "PsqlQueryGeneratorTest.testGenerateDropTriggerCreatesTheCorrectQuery()", "testcase": true, "constructor": false, "invocations": ["generateDropTriggerQuery", "format", "assertEquals"]}, "focal_class": {"identifier": "PsqlQueryGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CREATE_TRIGGER_TMPLT = \"CREATE TRIGGER %s \"\n            + \"AFTER INSERT OR UPDATE OR DELETE ON %s \"\n            + \"FOR EACH ROW EXECUTE PROCEDURE %s('%s')\";", "modifier": "private static final", "type": "String", "declarator": "CREATE_TRIGGER_TMPLT = \"CREATE TRIGGER %s \"\n            + \"AFTER INSERT OR UPDATE OR DELETE ON %s \"\n            + \"FOR EACH ROW EXECUTE PROCEDURE %s('%s')\"", "var_name": "CREATE_TRIGGER_TMPLT"}, {"original_string": "private static final String DROP_TRIGGER_TMPLT = \"DROP TRIGGER IF EXISTS %s ON %s\";", "modifier": "private static final", "type": "String", "declarator": "DROP_TRIGGER_TMPLT = \"DROP TRIGGER IF EXISTS %s ON %s\"", "var_name": "DROP_TRIGGER_TMPLT"}, {"original_string": "private static final String DROP_PROC_QUERY = \"DROP FUNCTION IF EXISTS %s ()\";", "modifier": "private static final", "type": "String", "declarator": "DROP_PROC_QUERY = \"DROP FUNCTION IF EXISTS %s ()\"", "var_name": "DROP_PROC_QUERY"}], "methods": [{"identifier": "generateCreateTriggerQuery", "parameters": "(String triggerName, String tableName, String procName, String streamName)", "modifiers": "static", "return": "String", "signature": "String generateCreateTriggerQuery(String triggerName, String tableName, String procName, String streamName)", "full_signature": "static String generateCreateTriggerQuery(String triggerName, String tableName, String procName, String streamName)", "class_method_signature": "PsqlQueryGenerator.generateCreateTriggerQuery(String triggerName, String tableName, String procName, String streamName)", "testcase": false, "constructor": false}, {"identifier": "generateDropTriggerQuery", "parameters": "(String triggerName, String tableName)", "modifiers": "static", "return": "String", "signature": "String generateDropTriggerQuery(String triggerName, String tableName)", "full_signature": "static String generateDropTriggerQuery(String triggerName, String tableName)", "class_method_signature": "PsqlQueryGenerator.generateDropTriggerQuery(String triggerName, String tableName)", "testcase": false, "constructor": false}, {"identifier": "generateDropProcQuery", "parameters": "(String procName)", "modifiers": "static", "return": "String", "signature": "String generateDropProcQuery(String procName)", "full_signature": "static String generateDropProcQuery(String procName)", "class_method_signature": "PsqlQueryGenerator.generateDropProcQuery(String procName)", "testcase": false, "constructor": false}], "file": "reactive-source-psql/src/main/java/org/reactivesource/psql/PsqlQueryGenerator.java"}, "focal_method": {"identifier": "generateDropTriggerQuery", "parameters": "(String triggerName, String tableName)", "modifiers": "static", "return": "String", "body": "static String generateDropTriggerQuery(String triggerName, String tableName) {\n        return format(DROP_TRIGGER_TMPLT, triggerName, tableName);\n    }", "signature": "String generateDropTriggerQuery(String triggerName, String tableName)", "full_signature": "static String generateDropTriggerQuery(String triggerName, String tableName)", "class_method_signature": "PsqlQueryGenerator.generateDropTriggerQuery(String triggerName, String tableName)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 18311299, "url": "https://github.com/eBay/reactive-source", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 9, "size": 317, "license": "licensed"}}