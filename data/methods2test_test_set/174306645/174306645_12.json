{"test_class": {"identifier": "SpringRestJobsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CALLBACK_URL = \"http://localhost\";", "modifier": "public static final", "type": "String", "declarator": "CALLBACK_URL = \"http://localhost\"", "var_name": "CALLBACK_URL"}, {"original_string": "public static final String JOB_SERVICE_URL = \"http://localhost:8085\";", "modifier": "public static final", "type": "String", "declarator": "JOB_SERVICE_URL = \"http://localhost:8085\"", "var_name": "JOB_SERVICE_URL"}, {"original_string": "private SpringRestJobsService tested;", "modifier": "private", "type": "SpringRestJobsService", "declarator": "tested", "var_name": "tested"}, {"original_string": "@Mock\n    private RestTemplate restTemplate;", "modifier": "@Mock\n    private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}], "file": "addons/jobs/jobs-management-springboot-addon/src/test/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsServiceTest.java"}, "test_case": {"identifier": "testScheduleProcessJob", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testScheduleProcessJob() {\n        ProcessJobDescription processJobDescription = ProcessJobDescription.of(ExactExpirationTime.now(),\n                                                                               1,\n                                                                               \"processId\");\n        assertThatThrownBy(() -> tested.scheduleProcessJob(processJobDescription))\n                .isInstanceOf(UnsupportedOperationException.class);\n    }", "signature": "void testScheduleProcessJob()", "full_signature": "@Test void testScheduleProcessJob()", "class_method_signature": "SpringRestJobsServiceTest.testScheduleProcessJob()", "testcase": true, "constructor": false, "invocations": ["of", "now", "isInstanceOf", "assertThatThrownBy", "scheduleProcessJob"]}, "focal_class": {"identifier": "SpringRestJobsService", "superclass": "extends RestJobsService", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SpringRestJobsService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SpringRestJobsService.class)", "var_name": "LOGGER"}, {"original_string": "private RestTemplate restTemplate;", "modifier": "private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}], "methods": [{"identifier": "SpringRestJobsService", "parameters": "(\n            @Value(\"${kogito.jobs-service.url}\") String jobServiceUrl,\n            @Value(\"${kogito.service.url}\") String callbackEndpoint,\n            @Autowired(required=false) RestTemplate restTemplate)", "modifiers": "@Autowired public", "return": "", "signature": " SpringRestJobsService(\n            @Value(\"${kogito.jobs-service.url}\") String jobServiceUrl,\n            @Value(\"${kogito.service.url}\") String callbackEndpoint,\n            @Autowired(required=false) RestTemplate restTemplate)", "full_signature": "@Autowired public  SpringRestJobsService(\n            @Value(\"${kogito.jobs-service.url}\") String jobServiceUrl,\n            @Value(\"${kogito.service.url}\") String callbackEndpoint,\n            @Autowired(required=false) RestTemplate restTemplate)", "class_method_signature": "SpringRestJobsService.SpringRestJobsService(\n            @Value(\"${kogito.jobs-service.url}\") String jobServiceUrl,\n            @Value(\"${kogito.service.url}\") String callbackEndpoint,\n            @Autowired(required=false) RestTemplate restTemplate)", "testcase": false, "constructor": true}, {"identifier": "SpringRestJobsService", "parameters": "()", "modifiers": "", "return": "", "signature": " SpringRestJobsService()", "full_signature": "  SpringRestJobsService()", "class_method_signature": "SpringRestJobsService.SpringRestJobsService()", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void initialize()", "full_signature": "@PostConstruct public void initialize()", "class_method_signature": "SpringRestJobsService.initialize()", "testcase": false, "constructor": false}, {"identifier": "scheduleProcessJob", "parameters": "(ProcessJobDescription description)", "modifiers": "@Override public", "return": "String", "signature": "String scheduleProcessJob(ProcessJobDescription description)", "full_signature": "@Override public String scheduleProcessJob(ProcessJobDescription description)", "class_method_signature": "SpringRestJobsService.scheduleProcessJob(ProcessJobDescription description)", "testcase": false, "constructor": false}, {"identifier": "scheduleProcessInstanceJob", "parameters": "(ProcessInstanceJobDescription description)", "modifiers": "@Override public", "return": "String", "signature": "String scheduleProcessInstanceJob(ProcessInstanceJobDescription description)", "full_signature": "@Override public String scheduleProcessInstanceJob(ProcessInstanceJobDescription description)", "class_method_signature": "SpringRestJobsService.scheduleProcessInstanceJob(ProcessInstanceJobDescription description)", "testcase": false, "constructor": false}, {"identifier": "cancelJob", "parameters": "(String id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean cancelJob(String id)", "full_signature": "@Override public boolean cancelJob(String id)", "class_method_signature": "SpringRestJobsService.cancelJob(String id)", "testcase": false, "constructor": false}, {"identifier": "getScheduledTime", "parameters": "(String id)", "modifiers": "@Override public", "return": "ZonedDateTime", "signature": "ZonedDateTime getScheduledTime(String id)", "full_signature": "@Override public ZonedDateTime getScheduledTime(String id)", "class_method_signature": "SpringRestJobsService.getScheduledTime(String id)", "testcase": false, "constructor": false}], "file": "addons/jobs/jobs-management-springboot-addon/src/main/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsService.java"}, "focal_method": {"identifier": "scheduleProcessJob", "parameters": "(ProcessJobDescription description)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String scheduleProcessJob(ProcessJobDescription description) {\n       \n        throw new UnsupportedOperationException(\"Scheduling for process jobs is not yet implemented\");\n    }", "signature": "String scheduleProcessJob(ProcessJobDescription description)", "full_signature": "@Override public String scheduleProcessJob(ProcessJobDescription description)", "class_method_signature": "SpringRestJobsService.scheduleProcessJob(ProcessJobDescription description)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}