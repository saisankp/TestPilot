{"test_class": {"identifier": "ZMSFileChangeLogStoreFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\"", "var_name": "ZTS_DATA_STORE_PATH"}], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/store/impl/ZMSFileChangeLogStoreFactoryTest.java"}, "test_case": {"identifier": "testCreateMTLSClientStoreInvalidUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateMTLSClientStoreInvalidUrl() {\n\n        setupMTLSSettings();\n        System.clearProperty(PROP_ATHENZ_CONF);\n\n        ZMSFileChangeLogStoreFactory factory = new ZMSFileChangeLogStoreFactory();\n        try {\n            factory.create(ZTS_DATA_STORE_PATH, null, null);\n            fail();\n        } catch (Exception ex) {\n            assertTrue(ex instanceof IllegalArgumentException);\n        }\n\n        clearMTLSSettings();\n    }", "signature": "void testCreateMTLSClientStoreInvalidUrl()", "full_signature": "@Test public void testCreateMTLSClientStoreInvalidUrl()", "class_method_signature": "ZMSFileChangeLogStoreFactoryTest.testCreateMTLSClientStoreInvalidUrl()", "testcase": true, "constructor": false, "invocations": ["setupMTLSSettings", "clearProperty", "create", "fail", "assertTrue", "clearMTLSSettings"]}, "focal_class": {"identifier": "ZMSFileChangeLogStoreFactory", "superclass": "", "interfaces": "implements ChangeLogStoreFactory", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ZMSFileChangeLogStoreFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ZMSFileChangeLogStoreFactory.class)", "var_name": "LOGGER"}, {"original_string": "private static final String ZTS_DATA_STORE = \"zts_store\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_DATA_STORE = \"zts_store\"", "var_name": "ZTS_DATA_STORE"}, {"original_string": "private static final String ZTS_SERVER_PROP_KEY_PATH      = \"athenz.common.server.clog.zts_server_key_path\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_SERVER_PROP_KEY_PATH      = \"athenz.common.server.clog.zts_server_key_path\"", "var_name": "ZTS_SERVER_PROP_KEY_PATH"}, {"original_string": "private static final String ZTS_SERVER_PROP_CERT_PATH     = \"athenz.common.server.clog.zts_server_cert_path\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_SERVER_PROP_CERT_PATH     = \"athenz.common.server.clog.zts_server_cert_path\"", "var_name": "ZTS_SERVER_PROP_CERT_PATH"}, {"original_string": "private static final String ZTS_SERVER_PROP_TRUSTORE_PATH      = \"athenz.common.server.clog.zts_server_trust_store_path\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_SERVER_PROP_TRUSTORE_PATH      = \"athenz.common.server.clog.zts_server_trust_store_path\"", "var_name": "ZTS_SERVER_PROP_TRUSTORE_PATH"}, {"original_string": "private static final String ZTS_SERVER_PROP_TRUSTORE_PWD_NAME  = \"athenz.common.server.clog.zts_server_trust_store_password_name\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_SERVER_PROP_TRUSTORE_PWD_NAME  = \"athenz.common.server.clog.zts_server_trust_store_password_name\"", "var_name": "ZTS_SERVER_PROP_TRUSTORE_PWD_NAME"}, {"original_string": "private static final String ZTS_SERVER_PROP_TRUSTORE_PWD_APP   = \"athenz.common.server.clog.zts_server_trust_store_password_app\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_SERVER_PROP_TRUSTORE_PWD_APP   = \"athenz.common.server.clog.zts_server_trust_store_password_app\"", "var_name": "ZTS_SERVER_PROP_TRUSTORE_PWD_APP"}, {"original_string": "private static final String DEFAULT_JDK_TRUSTSTORE_PWD = \"changeit\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_JDK_TRUSTSTORE_PWD = \"changeit\"", "var_name": "DEFAULT_JDK_TRUSTSTORE_PWD"}, {"original_string": "PrivateKeyStore privateKeyStore;", "modifier": "", "type": "PrivateKeyStore", "declarator": "privateKeyStore", "var_name": "privateKeyStore"}], "methods": [{"identifier": "setPrivateKeyStore", "parameters": "(PrivateKeyStore privateKeyStore)", "modifiers": "@Override public", "return": "void", "signature": "void setPrivateKeyStore(PrivateKeyStore privateKeyStore)", "full_signature": "@Override public void setPrivateKeyStore(PrivateKeyStore privateKeyStore)", "class_method_signature": "ZMSFileChangeLogStoreFactory.setPrivateKeyStore(PrivateKeyStore privateKeyStore)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "modifiers": "@Override public", "return": "ChangeLogStore", "signature": "ChangeLogStore create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "full_signature": "@Override public ChangeLogStore create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "class_method_signature": "ZMSFileChangeLogStoreFactory.create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "testcase": false, "constructor": false}, {"identifier": "mtlsClientChangeLogStore", "parameters": "(final String rootDirectory)", "modifiers": "", "return": "ChangeLogStore", "signature": "ChangeLogStore mtlsClientChangeLogStore(final String rootDirectory)", "full_signature": " ChangeLogStore mtlsClientChangeLogStore(final String rootDirectory)", "class_method_signature": "ZMSFileChangeLogStoreFactory.mtlsClientChangeLogStore(final String rootDirectory)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/store/impl/ZMSFileChangeLogStoreFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "modifiers": "@Override public", "return": "ChangeLogStore", "body": "@Override\n    public ChangeLogStore create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId) {\n\n        // if we have mtls settings configured then we should use those\n        // for our client otherwise we'll fall back to our private key access\n\n        final String rootDirectory = ztsHomeDir + File.separator + ZTS_DATA_STORE;\n        ChangeLogStore store = mtlsClientChangeLogStore(rootDirectory);\n        if (store == null) {\n            LOGGER.info(\"mtls client change log store not available\");\n            store = new ZMSFileChangeLogStore(rootDirectory, privateKey, privateKeyId);\n        }\n        return store;\n    }", "signature": "ChangeLogStore create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "full_signature": "@Override public ChangeLogStore create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "class_method_signature": "ZMSFileChangeLogStoreFactory.create(String ztsHomeDir, PrivateKey privateKey, String privateKeyId)", "testcase": false, "constructor": false, "invocations": ["mtlsClientChangeLogStore", "info"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}