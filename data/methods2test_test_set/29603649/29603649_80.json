{"test_class": {"identifier": "FolderIndexerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE_PATH = \"src/test/resources/test-folder1/test-file.txt\";", "modifier": "private static final", "type": "String", "declarator": "FILE_PATH = \"src/test/resources/test-folder1/test-file.txt\"", "var_name": "FILE_PATH"}, {"original_string": "private static final String FOLDER_PATH = \"src/test/resources/test-folder1\";", "modifier": "private static final", "type": "String", "declarator": "FOLDER_PATH = \"src/test/resources/test-folder1\"", "var_name": "FOLDER_PATH"}, {"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private File folder1;", "modifier": "private", "type": "File", "declarator": "folder1", "var_name": "folder1"}, {"original_string": "@Mock\n    private File folder2;", "modifier": "@Mock\n    private", "type": "File", "declarator": "folder2", "var_name": "folder2"}, {"original_string": "@Mock\n    private FileIndexer fileIndexer;", "modifier": "@Mock\n    private", "type": "FileIndexer", "declarator": "fileIndexer", "var_name": "fileIndexer"}, {"original_string": "@InjectMocks\n    private FolderIndexer underTest;", "modifier": "@InjectMocks\n    private", "type": "FolderIndexer", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/test/java/com/epam/wilma/message/search/lucene/index/FolderIndexerTest.java"}, "test_case": {"identifier": "testIndexFolderWhenFolderEmptyShouldDoNothing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIndexFolderWhenFolderEmptyShouldDoNothing() {\n        //GIVEN\n        given(folder2.canRead()).willReturn(true);\n        given(folder2.isDirectory()).willReturn(true);\n        given(folder2.list()).willReturn(null);\n        //WHEN\n        underTest.indexFolder(folder2);\n        //THEN\n        verify(fileIndexer, never()).indexFile(file);\n    }", "signature": "void testIndexFolderWhenFolderEmptyShouldDoNothing()", "full_signature": "@Test public void testIndexFolderWhenFolderEmptyShouldDoNothing()", "class_method_signature": "FolderIndexerTest.testIndexFolderWhenFolderEmptyShouldDoNothing()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "canRead", "willReturn", "given", "isDirectory", "willReturn", "given", "list", "indexFolder", "indexFile", "verify", "never"]}, "focal_class": {"identifier": "FolderIndexer", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileIndexer fileIndexer;", "modifier": "@Autowired\n    private", "type": "FileIndexer", "declarator": "fileIndexer", "var_name": "fileIndexer"}], "methods": [{"identifier": "indexFolder", "parameters": "(final File file)", "modifiers": "public", "return": "void", "signature": "void indexFolder(final File file)", "full_signature": "public void indexFolder(final File file)", "class_method_signature": "FolderIndexer.indexFolder(final File file)", "testcase": false, "constructor": false}, {"identifier": "processFolder", "parameters": "(final File file)", "modifiers": "private", "return": "void", "signature": "void processFolder(final File file)", "full_signature": "private void processFolder(final File file)", "class_method_signature": "FolderIndexer.processFolder(final File file)", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-lucene/src/main/java/com/epam/wilma/message/search/lucene/index/FolderIndexer.java"}, "focal_method": {"identifier": "indexFolder", "parameters": "(final File file)", "modifiers": "public", "return": "void", "body": "public void indexFolder(final File file) {\n        // do not try to index files that cannot be read\n        if (file.canRead()) {\n            if (file.isDirectory()) {\n                processFolder(file);\n            } else {\n                fileIndexer.indexFile(file);\n            }\n        }\n    }", "signature": "void indexFolder(final File file)", "full_signature": "public void indexFolder(final File file)", "class_method_signature": "FolderIndexer.indexFolder(final File file)", "testcase": false, "constructor": false, "invocations": ["canRead", "isDirectory", "processFolder", "indexFile"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}