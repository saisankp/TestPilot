{"test_class": {"identifier": "PublicStrategyDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    PublicStrategyDao publicStrategyDao;", "modifier": "@Autowired", "type": "PublicStrategyDao", "declarator": "publicStrategyDao", "var_name": "publicStrategyDao"}, {"original_string": "PublicStrategy publicStrategy;", "modifier": "", "type": "PublicStrategy", "declarator": "publicStrategy", "var_name": "publicStrategy"}, {"original_string": "PublicStrategy publicStrategyModel;", "modifier": "", "type": "PublicStrategy", "declarator": "publicStrategyModel", "var_name": "publicStrategyModel"}, {"original_string": "Paging<PublicStrategy> paging;", "modifier": "", "type": "Paging<PublicStrategy>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/PublicStrategyDaoTest.java"}, "test_case": {"identifier": "getCountByName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCountByName() throws Exception {\n        Long count = publicStrategyDao.getCountByName(\"publicStrategy\");\n        System.out.println(\"getCountByName :-------> \" + count);\n        Assert.assertTrue(count > 0);\n    }", "signature": "void getCountByName()", "full_signature": "@Test public void getCountByName()", "class_method_signature": "PublicStrategyDaoTest.getCountByName()", "testcase": true, "constructor": false, "invocations": ["getCountByName", "println", "assertTrue"]}, "focal_class": {"identifier": "PublicStrategyDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertPublicStrategy", "parameters": "(PublicStrategy publicStrategy)", "modifiers": "public", "return": "Long", "signature": "Long insertPublicStrategy(PublicStrategy publicStrategy)", "full_signature": "public Long insertPublicStrategy(PublicStrategy publicStrategy)", "class_method_signature": "PublicStrategyDao.insertPublicStrategy(PublicStrategy publicStrategy)", "testcase": false, "constructor": false}, {"identifier": "updatePublicStrategy", "parameters": "(PublicStrategy publicStrategy)", "modifiers": "public", "return": "int", "signature": "int updatePublicStrategy(PublicStrategy publicStrategy)", "full_signature": "public int updatePublicStrategy(PublicStrategy publicStrategy)", "class_method_signature": "PublicStrategyDao.updatePublicStrategy(PublicStrategy publicStrategy)", "testcase": false, "constructor": false}, {"identifier": "getPublicStrategyById", "parameters": "(Long id)", "modifiers": "public", "return": "PublicStrategy", "signature": "PublicStrategy getPublicStrategyById(Long id)", "full_signature": "public PublicStrategy getPublicStrategyById(Long id)", "class_method_signature": "PublicStrategyDao.getPublicStrategyById(Long id)", "testcase": false, "constructor": false}, {"identifier": "getCountByName", "parameters": "(String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByName(String name)", "full_signature": "public Long getCountByName(String name)", "class_method_signature": "PublicStrategyDao.getCountByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCountByIdAndName", "parameters": "(Long id, String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByIdAndName(Long id, String name)", "full_signature": "public Long getCountByIdAndName(Long id, String name)", "class_method_signature": "PublicStrategyDao.getCountByIdAndName(Long id, String name)", "testcase": false, "constructor": false}, {"identifier": "deletePublicStrategy", "parameters": "(PublicStrategy publicStrategy)", "modifiers": "public", "return": "int", "signature": "int deletePublicStrategy(PublicStrategy publicStrategy)", "full_signature": "public int deletePublicStrategy(PublicStrategy publicStrategy)", "class_method_signature": "PublicStrategyDao.deletePublicStrategy(PublicStrategy publicStrategy)", "testcase": false, "constructor": false}, {"identifier": "getAllPublicStrateges", "parameters": "()", "modifiers": "public", "return": "List<PublicStrategy>", "signature": "List<PublicStrategy> getAllPublicStrateges()", "full_signature": "public List<PublicStrategy> getAllPublicStrateges()", "class_method_signature": "PublicStrategyDao.getAllPublicStrateges()", "testcase": false, "constructor": false}, {"identifier": "getPublicStrategyTotalCount", "parameters": "(Paging<PublicStrategy> paging)", "modifiers": "public", "return": "Long", "signature": "Long getPublicStrategyTotalCount(Paging<PublicStrategy> paging)", "full_signature": "public Long getPublicStrategyTotalCount(Paging<PublicStrategy> paging)", "class_method_signature": "PublicStrategyDao.getPublicStrategyTotalCount(Paging<PublicStrategy> paging)", "testcase": false, "constructor": false}, {"identifier": "findPublicStrategyPageList", "parameters": "(Paging<PublicStrategy> paging)", "modifiers": "public", "return": "List<PublicStrategyView>", "signature": "List<PublicStrategyView> findPublicStrategyPageList(Paging<PublicStrategy> paging)", "full_signature": "public List<PublicStrategyView> findPublicStrategyPageList(Paging<PublicStrategy> paging)", "class_method_signature": "PublicStrategyDao.findPublicStrategyPageList(Paging<PublicStrategy> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<PublicStrategy> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<PublicStrategy> paging)", "full_signature": "private String appenWhere(Paging<PublicStrategy> paging)", "class_method_signature": "PublicStrategyDao.appenWhere(Paging<PublicStrategy> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<PublicStrategy> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<PublicStrategy> paging)", "full_signature": "private String appenCondition(Paging<PublicStrategy> paging)", "class_method_signature": "PublicStrategyDao.appenCondition(Paging<PublicStrategy> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/PublicStrategyDao.java"}, "focal_method": {"identifier": "getCountByName", "parameters": "(String name)", "modifiers": "public", "return": "Long", "body": "public Long getCountByName(String name) throws SQLException {\n        return this.getCount(\"SELECT count(1) FROM public_strategy WHERE name='\" + name + \"'\");\n    }", "signature": "Long getCountByName(String name)", "full_signature": "public Long getCountByName(String name)", "class_method_signature": "PublicStrategyDao.getCountByName(String name)", "testcase": false, "constructor": false, "invocations": ["getCount"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}