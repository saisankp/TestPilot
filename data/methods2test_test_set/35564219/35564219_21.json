{"test_class": {"identifier": "SimpleUrlConnectionFactoryTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private MockWebServer mockWebServer;", "modifier": "private", "type": "MockWebServer", "declarator": "mockWebServer", "var_name": "mockWebServer"}, {"original_string": "private URL baseUrl;", "modifier": "private", "type": "URL", "declarator": "baseUrl", "var_name": "baseUrl"}], "file": "library/src/test/java/com/climate/mirage/load/SimpleUrlConnectionFactoryTest.java"}, "test_case": {"identifier": "testRedirectToSame", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRedirectToSame() throws Exception {\n        mockWebServer.enqueue(new MockResponse().setResponseCode(301).\n                setBody(\"redirect\").setHeader(\"Location\", baseUrl + \"/fooey\"));\n        mockWebServer.enqueue(new MockResponse().setResponseCode(301).\n                setBody(\"redirect\").setHeader(\"Location\", baseUrl + \"/fooey\"));\n        mockWebServer.enqueue(new MockResponse().setResponseCode(200).setBody(\"yay!\"));\n\n        SimpleUrlConnectionFactory urlFactory = new SimpleUrlConnectionFactory();\n        try {\n            InputStream inputStream = urlFactory.getStream(Uri.parse(baseUrl.toString()));\n            Assert.fail(\"Redirect to the same URL should fail\");\n        } catch (IOException e) {\n            Assert.assertNotNull(e);\n        }\n    }", "signature": "void testRedirectToSame()", "full_signature": "@Test public void testRedirectToSame()", "class_method_signature": "SimpleUrlConnectionFactoryTest.testRedirectToSame()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setHeader", "setBody", "setResponseCode", "enqueue", "setHeader", "setBody", "setResponseCode", "enqueue", "setBody", "setResponseCode", "getStream", "parse", "toString", "fail", "assertNotNull"]}, "focal_class": {"identifier": "SimpleUrlConnectionFactory", "superclass": "", "interfaces": "implements UrlFactory", "fields": [{"original_string": "private static final int MAX_REDIRECTS = 5;", "modifier": "private static final", "type": "int", "declarator": "MAX_REDIRECTS = 5", "var_name": "MAX_REDIRECTS"}, {"original_string": "private Map<String, String> requestProps;", "modifier": "private", "type": "Map<String, String>", "declarator": "requestProps", "var_name": "requestProps"}], "methods": [{"identifier": "SimpleUrlConnectionFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimpleUrlConnectionFactory()", "full_signature": "public  SimpleUrlConnectionFactory()", "class_method_signature": "SimpleUrlConnectionFactory.SimpleUrlConnectionFactory()", "testcase": false, "constructor": true}, {"identifier": "SimpleUrlConnectionFactory", "parameters": "(Map<String, String> requestProps)", "modifiers": "public", "return": "", "signature": " SimpleUrlConnectionFactory(Map<String, String> requestProps)", "full_signature": "public  SimpleUrlConnectionFactory(Map<String, String> requestProps)", "class_method_signature": "SimpleUrlConnectionFactory.SimpleUrlConnectionFactory(Map<String, String> requestProps)", "testcase": false, "constructor": true}, {"identifier": "getStream", "parameters": "(Uri uri)", "modifiers": "public", "return": "InputStream", "signature": "InputStream getStream(Uri uri)", "full_signature": "public InputStream getStream(Uri uri)", "class_method_signature": "SimpleUrlConnectionFactory.getStream(Uri uri)", "testcase": false, "constructor": false}, {"identifier": "createConnection", "parameters": "(Uri uri, Uri lastUri, int numRedirects)", "modifiers": "private", "return": "InputStream", "signature": "InputStream createConnection(Uri uri, Uri lastUri, int numRedirects)", "full_signature": "private InputStream createConnection(Uri uri, Uri lastUri, int numRedirects)", "class_method_signature": "SimpleUrlConnectionFactory.createConnection(Uri uri, Uri lastUri, int numRedirects)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/load/SimpleUrlConnectionFactory.java"}, "focal_method": {"identifier": "getStream", "parameters": "(Uri uri)", "modifiers": "public", "return": "InputStream", "body": "public InputStream getStream(Uri uri) throws IOException {\n\t\treturn createConnection(uri, null, 0);\n\t}", "signature": "InputStream getStream(Uri uri)", "full_signature": "public InputStream getStream(Uri uri)", "class_method_signature": "SimpleUrlConnectionFactory.getStream(Uri uri)", "testcase": false, "constructor": false, "invocations": ["createConnection"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}