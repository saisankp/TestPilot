{"test_class": {"identifier": "ModuleBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilderTest.java"}, "test_case": {"identifier": "addRegistry", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void addRegistry() {\n        RegistryConfig registry = new RegistryConfig();\n        ModuleBuilder builder = new ModuleBuilder();\n        builder.addRegistry(registry);\n        Assertions.assertTrue(builder.build().getRegistries().contains(registry));\n        Assertions.assertEquals(1, builder.build().getRegistries().size());\n    }", "signature": "void addRegistry()", "full_signature": "@Test void addRegistry()", "class_method_signature": "ModuleBuilderTest.addRegistry()", "testcase": true, "constructor": false, "invocations": ["addRegistry", "assertTrue", "contains", "getRegistries", "build", "assertEquals", "size", "getRegistries", "build"]}, "focal_class": {"identifier": "ModuleBuilder", "superclass": "extends AbstractBuilder<ModuleConfig, ModuleBuilder>", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String owner;", "modifier": "private", "type": "String", "declarator": "owner", "var_name": "owner"}, {"original_string": "private String organization;", "modifier": "private", "type": "String", "declarator": "organization", "var_name": "organization"}, {"original_string": "private List<RegistryConfig> registries;", "modifier": "private", "type": "List<RegistryConfig>", "declarator": "registries", "var_name": "registries"}, {"original_string": "private MonitorConfig monitor;", "modifier": "private", "type": "MonitorConfig", "declarator": "monitor", "var_name": "monitor"}, {"original_string": "private Boolean isDefault;", "modifier": "private", "type": "Boolean", "declarator": "isDefault", "var_name": "isDefault"}], "methods": [{"identifier": "name", "parameters": "(String name)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder name(String name)", "full_signature": "public ModuleBuilder name(String name)", "class_method_signature": "ModuleBuilder.name(String name)", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "(String version)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder version(String version)", "full_signature": "public ModuleBuilder version(String version)", "class_method_signature": "ModuleBuilder.version(String version)", "testcase": false, "constructor": false}, {"identifier": "owner", "parameters": "(String owner)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder owner(String owner)", "full_signature": "public ModuleBuilder owner(String owner)", "class_method_signature": "ModuleBuilder.owner(String owner)", "testcase": false, "constructor": false}, {"identifier": "organization", "parameters": "(String organization)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder organization(String organization)", "full_signature": "public ModuleBuilder organization(String organization)", "class_method_signature": "ModuleBuilder.organization(String organization)", "testcase": false, "constructor": false}, {"identifier": "addRegistries", "parameters": "(List<? extends RegistryConfig> registries)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder addRegistries(List<? extends RegistryConfig> registries)", "full_signature": "public ModuleBuilder addRegistries(List<? extends RegistryConfig> registries)", "class_method_signature": "ModuleBuilder.addRegistries(List<? extends RegistryConfig> registries)", "testcase": false, "constructor": false}, {"identifier": "addRegistry", "parameters": "(RegistryConfig registry)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder addRegistry(RegistryConfig registry)", "full_signature": "public ModuleBuilder addRegistry(RegistryConfig registry)", "class_method_signature": "ModuleBuilder.addRegistry(RegistryConfig registry)", "testcase": false, "constructor": false}, {"identifier": "monitor", "parameters": "(MonitorConfig monitor)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder monitor(MonitorConfig monitor)", "full_signature": "public ModuleBuilder monitor(MonitorConfig monitor)", "class_method_signature": "ModuleBuilder.monitor(MonitorConfig monitor)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "(Boolean isDefault)", "modifiers": "public", "return": "ModuleBuilder", "signature": "ModuleBuilder isDefault(Boolean isDefault)", "full_signature": "public ModuleBuilder isDefault(Boolean isDefault)", "class_method_signature": "ModuleBuilder.isDefault(Boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ModuleConfig", "signature": "ModuleConfig build()", "full_signature": "public ModuleConfig build()", "class_method_signature": "ModuleBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "getThis", "parameters": "()", "modifiers": "@Override protected", "return": "ModuleBuilder", "signature": "ModuleBuilder getThis()", "full_signature": "@Override protected ModuleBuilder getThis()", "class_method_signature": "ModuleBuilder.getThis()", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilder.java"}, "focal_method": {"identifier": "addRegistry", "parameters": "(RegistryConfig registry)", "modifiers": "public", "return": "ModuleBuilder", "body": "public ModuleBuilder addRegistry(RegistryConfig registry) {\n        if (this.registries == null) {\n            this.registries = new ArrayList<>();\n        }\n        this.registries.add(registry);\n        return getThis();\n    }", "signature": "ModuleBuilder addRegistry(RegistryConfig registry)", "full_signature": "public ModuleBuilder addRegistry(RegistryConfig registry)", "class_method_signature": "ModuleBuilder.addRegistry(RegistryConfig registry)", "testcase": false, "constructor": false, "invocations": ["add", "getThis"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}