{"test_class": {"identifier": "EmbeddedNeo4jXOProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final EmbeddedNeo4jXOProvider provider = new EmbeddedNeo4jXOProvider();", "modifier": "private final", "type": "EmbeddedNeo4jXOProvider", "declarator": "provider = new EmbeddedNeo4jXOProvider()", "var_name": "provider"}], "file": "neo4j/embedded/src/test/java/com/buschmais/xo/neo4j/embedded/api/EmbeddedNeo4jXOProviderTest.java"}, "test_case": {"identifier": "lookupTests", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void lookupTests() throws Exception {\n        assertEquals(FileDatastoreFactory.class, provider.lookupFactory(new URI(\"file://foo/\")).getClass());\n        assertEquals(MemoryDatastoreFactory.class, provider.lookupFactory(new URI(\"memory:///\")).getClass());\n        assertEquals(GraphDbDatastoreFactory.class, provider.lookupFactory(new URI(\"graphDb:///\")).getClass());\n    }", "signature": "void lookupTests()", "full_signature": "@Test public void lookupTests()", "class_method_signature": "EmbeddedNeo4jXOProviderTest.lookupTests()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "lookupFactory", "assertEquals", "getClass", "lookupFactory", "assertEquals", "getClass", "lookupFactory"]}, "focal_class": {"identifier": "EmbeddedNeo4jXOProvider", "superclass": "", "interfaces": "implements XODatastoreProvider", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(EmbeddedNeo4jXOProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(EmbeddedNeo4jXOProvider.class)", "var_name": "LOG"}], "methods": [{"identifier": "createDatastore", "parameters": "(XOUnit xoUnit)", "modifiers": "@Override public", "return": "Datastore<?, ?, ?, ?, ?>", "signature": "Datastore<?, ?, ?, ?, ?> createDatastore(XOUnit xoUnit)", "full_signature": "@Override public Datastore<?, ?, ?, ?, ?> createDatastore(XOUnit xoUnit)", "class_method_signature": "EmbeddedNeo4jXOProvider.createDatastore(XOUnit xoUnit)", "testcase": false, "constructor": false}, {"identifier": "lookupFactory", "parameters": "(URI uri)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "DatastoreFactory", "signature": "DatastoreFactory lookupFactory(URI uri)", "full_signature": "@SuppressWarnings(\"unchecked\") DatastoreFactory lookupFactory(URI uri)", "class_method_signature": "EmbeddedNeo4jXOProvider.lookupFactory(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getFactoryClassName", "parameters": "(URI uri)", "modifiers": "private", "return": "String", "signature": "String getFactoryClassName(URI uri)", "full_signature": "private String getFactoryClassName(URI uri)", "class_method_signature": "EmbeddedNeo4jXOProvider.getFactoryClassName(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationProperties", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends Enum<? extends ConfigurationProperty>>", "signature": "Class<? extends Enum<? extends ConfigurationProperty>> getConfigurationProperties()", "full_signature": "@Override public Class<? extends Enum<? extends ConfigurationProperty>> getConfigurationProperties()", "class_method_signature": "EmbeddedNeo4jXOProvider.getConfigurationProperties()", "testcase": false, "constructor": false}], "file": "neo4j/embedded/src/main/java/com/buschmais/xo/neo4j/embedded/api/EmbeddedNeo4jXOProvider.java"}, "focal_method": {"identifier": "lookupFactory", "parameters": "(URI uri)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "DatastoreFactory", "body": "@SuppressWarnings(\"unchecked\")\n    DatastoreFactory lookupFactory(URI uri) {\n        String factoryClass = getFactoryClassName(uri);\n        LOG.debug(\"try to lookup provider-class {}\", factoryClass);\n\n        try {\n            return ((Class<? extends DatastoreFactory>) Class.forName(factoryClass)).newInstance();\n        } catch (ReflectiveOperationException e) {\n            throw new XOException(\"Cannot create datastore factory.\", e);\n        }\n    }", "signature": "DatastoreFactory lookupFactory(URI uri)", "full_signature": "@SuppressWarnings(\"unchecked\") DatastoreFactory lookupFactory(URI uri)", "class_method_signature": "EmbeddedNeo4jXOProvider.lookupFactory(URI uri)", "testcase": false, "constructor": false, "invocations": ["getFactoryClassName", "debug", "newInstance", "forName"]}, "repository": {"repo_id": 14117014, "url": "https://github.com/buschmais/extended-objects", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 23, "size": 9542, "license": "licensed"}}