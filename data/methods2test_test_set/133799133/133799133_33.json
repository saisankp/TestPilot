{"test_class": {"identifier": "LegalAddressAttributeTest", "superclass": "", "interfaces": "", "fields": [], "file": "eidas-starterkit/src/test/java/de/governikus/eumw/eidasstarterkit/person_attributes/legal_persons_attributes/LegalAddressAttributeTest.java"}, "test_case": {"identifier": "testGenerateCurrentAddressAttribute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGenerateCurrentAddressAttribute() throws IOException\n  {\n    String locatorDesignator = \"locatorDesignator\";\n    String thoroughfare = \"thoroughfare\";\n    String postName = \"postName\";\n    String postCode = \"postCode\";\n    String pOBOX = \"pOBOX\";\n    String locatorName = \"locatorName\";\n    String cvaddressArea = \"cvaddressArea\";\n    String adminunitFirstline = \"adminunitFirstline\";\n    String adminunitSecondline = \"adminunitSecondline\";\n\n    CurrentAddressAttribute attribute = new CurrentAddressAttribute(locatorDesignator, thoroughfare, postName,\n                                                                    postCode, pOBOX, locatorName,\n                                                                    cvaddressArea, adminunitFirstline,\n                                                                    adminunitSecondline);\n    TemplateLoader.init();\n    String xml = attribute.generate();\n\n    Assertions.assertTrue(StringUtils.isNotEmpty(xml));\n    String substringBetween = StringUtils.substringBetween(xml,\n                                                           \"<saml2:AttributeValue xsi:type=\\\"eidas:CurrentAddressType\\\">\",\n                                                           \"</saml2:AttributeValue>\");\n    Assertions.assertTrue(StringUtils.isNotEmpty(substringBetween));\n    String base64Decoded = Utils.fromBase64(substringBetween);\n    Assertions.assertTrue(StringUtils.isNotEmpty(base64Decoded));\n    Assertions.assertTrue(base64Decoded.contains(\"locatorDesignator\"));\n    Assertions.assertTrue(base64Decoded.contains(\"thoroughfare\"));\n    Assertions.assertTrue(base64Decoded.contains(\"postName\"));\n    Assertions.assertTrue(base64Decoded.contains(\"postCode\"));\n    Assertions.assertTrue(base64Decoded.contains(\"locatorName\"));\n    Assertions.assertTrue(base64Decoded.contains(\"cvaddressArea\"));\n    Assertions.assertTrue(base64Decoded.contains(\"adminunitFirstline\"));\n    Assertions.assertTrue(base64Decoded.contains(\"adminunitSecondline\"));\n  }", "signature": "void testGenerateCurrentAddressAttribute()", "full_signature": "@Test public void testGenerateCurrentAddressAttribute()", "class_method_signature": "LegalAddressAttributeTest.testGenerateCurrentAddressAttribute()", "testcase": true, "constructor": false, "invocations": ["init", "generate", "assertTrue", "isNotEmpty", "substringBetween", "assertTrue", "isNotEmpty", "fromBase64", "assertTrue", "isNotEmpty", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "LegalAddressAttribute", "superclass": "extends CurrentAddressAttribute", "interfaces": "", "fields": [], "methods": [{"identifier": "LegalAddressAttribute", "parameters": "(String locatorDesignator,\n                               String thoroughfare,\n                               String postName,\n                               String postCode,\n                               String pOBOX,\n                               String locatorName,\n                               String cvaddressArea,\n                               String adminunitFirstline,\n                               String adminunitSecondline)", "modifiers": "public", "return": "", "signature": " LegalAddressAttribute(String locatorDesignator,\n                               String thoroughfare,\n                               String postName,\n                               String postCode,\n                               String pOBOX,\n                               String locatorName,\n                               String cvaddressArea,\n                               String adminunitFirstline,\n                               String adminunitSecondline)", "full_signature": "public  LegalAddressAttribute(String locatorDesignator,\n                               String thoroughfare,\n                               String postName,\n                               String postCode,\n                               String pOBOX,\n                               String locatorName,\n                               String cvaddressArea,\n                               String adminunitFirstline,\n                               String adminunitSecondline)", "class_method_signature": "LegalAddressAttribute.LegalAddressAttribute(String locatorDesignator,\n                               String thoroughfare,\n                               String postName,\n                               String postCode,\n                               String pOBOX,\n                               String locatorName,\n                               String cvaddressArea,\n                               String adminunitFirstline,\n                               String adminunitSecondline)", "testcase": false, "constructor": true}, {"identifier": "LegalAddressAttribute", "parameters": "(String xmlString)", "modifiers": "public", "return": "", "signature": " LegalAddressAttribute(String xmlString)", "full_signature": "public  LegalAddressAttribute(String xmlString)", "class_method_signature": "LegalAddressAttribute.LegalAddressAttribute(String xmlString)", "testcase": false, "constructor": true}, {"identifier": "LegalAddressAttribute", "parameters": "()", "modifiers": "public", "return": "", "signature": " LegalAddressAttribute()", "full_signature": "public  LegalAddressAttribute()", "class_method_signature": "LegalAddressAttribute.LegalAddressAttribute()", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String generate()", "full_signature": "@Override public String generate()", "class_method_signature": "LegalAddressAttribute.generate()", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "()", "modifiers": "@Override public", "return": "EidasAttributeType", "signature": "EidasAttributeType type()", "full_signature": "@Override public EidasAttributeType type()", "class_method_signature": "LegalAddressAttribute.type()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LegalAddressAttribute.toString()", "testcase": false, "constructor": false}, {"identifier": "getPersonAttributeType", "parameters": "()", "modifiers": "@Override public", "return": "EidasPersonAttributes", "signature": "EidasPersonAttributes getPersonAttributeType()", "full_signature": "@Override public EidasPersonAttributes getPersonAttributeType()", "class_method_signature": "LegalAddressAttribute.getPersonAttributeType()", "testcase": false, "constructor": false}], "file": "eidas-starterkit/src/main/java/de/governikus/eumw/eidasstarterkit/person_attributes/legal_persons_attributes/LegalAddressAttribute.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String generate()\n  {\n    String value = super.getLatinScript();\n    return TemplateLoader.getTemplateByName(\"legalpersonaddress\").replace(\"$base64Value\",\n                                                                          Utils.toBase64(value));\n  }", "signature": "String generate()", "full_signature": "@Override public String generate()", "class_method_signature": "LegalAddressAttribute.generate()", "testcase": false, "constructor": false, "invocations": ["getLatinScript", "replace", "getTemplateByName", "toBase64"]}, "repository": {"repo_id": 133799133, "url": "https://github.com/Governikus/eidas-middleware", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 15, "size": 2286, "license": "licensed"}}