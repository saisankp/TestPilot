{"test_class": {"identifier": "DemoServerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DemoServer server;", "modifier": "private", "type": "DemoServer", "declarator": "server", "var_name": "server"}, {"original_string": "private HttpURLConnectionApiClient client;", "modifier": "private", "type": "HttpURLConnectionApiClient", "declarator": "client", "var_name": "client"}], "file": "action-controller-demo-app/src/test/java/org/actioncontrollerdemo/jdkhttp/DemoServerTest.java"}, "test_case": {"identifier": "shouldShowJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldShowJson() throws IOException {\n        HttpURLConnection connection = (HttpURLConnection) new URL(server.getURL() + \"/demo/openapi.yaml\").openConnection();\n        assertThat(connection.getResponseCode()).isEqualTo(200);\n        StringWriter writer = new StringWriter();\n        new BufferedReader(new InputStreamReader(connection.getInputStream())).transferTo(writer);\n        assertThat(writer.toString())\n                .contains(\"Swagger Petstore\");\n    }", "signature": "void shouldShowJson()", "full_signature": "@Test public void shouldShowJson()", "class_method_signature": "DemoServerTest.shouldShowJson()", "testcase": true, "constructor": false, "invocations": ["openConnection", "getURL", "isEqualTo", "assertThat", "getResponseCode", "transferTo", "getInputStream", "contains", "assertThat", "toString"]}, "focal_class": {"identifier": "DemoServer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final HttpServer httpServer;", "modifier": "private final", "type": "HttpServer", "declarator": "httpServer", "var_name": "httpServer"}], "methods": [{"identifier": "DemoServer", "parameters": "(InetSocketAddress inetSocketAddress)", "modifiers": "public", "return": "", "signature": " DemoServer(InetSocketAddress inetSocketAddress)", "full_signature": "public  DemoServer(InetSocketAddress inetSocketAddress)", "class_method_signature": "DemoServer.DemoServer(InetSocketAddress inetSocketAddress)", "testcase": false, "constructor": true}, {"identifier": "DemoServer", "parameters": "(int port)", "modifiers": "public", "return": "", "signature": " DemoServer(int port)", "full_signature": "public  DemoServer(int port)", "class_method_signature": "DemoServer.DemoServer(int port)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "DemoServer.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(int delay)", "modifiers": "public", "return": "void", "signature": "void stop(int delay)", "full_signature": "public void stop(int delay)", "class_method_signature": "DemoServer.stop(int delay)", "testcase": false, "constructor": false}, {"identifier": "getURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getURL()", "full_signature": "public String getURL()", "class_method_signature": "DemoServer.getURL()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "DemoServer.main(String[] args)", "testcase": false, "constructor": false}], "file": "action-controller-demo-app/src/main/java/org/actioncontrollerdemo/jdkhttp/DemoServer.java"}, "focal_method": {"identifier": "getURL", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getURL() {\n        //return \"http://\" + httpServer.getAddress().getHostString() + \":\" + httpServer.getAddress().getPort();\n        return \"http://\" + \"localhost\" + \":\" + httpServer.getAddress().getPort();\n    }", "signature": "String getURL()", "full_signature": "public String getURL()", "class_method_signature": "DemoServer.getURL()", "testcase": false, "constructor": false, "invocations": ["getPort", "getAddress"]}, "repository": {"repo_id": 170412315, "url": "https://github.com/jhannes/action-controller", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 1800, "license": "licensed"}}