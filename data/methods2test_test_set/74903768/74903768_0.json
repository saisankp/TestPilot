{"test_class": {"identifier": "ConfigurationPropertiesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AssetManager assetManager;", "modifier": "@Mock\n    private", "type": "AssetManager", "declarator": "assetManager", "var_name": "assetManager"}], "file": "configuration-lib/src/test/java/ee/ria/DigiDoc/configuration/ConfigurationPropertiesTest.java"}, "test_case": {"identifier": "loadProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void loadProperties() throws IOException {\n        when(assetManager.open(anyString())).thenReturn(getClass().getClassLoader().getResourceAsStream(ConfigurationProperties.PROPERTIES_FILE_NAME));\n        ConfigurationProperties configurationProperties = new ConfigurationProperties(assetManager);\n        assertEquals(\"https://id.eesti.ee/\", configurationProperties.getCentralConfigurationServiceUrl());\n        assertSame(7, configurationProperties.getConfigurationUpdateInterval());\n    }", "signature": "void loadProperties()", "full_signature": "@Test public void loadProperties()", "class_method_signature": "ConfigurationPropertiesTest.loadProperties()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "open", "anyString", "getResourceAsStream", "getClassLoader", "getClass", "assertEquals", "getCentralConfigurationServiceUrl", "assertSame", "getConfigurationUpdateInterval"]}, "focal_class": {"identifier": "ConfigurationProperties", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CENTRAL_CONFIGURATION_SERVICE_URL_PROPERTY = \"central-configuration-service.url\";", "modifier": "public static final", "type": "String", "declarator": "CENTRAL_CONFIGURATION_SERVICE_URL_PROPERTY = \"central-configuration-service.url\"", "var_name": "CENTRAL_CONFIGURATION_SERVICE_URL_PROPERTY"}, {"original_string": "public static final String CONFIGURATION_UPDATE_INTERVAL_PROPERTY = \"configuration.update-interval\";", "modifier": "public static final", "type": "String", "declarator": "CONFIGURATION_UPDATE_INTERVAL_PROPERTY = \"configuration.update-interval\"", "var_name": "CONFIGURATION_UPDATE_INTERVAL_PROPERTY"}, {"original_string": "public static final String CONFIGURATION_VERSION_SERIAL_PROPERTY = \"configuration.version-serial\";", "modifier": "public static final", "type": "String", "declarator": "CONFIGURATION_VERSION_SERIAL_PROPERTY = \"configuration.version-serial\"", "var_name": "CONFIGURATION_VERSION_SERIAL_PROPERTY"}, {"original_string": "public static final String CONFIGURATION_DOWNLOAD_DATE_PROPERTY = \"configuration.download-date\";", "modifier": "public static final", "type": "String", "declarator": "CONFIGURATION_DOWNLOAD_DATE_PROPERTY = \"configuration.download-date\"", "var_name": "CONFIGURATION_DOWNLOAD_DATE_PROPERTY"}, {"original_string": "public static final String PROPERTIES_FILE_NAME = \"configuration.properties\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTIES_FILE_NAME = \"configuration.properties\"", "var_name": "PROPERTIES_FILE_NAME"}, {"original_string": "private final SimpleDateFormat dateFormat;", "modifier": "private final", "type": "SimpleDateFormat", "declarator": "dateFormat", "var_name": "dateFormat"}, {"original_string": "private Properties properties;", "modifier": "private", "type": "Properties", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "ConfigurationProperties", "parameters": "(AssetManager assetManager)", "modifiers": "public", "return": "", "signature": " ConfigurationProperties(AssetManager assetManager)", "full_signature": "public  ConfigurationProperties(AssetManager assetManager)", "class_method_signature": "ConfigurationProperties.ConfigurationProperties(AssetManager assetManager)", "testcase": false, "constructor": true}, {"identifier": "getConfigurationVersionSerial", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getConfigurationVersionSerial()", "full_signature": "public int getConfigurationVersionSerial()", "class_method_signature": "ConfigurationProperties.getConfigurationVersionSerial()", "testcase": false, "constructor": false}, {"identifier": "getCentralConfigurationServiceUrl", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getCentralConfigurationServiceUrl()", "full_signature": " String getCentralConfigurationServiceUrl()", "class_method_signature": "ConfigurationProperties.getCentralConfigurationServiceUrl()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationUpdateInterval", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getConfigurationUpdateInterval()", "full_signature": " int getConfigurationUpdateInterval()", "class_method_signature": "ConfigurationProperties.getConfigurationUpdateInterval()", "testcase": false, "constructor": false}, {"identifier": "getPackagedConfigurationInitialDownloadDate", "parameters": "()", "modifiers": "", "return": "Date", "signature": "Date getPackagedConfigurationInitialDownloadDate()", "full_signature": " Date getPackagedConfigurationInitialDownloadDate()", "class_method_signature": "ConfigurationProperties.getPackagedConfigurationInitialDownloadDate()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "", "return": "Properties", "signature": "Properties getProperties()", "full_signature": " Properties getProperties()", "class_method_signature": "ConfigurationProperties.getProperties()", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "(InputStream inputStream)", "modifiers": "private", "return": "void", "signature": "void loadProperties(InputStream inputStream)", "full_signature": "private void loadProperties(InputStream inputStream)", "class_method_signature": "ConfigurationProperties.loadProperties(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "configuration-lib/src/main/java/ee/ria/DigiDoc/configuration/ConfigurationProperties.java"}, "focal_method": {"identifier": "loadProperties", "parameters": "(InputStream inputStream)", "modifiers": "private", "return": "void", "body": "private void loadProperties(InputStream inputStream) {\n        try {\n            properties = new Properties();\n            properties.load(inputStream);\n        } catch (IOException e) {\n            throw new IllegalStateException(\"Failed to load properties \" + PROPERTIES_FILE_NAME + \" file from assets\", e);\n        }\n    }", "signature": "void loadProperties(InputStream inputStream)", "full_signature": "private void loadProperties(InputStream inputStream)", "class_method_signature": "ConfigurationProperties.loadProperties(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["load"]}, "repository": {"repo_id": 74903768, "url": "https://github.com/open-eid/MOPP-Android", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 9, "size": 526035, "license": "licensed"}}