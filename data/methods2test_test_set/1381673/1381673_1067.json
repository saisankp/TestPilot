{"test_class": {"identifier": "PMMLLoaderServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String PACKAGE_NAME = \"apackage\";", "modifier": "private final", "type": "String", "declarator": "PACKAGE_NAME = \"apackage\"", "var_name": "PACKAGE_NAME"}], "file": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/service/PMMLLoaderServiceTest.java"}, "test_case": {"identifier": "loadPMMLRuleMappersEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void loadPMMLRuleMappersEmpty() {\n        final KnowledgeBuilderImpl kbuilderImpl = new KnowledgeBuilderImpl();\n        assertTrue(kbuilderImpl.getPackageNames().isEmpty());\n        assertNull(kbuilderImpl.getPackage(PACKAGE_NAME));\n        final List<PMMLRuleMapper> pmmlRuleMappers = Collections.emptyList();\n        PMMLLoaderService.loadPMMLRuleMappers(kbuilderImpl, pmmlRuleMappers);\n        assertTrue(kbuilderImpl.getPackageNames().isEmpty());\n        assertNull(kbuilderImpl.getPackage(PACKAGE_NAME));\n    }", "signature": "void loadPMMLRuleMappersEmpty()", "full_signature": "@Test public void loadPMMLRuleMappersEmpty()", "class_method_signature": "PMMLLoaderServiceTest.loadPMMLRuleMappersEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "getPackageNames", "assertNull", "getPackage", "emptyList", "loadPMMLRuleMappers", "assertTrue", "isEmpty", "getPackageNames", "assertNull", "getPackage"]}, "focal_class": {"identifier": "PMMLLoaderService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PMMLLoaderService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PMMLLoaderService.class)", "var_name": "logger"}], "methods": [{"identifier": "PMMLLoaderService", "parameters": "()", "modifiers": "private", "return": "", "signature": " PMMLLoaderService()", "full_signature": "private  PMMLLoaderService()", "class_method_signature": "PMMLLoaderService.PMMLLoaderService()", "testcase": false, "constructor": true}, {"identifier": "getKiePMMLModelsLoadedFromResourcesWithConfigurations", "parameters": "(KnowledgeBuilderImpl kbuilderImpl, Collection<ResourceWithConfiguration> resourceWithConfigurations)", "modifiers": "public static", "return": "List<KiePMMLModel>", "signature": "List<KiePMMLModel> getKiePMMLModelsLoadedFromResourcesWithConfigurations(KnowledgeBuilderImpl kbuilderImpl, Collection<ResourceWithConfiguration> resourceWithConfigurations)", "full_signature": "public static List<KiePMMLModel> getKiePMMLModelsLoadedFromResourcesWithConfigurations(KnowledgeBuilderImpl kbuilderImpl, Collection<ResourceWithConfiguration> resourceWithConfigurations)", "class_method_signature": "PMMLLoaderService.getKiePMMLModelsLoadedFromResourcesWithConfigurations(KnowledgeBuilderImpl kbuilderImpl, Collection<ResourceWithConfiguration> resourceWithConfigurations)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLModelsLoadedFromResource", "parameters": "(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                        final Resource resource)", "modifiers": "public static", "return": "List<KiePMMLModel>", "signature": "List<KiePMMLModel> getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                        final Resource resource)", "full_signature": "public static List<KiePMMLModel> getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                        final Resource resource)", "class_method_signature": "PMMLLoaderService.getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                        final Resource resource)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLModelsLoadedFromResource", "parameters": "(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                 final KiePMMLModelFactory kiePMMLModelFactory,\n                                                                 final List<PMMLRuleMapper> pmmlRuleMappers)", "modifiers": "static", "return": "List<KiePMMLModel>", "signature": "List<KiePMMLModel> getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                 final KiePMMLModelFactory kiePMMLModelFactory,\n                                                                 final List<PMMLRuleMapper> pmmlRuleMappers)", "full_signature": "static List<KiePMMLModel> getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                 final KiePMMLModelFactory kiePMMLModelFactory,\n                                                                 final List<PMMLRuleMapper> pmmlRuleMappers)", "class_method_signature": "PMMLLoaderService.getKiePMMLModelsLoadedFromResource(final KnowledgeBuilderImpl kbuilderImpl,\n                                                                 final KiePMMLModelFactory kiePMMLModelFactory,\n                                                                 final List<PMMLRuleMapper> pmmlRuleMappers)", "testcase": false, "constructor": false}, {"identifier": "loadPMMLRuleMappers", "parameters": "(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "modifiers": "static", "return": "void", "signature": "void loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "full_signature": "static void loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "class_method_signature": "PMMLLoaderService.loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "testcase": false, "constructor": false}, {"identifier": "loadKiePMMLModelFactory", "parameters": "(ClassLoader classLoader, String fullFactoryClassName)", "modifiers": "private static", "return": "KiePMMLModelFactory", "signature": "KiePMMLModelFactory loadKiePMMLModelFactory(ClassLoader classLoader, String fullFactoryClassName)", "full_signature": "private static KiePMMLModelFactory loadKiePMMLModelFactory(ClassLoader classLoader, String fullFactoryClassName)", "class_method_signature": "PMMLLoaderService.loadKiePMMLModelFactory(ClassLoader classLoader, String fullFactoryClassName)", "testcase": false, "constructor": false}, {"identifier": "loadPMMLRuleMappers", "parameters": "(final ClassLoader classLoader,\n                                                            final Resource resource)", "modifiers": "private static", "return": "List<PMMLRuleMapper>", "signature": "List<PMMLRuleMapper> loadPMMLRuleMappers(final ClassLoader classLoader,\n                                                            final Resource resource)", "full_signature": "private static List<PMMLRuleMapper> loadPMMLRuleMappers(final ClassLoader classLoader,\n                                                            final Resource resource)", "class_method_signature": "PMMLLoaderService.loadPMMLRuleMappers(final ClassLoader classLoader,\n                                                            final Resource resource)", "testcase": false, "constructor": false}, {"identifier": "loadPMMLRuleMappersClass", "parameters": "(final ClassLoader classLoader,\n                                                                      final Resource resource)", "modifiers": "private static", "return": "Optional<PMMLRuleMappers>", "signature": "Optional<PMMLRuleMappers> loadPMMLRuleMappersClass(final ClassLoader classLoader,\n                                                                      final Resource resource)", "full_signature": "private static Optional<PMMLRuleMappers> loadPMMLRuleMappersClass(final ClassLoader classLoader,\n                                                                      final Resource resource)", "class_method_signature": "PMMLLoaderService.loadPMMLRuleMappersClass(final ClassLoader classLoader,\n                                                                      final Resource resource)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLLoaderService.java"}, "focal_method": {"identifier": "loadPMMLRuleMappers", "parameters": "(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "modifiers": "static", "return": "void", "body": "static void loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers) {\n        if (!pmmlRuleMappers.isEmpty()) {\n            List<Model> models =\n                    pmmlRuleMappers.stream()\n                            .map(PMMLRuleMapper::getModel)\n                            .collect(Collectors.toList());\n            KnowledgeBuilderImpl temp = new KnowledgeBuilderImpl(KieBaseBuilder.createKieBaseFromModel(models));\n            for (KiePackage kiePackage : temp.getKnowledgeBase().getKiePackages()) {\n                kbuilderImpl.addPackage((InternalKnowledgePackage) kiePackage);\n            }\n        }\n    }", "signature": "void loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "full_signature": "static void loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "class_method_signature": "PMMLLoaderService.loadPMMLRuleMappers(final KnowledgeBuilderImpl kbuilderImpl,\n                                    final List<PMMLRuleMapper> pmmlRuleMappers)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "collect", "map", "stream", "toList", "createKieBaseFromModel", "getKiePackages", "getKnowledgeBase", "addPackage"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}