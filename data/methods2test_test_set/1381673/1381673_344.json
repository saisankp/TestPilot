{"test_class": {"identifier": "ListContainsFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ListContainsFunction listContainsFunction;", "modifier": "private", "type": "ListContainsFunction", "declarator": "listContainsFunction", "var_name": "listContainsFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/ListContainsFunctionTest.java"}, "test_case": {"identifier": "invokeContainsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeContainsNull() {\n        FunctionTestUtil.assertResult(listContainsFunction.invoke(Collections.singletonList(null), null), true);\n        FunctionTestUtil.assertResult(listContainsFunction.invoke(Arrays.asList(1, null), null), true);\n        FunctionTestUtil.assertResult(listContainsFunction.invoke(Arrays.asList(null, 1), null), true);\n    }", "signature": "void invokeContainsNull()", "full_signature": "@Test public void invokeContainsNull()", "class_method_signature": "ListContainsFunctionTest.invokeContainsNull()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "singletonList", "assertResult", "invoke", "asList", "assertResult", "invoke", "asList"]}, "focal_class": {"identifier": "ListContainsFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "ListContainsFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " ListContainsFunction()", "full_signature": "public  ListContainsFunction()", "class_method_signature": "ListContainsFunction.ListContainsFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "class_method_signature": "ListContainsFunction.invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/ListContainsFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "body": "public FEELFnResult<Boolean> invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element) {\n        if ( list == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"list\", \"cannot be null\"));\n        } else {\n            if (element == null) {\n                return FEELFnResult.ofResult(list.contains(element));\n            } else {\n                Object e = EvalHelper.coerceNumber(element);\n                boolean found = false;\n                ListIterator<?> it = list.listIterator();\n                while (it.hasNext() && !found) {\n                    Object next = EvalHelper.coerceNumber(it.next());\n                    found = e.equals(next);\n                }\n                return FEELFnResult.ofResult(found);\n            }\n        }\n    }", "signature": "FEELFnResult<Boolean> invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "class_method_signature": "ListContainsFunction.invoke(@ParameterName(\"list\") List list, @ParameterName(\"element\") Object element)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofResult", "contains", "coerceNumber", "listIterator", "hasNext", "coerceNumber", "next", "equals", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}