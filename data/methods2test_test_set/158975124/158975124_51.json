{"test_class": {"identifier": "GroupByFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GroupByFilter groupByFilter;", "modifier": "private", "type": "GroupByFilter", "declarator": "groupByFilter", "var_name": "groupByFilter"}], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/filter/GroupByFilterTest.java"}, "test_case": {"identifier": "TestSatisfy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void TestSatisfy() {\n\n    assertFalse(groupByFilter.satisfy(0, null));\n\n    assertFalse(groupByFilter.satisfy(7, null));\n\n    assertFalse(groupByFilter.satisfy(12, null));\n\n    assertFalse(groupByFilter.satisfy(8 + 30 * 24 + 3 + 6, null));\n\n    assertTrue(groupByFilter.satisfy(8, null));\n\n    assertTrue(groupByFilter.satisfy(9, null));\n\n    assertTrue(groupByFilter.satisfy(11, null));\n\n  }", "signature": "void TestSatisfy()", "full_signature": "@Test public void TestSatisfy()", "class_method_signature": "GroupByFilterTest.TestSatisfy()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "satisfy", "assertFalse", "satisfy", "assertFalse", "satisfy", "assertFalse", "satisfy", "assertTrue", "satisfy", "assertTrue", "satisfy", "assertTrue", "satisfy"]}, "focal_class": {"identifier": "GroupByFilter", "superclass": "", "interfaces": "implements Filter, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1211805021419281440L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1211805021419281440L", "var_name": "serialVersionUID"}, {"original_string": "private long interval;", "modifier": "private", "type": "long", "declarator": "interval", "var_name": "interval"}, {"original_string": "private long slidingStep;", "modifier": "private", "type": "long", "declarator": "slidingStep", "var_name": "slidingStep"}, {"original_string": "private long startTime;", "modifier": "private", "type": "long", "declarator": "startTime", "var_name": "startTime"}, {"original_string": "private long endTime;", "modifier": "private", "type": "long", "declarator": "endTime", "var_name": "endTime"}], "methods": [{"identifier": "GroupByFilter", "parameters": "(long interval, long slidingStep, long startTime, long endTime)", "modifiers": "public", "return": "", "signature": " GroupByFilter(long interval, long slidingStep, long startTime, long endTime)", "full_signature": "public  GroupByFilter(long interval, long slidingStep, long startTime, long endTime)", "class_method_signature": "GroupByFilter.GroupByFilter(long interval, long slidingStep, long startTime, long endTime)", "testcase": false, "constructor": true}, {"identifier": "GroupByFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " GroupByFilter()", "full_signature": "public  GroupByFilter()", "class_method_signature": "GroupByFilter.GroupByFilter()", "testcase": false, "constructor": true}, {"identifier": "satisfy", "parameters": "(Statistics statistics)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean satisfy(Statistics statistics)", "full_signature": "@Override public boolean satisfy(Statistics statistics)", "class_method_signature": "GroupByFilter.satisfy(Statistics statistics)", "testcase": false, "constructor": false}, {"identifier": "satisfy", "parameters": "(long time, Object value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean satisfy(long time, Object value)", "full_signature": "@Override public boolean satisfy(long time, Object value)", "class_method_signature": "GroupByFilter.satisfy(long time, Object value)", "testcase": false, "constructor": false}, {"identifier": "satisfyStartEndTime", "parameters": "(long startTime, long endTime)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean satisfyStartEndTime(long startTime, long endTime)", "full_signature": "@Override public boolean satisfyStartEndTime(long startTime, long endTime)", "class_method_signature": "GroupByFilter.satisfyStartEndTime(long startTime, long endTime)", "testcase": false, "constructor": false}, {"identifier": "containStartEndTime", "parameters": "(long startTime, long endTime)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containStartEndTime(long startTime, long endTime)", "full_signature": "@Override public boolean containStartEndTime(long startTime, long endTime)", "class_method_signature": "GroupByFilter.containStartEndTime(long startTime, long endTime)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "Filter", "signature": "Filter copy()", "full_signature": "@Override public Filter copy()", "class_method_signature": "GroupByFilter.copy()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GroupByFilter.toString()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DataOutputStream outputStream)", "modifiers": "@Override public", "return": "void", "signature": "void serialize(DataOutputStream outputStream)", "full_signature": "@Override public void serialize(DataOutputStream outputStream)", "class_method_signature": "GroupByFilter.serialize(DataOutputStream outputStream)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(ByteBuffer buffer)", "modifiers": "@Override public", "return": "void", "signature": "void deserialize(ByteBuffer buffer)", "full_signature": "@Override public void deserialize(ByteBuffer buffer)", "class_method_signature": "GroupByFilter.deserialize(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "getSerializeId", "parameters": "()", "modifiers": "@Override public", "return": "FilterSerializeId", "signature": "FilterSerializeId getSerializeId()", "full_signature": "@Override public FilterSerializeId getSerializeId()", "class_method_signature": "GroupByFilter.getSerializeId()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "GroupByFilter.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GroupByFilter.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStartTime()", "full_signature": "public long getStartTime()", "class_method_signature": "GroupByFilter.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getEndTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getEndTime()", "full_signature": "public long getEndTime()", "class_method_signature": "GroupByFilter.getEndTime()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/filter/GroupByFilter.java"}, "focal_method": {"identifier": "satisfy", "parameters": "(Statistics statistics)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean satisfy(Statistics statistics) {\n    return satisfyStartEndTime(statistics.getStartTime(), statistics.getEndTime());\n  }", "signature": "boolean satisfy(Statistics statistics)", "full_signature": "@Override public boolean satisfy(Statistics statistics)", "class_method_signature": "GroupByFilter.satisfy(Statistics statistics)", "testcase": false, "constructor": false, "invocations": ["satisfyStartEndTime", "getStartTime", "getEndTime"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}