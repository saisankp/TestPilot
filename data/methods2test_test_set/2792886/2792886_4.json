{"test_class": {"identifier": "ProtectedTest", "superclass": "", "interfaces": "", "fields": [], "file": "jsonddl/src/test/java/org/jsonddl/impl/ProtectedTest.java"}, "test_case": {"identifier": "testMixedTypes", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n  @SuppressWarnings(\"unchecked\")\n  public void testMixedTypes() {\n    List<Object> input = Arrays.<Object> asList(null, true, 1, 1.0, \"Hello world\",\n        ElementType.METHOD, Arrays.asList(1, 2, 3), Collections.singletonMap(\"a\", \"b\"));\n    List<Object> output = Protected.object(input);\n    assertEquals(input, output);\n\n    try {\n      ((List<Object>) output.get(6)).set(0, 0);\n      fail();\n    } catch (UnsupportedOperationException expected) {}\n    try {\n      ((Map<Object, Object>) output.get(7)).put(0, 0);\n      fail();\n    } catch (UnsupportedOperationException expected) {}\n  }", "signature": "void testMixedTypes()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void testMixedTypes()", "class_method_signature": "ProtectedTest.testMixedTypes()", "testcase": true, "constructor": false, "invocations": ["asList", "asList", "singletonMap", "object", "assertEquals", "set", "get", "fail", "put", "get", "fail"]}, "focal_class": {"identifier": "Protected", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Class<?> unmodifiableListClass;", "modifier": "private static final", "type": "Class<?>", "declarator": "unmodifiableListClass", "var_name": "unmodifiableListClass"}, {"original_string": "private static final Class<?> unmodifiableMapClass;", "modifier": "private static final", "type": "Class<?>", "declarator": "unmodifiableMapClass", "var_name": "unmodifiableMapClass"}], "methods": [{"identifier": "object", "parameters": "(J value)", "modifiers": "public static", "return": "J", "signature": "J object(J value)", "full_signature": "public static J object(J value)", "class_method_signature": "Protected.object(J value)", "testcase": false, "constructor": false}, {"identifier": "object", "parameters": "(List<T> values)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> object(List<T> values)", "full_signature": "public static List<T> object(List<T> values)", "class_method_signature": "Protected.object(List<T> values)", "testcase": false, "constructor": false}, {"identifier": "object", "parameters": "(Map<K, V> values)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> object(Map<K, V> values)", "full_signature": "public static Map<K, V> object(Map<K, V> values)", "class_method_signature": "Protected.object(Map<K, V> values)", "testcase": false, "constructor": false}, {"identifier": "object", "parameters": "(T value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T object(T value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T object(T value)", "class_method_signature": "Protected.object(T value)", "testcase": false, "constructor": false}], "file": "jsonddl/src/main/java/org/jsonddl/impl/Protected.java"}, "focal_method": {"identifier": "object", "parameters": "(J value)", "modifiers": "public static", "return": "J", "body": "public static <J extends JsonDdlObject<J>> J object(J value) {\n    if (value instanceof JsonDdlObject.Builder) {\n      return ((JsonDdlObject.Builder<J>) value).build();\n    }\n    return value;\n  }", "signature": "J object(J value)", "full_signature": "public static J object(J value)", "class_method_signature": "Protected.object(J value)", "testcase": false, "constructor": false, "invocations": ["build"]}, "repository": {"repo_id": 2792886, "url": "https://github.com/bobvawter/JsonDdl", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1306, "license": "licensed"}}