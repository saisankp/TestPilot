{"test_class": {"identifier": "ReplaceSpacesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReplaceSpaces replaceSpaces;", "modifier": "private", "type": "ReplaceSpaces", "declarator": "replaceSpaces", "var_name": "replaceSpaces"}], "file": "algs/src/test/java/com/github/pedrovgs/problem52/ReplaceSpacesTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullArrays", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullArrays() {\n    replaceSpaces.replace(null);\n  }", "signature": "void shouldNotAcceptNullArrays()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullArrays()", "class_method_signature": "ReplaceSpacesTest.shouldNotAcceptNullArrays()", "testcase": true, "constructor": false, "invocations": ["replace"]}, "focal_class": {"identifier": "ReplaceSpaces", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "replace", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "signature": "void replace(char[] input)", "full_signature": "public void replace(char[] input)", "class_method_signature": "ReplaceSpaces.replace(char[] input)", "testcase": false, "constructor": false}, {"identifier": "copyArray", "parameters": "(char[] src, char[] destiny)", "modifiers": "private", "return": "void", "signature": "void copyArray(char[] src, char[] destiny)", "full_signature": "private void copyArray(char[] src, char[] destiny)", "class_method_signature": "ReplaceSpaces.copyArray(char[] src, char[] destiny)", "testcase": false, "constructor": false}, {"identifier": "replace2", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "signature": "void replace2(char[] input)", "full_signature": "public void replace2(char[] input)", "class_method_signature": "ReplaceSpaces.replace2(char[] input)", "testcase": false, "constructor": false}, {"identifier": "getLastCharPosition", "parameters": "(char[] input)", "modifiers": "private", "return": "int", "signature": "int getLastCharPosition(char[] input)", "full_signature": "private int getLastCharPosition(char[] input)", "class_method_signature": "ReplaceSpaces.getLastCharPosition(char[] input)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(char[] input)", "modifiers": "private", "return": "void", "signature": "void validateInput(char[] input)", "full_signature": "private void validateInput(char[] input)", "class_method_signature": "ReplaceSpaces.validateInput(char[] input)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem52/ReplaceSpaces.java"}, "focal_method": {"identifier": "replace", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "body": "public void replace(char[] input) {\n    validateInput(input);\n\n    char[] result = new char[input.length];\n    for (int i = 0, j = 0; i < input.length && j < input.length; i++, j++) {\n      if (input[i] == ' ') {\n        result[j++] = '%';\n        result[j++] = '2';\n        result[j] = '0';\n      } else {\n        result[j] = input[i];\n      }\n    }\n    copyArray(result, input);\n  }", "signature": "void replace(char[] input)", "full_signature": "public void replace(char[] input)", "class_method_signature": "ReplaceSpaces.replace(char[] input)", "testcase": false, "constructor": false, "invocations": ["validateInput", "copyArray"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}