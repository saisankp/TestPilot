{"test_class": {"identifier": "MetadataStateDescriptionFragmentProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ITEM_NAME = \"itemName\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME = \"itemName\"", "var_name": "ITEM_NAME"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    private @Mock ServiceReference managedProviderRef;", "modifier": "@SuppressWarnings(\"rawtypes\")\n    private @Mock", "type": "ServiceReference", "declarator": "managedProviderRef", "var_name": "managedProviderRef"}, {"original_string": "private @Mock BundleContext bundleContext;", "modifier": "private @Mock", "type": "BundleContext", "declarator": "bundleContext", "var_name": "bundleContext"}, {"original_string": "private @Mock ManagedMetadataProvider managedProvider;", "modifier": "private @Mock", "type": "ManagedMetadataProvider", "declarator": "managedProvider", "var_name": "managedProvider"}, {"original_string": "private @Mock MetadataRegistryImpl metadataRegistry;", "modifier": "private @Mock", "type": "MetadataRegistryImpl", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}, {"original_string": "private MetadataStateDescriptionFragmentProvider stateDescriptionFragmentProvider;", "modifier": "private", "type": "MetadataStateDescriptionFragmentProvider", "declarator": "stateDescriptionFragmentProvider", "var_name": "stateDescriptionFragmentProvider"}, {"original_string": "private ServiceListener providerTracker;", "modifier": "private", "type": "ServiceListener", "declarator": "providerTracker", "var_name": "providerTracker"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/items/MetadataStateDescriptionFragmentProviderTest.java"}, "test_case": {"identifier": "testFragment", "parameters": "()", "modifiers": "@SuppressWarnings(\"null\") @Test public", "return": "void", "body": "@SuppressWarnings(\"null\")\n    @Test\n    public void testFragment() throws Exception {\n        MetadataKey metadataKey = new MetadataKey(\"stateDescription\", ITEM_NAME);\n        Map<String, Object> metadataConfig = new HashMap<>();\n        metadataConfig.put(\"pattern\", \"%.1f %unit%\");\n        metadataConfig.put(\"min\", 18.5);\n        metadataConfig.put(\"max\", \"34\");\n        metadataConfig.put(\"step\", 3);\n        metadataConfig.put(\"readOnly\", \"true\");\n        metadataConfig.put(\"options\", \"OPTION1,OPTION2 , 3 =Option 3 \");\n        Metadata metadata = new Metadata(metadataKey, \"N/A\", metadataConfig);\n        metadataRegistry.added(managedProvider, metadata);\n\n        StateDescriptionFragment stateDescriptionFragment = stateDescriptionFragmentProvider\n                .getStateDescriptionFragment(ITEM_NAME, null);\n        assertNotNull(stateDescriptionFragment);\n        assertEquals(\"%.1f %unit%\", stateDescriptionFragment.getPattern());\n        assertEquals(new BigDecimal(18.5), stateDescriptionFragment.getMinimum());\n        assertEquals(new BigDecimal(34), stateDescriptionFragment.getMaximum());\n        assertEquals(new BigDecimal(3), stateDescriptionFragment.getStep());\n        assertEquals(true, stateDescriptionFragment.isReadOnly());\n        assertNotNull(stateDescriptionFragment.getOptions());\n        Iterator<StateOption> it = stateDescriptionFragment.getOptions().iterator();\n        StateOption stateOption = it.next();\n        assertEquals(\"OPTION1\", stateOption.getValue());\n        assertNull(stateOption.getLabel());\n        stateOption = it.next();\n        assertEquals(\"OPTION2\", stateOption.getValue());\n        assertNull(stateOption.getLabel());\n        stateOption = it.next();\n        assertEquals(\"3\", stateOption.getValue());\n        assertEquals(\"Option 3\", stateOption.getLabel());\n    }", "signature": "void testFragment()", "full_signature": "@SuppressWarnings(\"null\") @Test public void testFragment()", "class_method_signature": "MetadataStateDescriptionFragmentProviderTest.testFragment()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "added", "getStateDescriptionFragment", "assertNotNull", "assertEquals", "getPattern", "assertEquals", "getMinimum", "assertEquals", "getMaximum", "assertEquals", "getStep", "assertEquals", "isReadOnly", "assertNotNull", "getOptions", "iterator", "getOptions", "next", "assertEquals", "getValue", "assertNull", "getLabel", "next", "assertEquals", "getValue", "assertNull", "getLabel", "next", "assertEquals", "getValue", "assertEquals", "getLabel"]}, "focal_class": {"identifier": "MetadataStateDescriptionFragmentProvider", "superclass": "", "interfaces": "implements StateDescriptionFragmentProvider", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(MetadataStateDescriptionFragmentProvider.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MetadataStateDescriptionFragmentProvider.class)", "var_name": "logger"}, {"original_string": "public static final String STATEDESCRIPTION_METADATA_NAMESPACE = \"stateDescription\";", "modifier": "public static final", "type": "String", "declarator": "STATEDESCRIPTION_METADATA_NAMESPACE = \"stateDescription\"", "var_name": "STATEDESCRIPTION_METADATA_NAMESPACE"}, {"original_string": "private final MetadataRegistry metadataRegistry;", "modifier": "private final", "type": "MetadataRegistry", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}, {"original_string": "private final Integer rank;", "modifier": "private final", "type": "Integer", "declarator": "rank", "var_name": "rank"}], "methods": [{"identifier": "MetadataStateDescriptionFragmentProvider", "parameters": "(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "modifiers": "@Activate public", "return": "", "signature": " MetadataStateDescriptionFragmentProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "full_signature": "@Activate public  MetadataStateDescriptionFragmentProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "class_method_signature": "MetadataStateDescriptionFragmentProvider.MetadataStateDescriptionFragmentProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "testcase": false, "constructor": true}, {"identifier": "getStateDescriptionFragment", "parameters": "(String itemName, @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "StateDescriptionFragment", "signature": "StateDescriptionFragment getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "full_signature": "@Override public @Nullable StateDescriptionFragment getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "class_method_signature": "MetadataStateDescriptionFragmentProvider.getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getBigDecimal", "parameters": "(Object value)", "modifiers": "private", "return": "BigDecimal", "signature": "BigDecimal getBigDecimal(Object value)", "full_signature": "private BigDecimal getBigDecimal(Object value)", "class_method_signature": "MetadataStateDescriptionFragmentProvider.getBigDecimal(Object value)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(Object value)", "modifiers": "private", "return": "Boolean", "signature": "Boolean getBoolean(Object value)", "full_signature": "private Boolean getBoolean(Object value)", "class_method_signature": "MetadataStateDescriptionFragmentProvider.getBoolean(Object value)", "testcase": false, "constructor": false}, {"identifier": "getRank", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getRank()", "full_signature": "@Override public Integer getRank()", "class_method_signature": "MetadataStateDescriptionFragmentProvider.getRank()", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/MetadataStateDescriptionFragmentProvider.java"}, "focal_method": {"identifier": "getStateDescriptionFragment", "parameters": "(String itemName, @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "StateDescriptionFragment", "body": "@Override\n    public @Nullable StateDescriptionFragment getStateDescriptionFragment(String itemName, @Nullable Locale locale) {\n        Metadata metadata = metadataRegistry.get(new MetadataKey(STATEDESCRIPTION_METADATA_NAMESPACE, itemName));\n\n        if (metadata != null) {\n            try {\n                StateDescriptionFragmentBuilder builder = StateDescriptionFragmentBuilder.create();\n                if (metadata.getConfiguration().containsKey(\"pattern\")) {\n                    builder.withPattern((String) metadata.getConfiguration().get(\"pattern\"));\n                }\n                if (metadata.getConfiguration().containsKey(\"min\")) {\n                    builder.withMinimum(getBigDecimal(metadata.getConfiguration().get(\"min\")));\n                }\n                if (metadata.getConfiguration().containsKey(\"max\")) {\n                    builder.withMaximum(getBigDecimal(metadata.getConfiguration().get(\"max\")));\n                }\n                if (metadata.getConfiguration().containsKey(\"step\")) {\n                    builder.withStep(getBigDecimal(metadata.getConfiguration().get(\"step\")));\n                }\n                if (metadata.getConfiguration().containsKey(\"readOnly\")) {\n                    builder.withReadOnly(getBoolean(metadata.getConfiguration().get(\"readOnly\")));\n                }\n                if (metadata.getConfiguration().containsKey(\"options\")) {\n                    List<StateOption> stateOptions = Stream\n                            .of(metadata.getConfiguration().get(\"options\").toString().split(\",\")).map(o -> {\n                                return (o.contains(\"=\"))\n                                        ? new StateOption(o.split(\"=\")[0].trim(), o.split(\"=\")[1].trim())\n                                        : new StateOption(o.trim(), null);\n                            }).collect(Collectors.toList());\n                    builder.withOptions(stateOptions);\n                }\n\n                return builder.build();\n            } catch (Exception e) {\n                logger.warn(\"Unable to parse the stateDescription from metadata for item {}, ignoring it\", itemName);\n            }\n        }\n\n        return null;\n    }", "signature": "StateDescriptionFragment getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "full_signature": "@Override public @Nullable StateDescriptionFragment getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "class_method_signature": "MetadataStateDescriptionFragmentProvider.getStateDescriptionFragment(String itemName, @Nullable Locale locale)", "testcase": false, "constructor": false, "invocations": ["get", "create", "containsKey", "getConfiguration", "withPattern", "get", "getConfiguration", "containsKey", "getConfiguration", "withMinimum", "getBigDecimal", "get", "getConfiguration", "containsKey", "getConfiguration", "withMaximum", "getBigDecimal", "get", "getConfiguration", "containsKey", "getConfiguration", "withStep", "getBigDecimal", "get", "getConfiguration", "containsKey", "getConfiguration", "withReadOnly", "getBoolean", "get", "getConfiguration", "containsKey", "getConfiguration", "collect", "map", "of", "split", "toString", "get", "getConfiguration", "contains", "trim", "split", "trim", "split", "trim", "toList", "withOptions", "build", "warn"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}