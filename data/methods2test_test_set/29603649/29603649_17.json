{"test_class": {"identifier": "EscapeJsonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EscapeJson escapeJson = new EscapeJson();", "modifier": "private", "type": "EscapeJson", "declarator": "escapeJson = new EscapeJson()", "var_name": "escapeJson"}], "file": "wilma-service-api/src/test/java/com/epam/wilma/service/configuration/stub/helper/response/EscapeJsonTest.java"}, "test_case": {"identifier": "testEscapingEmptyString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEscapingEmptyString() {\n        String text = \"\";\n        String revisedText = escapeJson.escapeJson(text);\n        Assert.assertNotNull(revisedText);\n        Assert.assertEquals(revisedText, text);\n    }", "signature": "void testEscapingEmptyString()", "full_signature": "@Test public void testEscapingEmptyString()", "class_method_signature": "EscapeJsonTest.testEscapingEmptyString()", "testcase": true, "constructor": false, "invocations": ["escapeJson", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "EscapeJson", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "escapeJson", "parameters": "(final String text)", "modifiers": "public", "return": "String", "signature": "String escapeJson(final String text)", "full_signature": "public String escapeJson(final String text)", "class_method_signature": "EscapeJson.escapeJson(final String text)", "testcase": false, "constructor": false}], "file": "wilma-service-api/src/main/java/com/epam/wilma/service/configuration/stub/helper/response/EscapeJson.java"}, "focal_method": {"identifier": "escapeJson", "parameters": "(final String text)", "modifiers": "public", "return": "String", "body": "public String escapeJson(final String text) {\n        String revisedText = null;\n        if (text != null) {\n            StringBuilder sb = new StringBuilder(text.length() * 2);\n            for (int i = 0; i < text.length(); i++) {\n                char c = text.charAt(i);\n                switch (c) {\n                case '\\\"':\n                    sb.append(\"\\\\\\\"\");\n                    break;\n                default:\n                    sb.append(c);\n                }\n            }\n            //with escaped string we return\n            revisedText = sb.toString();\n        }\n        return revisedText;\n    }", "signature": "String escapeJson(final String text)", "full_signature": "public String escapeJson(final String text)", "class_method_signature": "EscapeJson.escapeJson(final String text)", "testcase": false, "constructor": false, "invocations": ["length", "length", "charAt", "append", "append", "toString"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}