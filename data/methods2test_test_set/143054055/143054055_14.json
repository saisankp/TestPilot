{"test_class": {"identifier": "BoundingBoxTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/eu/quelltext/mundraub/map/position/BoundingBoxTest.java"}, "test_case": {"identifier": "getLatitude", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLatitude() {\n        double delta = 1e-6;\n        double latitude1 = -125.00;\n        double latitude2 = 158.00;\n        double latitude3 = 50.00;\n        double latitude4 = -50.00;\n        assertEquals(-90.00, BoundingBox.getLatitude(latitude1), delta);\n        assertEquals(90.00, BoundingBox.getLatitude(latitude2), delta);\n        assertEquals(50.00, BoundingBox.getLatitude(latitude3), delta);\n        assertEquals(-50.00, BoundingBox.getLatitude(latitude4), delta);\n\n    }", "signature": "void getLatitude()", "full_signature": "@Test public void getLatitude()", "class_method_signature": "BoundingBoxTest.getLatitude()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLatitude", "assertEquals", "getLatitude", "assertEquals", "getLatitude", "assertEquals", "getLatitude"]}, "focal_class": {"identifier": "BoundingBox", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double north;", "modifier": "private final", "type": "double", "declarator": "north", "var_name": "north"}, {"original_string": "private final double south;", "modifier": "private final", "type": "double", "declarator": "south", "var_name": "south"}, {"original_string": "private final double east;", "modifier": "private final", "type": "double", "declarator": "east", "var_name": "east"}, {"original_string": "private final double west;", "modifier": "private final", "type": "double", "declarator": "west", "var_name": "west"}], "methods": [{"identifier": "BoundingBox", "parameters": "(double north, double east, double south, double west)", "modifiers": "protected", "return": "", "signature": " BoundingBox(double north, double east, double south, double west)", "full_signature": "protected  BoundingBox(double north, double east, double south, double west)", "class_method_signature": "BoundingBox.BoundingBox(double north, double east, double south, double west)", "testcase": false, "constructor": true}, {"identifier": "fromWestSouthEastNorthArray", "parameters": "(String[] bbox)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromWestSouthEastNorthArray(String[] bbox)", "full_signature": "public static BoundingBox fromWestSouthEastNorthArray(String[] bbox)", "class_method_signature": "BoundingBox.fromWestSouthEastNorthArray(String[] bbox)", "testcase": false, "constructor": false}, {"identifier": "fromWSEN", "parameters": "(double west, double south, double east, double north)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromWSEN(double west, double south, double east, double north)", "full_signature": "public static BoundingBox fromWSEN(double west, double south, double east, double north)", "class_method_signature": "BoundingBox.fromWSEN(double west, double south, double east, double north)", "testcase": false, "constructor": false}, {"identifier": "fromNominatim", "parameters": "(JSONArray json)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromNominatim(JSONArray json)", "full_signature": "public static BoundingBox fromNominatim(JSONArray json)", "class_method_signature": "BoundingBox.fromNominatim(JSONArray json)", "testcase": false, "constructor": false}, {"identifier": "fromPositionAndRadius", "parameters": "(IPosition position, double distanceInMeters)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromPositionAndRadius(IPosition position, double distanceInMeters)", "full_signature": "public static BoundingBox fromPositionAndRadius(IPosition position, double distanceInMeters)", "class_method_signature": "BoundingBox.fromPositionAndRadius(IPosition position, double distanceInMeters)", "testcase": false, "constructor": false}, {"identifier": "getLongitude", "parameters": "(double longitude)", "modifiers": "public static", "return": "double", "signature": "double getLongitude(double longitude)", "full_signature": "public static double getLongitude(double longitude)", "class_method_signature": "BoundingBox.getLongitude(double longitude)", "testcase": false, "constructor": false}, {"identifier": "getLatitude", "parameters": "(double latitude)", "modifiers": "public static", "return": "double", "signature": "double getLatitude(double latitude)", "full_signature": "public static double getLatitude(double latitude)", "class_method_signature": "BoundingBox.getLatitude(double latitude)", "testcase": false, "constructor": false}, {"identifier": "asSqlQueryString", "parameters": "(String columnLongitude, String columnLatitude)", "modifiers": "public", "return": "String", "signature": "String asSqlQueryString(String columnLongitude, String columnLatitude)", "full_signature": "public String asSqlQueryString(String columnLongitude, String columnLatitude)", "class_method_signature": "BoundingBox.asSqlQueryString(String columnLongitude, String columnLatitude)", "testcase": false, "constructor": false}, {"identifier": "selectPositionsInsideAfterSQLQuery", "parameters": "(List<PlantsCache.Marker> positions)", "modifiers": "public", "return": "List<PlantsCache.Marker>", "signature": "List<PlantsCache.Marker> selectPositionsInsideAfterSQLQuery(List<PlantsCache.Marker> positions)", "full_signature": "public List<PlantsCache.Marker> selectPositionsInsideAfterSQLQuery(List<PlantsCache.Marker> positions)", "class_method_signature": "BoundingBox.selectPositionsInsideAfterSQLQuery(List<PlantsCache.Marker> positions)", "testcase": false, "constructor": false}, {"identifier": "distanceInMetersBetween", "parameters": "(IPosition p1, IPosition p2)", "modifiers": "public static", "return": "double", "signature": "double distanceInMetersBetween(IPosition p1, IPosition p2)", "full_signature": "public static double distanceInMetersBetween(IPosition p1, IPosition p2)", "class_method_signature": "BoundingBox.distanceInMetersBetween(IPosition p1, IPosition p2)", "testcase": false, "constructor": false}, {"identifier": "fromNESW", "parameters": "(double north, double east, double south, double west)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromNESW(double north, double east, double south, double west)", "full_signature": "public static BoundingBox fromNESW(double north, double east, double south, double west)", "class_method_signature": "BoundingBox.fromNESW(double north, double east, double south, double west)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Position position)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Position position)", "full_signature": "public boolean contains(Position position)", "class_method_signature": "BoundingBox.contains(Position position)", "testcase": false, "constructor": false}, {"identifier": "middle", "parameters": "()", "modifiers": "public", "return": "Position", "signature": "Position middle()", "full_signature": "public Position middle()", "class_method_signature": "BoundingBox.middle()", "testcase": false, "constructor": false}, {"identifier": "ofTileAt", "parameters": "(TilePosition position)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox ofTileAt(TilePosition position)", "full_signature": "public static BoundingBox ofTileAt(TilePosition position)", "class_method_signature": "BoundingBox.ofTileAt(TilePosition position)", "testcase": false, "constructor": false}, {"identifier": "tile2lon", "parameters": "(int x, int z)", "modifiers": "static", "return": "double", "signature": "double tile2lon(int x, int z)", "full_signature": "static double tile2lon(int x, int z)", "class_method_signature": "BoundingBox.tile2lon(int x, int z)", "testcase": false, "constructor": false}, {"identifier": "tile2lat", "parameters": "(int y, int z)", "modifiers": "static", "return": "double", "signature": "double tile2lat(int y, int z)", "full_signature": "static double tile2lat(int y, int z)", "class_method_signature": "BoundingBox.tile2lat(int y, int z)", "testcase": false, "constructor": false}, {"identifier": "southBorderLatitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double southBorderLatitude()", "full_signature": "public double southBorderLatitude()", "class_method_signature": "BoundingBox.southBorderLatitude()", "testcase": false, "constructor": false}, {"identifier": "northBorderLatitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double northBorderLatitude()", "full_signature": "public double northBorderLatitude()", "class_method_signature": "BoundingBox.northBorderLatitude()", "testcase": false, "constructor": false}, {"identifier": "southWestCorner", "parameters": "()", "modifiers": "public", "return": "Position", "signature": "Position southWestCorner()", "full_signature": "public Position southWestCorner()", "class_method_signature": "BoundingBox.southWestCorner()", "testcase": false, "constructor": false}, {"identifier": "southEastCorner", "parameters": "()", "modifiers": "public", "return": "Position", "signature": "Position southEastCorner()", "full_signature": "public Position southEastCorner()", "class_method_signature": "BoundingBox.southEastCorner()", "testcase": false, "constructor": false}, {"identifier": "northWestCorner", "parameters": "()", "modifiers": "public", "return": "Position", "signature": "Position northWestCorner()", "full_signature": "public Position northWestCorner()", "class_method_signature": "BoundingBox.northWestCorner()", "testcase": false, "constructor": false}, {"identifier": "northEastCorner", "parameters": "()", "modifiers": "public", "return": "Position", "signature": "Position northEastCorner()", "full_signature": "public Position northEastCorner()", "class_method_signature": "BoundingBox.northEastCorner()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "BoundingBox.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BoundingBox.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toJSON", "parameters": "()", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject toJSON()", "full_signature": "public JSONObject toJSON()", "class_method_signature": "BoundingBox.toJSON()", "testcase": false, "constructor": false}, {"identifier": "westBorderLongitude", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double westBorderLongitude()", "full_signature": "private double westBorderLongitude()", "class_method_signature": "BoundingBox.westBorderLongitude()", "testcase": false, "constructor": false}, {"identifier": "eastBorderLongitude", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double eastBorderLongitude()", "full_signature": "private double eastBorderLongitude()", "class_method_signature": "BoundingBox.eastBorderLongitude()", "testcase": false, "constructor": false}, {"identifier": "fromJSON", "parameters": "(JSONObject json)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox fromJSON(JSONObject json)", "full_signature": "public static BoundingBox fromJSON(JSONObject json)", "class_method_signature": "BoundingBox.fromJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "deltaLongitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double deltaLongitude()", "full_signature": "public double deltaLongitude()", "class_method_signature": "BoundingBox.deltaLongitude()", "testcase": false, "constructor": false}, {"identifier": "crosses180", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean crosses180()", "full_signature": "public boolean crosses180()", "class_method_signature": "BoundingBox.crosses180()", "testcase": false, "constructor": false}, {"identifier": "toExtentString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toExtentString()", "full_signature": "public String toExtentString()", "class_method_signature": "BoundingBox.toExtentString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/eu/quelltext/mundraub/map/position/BoundingBox.java"}, "focal_method": {"identifier": "getLatitude", "parameters": "(double latitude)", "modifiers": "public static", "return": "double", "body": "public static double getLatitude(double latitude) {\n        if (latitude > 90) {\n            return 90;\n        }\n        if (latitude < -90) {\n            return -90;\n        }\n        return latitude;\n    }", "signature": "double getLatitude(double latitude)", "full_signature": "public static double getLatitude(double latitude)", "class_method_signature": "BoundingBox.getLatitude(double latitude)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 143054055, "url": "https://github.com/niccokunzmann/mundraub-android", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 26, "size": 20909, "license": "licensed"}}