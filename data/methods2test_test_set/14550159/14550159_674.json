{"test_class": {"identifier": "HeaderParameterResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultivaluedMap<String, String> headers;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "headers", "var_name": "headers"}, {"original_string": "private ApplicationContext             applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private Parameter                      parameter;", "modifier": "private", "type": "Parameter", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private TypeProducer                   typeProducer;", "modifier": "private", "type": "TypeProducer", "declarator": "typeProducer", "var_name": "typeProducer"}, {"original_string": "private HeaderParameterResolver headerParameterResolver;", "modifier": "private", "type": "HeaderParameterResolver", "declarator": "headerParameterResolver", "var_name": "headerParameterResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/HeaderParameterResolverTest.java"}, "test_case": {"identifier": "retrievesDefaultValueWhenHeaderDoesNotPresentInRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void retrievesDefaultValueWhenHeaderDoesNotPresentInRequest() throws Exception {\n        when(parameter.getDefaultValue()).thenReturn(\"default value\");\n        when(typeProducer.createValue(\"foo\", headers, \"default value\")).thenReturn(\"default value\");\n\n        Object resolvedHeader = headerParameterResolver.resolve(parameter, applicationContext);\n\n        assertEquals(\"default value\", resolvedHeader);\n    }", "signature": "void retrievesDefaultValueWhenHeaderDoesNotPresentInRequest()", "full_signature": "@Test public void retrievesDefaultValueWhenHeaderDoesNotPresentInRequest()", "class_method_signature": "HeaderParameterResolverTest.retrievesDefaultValueWhenHeaderDoesNotPresentInRequest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getDefaultValue", "thenReturn", "when", "createValue", "resolve", "assertEquals"]}, "focal_class": {"identifier": "HeaderParameterResolver", "superclass": "", "interfaces": "implements ParameterResolver<HeaderParam>", "fields": [{"original_string": "private final HeaderParam         headerParam;", "modifier": "private final", "type": "HeaderParam", "declarator": "headerParam", "var_name": "headerParam"}, {"original_string": "private final TypeProducerFactory typeProducerFactory;", "modifier": "private final", "type": "TypeProducerFactory", "declarator": "typeProducerFactory", "var_name": "typeProducerFactory"}], "methods": [{"identifier": "HeaderParameterResolver", "parameters": "(HeaderParam headerParam, TypeProducerFactory typeProducerFactory)", "modifiers": "", "return": "", "signature": " HeaderParameterResolver(HeaderParam headerParam, TypeProducerFactory typeProducerFactory)", "full_signature": "  HeaderParameterResolver(HeaderParam headerParam, TypeProducerFactory typeProducerFactory)", "class_method_signature": "HeaderParameterResolver.HeaderParameterResolver(HeaderParam headerParam, TypeProducerFactory typeProducerFactory)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolve(Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(Parameter parameter, ApplicationContext context)", "class_method_signature": "HeaderParameterResolver.resolve(Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/HeaderParameterResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object resolve(Parameter parameter, ApplicationContext context) throws Exception {\n        String param = this.headerParam.value();\n        TypeProducer typeProducer = typeProducerFactory.createTypeProducer(parameter.getParameterClass(), parameter.getGenericType());\n        return typeProducer.createValue(param, context.getHttpHeaders().getRequestHeaders(), parameter.getDefaultValue());\n    }", "signature": "Object resolve(Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(Parameter parameter, ApplicationContext context)", "class_method_signature": "HeaderParameterResolver.resolve(Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["value", "createTypeProducer", "getParameterClass", "getGenericType", "createValue", "getRequestHeaders", "getHttpHeaders", "getDefaultValue"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}