{"test_class": {"identifier": "ThemeCssFilesProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected ThemeCssFilesProcessor cssFilesProcessor;", "modifier": "protected", "type": "ThemeCssFilesProcessor", "declarator": "cssFilesProcessor", "var_name": "cssFilesProcessor"}], "file": "rice-framework/krad-theme-builder/src/test/java/org/kuali/rice/krad/theme/postprocessor/ThemeCssFilesProcessorTest.java"}, "test_case": {"identifier": "testRewriteCssUrls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRewriteCssUrls() throws Exception {\n        String cssString = \"#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\\n\"\n                + \"\\tbackground-image: url('fancybox_sprite.png');\\n\"\n                + \"} \" + \".infoGrowl{\\n\"\n                + \"\\tbackground: url(\\\"images/information-frame.png\\\") no-repeat scroll 5px 5px transparent;\\n\"\n                + \"\\tpadding-left: 25px;\\n\"\n                + \"}\";\n\n        String expectedCssString = \"#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\\n\"\n                + \"\\tbackground-image: url('../subDir2/fancybox_sprite.png');\\n\"\n                + \"} \" + \".infoGrowl{\\n\"\n                + \"\\tbackground: url(\\\"../subDir2/images/information-frame.png\\\") no-repeat scroll 5px 5px transparent;\\n\"\n                + \"\\tpadding-left: 25px;\\n\"\n                + \"}\";\n\n        File mergedFile = new File(\"/basedir/subDir1/merge.css\");\n        File mergeFile = new File(\"/basedir/subDir2/foo.css\");\n\n        String rewriteCssString = cssFilesProcessor.rewriteCssUrls(cssString, mergeFile, mergedFile);\n\n        Assert.assertEquals(\"Url not rewritten correctly in css string\", expectedCssString, rewriteCssString);\n    }", "signature": "void testRewriteCssUrls()", "full_signature": "@Test public void testRewriteCssUrls()", "class_method_signature": "ThemeCssFilesProcessorTest.testRewriteCssUrls()", "testcase": true, "constructor": false, "invocations": ["rewriteCssUrls", "assertEquals"]}, "focal_class": {"identifier": "ThemeCssFilesProcessor", "superclass": "extends ThemeFilesProcessor", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ThemeCssFilesProcessor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ThemeCssFilesProcessor.class)", "var_name": "LOG"}, {"original_string": "protected int linebreak = -1;", "modifier": "protected", "type": "int", "declarator": "linebreak = -1", "var_name": "linebreak"}], "methods": [{"identifier": "ThemeCssFilesProcessor", "parameters": "(String themeName, File themeDirectory, Properties themeProperties,\n            Map<String, File> themePluginDirsMap, File workingDir, String projectVersion)", "modifiers": "public", "return": "", "signature": " ThemeCssFilesProcessor(String themeName, File themeDirectory, Properties themeProperties,\n            Map<String, File> themePluginDirsMap, File workingDir, String projectVersion)", "full_signature": "public  ThemeCssFilesProcessor(String themeName, File themeDirectory, Properties themeProperties,\n            Map<String, File> themePluginDirsMap, File workingDir, String projectVersion)", "class_method_signature": "ThemeCssFilesProcessor.ThemeCssFilesProcessor(String themeName, File themeDirectory, Properties themeProperties,\n            Map<String, File> themePluginDirsMap, File workingDir, String projectVersion)", "testcase": false, "constructor": true}, {"identifier": "getFileTypeExtension", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getFileTypeExtension()", "full_signature": "@Override protected String getFileTypeExtension()", "class_method_signature": "ThemeCssFilesProcessor.getFileTypeExtension()", "testcase": false, "constructor": false}, {"identifier": "getExcludesConfigKey", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getExcludesConfigKey()", "full_signature": "@Override protected String getExcludesConfigKey()", "class_method_signature": "ThemeCssFilesProcessor.getExcludesConfigKey()", "testcase": false, "constructor": false}, {"identifier": "getFileTypeDirectoryName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getFileTypeDirectoryName()", "full_signature": "@Override protected String getFileTypeDirectoryName()", "class_method_signature": "ThemeCssFilesProcessor.getFileTypeDirectoryName()", "testcase": false, "constructor": false}, {"identifier": "getFileListingConfigKey", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getFileListingConfigKey()", "full_signature": "@Override protected String getFileListingConfigKey()", "class_method_signature": "ThemeCssFilesProcessor.getFileListingConfigKey()", "testcase": false, "constructor": false}, {"identifier": "addAdditionalFiles", "parameters": "(List<File> themeFiles)", "modifiers": "@Override protected", "return": "void", "signature": "void addAdditionalFiles(List<File> themeFiles)", "full_signature": "@Override protected void addAdditionalFiles(List<File> themeFiles)", "class_method_signature": "ThemeCssFilesProcessor.addAdditionalFiles(List<File> themeFiles)", "testcase": false, "constructor": false}, {"identifier": "sortThemeFiles", "parameters": "(List<File> pluginFiles, List<File> subDirFiles)", "modifiers": "@Override protected", "return": "List<File>", "signature": "List<File> sortThemeFiles(List<File> pluginFiles, List<File> subDirFiles)", "full_signature": "@Override protected List<File> sortThemeFiles(List<File> pluginFiles, List<File> subDirFiles)", "class_method_signature": "ThemeCssFilesProcessor.sortThemeFiles(List<File> pluginFiles, List<File> subDirFiles)", "testcase": false, "constructor": false}, {"identifier": "processMergeFileContents", "parameters": "(String fileContents, File fileToMerge, File mergedFile)", "modifiers": "@Override protected", "return": "String", "signature": "String processMergeFileContents(String fileContents, File fileToMerge, File mergedFile)", "full_signature": "@Override protected String processMergeFileContents(String fileContents, File fileToMerge, File mergedFile)", "class_method_signature": "ThemeCssFilesProcessor.processMergeFileContents(String fileContents, File fileToMerge, File mergedFile)", "testcase": false, "constructor": false}, {"identifier": "rewriteCssUrls", "parameters": "(String css, File mergeFile, File mergedFile)", "modifiers": "protected", "return": "String", "signature": "String rewriteCssUrls(String css, File mergeFile, File mergedFile)", "full_signature": "protected String rewriteCssUrls(String css, File mergeFile, File mergedFile)", "class_method_signature": "ThemeCssFilesProcessor.rewriteCssUrls(String css, File mergeFile, File mergedFile)", "testcase": false, "constructor": false}, {"identifier": "minify", "parameters": "(File mergedFile, File minifiedFile)", "modifiers": "@Override protected", "return": "void", "signature": "void minify(File mergedFile, File minifiedFile)", "full_signature": "@Override protected void minify(File mergedFile, File minifiedFile)", "class_method_signature": "ThemeCssFilesProcessor.minify(File mergedFile, File minifiedFile)", "testcase": false, "constructor": false}], "file": "rice-framework/krad-theme-builder/src/main/java/org/kuali/rice/krad/theme/postprocessor/ThemeCssFilesProcessor.java"}, "focal_method": {"identifier": "rewriteCssUrls", "parameters": "(String css, File mergeFile, File mergedFile)", "modifiers": "protected", "return": "String", "body": "protected String rewriteCssUrls(String css, File mergeFile, File mergedFile) throws IOException {\n        String urlAdjustment = ThemeBuilderUtils.calculatePathToFile(mergedFile, mergeFile);\n\n        if (StringUtils.isBlank(urlAdjustment)) {\n            // no adjustment needed\n            return css;\n        }\n\n        // match all URLs in css string and then adjust each one\n        Pattern urlPattern = Pattern.compile(ThemeBuilderConstants.Patterns.CSS_URL_PATTERN);\n\n        Matcher matcher = urlPattern.matcher(css);\n\n        StringBuffer sb = new StringBuffer();\n        while (matcher.find()) {\n            String cssStatement = matcher.group();\n\n            String cssUrl = null;\n            if (matcher.group(1) != null) {\n                cssUrl = matcher.group(1);\n            } else {\n                cssUrl = matcher.group(2);\n            }\n\n            if (cssUrl != null) {\n                // only adjust URL if it is relative\n                String modifiedUrl = cssUrl;\n\n                if (!cssUrl.startsWith(\"/\")) {\n                    modifiedUrl = urlAdjustment + cssUrl;\n                }\n\n                String modifiedStatement = Matcher.quoteReplacement(cssStatement.replace(cssUrl, modifiedUrl));\n\n                matcher.appendReplacement(sb, modifiedStatement);\n            }\n        }\n\n        matcher.appendTail(sb);\n\n        return sb.toString();\n    }", "signature": "String rewriteCssUrls(String css, File mergeFile, File mergedFile)", "full_signature": "protected String rewriteCssUrls(String css, File mergeFile, File mergedFile)", "class_method_signature": "ThemeCssFilesProcessor.rewriteCssUrls(String css, File mergeFile, File mergedFile)", "testcase": false, "constructor": false, "invocations": ["calculatePathToFile", "isBlank", "compile", "matcher", "find", "group", "group", "group", "group", "startsWith", "quoteReplacement", "replace", "appendReplacement", "appendTail", "toString"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}