{"test_class": {"identifier": "ConfigurationAnalyzerTest", "superclass": "extends AntennaTestWithMockedContext", "interfaces": "", "fields": [{"original_string": "private final MatchState artifactMatchState;", "modifier": "private final", "type": "MatchState", "declarator": "artifactMatchState", "var_name": "artifactMatchState"}, {"original_string": "private static final String FILENAME = \"some/path\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME = \"some/path\"", "var_name": "FILENAME"}], "file": "core/core-workflow-steps/src/test/java/org/eclipse/sw360/antenna/workflow/analyzers/ConfigurationAnalyzerTest.java"}, "test_case": {"identifier": "testAddArtifact", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddArtifact() {\n        ConfigurationAnalyzer handler = new ConfigurationAnalyzer();\n        handler.setAntennaContext(antennaContextMock);\n\n        Set<Artifact> artifacts = handler.yield().getArtifacts();\n\n        assertThat(artifacts.size()).isEqualTo(2);\n        Artifact processedArtifact = artifacts.stream()\n                .filter(a -> a.askFor(ArtifactFilename.class)\n                        .flatMap(ArtifactFilename::getBestFilenameEntryGuess)\n                        .filter(afe -> FILENAME.equals(afe.getFilename()))\n                        .isPresent())\n                .findAny()\n                .orElseThrow(() -> new IllegalStateException(\"should not happen\"));\n        assertThat(processedArtifact.askFor(ArtifactMatchingMetadata.class)\n                .map(ArtifactMatchingMetadata::getMatchState)\n                .orElse(null))\n                .isEqualTo(Optional.ofNullable(artifactMatchState).orElse(null));\n    }", "signature": "void testAddArtifact()", "full_signature": "@Test public void testAddArtifact()", "class_method_signature": "ConfigurationAnalyzerTest.testAddArtifact()", "testcase": true, "constructor": false, "invocations": ["setAntennaContext", "getArtifacts", "yield", "isEqualTo", "assertThat", "size", "orElseThrow", "findAny", "filter", "stream", "isPresent", "filter", "flatMap", "askFor", "equals", "getFilename", "isEqualTo", "assertThat", "orElse", "map", "askFor", "orElse", "ofNullable"]}, "focal_class": {"identifier": "ConfigurationAnalyzer", "superclass": "extends AbstractAnalyzer", "interfaces": "", "fields": [], "methods": [{"identifier": "ConfigurationAnalyzer", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConfigurationAnalyzer()", "full_signature": "public  ConfigurationAnalyzer()", "class_method_signature": "ConfigurationAnalyzer.ConfigurationAnalyzer()", "testcase": false, "constructor": true}, {"identifier": "getConfiguredArtifacts", "parameters": "(Configuration configuration, IProcessingReporter reporter)", "modifiers": "private", "return": "List<Artifact>", "signature": "List<Artifact> getConfiguredArtifacts(Configuration configuration, IProcessingReporter reporter)", "full_signature": "private List<Artifact> getConfiguredArtifacts(Configuration configuration, IProcessingReporter reporter)", "class_method_signature": "ConfigurationAnalyzer.getConfiguredArtifacts(Configuration configuration, IProcessingReporter reporter)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ConfigurationAnalyzer.getName()", "testcase": false, "constructor": false}, {"identifier": "yield", "parameters": "()", "modifiers": "@Override public", "return": "WorkflowStepResult", "signature": "WorkflowStepResult yield()", "full_signature": "@Override public WorkflowStepResult yield()", "class_method_signature": "ConfigurationAnalyzer.yield()", "testcase": false, "constructor": false}], "file": "core/core-workflow-steps/src/main/java/org/eclipse/sw360/antenna/workflow/analyzers/ConfigurationAnalyzer.java"}, "focal_method": {"identifier": "yield", "parameters": "()", "modifiers": "@Override public", "return": "WorkflowStepResult", "body": "@Override\n    public WorkflowStepResult yield() {\n        return new WorkflowStepResult(getConfiguredArtifacts(context.getConfiguration(), reporter), true);\n    }", "signature": "WorkflowStepResult yield()", "full_signature": "@Override public WorkflowStepResult yield()", "class_method_signature": "ConfigurationAnalyzer.yield()", "testcase": false, "constructor": false, "invocations": ["getConfiguredArtifacts", "getConfiguration"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}