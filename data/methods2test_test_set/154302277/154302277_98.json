{"test_class": {"identifier": "DeviceResponseMessageServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEVICE_ID = \"deviceId\";", "modifier": "private static final", "type": "String", "declarator": "DEVICE_ID = \"deviceId\"", "var_name": "DEVICE_ID"}, {"original_string": "private static final DeviceMessageMetadata DEVICE_MESSAGE_DATA = new DeviceMessageMetadata(DEVICE_ID,\n            \"organisationId\", \"correlationId\", \"messageType\", 4);", "modifier": "private static final", "type": "DeviceMessageMetadata", "declarator": "DEVICE_MESSAGE_DATA = new DeviceMessageMetadata(DEVICE_ID,\n            \"organisationId\", \"correlationId\", \"messageType\", 4)", "var_name": "DEVICE_MESSAGE_DATA"}, {"original_string": "private static final String DOMAIN = \"Domain\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN = \"Domain\"", "var_name": "DOMAIN"}, {"original_string": "private static final String DOMAIN_VERSION = \"1.0\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN_VERSION = \"1.0\"", "var_name": "DOMAIN_VERSION"}, {"original_string": "private static final String DATA_OBJECT = \"data object\";", "modifier": "private static final", "type": "String", "declarator": "DATA_OBJECT = \"data object\"", "var_name": "DATA_OBJECT"}, {"original_string": "private static final Timestamp SCHEDULED_TIME = new Timestamp(Calendar.getInstance().getTime().getTime());", "modifier": "private static final", "type": "Timestamp", "declarator": "SCHEDULED_TIME = new Timestamp(Calendar.getInstance().getTime().getTime())", "var_name": "SCHEDULED_TIME"}, {"original_string": "@Mock\n    private DeviceService deviceService;", "modifier": "@Mock\n    private", "type": "DeviceService", "declarator": "deviceService", "var_name": "deviceService"}, {"original_string": "@Mock\n    private DomainResponseService domainResponseMessageSender;", "modifier": "@Mock\n    private", "type": "DomainResponseService", "declarator": "domainResponseMessageSender", "var_name": "domainResponseMessageSender"}, {"original_string": "@Mock\n    private ScheduledTaskService scheduledTaskService;", "modifier": "@Mock\n    private", "type": "ScheduledTaskService", "declarator": "scheduledTaskService", "var_name": "scheduledTaskService"}, {"original_string": "@Mock\n    private DeviceCommunicationInformationService deviceCommunicationInformationService;", "modifier": "@Mock\n    private", "type": "DeviceCommunicationInformationService", "declarator": "deviceCommunicationInformationService", "var_name": "deviceCommunicationInformationService"}, {"original_string": "@InjectMocks\n    private DeviceResponseMessageService deviceResponseMessageService;", "modifier": "@InjectMocks\n    private", "type": "DeviceResponseMessageService", "declarator": "deviceResponseMessageService", "var_name": "deviceResponseMessageService"}], "file": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceResponseMessageServiceTest.java"}, "test_case": {"identifier": "testProcessScheduledMessageSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessScheduledMessageSuccess() {\n        final ProtocolResponseMessage message = new ProtocolResponseMessage.Builder()\n                .deviceMessageMetadata(DEVICE_MESSAGE_DATA)\n                .domain(DOMAIN)\n                .domainVersion(DOMAIN_VERSION)\n                .result(ResponseMessageResultType.OK)\n                .dataObject(DATA_OBJECT)\n                .scheduled(true)\n                .build();\n        final ScheduledTask scheduledTask = new ScheduledTask(DEVICE_MESSAGE_DATA, DOMAIN, DOMAIN, DATA_OBJECT,\n                SCHEDULED_TIME);\n        scheduledTask.setPending();\n        when(this.scheduledTaskService.findByCorrelationUid(anyString())).thenReturn(scheduledTask);\n        this.deviceResponseMessageService.processMessage(message);\n\n        // check if message is send and task is deleted\n        verify(this.domainResponseMessageSender).send(message);\n        verify(this.scheduledTaskService).deleteScheduledTask(scheduledTask);\n    }", "signature": "void testProcessScheduledMessageSuccess()", "full_signature": "@Test public void testProcessScheduledMessageSuccess()", "class_method_signature": "DeviceResponseMessageServiceTest.testProcessScheduledMessageSuccess()", "testcase": true, "constructor": false, "invocations": ["build", "scheduled", "dataObject", "result", "domainVersion", "domain", "deviceMessageMetadata", "setPending", "thenReturn", "when", "findByCorrelationUid", "anyString", "processMessage", "send", "verify", "deleteScheduledTask", "verify"]}, "focal_class": {"identifier": "DeviceResponseMessageService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DeviceResponseMessageService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DeviceResponseMessageService.class)", "var_name": "LOGGER"}, {"original_string": "private static final String[] RETRY_EXCEPTIONS = { \"Unable to connect\", \"ConnectException\",\n            \"Failed to receive response within timelimit\", \"Timeout waiting for\",\n            \"Connection closed by remote host while waiting for association response\" };", "modifier": "private static final", "type": "String[]", "declarator": "RETRY_EXCEPTIONS = { \"Unable to connect\", \"ConnectException\",\n            \"Failed to receive response within timelimit\", \"Timeout waiting for\",\n            \"Connection closed by remote host while waiting for association response\" }", "var_name": "RETRY_EXCEPTIONS"}, {"original_string": "@Autowired\n    private DeviceService deviceService;", "modifier": "@Autowired\n    private", "type": "DeviceService", "declarator": "deviceService", "var_name": "deviceService"}, {"original_string": "@Autowired\n    private DomainResponseService domainResponseMessageSender;", "modifier": "@Autowired\n    private", "type": "DomainResponseService", "declarator": "domainResponseMessageSender", "var_name": "domainResponseMessageSender"}, {"original_string": "@Autowired\n    private ScheduledTaskService scheduledTaskService;", "modifier": "@Autowired\n    private", "type": "ScheduledTaskService", "declarator": "scheduledTaskService", "var_name": "scheduledTaskService"}, {"original_string": "@Autowired\n    private DeviceRequestMessageService deviceRequestMessageService;", "modifier": "@Autowired\n    private", "type": "DeviceRequestMessageService", "declarator": "deviceRequestMessageService", "var_name": "deviceRequestMessageService"}, {"original_string": "@Autowired\n    private DeviceCommunicationInformationService deviceCommunicationInformationService;", "modifier": "@Autowired\n    private", "type": "DeviceCommunicationInformationService", "declarator": "deviceCommunicationInformationService", "var_name": "deviceCommunicationInformationService"}, {"original_string": "@Autowired\n    private int getMaxRetryCount;", "modifier": "@Autowired\n    private", "type": "int", "declarator": "getMaxRetryCount", "var_name": "getMaxRetryCount"}], "methods": [{"identifier": "processMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "public", "return": "void", "signature": "void processMessage(final ProtocolResponseMessage message)", "full_signature": "public void processMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.processMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "shouldRetryBasedOnMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldRetryBasedOnMessage(final ProtocolResponseMessage message)", "full_signature": "private boolean shouldRetryBasedOnMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.shouldRetryBasedOnMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "shouldRetryBasedOnException", "parameters": "(final OsgpException e)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldRetryBasedOnException(final OsgpException e)", "full_signature": "private boolean shouldRetryBasedOnException(final OsgpException e)", "class_method_signature": "DeviceResponseMessageService.shouldRetryBasedOnException(final OsgpException e)", "testcase": false, "constructor": false}, {"identifier": "handleScheduledTask", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "void", "signature": "void handleScheduledTask(final ProtocolResponseMessage message)", "full_signature": "private void handleScheduledTask(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.handleScheduledTask(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "handleUnsuccessfulScheduledTask", "parameters": "(final ProtocolResponseMessage message,\n            final ScheduledTask scheduledTask)", "modifiers": "private", "return": "void", "signature": "void handleUnsuccessfulScheduledTask(final ProtocolResponseMessage message,\n            final ScheduledTask scheduledTask)", "full_signature": "private void handleUnsuccessfulScheduledTask(final ProtocolResponseMessage message,\n            final ScheduledTask scheduledTask)", "class_method_signature": "DeviceResponseMessageService.handleUnsuccessfulScheduledTask(final ProtocolResponseMessage message,\n            final ScheduledTask scheduledTask)", "testcase": false, "constructor": false}, {"identifier": "handleMessageRetry", "parameters": "(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "modifiers": "private", "return": "void", "signature": "void handleMessageRetry(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "full_signature": "private void handleMessageRetry(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "class_method_signature": "DeviceResponseMessageService.handleMessageRetry(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "testcase": false, "constructor": false}, {"identifier": "mustBeRetried", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "boolean", "signature": "boolean mustBeRetried(final ProtocolResponseMessage message)", "full_signature": "private boolean mustBeRetried(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.mustBeRetried(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "messageIsSuccessful", "parameters": "(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "modifiers": "private", "return": "boolean", "signature": "boolean messageIsSuccessful(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "full_signature": "private boolean messageIsSuccessful(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "class_method_signature": "DeviceResponseMessageService.messageIsSuccessful(final ProtocolResponseMessage message, final ScheduledTask scheduledTask)", "testcase": false, "constructor": false}, {"identifier": "determineErrorMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "String", "signature": "String determineErrorMessage(final ProtocolResponseMessage message)", "full_signature": "private String determineErrorMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.determineErrorMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "handleProtocolResponseMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "void", "signature": "void handleProtocolResponseMessage(final ProtocolResponseMessage message)", "full_signature": "private void handleProtocolResponseMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.handleProtocolResponseMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "createProtocolRequestMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "ProtocolRequestMessage", "signature": "ProtocolRequestMessage createProtocolRequestMessage(final ProtocolResponseMessage message)", "full_signature": "private ProtocolRequestMessage createProtocolRequestMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.createProtocolRequestMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}, {"identifier": "createScheduledRetryTask", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "private", "return": "ScheduledTask", "signature": "ScheduledTask createScheduledRetryTask(final ProtocolResponseMessage message)", "full_signature": "private ScheduledTask createScheduledRetryTask(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.createScheduledRetryTask(final ProtocolResponseMessage message)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/DeviceResponseMessageService.java"}, "focal_method": {"identifier": "processMessage", "parameters": "(final ProtocolResponseMessage message)", "modifiers": "public", "return": "void", "body": "public void processMessage(final ProtocolResponseMessage message) {\n        LOGGER.info(\"Processing protocol response message with correlation uid [{}]\", message.getCorrelationUid());\n\n        try {\n            synchronized (this) {\n                this.deviceCommunicationInformationService.updateDeviceConnectionInformation(message);\n            }\n\n            if (message.isScheduled() && !message.bypassRetry()) {\n                LOGGER.info(\"Handling scheduled protocol response message.\");\n                this.handleScheduledTask(message);\n            } else {\n                LOGGER.info(\"Handling protocol response message.\");\n                this.handleProtocolResponseMessage(message);\n            }\n        } catch (final FunctionalException e) {\n            LOGGER.error(\"Exception: {}, StackTrace: {}\", e.getMessage(), e.getStackTrace(), e);\n        }\n    }", "signature": "void processMessage(final ProtocolResponseMessage message)", "full_signature": "public void processMessage(final ProtocolResponseMessage message)", "class_method_signature": "DeviceResponseMessageService.processMessage(final ProtocolResponseMessage message)", "testcase": false, "constructor": false, "invocations": ["info", "getCorrelationUid", "updateDeviceConnectionInformation", "isScheduled", "bypassRetry", "info", "handleScheduledTask", "info", "handleProtocolResponseMessage", "error", "getMessage", "getStackTrace"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}