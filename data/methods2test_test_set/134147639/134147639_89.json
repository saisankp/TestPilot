{"test_class": {"identifier": "OriginValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final OriginValidator target = new OriginValidator();", "modifier": "private final", "type": "OriginValidator", "declarator": "target = new OriginValidator()", "var_name": "target"}], "file": "webauthn4j-core/src/test/java/com/webauthn4j/validator/OriginValidatorTest.java"}, "test_case": {"identifier": "multiple_origins_test_with_invalid_origin", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void multiple_origins_test_with_invalid_origin(){\n        final Origin originA = new Origin(\"https://example.com:14443\");\n        final Origin originB = new Origin(\"http://localhost:9090\");\n        final Origin originC = new Origin(\"android:apk-key-hash:pNiP5iKyQ8JwgGOaKA1zGPUPJIS-0H1xKCQcfIoGLck\");\n        final Origin originD = new Origin(\"android:apk-key-hash-sha256:qSiQ5iKyQ8JwgGOaKA1zGPUPJIS-0H1xKCQcfIoGLck\");\n\n        final Origin badOriginA = new Origin(\"https://example.phish.com:14443\");\n        final Origin badOriginB = new Origin(\"http://phish.localhost:9090\");\n        final Origin badOriginC = new Origin(\"android:apk-key-hash:0pNiP5iKyQ8JwgGOaKA1zGPUPJIS-0H1xKCQcfIoGLck\");\n        final Origin badOriginD = new Origin(\"android:apk-key-hash-sha256:0qSiQ5iKyQ8JwgGOaKA1zGPUPJIS-0H1xKCQcfIoGLck\");\n\n        final ServerProperty serverProperty = new ServerProperty(Arrays.asList(originA,originB,originC,originD),\n                \"example.com\", TestDataUtil.createChallenge(), null);\n\n        final CollectedClientData collectedClientDataA = new CollectedClientData(ClientDataType.CREATE,\n                TestDataUtil.createChallenge(), badOriginA, null);\n        final CollectedClientData collectedClientDataB = new CollectedClientData(ClientDataType.CREATE,\n                TestDataUtil.createChallenge(), badOriginB, null);\n        final CollectedClientData collectedClientDataC = new CollectedClientData(ClientDataType.GET,\n                TestDataUtil.createChallenge(), badOriginC, null);\n        final CollectedClientData collectedClientDataD = new CollectedClientData(ClientDataType.GET,\n                TestDataUtil.createChallenge(), badOriginD, null);\n\n\n        assertThrows(BadOriginException.class,\n                () -> target.validate(collectedClientDataA, serverProperty)\n        );\n        assertThrows(BadOriginException.class,\n                () -> target.validate(collectedClientDataB, serverProperty)\n        );\n        assertThrows(BadOriginException.class,\n                () -> target.validate(collectedClientDataC, serverProperty)\n        );\n        assertThrows(BadOriginException.class,\n                () -> target.validate(collectedClientDataD, serverProperty)\n        );\n    }", "signature": "void multiple_origins_test_with_invalid_origin()", "full_signature": "@Test void multiple_origins_test_with_invalid_origin()", "class_method_signature": "OriginValidatorTest.multiple_origins_test_with_invalid_origin()", "testcase": true, "constructor": false, "invocations": ["asList", "createChallenge", "createChallenge", "createChallenge", "createChallenge", "createChallenge", "assertThrows", "validate", "assertThrows", "validate", "assertThrows", "validate", "assertThrows", "validate"]}, "focal_class": {"identifier": "OriginValidator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "validate", "parameters": "(CollectedClientData collectedClientData, ServerProperty serverProperty)", "modifiers": "public", "return": "void", "signature": "void validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "full_signature": "public void validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "class_method_signature": "OriginValidator.validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/validator/OriginValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(CollectedClientData collectedClientData, ServerProperty serverProperty)", "modifiers": "public", "return": "void", "body": "public void validate(CollectedClientData collectedClientData, ServerProperty serverProperty) {\n        final Origin clientOrigin = collectedClientData.getOrigin();\n        if (!serverProperty.getOrigins().contains(clientOrigin)) {\n            throw new BadOriginException(\"The collectedClientData '\" + clientOrigin + \"' origin doesn't match any of the preconfigured server origin.\");\n        }\n    }", "signature": "void validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "full_signature": "public void validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "class_method_signature": "OriginValidator.validate(CollectedClientData collectedClientData, ServerProperty serverProperty)", "testcase": false, "constructor": false, "invocations": ["getOrigin", "contains", "getOrigins"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}