{"test_class": {"identifier": "MyForkJoinTaskTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/main/java/blog/yongboy/MyForkJoinTaskTest.java"}, "test_case": {"identifier": "testForkJoinSubmit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testForkJoinSubmit() throws InterruptedException, ExecutionException {\n        final ForkJoinPool forkJoinPool = new ForkJoinPool();\n        final MyForkJoinTask<String> task = new MyForkJoinTask<String>();\n\n        task.setSuccess(true); // \u662f\u5426\u5728\u6b64\u4efb\u52a1\u8fd0\u884c\u5b8c\u6bd5\u540e\u7ed3\u675f\u963b\u585e\n        ForkJoinTask<String> result = forkJoinPool.submit(task);\n        result.get(); // \u5982\u679cexec()\u8fd4\u56de\u503c\u662ffalse\uff0c\u5728\u6b64\u5904\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u8c03\u7528complete\n    }", "signature": "void testForkJoinSubmit()", "full_signature": "@Test public void testForkJoinSubmit()", "class_method_signature": "MyForkJoinTaskTest.testForkJoinSubmit()", "testcase": true, "constructor": false, "invocations": ["setSuccess", "submit", "get"]}, "focal_class": {"identifier": "MyForkJoinTask", "superclass": "extends ForkJoinTask<V>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private V value;", "modifier": "private", "type": "V", "declarator": "value", "var_name": "value"}, {"original_string": "private boolean success = false;", "modifier": "private", "type": "boolean", "declarator": "success = false", "var_name": "success"}], "methods": [{"identifier": "getRawResult", "parameters": "()", "modifiers": "@Override public", "return": "V", "signature": "V getRawResult()", "full_signature": "@Override public V getRawResult()", "class_method_signature": "MyForkJoinTask.getRawResult()", "testcase": false, "constructor": false}, {"identifier": "setRawResult", "parameters": "(V value)", "modifiers": "@Override protected", "return": "void", "signature": "void setRawResult(V value)", "full_signature": "@Override protected void setRawResult(V value)", "class_method_signature": "MyForkJoinTask.setRawResult(V value)", "testcase": false, "constructor": false}, {"identifier": "exec", "parameters": "()", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean exec()", "full_signature": "@Override protected boolean exec()", "class_method_signature": "MyForkJoinTask.exec()", "testcase": false, "constructor": false}, {"identifier": "isSuccess", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSuccess()", "full_signature": "public boolean isSuccess()", "class_method_signature": "MyForkJoinTask.isSuccess()", "testcase": false, "constructor": false}, {"identifier": "setSuccess", "parameters": "(boolean isSuccess)", "modifiers": "public", "return": "void", "signature": "void setSuccess(boolean isSuccess)", "full_signature": "public void setSuccess(boolean isSuccess)", "class_method_signature": "MyForkJoinTask.setSuccess(boolean isSuccess)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/blog/yongboy/MyForkJoinTask.java"}, "focal_method": {"identifier": "setSuccess", "parameters": "(boolean isSuccess)", "modifiers": "public", "return": "void", "body": "public void setSuccess(boolean isSuccess) {\n        this.success = isSuccess;\n    }", "signature": "void setSuccess(boolean isSuccess)", "full_signature": "public void setSuccess(boolean isSuccess)", "class_method_signature": "MyForkJoinTask.setSuccess(boolean isSuccess)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}