{"test_class": {"identifier": "CompanyEventHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CompanyViewRepository companyViewRepository = mock(CompanyViewRepository.class);", "modifier": "private final", "type": "CompanyViewRepository", "declarator": "companyViewRepository = mock(CompanyViewRepository.class)", "var_name": "companyViewRepository"}, {"original_string": "private CompanyEventHandler testSubject;", "modifier": "private", "type": "CompanyEventHandler", "declarator": "testSubject", "var_name": "testSubject"}], "file": "query/src/test/java/org/axonframework/samples/trader/query/company/CompanyEventHandlerTest.java"}, "test_case": {"identifier": "testOnCompanyCreatedEventACompanyViewIsSaved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnCompanyCreatedEventACompanyViewIsSaved() {\n        CompanyId expectedCompanyId = new CompanyId();\n        String expectedCompanyName = \"companyName\";\n        int expectedCompanyValue = 1000;\n        int expectedAmountOfShares = 500;\n\n        CompanyCreatedEvent testEvent = new CompanyCreatedEvent(\n                expectedCompanyId, expectedCompanyName, expectedCompanyValue, expectedAmountOfShares\n        );\n\n        testSubject.on(testEvent);\n\n        ArgumentCaptor<CompanyView> companyViewCaptor = ArgumentCaptor.forClass(CompanyView.class);\n\n        verify(companyViewRepository).save(companyViewCaptor.capture());\n\n        CompanyView result = companyViewCaptor.getValue();\n        assertNotNull(result);\n        assertEquals(expectedCompanyId.getIdentifier(), result.getIdentifier());\n        assertEquals(expectedCompanyName, result.getName());\n        assertEquals(expectedCompanyValue, result.getValue());\n        assertEquals(expectedAmountOfShares, result.getAmountOfShares());\n    }", "signature": "void testOnCompanyCreatedEventACompanyViewIsSaved()", "full_signature": "@Test public void testOnCompanyCreatedEventACompanyViewIsSaved()", "class_method_signature": "CompanyEventHandlerTest.testOnCompanyCreatedEventACompanyViewIsSaved()", "testcase": true, "constructor": false, "invocations": ["on", "forClass", "save", "verify", "capture", "getValue", "assertNotNull", "assertEquals", "getIdentifier", "getIdentifier", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "getAmountOfShares"]}, "focal_class": {"identifier": "CompanyEventHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CompanyViewRepository companyRepository;", "modifier": "private final", "type": "CompanyViewRepository", "declarator": "companyRepository", "var_name": "companyRepository"}], "methods": [{"identifier": "CompanyEventHandler", "parameters": "(CompanyViewRepository companyRepository)", "modifiers": "@Autowired public", "return": "", "signature": " CompanyEventHandler(CompanyViewRepository companyRepository)", "full_signature": "@Autowired public  CompanyEventHandler(CompanyViewRepository companyRepository)", "class_method_signature": "CompanyEventHandler.CompanyEventHandler(CompanyViewRepository companyRepository)", "testcase": false, "constructor": true}, {"identifier": "on", "parameters": "(CompanyCreatedEvent event)", "modifiers": "@EventHandler public", "return": "void", "signature": "void on(CompanyCreatedEvent event)", "full_signature": "@EventHandler public void on(CompanyCreatedEvent event)", "class_method_signature": "CompanyEventHandler.on(CompanyCreatedEvent event)", "testcase": false, "constructor": false}], "file": "query/src/main/java/org/axonframework/samples/trader/query/company/CompanyEventHandler.java"}, "focal_method": {"identifier": "on", "parameters": "(CompanyCreatedEvent event)", "modifiers": "@EventHandler public", "return": "void", "body": "@EventHandler\n    public void on(CompanyCreatedEvent event) {\n        CompanyView companyView = new CompanyView();\n\n        companyView.setIdentifier(event.getCompanyId().getIdentifier());\n        companyView.setValue(event.getCompanyValue());\n        companyView.setAmountOfShares(event.getAmountOfShares());\n        companyView.setTradeStarted(true);\n        companyView.setName(event.getCompanyName());\n\n        companyRepository.save(companyView);\n    }", "signature": "void on(CompanyCreatedEvent event)", "full_signature": "@EventHandler public void on(CompanyCreatedEvent event)", "class_method_signature": "CompanyEventHandler.on(CompanyCreatedEvent event)", "testcase": false, "constructor": false, "invocations": ["setIdentifier", "getIdentifier", "getCompanyId", "setValue", "getCompanyValue", "setAmountOfShares", "getAmountOfShares", "setTradeStarted", "setName", "getCompanyName", "save"]}, "repository": {"repo_id": 854559, "url": "https://github.com/AxonFramework/Axon-trader", "language": "Java", "is_fork": false, "fork_count": 178, "stargazer_count": 356, "size": 1455, "license": "licensed"}}