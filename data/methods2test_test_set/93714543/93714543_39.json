{"test_class": {"identifier": "ConnectivityManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    ConnectListener listener;", "modifier": "@Mock", "type": "ConnectListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "@Captor\n    ArgumentCaptor<String> stringCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<String>", "declarator": "stringCaptor", "var_name": "stringCaptor"}, {"original_string": "@Captor\n    ArgumentCaptor<Boolean> booleanCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<Boolean>", "declarator": "booleanCaptor", "var_name": "booleanCaptor"}, {"original_string": "@Captor\n    ArgumentCaptor<Throwable> throwableCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<Throwable>", "declarator": "throwableCaptor", "var_name": "throwableCaptor"}, {"original_string": "private ConnectivityManager manager;", "modifier": "private", "type": "ConnectivityManager", "declarator": "manager", "var_name": "manager"}], "file": "rocketchat-common/src/test/java/com/rocketchat/common/network/ConnectivityManagerTest.java"}, "test_case": {"identifier": "testConnectErrorEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConnectErrorEvent() {\n        Throwable throwable = new IOException(\"IOException\");\n        manager.publishConnectError(throwable);\n\n        verify(listener, only()).onConnectError(throwableCaptor.capture());\n        assertThat(throwableCaptor.getValue(), is(equalTo(throwable)));\n    }", "signature": "void testConnectErrorEvent()", "full_signature": "@Test public void testConnectErrorEvent()", "class_method_signature": "ConnectivityManagerTest.testConnectErrorEvent()", "testcase": true, "constructor": false, "invocations": ["publishConnectError", "onConnectError", "verify", "only", "capture", "assertThat", "getValue", "is", "equalTo"]}, "focal_class": {"identifier": "ConnectivityManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConcurrentLinkedQueue<ConnectListener> listeners;", "modifier": "private", "type": "ConcurrentLinkedQueue<ConnectListener>", "declarator": "listeners", "var_name": "listeners"}], "methods": [{"identifier": "ConnectivityManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConnectivityManager()", "full_signature": "public  ConnectivityManager()", "class_method_signature": "ConnectivityManager.ConnectivityManager()", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(ConnectListener listener)", "modifiers": "public", "return": "void", "signature": "void register(ConnectListener listener)", "full_signature": "public void register(ConnectListener listener)", "class_method_signature": "ConnectivityManager.register(ConnectListener listener)", "testcase": false, "constructor": false}, {"identifier": "publishConnect", "parameters": "(String sessionId)", "modifiers": "public", "return": "void", "signature": "void publishConnect(String sessionId)", "full_signature": "public void publishConnect(String sessionId)", "class_method_signature": "ConnectivityManager.publishConnect(String sessionId)", "testcase": false, "constructor": false}, {"identifier": "publishDisconnect", "parameters": "(boolean closedByServer)", "modifiers": "public", "return": "void", "signature": "void publishDisconnect(boolean closedByServer)", "full_signature": "public void publishDisconnect(boolean closedByServer)", "class_method_signature": "ConnectivityManager.publishDisconnect(boolean closedByServer)", "testcase": false, "constructor": false}, {"identifier": "publishConnectError", "parameters": "(Throwable websocketException)", "modifiers": "public", "return": "void", "signature": "void publishConnectError(Throwable websocketException)", "full_signature": "public void publishConnectError(Throwable websocketException)", "class_method_signature": "ConnectivityManager.publishConnectError(Throwable websocketException)", "testcase": false, "constructor": false}, {"identifier": "unRegister", "parameters": "(ConnectListener listener)", "modifiers": "public", "return": "Boolean", "signature": "Boolean unRegister(ConnectListener listener)", "full_signature": "public Boolean unRegister(ConnectListener listener)", "class_method_signature": "ConnectivityManager.unRegister(ConnectListener listener)", "testcase": false, "constructor": false}], "file": "rocketchat-common/src/main/java/com/rocketchat/common/network/ConnectivityManager.java"}, "focal_method": {"identifier": "publishConnectError", "parameters": "(Throwable websocketException)", "modifiers": "public", "return": "void", "body": "public void publishConnectError(Throwable websocketException) {\n        for (ConnectListener listener : listeners) {\n            listener.onConnectError(websocketException);\n        }\n    }", "signature": "void publishConnectError(Throwable websocketException)", "full_signature": "public void publishConnectError(Throwable websocketException)", "class_method_signature": "ConnectivityManager.publishConnectError(Throwable websocketException)", "testcase": false, "constructor": false, "invocations": ["onConnectError"]}, "repository": {"repo_id": 93714543, "url": "https://github.com/RocketChat/Rocket.Chat.Java.SDK", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 26, "size": 2962, "license": "licensed"}}