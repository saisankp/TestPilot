{"test_class": {"identifier": "TestPostman", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    RestTemplate mRequestService;", "modifier": "@Mock", "type": "RestTemplate", "declarator": "mRequestService", "var_name": "mRequestService"}, {"original_string": "@Mock\n    RequestUtil mRequestUtil;", "modifier": "@Mock", "type": "RequestUtil", "declarator": "mRequestUtil", "var_name": "mRequestUtil"}, {"original_string": "@InjectMocks\n    Postman postman = Mockito.mock(Postman.class);", "modifier": "@InjectMocks", "type": "Postman", "declarator": "postman = Mockito.mock(Postman.class)", "var_name": "postman"}], "file": "comm/src/test/java/br/com/hole19/marvel/comm/post_office/TestPostman.java"}, "test_case": {"identifier": "testListComicDetails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListComicDetails() {\n        String resourceUri = \"resourceUri\";\n\n        Context context = Mockito.mock(Context.class);\n        Mockito.doCallRealMethod().when(postman).listComicDetails(resourceUri, context);\n        postman.listComicDetails(resourceUri, context);\n        Mockito.verify(mRequestService).setBody(EventCatalog.e0001, Request.Method.GET);\n        Mockito.verify(mRequestService).execute(context);\n    }", "signature": "void testListComicDetails()", "full_signature": "@Test public void testListComicDetails()", "class_method_signature": "TestPostman.testListComicDetails()", "testcase": true, "constructor": false, "invocations": ["mock", "listComicDetails", "when", "doCallRealMethod", "listComicDetails", "setBody", "verify", "execute", "verify"]}, "focal_class": {"identifier": "Postman", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TAG = \"Postman\";", "modifier": "public static final", "type": "String", "declarator": "TAG = \"Postman\"", "var_name": "TAG"}, {"original_string": "@Inject\n    RestTemplate mRequestService;", "modifier": "@Inject", "type": "RestTemplate", "declarator": "mRequestService", "var_name": "mRequestService"}, {"original_string": "@Inject\n    RequestUtil mRequestUtil;", "modifier": "@Inject", "type": "RequestUtil", "declarator": "mRequestUtil", "var_name": "mRequestUtil"}], "methods": [{"identifier": "Postman", "parameters": "()", "modifiers": "public", "return": "", "signature": " Postman()", "full_signature": "public  Postman()", "class_method_signature": "Postman.Postman()", "testcase": false, "constructor": true}, {"identifier": "listCharacters", "parameters": "(Context context, String query, int limit, int offset)", "modifiers": "public", "return": "void", "signature": "void listCharacters(Context context, String query, int limit, int offset)", "full_signature": "public void listCharacters(Context context, String query, int limit, int offset)", "class_method_signature": "Postman.listCharacters(Context context, String query, int limit, int offset)", "testcase": false, "constructor": false}, {"identifier": "listComicDetails", "parameters": "(String resourceURI, Context context)", "modifiers": "public", "return": "void", "signature": "void listComicDetails(String resourceURI, Context context)", "full_signature": "public void listComicDetails(String resourceURI, Context context)", "class_method_signature": "Postman.listComicDetails(String resourceURI, Context context)", "testcase": false, "constructor": false}, {"identifier": "cancelRequests", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancelRequests()", "full_signature": "public void cancelRequests()", "class_method_signature": "Postman.cancelRequests()", "testcase": false, "constructor": false}], "file": "comm/src/main/java/br/com/hole19/marvel/comm/post_office/Postman.java"}, "focal_method": {"identifier": "listComicDetails", "parameters": "(String resourceURI, Context context)", "modifiers": "public", "return": "void", "body": "public void listComicDetails(String resourceURI, Context context) {\n        if (!\"\".equals(resourceURI) && context != null) {\n            this.mRequestService.setUrl(this.mRequestUtil.parseExistentRequest(resourceURI, context));\n            this.mRequestService.setBody(EventCatalog.e0001, Request.Method.GET);\n            this.mRequestService.execute(context);\n        }\n    }", "signature": "void listComicDetails(String resourceURI, Context context)", "full_signature": "public void listComicDetails(String resourceURI, Context context)", "class_method_signature": "Postman.listComicDetails(String resourceURI, Context context)", "testcase": false, "constructor": false, "invocations": ["equals", "setUrl", "parseExistentRequest", "setBody", "execute"]}, "repository": {"repo_id": 59801168, "url": "https://github.com/edsilfer/marvel-characters", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 17729, "license": "licensed"}}