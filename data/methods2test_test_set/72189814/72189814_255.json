{"test_class": {"identifier": "BatchErrorTest", "superclass": "extends HaloRobolectricTest", "interfaces": "", "fields": [{"original_string": "private static Halo mHalo;", "modifier": "private static", "type": "Halo", "declarator": "mHalo", "var_name": "mHalo"}], "file": "sdk-libs/halo-content/src/test/java/com/mobgen/halo/android/content/models/BatchErrorTest.java"}, "test_case": {"identifier": "thatErrorIsParcelable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatErrorIsParcelable() throws JSONException {\n        BatchOperationResult instance = new BatchOperationResult(BatchOperator.DELETE, 0, false, new JSONObject(\"{\\n\" +\n                \"        \\\"error\\\": {\\n\" +\n                \"          \\\"status\\\": 403,\\n\" +\n                \"          \\\"message\\\": \\\"You can not update an instance of a module that does not belong to you or does not exist\\\",\\n\" +\n                \"          \\\"extra\\\": {},\\n\" +\n                \"          \\\"type\\\": \\\"HaloError\\\"\\n\" +\n                \"        }\\n\" +\n                \"      }\"));\n        BatchError error = instance.getDataError();\n        BatchError parcelInstance = TestUtils.testParcel(error, BatchError.CREATOR);\n        assertThat(error.getError().mMessage).isEqualTo(parcelInstance.getError().mMessage);\n    }", "signature": "void thatErrorIsParcelable()", "full_signature": "@Test public void thatErrorIsParcelable()", "class_method_signature": "BatchErrorTest.thatErrorIsParcelable()", "testcase": true, "constructor": false, "invocations": ["getDataError", "testParcel", "isEqualTo", "assertThat", "getError", "getError"]}, "focal_class": {"identifier": "BatchError", "superclass": "", "interfaces": "implements Parcelable", "fields": [{"original_string": "@JsonField(name = \"error\")\n    BatchErrorInfo mError;", "modifier": "@JsonField(name = \"error\")", "type": "BatchErrorInfo", "declarator": "mError", "var_name": "mError"}, {"original_string": "public static final Creator<BatchError> CREATOR = new Creator<BatchError>() {\n        @Override\n        public BatchError createFromParcel(Parcel in) {\n            return new BatchError(in);\n        }\n\n        @Override\n        public BatchError[] newArray(int size) {\n            return new BatchError[size];\n        }\n    };", "modifier": "public static final", "type": "Creator<BatchError>", "declarator": "CREATOR = new Creator<BatchError>() {\n        @Override\n        public BatchError createFromParcel(Parcel in) {\n            return new BatchError(in);\n        }\n\n        @Override\n        public BatchError[] newArray(int size) {\n            return new BatchError[size];\n        }\n    }", "var_name": "CREATOR"}], "methods": [{"identifier": "BatchError", "parameters": "()", "modifiers": "protected", "return": "", "signature": " BatchError()", "full_signature": "protected  BatchError()", "class_method_signature": "BatchError.BatchError()", "testcase": false, "constructor": true}, {"identifier": "describeContents", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int describeContents()", "full_signature": "@Override public int describeContents()", "class_method_signature": "BatchError.describeContents()", "testcase": false, "constructor": false}, {"identifier": "BatchError", "parameters": "(Parcel in)", "modifiers": "protected", "return": "", "signature": " BatchError(Parcel in)", "full_signature": "protected  BatchError(Parcel in)", "class_method_signature": "BatchError.BatchError(Parcel in)", "testcase": false, "constructor": true}, {"identifier": "writeToParcel", "parameters": "(Parcel dest, int flags)", "modifiers": "@Override public", "return": "void", "signature": "void writeToParcel(Parcel dest, int flags)", "full_signature": "@Override public void writeToParcel(Parcel dest, int flags)", "class_method_signature": "BatchError.writeToParcel(Parcel dest, int flags)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(@Nullable String batchError, @NonNull Parser.Factory parser)", "modifiers": "@Nullable public static", "return": "BatchError", "signature": "BatchError deserialize(@Nullable String batchError, @NonNull Parser.Factory parser)", "full_signature": "@Nullable public static BatchError deserialize(@Nullable String batchError, @NonNull Parser.Factory parser)", "class_method_signature": "BatchError.deserialize(@Nullable String batchError, @NonNull Parser.Factory parser)", "testcase": false, "constructor": false}, {"identifier": "getError", "parameters": "()", "modifiers": "@NonNull @Api(2.3) public", "return": "BatchErrorInfo", "signature": "BatchErrorInfo getError()", "full_signature": "@NonNull @Api(2.3) public BatchErrorInfo getError()", "class_method_signature": "BatchError.getError()", "testcase": false, "constructor": false}], "file": "sdk-libs/halo-content/src/main/java/com/mobgen/halo/android/content/models/BatchError.java"}, "focal_method": {"identifier": "getError", "parameters": "()", "modifiers": "@NonNull @Api(2.3) public", "return": "BatchErrorInfo", "body": "@NonNull\n    @Api(2.3)\n    public BatchErrorInfo getError() {\n        return mError;\n    }", "signature": "BatchErrorInfo getError()", "full_signature": "@NonNull @Api(2.3) public BatchErrorInfo getError()", "class_method_signature": "BatchError.getError()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}