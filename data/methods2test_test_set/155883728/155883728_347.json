{"test_class": {"identifier": "NodeFacadeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Session session;", "modifier": "@Mock", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "JcrSessionFacade sessionFacade;", "modifier": "", "type": "JcrSessionFacade", "declarator": "sessionFacade", "var_name": "sessionFacade"}], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/NodeFacadeTest.java"}, "test_case": {"identifier": "testROUpdate", "parameters": "()", "modifiers": "@Test(expected = ListenerReadOnlyException.class) public", "return": "void", "body": "@Test(expected = ListenerReadOnlyException.class)\n    public void testROUpdate() throws Exception {\n        NodeFacade<Node, Session> facade = getFacade(mock(Node.class));\n        facade.update(\"\");\n    }", "signature": "void testROUpdate()", "full_signature": "@Test(expected = ListenerReadOnlyException.class) public void testROUpdate()", "class_method_signature": "NodeFacadeTest.testROUpdate()", "testcase": true, "constructor": false, "invocations": ["getFacade", "mock", "update"]}, "focal_class": {"identifier": "NodeFacade", "superclass": "extends ItemFacade<N, S>", "interfaces": "implements Node", "fields": [], "methods": [{"identifier": "NodeFacade", "parameters": "(final @NotNull N delegate, final @NotNull SessionFacade<S> session)", "modifiers": "public", "return": "", "signature": " NodeFacade(final @NotNull N delegate, final @NotNull SessionFacade<S> session)", "full_signature": "public  NodeFacade(final @NotNull N delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "NodeFacade.NodeFacade(final @NotNull N delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "wrap", "parameters": "(final @NotNull Node primaryItem, final @NotNull SessionFacade<?> session)", "modifiers": "public static @NotNull", "return": "Node", "signature": "Node wrap(final @NotNull Node primaryItem, final @NotNull SessionFacade<?> session)", "full_signature": "public static @NotNull Node wrap(final @NotNull Node primaryItem, final @NotNull SessionFacade<?> session)", "class_method_signature": "NodeFacade.wrap(final @NotNull Node primaryItem, final @NotNull SessionFacade<?> session)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(final @Nullable Node node)", "modifiers": "public static @Nullable", "return": "Node", "signature": "Node unwrap(final @Nullable Node node)", "full_signature": "public static @Nullable Node unwrap(final @Nullable Node node)", "class_method_signature": "NodeFacade.unwrap(final @Nullable Node node)", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "(String relPath)", "modifiers": "@Override public final", "return": "Node", "signature": "Node getNode(String relPath)", "full_signature": "@Override public final Node getNode(String relPath)", "class_method_signature": "NodeFacade.getNode(String relPath)", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "()", "modifiers": "@Override public final", "return": "NodeIterator", "signature": "NodeIterator getNodes()", "full_signature": "@Override public final NodeIterator getNodes()", "class_method_signature": "NodeFacade.getNodes()", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "(String namePattern)", "modifiers": "@Override public final", "return": "NodeIterator", "signature": "NodeIterator getNodes(String namePattern)", "full_signature": "@Override public final NodeIterator getNodes(String namePattern)", "class_method_signature": "NodeFacade.getNodes(String namePattern)", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "(String[] nameGlobs)", "modifiers": "@Override public final", "return": "NodeIterator", "signature": "NodeIterator getNodes(String[] nameGlobs)", "full_signature": "@Override public final NodeIterator getNodes(String[] nameGlobs)", "class_method_signature": "NodeFacade.getNodes(String[] nameGlobs)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(String relPath)", "modifiers": "@Override public final", "return": "Property", "signature": "Property getProperty(String relPath)", "full_signature": "@Override public final Property getProperty(String relPath)", "class_method_signature": "NodeFacade.getProperty(String relPath)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getProperties()", "full_signature": "@Override public final PropertyIterator getProperties()", "class_method_signature": "NodeFacade.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "(String namePattern)", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getProperties(String namePattern)", "full_signature": "@Override public final PropertyIterator getProperties(String namePattern)", "class_method_signature": "NodeFacade.getProperties(String namePattern)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "(String[] nameGlobs)", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getProperties(String[] nameGlobs)", "full_signature": "@Override public final PropertyIterator getProperties(String[] nameGlobs)", "class_method_signature": "NodeFacade.getProperties(String[] nameGlobs)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryItem", "parameters": "()", "modifiers": "@Override public final", "return": "Item", "signature": "Item getPrimaryItem()", "full_signature": "@Override public final Item getPrimaryItem()", "class_method_signature": "NodeFacade.getPrimaryItem()", "testcase": false, "constructor": false}, {"identifier": "getUUID", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public final", "return": "String", "signature": "String getUUID()", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public final String getUUID()", "class_method_signature": "NodeFacade.getUUID()", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getIdentifier()", "full_signature": "@Override public final String getIdentifier()", "class_method_signature": "NodeFacade.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int getIndex()", "full_signature": "@Override public final int getIndex()", "class_method_signature": "NodeFacade.getIndex()", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "()", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getReferences()", "full_signature": "@Override public final PropertyIterator getReferences()", "class_method_signature": "NodeFacade.getReferences()", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "(String name)", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getReferences(String name)", "full_signature": "@Override public final PropertyIterator getReferences(String name)", "class_method_signature": "NodeFacade.getReferences(String name)", "testcase": false, "constructor": false}, {"identifier": "getWeakReferences", "parameters": "()", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getWeakReferences()", "full_signature": "@Override public final PropertyIterator getWeakReferences()", "class_method_signature": "NodeFacade.getWeakReferences()", "testcase": false, "constructor": false}, {"identifier": "getWeakReferences", "parameters": "(String name)", "modifiers": "@Override public final", "return": "PropertyIterator", "signature": "PropertyIterator getWeakReferences(String name)", "full_signature": "@Override public final PropertyIterator getWeakReferences(String name)", "class_method_signature": "NodeFacade.getWeakReferences(String name)", "testcase": false, "constructor": false}, {"identifier": "hasNode", "parameters": "(String relPath)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean hasNode(String relPath)", "full_signature": "@Override public final boolean hasNode(String relPath)", "class_method_signature": "NodeFacade.hasNode(String relPath)", "testcase": false, "constructor": false}, {"identifier": "hasProperty", "parameters": "(String relPath)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean hasProperty(String relPath)", "full_signature": "@Override public final boolean hasProperty(String relPath)", "class_method_signature": "NodeFacade.hasProperty(String relPath)", "testcase": false, "constructor": false}, {"identifier": "hasNodes", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean hasNodes()", "full_signature": "@Override public final boolean hasNodes()", "class_method_signature": "NodeFacade.hasNodes()", "testcase": false, "constructor": false}, {"identifier": "hasProperties", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean hasProperties()", "full_signature": "@Override public final boolean hasProperties()", "class_method_signature": "NodeFacade.hasProperties()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryNodeType", "parameters": "()", "modifiers": "@Override public final", "return": "NodeType", "signature": "NodeType getPrimaryNodeType()", "full_signature": "@Override public final NodeType getPrimaryNodeType()", "class_method_signature": "NodeFacade.getPrimaryNodeType()", "testcase": false, "constructor": false}, {"identifier": "getMixinNodeTypes", "parameters": "()", "modifiers": "@Override public final", "return": "NodeType[]", "signature": "NodeType[] getMixinNodeTypes()", "full_signature": "@Override public final NodeType[] getMixinNodeTypes()", "class_method_signature": "NodeFacade.getMixinNodeTypes()", "testcase": false, "constructor": false}, {"identifier": "isNodeType", "parameters": "(String nodeTypeName)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isNodeType(String nodeTypeName)", "full_signature": "@Override public final boolean isNodeType(String nodeTypeName)", "class_method_signature": "NodeFacade.isNodeType(String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "canAddMixin", "parameters": "(String mixinName)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean canAddMixin(String mixinName)", "full_signature": "@Override public final boolean canAddMixin(String mixinName)", "class_method_signature": "NodeFacade.canAddMixin(String mixinName)", "testcase": false, "constructor": false}, {"identifier": "getDefinition", "parameters": "()", "modifiers": "@Override public final", "return": "NodeDefinition", "signature": "NodeDefinition getDefinition()", "full_signature": "@Override public final NodeDefinition getDefinition()", "class_method_signature": "NodeFacade.getDefinition()", "testcase": false, "constructor": false}, {"identifier": "getCorrespondingNodePath", "parameters": "(String workspaceName)", "modifiers": "@Override public final", "return": "String", "signature": "String getCorrespondingNodePath(String workspaceName)", "full_signature": "@Override public final String getCorrespondingNodePath(String workspaceName)", "class_method_signature": "NodeFacade.getCorrespondingNodePath(String workspaceName)", "testcase": false, "constructor": false}, {"identifier": "getSharedSet", "parameters": "()", "modifiers": "@Override public final", "return": "NodeIterator", "signature": "NodeIterator getSharedSet()", "full_signature": "@Override public final NodeIterator getSharedSet()", "class_method_signature": "NodeFacade.getSharedSet()", "testcase": false, "constructor": false}, {"identifier": "isCheckedOut", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isCheckedOut()", "full_signature": "@Override public final boolean isCheckedOut()", "class_method_signature": "NodeFacade.isCheckedOut()", "testcase": false, "constructor": false}, {"identifier": "getVersionHistory", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public final", "return": "VersionHistory", "signature": "VersionHistory getVersionHistory()", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public final VersionHistory getVersionHistory()", "class_method_signature": "NodeFacade.getVersionHistory()", "testcase": false, "constructor": false}, {"identifier": "getBaseVersion", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public final", "return": "Version", "signature": "Version getBaseVersion()", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public final Version getBaseVersion()", "class_method_signature": "NodeFacade.getBaseVersion()", "testcase": false, "constructor": false}, {"identifier": "getLock", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"deprecation\") public final", "return": "Lock", "signature": "Lock getLock()", "full_signature": "@Override @SuppressWarnings(\"deprecation\") public final Lock getLock()", "class_method_signature": "NodeFacade.getLock()", "testcase": false, "constructor": false}, {"identifier": "holdsLock", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public final", "return": "boolean", "signature": "boolean holdsLock()", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public final boolean holdsLock()", "class_method_signature": "NodeFacade.holdsLock()", "testcase": false, "constructor": false}, {"identifier": "isLocked", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isLocked()", "full_signature": "@Override public final boolean isLocked()", "class_method_signature": "NodeFacade.isLocked()", "testcase": false, "constructor": false}, {"identifier": "getAllowedLifecycleTransistions", "parameters": "()", "modifiers": "@Override public final", "return": "String[]", "signature": "String[] getAllowedLifecycleTransistions()", "full_signature": "@Override public final String[] getAllowedLifecycleTransistions()", "class_method_signature": "NodeFacade.getAllowedLifecycleTransistions()", "testcase": false, "constructor": false}, {"identifier": "addNode", "parameters": "(String relPath)", "modifiers": "@Override public final", "return": "Node", "signature": "Node addNode(String relPath)", "full_signature": "@Override public final Node addNode(String relPath)", "class_method_signature": "NodeFacade.addNode(String relPath)", "testcase": false, "constructor": false}, {"identifier": "addNode", "parameters": "(String relPath, String primaryNodeTypeName)", "modifiers": "@Override public final", "return": "Node", "signature": "Node addNode(String relPath, String primaryNodeTypeName)", "full_signature": "@Override public final Node addNode(String relPath, String primaryNodeTypeName)", "class_method_signature": "NodeFacade.addNode(String relPath, String primaryNodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "orderBefore", "parameters": "(String srcChildRelPath, String destChildRelPath)", "modifiers": "@Override public final", "return": "void", "signature": "void orderBefore(String srcChildRelPath, String destChildRelPath)", "full_signature": "@Override public final void orderBefore(String srcChildRelPath, String destChildRelPath)", "class_method_signature": "NodeFacade.orderBefore(String srcChildRelPath, String destChildRelPath)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Value value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Value value)", "full_signature": "@Override public final Property setProperty(String name, Value value)", "class_method_signature": "NodeFacade.setProperty(String name, Value value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Value value, int type)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Value value, int type)", "full_signature": "@Override public final Property setProperty(String name, Value value, int type)", "class_method_signature": "NodeFacade.setProperty(String name, Value value, int type)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Value[] values)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Value[] values)", "full_signature": "@Override public final Property setProperty(String name, Value[] values)", "class_method_signature": "NodeFacade.setProperty(String name, Value[] values)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Value[] values, int type)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Value[] values, int type)", "full_signature": "@Override public final Property setProperty(String name, Value[] values, int type)", "class_method_signature": "NodeFacade.setProperty(String name, Value[] values, int type)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, String[] values)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, String[] values)", "full_signature": "@Override public final Property setProperty(String name, String[] values)", "class_method_signature": "NodeFacade.setProperty(String name, String[] values)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, String[] values, int type)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, String[] values, int type)", "full_signature": "@Override public final Property setProperty(String name, String[] values, int type)", "class_method_signature": "NodeFacade.setProperty(String name, String[] values, int type)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, String value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, String value)", "full_signature": "@Override public final Property setProperty(String name, String value)", "class_method_signature": "NodeFacade.setProperty(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, String value, int type)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, String value, int type)", "full_signature": "@Override public final Property setProperty(String name, String value, int type)", "class_method_signature": "NodeFacade.setProperty(String name, String value, int type)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, InputStream value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, InputStream value)", "full_signature": "@Override public final Property setProperty(String name, InputStream value)", "class_method_signature": "NodeFacade.setProperty(String name, InputStream value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Binary value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Binary value)", "full_signature": "@Override public final Property setProperty(String name, Binary value)", "class_method_signature": "NodeFacade.setProperty(String name, Binary value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, boolean value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, boolean value)", "full_signature": "@Override public final Property setProperty(String name, boolean value)", "class_method_signature": "NodeFacade.setProperty(String name, boolean value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, double value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, double value)", "full_signature": "@Override public final Property setProperty(String name, double value)", "class_method_signature": "NodeFacade.setProperty(String name, double value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, BigDecimal value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, BigDecimal value)", "full_signature": "@Override public final Property setProperty(String name, BigDecimal value)", "class_method_signature": "NodeFacade.setProperty(String name, BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, long value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, long value)", "full_signature": "@Override public final Property setProperty(String name, long value)", "class_method_signature": "NodeFacade.setProperty(String name, long value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Calendar value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Calendar value)", "full_signature": "@Override public final Property setProperty(String name, Calendar value)", "class_method_signature": "NodeFacade.setProperty(String name, Calendar value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String name, Node value)", "modifiers": "@Override public final", "return": "Property", "signature": "Property setProperty(String name, Node value)", "full_signature": "@Override public final Property setProperty(String name, Node value)", "class_method_signature": "NodeFacade.setProperty(String name, Node value)", "testcase": false, "constructor": false}, {"identifier": "setPrimaryType", "parameters": "(String nodeTypeName)", "modifiers": "@Override public final", "return": "void", "signature": "void setPrimaryType(String nodeTypeName)", "full_signature": "@Override public final void setPrimaryType(String nodeTypeName)", "class_method_signature": "NodeFacade.setPrimaryType(String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "addMixin", "parameters": "(String mixinName)", "modifiers": "@Override public final", "return": "void", "signature": "void addMixin(String mixinName)", "full_signature": "@Override public final void addMixin(String mixinName)", "class_method_signature": "NodeFacade.addMixin(String mixinName)", "testcase": false, "constructor": false}, {"identifier": "removeMixin", "parameters": "(String mixinName)", "modifiers": "@Override public final", "return": "void", "signature": "void removeMixin(String mixinName)", "full_signature": "@Override public final void removeMixin(String mixinName)", "class_method_signature": "NodeFacade.removeMixin(String mixinName)", "testcase": false, "constructor": false}, {"identifier": "checkin", "parameters": "()", "modifiers": "@Override public final", "return": "Version", "signature": "Version checkin()", "full_signature": "@Override public final Version checkin()", "class_method_signature": "NodeFacade.checkin()", "testcase": false, "constructor": false}, {"identifier": "checkout", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void checkout()", "full_signature": "@Override public final void checkout()", "class_method_signature": "NodeFacade.checkout()", "testcase": false, "constructor": false}, {"identifier": "doneMerge", "parameters": "(Version version)", "modifiers": "@Override public final", "return": "void", "signature": "void doneMerge(Version version)", "full_signature": "@Override public final void doneMerge(Version version)", "class_method_signature": "NodeFacade.doneMerge(Version version)", "testcase": false, "constructor": false}, {"identifier": "cancelMerge", "parameters": "(Version version)", "modifiers": "@Override public final", "return": "void", "signature": "void cancelMerge(Version version)", "full_signature": "@Override public final void cancelMerge(Version version)", "class_method_signature": "NodeFacade.cancelMerge(Version version)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(String srcWorkspace)", "modifiers": "@Override public final", "return": "void", "signature": "void update(String srcWorkspace)", "full_signature": "@Override public final void update(String srcWorkspace)", "class_method_signature": "NodeFacade.update(String srcWorkspace)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(String srcWorkspace, boolean bestEffort)", "modifiers": "@Override public final", "return": "NodeIterator", "signature": "NodeIterator merge(String srcWorkspace, boolean bestEffort)", "full_signature": "@Override public final NodeIterator merge(String srcWorkspace, boolean bestEffort)", "class_method_signature": "NodeFacade.merge(String srcWorkspace, boolean bestEffort)", "testcase": false, "constructor": false}, {"identifier": "removeSharedSet", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void removeSharedSet()", "full_signature": "@Override public final void removeSharedSet()", "class_method_signature": "NodeFacade.removeSharedSet()", "testcase": false, "constructor": false}, {"identifier": "removeShare", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void removeShare()", "full_signature": "@Override public final void removeShare()", "class_method_signature": "NodeFacade.removeShare()", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(String versionName, boolean removeExisting)", "modifiers": "@Override public final", "return": "void", "signature": "void restore(String versionName, boolean removeExisting)", "full_signature": "@Override public final void restore(String versionName, boolean removeExisting)", "class_method_signature": "NodeFacade.restore(String versionName, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(Version version, boolean removeExisting)", "modifiers": "@Override public final", "return": "void", "signature": "void restore(Version version, boolean removeExisting)", "full_signature": "@Override public final void restore(Version version, boolean removeExisting)", "class_method_signature": "NodeFacade.restore(Version version, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(Version version, String relPath, boolean removeExisting)", "modifiers": "@Override public final", "return": "void", "signature": "void restore(Version version, String relPath, boolean removeExisting)", "full_signature": "@Override public final void restore(Version version, String relPath, boolean removeExisting)", "class_method_signature": "NodeFacade.restore(Version version, String relPath, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "restoreByLabel", "parameters": "(String versionLabel, boolean removeExisting)", "modifiers": "@Override public final", "return": "void", "signature": "void restoreByLabel(String versionLabel, boolean removeExisting)", "full_signature": "@Override public final void restoreByLabel(String versionLabel, boolean removeExisting)", "class_method_signature": "NodeFacade.restoreByLabel(String versionLabel, boolean removeExisting)", "testcase": false, "constructor": false}, {"identifier": "lock", "parameters": "(boolean isDeep, boolean isSessionScoped)", "modifiers": "@Override public final", "return": "Lock", "signature": "Lock lock(boolean isDeep, boolean isSessionScoped)", "full_signature": "@Override public final Lock lock(boolean isDeep, boolean isSessionScoped)", "class_method_signature": "NodeFacade.lock(boolean isDeep, boolean isSessionScoped)", "testcase": false, "constructor": false}, {"identifier": "unlock", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void unlock()", "full_signature": "@Override public final void unlock()", "class_method_signature": "NodeFacade.unlock()", "testcase": false, "constructor": false}, {"identifier": "followLifecycleTransition", "parameters": "(String transition)", "modifiers": "@Override public final", "return": "void", "signature": "void followLifecycleTransition(String transition)", "full_signature": "@Override public final void followLifecycleTransition(String transition)", "class_method_signature": "NodeFacade.followLifecycleTransition(String transition)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/NodeFacade.java"}, "focal_method": {"identifier": "update", "parameters": "(String srcWorkspace)", "modifiers": "@Override public final", "return": "void", "body": "@Override\n    public final void update(String srcWorkspace) throws RepositoryException {\n        throw new ListenerReadOnlyException();\n    }", "signature": "void update(String srcWorkspace)", "full_signature": "@Override public final void update(String srcWorkspace)", "class_method_signature": "NodeFacade.update(String srcWorkspace)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}