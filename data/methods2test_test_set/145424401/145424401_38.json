{"test_class": {"identifier": "StringListTest", "superclass": "", "interfaces": "", "fields": [], "file": "shared/src/test/java/org/eclipse/steady/shared/util/StringListTest.java"}, "test_case": {"identifier": "testFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFilter() {\n    final StringList list = new StringList(new String[] {\"foo.BAR\"});\n\n    final Map<String, String> m = new HashMap<String, String>();\n    m.put(\"foo.bar\", \"abc\");\n    m.put(\"john.doe\", \"123\");\n\n    // keep_matches = true\n    final Map<String, String> o1 =\n        list.filter(m, true, ComparisonMode.EQUALS, CaseSensitivity.CASE_SENSITIVE);\n    assertTrue(!o1.containsKey(\"foo.bar\"));\n    assertTrue(!o1.containsKey(\"john.doe\"));\n\n    final Map<String, String> o3 =\n        list.filter(m, true, ComparisonMode.EQUALS, CaseSensitivity.CASE_INSENSITIVE);\n    assertTrue(o3.containsKey(\"foo.bar\"));\n    assertTrue(!o3.containsKey(\"john.doe\"));\n\n    // keep_matches = false\n    final Map<String, String> o2 =\n        list.filter(m, false, ComparisonMode.EQUALS, CaseSensitivity.CASE_SENSITIVE);\n    assertTrue(o2.containsKey(\"foo.bar\"));\n    assertTrue(o2.containsKey(\"john.doe\"));\n\n    final Map<String, String> o4 =\n        list.filter(m, false, ComparisonMode.EQUALS, CaseSensitivity.CASE_INSENSITIVE);\n    assertTrue(!o4.containsKey(\"foo.bar\"));\n    assertTrue(o4.containsKey(\"john.doe\"));\n  }", "signature": "void testFilter()", "full_signature": "@Test public void testFilter()", "class_method_signature": "StringListTest.testFilter()", "testcase": true, "constructor": false, "invocations": ["put", "put", "filter", "assertTrue", "containsKey", "assertTrue", "containsKey", "filter", "assertTrue", "containsKey", "assertTrue", "containsKey", "filter", "assertTrue", "containsKey", "assertTrue", "containsKey", "filter", "assertTrue", "containsKey", "assertTrue", "containsKey"]}, "focal_class": {"identifier": "StringList", "superclass": "", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "private Set<String> itemlist = new HashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "itemlist = new HashSet<String>()", "var_name": "itemlist"}], "methods": [{"identifier": "StringList", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringList()", "full_signature": "public  StringList()", "class_method_signature": "StringList.StringList()", "testcase": false, "constructor": true}, {"identifier": "StringList", "parameters": "(String[] _itemlist)", "modifiers": "public", "return": "", "signature": " StringList(String[] _itemlist)", "full_signature": "public  StringList(String[] _itemlist)", "class_method_signature": "StringList.StringList(String[] _itemlist)", "testcase": false, "constructor": true}, {"identifier": "addAll", "parameters": "(String[] _itemlist)", "modifiers": "public", "return": "StringList", "signature": "StringList addAll(String[] _itemlist)", "full_signature": "public StringList addAll(String[] _itemlist)", "class_method_signature": "StringList.addAll(String[] _itemlist)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(String[] _itemlist, boolean _trim)", "modifiers": "public", "return": "StringList", "signature": "StringList addAll(String[] _itemlist, boolean _trim)", "full_signature": "public StringList addAll(String[] _itemlist, boolean _trim)", "class_method_signature": "StringList.addAll(String[] _itemlist, boolean _trim)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(String _itemlist, String _separator, boolean _trim)", "modifiers": "public", "return": "StringList", "signature": "StringList addAll(String _itemlist, String _separator, boolean _trim)", "full_signature": "public StringList addAll(String _itemlist, String _separator, boolean _trim)", "class_method_signature": "StringList.addAll(String _itemlist, String _separator, boolean _trim)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String _item)", "modifiers": "public", "return": "StringList", "signature": "StringList add(String _item)", "full_signature": "public StringList add(String _item)", "class_method_signature": "StringList.add(String _item)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String _item, boolean _trim)", "modifiers": "public", "return": "StringList", "signature": "StringList add(String _item, boolean _trim)", "full_signature": "public StringList add(String _item, boolean _trim)", "class_method_signature": "StringList.add(String _item, boolean _trim)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "public Iterator<String> iterator()", "class_method_signature": "StringList.iterator()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String _value)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String _value)", "full_signature": "public boolean contains(String _value)", "class_method_signature": "StringList.contains(String _value)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String _value, ComparisonMode _mode, CaseSensitivity _case_sensitivity)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String _value, ComparisonMode _mode, CaseSensitivity _case_sensitivity)", "full_signature": "public boolean contains(String _value, ComparisonMode _mode, CaseSensitivity _case_sensitivity)", "class_method_signature": "StringList.contains(String _value, ComparisonMode _mode, CaseSensitivity _case_sensitivity)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "StringList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "StringList.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(String _sep)", "modifiers": "public", "return": "String", "signature": "String toString(String _sep)", "full_signature": "public String toString(String _sep)", "class_method_signature": "StringList.toString(String _sep)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "modifiers": "public", "return": "HashMap<String, String>", "signature": "HashMap<String, String> filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "full_signature": "public HashMap<String, String> filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "class_method_signature": "StringList.filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "testcase": false, "constructor": false}], "file": "shared/src/main/java/org/eclipse/steady/shared/util/StringList.java"}, "focal_method": {"identifier": "filter", "parameters": "(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "modifiers": "public", "return": "HashMap<String, String>", "body": "public HashMap<String, String> filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity) {\n    final HashMap<String, String> out = new HashMap<String, String>();\n    for (Map.Entry<String, String> e : _in.entrySet()) {\n      if (this.contains(e.getKey(), _mode, _case_sensitivity)) {\n        if (_keep_matches) out.put(e.getKey(), e.getValue());\n      } else if (!_keep_matches) {\n        out.put(e.getKey(), e.getValue());\n      }\n    }\n    return out;\n  }", "signature": "HashMap<String, String> filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "full_signature": "public HashMap<String, String> filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "class_method_signature": "StringList.filter(\n      Map<String, String> _in,\n      boolean _keep_matches,\n      ComparisonMode _mode,\n      CaseSensitivity _case_sensitivity)", "testcase": false, "constructor": false, "invocations": ["entrySet", "contains", "getKey", "put", "getKey", "getValue", "put", "getKey", "getValue"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}