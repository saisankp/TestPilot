{"test_class": {"identifier": "SubscriberStageFactoryTest", "superclass": "extends StageTestBase", "interfaces": "", "fields": [{"original_string": "private final SubscriberStageFactory factory = new SubscriberStageFactory();", "modifier": "private final", "type": "SubscriberStageFactory", "declarator": "factory = new SubscriberStageFactory()", "var_name": "factory"}], "file": "implementation/src/test/java/io/smallrye/reactive/streams/stages/SubscriberStageFactoryTest.java"}, "test_case": {"identifier": "createWithoutSubscriber", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void createWithoutSubscriber() {\n        factory.create(new Engine(), () -> null);\n    }", "signature": "void createWithoutSubscriber()", "full_signature": "@Test(expected = NullPointerException.class) public void createWithoutSubscriber()", "class_method_signature": "SubscriberStageFactoryTest.createWithoutSubscriber()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "SubscriberStageFactory", "superclass": "", "interfaces": "implements TerminalStageFactory<Stage.SubscriberStage>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Engine engine, Stage.SubscriberStage stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "TerminalStage<I, O>", "signature": "TerminalStage<I, O> create(Engine engine, Stage.SubscriberStage stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public TerminalStage<I, O> create(Engine engine, Stage.SubscriberStage stage)", "class_method_signature": "SubscriberStageFactory.create(Engine engine, Stage.SubscriberStage stage)", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/stages/SubscriberStageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Engine engine, Stage.SubscriberStage stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "TerminalStage<I, O>", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public <I, O> TerminalStage<I, O> create(Engine engine, Stage.SubscriberStage stage) {\n        Subscriber<I> subscriber = (Subscriber<I>) Objects.requireNonNull(stage).getRsSubscriber();\n        Objects.requireNonNull(subscriber);\n        return (TerminalStage<I, O>) new SubscriberStage<>(subscriber);\n    }", "signature": "TerminalStage<I, O> create(Engine engine, Stage.SubscriberStage stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public TerminalStage<I, O> create(Engine engine, Stage.SubscriberStage stage)", "class_method_signature": "SubscriberStageFactory.create(Engine engine, Stage.SubscriberStage stage)", "testcase": false, "constructor": false, "invocations": ["getRsSubscriber", "requireNonNull", "requireNonNull"]}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}