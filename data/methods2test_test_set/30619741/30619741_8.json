{"test_class": {"identifier": "FirstFoundLocalLookupStrategyTest", "superclass": "extends AbstractLookupStrategyTest", "interfaces": "", "fields": [], "file": "microservices/src/test/java/io/silverware/microservices/silver/services/lookup/FirstFoundLocalLookupStrategyTest.java"}, "test_case": {"identifier": "testGetService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testGetService() throws Exception {\n      Set<Object> expectedResult = new HashSet<>(asList(\"1\", \"2\", \"3\"));\n      new Expectations(Context.class) {{\n         context.lookupLocalMicroservice(META_DATA);\n         times = 4;\n         result = expectedResult;\n      }};\n\n      List<Object> result = new ArrayList<>();\n      for (int i = 0; i < 4; i++) {\n         result.add(strategy.getService());\n      }\n      assertThat(result).containsExactly(\"1\", \"1\", \"1\", \"1\");\n\n   }", "signature": "void testGetService()", "full_signature": "@Test public void testGetService()", "class_method_signature": "FirstFoundLocalLookupStrategyTest.testGetService()", "testcase": true, "constructor": false, "invocations": ["asList", "lookupLocalMicroservice", "add", "getService", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "FirstFoundLocalLookupStrategy", "superclass": "extends AbstractLookupStrategy", "interfaces": "", "fields": [], "methods": [{"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getService()", "full_signature": "@Override public Object getService()", "class_method_signature": "FirstFoundLocalLookupStrategy.getService()", "testcase": false, "constructor": false}], "file": "microservices/src/main/java/io/silverware/microservices/silver/services/lookup/FirstFoundLocalLookupStrategy.java"}, "focal_method": {"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "Object", "body": "@Override\n   public Object getService() {\n      Set<Object> services = context.lookupLocalMicroservice(metaData);\n      if (services.isEmpty()) {\n         throw new RuntimeException(\"No service found for: \" + metaData);\n      }\n      return services.iterator().next();\n\n   }", "signature": "Object getService()", "full_signature": "@Override public Object getService()", "class_method_signature": "FirstFoundLocalLookupStrategy.getService()", "testcase": false, "constructor": false, "invocations": ["lookupLocalMicroservice", "isEmpty", "next", "iterator"]}, "repository": {"repo_id": 30619741, "url": "https://github.com/SilverThings/SilverWare", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 21, "size": 3333, "license": "licensed"}}