{"test_class": {"identifier": "ModelNodeHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ModelNode modelNode;", "modifier": "private", "type": "ModelNode", "declarator": "modelNode", "var_name": "modelNode"}, {"original_string": "private ModelNode foo;", "modifier": "private", "type": "ModelNode", "declarator": "foo", "var_name": "foo"}, {"original_string": "private ModelNode bar;", "modifier": "private", "type": "ModelNode", "declarator": "bar", "var_name": "bar"}], "file": "dmr/src/test/java/org/jboss/hal/dmr/ModelNodeHelperTest.java"}, "test_case": {"identifier": "invalidPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invalidPath() {\n        assertFalse(ModelNodeHelper.failSafeGet(modelNode, \"/\").isDefined());\n    }", "signature": "void invalidPath()", "full_signature": "@Test public void invalidPath()", "class_method_signature": "ModelNodeHelperTest.invalidPath()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isDefined", "failSafeGet"]}, "focal_class": {"identifier": "ModelNodeHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ENCODED_SLASH = \"%2F\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_SLASH = \"%2F\"", "var_name": "ENCODED_SLASH"}, {"original_string": "private static final DateTimeFormat ISO_8601 = GWT.isScript() ? DateTimeFormat.getFormat(\n            DateTimeFormat.PredefinedFormat.ISO_8601) : null;", "modifier": "private static final", "type": "DateTimeFormat", "declarator": "ISO_8601 = GWT.isScript() ? DateTimeFormat.getFormat(\n            DateTimeFormat.PredefinedFormat.ISO_8601) : null", "var_name": "ISO_8601"}], "methods": [{"identifier": "encodeValue", "parameters": "(String value)", "modifiers": "@JsIgnore public static", "return": "String", "signature": "String encodeValue(String value)", "full_signature": "@JsIgnore public static String encodeValue(String value)", "class_method_signature": "ModelNodeHelper.encodeValue(String value)", "testcase": false, "constructor": false}, {"identifier": "decodeValue", "parameters": "(String value)", "modifiers": "@JsIgnore public static", "return": "String", "signature": "String decodeValue(String value)", "full_signature": "@JsIgnore public static String decodeValue(String value)", "class_method_signature": "ModelNodeHelper.decodeValue(String value)", "testcase": false, "constructor": false}, {"identifier": "failSafeGet", "parameters": "(ModelNode modelNode, String path)", "modifiers": "public static", "return": "ModelNode", "signature": "ModelNode failSafeGet(ModelNode modelNode, String path)", "full_signature": "public static ModelNode failSafeGet(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafeGet(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "failSafeBoolean", "parameters": "(ModelNode modelNode, String path)", "modifiers": "public static", "return": "boolean", "signature": "boolean failSafeBoolean(ModelNode modelNode, String path)", "full_signature": "public static boolean failSafeBoolean(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafeBoolean(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "failSafeDate", "parameters": "(ModelNode modelNode, String path)", "modifiers": "@JsIgnore public static", "return": "Date", "signature": "Date failSafeDate(ModelNode modelNode, String path)", "full_signature": "@JsIgnore public static Date failSafeDate(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafeDate(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "failSafeList", "parameters": "(ModelNode modelNode, String path)", "modifiers": "@JsIgnore public static", "return": "List<ModelNode>", "signature": "List<ModelNode> failSafeList(ModelNode modelNode, String path)", "full_signature": "@JsIgnore public static List<ModelNode> failSafeList(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafeList(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "failSafePropertyList", "parameters": "(ModelNode modelNode, String path)", "modifiers": "@JsIgnore public static", "return": "List<Property>", "signature": "List<Property> failSafePropertyList(ModelNode modelNode, String path)", "full_signature": "@JsIgnore public static List<Property> failSafePropertyList(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafePropertyList(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(ModelNode modelNode, String attribute, Supplier<T> supplier, T defaultValue)", "modifiers": "@JsIgnore public static", "return": "T", "signature": "T getOrDefault(ModelNode modelNode, String attribute, Supplier<T> supplier, T defaultValue)", "full_signature": "@JsIgnore public static T getOrDefault(ModelNode modelNode, String attribute, Supplier<T> supplier, T defaultValue)", "class_method_signature": "ModelNodeHelper.getOrDefault(ModelNode modelNode, String attribute, Supplier<T> supplier, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "storeIndex", "parameters": "(List<ModelNode> modelNodes)", "modifiers": "@JsIgnore public static", "return": "void", "signature": "void storeIndex(List<ModelNode> modelNodes)", "full_signature": "@JsIgnore public static void storeIndex(List<ModelNode> modelNodes)", "class_method_signature": "ModelNodeHelper.storeIndex(List<ModelNode> modelNodes)", "testcase": false, "constructor": false}, {"identifier": "asNamedNodes", "parameters": "(List<Property> properties)", "modifiers": "@JsIgnore public static", "return": "List<NamedNode>", "signature": "List<NamedNode> asNamedNodes(List<Property> properties)", "full_signature": "@JsIgnore public static List<NamedNode> asNamedNodes(List<Property> properties)", "class_method_signature": "ModelNodeHelper.asNamedNodes(List<Property> properties)", "testcase": false, "constructor": false}, {"identifier": "asEnumValue", "parameters": "(ModelNode modelNode, String attribute, Function<String, E> valueOf,\n            E defaultValue)", "modifiers": "@JsIgnore public static", "return": "E", "signature": "E asEnumValue(ModelNode modelNode, String attribute, Function<String, E> valueOf,\n            E defaultValue)", "full_signature": "@JsIgnore public static E asEnumValue(ModelNode modelNode, String attribute, Function<String, E> valueOf,\n            E defaultValue)", "class_method_signature": "ModelNodeHelper.asEnumValue(ModelNode modelNode, String attribute, Function<String, E> valueOf,\n            E defaultValue)", "testcase": false, "constructor": false}, {"identifier": "asEnumValue", "parameters": "(ModelNode modelNode, Function<String, E> valueOf, E defaultValue)", "modifiers": "@JsIgnore public static", "return": "E", "signature": "E asEnumValue(ModelNode modelNode, Function<String, E> valueOf, E defaultValue)", "full_signature": "@JsIgnore public static E asEnumValue(ModelNode modelNode, Function<String, E> valueOf, E defaultValue)", "class_method_signature": "ModelNodeHelper.asEnumValue(ModelNode modelNode, Function<String, E> valueOf, E defaultValue)", "testcase": false, "constructor": false}, {"identifier": "asAttributeValue", "parameters": "(E enumValue)", "modifiers": "@JsIgnore public static", "return": "String", "signature": "String asAttributeValue(E enumValue)", "full_signature": "@JsIgnore public static String asAttributeValue(E enumValue)", "class_method_signature": "ModelNodeHelper.asAttributeValue(E enumValue)", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(ModelNode modelNode, String source, String destination)", "modifiers": "public static", "return": "void", "signature": "void move(ModelNode modelNode, String source, String destination)", "full_signature": "public static void move(ModelNode modelNode, String source, String destination)", "class_method_signature": "ModelNodeHelper.move(ModelNode modelNode, String source, String destination)", "testcase": false, "constructor": false}, {"identifier": "properties", "parameters": "(String... properties)", "modifiers": "public static", "return": "ModelNode", "signature": "ModelNode properties(String... properties)", "full_signature": "public static ModelNode properties(String... properties)", "class_method_signature": "ModelNodeHelper.properties(String... properties)", "testcase": false, "constructor": false}, {"identifier": "ModelNodeHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ModelNodeHelper()", "full_signature": "private  ModelNodeHelper()", "class_method_signature": "ModelNodeHelper.ModelNodeHelper()", "testcase": false, "constructor": true}, {"identifier": "jsFailSafeList", "parameters": "(ModelNode modelNode, String path)", "modifiers": "@JsMethod(name = \"failSafeList\") @EsReturn(\"ModelNode[]\") public static", "return": "ModelNode[]", "signature": "ModelNode[] jsFailSafeList(ModelNode modelNode, String path)", "full_signature": "@JsMethod(name = \"failSafeList\") @EsReturn(\"ModelNode[]\") public static ModelNode[] jsFailSafeList(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.jsFailSafeList(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "jsFailSafePropertyList", "parameters": "(ModelNode modelNode, String path)", "modifiers": "@JsMethod(name = \"failSafePropertyList\") @EsReturn(\"Property[]\") public static", "return": "Property[]", "signature": "Property[] jsFailSafePropertyList(ModelNode modelNode, String path)", "full_signature": "@JsMethod(name = \"failSafePropertyList\") @EsReturn(\"Property[]\") public static Property[] jsFailSafePropertyList(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.jsFailSafePropertyList(ModelNode modelNode, String path)", "testcase": false, "constructor": false}, {"identifier": "jsAsNamedNodes", "parameters": "(@EsParam(\"Property[]\") Property[] properties)", "modifiers": "@JsMethod(name = \"asNamedNodes\") @EsReturn(\"NamedNode[]\") public static", "return": "NamedNode[]", "signature": "NamedNode[] jsAsNamedNodes(@EsParam(\"Property[]\") Property[] properties)", "full_signature": "@JsMethod(name = \"asNamedNodes\") @EsReturn(\"NamedNode[]\") public static NamedNode[] jsAsNamedNodes(@EsParam(\"Property[]\") Property[] properties)", "class_method_signature": "ModelNodeHelper.jsAsNamedNodes(@EsParam(\"Property[]\") Property[] properties)", "testcase": false, "constructor": false}], "file": "dmr/src/main/java/org/jboss/hal/dmr/ModelNodeHelper.java"}, "focal_method": {"identifier": "failSafeGet", "parameters": "(ModelNode modelNode, String path)", "modifiers": "public static", "return": "ModelNode", "body": "public static ModelNode failSafeGet(ModelNode modelNode, String path) {\n        ModelNode undefined = new ModelNode();\n\n        if (Strings.emptyToNull(path) != null) {\n            Iterable<String> keys = Splitter.on('/').omitEmptyStrings().trimResults().split(path);\n            if (!Iterables.isEmpty(keys)) {\n                ModelNode context = modelNode;\n                for (String key : keys) {\n                    String safeKey = decodeValue(key);\n                    if (context.hasDefined(safeKey)) {\n                        context = context.get(safeKey);\n                    } else {\n                        context = undefined;\n                        break;\n                    }\n                }\n                return context;\n            }\n        }\n\n        return undefined;\n    }", "signature": "ModelNode failSafeGet(ModelNode modelNode, String path)", "full_signature": "public static ModelNode failSafeGet(ModelNode modelNode, String path)", "class_method_signature": "ModelNodeHelper.failSafeGet(ModelNode modelNode, String path)", "testcase": false, "constructor": false, "invocations": ["emptyToNull", "split", "trimResults", "omitEmptyStrings", "on", "isEmpty", "decodeValue", "hasDefined", "get"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}