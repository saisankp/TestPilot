{"test_class": {"identifier": "HelpTelnetHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/protocol/telnet/HelpTelnetHandlerTest.java"}, "test_case": {"identifier": "telnet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void telnet() throws Exception {\n        Assert.assertNotNull(new HelpTelnetHandler().telnet(null, \"\"));\n        Assert.assertNotNull(new HelpTelnetHandler().telnet(null, null));\n        Assert.assertNotNull(new HelpTelnetHandler().telnet(null, \"xx\"));\n    }", "signature": "void telnet()", "full_signature": "@Test public void telnet()", "class_method_signature": "HelpTelnetHandlerTest.telnet()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "telnet", "assertNotNull", "telnet", "assertNotNull", "telnet"]}, "focal_class": {"identifier": "HelpTelnetHandler", "superclass": "", "interfaces": "implements TelnetHandler", "fields": [], "methods": [{"identifier": "getCommand", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCommand()", "full_signature": "@Override public String getCommand()", "class_method_signature": "HelpTelnetHandler.getCommand()", "testcase": false, "constructor": false}, {"identifier": "telnet", "parameters": "(AbstractChannel channel, String message)", "modifiers": "@Override public", "return": "String", "signature": "String telnet(AbstractChannel channel, String message)", "full_signature": "@Override public String telnet(AbstractChannel channel, String message)", "class_method_signature": "HelpTelnetHandler.telnet(AbstractChannel channel, String message)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "HelpTelnetHandler.getDescription()", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/protocol/telnet/HelpTelnetHandler.java"}, "focal_method": {"identifier": "telnet", "parameters": "(AbstractChannel channel, String message)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String telnet(AbstractChannel channel, String message) {\n        StringBuffer result = new StringBuffer();\n        if (StringUtils.isNotBlank(message)) {\n            TelnetHandler handler = TelnetHandlerFactory.getHandler(message);\n            if (handler != null) {\n                result.append(handler.getCommand()).append(LINE)\n                    .append(handler.getDescription()).append(LINE);\n            } else {\n                result.append(\"Not found command : \" + message);\n            }\n        } else {\n            result.append(\"The supported command include:\").append(LINE);\n            for (Map.Entry<String, TelnetHandler> entry : TelnetHandlerFactory.getAllHandlers().entrySet()) {\n                result.append(entry.getKey()).append(\" \");\n                //result.append(entry.fetchKey() + \"\\t : \" + entry.getValue().getDescription() + \"\\r\\n\");\n            }\n            result.append(LINE);\n        }\n        return result.toString();\n    }", "signature": "String telnet(AbstractChannel channel, String message)", "full_signature": "@Override public String telnet(AbstractChannel channel, String message)", "class_method_signature": "HelpTelnetHandler.telnet(AbstractChannel channel, String message)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "getHandler", "append", "append", "append", "append", "getCommand", "getDescription", "append", "append", "append", "entrySet", "getAllHandlers", "append", "append", "getKey", "append", "toString"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}