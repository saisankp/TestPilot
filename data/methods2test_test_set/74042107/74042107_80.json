{"test_class": {"identifier": "BaseParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/osip-core/src/test/java/edu/kit/pse/osip/core/io/files/BaseParserTest.java"}, "test_case": {"identifier": "testPopException", "parameters": "()", "modifiers": "@Test(expected = ParserException.class) public", "return": "void", "body": "@Test(expected = ParserException.class)\n    public void testPopException() throws ParserException {\n        BaseParser parser = new BaseParser(\"a\");\n        parser.pop();\n        parser.pop();\n    }", "signature": "void testPopException()", "full_signature": "@Test(expected = ParserException.class) public void testPopException()", "class_method_signature": "BaseParserTest.testPopException()", "testcase": true, "constructor": false, "invocations": ["pop", "pop"]}, "focal_class": {"identifier": "BaseParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected int currentPosition = 0;", "modifier": "protected", "type": "int", "declarator": "currentPosition = 0", "var_name": "currentPosition"}, {"original_string": "private final String toParse;", "modifier": "private final", "type": "String", "declarator": "toParse", "var_name": "toParse"}, {"original_string": "private int currentLine = 0;", "modifier": "private", "type": "int", "declarator": "currentLine = 0", "var_name": "currentLine"}], "methods": [{"identifier": "BaseParser", "parameters": "(String toParse)", "modifiers": "public", "return": "", "signature": " BaseParser(String toParse)", "full_signature": "public  BaseParser(String toParse)", "class_method_signature": "BaseParser.BaseParser(String toParse)", "testcase": false, "constructor": true}, {"identifier": "available", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean available()", "full_signature": "public final boolean available()", "class_method_signature": "BaseParser.available()", "testcase": false, "constructor": false}, {"identifier": "die", "parameters": "(String message)", "modifiers": "protected final", "return": "void", "signature": "void die(String message)", "full_signature": "protected final void die(String message)", "class_method_signature": "BaseParser.die(String message)", "testcase": false, "constructor": false}, {"identifier": "pop", "parameters": "()", "modifiers": "protected final", "return": "char", "signature": "char pop()", "full_signature": "protected final char pop()", "class_method_signature": "BaseParser.pop()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "protected final", "return": "char", "signature": "char peek()", "full_signature": "protected final char peek()", "class_method_signature": "BaseParser.peek()", "testcase": false, "constructor": false}, {"identifier": "consume", "parameters": "(int n)", "modifiers": "protected final", "return": "void", "signature": "void consume(int n)", "full_signature": "protected final void consume(int n)", "class_method_signature": "BaseParser.consume(int n)", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(char c)", "modifiers": "protected final", "return": "void", "signature": "void check(char c)", "full_signature": "protected final void check(char c)", "class_method_signature": "BaseParser.check(char c)", "testcase": false, "constructor": false}, {"identifier": "skipWhitespaces", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void skipWhitespaces()", "full_signature": "public final void skipWhitespaces()", "class_method_signature": "BaseParser.skipWhitespaces()", "testcase": false, "constructor": false}, {"identifier": "skipComments", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void skipComments()", "full_signature": "public final void skipComments()", "class_method_signature": "BaseParser.skipComments()", "testcase": false, "constructor": false}], "file": "src/osip-core/src/main/java/edu/kit/pse/osip/core/io/files/BaseParser.java"}, "focal_method": {"identifier": "pop", "parameters": "()", "modifiers": "protected final", "return": "char", "body": "protected final char pop() throws ParserException {\n        if (available()) {\n            if (toParse.charAt(currentPosition) == '\\n') {\n                currentLine++;\n            }\n            return toParse.charAt(currentPosition++);\n        } else {\n            die(\"Unexpected EOF\");\n            return 0;\n        }\n    }", "signature": "char pop()", "full_signature": "protected final char pop()", "class_method_signature": "BaseParser.pop()", "testcase": false, "constructor": false, "invocations": ["available", "charAt", "charAt", "die"]}, "repository": {"repo_id": 74042107, "url": "https://github.com/ByteHamster/PSE", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 18396, "license": "licensed"}}