{"test_class": {"identifier": "ManageWalletPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Rule\n    public RxJavaTestSchedulerRule rule = new RxJavaTestSchedulerRule();", "modifier": "@Rule\n    public", "type": "RxJavaTestSchedulerRule", "declarator": "rule = new RxJavaTestSchedulerRule()", "var_name": "rule"}, {"original_string": "@Mock\n    public NodeManager nodeManager;", "modifier": "@Mock\n    public", "type": "NodeManager", "declarator": "nodeManager", "var_name": "nodeManager"}, {"original_string": "@Mock\n    public Node node;", "modifier": "@Mock\n    public", "type": "Node", "declarator": "node", "var_name": "node"}, {"original_string": "private ManageWalletPresenter presenter;", "modifier": "private", "type": "ManageWalletPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    private ManageWalletContract.View view;", "modifier": "@Mock\n    private", "type": "ManageWalletContract.View", "declarator": "view", "var_name": "view"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/ManageWalletPresenterTest.java"}, "test_case": {"identifier": "deleteWallet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteWallet() {\n        List<Wallet> list = new ArrayList<>();\n\n        Wallet wallet = new Wallet();\n        wallet.setCreateTime(1115448481);\n        wallet.setName(\"001\");\n        wallet.setAddress(\"0xfb1b74328f936973a59620d683e1b1acb487d9e7\");\n        AccountBalance balance = new AccountBalance();\n        balance.setFree(\"10000000084489\");\n        balance.setLock(\"0\");\n        wallet.setAccountBalance(balance);\n        list.add(wallet);\n\n        Wallet wallet2 = new Wallet();\n        wallet2.setCreateTime(1115448485);\n        wallet2.setName(\"002\");\n        wallet2.setAddress(\"0x2e95e3ce0a54951eb9a99152a6d5827872dfb4fd\");\n        AccountBalance balance2 = new AccountBalance();\n        balance2.setFree(\"1000000005655655\");\n        balance2.setLock(\"0\");\n        wallet2.setAccountBalance(balance2);\n        list.add(wallet2);\n\n        Wallet wallet3 = new Wallet();\n        wallet3.setName(\"003\");\n        wallet3.setAddress(\"0xca4b151b0b100ae53c9d78dd136905e681622ee7\");\n        wallet3.setCreateTime(1115448483);\n        AccountBalance balance3 = new AccountBalance();\n        balance3.setFree(\"10000000056556584855\");\n        balance3.setLock(\"0\");\n        wallet3.setAccountBalance(balance3);\n        list.add(wallet3);\n\n        Wallet wallet4 = new Wallet();\n        wallet4.setName(\"004\");\n        wallet4.setCreateTime(1115448486);\n        AccountBalance balance4 = new AccountBalance();\n        balance4.setFree(\"1000000001156584855\");\n        balance4.setLock(\"0\");\n        wallet4.setAccountBalance(balance4);\n        list.add(wallet4);\n\n        System.out.println(\"---------------------------\");\n        Single.fromCallable(new Callable<Boolean>() {\n                    @Override\n                    public Boolean call() throws Exception {\n                        return list.remove(wallet4);\n                    }\n                })\n                .subscribe(new Consumer<Boolean>() {\n                    @Override\n                    public void accept(Boolean isSuccess) throws Exception {\n                        Log.d(\"==============\", \"boolean\" + \"=====>\" + isSuccess);\n                        System.out.println( \"boolean\" + \"=====>\" + isSuccess);\n\n                    }\n                });\n\n        Log.d(\"==============\" , \"list\" + \"=====>\" + list.toString() + \"length\" + \"==========>\" +list.size());\n    }", "signature": "void deleteWallet()", "full_signature": "@Test public void deleteWallet()", "class_method_signature": "ManageWalletPresenterTest.deleteWallet()", "testcase": true, "constructor": false, "invocations": ["setCreateTime", "setName", "setAddress", "setFree", "setLock", "setAccountBalance", "add", "setCreateTime", "setName", "setAddress", "setFree", "setLock", "setAccountBalance", "add", "setName", "setAddress", "setCreateTime", "setFree", "setLock", "setAccountBalance", "add", "setName", "setCreateTime", "setFree", "setLock", "setAccountBalance", "add", "println", "subscribe", "fromCallable", "remove", "d", "println", "d", "toString", "size"]}, "focal_class": {"identifier": "ManageWalletPresenter", "superclass": "extends BasePresenter<ManageWalletContract.View>", "interfaces": "implements ManageWalletContract.Presenter", "fields": [{"original_string": "private Wallet mWalletEntity;", "modifier": "private", "type": "Wallet", "declarator": "mWalletEntity", "var_name": "mWalletEntity"}], "methods": [{"identifier": "init", "parameters": "(Wallet wallet)", "modifiers": "@Override public", "return": "void", "signature": "void init(Wallet wallet)", "full_signature": "@Override public void init(Wallet wallet)", "class_method_signature": "ManageWalletPresenter.init(Wallet wallet)", "testcase": false, "constructor": false}, {"identifier": "getWalletData", "parameters": "()", "modifiers": "@Override public", "return": "Wallet", "signature": "Wallet getWalletData()", "full_signature": "@Override public Wallet getWalletData()", "class_method_signature": "ManageWalletPresenter.getWalletData()", "testcase": false, "constructor": false}, {"identifier": "showWalletInfo", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showWalletInfo()", "full_signature": "@Override public void showWalletInfo()", "class_method_signature": "ManageWalletPresenter.showWalletInfo()", "testcase": false, "constructor": false}, {"identifier": "validPassword", "parameters": "(int viewType, Credentials credentials)", "modifiers": "@Override public", "return": "void", "signature": "void validPassword(int viewType, Credentials credentials)", "full_signature": "@Override public void validPassword(int viewType, Credentials credentials)", "class_method_signature": "ManageWalletPresenter.validPassword(int viewType, Credentials credentials)", "testcase": false, "constructor": false}, {"identifier": "deleteObservedWallet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteObservedWallet()", "full_signature": "@Override public void deleteObservedWallet()", "class_method_signature": "ManageWalletPresenter.deleteObservedWallet()", "testcase": false, "constructor": false}, {"identifier": "deleteWallet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteWallet()", "full_signature": "@Override public void deleteWallet()", "class_method_signature": "ManageWalletPresenter.deleteWallet()", "testcase": false, "constructor": false}, {"identifier": "modifyName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void modifyName(String name)", "full_signature": "@Override public void modifyName(String name)", "class_method_signature": "ManageWalletPresenter.modifyName(String name)", "testcase": false, "constructor": false}, {"identifier": "modifyHDName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void modifyHDName(String name)", "full_signature": "@Override public void modifyHDName(String name)", "class_method_signature": "ManageWalletPresenter.modifyHDName(String name)", "testcase": false, "constructor": false}, {"identifier": "backup", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void backup()", "full_signature": "@Override public void backup()", "class_method_signature": "ManageWalletPresenter.backup()", "testcase": false, "constructor": false}, {"identifier": "isExists", "parameters": "(String walletName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExists(String walletName)", "full_signature": "@Override public boolean isExists(String walletName)", "class_method_signature": "ManageWalletPresenter.isExists(String walletName)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/ManageWalletPresenter.java"}, "focal_method": {"identifier": "deleteWallet", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void deleteWallet() {\n        Single\n                .fromCallable(new Callable<Boolean>() {\n                    @Override\n                    public Boolean call() throws Exception {\n                        return WalletManager.getInstance().deleteWallet(mWalletEntity);\n                    }\n                })\n                .compose(RxUtils.getSingleSchedulerTransformer())\n                .compose(bindToLifecycle())\n                .compose(LoadingTransformer.bindToSingleLifecycle(currentActivity()))\n                .subscribe(new Consumer<Boolean>() {\n                    @Override\n                    public void accept(Boolean isSuccess) throws Exception {\n                        if (isSuccess && isViewAttached()) {\n                            EventPublisher.getInstance().sendWalletNumberChangeEvent();\n                            currentActivity().finish();\n                        }\n                    }\n                });\n    }", "signature": "void deleteWallet()", "full_signature": "@Override public void deleteWallet()", "class_method_signature": "ManageWalletPresenter.deleteWallet()", "testcase": false, "constructor": false, "invocations": ["subscribe", "compose", "compose", "compose", "fromCallable", "deleteWallet", "getInstance", "getSingleSchedulerTransformer", "bindToLifecycle", "bindToSingleLifecycle", "currentActivity", "isViewAttached", "sendWalletNumberChangeEvent", "getInstance", "finish", "currentActivity"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}