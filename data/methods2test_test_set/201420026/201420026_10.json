{"test_class": {"identifier": "LideaMethodDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaMethodDAO lideaMethodDAO;", "modifier": "@Resource\n    private", "type": "LideaMethodDAO", "declarator": "lideaMethodDAO", "var_name": "lideaMethodDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaMethodDAOTest.java"}, "test_case": {"identifier": "scan", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void scan() {\n\n        LideaMethodReq req = new LideaMethodReq();\n        req.setAppName(\"cabinet-base-server\");\n        req.setServiceName(\"com.fcbox.edms.terminal.api.CabinetServiceFacade\");\n\n        List<LideaMethodBO> list = lideaMethodDAO.scan(req);\n\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(list));\n\n    }", "signature": "void scan()", "full_signature": "@Test public void scan()", "class_method_signature": "LideaMethodDAOTest.scan()", "testcase": true, "constructor": false, "invocations": ["setAppName", "setServiceName", "scan", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaMethodDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaMethodBO bo)", "modifiers": "public", "return": "LideaMethodBO", "signature": "LideaMethodBO put(LideaMethodBO bo)", "full_signature": "public LideaMethodBO put(LideaMethodBO bo)", "class_method_signature": "LideaMethodDAO.put(LideaMethodBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "List<LideaMethodBO>", "signature": "List<LideaMethodBO> scan(LideaMethodReq req)", "full_signature": "public List<LideaMethodBO> scan(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.scan(LideaMethodReq req)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "LideaMethodResp", "signature": "LideaMethodResp get(LideaMethodReq req)", "full_signature": "public LideaMethodResp get(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.get(LideaMethodReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaMethodDAO.java"}, "focal_method": {"identifier": "scan", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "List<LideaMethodBO>", "body": "public List<LideaMethodBO> scan(LideaMethodReq req) {\n\n        Scan scan = new Scan();\n        scan.setCaching(50);\n        scan.addFamily(Const.LIDEA_LOG_FEMILY);\n        scan.setFilter(new PrefixFilter(BytesUtils.toBytes(MD5Util.encrypt(req.getAppName() + req.getServiceName()))));\n\n        return hbaseTemplate.find(Const.LIDEA_METHOD_TABLE, scan, new LideaMethodResultsExtractor());\n    }", "signature": "List<LideaMethodBO> scan(LideaMethodReq req)", "full_signature": "public List<LideaMethodBO> scan(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.scan(LideaMethodReq req)", "testcase": false, "constructor": false, "invocations": ["setCaching", "addFamily", "setFilter", "toBytes", "encrypt", "getAppName", "getServiceName", "find"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}