{"test_class": {"identifier": "ServerTransportFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/transport/ServerTransportFactoryTest.java"}, "test_case": {"identifier": "getServerTransport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getServerTransport() throws Exception {\n        ServerTransportConfig config = new ServerTransportConfig();\n        config.setHost(\"0.0.0.0\");\n        config.setPort(22222);\n        config.setBossThreads(1);\n        config.setIoThreads(8);\n        config.setBizMaxThreads(200);\n        config.setBizPoolQueues(50);\n        config.setDaemon(false);\n        config.setContainer(\"test\");\n        ServerTransport server = ServerTransportFactory.getServerTransport(config);\n        Assert.assertNotNull(server);\n\n        boolean error = false;\n        try {\n            config.setContainer(\"testasdasd\");\n            ServerTransportFactory.getServerTransport(config);\n        } catch (Exception e) {\n            error = true;\n        }\n        Assert.assertTrue(error);\n    }", "signature": "void getServerTransport()", "full_signature": "@Test public void getServerTransport()", "class_method_signature": "ServerTransportFactoryTest.getServerTransport()", "testcase": true, "constructor": false, "invocations": ["setHost", "setPort", "setBossThreads", "setIoThreads", "setBizMaxThreads", "setBizPoolQueues", "setDaemon", "setContainer", "getServerTransport", "assertNotNull", "setContainer", "getServerTransport", "assertTrue"]}, "focal_class": {"identifier": "ServerTransportFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Map<String, ServerTransport> SERVER_TRANSPORT_MAP = new ConcurrentHashMap<String, ServerTransport>();", "modifier": "public static final", "type": "Map<String, ServerTransport>", "declarator": "SERVER_TRANSPORT_MAP = new ConcurrentHashMap<String, ServerTransport>()", "var_name": "SERVER_TRANSPORT_MAP"}], "methods": [{"identifier": "getServerTransport", "parameters": "(ServerTransportConfig serverConfig)", "modifiers": "public static", "return": "ServerTransport", "signature": "ServerTransport getServerTransport(ServerTransportConfig serverConfig)", "full_signature": "public static ServerTransport getServerTransport(ServerTransportConfig serverConfig)", "class_method_signature": "ServerTransportFactory.getServerTransport(ServerTransportConfig serverConfig)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/transport/ServerTransportFactory.java"}, "focal_method": {"identifier": "getServerTransport", "parameters": "(ServerTransportConfig serverConfig)", "modifiers": "public static", "return": "ServerTransport", "body": "public static ServerTransport getServerTransport(ServerTransportConfig serverConfig) {\n        ServerTransport serverTransport = ExtensionLoaderFactory.getExtensionLoader(ServerTransport.class)\n            .getExtension(serverConfig.getContainer(),\n                new Class[] { ServerTransportConfig.class },\n                new Object[] { serverConfig });\n        if (serverTransport != null) {\n            String key = Integer.toString(serverConfig.getPort());\n            SERVER_TRANSPORT_MAP.put(key, serverTransport);\n        }\n        return serverTransport;\n    }", "signature": "ServerTransport getServerTransport(ServerTransportConfig serverConfig)", "full_signature": "public static ServerTransport getServerTransport(ServerTransportConfig serverConfig)", "class_method_signature": "ServerTransportFactory.getServerTransport(ServerTransportConfig serverConfig)", "testcase": false, "constructor": false, "invocations": ["getExtension", "getExtensionLoader", "getContainer", "toString", "getPort", "put"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}