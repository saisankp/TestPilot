{"test_class": {"identifier": "PropertitesFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(PropertitesFactoryTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(PropertitesFactoryTest.class)", "var_name": "logger"}, {"original_string": "private String path=\"/config.properties\";", "modifier": "private", "type": "String", "declarator": "path=\"/config.properties\"", "var_name": "path"}], "file": "xa-core/src/test/java/com/xinnet/xa/core/utils/properties/PropertitesFactoryTest.java"}, "test_case": {"identifier": "testGetPropertyByPathAndKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetPropertyByPathAndKey() {\n\t\tlogger.info( PropertitesFactory.getInstance().getPropertyByPathAndKey(path, \"HBase.ServerPort\") );\n\t}", "signature": "void testGetPropertyByPathAndKey()", "full_signature": "@Test public void testGetPropertyByPathAndKey()", "class_method_signature": "PropertitesFactoryTest.testGetPropertyByPathAndKey()", "testcase": true, "constructor": false, "invocations": ["info", "getPropertyByPathAndKey", "getInstance"]}, "focal_class": {"identifier": "PropertitesFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private  final Log log = LogFactory.getLog(getClass());", "modifier": "private  final", "type": "Log", "declarator": "log = LogFactory.getLog(getClass())", "var_name": "log"}, {"original_string": "private static ConcurrentHashMap<String, Properties> propertitesHashMap;", "modifier": "private static", "type": "ConcurrentHashMap<String, Properties>", "declarator": "propertitesHashMap", "var_name": "propertitesHashMap"}, {"original_string": "public  static PropertitesFactory instance = null;", "modifier": "public  static", "type": "PropertitesFactory", "declarator": "instance = null", "var_name": "instance"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "PropertitesFactory", "signature": "PropertitesFactory getInstance()", "full_signature": "public static PropertitesFactory getInstance()", "class_method_signature": "PropertitesFactory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "PropertitesFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " PropertitesFactory()", "full_signature": "private  PropertitesFactory()", "class_method_signature": "PropertitesFactory.PropertitesFactory()", "testcase": false, "constructor": true}, {"identifier": "getProperties", "parameters": "(String path)", "modifiers": "private", "return": "Properties", "signature": "Properties getProperties(String path)", "full_signature": "private Properties getProperties(String path)", "class_method_signature": "PropertitesFactory.getProperties(String path)", "testcase": false, "constructor": false}, {"identifier": "getPropertyByPathAndKey", "parameters": "(String path,String key)", "modifiers": "public", "return": "String", "signature": "String getPropertyByPathAndKey(String path,String key)", "full_signature": "public String getPropertyByPathAndKey(String path,String key)", "class_method_signature": "PropertitesFactory.getPropertyByPathAndKey(String path,String key)", "testcase": false, "constructor": false}], "file": "xa-core/src/main/java/com/xinnet/xa/core/utils/properties/PropertitesFactory.java"}, "focal_method": {"identifier": "getPropertyByPathAndKey", "parameters": "(String path,String key)", "modifiers": "public", "return": "String", "body": "public String getPropertyByPathAndKey(String path,String key){\n    \tProperties p = getProperties(path);\n    \treturn p.getProperty(key);\n    }", "signature": "String getPropertyByPathAndKey(String path,String key)", "full_signature": "public String getPropertyByPathAndKey(String path,String key)", "class_method_signature": "PropertitesFactory.getPropertyByPathAndKey(String path,String key)", "testcase": false, "constructor": false, "invocations": ["getProperties", "getProperty"]}, "repository": {"repo_id": 47752557, "url": "https://github.com/yanweiqi/xinnet-analysis", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 187, "license": "licensed"}}