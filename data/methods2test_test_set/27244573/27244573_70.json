{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/UtilTest.java"}, "test_case": {"identifier": "testGetNextAvailableNameInitial", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNextAvailableNameInitial() throws Exception {\n        String name = \"foo\";\n\n        PowerMockito.spy(Util.class);\n        PowerMockito.doReturn(false).when(Util.class, \"doesSurveyExist\", null, name + \"-2\");\n\n        String next = Util.getNextAvailableName(null, name);\n        Assert.assertEquals(\"foo-2\", next);\n    }", "signature": "void testGetNextAvailableNameInitial()", "full_signature": "@Test public void testGetNextAvailableNameInitial()", "class_method_signature": "UtilTest.testGetNextAvailableNameInitial()", "testcase": true, "constructor": false, "invocations": ["spy", "when", "doReturn", "getNextAvailableName", "assertEquals"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ensureDirectoriesInPathExist", "parameters": "(String path)", "modifiers": "public static", "return": "void", "signature": "void ensureDirectoriesInPathExist(String path)", "full_signature": "public static void ensureDirectoriesInPathExist(String path)", "class_method_signature": "Util.ensureDirectoriesInPathExist(String path)", "testcase": false, "constructor": false}, {"identifier": "ensureDirectoryExists", "parameters": "(File directory)", "modifiers": "private static", "return": "void", "signature": "void ensureDirectoryExists(File directory)", "full_signature": "private static void ensureDirectoryExists(File directory)", "class_method_signature": "Util.ensureDirectoryExists(File directory)", "testcase": false, "constructor": false}, {"identifier": "ensureDataDirectoriesExist", "parameters": "(Context context)", "modifiers": "public static", "return": "void", "signature": "void ensureDataDirectoriesExist(Context context)", "full_signature": "public static void ensureDataDirectoriesExist(Context context)", "class_method_signature": "Util.ensureDataDirectoriesExist(Context context)", "testcase": false, "constructor": false}, {"identifier": "getSurveyDirectories", "parameters": "(Context context)", "modifiers": "public static", "return": "File[]", "signature": "File[] getSurveyDirectories(Context context)", "full_signature": "public static File[] getSurveyDirectories(Context context)", "class_method_signature": "Util.getSurveyDirectories(Context context)", "testcase": false, "constructor": false}, {"identifier": "getCalibrationFiles", "parameters": "(Context context)", "modifiers": "public static", "return": "File[]", "signature": "File[] getCalibrationFiles(Context context)", "full_signature": "public static File[] getCalibrationFiles(Context context)", "class_method_signature": "Util.getCalibrationFiles(Context context)", "testcase": false, "constructor": false}, {"identifier": "getImportFiles", "parameters": "(Context context)", "modifiers": "public static", "return": "File[]", "signature": "File[] getImportFiles(Context context)", "full_signature": "public static File[] getImportFiles(Context context)", "class_method_signature": "Util.getImportFiles(Context context)", "testcase": false, "constructor": false}, {"identifier": "getNextDefaultSurveyName", "parameters": "(Context context)", "modifiers": "public static", "return": "String", "signature": "String getNextDefaultSurveyName(Context context)", "full_signature": "public static String getNextDefaultSurveyName(Context context)", "class_method_signature": "Util.getNextDefaultSurveyName(Context context)", "testcase": false, "constructor": false}, {"identifier": "getNextDefaultSurveyName", "parameters": "(Context context, String defaultName)", "modifiers": "public static", "return": "String", "signature": "String getNextDefaultSurveyName(Context context, String defaultName)", "full_signature": "public static String getNextDefaultSurveyName(Context context, String defaultName)", "class_method_signature": "Util.getNextDefaultSurveyName(Context context, String defaultName)", "testcase": false, "constructor": false}, {"identifier": "getNextAvailableName", "parameters": "(Context context, String basename)", "modifiers": "public static", "return": "String", "signature": "String getNextAvailableName(Context context, String basename)", "full_signature": "public static String getNextAvailableName(Context context, String basename)", "class_method_signature": "Util.getNextAvailableName(Context context, String basename)", "testcase": false, "constructor": false}, {"identifier": "getNextName", "parameters": "(String basename)", "modifiers": "public static", "return": "String", "signature": "String getNextName(String basename)", "full_signature": "public static String getNextName(String basename)", "class_method_signature": "Util.getNextName(String basename)", "testcase": false, "constructor": false}, {"identifier": "doesSurveyExist", "parameters": "(Context context, String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesSurveyExist(Context context, String name)", "full_signature": "public static boolean doesSurveyExist(Context context, String name)", "class_method_signature": "Util.doesSurveyExist(Context context, String name)", "testcase": false, "constructor": false}, {"identifier": "isSurveyNameUnique", "parameters": "(Context context, String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSurveyNameUnique(Context context, String name)", "full_signature": "public static boolean isSurveyNameUnique(Context context, String name)", "class_method_signature": "Util.isSurveyNameUnique(Context context, String name)", "testcase": false, "constructor": false}, {"identifier": "getExistingSurveyNames", "parameters": "(Context context)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> getExistingSurveyNames(Context context)", "full_signature": "private static Set<String> getExistingSurveyNames(Context context)", "class_method_signature": "Util.getExistingSurveyNames(Context context)", "testcase": false, "constructor": false}, {"identifier": "getDirectoryPathForSurvey", "parameters": "(Context context, String name)", "modifiers": "public static", "return": "String", "signature": "String getDirectoryPathForSurvey(Context context, String name)", "full_signature": "public static String getDirectoryPathForSurvey(Context context, String name)", "class_method_signature": "Util.getDirectoryPathForSurvey(Context context, String name)", "testcase": false, "constructor": false}, {"identifier": "getPathForSurveyFile", "parameters": "(Context context, String name, String extension)", "modifiers": "public static", "return": "String", "signature": "String getPathForSurveyFile(Context context, String name, String extension)", "full_signature": "public static String getPathForSurveyFile(Context context, String name, String extension)", "class_method_signature": "Util.getPathForSurveyFile(Context context, String name, String extension)", "testcase": false, "constructor": false}, {"identifier": "getExportDirectoryPath", "parameters": "(Context context, String exportFormat, String name)", "modifiers": "public static", "return": "String", "signature": "String getExportDirectoryPath(Context context, String exportFormat, String name)", "full_signature": "public static String getExportDirectoryPath(Context context, String exportFormat, String name)", "class_method_signature": "Util.getExportDirectoryPath(Context context, String exportFormat, String name)", "testcase": false, "constructor": false}, {"identifier": "deleteSurvey", "parameters": "(Context context, String name)", "modifiers": "public static", "return": "void", "signature": "void deleteSurvey(Context context, String name)", "full_signature": "public static void deleteSurvey(Context context, String name)", "class_method_signature": "Util.deleteSurvey(Context context, String name)", "testcase": false, "constructor": false}, {"identifier": "deleteFileAndAnyContents", "parameters": "(File file)", "modifiers": "private static", "return": "void", "signature": "void deleteFileAndAnyContents(File file)", "full_signature": "private static void deleteFileAndAnyContents(File file)", "class_method_signature": "Util.deleteFileAndAnyContents(File file)", "testcase": false, "constructor": false}, {"identifier": "doesFileExist", "parameters": "(String path)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesFileExist(String path)", "full_signature": "public static boolean doesFileExist(String path)", "class_method_signature": "Util.doesFileExist(String path)", "testcase": false, "constructor": false}, {"identifier": "getImportSourceDirectoryPath", "parameters": "(Context context, Survey survey)", "modifiers": "public static", "return": "String", "signature": "String getImportSourceDirectoryPath(Context context, Survey survey)", "full_signature": "public static String getImportSourceDirectoryPath(Context context, Survey survey)", "class_method_signature": "Util.getImportSourceDirectoryPath(Context context, Survey survey)", "testcase": false, "constructor": false}, {"identifier": "wasSurveyImported", "parameters": "(Context context, Survey survey)", "modifiers": "public static", "return": "boolean", "signature": "boolean wasSurveyImported(Context context, Survey survey)", "full_signature": "public static boolean wasSurveyImported(Context context, Survey survey)", "class_method_signature": "Util.wasSurveyImported(Context context, Survey survey)", "testcase": false, "constructor": false}, {"identifier": "getFileSurveyWasImportedFrom", "parameters": "(Context context, Survey survey)", "modifiers": "public static", "return": "File", "signature": "File getFileSurveyWasImportedFrom(Context context, Survey survey)", "full_signature": "public static File getFileSurveyWasImportedFrom(Context context, Survey survey)", "class_method_signature": "Util.getFileSurveyWasImportedFrom(Context context, Survey survey)", "testcase": false, "constructor": false}, {"identifier": "doWeHavePermissionToWriteToExternalStorage", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean doWeHavePermissionToWriteToExternalStorage(Context context)", "full_signature": "public static boolean doWeHavePermissionToWriteToExternalStorage(Context context)", "class_method_signature": "Util.doWeHavePermissionToWriteToExternalStorage(Context context)", "testcase": false, "constructor": false}, {"identifier": "isExternalStorageMounted", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isExternalStorageMounted()", "full_signature": "public static boolean isExternalStorageMounted()", "class_method_signature": "Util.isExternalStorageMounted()", "testcase": false, "constructor": false}, {"identifier": "isExternalStorageWriteable", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExternalStorageWriteable(Context context)", "full_signature": "public static boolean isExternalStorageWriteable(Context context)", "class_method_signature": "Util.isExternalStorageWriteable(Context context)", "testcase": false, "constructor": false}, {"identifier": "isExternalStorageReadable", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isExternalStorageReadable()", "full_signature": "public static boolean isExternalStorageReadable()", "class_method_signature": "Util.isExternalStorageReadable()", "testcase": false, "constructor": false}, {"identifier": "getDocumentRoot", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getDocumentRoot(Context context)", "full_signature": "public static File getDocumentRoot(Context context)", "class_method_signature": "Util.getDocumentRoot(Context context)", "testcase": false, "constructor": false}, {"identifier": "getInternalDirectory", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getInternalDirectory(Context context)", "full_signature": "public static File getInternalDirectory(Context context)", "class_method_signature": "Util.getInternalDirectory(Context context)", "testcase": false, "constructor": false}, {"identifier": "getExternalDirectory", "parameters": "()", "modifiers": "public static", "return": "File", "signature": "File getExternalDirectory()", "full_signature": "public static File getExternalDirectory()", "class_method_signature": "Util.getExternalDirectory()", "testcase": false, "constructor": false}, {"identifier": "getSurveyDirectory", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getSurveyDirectory(Context context)", "full_signature": "public static File getSurveyDirectory(Context context)", "class_method_signature": "Util.getSurveyDirectory(Context context)", "testcase": false, "constructor": false}, {"identifier": "getImportDir", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getImportDir(Context context)", "full_signature": "public static File getImportDir(Context context)", "class_method_signature": "Util.getImportDir(Context context)", "testcase": false, "constructor": false}, {"identifier": "getExportDirectory", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getExportDirectory(Context context)", "full_signature": "public static File getExportDirectory(Context context)", "class_method_signature": "Util.getExportDirectory(Context context)", "testcase": false, "constructor": false}, {"identifier": "getLogDirectory", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getLogDirectory(Context context)", "full_signature": "public static File getLogDirectory(Context context)", "class_method_signature": "Util.getLogDirectory(Context context)", "testcase": false, "constructor": false}, {"identifier": "getCalibrationDirectory", "parameters": "(Context context)", "modifiers": "public static", "return": "File", "signature": "File getCalibrationDirectory(Context context)", "full_signature": "public static File getCalibrationDirectory(Context context)", "class_method_signature": "Util.getCalibrationDirectory(Context context)", "testcase": false, "constructor": false}, {"identifier": "getAutosaveName", "parameters": "(String filename)", "modifiers": "public static", "return": "String", "signature": "String getAutosaveName(String filename)", "full_signature": "public static String getAutosaveName(String filename)", "class_method_signature": "Util.getAutosaveName(String filename)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(JSONObject object)", "modifiers": "public static", "return": "Map<String, JSONArray>", "signature": "Map<String, JSONArray> toMap(JSONObject object)", "full_signature": "public static Map<String, JSONArray> toMap(JSONObject object)", "class_method_signature": "Util.toMap(JSONObject object)", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "(JSONArray array)", "modifiers": "public static", "return": "List<JSONObject>", "signature": "List<JSONObject> toList(JSONArray array)", "full_signature": "public static List<JSONObject> toList(JSONArray array)", "class_method_signature": "Util.toList(JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "toListOfStrings", "parameters": "(JSONArray array)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> toListOfStrings(JSONArray array)", "full_signature": "public static List<String> toListOfStrings(JSONArray array)", "class_method_signature": "Util.toListOfStrings(JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "(File directory, String filename)", "modifiers": "public static", "return": "String", "signature": "String getPath(File directory, String filename)", "full_signature": "public static String getPath(File directory, String filename)", "class_method_signature": "Util.getPath(File directory, String filename)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/Util.java"}, "focal_method": {"identifier": "getNextAvailableName", "parameters": "(Context context, String basename)", "modifiers": "public static", "return": "String", "body": "public static String getNextAvailableName(Context context, String basename) {\n        String name = basename;\n        do {\n            name = getNextName(name);\n        } while (doesSurveyExist(context, name));\n        return  name;\n    }", "signature": "String getNextAvailableName(Context context, String basename)", "full_signature": "public static String getNextAvailableName(Context context, String basename)", "class_method_signature": "Util.getNextAvailableName(Context context, String basename)", "testcase": false, "constructor": false, "invocations": ["getNextName", "doesSurveyExist"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}