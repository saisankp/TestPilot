{"test_class": {"identifier": "HashesTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/HashesTest.java"}, "test_case": {"identifier": "success_3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_3() {\n        String input = \"lkadjlkfalkgnlaksdnfkladf\";\n        String input2 = \"aklkl5028359gq94521nef8wdfank3l45134\";\n        String input3 = \"9cv0we90t138tjapdfq84t1ndgowe9r12b51bsfdagldafk\";\n\n        byte[] output = Hashes.hash(HashAlgorithm.KECCAK_512, input.getBytes());\n        byte[] output2 = Hashes.hash(HashAlgorithm.KECCAK_512, input2.getBytes());\n        byte[] output3 = Hashes.hash(HashAlgorithm.KECCAK_512, input3.getBytes());\n        assertThat(HexEncoder.getString(output), is(\"1f391471f9ad9c71a871ff3deb291d302351abd1c13a7aac09f465d7708fb1d5900ca2762064e89f97a0149a495c2657ff239fb5872d0a14cef25f130bc30cb6\"));\n        assertThat(HexEncoder.getString(output2), is(\"662d8fe0adf56b15f082f53ca28175176f39d244f3f84b3df96102edbfacf03721cd9ba9d4278ae69af650c9ef228ca98445b19dd23702cf1b6f52b9780f2eb3\"));\n        assertThat(HexEncoder.getString(output3), is(\"4dea7f98af31bbadc021fd9179830b23e29304b96b1f676ee52d06eaf1b6037a4203de65426b137456730896917e48e608014f29abd36ed53f4e85430f39fd2b\"));\n    }", "signature": "void success_3()", "full_signature": "@Test public void success_3()", "class_method_signature": "HashesTest.success_3()", "testcase": true, "constructor": false, "invocations": ["hash", "getBytes", "hash", "getBytes", "hash", "getBytes", "assertThat", "getString", "is", "assertThat", "getString", "is", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "Hashes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(String algorithm, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(String algorithm, byte[]... inputs)", "full_signature": "private static byte[] hash(String algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(String algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hashVariableOutput", "parameters": "(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "full_signature": "private static byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "class_method_signature": "Hashes.hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/Hashes.java"}, "focal_method": {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs) {\n        return hash(algorithm, algorithm.getDefaultBitLength() / 8, inputs);\n    }", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false, "invocations": ["hash", "getDefaultBitLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}