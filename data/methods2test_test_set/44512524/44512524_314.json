{"test_class": {"identifier": "BasicMetricsCollectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Config config = new Config();", "modifier": "private static final", "type": "Config", "declarator": "config = new Config()", "var_name": "config"}, {"original_string": "private StormTopology topology;", "modifier": "private", "type": "StormTopology", "declarator": "topology", "var_name": "topology"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/metrics/BasicMetricsCollectorTest.java"}, "test_case": {"identifier": "testCollectSpoutLatency", "parameters": "(Set<MetricsItem> items, boolean expected)", "modifiers": "@Test(dataProvider = \"getSpoutLatencyMetrics\") public", "return": "void", "body": "@Test(dataProvider = \"getSpoutLatencyMetrics\")\n  public void testCollectSpoutLatency(Set<MetricsItem> items, boolean expected) {\n    BasicMetricsCollector collector = new BasicMetricsCollector(config, topology, items);\n    assertThat(collector.collectSpoutLatency).isEqualTo(expected);\n  }", "signature": "void testCollectSpoutLatency(Set<MetricsItem> items, boolean expected)", "full_signature": "@Test(dataProvider = \"getSpoutLatencyMetrics\") public void testCollectSpoutLatency(Set<MetricsItem> items, boolean expected)", "class_method_signature": "BasicMetricsCollectorTest.testCollectSpoutLatency(Set<MetricsItem> items, boolean expected)", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat"]}, "focal_class": {"identifier": "BasicMetricsCollector", "superclass": "", "interfaces": "implements IMetricsCollector", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(BasicMetricsCollector.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(BasicMetricsCollector.class)", "var_name": "LOG"}, {"original_string": "public static final String TIME = \"time(s)\";", "modifier": "public static final", "type": "String", "declarator": "TIME = \"time(s)\"", "var_name": "TIME"}, {"original_string": "public static final String TIME_FORMAT = \"%d\";", "modifier": "public static final", "type": "String", "declarator": "TIME_FORMAT = \"%d\"", "var_name": "TIME_FORMAT"}, {"original_string": "public static final String TOTAL_SLOTS = \"total_slots\";", "modifier": "public static final", "type": "String", "declarator": "TOTAL_SLOTS = \"total_slots\"", "var_name": "TOTAL_SLOTS"}, {"original_string": "public static final String USED_SLOTS = \"used_slots\";", "modifier": "public static final", "type": "String", "declarator": "USED_SLOTS = \"used_slots\"", "var_name": "USED_SLOTS"}, {"original_string": "public static final String WORKERS = \"workers\";", "modifier": "public static final", "type": "String", "declarator": "WORKERS = \"workers\"", "var_name": "WORKERS"}, {"original_string": "public static final String TASKS = \"tasks\";", "modifier": "public static final", "type": "String", "declarator": "TASKS = \"tasks\"", "var_name": "TASKS"}, {"original_string": "public static final String EXECUTORS = \"executors\";", "modifier": "public static final", "type": "String", "declarator": "EXECUTORS = \"executors\"", "var_name": "EXECUTORS"}, {"original_string": "public static final String TRANSFERRED = \"transferred (messages)\";", "modifier": "public static final", "type": "String", "declarator": "TRANSFERRED = \"transferred (messages)\"", "var_name": "TRANSFERRED"}, {"original_string": "public static final String THROUGHPUT = \"throughput (messages/s)\";", "modifier": "public static final", "type": "String", "declarator": "THROUGHPUT = \"throughput (messages/s)\"", "var_name": "THROUGHPUT"}, {"original_string": "public static final String THROUGHPUT_MB = \"throughput (MB/s)\";", "modifier": "public static final", "type": "String", "declarator": "THROUGHPUT_MB = \"throughput (MB/s)\"", "var_name": "THROUGHPUT_MB"}, {"original_string": "public static final String THROUGHPUT_MB_FORMAT = \"%.1f\";", "modifier": "public static final", "type": "String", "declarator": "THROUGHPUT_MB_FORMAT = \"%.1f\"", "var_name": "THROUGHPUT_MB_FORMAT"}, {"original_string": "public static final String SPOUT_EXECUTORS = \"spout_executors\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_EXECUTORS = \"spout_executors\"", "var_name": "SPOUT_EXECUTORS"}, {"original_string": "public static final String SPOUT_TRANSFERRED = \"spout_transferred (messages)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_TRANSFERRED = \"spout_transferred (messages)\"", "var_name": "SPOUT_TRANSFERRED"}, {"original_string": "public static final String SPOUT_ACKED = \"spout_acked (messages)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_ACKED = \"spout_acked (messages)\"", "var_name": "SPOUT_ACKED"}, {"original_string": "public static final String SPOUT_THROUGHPUT = \"spout_throughput (messages/s)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_THROUGHPUT = \"spout_throughput (messages/s)\"", "var_name": "SPOUT_THROUGHPUT"}, {"original_string": "public static final String SPOUT_THROUGHPUT_MB = \"spout_throughput (MB/s)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_THROUGHPUT_MB = \"spout_throughput (MB/s)\"", "var_name": "SPOUT_THROUGHPUT_MB"}, {"original_string": "public static final String SPOUT_THROUGHPUT_MB_FORMAT = \"%.3f\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_THROUGHPUT_MB_FORMAT = \"%.3f\"", "var_name": "SPOUT_THROUGHPUT_MB_FORMAT"}, {"original_string": "public static final String SPOUT_AVG_COMPLETE_LATENCY = \"spout_avg_complete_latency(ms)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_AVG_COMPLETE_LATENCY = \"spout_avg_complete_latency(ms)\"", "var_name": "SPOUT_AVG_COMPLETE_LATENCY"}, {"original_string": "public static final String SPOUT_AVG_LATENCY_FORMAT = \"%.1f\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_AVG_LATENCY_FORMAT = \"%.1f\"", "var_name": "SPOUT_AVG_LATENCY_FORMAT"}, {"original_string": "public static final String SPOUT_MAX_COMPLETE_LATENCY = \"spout_max_complete_latency(ms)\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_MAX_COMPLETE_LATENCY = \"spout_max_complete_latency(ms)\"", "var_name": "SPOUT_MAX_COMPLETE_LATENCY"}, {"original_string": "public static final String SPOUT_MAX_LATENCY_FORMAT = \"%.1f\";", "modifier": "public static final", "type": "String", "declarator": "SPOUT_MAX_LATENCY_FORMAT = \"%.1f\"", "var_name": "SPOUT_MAX_LATENCY_FORMAT"}, {"original_string": "public static final String ALL_TIME = \":all-time\";", "modifier": "public static final", "type": "String", "declarator": "ALL_TIME = \":all-time\"", "var_name": "ALL_TIME"}, {"original_string": "public static final String LAST_TEN_MINS = \"600\";", "modifier": "public static final", "type": "String", "declarator": "LAST_TEN_MINS = \"600\"", "var_name": "LAST_TEN_MINS"}, {"original_string": "public static final String LAST_THREE_HOURS = \"10800\";", "modifier": "public static final", "type": "String", "declarator": "LAST_THREE_HOURS = \"10800\"", "var_name": "LAST_THREE_HOURS"}, {"original_string": "public static final String LAST_DAY = \"86400\";", "modifier": "public static final", "type": "String", "declarator": "LAST_DAY = \"86400\"", "var_name": "LAST_DAY"}, {"original_string": "final MetricsCollectorConfig config;", "modifier": "final", "type": "MetricsCollectorConfig", "declarator": "config", "var_name": "config"}, {"original_string": "final StormTopology topology;", "modifier": "final", "type": "StormTopology", "declarator": "topology", "var_name": "topology"}, {"original_string": "final Set<String> header = new LinkedHashSet<String>();", "modifier": "final", "type": "Set<String>", "declarator": "header = new LinkedHashSet<String>()", "var_name": "header"}, {"original_string": "final Map<String, String> metrics = new HashMap<String, String>();", "modifier": "final", "type": "Map<String, String>", "declarator": "metrics = new HashMap<String, String>()", "var_name": "metrics"}, {"original_string": "final int msgSize;", "modifier": "final", "type": "int", "declarator": "msgSize", "var_name": "msgSize"}, {"original_string": "final boolean collectSupervisorStats;", "modifier": "final", "type": "boolean", "declarator": "collectSupervisorStats", "var_name": "collectSupervisorStats"}, {"original_string": "final boolean collectTopologyStats;", "modifier": "final", "type": "boolean", "declarator": "collectTopologyStats", "var_name": "collectTopologyStats"}, {"original_string": "final boolean collectExecutorStats;", "modifier": "final", "type": "boolean", "declarator": "collectExecutorStats", "var_name": "collectExecutorStats"}, {"original_string": "final boolean collectThroughput;", "modifier": "final", "type": "boolean", "declarator": "collectThroughput", "var_name": "collectThroughput"}, {"original_string": "final boolean collectThroughputMB;", "modifier": "final", "type": "boolean", "declarator": "collectThroughputMB", "var_name": "collectThroughputMB"}, {"original_string": "final boolean collectSpoutThroughput;", "modifier": "final", "type": "boolean", "declarator": "collectSpoutThroughput", "var_name": "collectSpoutThroughput"}, {"original_string": "final boolean collectSpoutLatency;", "modifier": "final", "type": "boolean", "declarator": "collectSpoutLatency", "var_name": "collectSpoutLatency"}], "methods": [{"identifier": "BasicMetricsCollector", "parameters": "(Config stormConfig, StormTopology topology, Set<MetricsItem> items)", "modifiers": "public", "return": "", "signature": " BasicMetricsCollector(Config stormConfig, StormTopology topology, Set<MetricsItem> items)", "full_signature": "public  BasicMetricsCollector(Config stormConfig, StormTopology topology, Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.BasicMetricsCollector(Config stormConfig, StormTopology topology, Set<MetricsItem> items)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "BasicMetricsCollector.run()", "testcase": false, "constructor": false}, {"identifier": "getNimbusClient", "parameters": "(Config stormConfig)", "modifiers": "public", "return": "Nimbus.Client", "signature": "Nimbus.Client getNimbusClient(Config stormConfig)", "full_signature": "public Nimbus.Client getNimbusClient(Config stormConfig)", "class_method_signature": "BasicMetricsCollector.getNimbusClient(Config stormConfig)", "testcase": false, "constructor": false}, {"identifier": "pollNimbus", "parameters": "(Nimbus.Client client, long now, MetricsState state, PrintWriter writer)", "modifiers": "", "return": "boolean", "signature": "boolean pollNimbus(Nimbus.Client client, long now, MetricsState state, PrintWriter writer)", "full_signature": " boolean pollNimbus(Nimbus.Client client, long now, MetricsState state, PrintWriter writer)", "class_method_signature": "BasicMetricsCollector.pollNimbus(Nimbus.Client client, long now, MetricsState state, PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "updateTopologyStats", "parameters": "(TopologySummary ts, MetricsState state, long now)", "modifiers": "", "return": "void", "signature": "void updateTopologyStats(TopologySummary ts, MetricsState state, long now)", "full_signature": " void updateTopologyStats(TopologySummary ts, MetricsState state, long now)", "class_method_signature": "BasicMetricsCollector.updateTopologyStats(TopologySummary ts, MetricsState state, long now)", "testcase": false, "constructor": false}, {"identifier": "updateSupervisorStats", "parameters": "(ClusterSummary cs)", "modifiers": "", "return": "void", "signature": "void updateSupervisorStats(ClusterSummary cs)", "full_signature": " void updateSupervisorStats(ClusterSummary cs)", "class_method_signature": "BasicMetricsCollector.updateSupervisorStats(ClusterSummary cs)", "testcase": false, "constructor": false}, {"identifier": "updateExecutorStats", "parameters": "(TopologyInfo info, MetricsState state, long now)", "modifiers": "", "return": "void", "signature": "void updateExecutorStats(TopologyInfo info, MetricsState state, long now)", "full_signature": " void updateExecutorStats(TopologyInfo info, MetricsState state, long now)", "class_method_signature": "BasicMetricsCollector.updateExecutorStats(TopologyInfo info, MetricsState state, long now)", "testcase": false, "constructor": false}, {"identifier": "isSpout", "parameters": "(ExecutorSpecificStats specs)", "modifiers": "", "return": "boolean", "signature": "boolean isSpout(ExecutorSpecificStats specs)", "full_signature": " boolean isSpout(ExecutorSpecificStats specs)", "class_method_signature": "BasicMetricsCollector.isSpout(ExecutorSpecificStats specs)", "testcase": false, "constructor": false}, {"identifier": "isDefaultStream", "parameters": "(String stream)", "modifiers": "", "return": "boolean", "signature": "boolean isDefaultStream(String stream)", "full_signature": " boolean isDefaultStream(String stream)", "class_method_signature": "BasicMetricsCollector.isDefaultStream(String stream)", "testcase": false, "constructor": false}, {"identifier": "isBatchStream", "parameters": "(String stream)", "modifiers": "", "return": "boolean", "signature": "boolean isBatchStream(String stream)", "full_signature": " boolean isBatchStream(String stream)", "class_method_signature": "BasicMetricsCollector.isBatchStream(String stream)", "testcase": false, "constructor": false}, {"identifier": "writeHeader", "parameters": "(PrintWriter writer)", "modifiers": "", "return": "void", "signature": "void writeHeader(PrintWriter writer)", "full_signature": " void writeHeader(PrintWriter writer)", "class_method_signature": "BasicMetricsCollector.writeHeader(PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeLine", "parameters": "(PrintWriter writer)", "modifiers": "", "return": "void", "signature": "void writeLine(PrintWriter writer)", "full_signature": " void writeLine(PrintWriter writer)", "class_method_signature": "BasicMetricsCollector.writeLine(PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "collectSupervisorStats", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectSupervisorStats(Set<MetricsItem> items)", "full_signature": " boolean collectSupervisorStats(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectSupervisorStats(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectTopologyStats", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectTopologyStats(Set<MetricsItem> items)", "full_signature": " boolean collectTopologyStats(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectTopologyStats(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectExecutorStats", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectExecutorStats(Set<MetricsItem> items)", "full_signature": " boolean collectExecutorStats(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectExecutorStats(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectThroughput", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectThroughput(Set<MetricsItem> items)", "full_signature": " boolean collectThroughput(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectThroughput(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectThroughputMB", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectThroughputMB(Set<MetricsItem> items)", "full_signature": " boolean collectThroughputMB(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectThroughputMB(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectSpoutThroughput", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectSpoutThroughput(Set<MetricsItem> items)", "full_signature": " boolean collectSpoutThroughput(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectSpoutThroughput(Set<MetricsItem> items)", "testcase": false, "constructor": false}, {"identifier": "collectSpoutLatency", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "signature": "boolean collectSpoutLatency(Set<MetricsItem> items)", "full_signature": " boolean collectSpoutLatency(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectSpoutLatency(Set<MetricsItem> items)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/metrics/BasicMetricsCollector.java"}, "focal_method": {"identifier": "collectSpoutLatency", "parameters": "(Set<MetricsItem> items)", "modifiers": "", "return": "boolean", "body": "boolean collectSpoutLatency(Set<MetricsItem> items) {\n    return items.contains(MetricsItem.ALL) ||\n            items.contains(MetricsItem.SPOUT_LATENCY);\n  }", "signature": "boolean collectSpoutLatency(Set<MetricsItem> items)", "full_signature": " boolean collectSpoutLatency(Set<MetricsItem> items)", "class_method_signature": "BasicMetricsCollector.collectSpoutLatency(Set<MetricsItem> items)", "testcase": false, "constructor": false, "invocations": ["contains", "contains"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}