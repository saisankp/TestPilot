{"test_class": {"identifier": "TestCopyListing", "superclass": "extends SimpleCopyListing", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(TestCopyListing.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(TestCopyListing.class)", "var_name": "LOG"}, {"original_string": "private static final Credentials CREDENTIALS = new Credentials();", "modifier": "private static final", "type": "Credentials", "declarator": "CREDENTIALS = new Credentials()", "var_name": "CREDENTIALS"}, {"original_string": "private static final Configuration config = new Configuration();", "modifier": "private static final", "type": "Configuration", "declarator": "config = new Configuration()", "var_name": "config"}, {"original_string": "private static MiniDFSCluster cluster;", "modifier": "private static", "type": "MiniDFSCluster", "declarator": "cluster", "var_name": "cluster"}], "file": "conduit-distcp/src/test/java/com/inmobi/conduit/distcp/tools/TestCopyListing.java"}, "test_case": {"identifier": "testMultipleSrcToFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMultipleSrcToFile() {\n    FileSystem fs = null;\n    try {\n      fs = FileSystem.get(getConf());\n      List<Path> srcPaths = new ArrayList<Path>();\n      srcPaths.add(new Path(\"/tmp/in/1\"));\n      srcPaths.add(new Path(\"/tmp/in/2\"));\n      Path target = new Path(\"/tmp/out/1\");\n      TestDistCpUtils.createFile(fs, \"/tmp/in/1\");\n      TestDistCpUtils.createFile(fs, \"/tmp/in/2\");\n      fs.mkdirs(target);\n      DistCpOptions options = new DistCpOptions(srcPaths, target);\n      validatePaths(options);\n      TestDistCpUtils.delete(fs, \"/tmp\");\n      //No errors\n\n      target = new Path(\"/tmp/out/1\");\n      fs.create(target).close();\n      options = new DistCpOptions(srcPaths, target);\n      try {\n        validatePaths(options);\n        Assert.fail(\"Invalid inputs accepted\");\n      } catch (InvalidInputException ignore) { }\n      TestDistCpUtils.delete(fs, \"/tmp\");\n\n      srcPaths.clear();\n      srcPaths.add(new Path(\"/tmp/in/1\"));\n      fs.mkdirs(new Path(\"/tmp/in/1\"));\n      target = new Path(\"/tmp/out/1\");\n      fs.create(target).close();\n      options = new DistCpOptions(srcPaths, target);\n      try {\n        validatePaths(options);\n        Assert.fail(\"Invalid inputs accepted\");\n      } catch (InvalidInputException ignore) { }\n      TestDistCpUtils.delete(fs, \"/tmp\");\n    } catch (IOException e) {\n      LOG.error(\"Exception encountered \", e);\n      Assert.fail(\"Test input validation failed\");\n    } finally {\n      TestDistCpUtils.delete(fs, \"/tmp\");\n    }\n  }", "signature": "void testMultipleSrcToFile()", "full_signature": "@Test public void testMultipleSrcToFile()", "class_method_signature": "TestCopyListing.testMultipleSrcToFile()", "testcase": true, "constructor": false, "invocations": ["get", "getConf", "add", "add", "createFile", "createFile", "mkdirs", "validatePaths", "delete", "close", "create", "validatePaths", "fail", "delete", "clear", "add", "mkdirs", "close", "create", "validatePaths", "fail", "delete", "error", "fail", "delete"]}, "focal_class": {"identifier": "CopyListing", "superclass": "extends Configured", "interfaces": "", "fields": [{"original_string": "private Credentials credentials;", "modifier": "private", "type": "Credentials", "declarator": "credentials", "var_name": "credentials"}], "methods": [{"identifier": "buildListing", "parameters": "(Path pathToListFile,\n                                 DistCpOptions options)", "modifiers": "public final", "return": "void", "signature": "void buildListing(Path pathToListFile,\n                                 DistCpOptions options)", "full_signature": "public final void buildListing(Path pathToListFile,\n                                 DistCpOptions options)", "class_method_signature": "CopyListing.buildListing(Path pathToListFile,\n                                 DistCpOptions options)", "testcase": false, "constructor": false}, {"identifier": "validatePaths", "parameters": "(DistCpOptions options)", "modifiers": "protected abstract", "return": "void", "signature": "void validatePaths(DistCpOptions options)", "full_signature": "protected abstract void validatePaths(DistCpOptions options)", "class_method_signature": "CopyListing.validatePaths(DistCpOptions options)", "testcase": false, "constructor": false}, {"identifier": "doBuildListing", "parameters": "(Path pathToListFile,\n                                         DistCpOptions options)", "modifiers": "protected abstract", "return": "void", "signature": "void doBuildListing(Path pathToListFile,\n                                         DistCpOptions options)", "full_signature": "protected abstract void doBuildListing(Path pathToListFile,\n                                         DistCpOptions options)", "class_method_signature": "CopyListing.doBuildListing(Path pathToListFile,\n                                         DistCpOptions options)", "testcase": false, "constructor": false}, {"identifier": "getBytesToCopy", "parameters": "()", "modifiers": "protected abstract", "return": "long", "signature": "long getBytesToCopy()", "full_signature": "protected abstract long getBytesToCopy()", "class_method_signature": "CopyListing.getBytesToCopy()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfPaths", "parameters": "()", "modifiers": "protected abstract", "return": "long", "signature": "long getNumberOfPaths()", "full_signature": "protected abstract long getNumberOfPaths()", "class_method_signature": "CopyListing.getNumberOfPaths()", "testcase": false, "constructor": false}, {"identifier": "checkForDuplicates", "parameters": "(Path pathToListFile)", "modifiers": "protected", "return": "void", "signature": "void checkForDuplicates(Path pathToListFile)", "full_signature": "protected void checkForDuplicates(Path pathToListFile)", "class_method_signature": "CopyListing.checkForDuplicates(Path pathToListFile)", "testcase": false, "constructor": false}, {"identifier": "CopyListing", "parameters": "(Configuration configuration, Credentials credentials)", "modifiers": "protected", "return": "", "signature": " CopyListing(Configuration configuration, Credentials credentials)", "full_signature": "protected  CopyListing(Configuration configuration, Credentials credentials)", "class_method_signature": "CopyListing.CopyListing(Configuration configuration, Credentials credentials)", "testcase": false, "constructor": true}, {"identifier": "setCredentials", "parameters": "(Credentials credentials)", "modifiers": "protected", "return": "void", "signature": "void setCredentials(Credentials credentials)", "full_signature": "protected void setCredentials(Credentials credentials)", "class_method_signature": "CopyListing.setCredentials(Credentials credentials)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "()", "modifiers": "protected", "return": "Credentials", "signature": "Credentials getCredentials()", "full_signature": "protected Credentials getCredentials()", "class_method_signature": "CopyListing.getCredentials()", "testcase": false, "constructor": false}, {"identifier": "getCopyListing", "parameters": "(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)", "modifiers": "public static", "return": "CopyListing", "signature": "CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)", "full_signature": "public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)", "class_method_signature": "CopyListing.getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)", "testcase": false, "constructor": false}], "file": "conduit-distcp/src/main/java/com/inmobi/conduit/distcp/tools/CopyListing.java"}, "focal_method": {"identifier": "validatePaths", "parameters": "(DistCpOptions options)", "modifiers": "protected abstract", "return": "void", "body": "protected abstract void validatePaths(DistCpOptions options)\n      throws IOException, InvalidInputException;", "signature": "void validatePaths(DistCpOptions options)", "full_signature": "protected abstract void validatePaths(DistCpOptions options)", "class_method_signature": "CopyListing.validatePaths(DistCpOptions options)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}