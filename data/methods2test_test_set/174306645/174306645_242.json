{"test_class": {"identifier": "MemoryClassLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "kogito-quarkus-extension/deployment/src/test/java/org/kie/kogito/quarkus/deployment/MemoryClassLoaderTest.java"}, "test_case": {"identifier": "testMemoryClassLoader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMemoryClassLoader() throws IOException, ReflectiveOperationException, URISyntaxException {\n        final String className = \"/\" + MemoryClassLoaderTest.class.getName().replace('.', '/');\n        URL url = MemoryClassLoaderTest.class.getResource(className.concat(\".class\"));\n        MemoryFileSystem fs = new MemoryFileSystem();\n        try(ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n            InputStream input = Files.newInputStream(Paths.get(url.toURI()))) {\n            transferTo(input, bytes);\n            fs.write(className.concat(\".class\"), bytes.toByteArray());\n        }\n        MemoryClassLoader cl = new MemoryClassLoader(fs,null);\n        Class<?> clazz = cl.loadClass(MemoryClassLoaderTest.class.getName());\n        assertTrue(Modifier.isPublic(clazz.getMethod(\"testMemoryClassLoader\").getModifiers()));\n        assertThrows(NoSuchFieldException.class, () -> clazz.getField(\"otherField\"));\n    }", "signature": "void testMemoryClassLoader()", "full_signature": "@Test public void testMemoryClassLoader()", "class_method_signature": "MemoryClassLoaderTest.testMemoryClassLoader()", "testcase": true, "constructor": false, "invocations": ["replace", "getName", "getResource", "concat", "newInputStream", "get", "toURI", "transferTo", "write", "concat", "toByteArray", "loadClass", "getName", "assertTrue", "isPublic", "getModifiers", "getMethod", "assertThrows", "getField"]}, "focal_class": {"identifier": "MemoryClassLoader", "superclass": "extends ClassLoader", "interfaces": "", "fields": [{"original_string": "private MemoryFileSystem fs;", "modifier": "private", "type": "MemoryFileSystem", "declarator": "fs", "var_name": "fs"}], "methods": [{"identifier": "MemoryClassLoader", "parameters": "(MemoryFileSystem fs, ClassLoader parent)", "modifiers": "public", "return": "", "signature": " MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "full_signature": "public  MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "class_method_signature": "MemoryClassLoader.MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "testcase": false, "constructor": true}, {"identifier": "findClass", "parameters": "(String name)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> findClass(String name)", "full_signature": "@Override public Class<?> findClass(String name)", "class_method_signature": "MemoryClassLoader.findClass(String name)", "testcase": false, "constructor": false}], "file": "kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/MemoryClassLoader.java"}, "focal_method": {"identifier": "MemoryClassLoader", "parameters": "(MemoryFileSystem fs, ClassLoader parent)", "modifiers": "public", "return": "", "body": "public MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent) {\n        super(parent);\n        this.fs = fs;\n    }", "signature": " MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "full_signature": "public  MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "class_method_signature": "MemoryClassLoader.MemoryClassLoader(MemoryFileSystem fs, ClassLoader parent)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}