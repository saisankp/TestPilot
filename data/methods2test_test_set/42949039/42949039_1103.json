{"test_class": {"identifier": "SearchIndexRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private SearchIndexRestController searchIndexRestController;", "modifier": "@InjectMocks\n    private", "type": "SearchIndexRestController", "declarator": "searchIndexRestController", "var_name": "searchIndexRestController"}, {"original_string": "@Mock\n    private SearchIndexService searchIndexService;", "modifier": "@Mock\n    private", "type": "SearchIndexService", "declarator": "searchIndexService", "var_name": "searchIndexService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/SearchIndexRestControllerTest.java"}, "test_case": {"identifier": "testCreateSearchIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateSearchIndex()\n    {\n        // Create a search index create request.\n        SearchIndexCreateRequest searchIndexCreateRequest = new SearchIndexCreateRequest(SEARCH_INDEX_TYPE);\n\n        // Create a search index create response.\n        SearchIndex searchIndex =\n            new SearchIndex(new SearchIndexKey(SEARCH_INDEX_NAME), SEARCH_INDEX_TYPE, SEARCH_INDEX_STATUS, SEARCH_INDEX_DEFAULT_ACTIVE_FLAG,\n                NO_SEARCH_INDEX_STATISTICS, USER_ID, CREATED_ON,\n                UPDATED_ON);\n\n        // Mock the call to the search index service.\n        when(searchIndexService.createSearchIndex(searchIndexCreateRequest)).thenReturn(searchIndex);\n\n        // Create a search index.\n        SearchIndex response = searchIndexRestController.createSearchIndex(searchIndexCreateRequest);\n\n        // Verify the calls.\n        verify(searchIndexService, times(1)).createSearchIndex(searchIndexCreateRequest);\n\n        // Validate the returned object.\n        assertEquals(searchIndex, response);\n    }", "signature": "void testCreateSearchIndex()", "full_signature": "@Test public void testCreateSearchIndex()", "class_method_signature": "SearchIndexRestControllerTest.testCreateSearchIndex()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createSearchIndex", "createSearchIndex", "createSearchIndex", "verify", "times", "assertEquals"]}, "focal_class": {"identifier": "SearchIndexRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String SEARCH_INDEXES_URI_PREFIX = \"/searchIndexes\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_INDEXES_URI_PREFIX = \"/searchIndexes\"", "var_name": "SEARCH_INDEXES_URI_PREFIX"}, {"original_string": "@Autowired\n    private SearchIndexService searchIndexService;", "modifier": "@Autowired\n    private", "type": "SearchIndexService", "declarator": "searchIndexService", "var_name": "searchIndexService"}], "methods": [{"identifier": "createSearchIndex", "parameters": "(@RequestBody SearchIndexCreateRequest request)", "modifiers": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_POST) public", "return": "SearchIndex", "signature": "SearchIndex createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "full_signature": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_POST) public SearchIndex createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "class_method_signature": "SearchIndexRestController.createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteSearchIndex", "parameters": "(@PathVariable(\"searchIndexName\") String searchIndexName)", "modifiers": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX + \"/{searchIndexName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_DELETE) public", "return": "SearchIndex", "signature": "SearchIndex deleteSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "full_signature": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX + \"/{searchIndexName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_DELETE) public SearchIndex deleteSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "class_method_signature": "SearchIndexRestController.deleteSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "testcase": false, "constructor": false}, {"identifier": "getSearchIndex", "parameters": "(@PathVariable(\"searchIndexName\") String searchIndexName)", "modifiers": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX + \"/{searchIndexName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_GET) public", "return": "SearchIndex", "signature": "SearchIndex getSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "full_signature": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX + \"/{searchIndexName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_GET) public SearchIndex getSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "class_method_signature": "SearchIndexRestController.getSearchIndex(@PathVariable(\"searchIndexName\") String searchIndexName)", "testcase": false, "constructor": false}, {"identifier": "getSearchIndexes", "parameters": "()", "modifiers": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_ALL_GET) public", "return": "SearchIndexKeys", "signature": "SearchIndexKeys getSearchIndexes()", "full_signature": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_ALL_GET) public SearchIndexKeys getSearchIndexes()", "class_method_signature": "SearchIndexRestController.getSearchIndexes()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/SearchIndexRestController.java"}, "focal_method": {"identifier": "createSearchIndex", "parameters": "(@RequestBody SearchIndexCreateRequest request)", "modifiers": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_POST) public", "return": "SearchIndex", "body": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_SEARCH_INDEXES_POST)\n    public SearchIndex createSearchIndex(@RequestBody SearchIndexCreateRequest request)\n    {\n        return searchIndexService.createSearchIndex(request);\n    }", "signature": "SearchIndex createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "full_signature": "@RequestMapping(value = SEARCH_INDEXES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_POST) public SearchIndex createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "class_method_signature": "SearchIndexRestController.createSearchIndex(@RequestBody SearchIndexCreateRequest request)", "testcase": false, "constructor": false, "invocations": ["createSearchIndex"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}