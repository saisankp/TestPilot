{"test_class": {"identifier": "ObjectArrayConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@InjectMocks\n    private ObjectArrayConverter underTest;", "modifier": "@InjectMocks\n    private", "type": "ObjectArrayConverter", "declarator": "underTest", "var_name": "underTest"}], "file": "core/src/test/java/com/tngtech/junit/dataprovider/convert/ObjectArrayConverterTest.java"}, "test_case": {"identifier": "testConvertShouldCreateEmptyVarargsArrayForLastMissingVarargsArgument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertShouldCreateEmptyVarargsArrayForLastMissingVarargsArgument() {\n        // Given:\n        Object[] data = new Object[] { \"test\" };\n        Class<?>[] parameterTypes = new Class<?>[] { String.class, int[].class };\n\n        // When:\n        Object[] result = underTest.convert(data, true, parameterTypes);\n\n        // Then:\n        assertThat(result).containsExactly(\"test\", new int[0]);\n    }", "signature": "void testConvertShouldCreateEmptyVarargsArrayForLastMissingVarargsArgument()", "full_signature": "@Test public void testConvertShouldCreateEmptyVarargsArrayForLastMissingVarargsArgument()", "class_method_signature": "ObjectArrayConverterTest.testConvertShouldCreateEmptyVarargsArrayForLastMissingVarargsArgument()", "testcase": true, "constructor": false, "invocations": ["convert", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "ObjectArrayConverter", "superclass": "extends AbstractObjectConverter<Object[]>", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "ObjectArrayConverter.convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}, {"identifier": "convertVararg", "parameters": "(Object[] data, Class<?> varargComponentType, int nonVarargParameterCount)", "modifiers": "private", "return": "Object", "signature": "Object convertVararg(Object[] data, Class<?> varargComponentType, int nonVarargParameterCount)", "full_signature": "private Object convertVararg(Object[] data, Class<?> varargComponentType, int nonVarargParameterCount)", "class_method_signature": "ObjectArrayConverter.convertVararg(Object[] data, Class<?> varargComponentType, int nonVarargParameterCount)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/tngtech/junit/dataprovider/convert/ObjectArrayConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public", "return": "Object[]", "body": "@Override\n    public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes) {\n        Object[] result;\n        if (isVarargs) {\n            result = new Object[parameterTypes.length];\n\n            int lastArgIdx = parameterTypes.length - 1;\n            if (lastArgIdx >= 0) {\n                System.arraycopy(data, 0, result, 0, lastArgIdx);\n            }\n            result[lastArgIdx] = convertVararg(data, parameterTypes[lastArgIdx].getComponentType(), lastArgIdx);\n\n        } else {\n            result = data;\n        }\n        checkIfArgumentsMatchParameterTypes(result, parameterTypes);\n        return result;\n    }", "signature": "Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "ObjectArrayConverter.convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "convertVararg", "getComponentType", "checkIfArgumentsMatchParameterTypes"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}