{"test_class": {"identifier": "TestOracleJarUtils", "superclass": "", "interfaces": "", "fields": [], "file": "databus2-relay/databus2-relay-impl/src/test/java/com/linkedin/databus2/relay/TestOracleJarUtils.java"}, "test_case": {"identifier": "testCreateOracleDataSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreateOracleDataSource() throws Exception\n\t{\n\t\t// Invoke the method more than once in the same process\n     \tDataSource ds1 = OracleJarUtils.createOracleDataSource(\"jdbc:oracle:thin:person/person@devdb:1521:db\");\n     \tDataSource ds2 = OracleJarUtils.createOracleDataSource(\"jdbc:oracle:thin:person/person@devdb:1521:db\");\n     \t\n    \t// Should create a new object each time, and be invocable as many times as desired\n    \tboolean isEqual = ds1.equals(ds2);\n    \tAssert.assertEquals(isEqual, false);\n\n    \tboolean isIdentical = (ds1 == ds2);\n    \tAssert.assertEquals(isIdentical, false);\n\n\t}", "signature": "void testCreateOracleDataSource()", "full_signature": "@Test public void testCreateOracleDataSource()", "class_method_signature": "TestOracleJarUtils.testCreateOracleDataSource()", "testcase": true, "constructor": false, "invocations": ["createOracleDataSource", "createOracleDataSource", "equals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "OracleJarUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(OracleJarUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(OracleJarUtils.class)", "var_name": "LOG"}], "methods": [{"identifier": "createOracleDataSource", "parameters": "(String uri)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createOracleDataSource(String uri)", "full_signature": "public static DataSource createOracleDataSource(String uri)", "class_method_signature": "OracleJarUtils.createOracleDataSource(String uri)", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(String className)", "modifiers": "public static", "return": "Class", "signature": "Class loadClass(String className)", "full_signature": "public static Class loadClass(String className)", "class_method_signature": "OracleJarUtils.loadClass(String className)", "testcase": false, "constructor": false}], "file": "databus2-relay/databus2-relay-impl/src/main/java/com/linkedin/databus2/relay/OracleJarUtils.java"}, "focal_method": {"identifier": "createOracleDataSource", "parameters": "(String uri)", "modifiers": "public static", "return": "DataSource", "body": "public static DataSource createOracleDataSource(String uri)\n    throws Exception\n\t{\n\t\t// Create the OracleDataSource used to get DB connection(s)\n\t\tDataSource ds = null;\n\t\ttry\n\t\t{\n\t\t\tClass oracleDataSourceClass = loadClass(\"oracle.jdbc.pool.OracleDataSource\");\n\t\t\tObject ods = oracleDataSourceClass.newInstance(); \t  \n\t\t\tds = (DataSource) ods;\n\n\t\t\tMethod setURLMethod = oracleDataSourceClass.getMethod(\"setURL\", String.class);\n\t\t\tMethod getConnectionPropertiesMethod = oracleDataSourceClass.getMethod(\"getConnectionProperties\");\n\t\t\tMethod setConnectionPropertiesMethod = oracleDataSourceClass.getMethod(\"setConnectionProperties\", Properties.class);\n\t\t\tsetURLMethod.invoke(ods, uri);\n\t\t\t// DDS-425. Set oracle.jdbc.V8Compatible so DATE column will be mapped to java.sql.TimeStamp\n\t\t\t//          oracle jdbc 11g fixed this. So we can skip this after will upgrade jdbc to 11g.\n\n\t\t\tProperties prop = (Properties) getConnectionPropertiesMethod.invoke(ods);\n\t\t\tif (prop == null)\n\t\t\t{\n\t\t\t\tprop = new Properties();\n\t\t\t}\n\t\t\t//prop.put(\"oracle.jdbc.V8Compatible\",\"true\");\n\t\t\tsetConnectionPropertiesMethod.invoke(ods, prop);\n\t\t} catch (Exception e)\n\t\t{\n\t\t\tString errMsg = \"Error trying to create an Oracle DataSource\"; \n\t\t\tLOG.error(errMsg, e);\n\t\t\tthrow e;\n\t\t}\n\t    return ds;\n    }", "signature": "DataSource createOracleDataSource(String uri)", "full_signature": "public static DataSource createOracleDataSource(String uri)", "class_method_signature": "OracleJarUtils.createOracleDataSource(String uri)", "testcase": false, "constructor": false, "invocations": ["loadClass", "newInstance", "getMethod", "getMethod", "getMethod", "invoke", "invoke", "invoke", "error"]}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}