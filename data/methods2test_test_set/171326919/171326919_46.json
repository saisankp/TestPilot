{"test_class": {"identifier": "WeatherWebApiTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula04-queries/src/test/java/org/isel/mpd/weather/WeatherWebApiTest.java"}, "test_case": {"identifier": "pastWeatherNumberOfSunnyDaysInFeb2019", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void pastWeatherNumberOfSunnyDaysInFeb2019() {\n        List<WeatherInfo> infos = new WeatherWebApi(new MockRequest())\n                .pastWeather(37.017,-7.933, parse(\"2019-02-01\"), parse(\"2019-02-28\"));\n        // assertEquals(8, Queries.filterByDesc(infos, \"Sunny\").size());\n        /*\n        List<WeatherInfo> res = Queries.filterWeather(infos, new WeatherPredicate() {\n            @Override\n            public boolean test(WeatherInfo wi) {\n                return wi.getDesc().equals(\"Sunny\");\n            }\n        });\n        */\n        assertEquals(8, filterWeather(infos, wi -> wi.getDesc().equals(\"Sunny\")).size());\n    }", "signature": "void pastWeatherNumberOfSunnyDaysInFeb2019()", "full_signature": "@Test public void pastWeatherNumberOfSunnyDaysInFeb2019()", "class_method_signature": "WeatherWebApiTest.pastWeatherNumberOfSunnyDaysInFeb2019()", "testcase": true, "constructor": false, "invocations": ["pastWeather", "parse", "parse", "assertEquals", "size", "filterWeather", "equals", "getDesc"]}, "focal_class": {"identifier": "WeatherWebApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String HOST = \"http://api.worldweatheronline.com/premium/v1/\";", "modifier": "final", "type": "String", "declarator": "HOST = \"http://api.worldweatheronline.com/premium/v1/\"", "var_name": "HOST"}, {"original_string": "final String PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=csv&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=csv&key=%s\"", "var_name": "PATH_PAST_WEATHER"}, {"original_string": "final String PATH_SEARCH = \"search.ashx?query=%s&format=tab&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_SEARCH = \"search.ashx?query=%s&format=tab&key=%s\"", "var_name": "PATH_SEARCH"}, {"original_string": "final String WEATHER_KEY = \"10a7e54b547c4c7c870162131192102\";", "modifier": "final", "type": "String", "declarator": "WEATHER_KEY = \"10a7e54b547c4c7c870162131192102\"", "var_name": "WEATHER_KEY"}, {"original_string": "private final Request request;", "modifier": "private final", "type": "Request", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "WeatherWebApi", "parameters": "(Request request)", "modifiers": "public", "return": "", "signature": " WeatherWebApi(Request request)", "full_signature": "public  WeatherWebApi(Request request)", "class_method_signature": "WeatherWebApi.WeatherWebApi(Request request)", "testcase": false, "constructor": true}, {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "List<WeatherInfo>", "signature": "List<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public List<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "List<LocationInfo>", "signature": "List<LocationInfo> search(String query)", "full_signature": "public List<LocationInfo> search(String query)", "class_method_signature": "WeatherWebApi.search(String query)", "testcase": false, "constructor": false}], "file": "aula04-queries/src/main/java/org/isel/mpd/weather/WeatherWebApi.java"}, "focal_method": {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "List<WeatherInfo>", "body": "public List<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to) {\n        String path = HOST + String.format(PATH_PAST_WEATHER, lat, log, from, to, WEATHER_KEY);\n        Iterator<String> reader = request.getLines(path).iterator();\n        List<WeatherInfo> infos = new ArrayList<>();\n        while (reader.next().startsWith(\"#\")) { } // Skip comments\n        reader.next();                            // Skip Not Available\n        while (reader.hasNext()) {\n            infos.add(WeatherInfo.valueOf(reader.next()));\n            if(reader.hasNext()) reader.next();   // Skip daily information\n        }\n        return infos;\n    }", "signature": "List<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public List<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false, "invocations": ["format", "iterator", "getLines", "startsWith", "next", "next", "hasNext", "add", "valueOf", "next", "hasNext", "next"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}