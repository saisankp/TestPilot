{"test_class": {"identifier": "ImageRectTest", "superclass": "", "interfaces": "", "fields": [], "file": "rest-model/src/test/java/com/gentics/mesh/parameter/image/ImageRectTest.java"}, "test_case": {"identifier": "testIncompleteCropParameters", "parameters": "()", "modifiers": "@Test(expected = GenericRestException.class) public", "return": "void", "body": "@Test(expected = GenericRestException.class)\n\tpublic void testIncompleteCropParameters() {\n\t\t// Only one parameter\n\t\tImageRect rect = new ImageRect(\"1\");\n\t\trect.validate();\n\t}", "signature": "void testIncompleteCropParameters()", "full_signature": "@Test(expected = GenericRestException.class) public void testIncompleteCropParameters()", "class_method_signature": "ImageRectTest.testIncompleteCropParameters()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "ImageRect", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int startX;", "modifier": "private", "type": "int", "declarator": "startX", "var_name": "startX"}, {"original_string": "private int startY;", "modifier": "private", "type": "int", "declarator": "startY", "var_name": "startY"}, {"original_string": "private int width;", "modifier": "private", "type": "int", "declarator": "width", "var_name": "width"}, {"original_string": "private int height;", "modifier": "private", "type": "int", "declarator": "height", "var_name": "height"}], "methods": [{"identifier": "ImageRect", "parameters": "(String dimensions)", "modifiers": "public", "return": "", "signature": " ImageRect(String dimensions)", "full_signature": "public  ImageRect(String dimensions)", "class_method_signature": "ImageRect.ImageRect(String dimensions)", "testcase": false, "constructor": true}, {"identifier": "ImageRect", "parameters": "(int startX, int startY, int height, int width)", "modifiers": "public", "return": "", "signature": " ImageRect(int startX, int startY, int height, int width)", "full_signature": "public  ImageRect(int startX, int startY, int height, int width)", "class_method_signature": "ImageRect.ImageRect(int startX, int startY, int height, int width)", "testcase": false, "constructor": true}, {"identifier": "ImageRect", "parameters": "()", "modifiers": "public", "return": "", "signature": " ImageRect()", "full_signature": "public  ImageRect()", "class_method_signature": "ImageRect.ImageRect()", "testcase": false, "constructor": true}, {"identifier": "getStartX", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStartX()", "full_signature": "public int getStartX()", "class_method_signature": "ImageRect.getStartX()", "testcase": false, "constructor": false}, {"identifier": "getStartY", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStartY()", "full_signature": "public int getStartY()", "class_method_signature": "ImageRect.getStartY()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "ImageRect.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHeight()", "full_signature": "public int getHeight()", "class_method_signature": "ImageRect.getHeight()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImageRect.toString()", "testcase": false, "constructor": false}, {"identifier": "validateCropBounds", "parameters": "(int imageWidth, int imageHeight)", "modifiers": "public", "return": "void", "signature": "void validateCropBounds(int imageWidth, int imageHeight)", "full_signature": "public void validateCropBounds(int imageWidth, int imageHeight)", "class_method_signature": "ImageRect.validateCropBounds(int imageWidth, int imageHeight)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validate()", "full_signature": "public void validate()", "class_method_signature": "ImageRect.validate()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ImageRect.equals(Object obj)", "testcase": false, "constructor": false}], "file": "rest-model/src/main/java/com/gentics/mesh/parameter/image/ImageRect.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void validate() {\n\t\tInteger croph = getHeight();\n\t\tInteger cropw = getWidth();\n\t\tInteger startx = getStartX();\n\t\tInteger starty = getStartY();\n\t\t// Check whether all required crop parameters have been set when at least one crop parameter has been set.\n\t\tboolean hasOneCropParameter = croph != null || cropw != null || startx != null || starty != null;\n\t\tif (hasOneCropParameter) {\n\t\t\tif (croph != null && croph <= 0) {\n\t\t\t\tthrow error(BAD_REQUEST, \"image_error_parameter_positive\", ImageManipulationParameters.RECT_QUERY_PARAM_KEY, String.valueOf(croph));\n\t\t\t}\n\n\t\t\tif (cropw != null && cropw <= 0) {\n\t\t\t\tthrow error(BAD_REQUEST, \"image_error_parameter_positive\", ImageManipulationParameters.RECT_QUERY_PARAM_KEY, String.valueOf(cropw));\n\t\t\t}\n\n\t\t\tif (startx != null && startx <= -1) {\n\t\t\t\tthrow error(BAD_REQUEST, \"image_error_crop_start_not_negative\", ImageManipulationParameters.RECT_QUERY_PARAM_KEY, String.valueOf(\n\t\t\t\t\t\tstartx));\n\t\t\t}\n\n\t\t\tif (starty != null && starty <= -1) {\n\t\t\t\tthrow error(BAD_REQUEST, \"image_error_crop_start_not_negative\", ImageManipulationParameters.RECT_QUERY_PARAM_KEY, String.valueOf(\n\t\t\t\t\t\tstarty));\n\t\t\t}\n\t\t}\n\n\t}", "signature": "void validate()", "full_signature": "public void validate()", "class_method_signature": "ImageRect.validate()", "testcase": false, "constructor": false, "invocations": ["getHeight", "getWidth", "getStartX", "getStartY", "error", "valueOf", "error", "valueOf", "error", "valueOf", "error", "valueOf"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}