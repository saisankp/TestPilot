{"test_class": {"identifier": "TestKryoSerializers", "superclass": "", "interfaces": "", "fields": [{"original_string": "public int iterationCount = 1;", "modifier": "public", "type": "int", "declarator": "iterationCount = 1", "var_name": "iterationCount"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/serialization/TestKryoSerializers.java"}, "test_case": {"identifier": "readPre111", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readPre111() throws Exception {\n        String prefix = \"pre-1.1.1-\";\n\n        Field kryoHandleBuiltinCollections = KryoSerializers.class.getDeclaredField(\"KRYO_HANDLE_BUILTIN_COLLECTIONS\");\n        kryoHandleBuiltinCollections.setAccessible(true);\n\n        try {\n            KryoSerializers.register(new KryoForObjectThreadLocal(), false);\n            kryoHandleBuiltinCollections.set(null, false);\n            readFileAndDeserialize(prefix + \"emptyList\");\n\n            readFileAndDeserialize(prefix + \"emptyMap\");\n            readFileAndDeserialize(prefix + \"emptyNavigableMap\");\n            readFileAndDeserialize(prefix + \"emptySortedMap\");\n\n            readFileAndDeserialize(prefix + \"emptySet\");\n\n            // Legacy Kryo does not support these classes;\n            // @see com.esotericsoftware.kryo.Kryo constructor for details\n\n            // readFileAndDeserialize(prefix + \"asList\");\n            // readFileAndDeserialize(prefix + \"emptyNavigableSet\");\n            // readFileAndDeserialize(prefix + \"emptySortedSet\");\n\n            readFileAndDeserialize(prefix + \"singletonSet\");\n            readFileAndDeserialize(prefix + \"singletonList\");\n            readFileAndDeserialize(prefix + \"singletonMap\");\n        } finally {\n            // restore context not to mess up other tests\n            kryoHandleBuiltinCollections.set(null, false);\n            KryoSerializers.register(null, false);\n        }\n    }", "signature": "void readPre111()", "full_signature": "@Test public void readPre111()", "class_method_signature": "TestKryoSerializers.readPre111()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "setAccessible", "register", "set", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "readFileAndDeserialize", "set", "register"]}, "focal_class": {"identifier": "KryoSerializers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean KRYO_HANDLE_BUILTIN_COLLECTIONS = XenonConfiguration.bool(\n            \"kryo\",\n            \"handleBuiltInCollections\",\n            true\n    );", "modifier": "private static", "type": "boolean", "declarator": "KRYO_HANDLE_BUILTIN_COLLECTIONS = XenonConfiguration.bool(\n            \"kryo\",\n            \"handleBuiltInCollections\",\n            true\n    )", "var_name": "KRYO_HANDLE_BUILTIN_COLLECTIONS"}, {"original_string": "private static final ThreadLocal<Kryo> kryoForObjectPerThread = new KryoForObjectThreadLocal();", "modifier": "private static final", "type": "ThreadLocal<Kryo>", "declarator": "kryoForObjectPerThread = new KryoForObjectThreadLocal()", "var_name": "kryoForObjectPerThread"}, {"original_string": "private static final ThreadLocal<Kryo> kryoForDocumentPerThread = new KryoForDocumentThreadLocal();", "modifier": "private static final", "type": "ThreadLocal<Kryo>", "declarator": "kryoForDocumentPerThread = new KryoForDocumentThreadLocal()", "var_name": "kryoForDocumentPerThread"}, {"original_string": "private static ThreadLocal<Kryo> kryoForObjectPerThreadCustom;", "modifier": "private static", "type": "ThreadLocal<Kryo>", "declarator": "kryoForObjectPerThreadCustom", "var_name": "kryoForObjectPerThreadCustom"}, {"original_string": "private static ThreadLocal<Kryo> kryoForDocumentPerThreadCustom;", "modifier": "private static", "type": "ThreadLocal<Kryo>", "declarator": "kryoForDocumentPerThreadCustom", "var_name": "kryoForDocumentPerThreadCustom"}, {"original_string": "public static final long THREAD_LOCAL_BUFFER_LIMIT_BYTES = 1024 * 1024;", "modifier": "public static final", "type": "long", "declarator": "THREAD_LOCAL_BUFFER_LIMIT_BYTES = 1024 * 1024", "var_name": "THREAD_LOCAL_BUFFER_LIMIT_BYTES"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE_BYTES = 4096;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE_BYTES = 4096", "var_name": "DEFAULT_BUFFER_SIZE_BYTES"}, {"original_string": "private static final BufferThreadLocal bufferPerThread = new BufferThreadLocal();", "modifier": "private static final", "type": "BufferThreadLocal", "declarator": "bufferPerThread = new BufferThreadLocal()", "var_name": "bufferPerThread"}], "methods": [{"identifier": "KryoSerializers", "parameters": "()", "modifiers": "private", "return": "", "signature": " KryoSerializers()", "full_signature": "private  KryoSerializers()", "class_method_signature": "KryoSerializers.KryoSerializers()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(boolean isObjectSerializer)", "modifiers": "public static", "return": "Kryo", "signature": "Kryo create(boolean isObjectSerializer)", "full_signature": "public static Kryo create(boolean isObjectSerializer)", "class_method_signature": "KryoSerializers.create(boolean isObjectSerializer)", "testcase": false, "constructor": false}, {"identifier": "configureJdkCollections", "parameters": "(Kryo kryo)", "modifiers": "private static", "return": "void", "signature": "void configureJdkCollections(Kryo kryo)", "full_signature": "private static void configureJdkCollections(Kryo kryo)", "class_method_signature": "KryoSerializers.configureJdkCollections(Kryo kryo)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "modifiers": "public static", "return": "void", "signature": "void register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "full_signature": "public static void register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "class_method_signature": "KryoSerializers.register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "testcase": false, "constructor": false}, {"identifier": "getKryoThreadLocalForDocuments", "parameters": "()", "modifiers": "private static", "return": "Kryo", "signature": "Kryo getKryoThreadLocalForDocuments()", "full_signature": "private static Kryo getKryoThreadLocalForDocuments()", "class_method_signature": "KryoSerializers.getKryoThreadLocalForDocuments()", "testcase": false, "constructor": false}, {"identifier": "getKryoThreadLocalForObjects", "parameters": "()", "modifiers": "private static", "return": "Kryo", "signature": "Kryo getKryoThreadLocalForObjects()", "full_signature": "private static Kryo getKryoThreadLocalForObjects()", "class_method_signature": "KryoSerializers.getKryoThreadLocalForObjects()", "testcase": false, "constructor": false}, {"identifier": "serializeDocument", "parameters": "(ServiceDocument o, int maxSize)", "modifiers": "public static", "return": "Output", "signature": "Output serializeDocument(ServiceDocument o, int maxSize)", "full_signature": "public static Output serializeDocument(ServiceDocument o, int maxSize)", "class_method_signature": "KryoSerializers.serializeDocument(ServiceDocument o, int maxSize)", "testcase": false, "constructor": false}, {"identifier": "serializeAsDocument", "parameters": "(Object o, int maxSize)", "modifiers": "public static", "return": "Output", "signature": "Output serializeAsDocument(Object o, int maxSize)", "full_signature": "public static Output serializeAsDocument(Object o, int maxSize)", "class_method_signature": "KryoSerializers.serializeAsDocument(Object o, int maxSize)", "testcase": false, "constructor": false}, {"identifier": "serializeDocumentForIndexing", "parameters": "(Object o, int maxSize)", "modifiers": "public static", "return": "Output", "signature": "Output serializeDocumentForIndexing(Object o, int maxSize)", "full_signature": "public static Output serializeDocumentForIndexing(Object o, int maxSize)", "class_method_signature": "KryoSerializers.serializeDocumentForIndexing(Object o, int maxSize)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Object o, byte[] buffer, int position)", "modifiers": "public static", "return": "int", "signature": "int serializeObject(Object o, byte[] buffer, int position)", "full_signature": "public static int serializeObject(Object o, byte[] buffer, int position)", "class_method_signature": "KryoSerializers.serializeObject(Object o, byte[] buffer, int position)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Object o, int maxSize)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer serializeObject(Object o, int maxSize)", "full_signature": "public static ByteBuffer serializeObject(Object o, int maxSize)", "class_method_signature": "KryoSerializers.serializeObject(Object o, int maxSize)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(T t)", "modifiers": "public static", "return": "T", "signature": "T clone(T t)", "full_signature": "public static T clone(T t)", "class_method_signature": "KryoSerializers.clone(T t)", "testcase": false, "constructor": false}, {"identifier": "cloneObject", "parameters": "(T t)", "modifiers": "public static", "return": "T", "signature": "T cloneObject(T t)", "full_signature": "public static T cloneObject(T t)", "class_method_signature": "KryoSerializers.cloneObject(T t)", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "(int capacity)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBuffer(int capacity)", "full_signature": "public static byte[] getBuffer(int capacity)", "class_method_signature": "KryoSerializers.getBuffer(int capacity)", "testcase": false, "constructor": false}, {"identifier": "deserializeObject", "parameters": "(ByteBuffer bb)", "modifiers": "public static", "return": "Object", "signature": "Object deserializeObject(ByteBuffer bb)", "full_signature": "public static Object deserializeObject(ByteBuffer bb)", "class_method_signature": "KryoSerializers.deserializeObject(ByteBuffer bb)", "testcase": false, "constructor": false}, {"identifier": "deserializeObject", "parameters": "(byte[] bytes, int position, int length)", "modifiers": "public static", "return": "Object", "signature": "Object deserializeObject(byte[] bytes, int position, int length)", "full_signature": "public static Object deserializeObject(byte[] bytes, int position, int length)", "class_method_signature": "KryoSerializers.deserializeObject(byte[] bytes, int position, int length)", "testcase": false, "constructor": false}, {"identifier": "deserializeDocument", "parameters": "(byte[] bytes, int position, int length)", "modifiers": "public static", "return": "Object", "signature": "Object deserializeDocument(byte[] bytes, int position, int length)", "full_signature": "public static Object deserializeDocument(byte[] bytes, int position, int length)", "class_method_signature": "KryoSerializers.deserializeDocument(byte[] bytes, int position, int length)", "testcase": false, "constructor": false}, {"identifier": "deserializeDocument", "parameters": "(ByteBuffer bb)", "modifiers": "public static", "return": "Object", "signature": "Object deserializeDocument(ByteBuffer bb)", "full_signature": "public static Object deserializeDocument(ByteBuffer bb)", "class_method_signature": "KryoSerializers.deserializeDocument(ByteBuffer bb)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/serialization/KryoSerializers.java"}, "focal_method": {"identifier": "register", "parameters": "(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "modifiers": "public static", "return": "void", "body": "public static void register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer) {\n        if (isDocumentSerializer) {\n            kryoForDocumentPerThreadCustom = kryoThreadLocal;\n        } else {\n            kryoForObjectPerThreadCustom = kryoThreadLocal;\n        }\n    }", "signature": "void register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "full_signature": "public static void register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "class_method_signature": "KryoSerializers.register(ThreadLocal<Kryo> kryoThreadLocal, boolean isDocumentSerializer)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}