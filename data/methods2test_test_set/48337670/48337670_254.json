{"test_class": {"identifier": "SchedulerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SchedulerImpl scheduler = new SchedulerImpl();", "modifier": "private", "type": "SchedulerImpl", "declarator": "scheduler = new SchedulerImpl()", "var_name": "scheduler"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/scheduler/SchedulerImplTest.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test @Timeout(value = 1, unit = TimeUnit.SECONDS) public", "return": "void", "body": "@Test\n    @Timeout(value = 1, unit = TimeUnit.SECONDS)\n    public void testCompareTo() throws InterruptedException {\n        long duration = 5000;\n        ScheduledCompletableFuture<Instant> future1 = scheduler.after(Duration.ofMillis(duration));\n        Thread.sleep(500);\n        ScheduledCompletableFuture<Instant> future2 = scheduler.after(Duration.ofMillis(duration));\n        int compare = future1.compareTo(future2);\n        assertTrue(compare < 0, \"First future should be less than second\");\n        future1.cancel(true);\n        future2.cancel(true);\n    }", "signature": "void testCompareTo()", "full_signature": "@Test @Timeout(value = 1, unit = TimeUnit.SECONDS) public void testCompareTo()", "class_method_signature": "SchedulerImplTest.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["after", "ofMillis", "sleep", "after", "ofMillis", "compareTo", "assertTrue", "cancel", "cancel"]}, "focal_class": {"identifier": "SchedulerImpl", "superclass": "", "interfaces": "implements Scheduler", "fields": [{"original_string": "private static final String SCHEDULER_THREAD_POOL = \"scheduler\";", "modifier": "private static final", "type": "String", "declarator": "SCHEDULER_THREAD_POOL = \"scheduler\"", "var_name": "SCHEDULER_THREAD_POOL"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(SchedulerImpl.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SchedulerImpl.class)", "var_name": "logger"}, {"original_string": "private final Clock clock = Clock.systemDefaultZone();", "modifier": "private final", "type": "Clock", "declarator": "clock = Clock.systemDefaultZone()", "var_name": "clock"}, {"original_string": "private final ScheduledExecutorService executor = ThreadPoolManager.getScheduledPool(SCHEDULER_THREAD_POOL);", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "executor = ThreadPoolManager.getScheduledPool(SCHEDULER_THREAD_POOL)", "var_name": "executor"}], "methods": [{"identifier": "after", "parameters": "(Duration duration)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<Instant>", "signature": "ScheduledCompletableFuture<Instant> after(Duration duration)", "full_signature": "@Override public ScheduledCompletableFuture<Instant> after(Duration duration)", "class_method_signature": "SchedulerImpl.after(Duration duration)", "testcase": false, "constructor": false}, {"identifier": "after", "parameters": "(Callable<T> callable, Duration duration)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> after(Callable<T> callable, Duration duration)", "full_signature": "@Override public ScheduledCompletableFuture<T> after(Callable<T> callable, Duration duration)", "class_method_signature": "SchedulerImpl.after(Callable<T> callable, Duration duration)", "testcase": false, "constructor": false}, {"identifier": "afterInternal", "parameters": "(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Duration duration)", "modifiers": "private", "return": "ScheduledCompletableFutureOnce<T>", "signature": "ScheduledCompletableFutureOnce<T> afterInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Duration duration)", "full_signature": "private ScheduledCompletableFutureOnce<T> afterInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Duration duration)", "class_method_signature": "SchedulerImpl.afterInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Duration duration)", "testcase": false, "constructor": false}, {"identifier": "before", "parameters": "(CompletableFuture<T> promise, Duration timeout)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> before(CompletableFuture<T> promise, Duration timeout)", "full_signature": "@Override public ScheduledCompletableFuture<T> before(CompletableFuture<T> promise, Duration timeout)", "class_method_signature": "SchedulerImpl.before(CompletableFuture<T> promise, Duration timeout)", "testcase": false, "constructor": false}, {"identifier": "at", "parameters": "(Instant instant)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<Instant>", "signature": "ScheduledCompletableFuture<Instant> at(Instant instant)", "full_signature": "@Override public ScheduledCompletableFuture<Instant> at(Instant instant)", "class_method_signature": "SchedulerImpl.at(Instant instant)", "testcase": false, "constructor": false}, {"identifier": "at", "parameters": "(Callable<T> callable, Instant instant)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> at(Callable<T> callable, Instant instant)", "full_signature": "@Override public ScheduledCompletableFuture<T> at(Callable<T> callable, Instant instant)", "class_method_signature": "SchedulerImpl.at(Callable<T> callable, Instant instant)", "testcase": false, "constructor": false}, {"identifier": "atInternal", "parameters": "(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Instant instant)", "modifiers": "private", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> atInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Instant instant)", "full_signature": "private ScheduledCompletableFuture<T> atInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Instant instant)", "class_method_signature": "SchedulerImpl.atInternal(ScheduledCompletableFutureOnce<T> deferred,\n            Callable<T> callable, Instant instant)", "testcase": false, "constructor": false}, {"identifier": "schedule", "parameters": "(SchedulerRunnable runnable, TemporalAdjuster temporalAdjuster)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, TemporalAdjuster temporalAdjuster)", "full_signature": "@Override public ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, TemporalAdjuster temporalAdjuster)", "class_method_signature": "SchedulerImpl.schedule(SchedulerRunnable runnable, TemporalAdjuster temporalAdjuster)", "testcase": false, "constructor": false}, {"identifier": "schedule", "parameters": "(ScheduledCompletableFutureRecurring<T> schedule, SchedulerRunnable runnable,\n            TemporalAdjuster temporalAdjuster)", "modifiers": "private", "return": "void", "signature": "void schedule(ScheduledCompletableFutureRecurring<T> schedule, SchedulerRunnable runnable,\n            TemporalAdjuster temporalAdjuster)", "full_signature": "private void schedule(ScheduledCompletableFutureRecurring<T> schedule, SchedulerRunnable runnable,\n            TemporalAdjuster temporalAdjuster)", "class_method_signature": "SchedulerImpl.schedule(ScheduledCompletableFutureRecurring<T> schedule, SchedulerRunnable runnable,\n            TemporalAdjuster temporalAdjuster)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/scheduler/SchedulerImpl.java"}, "focal_method": {"identifier": "after", "parameters": "(Duration duration)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<Instant>", "body": "@Override\n    public ScheduledCompletableFuture<Instant> after(Duration duration) {\n        final Instant start = Instant.now();\n        return after(() -> start, duration);\n    }", "signature": "ScheduledCompletableFuture<Instant> after(Duration duration)", "full_signature": "@Override public ScheduledCompletableFuture<Instant> after(Duration duration)", "class_method_signature": "SchedulerImpl.after(Duration duration)", "testcase": false, "constructor": false, "invocations": ["now", "after"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}