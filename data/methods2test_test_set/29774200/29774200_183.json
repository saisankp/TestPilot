{"test_class": {"identifier": "HudsonBuildBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "component/core/src/test/java/fr/norad/visuwall/providers/hudson/HudsonBuildBuilderTest.java"}, "test_case": {"identifier": "should_create_valid_hudson_build", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_create_valid_hudson_build() {\n        long duration = 123L;\n        int buildNumber = 34;\n        Set<HudsonCommiter> commiters = new TreeSet<HudsonCommiter>();\n        commiters.add(new HudsonCommiter(\"dude\"));\n        commiters.add(new HudsonCommiter(\"sweet\"));\n\n        Date startTime = new Date();\n        String state = null;\n\n        List<Culprit> users = new ArrayList<Culprit>();\n        users.add(new Culprit());\n        users.add(new Culprit());\n        users.get(0).setFullName(\"dude\");\n        users.get(1).setFullName(\"sweet\");\n\n        MavenModuleSetBuild setBuild = mock(MavenModuleSetBuild.class);\n        when(setBuild.getDuration()).thenReturn(duration);\n        when(setBuild.getCulprits()).thenReturn(users);\n        when(setBuild.getNumber()).thenReturn(buildNumber);\n        when(setBuild.getTimestamp()).thenReturn(startTime.getTime());\n\n        HudsonBuildBuilder hudsonBuildBuilder = new HudsonBuildBuilder();\n        HudsonBuild hudsonBuild = hudsonBuildBuilder.createHudsonBuild(setBuild, commiters);\n\n        assertEquals(duration, hudsonBuild.getDuration());\n        assertEquals(buildNumber, hudsonBuild.getBuildNumber());\n        assertEquals(commiters, hudsonBuild.getCommiters());\n        assertEquals(startTime, hudsonBuild.getStartTime());\n        assertEquals(state, hudsonBuild.getState());\n    }", "signature": "void should_create_valid_hudson_build()", "full_signature": "@Test public void should_create_valid_hudson_build()", "class_method_signature": "HudsonBuildBuilderTest.should_create_valid_hudson_build()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "setFullName", "get", "setFullName", "get", "mock", "thenReturn", "when", "getDuration", "thenReturn", "when", "getCulprits", "thenReturn", "when", "getNumber", "thenReturn", "when", "getTimestamp", "getTime", "createHudsonBuild", "assertEquals", "getDuration", "assertEquals", "getBuildNumber", "assertEquals", "getCommiters", "assertEquals", "getStartTime", "assertEquals", "getState"]}, "focal_class": {"identifier": "HudsonBuildBuilder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createHudsonBuild", "parameters": "(Build build, Set<HudsonCommiter> commiters)", "modifiers": "", "return": "HudsonBuild", "signature": "HudsonBuild createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "full_signature": " HudsonBuild createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "class_method_signature": "HudsonBuildBuilder.createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/providers/hudson/HudsonBuildBuilder.java"}, "focal_method": {"identifier": "createHudsonBuild", "parameters": "(Build build, Set<HudsonCommiter> commiters)", "modifiers": "", "return": "HudsonBuild", "body": "HudsonBuild createHudsonBuild(Build build, Set<HudsonCommiter> commiters) {\n        HudsonBuild hudsonBuild = new HudsonBuild();\n        hudsonBuild.setState(build.getResult());\n        hudsonBuild.setDuration(build.getDuration());\n        hudsonBuild.setStartTime(new Date(build.getTimestamp()));\n        hudsonBuild.setSuccessful(HudsonXmlHelper.isSuccessful(build));\n        hudsonBuild.setCommiters(commiters);\n        hudsonBuild.setBuildNumber(build.getNumber());\n        return hudsonBuild;\n    }", "signature": "HudsonBuild createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "full_signature": " HudsonBuild createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "class_method_signature": "HudsonBuildBuilder.createHudsonBuild(Build build, Set<HudsonCommiter> commiters)", "testcase": false, "constructor": false, "invocations": ["setState", "getResult", "setDuration", "getDuration", "setStartTime", "getTimestamp", "setSuccessful", "isSuccessful", "setCommiters", "setBuildNumber", "getNumber"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}