{"test_class": {"identifier": "TextTableTest", "superclass": "", "interfaces": "", "fields": [], "file": "karamel-core/src/test/java/se/kth/karamel/common/TextTableTest.java"}, "test_case": {"identifier": "testRealDataLen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRealDataLen() {\n    String data = null;\n    int len = TextTable.realDataLen(data);\n    Assert.assertEquals(0, len);\n    data = \"\";\n    len = TextTable.realDataLen(data);\n    Assert.assertEquals(0, len);\n    data = \" \";\n    len = TextTable.realDataLen(data);\n    Assert.assertEquals(1, len);\n    String name = \"hopsworks1\";\n    String website = \"Karamel Website\";\n    data = \"<a kref='shellconnect hopsworks1'>\" + name + \"</a>\";\n    len = TextTable.realDataLen(data);\n    Assert.assertEquals(name.length(), len);\n    data = \"baba <a kref='shellconnect hopsworks1'>\" + name + \"</a> mkmk<<>>\";\n    len = TextTable.realDataLen(data);\n    Assert.assertEquals((\"baba \".length() + name.length() + \" mkmk<<>>\".length()), len);\n    data = \"baba <a kref='shellconnect hopsworks1'>\" + name + \"</a> mkmk<<>> <a href='http://www.karamel.io/'>\" +\n        website + \"</a>\";\n    len = TextTable.realDataLen(data);\n    Assert.assertEquals(\"baba \".length() + name.length() +  \" mkmk<<>> \".length() + website.length(), len);\n  }", "signature": "void testRealDataLen()", "full_signature": "@Test public void testRealDataLen()", "class_method_signature": "TextTableTest.testRealDataLen()", "testcase": true, "constructor": false, "invocations": ["realDataLen", "assertEquals", "realDataLen", "assertEquals", "realDataLen", "assertEquals", "realDataLen", "assertEquals", "length", "realDataLen", "assertEquals", "length", "length", "length", "realDataLen", "assertEquals", "length", "length", "length", "length"]}, "focal_class": {"identifier": "TextTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Pattern METADATA_PATTERN = Pattern.compile(\"(<a[^>]*>([^<>]*)<\\\\/a>)\");", "modifier": "private static", "type": "Pattern", "declarator": "METADATA_PATTERN = Pattern.compile(\"(<a[^>]*>([^<>]*)<\\\\/a>)\")", "var_name": "METADATA_PATTERN"}], "methods": [{"identifier": "makeTable", "parameters": "(String[] columnNames, int sortIndex, Object[][] data, boolean rowNumbering)", "modifiers": "public static", "return": "String", "signature": "String makeTable(String[] columnNames, int sortIndex, Object[][] data, boolean rowNumbering)", "full_signature": "public static String makeTable(String[] columnNames, int sortIndex, Object[][] data, boolean rowNumbering)", "class_method_signature": "TextTable.makeTable(String[] columnNames, int sortIndex, Object[][] data, boolean rowNumbering)", "testcase": false, "constructor": false}, {"identifier": "calcColLengths", "parameters": "(String[] columnNames, Object[][] data)", "modifiers": "private static", "return": "int[]", "signature": "int[] calcColLengths(String[] columnNames, Object[][] data)", "full_signature": "private static int[] calcColLengths(String[] columnNames, Object[][] data)", "class_method_signature": "TextTable.calcColLengths(String[] columnNames, Object[][] data)", "testcase": false, "constructor": false}, {"identifier": "maxLength", "parameters": "(int length, Object data)", "modifiers": "private static", "return": "int", "signature": "int maxLength(int length, Object data)", "full_signature": "private static int maxLength(int length, Object data)", "class_method_signature": "TextTable.maxLength(int length, Object data)", "testcase": false, "constructor": false}, {"identifier": "realDataLen", "parameters": "(Object data)", "modifiers": "public static", "return": "int", "signature": "int realDataLen(Object data)", "full_signature": "public static int realDataLen(Object data)", "class_method_signature": "TextTable.realDataLen(Object data)", "testcase": false, "constructor": false}], "file": "karamel-core/src/main/java/se/kth/karamel/common/TextTable.java"}, "focal_method": {"identifier": "realDataLen", "parameters": "(Object data)", "modifiers": "public static", "return": "int", "body": "public static int realDataLen(Object data) {\n    if (data == null) {\n      return 0;\n    }\n    String dataString = data.toString();\n    int totalLength = dataString.length();\n    Matcher matcher = METADATA_PATTERN.matcher(dataString);\n    while (matcher.find()) {\n      String withMeta = matcher.group(1);\n      String justData = matcher.group(2);\n      int metaLegth = withMeta.length() - justData.length();\n      totalLength -= metaLegth;\n    }\n    return totalLength;\n  }", "signature": "int realDataLen(Object data)", "full_signature": "public static int realDataLen(Object data)", "class_method_signature": "TextTable.realDataLen(Object data)", "testcase": false, "constructor": false, "invocations": ["toString", "length", "matcher", "find", "group", "group", "length", "length"]}, "repository": {"repo_id": 29383909, "url": "https://github.com/karamelchef/karamel", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 30, "size": 12029, "license": "licensed"}}