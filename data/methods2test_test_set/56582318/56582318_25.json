{"test_class": {"identifier": "CommonAlgorithmsFromCartagenTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoxygene-spatial/src/test/java/fr/ign/cogit/geoxygene/util/algo/geometricAlgorithms/CommonAlgorithmsFromCartagenTest.java"}, "test_case": {"identifier": "testGetSelfIntersections", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSelfIntersections() {\n    IDirectPosition p1 = new DirectPosition(0.0, 0.0);\n    IDirectPosition p2 = new DirectPosition(10.0, 10.0);\n    IDirectPosition p3 = new DirectPosition(20.0, 20.0);\n    IDirectPosition p4 = new DirectPosition(20.0, 15.0);\n    IDirectPosition p5 = new DirectPosition(10.0, 15.0);\n    IDirectPosition p6 = new DirectPosition(5.0, 15.0);\n    IDirectPosition p7 = new DirectPosition(10.0, 10.0);\n    ILineString line2 = new GM_LineString(p1, p2, p3, p4, p5, p6, p7);\n\n    List<IDirectPosition> intersections2 = CommonAlgorithmsFromCartAGen\n        .getSelfIntersections(line2);\n    Assert.assertEquals(2, intersections2.size());\n    IDirectPosition int1 = intersections2.get(0);\n    IDirectPosition int2 = intersections2.get(1);\n    Assert.assertEquals(int1, p7);\n    Assert.assertEquals(int2, new DirectPosition(15.0, 15.0));\n\n    String lineWktn    try {\n      ILineString line = (ILineString) WktGeOxygene.makeGeOxygene(lineWkt);\n      List<IDirectPosition> intersections3 = CommonAlgorithmsFromCartAGen\n          .getSelfIntersections(line);\n      Assert.assertEquals(50, intersections3.size());\n      ILineString noDuplicate = CommonAlgorithmsFromCartAGen\n          .removeDuplicates(line);\n      List<IDirectPosition> intersections4 = CommonAlgorithmsFromCartAGen\n          .getSelfIntersections(noDuplicate);\n      Assert.assertEquals(2, intersections4.size());\n    } catch (ParseException e) {\n      e.printStackTrace();\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }", "signature": "void testGetSelfIntersections()", "full_signature": "@Test public void testGetSelfIntersections()", "class_method_signature": "CommonAlgorithmsFromCartagenTest.testGetSelfIntersections()", "testcase": true, "constructor": false, "invocations": ["getSelfIntersections", "assertEquals", "size", "get", "get", "assertEquals", "assertEquals", "makeGeOxygene", "getSelfIntersections", "assertEquals", "size", "removeDuplicates", "getSelfIntersections", "assertEquals", "size", "printStackTrace", "printStackTrace"]}, "focal_class": {"identifier": "CommonAlgorithmsFromCartAGen", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getNearestVertexFromPoint", "parameters": "(IGeometry geom,\n      IDirectPosition point)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition getNearestVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "full_signature": "public static IDirectPosition getNearestVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNearestVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "getNearestVertexPositionFromPoint", "parameters": "(IGeometry geom,\n      IDirectPosition point)", "modifiers": "public static", "return": "int", "signature": "int getNearestVertexPositionFromPoint(IGeometry geom,\n      IDirectPosition point)", "full_signature": "public static int getNearestVertexPositionFromPoint(IGeometry geom,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNearestVertexPositionFromPoint(IGeometry geom,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "getNearestVertexPositionBeforePoint", "parameters": "(IGeometry geom,\n      IDirectPosition point)", "modifiers": "public static", "return": "int", "signature": "int getNearestVertexPositionBeforePoint(IGeometry geom,\n      IDirectPosition point)", "full_signature": "public static int getNearestVertexPositionBeforePoint(IGeometry geom,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNearestVertexPositionBeforePoint(IGeometry geom,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "insertVertex", "parameters": "(ILineString line,\n      IDirectPosition newVertex)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString insertVertex(ILineString line,\n      IDirectPosition newVertex)", "full_signature": "public static ILineString insertVertex(ILineString line,\n      IDirectPosition newVertex)", "class_method_signature": "CommonAlgorithmsFromCartAGen.insertVertex(ILineString line,\n      IDirectPosition newVertex)", "testcase": false, "constructor": false}, {"identifier": "insertVertex", "parameters": "(ILineString line,\n      IDirectPosition newVertex, double tolerance)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString insertVertex(ILineString line,\n      IDirectPosition newVertex, double tolerance)", "full_signature": "public static ILineString insertVertex(ILineString line,\n      IDirectPosition newVertex, double tolerance)", "class_method_signature": "CommonAlgorithmsFromCartAGen.insertVertex(ILineString line,\n      IDirectPosition newVertex, double tolerance)", "testcase": false, "constructor": false}, {"identifier": "insertVertex", "parameters": "(IPolygon polygon,\n      IDirectPosition newVertex)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon insertVertex(IPolygon polygon,\n      IDirectPosition newVertex)", "full_signature": "public static IPolygon insertVertex(IPolygon polygon,\n      IDirectPosition newVertex)", "class_method_signature": "CommonAlgorithmsFromCartAGen.insertVertex(IPolygon polygon,\n      IDirectPosition newVertex)", "testcase": false, "constructor": false}, {"identifier": "insertVertex", "parameters": "(IPolygon polygon,\n      IDirectPosition newVertex, double tolerance)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon insertVertex(IPolygon polygon,\n      IDirectPosition newVertex, double tolerance)", "full_signature": "public static IPolygon insertVertex(IPolygon polygon,\n      IDirectPosition newVertex, double tolerance)", "class_method_signature": "CommonAlgorithmsFromCartAGen.insertVertex(IPolygon polygon,\n      IDirectPosition newVertex, double tolerance)", "testcase": false, "constructor": false}, {"identifier": "splitLine", "parameters": "(ILineString line,\n      IDirectPosition splitVertex, double tolerance)", "modifiers": "public static", "return": "ILineString[]", "signature": "ILineString[] splitLine(ILineString line,\n      IDirectPosition splitVertex, double tolerance)", "full_signature": "public static ILineString[] splitLine(ILineString line,\n      IDirectPosition splitVertex, double tolerance)", "class_method_signature": "CommonAlgorithmsFromCartAGen.splitLine(ILineString line,\n      IDirectPosition splitVertex, double tolerance)", "testcase": false, "constructor": false}, {"identifier": "getNearestOtherVertexFromPoint", "parameters": "(IGeometry geom,\n      IDirectPosition point)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition getNearestOtherVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "full_signature": "public static IDirectPosition getNearestOtherVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNearestOtherVertexFromPoint(IGeometry geom,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "getNearestSegmentFromPoint", "parameters": "(IGeometry geom,\n      IDirectPosition point)", "modifiers": "public static", "return": "ILineSegment", "signature": "ILineSegment getNearestSegmentFromPoint(IGeometry geom,\n      IDirectPosition point)", "full_signature": "public static ILineSegment getNearestSegmentFromPoint(IGeometry geom,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNearestSegmentFromPoint(IGeometry geom,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "rotateVector", "parameters": "(Vector2D v, double angle)", "modifiers": "public static", "return": "Vector2D", "signature": "Vector2D rotateVector(Vector2D v, double angle)", "full_signature": "public static Vector2D rotateVector(Vector2D v, double angle)", "class_method_signature": "CommonAlgorithmsFromCartAGen.rotateVector(Vector2D v, double angle)", "testcase": false, "constructor": false}, {"identifier": "getOverlappingLength", "parameters": "(IPolygon poly1, IPolygon poly2)", "modifiers": "public static", "return": "double", "signature": "double getOverlappingLength(IPolygon poly1, IPolygon poly2)", "full_signature": "public static double getOverlappingLength(IPolygon poly1, IPolygon poly2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getOverlappingLength(IPolygon poly1, IPolygon poly2)", "testcase": false, "constructor": false}, {"identifier": "getOverlappingLength", "parameters": "(ILineString line, IPolygon poly)", "modifiers": "public static", "return": "double", "signature": "double getOverlappingLength(ILineString line, IPolygon poly)", "full_signature": "public static double getOverlappingLength(ILineString line, IPolygon poly)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getOverlappingLength(ILineString line, IPolygon poly)", "testcase": false, "constructor": false}, {"identifier": "angleBetween2Lines", "parameters": "(ILineString line1,\n      ILineString line2)", "modifiers": "public static", "return": "double", "signature": "double angleBetween2Lines(ILineString line1,\n      ILineString line2)", "full_signature": "public static double angleBetween2Lines(ILineString line1,\n      ILineString line2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.angleBetween2Lines(ILineString line1,\n      ILineString line2)", "testcase": false, "constructor": false}, {"identifier": "lineAbsoluteOrientation", "parameters": "(ILineString line,\n      IDirectPosition point)", "modifiers": "public static", "return": "Angle", "signature": "Angle lineAbsoluteOrientation(ILineString line,\n      IDirectPosition point)", "full_signature": "public static Angle lineAbsoluteOrientation(ILineString line,\n      IDirectPosition point)", "class_method_signature": "CommonAlgorithmsFromCartAGen.lineAbsoluteOrientation(ILineString line,\n      IDirectPosition point)", "testcase": false, "constructor": false}, {"identifier": "getNbCommonVertices", "parameters": "(IGeometry geom1, IGeometry geom2)", "modifiers": "public static", "return": "int", "signature": "int getNbCommonVertices(IGeometry geom1, IGeometry geom2)", "full_signature": "public static int getNbCommonVertices(IGeometry geom1, IGeometry geom2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getNbCommonVertices(IGeometry geom1, IGeometry geom2)", "testcase": false, "constructor": false}, {"identifier": "getLineConnectionInfo", "parameters": "(ILineString line1,\n      ILineString line2)", "modifiers": "public static", "return": "LineConnectionInfo", "signature": "LineConnectionInfo getLineConnectionInfo(ILineString line1,\n      ILineString line2)", "full_signature": "public static LineConnectionInfo getLineConnectionInfo(ILineString line1,\n      ILineString line2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getLineConnectionInfo(ILineString line1,\n      ILineString line2)", "testcase": false, "constructor": false}, {"identifier": "isLineCrossingPolygon", "parameters": "(ILineString line, IPolygon poly)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLineCrossingPolygon(ILineString line, IPolygon poly)", "full_signature": "public static boolean isLineCrossingPolygon(ILineString line, IPolygon poly)", "class_method_signature": "CommonAlgorithmsFromCartAGen.isLineCrossingPolygon(ILineString line, IPolygon poly)", "testcase": false, "constructor": false}, {"identifier": "geomColnUnion", "parameters": "(Collection<IGeometry> geomColn)", "modifiers": "public static", "return": "IGeometry", "signature": "IGeometry geomColnUnion(Collection<IGeometry> geomColn)", "full_signature": "public static IGeometry geomColnUnion(Collection<IGeometry> geomColn)", "class_method_signature": "CommonAlgorithmsFromCartAGen.geomColnUnion(Collection<IGeometry> geomColn)", "testcase": false, "constructor": false}, {"identifier": "geomColnIntersection", "parameters": "(Collection<IGeometry> geomColn)", "modifiers": "public static", "return": "IGeometry", "signature": "IGeometry geomColnIntersection(Collection<IGeometry> geomColn)", "full_signature": "public static IGeometry geomColnIntersection(Collection<IGeometry> geomColn)", "class_method_signature": "CommonAlgorithmsFromCartAGen.geomColnIntersection(Collection<IGeometry> geomColn)", "testcase": false, "constructor": false}, {"identifier": "getSidelongMaxDist", "parameters": "(IPolygon poly, double orientation)", "modifiers": "public static", "return": "double", "signature": "double getSidelongMaxDist(IPolygon poly, double orientation)", "full_signature": "public static double getSidelongMaxDist(IPolygon poly, double orientation)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getSidelongMaxDist(IPolygon poly, double orientation)", "testcase": false, "constructor": false}, {"identifier": "projection", "parameters": "(IDirectPosition point,\n      ILineString line, Vector2D direction)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition projection(IDirectPosition point,\n      ILineString line, Vector2D direction)", "full_signature": "public static IDirectPosition projection(IDirectPosition point,\n      ILineString line, Vector2D direction)", "class_method_signature": "CommonAlgorithmsFromCartAGen.projection(IDirectPosition point,\n      ILineString line, Vector2D direction)", "testcase": false, "constructor": false}, {"identifier": "projectionOrtho", "parameters": "(IDirectPosition point,\n      ILineString line, Vector2D direction)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition projectionOrtho(IDirectPosition point,\n      ILineString line, Vector2D direction)", "full_signature": "public static IDirectPosition projectionOrtho(IDirectPosition point,\n      ILineString line, Vector2D direction)", "class_method_signature": "CommonAlgorithmsFromCartAGen.projectionOrtho(IDirectPosition point,\n      ILineString line, Vector2D direction)", "testcase": false, "constructor": false}, {"identifier": "getBiggerFromMultiSurface", "parameters": "(\n      IMultiSurface<IOrientableSurface> multi)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon getBiggerFromMultiSurface(\n      IMultiSurface<IOrientableSurface> multi)", "full_signature": "public static IPolygon getBiggerFromMultiSurface(\n      IMultiSurface<IOrientableSurface> multi)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getBiggerFromMultiSurface(\n      IMultiSurface<IOrientableSurface> multi)", "testcase": false, "constructor": false}, {"identifier": "getLongestFromMultiCurve", "parameters": "(\n      IMultiCurve<IOrientableCurve> multi)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString getLongestFromMultiCurve(\n      IMultiCurve<IOrientableCurve> multi)", "full_signature": "public static ILineString getLongestFromMultiCurve(\n      IMultiCurve<IOrientableCurve> multi)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getLongestFromMultiCurve(\n      IMultiCurve<IOrientableCurve> multi)", "testcase": false, "constructor": false}, {"identifier": "getBiggerFromAggregate", "parameters": "(IAggregate<IGeometry> aggr)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon getBiggerFromAggregate(IAggregate<IGeometry> aggr)", "full_signature": "public static IPolygon getBiggerFromAggregate(IAggregate<IGeometry> aggr)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getBiggerFromAggregate(IAggregate<IGeometry> aggr)", "testcase": false, "constructor": false}, {"identifier": "getCommonVertexBetween2Lines", "parameters": "(ILineString line1,\n      ILineString line2)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition getCommonVertexBetween2Lines(ILineString line1,\n      ILineString line2)", "full_signature": "public static IDirectPosition getCommonVertexBetween2Lines(ILineString line1,\n      ILineString line2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getCommonVertexBetween2Lines(ILineString line1,\n      ILineString line2)", "testcase": false, "constructor": false}, {"identifier": "getIntersectingInnerRings", "parameters": "(IPolygon multiRing,\n      IGeometry geom)", "modifiers": "public static", "return": "Set<IRing>", "signature": "Set<IRing> getIntersectingInnerRings(IPolygon multiRing,\n      IGeometry geom)", "full_signature": "public static Set<IRing> getIntersectingInnerRings(IPolygon multiRing,\n      IGeometry geom)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getIntersectingInnerRings(IPolygon multiRing,\n      IGeometry geom)", "testcase": false, "constructor": false}, {"identifier": "getContainingInnerRing", "parameters": "(IPolygon multiRing,\n      IGeometry geom)", "modifiers": "public static", "return": "IRing", "signature": "IRing getContainingInnerRing(IPolygon multiRing,\n      IGeometry geom)", "full_signature": "public static IRing getContainingInnerRing(IPolygon multiRing,\n      IGeometry geom)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getContainingInnerRing(IPolygon multiRing,\n      IGeometry geom)", "testcase": false, "constructor": false}, {"identifier": "displaceOneSide", "parameters": "(ILineString line, boolean start,\n      Vector2D displacementVector)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString displaceOneSide(ILineString line, boolean start,\n      Vector2D displacementVector)", "full_signature": "public static ILineString displaceOneSide(ILineString line, boolean start,\n      Vector2D displacementVector)", "class_method_signature": "CommonAlgorithmsFromCartAGen.displaceOneSide(ILineString line, boolean start,\n      Vector2D displacementVector)", "testcase": false, "constructor": false}, {"identifier": "getLineDistanceToIndex", "parameters": "(ILineString line, int index)", "modifiers": "public static", "return": "double", "signature": "double getLineDistanceToIndex(ILineString line, int index)", "full_signature": "public static double getLineDistanceToIndex(ILineString line, int index)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getLineDistanceToIndex(ILineString line, int index)", "testcase": false, "constructor": false}, {"identifier": "getLineDistanceBetweenIndexes", "parameters": "(ILineString line,\n      int index1, int index2)", "modifiers": "public static", "return": "double", "signature": "double getLineDistanceBetweenIndexes(ILineString line,\n      int index1, int index2)", "full_signature": "public static double getLineDistanceBetweenIndexes(ILineString line,\n      int index1, int index2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getLineDistanceBetweenIndexes(ILineString line,\n      int index1, int index2)", "testcase": false, "constructor": false}, {"identifier": "getSubLine", "parameters": "(ILineString line, IDirectPosition pt1,\n      IDirectPosition pt2)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString getSubLine(ILineString line, IDirectPosition pt1,\n      IDirectPosition pt2)", "full_signature": "public static ILineString getSubLine(ILineString line, IDirectPosition pt1,\n      IDirectPosition pt2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getSubLine(ILineString line, IDirectPosition pt1,\n      IDirectPosition pt2)", "testcase": false, "constructor": false}, {"identifier": "getShortestEdgeLength", "parameters": "(IGeometry geom)", "modifiers": "public static", "return": "double", "signature": "double getShortestEdgeLength(IGeometry geom)", "full_signature": "public static double getShortestEdgeLength(IGeometry geom)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getShortestEdgeLength(IGeometry geom)", "testcase": false, "constructor": false}, {"identifier": "getEdgeLengthMedian", "parameters": "(IGeometry geom)", "modifiers": "public static", "return": "double", "signature": "double getEdgeLengthMedian(IGeometry geom)", "full_signature": "public static double getEdgeLengthMedian(IGeometry geom)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getEdgeLengthMedian(IGeometry geom)", "testcase": false, "constructor": false}, {"identifier": "getPtMaxXFromLine", "parameters": "(ILineString line)", "modifiers": "public static", "return": "Vector<Object>", "signature": "Vector<Object> getPtMaxXFromLine(ILineString line)", "full_signature": "public static Vector<Object> getPtMaxXFromLine(ILineString line)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getPtMaxXFromLine(ILineString line)", "testcase": false, "constructor": false}, {"identifier": "getPtMaxXFromPolygon", "parameters": "(IPolygon line)", "modifiers": "public static", "return": "Vector<Object>", "signature": "Vector<Object> getPtMaxXFromPolygon(IPolygon line)", "full_signature": "public static Vector<Object> getPtMaxXFromPolygon(IPolygon line)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getPtMaxXFromPolygon(IPolygon line)", "testcase": false, "constructor": false}, {"identifier": "getPtMaxDirFromLine", "parameters": "(ILineString line,\n      Angle theta)", "modifiers": "public static", "return": "IDirectPosition", "signature": "IDirectPosition getPtMaxDirFromLine(ILineString line,\n      Angle theta)", "full_signature": "public static IDirectPosition getPtMaxDirFromLine(ILineString line,\n      Angle theta)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getPtMaxDirFromLine(ILineString line,\n      Angle theta)", "testcase": false, "constructor": false}, {"identifier": "removeHoles", "parameters": "(IPolygon polygon)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon removeHoles(IPolygon polygon)", "full_signature": "public static IPolygon removeHoles(IPolygon polygon)", "class_method_signature": "CommonAlgorithmsFromCartAGen.removeHoles(IPolygon polygon)", "testcase": false, "constructor": false}, {"identifier": "removeSmallHoles", "parameters": "(IPolygon polygon, double area)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon removeSmallHoles(IPolygon polygon, double area)", "full_signature": "public static IPolygon removeSmallHoles(IPolygon polygon, double area)", "class_method_signature": "CommonAlgorithmsFromCartAGen.removeSmallHoles(IPolygon polygon, double area)", "testcase": false, "constructor": false}, {"identifier": "getLongestInsideSegment", "parameters": "(IPolygon polygon,\n      double orientation)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString getLongestInsideSegment(IPolygon polygon,\n      double orientation)", "full_signature": "public static ILineString getLongestInsideSegment(IPolygon polygon,\n      double orientation)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getLongestInsideSegment(IPolygon polygon,\n      double orientation)", "testcase": false, "constructor": false}, {"identifier": "getPolygonDiameter", "parameters": "(IPolygon polygon)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString getPolygonDiameter(IPolygon polygon)", "full_signature": "public static ILineString getPolygonDiameter(IPolygon polygon)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getPolygonDiameter(IPolygon polygon)", "testcase": false, "constructor": false}, {"identifier": "areLinesSameDirection", "parameters": "(ILineString line,\n      ILineString subLine)", "modifiers": "public static", "return": "boolean", "signature": "boolean areLinesSameDirection(ILineString line,\n      ILineString subLine)", "full_signature": "public static boolean areLinesSameDirection(ILineString line,\n      ILineString subLine)", "class_method_signature": "CommonAlgorithmsFromCartAGen.areLinesSameDirection(ILineString line,\n      ILineString subLine)", "testcase": false, "constructor": false}, {"identifier": "openRingAtIndex", "parameters": "(IRing ring, int index)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString openRingAtIndex(IRing ring, int index)", "full_signature": "public static ILineString openRingAtIndex(IRing ring, int index)", "class_method_signature": "CommonAlgorithmsFromCartAGen.openRingAtIndex(IRing ring, int index)", "testcase": false, "constructor": false}, {"identifier": "getSharpAngleVertices", "parameters": "(IPolygon polygon,\n      double maxAngle)", "modifiers": "public static", "return": "List<IDirectPosition>", "signature": "List<IDirectPosition> getSharpAngleVertices(IPolygon polygon,\n      double maxAngle)", "full_signature": "public static List<IDirectPosition> getSharpAngleVertices(IPolygon polygon,\n      double maxAngle)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getSharpAngleVertices(IPolygon polygon,\n      double maxAngle)", "testcase": false, "constructor": false}, {"identifier": "getMeanLine", "parameters": "(ILineString line1, ILineString line2)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString getMeanLine(ILineString line1, ILineString line2)", "full_signature": "public static ILineString getMeanLine(ILineString line1, ILineString line2)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getMeanLine(ILineString line1, ILineString line2)", "testcase": false, "constructor": false}, {"identifier": "getSelfIntersections", "parameters": "(ILineString line)", "modifiers": "public static", "return": "List<IDirectPosition>", "signature": "List<IDirectPosition> getSelfIntersections(ILineString line)", "full_signature": "public static List<IDirectPosition> getSelfIntersections(ILineString line)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getSelfIntersections(ILineString line)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicates", "parameters": "(ILineString line)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString removeDuplicates(ILineString line)", "full_signature": "public static ILineString removeDuplicates(ILineString line)", "class_method_signature": "CommonAlgorithmsFromCartAGen.removeDuplicates(ILineString line)", "testcase": false, "constructor": false}], "file": "geoxygene-spatial/src/main/java/fr/ign/cogit/geoxygene/util/algo/geometricAlgorithms/CommonAlgorithmsFromCartAGen.java"}, "focal_method": {"identifier": "getSelfIntersections", "parameters": "(ILineString line)", "modifiers": "public static", "return": "List<IDirectPosition>", "body": "public static List<IDirectPosition> getSelfIntersections(ILineString line) {\n    List<IDirectPosition> selfIntersections = new ArrayList<>();\n    List<Segment> segments = Segment.getSegmentList(line);\n    Set<Segment> remainingSegments = new HashSet<>(segments);\n\n    for (int i = 0; i < segments.size(); i++) {\n      Segment segment = segments.get(i);\n      remainingSegments.remove(segment);\n      Set<Segment> toTest = new HashSet<>(remainingSegments);\n      // remove the next segment\n      if (i < segments.size() - 1)\n        toTest.remove(segments.get(i + 1));\n      for (Segment other : toTest) {\n        if (segment.intersects(other)) {\n          if (!selfIntersections\n              .contains(segment.intersection(other).centroid()))\n            selfIntersections.add(segment.intersection(other).centroid());\n        }\n      }\n    }\n    return selfIntersections;\n  }", "signature": "List<IDirectPosition> getSelfIntersections(ILineString line)", "full_signature": "public static List<IDirectPosition> getSelfIntersections(ILineString line)", "class_method_signature": "CommonAlgorithmsFromCartAGen.getSelfIntersections(ILineString line)", "testcase": false, "constructor": false, "invocations": ["getSegmentList", "size", "get", "remove", "size", "remove", "get", "intersects", "contains", "centroid", "intersection", "add", "centroid", "intersection"]}, "repository": {"repo_id": 56582318, "url": "https://github.com/IGNF/geoxygene", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 22, "size": 323511, "license": "licensed"}}