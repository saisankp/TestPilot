{"test_class": {"identifier": "NodeTypeResourceTest", "superclass": "extends AbstractResourceTest", "interfaces": "", "fields": [], "file": "org.eclipse.winery.repository.rest/src/test/java/org/eclipse/winery/repository/rest/resources/entitytypes/nodetypes/NodeTypeResourceTest.java"}, "test_case": {"identifier": "baobabInitialExistsUsingResource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void baobabInitialExistsUsingResource() throws Exception {\n        this.setRevisionTo(\"5b5ad1106a3a428020b6bc5d2f154841acb5f779\"); // repository containing boabab fruit only\n        NodeTypeResource nodeTypeResource = (NodeTypeResource) NodeTypesResource.getComponentInstanceResource(TestIds.ID_FRUIT_BAOBAB);\n        String testXml = BackendUtils.getXMLAsString(nodeTypeResource.getNodeType());\n        String controlXml = readFromClasspath(\"entitytypes/nodetypes/baobab_initial.xml\");\n        org.hamcrest.MatcherAssert.assertThat(testXml, CompareMatcher.isIdenticalTo(controlXml).ignoreWhitespace());\n    }", "signature": "void baobabInitialExistsUsingResource()", "full_signature": "@Test public void baobabInitialExistsUsingResource()", "class_method_signature": "NodeTypeResourceTest.baobabInitialExistsUsingResource()", "testcase": true, "constructor": false, "invocations": ["setRevisionTo", "getComponentInstanceResource", "getXMLAsString", "getNodeType", "readFromClasspath", "assertThat", "ignoreWhitespace", "isIdenticalTo"]}, "focal_class": {"identifier": "NodeTypeResource", "superclass": "extends TopologyGraphElementEntityTypeResource", "interfaces": "", "fields": [], "methods": [{"identifier": "NodeTypeResource", "parameters": "(NodeTypeId id)", "modifiers": "public", "return": "", "signature": " NodeTypeResource(NodeTypeId id)", "full_signature": "public  NodeTypeResource(NodeTypeId id)", "class_method_signature": "NodeTypeResource.NodeTypeResource(NodeTypeId id)", "testcase": false, "constructor": true}, {"identifier": "getNodeType", "parameters": "()", "modifiers": "public", "return": "TNodeType", "signature": "TNodeType getNodeType()", "full_signature": "public TNodeType getNodeType()", "class_method_signature": "NodeTypeResource.getNodeType()", "testcase": false, "constructor": false}, {"identifier": "getImplementations", "parameters": "()", "modifiers": "@GET @Path(\"implementations/\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<QNameApiData>", "signature": "List<QNameApiData> getImplementations()", "full_signature": "@GET @Path(\"implementations/\") @Produces(MediaType.APPLICATION_JSON) public List<QNameApiData> getImplementations()", "class_method_signature": "NodeTypeResource.getImplementations()", "testcase": false, "constructor": false}, {"identifier": "getInstanceStatesResource", "parameters": "()", "modifiers": "@Path(\"instancestates/\") public", "return": "InstanceStatesResource", "signature": "InstanceStatesResource getInstanceStatesResource()", "full_signature": "@Path(\"instancestates/\") public InstanceStatesResource getInstanceStatesResource()", "class_method_signature": "NodeTypeResource.getInstanceStatesResource()", "testcase": false, "constructor": false}, {"identifier": "getInterfaces", "parameters": "()", "modifiers": "@Path(\"interfaces/\") public", "return": "InterfacesResource", "signature": "InterfacesResource getInterfaces()", "full_signature": "@Path(\"interfaces/\") public InterfacesResource getInterfaces()", "class_method_signature": "NodeTypeResource.getInterfaces()", "testcase": false, "constructor": false}, {"identifier": "getRequirementDefinitions", "parameters": "()", "modifiers": "@Path(\"requirementdefinitions/\") public", "return": "RequirementDefinitionsResource", "signature": "RequirementDefinitionsResource getRequirementDefinitions()", "full_signature": "@Path(\"requirementdefinitions/\") public RequirementDefinitionsResource getRequirementDefinitions()", "class_method_signature": "NodeTypeResource.getRequirementDefinitions()", "testcase": false, "constructor": false}, {"identifier": "getCapabilityDefinitions", "parameters": "()", "modifiers": "@Path(\"capabilitydefinitions/\") public", "return": "CapabilityDefinitionsResource", "signature": "CapabilityDefinitionsResource getCapabilityDefinitions()", "full_signature": "@Path(\"capabilitydefinitions/\") public CapabilityDefinitionsResource getCapabilityDefinitions()", "class_method_signature": "NodeTypeResource.getCapabilityDefinitions()", "testcase": false, "constructor": false}, {"identifier": "getVisualAppearanceResource", "parameters": "()", "modifiers": "@Path(\"appearance\") public", "return": "VisualAppearanceResource", "signature": "VisualAppearanceResource getVisualAppearanceResource()", "full_signature": "@Path(\"appearance\") public VisualAppearanceResource getVisualAppearanceResource()", "class_method_signature": "NodeTypeResource.getVisualAppearanceResource()", "testcase": false, "constructor": false}, {"identifier": "InterfaceDefinitionsResource", "parameters": "()", "modifiers": "@Path(\"interfacedefinitions\") public", "return": "InterfaceDefinitionsResource", "signature": "InterfaceDefinitionsResource InterfaceDefinitionsResource()", "full_signature": "@Path(\"interfacedefinitions\") public InterfaceDefinitionsResource InterfaceDefinitionsResource()", "class_method_signature": "NodeTypeResource.InterfaceDefinitionsResource()", "testcase": false, "constructor": false}, {"identifier": "getArtifacts", "parameters": "()", "modifiers": "@GET @Path(\"artifacts/\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<TArtifact>", "signature": "List<TArtifact> getArtifacts()", "full_signature": "@GET @Path(\"artifacts/\") @Produces(MediaType.APPLICATION_JSON) public List<TArtifact> getArtifacts()", "class_method_signature": "NodeTypeResource.getArtifacts()", "testcase": false, "constructor": false}, {"identifier": "addArtifact", "parameters": "(TArtifact artifact)", "modifiers": "@POST @Path(\"artifacts/\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response addArtifact(TArtifact artifact)", "full_signature": "@POST @Path(\"artifacts/\") @Consumes(MediaType.APPLICATION_JSON) public Response addArtifact(TArtifact artifact)", "class_method_signature": "NodeTypeResource.addArtifact(TArtifact artifact)", "testcase": false, "constructor": false}, {"identifier": "deleteArtifact", "parameters": "(@PathParam(\"name\") String name)", "modifiers": "@DELETE @Path(\"artifacts/f/{name}\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response deleteArtifact(@PathParam(\"name\") String name)", "full_signature": "@DELETE @Path(\"artifacts/f/{name}\") @Consumes(MediaType.APPLICATION_JSON) public Response deleteArtifact(@PathParam(\"name\") String name)", "class_method_signature": "NodeTypeResource.deleteArtifact(@PathParam(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "uploadArtifact", "parameters": "(@PathParam(\"name\") String name)", "modifiers": "@Path(\"artifacts/{name}\") public", "return": "GenericFileResource", "signature": "GenericFileResource uploadArtifact(@PathParam(\"name\") String name)", "full_signature": "@Path(\"artifacts/{name}\") public GenericFileResource uploadArtifact(@PathParam(\"name\") String name)", "class_method_signature": "NodeTypeResource.uploadArtifact(@PathParam(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "createNewElement", "parameters": "()", "modifiers": "@Override protected", "return": "TExtensibleElements", "signature": "TExtensibleElements createNewElement()", "full_signature": "@Override protected TExtensibleElements createNewElement()", "class_method_signature": "NodeTypeResource.createNewElement()", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.repository.rest/src/main/java/org/eclipse/winery/repository/rest/resources/entitytypes/nodetypes/NodeTypeResource.java"}, "focal_method": {"identifier": "getNodeType", "parameters": "()", "modifiers": "public", "return": "TNodeType", "body": "public TNodeType getNodeType() {\n        return (TNodeType) this.getElement();\n    }", "signature": "TNodeType getNodeType()", "full_signature": "public TNodeType getNodeType()", "class_method_signature": "NodeTypeResource.getNodeType()", "testcase": false, "constructor": false, "invocations": ["getElement"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}