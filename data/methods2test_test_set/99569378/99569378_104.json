{"test_class": {"identifier": "MessageBaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ActorInvokeException mException;", "modifier": "@Mock\n    private", "type": "ActorInvokeException", "declarator": "mException", "var_name": "mException"}, {"original_string": "@Mock\n    private Promise<Object> mPromise;", "modifier": "@Mock\n    private", "type": "Promise<Object>", "declarator": "mPromise", "var_name": "mPromise"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/MessageBaseTest.java"}, "test_case": {"identifier": "logParam_value_notEmptyCharSequenceNoSecurityLevel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void logParam_value_notEmptyCharSequenceNoSecurityLevel() {\n        StringBuilder value = new StringBuilder(\"Test string\");\n        Assert.assertEquals(\"'Test string'\", MessageBase.logParam(value, SecureParameter.LEVEL_FULL_INFO));\n    }", "signature": "void logParam_value_notEmptyCharSequenceNoSecurityLevel()", "full_signature": "@Test public void logParam_value_notEmptyCharSequenceNoSecurityLevel()", "class_method_signature": "MessageBaseTest.logParam_value_notEmptyCharSequenceNoSecurityLevel()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "logParam"]}, "focal_class": {"identifier": "MessageBase", "superclass": "", "interfaces": "implements Message<T, R>", "fields": [{"original_string": "@NonNull\n    /* package */ ActorInvokeException mExceptionTemplate;", "modifier": "@NonNull", "type": "ActorInvokeException", "declarator": "mExceptionTemplate", "var_name": "mExceptionTemplate"}], "methods": [{"identifier": "MessageBase", "parameters": "(@NonNull ActorInvokeException exception)", "modifiers": "protected", "return": "", "signature": " MessageBase(@NonNull ActorInvokeException exception)", "full_signature": "protected  MessageBase(@NonNull ActorInvokeException exception)", "class_method_signature": "MessageBase.MessageBase(@NonNull ActorInvokeException exception)", "testcase": false, "constructor": true}, {"identifier": "verifyResult", "parameters": "(Promise<R> result)", "modifiers": "protected", "return": "Promise<R>", "signature": "Promise<R> verifyResult(Promise<R> result)", "full_signature": "protected Promise<R> verifyResult(Promise<R> result)", "class_method_signature": "MessageBase.verifyResult(Promise<R> result)", "testcase": false, "constructor": false}, {"identifier": "exception", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "ActorInvokeException", "signature": "ActorInvokeException exception()", "full_signature": "@NonNull @Override public ActorInvokeException exception()", "class_method_signature": "MessageBase.exception()", "testcase": false, "constructor": false}, {"identifier": "logParam", "parameters": "(Object parameter, int level)", "modifiers": "@NonNull protected static", "return": "String", "signature": "String logParam(Object parameter, int level)", "full_signature": "@NonNull protected static String logParam(Object parameter, int level)", "class_method_signature": "MessageBase.logParam(Object parameter, int level)", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/MessageBase.java"}, "focal_method": {"identifier": "logParam", "parameters": "(Object parameter, int level)", "modifiers": "@NonNull protected static", "return": "String", "body": "@NonNull\n    protected static String logParam(Object parameter, int level) {\n        if (level == SecureParameter.LEVEL_NO_INFO) {\n            return \"<value>\";\n        }\n\n        if (parameter == null) {\n            return \"null\";\n        }\n\n        if (parameter instanceof CharSequence) {\n            if (TextUtils.isEmpty((CharSequence) parameter)) {\n                return \"''\";\n            }\n\n            if (level == SecureParameter.LEVEL_NULL_OR_EMPTY_STRING) {\n                return \"<not empty string>\";\n            }\n\n            return \"'\" + parameter + \"'\";\n        }\n\n        if (level != SecureParameter.LEVEL_FULL_INFO) {\n            return \"<not null value>\";\n        }\n\n        return String.valueOf(parameter);\n    }", "signature": "String logParam(Object parameter, int level)", "full_signature": "@NonNull protected static String logParam(Object parameter, int level)", "class_method_signature": "MessageBase.logParam(Object parameter, int level)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "valueOf"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}