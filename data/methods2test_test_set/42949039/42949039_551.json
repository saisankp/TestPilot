{"test_class": {"identifier": "SubjectMatterExpertServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private SubjectMatterExpertDao subjectMatterExpertDao;", "modifier": "@Mock\n    private", "type": "SubjectMatterExpertDao", "declarator": "subjectMatterExpertDao", "var_name": "subjectMatterExpertDao"}, {"original_string": "@InjectMocks\n    private SubjectMatterExpertServiceImpl subjectMatterExpertServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "SubjectMatterExpertServiceImpl", "declarator": "subjectMatterExpertServiceImpl", "var_name": "subjectMatterExpertServiceImpl"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/SubjectMatterExpertServiceImplTest.java"}, "test_case": {"identifier": "testGetSubjectMatterExpertMissingSubjectMatterExpertKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSubjectMatterExpertMissingSubjectMatterExpertKey()\n    {\n        // Specify the expected exception.\n        expectedException.expect(IllegalArgumentException.class);\n        expectedException.expectMessage(\"A subject matter expert key must be specified.\");\n\n        // Try to call the method under test.\n        subjectMatterExpertServiceImpl.getSubjectMatterExpert(null);\n\n        // Verify the external calls.\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetSubjectMatterExpertMissingSubjectMatterExpertKey()", "full_signature": "@Test public void testGetSubjectMatterExpertMissingSubjectMatterExpertKey()", "class_method_signature": "SubjectMatterExpertServiceImplTest.testGetSubjectMatterExpertMissingSubjectMatterExpertKey()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "getSubjectMatterExpert", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "SubjectMatterExpertServiceImpl", "superclass": "", "interfaces": "implements SubjectMatterExpertService", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private SubjectMatterExpertDao subjectMatterExpertDao;", "modifier": "@Autowired\n    private", "type": "SubjectMatterExpertDao", "declarator": "subjectMatterExpertDao", "var_name": "subjectMatterExpertDao"}], "methods": [{"identifier": "getSubjectMatterExpert", "parameters": "(SubjectMatterExpertKey subjectMatterExpertKey)", "modifiers": "@Override public", "return": "SubjectMatterExpert", "signature": "SubjectMatterExpert getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "full_signature": "@Override public SubjectMatterExpert getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "class_method_signature": "SubjectMatterExpertServiceImpl.getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "testcase": false, "constructor": false}, {"identifier": "validateSubjectMatterExpertKey", "parameters": "(SubjectMatterExpertKey key)", "modifiers": "private", "return": "void", "signature": "void validateSubjectMatterExpertKey(SubjectMatterExpertKey key)", "full_signature": "private void validateSubjectMatterExpertKey(SubjectMatterExpertKey key)", "class_method_signature": "SubjectMatterExpertServiceImpl.validateSubjectMatterExpertKey(SubjectMatterExpertKey key)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/SubjectMatterExpertServiceImpl.java"}, "focal_method": {"identifier": "getSubjectMatterExpert", "parameters": "(SubjectMatterExpertKey subjectMatterExpertKey)", "modifiers": "@Override public", "return": "SubjectMatterExpert", "body": "@Override\n    public SubjectMatterExpert getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)\n    {\n        // Validate and trim the subject matter expert key.\n        validateSubjectMatterExpertKey(subjectMatterExpertKey);\n\n        // Get the information for the subject matter expert.\n        SubjectMatterExpertContactDetails subjectMatterExpertContactDetails = subjectMatterExpertDao.getSubjectMatterExpertByKey(subjectMatterExpertKey);\n        if (subjectMatterExpertContactDetails == null)\n        {\n            throw new ObjectNotFoundException(\n                String.format(\"The subject matter expert with user id \\\"%s\\\" does not exist.\", subjectMatterExpertKey.getUserId()));\n        }\n\n        // Create and return the subject matter expert.\n        return new SubjectMatterExpert(subjectMatterExpertKey, subjectMatterExpertContactDetails);\n    }", "signature": "SubjectMatterExpert getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "full_signature": "@Override public SubjectMatterExpert getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "class_method_signature": "SubjectMatterExpertServiceImpl.getSubjectMatterExpert(SubjectMatterExpertKey subjectMatterExpertKey)", "testcase": false, "constructor": false, "invocations": ["validateSubjectMatterExpertKey", "getSubjectMatterExpertByKey", "format", "getUserId"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}