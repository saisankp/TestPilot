{"test_class": {"identifier": "ExcelFileDefaultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ExcelFileDefaultTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ExcelFileDefaultTest.class)", "var_name": "logger"}], "file": "persistence/src/test/java/org/devgateway/toolkit/persistence/excel/ExcelFileDefaultTest.java"}, "test_case": {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createWorkbook() throws Exception {\n        final ExcelFile excelFile = new ExcelFileDefault(createObjects(), new TestTranslateService());\n        final Workbook workbook = excelFile.createWorkbook();\n\n        // try (FileOutputStream outputStream = new FileOutputStream(\"/Users/ionut/Downloads/file-export.xlsx\")) {\n        //     workbook.write(outputStream);\n        // }\n\n        Assert.assertEquals(\"Number of sheets\", 3, workbook.getNumberOfSheets());\n\n        Assert.assertNotNull(\"buyer sheet\", workbook.getSheet(\"testbuyer\"));\n        Assert.assertNotNull(\"contract sheet\", workbook.getSheet(\"testcontract\"));\n        Assert.assertNotNull(\"document sheet\", workbook.getSheet(\"testdocument\"));\n\n        Assert.assertEquals(\"buyer name\", \"buyer 1\",\n                workbook.getSheet(\"testbuyer\").getRow(1).getCell(0).toString());\n        Assert.assertEquals(\"buyer classification\", \"TP-1 - alii aliquam\",\n                workbook.getSheet(\"testbuyer\").getRow(2).getCell(8).toString());\n\n        Assert.assertEquals(\"contract parent\", \"testbuyer - 1\",\n                workbook.getSheet(\"testcontract\").getRow(1).getCell(0).toString());\n        Assert.assertEquals(\"contract amount\", 1000,\n                workbook.getSheet(\"testcontract\").getRow(1).getCell(2).getNumericCellValue(), 0.0);\n\n\n        Assert.assertEquals(\"document number of rows\", 2, workbook.getSheet(\"testdocument\").getLastRowNum());\n\n        Assert.assertEquals(\"buyer address flatten\", \"Street 1 | Street 2\",\n                workbook.getSheet(\"testbuyer\").getRow(1).getCell(4).toString());\n    }", "signature": "void createWorkbook()", "full_signature": "@Test public void createWorkbook()", "class_method_signature": "ExcelFileDefaultTest.createWorkbook()", "testcase": true, "constructor": false, "invocations": ["createObjects", "createWorkbook", "assertEquals", "getNumberOfSheets", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertNotNull", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet", "assertEquals", "getNumericCellValue", "getCell", "getRow", "getSheet", "assertEquals", "getLastRowNum", "getSheet", "assertEquals", "toString", "getCell", "getRow", "getSheet"]}, "focal_class": {"identifier": "ExcelFileDefault", "superclass": "", "interfaces": "implements ExcelFile", "fields": [{"original_string": "private final List<Object> objects;", "modifier": "private final", "type": "List<Object>", "declarator": "objects", "var_name": "objects"}, {"original_string": "private final Workbook workbook;", "modifier": "private final", "type": "Workbook", "declarator": "workbook", "var_name": "workbook"}, {"original_string": "private final TranslateService translateService;", "modifier": "private final", "type": "TranslateService", "declarator": "translateService", "var_name": "translateService"}], "methods": [{"identifier": "ExcelFileDefault", "parameters": "(final List<Object> objects, final TranslateService translateService)", "modifiers": "public", "return": "", "signature": " ExcelFileDefault(final List<Object> objects, final TranslateService translateService)", "full_signature": "public  ExcelFileDefault(final List<Object> objects, final TranslateService translateService)", "class_method_signature": "ExcelFileDefault.ExcelFileDefault(final List<Object> objects, final TranslateService translateService)", "testcase": false, "constructor": true}, {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Override public", "return": "Workbook", "signature": "Workbook createWorkbook()", "full_signature": "@Override public Workbook createWorkbook()", "class_method_signature": "ExcelFileDefault.createWorkbook()", "testcase": false, "constructor": false}], "file": "persistence/src/main/java/org/devgateway/toolkit/persistence/excel/ExcelFileDefault.java"}, "focal_method": {"identifier": "createWorkbook", "parameters": "()", "modifiers": "@Override public", "return": "Workbook", "body": "@Override\n    public Workbook createWorkbook() {\n        // don't do anything if the list of objects is empty, just display the error message.\n        if (objects.isEmpty()) {\n            final ExcelSheet excelSheet = new ExcelSheetDefault(this.workbook, this.translateService, \"no data\");\n            excelSheet.emptySheet();\n        } else {\n            final Class clazz = this.objects.get(0).getClass();\n            final ExcelSheet excelSheet = new ExcelSheetDefault(this.workbook, this.translateService,\n                    clazz.getSimpleName().toLowerCase());\n            excelSheet.writeSheet(clazz, objects);\n        }\n\n        return workbook;\n    }", "signature": "Workbook createWorkbook()", "full_signature": "@Override public Workbook createWorkbook()", "class_method_signature": "ExcelFileDefault.createWorkbook()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "emptySheet", "getClass", "get", "toLowerCase", "getSimpleName", "writeSheet"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}