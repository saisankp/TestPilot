{"test_class": {"identifier": "ApacheMultiPartTest", "superclass": "", "interfaces": "", "fields": [], "file": "upload/apache/src/test/java/cloud/piranha/upload/apache/ApacheMultiPartTest.java"}, "test_case": {"identifier": "testDelete", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testDelete() throws Exception {\n        File file = new File(\"delete.me\");\n        file.createNewFile();\n        assertTrue(file.exists());\n        FileItem item = new DiskFileItem(\"fieldName\", \"text/html\", false,\n                \"delete.me\", 0, file);\n        ApacheMultiPart part = new ApacheMultiPart(item);\n        part.delete();\n        file.delete();\n    }", "signature": "void testDelete()", "full_signature": "@Test void testDelete()", "class_method_signature": "ApacheMultiPartTest.testDelete()", "testcase": true, "constructor": false, "invocations": ["createNewFile", "assertTrue", "exists", "delete", "delete"]}, "focal_class": {"identifier": "ApacheMultiPart", "superclass": "", "interfaces": "implements Part", "fields": [{"original_string": "private final FileItem item;", "modifier": "private final", "type": "FileItem", "declarator": "item", "var_name": "item"}], "methods": [{"identifier": "ApacheMultiPart", "parameters": "(FileItem item)", "modifiers": "public", "return": "", "signature": " ApacheMultiPart(FileItem item)", "full_signature": "public  ApacheMultiPart(FileItem item)", "class_method_signature": "ApacheMultiPart.ApacheMultiPart(FileItem item)", "testcase": false, "constructor": true}, {"identifier": "delete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void delete()", "full_signature": "@Override public void delete()", "class_method_signature": "ApacheMultiPart.delete()", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContentType()", "full_signature": "@Override public String getContentType()", "class_method_signature": "ApacheMultiPart.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeader(String name)", "full_signature": "@Override public String getHeader(String name)", "class_method_signature": "ApacheMultiPart.getHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getHeaderNames()", "full_signature": "@Override public Collection<String> getHeaderNames()", "class_method_signature": "ApacheMultiPart.getHeaderNames()", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getHeaders(String name)", "full_signature": "@Override public Collection<String> getHeaders(String name)", "class_method_signature": "ApacheMultiPart.getHeaders(String name)", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getInputStream()", "full_signature": "@Override public InputStream getInputStream()", "class_method_signature": "ApacheMultiPart.getInputStream()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ApacheMultiPart.getName()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSize()", "full_signature": "@Override public long getSize()", "class_method_signature": "ApacheMultiPart.getSize()", "testcase": false, "constructor": false}, {"identifier": "getSubmittedFileName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSubmittedFileName()", "full_signature": "@Override public String getSubmittedFileName()", "class_method_signature": "ApacheMultiPart.getSubmittedFileName()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String filename)", "modifiers": "@Override public", "return": "void", "signature": "void write(String filename)", "full_signature": "@Override public void write(String filename)", "class_method_signature": "ApacheMultiPart.write(String filename)", "testcase": false, "constructor": false}], "file": "upload/apache/src/main/java/cloud/piranha/upload/apache/ApacheMultiPart.java"}, "focal_method": {"identifier": "delete", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void delete() throws IOException {\n        item.delete();\n    }", "signature": "void delete()", "full_signature": "@Override public void delete()", "class_method_signature": "ApacheMultiPart.delete()", "testcase": false, "constructor": false, "invocations": ["delete"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}