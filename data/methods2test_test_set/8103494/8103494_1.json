{"test_class": {"identifier": "TeamCityRestRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MavenGithub github;", "modifier": "private", "type": "MavenGithub", "declarator": "github", "var_name": "github"}], "file": "Github-Tools/src/test/java/com/arcbees/teamcity/TeamCityRestRequestTest.java"}, "test_case": {"identifier": "testRestRequestSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRestRequestSuccess() throws IOException {\n        String serverUrl = \"http://teamcity.gonevertical.org\";\n        String username = github.getUsername();\n        String password = github.getPassword();\n        int buildId = 299;\n        \n        TeamCityRestRequest rest = new TeamCityRestRequest(serverUrl, username, password);\n        Build build = rest.fetchBuildStatus(buildId);\n        \n        Assert.assertNotNull(build);\n        Assert.assertTrue(build.getStatus().contains(\"SUCC\"));\n    }", "signature": "void testRestRequestSuccess()", "full_signature": "@Test public void testRestRequestSuccess()", "class_method_signature": "TeamCityRestRequestTest.testRestRequestSuccess()", "testcase": true, "constructor": false, "invocations": ["getUsername", "getPassword", "fetchBuildStatus", "assertNotNull", "assertTrue", "contains", "getStatus"]}, "focal_class": {"identifier": "TeamCityRestRequest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String PATH_BUILD = \"/httpAuth/app/rest/builds/id:\";", "modifier": "private static", "type": "String", "declarator": "PATH_BUILD = \"/httpAuth/app/rest/builds/id:\"", "var_name": "PATH_BUILD"}, {"original_string": "private final String buildServerUrl;", "modifier": "private final", "type": "String", "declarator": "buildServerUrl", "var_name": "buildServerUrl"}, {"original_string": "private final String username;", "modifier": "private final", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private final String password;", "modifier": "private final", "type": "String", "declarator": "password", "var_name": "password"}], "methods": [{"identifier": "TeamCityRestRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " TeamCityRestRequest()", "full_signature": "@SuppressWarnings(\"unused\") private  TeamCityRestRequest()", "class_method_signature": "TeamCityRestRequest.TeamCityRestRequest()", "testcase": false, "constructor": true}, {"identifier": "TeamCityRestRequest", "parameters": "(String buildServerUrl, String buildServerUsername, String buildServerPassword)", "modifiers": "public", "return": "", "signature": " TeamCityRestRequest(String buildServerUrl, String buildServerUsername, String buildServerPassword)", "full_signature": "public  TeamCityRestRequest(String buildServerUrl, String buildServerUsername, String buildServerPassword)", "class_method_signature": "TeamCityRestRequest.TeamCityRestRequest(String buildServerUrl, String buildServerUsername, String buildServerPassword)", "testcase": false, "constructor": true}, {"identifier": "fetchBuildStatus", "parameters": "(int buildId)", "modifiers": "public", "return": "Build", "signature": "Build fetchBuildStatus(int buildId)", "full_signature": "public Build fetchBuildStatus(int buildId)", "class_method_signature": "TeamCityRestRequest.fetchBuildStatus(int buildId)", "testcase": false, "constructor": false}], "file": "Github-Tools/src/main/java/com/arcbees/teamcity/TeamCityRestRequest.java"}, "focal_method": {"identifier": "fetchBuildStatus", "parameters": "(int buildId)", "modifiers": "public", "return": "Build", "body": "public Build fetchBuildStatus(int buildId) throws IOException {        \n        String urlEndpoint = buildServerUrl + PATH_BUILD + Integer.toString(buildId);\n        \n        JsonElement json = RestRequest.fetchJson(username, password, urlEndpoint);\n        \n        System.out.println(\"Rest Response: \" + json.toString());\n        \n        Gson gson = new Gson();\n        \n        return gson.fromJson(json, Build.class);\n    }", "signature": "Build fetchBuildStatus(int buildId)", "full_signature": "public Build fetchBuildStatus(int buildId)", "class_method_signature": "TeamCityRestRequest.fetchBuildStatus(int buildId)", "testcase": false, "constructor": false, "invocations": ["toString", "fetchJson", "println", "toString", "fromJson"]}, "repository": {"repo_id": 8103494, "url": "https://github.com/ArcBees/GitHub-Tools", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 7, "size": 287, "license": "licensed"}}