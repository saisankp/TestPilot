{"test_class": {"identifier": "JspExpressionFactoryFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-el/src/test/java/org/apache/tiles/el/JspExpressionFactoryFactoryTest.java"}, "test_case": {"identifier": "testSetApplicationContextIllegal", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testSetApplicationContextIllegal() {\n        ApplicationContext applicationContext = createMock(ApplicationContext.class);\n        Integer servletContext = new Integer(1);\n\n        expect(applicationContext.getContext()).andReturn(servletContext);\n\n        replay(applicationContext);\n        try {\n            JspExpressionFactoryFactory factory = new JspExpressionFactoryFactory();\n            factory.setApplicationContext(applicationContext);\n        } finally {\n            verify(applicationContext);\n        }\n    }", "signature": "void testSetApplicationContextIllegal()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testSetApplicationContextIllegal()", "class_method_signature": "JspExpressionFactoryFactoryTest.testSetApplicationContextIllegal()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "getContext", "replay", "setApplicationContext", "verify"]}, "focal_class": {"identifier": "JspExpressionFactoryFactory", "superclass": "", "interfaces": "implements ExpressionFactoryFactory,\n        ApplicationContextAware", "fields": [{"original_string": "protected ServletContext servletContext;", "modifier": "protected", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}], "methods": [{"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public", "return": "void", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "JspExpressionFactoryFactory.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "getExpressionFactory", "parameters": "()", "modifiers": "public", "return": "ExpressionFactory", "signature": "ExpressionFactory getExpressionFactory()", "full_signature": "public ExpressionFactory getExpressionFactory()", "class_method_signature": "JspExpressionFactoryFactory.getExpressionFactory()", "testcase": false, "constructor": false}], "file": "tiles-el/src/main/java/org/apache/tiles/el/JspExpressionFactoryFactory.java"}, "focal_method": {"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public", "return": "void", "body": "public void setApplicationContext(ApplicationContext applicationContext) {\n        Object context = applicationContext.getContext();\n        if (context instanceof ServletContext) {\n            this.servletContext = (ServletContext) context;\n        } else {\n            throw new IllegalArgumentException(\n                    \"The application context does not hold an instance of \"\n                    + \"ServletContext, consider using JuelExpressionFactoryFactory\");\n        }\n    }", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "JspExpressionFactoryFactory.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false, "invocations": ["getContext"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}