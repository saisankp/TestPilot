{"test_class": {"identifier": "BrainKeyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final String TEST_BRAINKEY = \"BARIC BICKERN LITZ TIPFUL JINGLED POOL TUMBAK PURIST APOPYLE DURAIN SATLIJK FAUCAL\";", "modifier": "public final", "type": "String", "declarator": "TEST_BRAINKEY = \"BARIC BICKERN LITZ TIPFUL JINGLED POOL TUMBAK PURIST APOPYLE DURAIN SATLIJK FAUCAL\"", "var_name": "TEST_BRAINKEY"}, {"original_string": "private BrainKey mBrainKey;", "modifier": "private", "type": "BrainKey", "declarator": "mBrainKey", "var_name": "mBrainKey"}], "file": "src/main/java/com/gxchain/client/graphenej/BrainKeyTest.java"}, "test_case": {"identifier": "testAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddress(){\n        Address address = mBrainKey.getPublicAddress(Address.BITSHARES_PREFIX);\n        Assert.assertEquals(\"Assert that the address created is the expected one\",\n                \"BTS61UqqgE3ARuTGcckzARsdQm4EMFdBEwYyi1pbwyHrZZWrCDhT2\",\n                address.toString());\n    }", "signature": "void testAddress()", "full_signature": "@Test public void testAddress()", "class_method_signature": "BrainKeyTest.testAddress()", "testcase": true, "constructor": false, "invocations": ["getPublicAddress", "assertEquals", "toString"]}, "focal_class": {"identifier": "BrainKey", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(BrainKey.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(BrainKey.class)", "var_name": "LOGGER"}, {"original_string": "public static final int DICT_WORD_COUNT = 49744;", "modifier": "public static final", "type": "int", "declarator": "DICT_WORD_COUNT = 49744", "var_name": "DICT_WORD_COUNT"}, {"original_string": "public static final int BRAINKEY_WORD_COUNT = 12;", "modifier": "public static final", "type": "int", "declarator": "BRAINKEY_WORD_COUNT = 12", "var_name": "BRAINKEY_WORD_COUNT"}, {"original_string": "public static final int DEFAULT_SEQUENCE_NUMBER = 0;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SEQUENCE_NUMBER = 0", "var_name": "DEFAULT_SEQUENCE_NUMBER"}, {"original_string": "private ECKey mPrivateKey;", "modifier": "private", "type": "ECKey", "declarator": "mPrivateKey", "var_name": "mPrivateKey"}, {"original_string": "private String mBrainKey;", "modifier": "private", "type": "String", "declarator": "mBrainKey", "var_name": "mBrainKey"}, {"original_string": "private int sequenceNumber;", "modifier": "private", "type": "int", "declarator": "sequenceNumber", "var_name": "sequenceNumber"}], "methods": [{"identifier": "suggest", "parameters": "(String words)", "modifiers": "public static", "return": "String", "signature": "String suggest(String words)", "full_signature": "public static String suggest(String words)", "class_method_signature": "BrainKey.suggest(String words)", "testcase": false, "constructor": false}, {"identifier": "BrainKey", "parameters": "(String words, int sequence)", "modifiers": "public", "return": "", "signature": " BrainKey(String words, int sequence)", "full_signature": "public  BrainKey(String words, int sequence)", "class_method_signature": "BrainKey.BrainKey(String words, int sequence)", "testcase": false, "constructor": true}, {"identifier": "getPublicKey", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getPublicKey()", "full_signature": "public byte[] getPublicKey()", "class_method_signature": "BrainKey.getPublicKey()", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "()", "modifiers": "public", "return": "ECKey", "signature": "ECKey getPrivateKey()", "full_signature": "public ECKey getPrivateKey()", "class_method_signature": "BrainKey.getPrivateKey()", "testcase": false, "constructor": false}, {"identifier": "getWalletImportFormat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWalletImportFormat()", "full_signature": "public String getWalletImportFormat()", "class_method_signature": "BrainKey.getWalletImportFormat()", "testcase": false, "constructor": false}, {"identifier": "getPublicAddress", "parameters": "(String prefix)", "modifiers": "public", "return": "Address", "signature": "Address getPublicAddress(String prefix)", "full_signature": "public Address getPublicAddress(String prefix)", "class_method_signature": "BrainKey.getPublicAddress(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getBrainKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBrainKey()", "full_signature": "public String getBrainKey()", "class_method_signature": "BrainKey.getBrainKey()", "testcase": false, "constructor": false}, {"identifier": "getSequenceNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSequenceNumber()", "full_signature": "public int getSequenceNumber()", "class_method_signature": "BrainKey.getSequenceNumber()", "testcase": false, "constructor": false}], "file": "src/main/java/com/gxchain/client/graphenej/BrainKey.java"}, "focal_method": {"identifier": "getPublicAddress", "parameters": "(String prefix)", "modifiers": "public", "return": "Address", "body": "public Address getPublicAddress(String prefix){\n        return new Address(ECKey.fromPublicOnly(getPublicKey()), prefix);\n    }", "signature": "Address getPublicAddress(String prefix)", "full_signature": "public Address getPublicAddress(String prefix)", "class_method_signature": "BrainKey.getPublicAddress(String prefix)", "testcase": false, "constructor": false, "invocations": ["fromPublicOnly", "getPublicKey"]}, "repository": {"repo_id": 140260316, "url": "https://github.com/gxchain/gxclient-java", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 11, "size": 457, "license": "licensed"}}