{"test_class": {"identifier": "RuleDatabaseTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/jak_linux/dns66/db/RuleDatabaseTest.java"}, "test_case": {"identifier": "testGetInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstance() throws Exception {\n        RuleDatabase instance = RuleDatabase.getInstance();\n\n        assertNotNull(instance);\n        assertTrue(instance.isEmpty());\n        assertFalse(instance.isBlocked(\"example.com\"));\n    }", "signature": "void testGetInstance()", "full_signature": "@Test public void testGetInstance()", "class_method_signature": "RuleDatabaseTest.testGetInstance()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertNotNull", "assertTrue", "isEmpty", "assertFalse", "isBlocked"]}, "focal_class": {"identifier": "RuleDatabase", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"RuleDatabase\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"RuleDatabase\"", "var_name": "TAG"}, {"original_string": "private static final RuleDatabase instance = new RuleDatabase();", "modifier": "private static final", "type": "RuleDatabase", "declarator": "instance = new RuleDatabase()", "var_name": "instance"}, {"original_string": "final AtomicReference<HashSet<String>> blockedHosts = new AtomicReference<>(new HashSet<String>());", "modifier": "final", "type": "AtomicReference<HashSet<String>>", "declarator": "blockedHosts = new AtomicReference<>(new HashSet<String>())", "var_name": "blockedHosts"}, {"original_string": "HashSet<String> nextBlockedHosts = null;", "modifier": "", "type": "HashSet<String>", "declarator": "nextBlockedHosts = null", "var_name": "nextBlockedHosts"}], "methods": [{"identifier": "RuleDatabase", "parameters": "()", "modifiers": "", "return": "", "signature": " RuleDatabase()", "full_signature": "  RuleDatabase()", "class_method_signature": "RuleDatabase.RuleDatabase()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "RuleDatabase", "signature": "RuleDatabase getInstance()", "full_signature": "public static RuleDatabase getInstance()", "class_method_signature": "RuleDatabase.getInstance()", "testcase": false, "constructor": false}, {"identifier": "parseLine", "parameters": "(String line)", "modifiers": "@Nullable static", "return": "String", "signature": "String parseLine(String line)", "full_signature": "@Nullable static String parseLine(String line)", "class_method_signature": "RuleDatabase.parseLine(String line)", "testcase": false, "constructor": false}, {"identifier": "isBlocked", "parameters": "(String host)", "modifiers": "public", "return": "boolean", "signature": "boolean isBlocked(String host)", "full_signature": "public boolean isBlocked(String host)", "class_method_signature": "RuleDatabase.isBlocked(String host)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": " boolean isEmpty()", "class_method_signature": "RuleDatabase.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(Context context)", "modifiers": "public synchronized", "return": "void", "signature": "void initialize(Context context)", "full_signature": "public synchronized void initialize(Context context)", "class_method_signature": "RuleDatabase.initialize(Context context)", "testcase": false, "constructor": false}, {"identifier": "loadItem", "parameters": "(Context context, Configuration.Item item)", "modifiers": "private", "return": "void", "signature": "void loadItem(Context context, Configuration.Item item)", "full_signature": "private void loadItem(Context context, Configuration.Item item)", "class_method_signature": "RuleDatabase.loadItem(Context context, Configuration.Item item)", "testcase": false, "constructor": false}, {"identifier": "addHost", "parameters": "(Configuration.Item item, String host)", "modifiers": "private", "return": "void", "signature": "void addHost(Configuration.Item item, String host)", "full_signature": "private void addHost(Configuration.Item item, String host)", "class_method_signature": "RuleDatabase.addHost(Configuration.Item item, String host)", "testcase": false, "constructor": false}, {"identifier": "loadReader", "parameters": "(Configuration.Item item, Reader reader)", "modifiers": "", "return": "boolean", "signature": "boolean loadReader(Configuration.Item item, Reader reader)", "full_signature": " boolean loadReader(Configuration.Item item, Reader reader)", "class_method_signature": "RuleDatabase.loadReader(Configuration.Item item, Reader reader)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/jak_linux/dns66/db/RuleDatabase.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "RuleDatabase", "body": "public static RuleDatabase getInstance() {\n        return instance;\n    }", "signature": "RuleDatabase getInstance()", "full_signature": "public static RuleDatabase getInstance()", "class_method_signature": "RuleDatabase.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 70996010, "url": "https://github.com/julian-klode/dns66", "stars": 1372, "created": "10/15/2016 3:27:17 PM +00:00", "updates": "2020-01-26T10:51:30+00:00", "fork": "False", "license": "licensed"}}