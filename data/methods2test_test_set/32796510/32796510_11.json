{"test_class": {"identifier": "EmbeddedFlagUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EmbeddedFlagUtil util = new EmbeddedFlagUtil();", "modifier": "private", "type": "EmbeddedFlagUtil", "declarator": "util = new EmbeddedFlagUtil()", "var_name": "util"}], "file": "streamflyer-core/src/test/java/com/github/rwitzel/streamflyer/regex/addons/util/EmbeddedFlagUtilTest.java"}, "test_case": {"identifier": "testEmbedFlags_differentFlags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmbedFlags_differentFlags() throws Exception {\n\n        String regex1 = \"ABC\";\n        String regex2 = \"XYZ\";\n\n        String regex = \"(\" + util.embedFlags(regex1, 0) + \")|(\" + util.embedFlags(regex2, Pattern.CASE_INSENSITIVE)\n                + \")\";\n\n        assertEquals(true, \"ABC\".matches(regex));\n        assertEquals(false, \"abc\".matches(regex));\n\n        assertEquals(true, \"XYZ\".matches(regex));\n        assertEquals(true, \"xyz\".matches(regex));\n    }", "signature": "void testEmbedFlags_differentFlags()", "full_signature": "@Test public void testEmbedFlags_differentFlags()", "class_method_signature": "EmbeddedFlagUtilTest.testEmbedFlags_differentFlags()", "testcase": true, "constructor": false, "invocations": ["embedFlags", "embedFlags", "assertEquals", "matches", "assertEquals", "matches", "assertEquals", "matches", "assertEquals", "matches"]}, "focal_class": {"identifier": "EmbeddedFlagUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "embedFlags", "parameters": "(String regex, int flags)", "modifiers": "public", "return": "String", "signature": "String embedFlags(String regex, int flags)", "full_signature": "public String embedFlags(String regex, int flags)", "class_method_signature": "EmbeddedFlagUtil.embedFlags(String regex, int flags)", "testcase": false, "constructor": false}, {"identifier": "mapFlagsToEmbeddedFlags", "parameters": "(int flags)", "modifiers": "protected", "return": "String", "signature": "String mapFlagsToEmbeddedFlags(int flags)", "full_signature": "protected String mapFlagsToEmbeddedFlags(int flags)", "class_method_signature": "EmbeddedFlagUtil.mapFlagsToEmbeddedFlags(int flags)", "testcase": false, "constructor": false}], "file": "streamflyer-core/src/main/java/com/github/rwitzel/streamflyer/regex/addons/util/EmbeddedFlagUtil.java"}, "focal_method": {"identifier": "embedFlags", "parameters": "(String regex, int flags)", "modifiers": "public", "return": "String", "body": "public String embedFlags(String regex, int flags) {\n        if (flags == 0) {\n            return regex;\n        } else {\n            return \"(?\" + mapFlagsToEmbeddedFlags(flags) + \":\" + regex + \")\";\n        }\n    }", "signature": "String embedFlags(String regex, int flags)", "full_signature": "public String embedFlags(String regex, int flags)", "class_method_signature": "EmbeddedFlagUtil.embedFlags(String regex, int flags)", "testcase": false, "constructor": false, "invocations": ["mapFlagsToEmbeddedFlags"]}, "repository": {"repo_id": 32796510, "url": "https://github.com/rwitzel/streamflyer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 26, "size": 2880, "license": "licensed"}}