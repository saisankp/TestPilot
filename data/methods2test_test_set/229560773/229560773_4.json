{"test_class": {"identifier": "SelectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Configuration<Person> configuration;", "modifier": "private static", "type": "Configuration<Person>", "declarator": "configuration", "var_name": "configuration"}], "file": "UniversalFriends-core/src/test/java/me/ironexception/universalfriends/select/SelectorTest.java"}, "test_case": {"identifier": "enemies", "parameters": "()", "modifiers": "@Test @DisplayName(\"Enemies\")", "return": "void", "body": "@Test\n    @DisplayName(\"Enemies\")\n    void enemies() {\n        assertTrue(setHasNames(\n                Selector.create(configuration).enemies().selectMatchingAll(),\n                \"Ben\", \"Jack\"));\n    }", "signature": "void enemies()", "full_signature": "@Test @DisplayName(\"Enemies\") void enemies()", "class_method_signature": "SelectorTest.enemies()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "setHasNames", "selectMatchingAll", "enemies", "create"]}, "focal_class": {"identifier": "Selector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final T configuration;", "modifier": "private final", "type": "T", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final Set<Predicate<P>> predicates;", "modifier": "private final", "type": "Set<Predicate<P>>", "declarator": "predicates", "var_name": "predicates"}], "methods": [{"identifier": "Selector", "parameters": "(T configuration)", "modifiers": "private", "return": "", "signature": " Selector(T configuration)", "full_signature": "private  Selector(T configuration)", "class_method_signature": "Selector.Selector(T configuration)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(T configuration)", "modifiers": "public static", "return": "Selector<P, T>", "signature": "Selector<P, T> create(T configuration)", "full_signature": "public static Selector<P, T> create(T configuration)", "class_method_signature": "Selector.create(T configuration)", "testcase": false, "constructor": false}, {"identifier": "friends", "parameters": "()", "modifiers": "public", "return": "Selector<P, T>", "signature": "Selector<P, T> friends()", "full_signature": "public Selector<P, T> friends()", "class_method_signature": "Selector.friends()", "testcase": false, "constructor": false}, {"identifier": "enemies", "parameters": "()", "modifiers": "public", "return": "Selector<P, T>", "signature": "Selector<P, T> enemies()", "full_signature": "public Selector<P, T> enemies()", "class_method_signature": "Selector.enemies()", "testcase": false, "constructor": false}, {"identifier": "exactValue", "parameters": "(double value)", "modifiers": "public", "return": "Selector<P, T>", "signature": "Selector<P, T> exactValue(double value)", "full_signature": "public Selector<P, T> exactValue(double value)", "class_method_signature": "Selector.exactValue(double value)", "testcase": false, "constructor": false}, {"identifier": "association", "parameters": "(Association association)", "modifiers": "public", "return": "Selector<P, T>", "signature": "Selector<P, T> association(Association association)", "full_signature": "public Selector<P, T> association(Association association)", "class_method_signature": "Selector.association(Association association)", "testcase": false, "constructor": false}, {"identifier": "selectMatchingAll", "parameters": "()", "modifiers": "public", "return": "Set<P>", "signature": "Set<P> selectMatchingAll()", "full_signature": "public Set<P> selectMatchingAll()", "class_method_signature": "Selector.selectMatchingAll()", "testcase": false, "constructor": false}, {"identifier": "selectMatchingNone", "parameters": "()", "modifiers": "public", "return": "Set<P>", "signature": "Set<P> selectMatchingNone()", "full_signature": "public Set<P> selectMatchingNone()", "class_method_signature": "Selector.selectMatchingNone()", "testcase": false, "constructor": false}, {"identifier": "selectMatchingAny", "parameters": "()", "modifiers": "public", "return": "Set<P>", "signature": "Set<P> selectMatchingAny()", "full_signature": "public Set<P> selectMatchingAny()", "class_method_signature": "Selector.selectMatchingAny()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(Predicate<P> predicate)", "modifiers": "private", "return": "Set<P>", "signature": "Set<P> select(Predicate<P> predicate)", "full_signature": "private Set<P> select(Predicate<P> predicate)", "class_method_signature": "Selector.select(Predicate<P> predicate)", "testcase": false, "constructor": false}], "file": "UniversalFriends-core/src/main/java/me/ironexception/universalfriends/select/Selector.java"}, "focal_method": {"identifier": "enemies", "parameters": "()", "modifiers": "public", "return": "Selector<P, T>", "body": "public Selector<P, T> enemies() {\n        predicates.add(p -> p.getValue() < Standard.STANDARD_NEUTRAL);\n        return this;\n    }", "signature": "Selector<P, T> enemies()", "full_signature": "public Selector<P, T> enemies()", "class_method_signature": "Selector.enemies()", "testcase": false, "constructor": false, "invocations": ["add", "getValue"]}, "repository": {"repo_id": 229560773, "url": "https://github.com/minecraft-initiative/UniversalFriends", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 10, "size": 177, "license": "licensed"}}