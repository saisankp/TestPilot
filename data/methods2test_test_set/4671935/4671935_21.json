{"test_class": {"identifier": "TrackStatsTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/platypii/baseline/tracks/TrackStatsTest.java"}, "test_case": {"identifier": "trackStats", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void trackStats() {\n        final List<MLocation> points = new ArrayList<>();\n        points.add(point(0, FlightMode.MODE_GROUND));\n        points.add(point(1000, FlightMode.MODE_GROUND));\n        points.add(point(2000, FlightMode.MODE_WINGSUIT));\n        points.add(point(3000, FlightMode.MODE_WINGSUIT));\n        points.add(point(4000, FlightMode.MODE_WINGSUIT));\n        points.add(point(5000, FlightMode.MODE_CANOPY));\n        points.add(point(6000, FlightMode.MODE_CANOPY));\n        points.add(point(7000, FlightMode.MODE_GROUND));\n        final TrackStats stats = new TrackStats(points);\n        assertEquals(2000, stats.exit.millis);\n        assertEquals(4000, stats.deploy.millis);\n        assertEquals(6000, stats.land.millis);\n        assertEquals(100, stats.altitude.min, 0.01);\n        assertEquals(1000, stats.altitude.max, 0.01);\n    }", "signature": "void trackStats()", "full_signature": "@Test public void trackStats()", "class_method_signature": "TrackStatsTest.trackStats()", "testcase": true, "constructor": false, "invocations": ["add", "point", "add", "point", "add", "point", "add", "point", "add", "point", "add", "point", "add", "point", "add", "point", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "TrackStats", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final Range altitude = new Range();", "modifier": "public final", "type": "Range", "declarator": "altitude = new Range()", "var_name": "altitude"}, {"original_string": "public MLocation exit;", "modifier": "public", "type": "MLocation", "declarator": "exit", "var_name": "exit"}, {"original_string": "public MLocation deploy;", "modifier": "public", "type": "MLocation", "declarator": "deploy", "var_name": "deploy"}, {"original_string": "public MLocation land;", "modifier": "public", "type": "MLocation", "declarator": "land", "var_name": "land"}, {"original_string": "@Nullable\n    public final LatLngBounds bounds;", "modifier": "@Nullable\n    public final", "type": "LatLngBounds", "declarator": "bounds", "var_name": "bounds"}], "methods": [{"identifier": "TrackStats", "parameters": "(@NonNull List<MLocation> trackData)", "modifiers": "", "return": "", "signature": " TrackStats(@NonNull List<MLocation> trackData)", "full_signature": "  TrackStats(@NonNull List<MLocation> trackData)", "class_method_signature": "TrackStats.TrackStats(@NonNull List<MLocation> trackData)", "testcase": false, "constructor": true}, {"identifier": "isDefined", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDefined()", "full_signature": "public boolean isDefined()", "class_method_signature": "TrackStats.isDefined()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/platypii/baseline/tracks/TrackStats.java"}, "focal_method": {"identifier": "TrackStats", "parameters": "(@NonNull List<MLocation> trackData)", "modifiers": "", "return": "", "body": "TrackStats(@NonNull List<MLocation> trackData) {\n        if (!trackData.isEmpty()) {\n            // Detect exit, deploy, land\n            final TrackLabels labels = TrackLabels.from(trackData);\n            if (labels != null) {\n                exit = trackData.get(labels.exit);\n                deploy = trackData.get(labels.deploy);\n                land = trackData.get(labels.land);\n            }\n            final LatLngBounds.Builder boundsBuilder = LatLngBounds.builder();\n            for (MLocation loc : trackData) {\n                altitude.expand(loc.altitude_gps);\n                boundsBuilder.include(loc.latLng());\n            }\n            bounds = boundsBuilder.build();\n        } else {\n            bounds = null;\n        }\n    }", "signature": " TrackStats(@NonNull List<MLocation> trackData)", "full_signature": "  TrackStats(@NonNull List<MLocation> trackData)", "class_method_signature": "TrackStats.TrackStats(@NonNull List<MLocation> trackData)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}