{"test_class": {"identifier": "AndroidStringsResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File INPUT_FILE = new File(\"src/test/resource/resfilter/xml/input.xml\");", "modifier": "private static final", "type": "File", "declarator": "INPUT_FILE = new File(\"src/test/resource/resfilter/xml/input.xml\")", "var_name": "INPUT_FILE"}, {"original_string": "private static final File EXPECTED_WRITE_FILE = new File(\"src/test/resource/resfilter/xml/write-output.xml\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_WRITE_FILE = new File(\"src/test/resource/resfilter/xml/write-output.xml\")", "var_name": "EXPECTED_WRITE_FILE"}, {"original_string": "private static final File MERGE_INPUT_1_FILE = new File(\"src/test/resource/resfilter/xml/merge-input-1.xml\");", "modifier": "private static final", "type": "File", "declarator": "MERGE_INPUT_1_FILE = new File(\"src/test/resource/resfilter/xml/merge-input-1.xml\")", "var_name": "MERGE_INPUT_1_FILE"}, {"original_string": "private static final File MERGE_INPUT_2_FILE = new File(\"src/test/resource/resfilter/xml/merge-input-2.xml\");", "modifier": "private static final", "type": "File", "declarator": "MERGE_INPUT_2_FILE = new File(\"src/test/resource/resfilter/xml/merge-input-2.xml\")", "var_name": "MERGE_INPUT_2_FILE"}, {"original_string": "private static final File EXPECTED_MERGE_1_FILE = new File(\"src/test/resource/resfilter/xml/merge-output-1.xml\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_MERGE_1_FILE = new File(\"src/test/resource/resfilter/xml/merge-output-1.xml\")", "var_name": "EXPECTED_MERGE_1_FILE"}, {"original_string": "private static final File EXPECTED_MERGE_2_FILE = new File(\"src/test/resource/resfilter/xml/merge-output-2.xml\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_MERGE_2_FILE = new File(\"src/test/resource/resfilter/xml/merge-output-2.xml\")", "var_name": "EXPECTED_MERGE_2_FILE"}, {"original_string": "private static final Collection<ResourceString> EXPECTED_INPUT_RES_LIST;", "modifier": "private static final", "type": "Collection<ResourceString>", "declarator": "EXPECTED_INPUT_RES_LIST", "var_name": "EXPECTED_INPUT_RES_LIST"}, {"original_string": "private static LanguageBundle WRITE_BUNDLE;", "modifier": "private static", "type": "LanguageBundle", "declarator": "WRITE_BUNDLE", "var_name": "WRITE_BUNDLE"}, {"original_string": "private static LanguageBundle MERGE_BUNDLE;", "modifier": "private static", "type": "LanguageBundle", "declarator": "MERGE_BUNDLE", "var_name": "MERGE_BUNDLE"}, {"original_string": "private static final AndroidStringsResource res = new AndroidStringsResource();", "modifier": "private static final", "type": "AndroidStringsResource", "declarator": "res = new AndroidStringsResource()", "var_name": "res"}], "file": "gp-res-filter/src/test/java/com/ibm/g11n/pipeline/resfilter/impl/AndroidStringsResourceTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() throws IOException, ResourceFilterException {\n        assertTrue(\"The input test file <\" + INPUT_FILE + \"> does not exist.\", INPUT_FILE.exists());\n\n        try (InputStream is = new FileInputStream(INPUT_FILE)) {\n            LanguageBundle bundle = res.parse(is, null);\n            List<ResourceString> resStrList = new ArrayList<>(bundle.getResourceStrings());\n            Collections.sort(resStrList, new ResourceStringComparator());\n            assertEquals(\"ResourceStrings did not match.\", EXPECTED_INPUT_RES_LIST, resStrList);\n        }\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "AndroidStringsResourceTest.testParse()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "exists", "parse", "getResourceStrings", "sort", "assertEquals"]}, "focal_class": {"identifier": "AndroidStringsResource", "superclass": "extends ResourceFilter", "interfaces": "", "fields": [{"original_string": "private static final String CHAR_SET = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "CHAR_SET = \"UTF-8\"", "var_name": "CHAR_SET"}, {"original_string": "private static final String RESOURCES_STRING = \"resources\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCES_STRING = \"resources\"", "var_name": "RESOURCES_STRING"}, {"original_string": "private static final String NAME_STRING = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME_STRING = \"name\"", "var_name": "NAME_STRING"}, {"original_string": "private static final String STR_STRING = \"string\";", "modifier": "private static final", "type": "String", "declarator": "STR_STRING = \"string\"", "var_name": "STR_STRING"}, {"original_string": "private static final String STR_ARRAY = \"string-array\";", "modifier": "private static final", "type": "String", "declarator": "STR_ARRAY = \"string-array\"", "var_name": "STR_ARRAY"}, {"original_string": "private static final String PLURAL_STRING = \"plural\";", "modifier": "private static final", "type": "String", "declarator": "PLURAL_STRING = \"plural\"", "var_name": "PLURAL_STRING"}, {"original_string": "private static final String PLURALS_STRING = \"plurals\";", "modifier": "private static final", "type": "String", "declarator": "PLURALS_STRING = \"plurals\"", "var_name": "PLURALS_STRING"}, {"original_string": "private static final String QUANTITY_STRING = \"quantity\";", "modifier": "private static final", "type": "String", "declarator": "QUANTITY_STRING = \"quantity\"", "var_name": "QUANTITY_STRING"}, {"original_string": "private static final String ITEM_STRING = \"item\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STRING = \"item\"", "var_name": "ITEM_STRING"}, {"original_string": "private static final String STR_ARRAY_OPEN_TAG_PTRN = \"^(\\\\s*<string-array\\\\s*name=\\\".*\\\">).*\";", "modifier": "private static final", "type": "String", "declarator": "STR_ARRAY_OPEN_TAG_PTRN = \"^(\\\\s*<string-array\\\\s*name=\\\".*\\\">).*\"", "var_name": "STR_ARRAY_OPEN_TAG_PTRN"}, {"original_string": "private static final String STR_ARRAY_CLOSE_TAG_PTRN = \".*(\\\\s*</string-array\\\\s*>)$\";", "modifier": "private static final", "type": "String", "declarator": "STR_ARRAY_CLOSE_TAG_PTRN = \".*(\\\\s*</string-array\\\\s*>)$\"", "var_name": "STR_ARRAY_CLOSE_TAG_PTRN"}, {"original_string": "private static final String STR_OPEN_TAG_PTRN = \"^(\\\\s*<string\\\\s*name=\\\".*\\\">).*\";", "modifier": "private static final", "type": "String", "declarator": "STR_OPEN_TAG_PTRN = \"^(\\\\s*<string\\\\s*name=\\\".*\\\">).*\"", "var_name": "STR_OPEN_TAG_PTRN"}, {"original_string": "private static final String STR_CLOSE_TAG_PTRN = \".*(\\\\s*</string\\\\s*>)$\";", "modifier": "private static final", "type": "String", "declarator": "STR_CLOSE_TAG_PTRN = \".*(\\\\s*</string\\\\s*>)$\"", "var_name": "STR_CLOSE_TAG_PTRN"}, {"original_string": "private static final String PLURALS_OPEN_TAG_PTRN = \"^(\\\\s*<plurals\\\\s*name=\\\".*\\\">).*\";", "modifier": "private static final", "type": "String", "declarator": "PLURALS_OPEN_TAG_PTRN = \"^(\\\\s*<plurals\\\\s*name=\\\".*\\\">).*\"", "var_name": "PLURALS_OPEN_TAG_PTRN"}, {"original_string": "private static final String PLURALS_CLOSE_TAG_PTRN = \".*(\\\\s*</plurals\\\\s*>)$\";", "modifier": "private static final", "type": "String", "declarator": "PLURALS_CLOSE_TAG_PTRN = \".*(\\\\s*</plurals\\\\s*>)$\"", "var_name": "PLURALS_CLOSE_TAG_PTRN"}, {"original_string": "private static final String PLURAL_ENTIRY_PTRN = \"{0}, plural, {1}\";", "modifier": "private static final", "type": "String", "declarator": "PLURAL_ENTIRY_PTRN = \"{0}, plural, {1}\"", "var_name": "PLURAL_ENTIRY_PTRN"}], "methods": [{"identifier": "parse", "parameters": "(InputStream inStream, FilterOptions options)", "modifiers": "@Override public", "return": "LanguageBundle", "signature": "LanguageBundle parse(InputStream inStream, FilterOptions options)", "full_signature": "@Override public LanguageBundle parse(InputStream inStream, FilterOptions options)", "class_method_signature": "AndroidStringsResource.parse(InputStream inStream, FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "collectResourceStrings", "parameters": "(NodeList nodeList, int startSeqNum, Collection<ResourceString> resStrings)", "modifiers": "private", "return": "int", "signature": "int collectResourceStrings(NodeList nodeList, int startSeqNum, Collection<ResourceString> resStrings)", "full_signature": "private int collectResourceStrings(NodeList nodeList, int startSeqNum, Collection<ResourceString> resStrings)", "class_method_signature": "AndroidStringsResource.collectResourceStrings(NodeList nodeList, int startSeqNum, Collection<ResourceString> resStrings)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(OutputStream outStream, LanguageBundle languageBundle, FilterOptions options)", "modifiers": "@Override public", "return": "void", "signature": "void write(OutputStream outStream, LanguageBundle languageBundle, FilterOptions options)", "full_signature": "@Override public void write(OutputStream outStream, LanguageBundle languageBundle, FilterOptions options)", "class_method_signature": "AndroidStringsResource.write(OutputStream outStream, LanguageBundle languageBundle, FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "modifiers": "@Override public", "return": "void", "signature": "void merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "full_signature": "@Override public void merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "class_method_signature": "AndroidStringsResource.merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "getTabStr", "parameters": "(String str)", "modifiers": "static", "return": "String", "signature": "String getTabStr(String str)", "full_signature": "static String getTabStr(String str)", "class_method_signature": "AndroidStringsResource.getTabStr(String str)", "testcase": false, "constructor": false}, {"identifier": "getSpacesSize", "parameters": "(String whitespace)", "modifiers": "static", "return": "int", "signature": "int getSpacesSize(String whitespace)", "full_signature": "static int getSpacesSize(String whitespace)", "class_method_signature": "AndroidStringsResource.getSpacesSize(String whitespace)", "testcase": false, "constructor": false}, {"identifier": "formatMessage", "parameters": "(String openingTag, String message, String closingTag, String whitespace,\n            BreakIterator brkItr)", "modifiers": "static", "return": "String", "signature": "String formatMessage(String openingTag, String message, String closingTag, String whitespace,\n            BreakIterator brkItr)", "full_signature": "static String formatMessage(String openingTag, String message, String closingTag, String whitespace,\n            BreakIterator brkItr)", "class_method_signature": "AndroidStringsResource.formatMessage(String openingTag, String message, String closingTag, String whitespace,\n            BreakIterator brkItr)", "testcase": false, "constructor": false}, {"identifier": "containPluralString", "parameters": "(String inputString)", "modifiers": "static", "return": "boolean", "signature": "boolean containPluralString(String inputString)", "full_signature": "static boolean containPluralString(String inputString)", "class_method_signature": "AndroidStringsResource.containPluralString(String inputString)", "testcase": false, "constructor": false}, {"identifier": "getPluralString", "parameters": "(String inputString)", "modifiers": "static", "return": "String", "signature": "String getPluralString(String inputString)", "full_signature": "static String getPluralString(String inputString)", "class_method_signature": "AndroidStringsResource.getPluralString(String inputString)", "testcase": false, "constructor": false}, {"identifier": "getPluralCategories", "parameters": "(String inputString)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getPluralCategories(String inputString)", "full_signature": "static Map<String, String> getPluralCategories(String inputString)", "class_method_signature": "AndroidStringsResource.getPluralCategories(String inputString)", "testcase": false, "constructor": false}], "file": "gp-res-filter/src/main/java/com/ibm/g11n/pipeline/resfilter/impl/AndroidStringsResource.java"}, "focal_method": {"identifier": "parse", "parameters": "(InputStream inStream, FilterOptions options)", "modifiers": "@Override public", "return": "LanguageBundle", "body": "@Override\n    public LanguageBundle parse(InputStream inStream, FilterOptions options)\n            throws IOException, ResourceFilterException {\n\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = null;\n        try {\n            builder = factory.newDocumentBuilder();\n        } catch (ParserConfigurationException e) {\n            // runtime problem\n            throw new ResourceFilterException(e);\n        }\n\n        Document document = null;\n        try {\n            document = builder.parse(inStream);\n        } catch (SAXException e) {\n            throw new IllegalResourceFormatException(e);\n        }\n\n        Element elem = document.getDocumentElement();\n        NodeList nodeList = elem.getChildNodes();\n        List<ResourceString> resStrings = new LinkedList<>();\n        collectResourceStrings(nodeList, 1 /* the first sequence number */, resStrings);\n\n        LanguageBundle bundle = new LanguageBundle();\n        bundle.setResourceStrings(resStrings);\n\n        return bundle;\n    }", "signature": "LanguageBundle parse(InputStream inStream, FilterOptions options)", "full_signature": "@Override public LanguageBundle parse(InputStream inStream, FilterOptions options)", "class_method_signature": "AndroidStringsResource.parse(InputStream inStream, FilterOptions options)", "testcase": false, "constructor": false, "invocations": ["newInstance", "newDocumentBuilder", "parse", "getDocumentElement", "getChildNodes", "collectResourceStrings", "setResourceStrings"]}, "repository": {"repo_id": 46134098, "url": "https://github.com/IBM-Cloud/gp-java-tools", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 9, "size": 6216, "license": "licensed"}}