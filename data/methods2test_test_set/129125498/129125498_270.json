{"test_class": {"identifier": "CustomActuatorMetricServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private CustomActuatorMetricService actuatorMetricService = new CustomActuatorMetricServiceImpl();", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "CustomActuatorMetricService", "declarator": "actuatorMetricService = new CustomActuatorMetricServiceImpl()", "var_name": "actuatorMetricService"}, {"original_string": "@Mock\n    private MeterRegistry registry;", "modifier": "@Mock\n    private", "type": "MeterRegistry", "declarator": "registry", "var_name": "registry"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/acutator/CustomActuatorMetricServiceImplTest.java"}, "test_case": {"identifier": "testIncreaseCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIncreaseCount() {\n        actuatorMetricService.increaseCount(200);\n        actuatorMetricService.increaseCount(200);\n        actuatorMetricService.increaseCount(404);\n        verify(actuatorMetricService, times(3)).increaseCount(anyInt());\n    }", "signature": "void testIncreaseCount()", "full_signature": "@Test public void testIncreaseCount()", "class_method_signature": "CustomActuatorMetricServiceImplTest.testIncreaseCount()", "testcase": true, "constructor": false, "invocations": ["increaseCount", "increaseCount", "increaseCount", "increaseCount", "verify", "times", "anyInt"]}, "focal_class": {"identifier": "CustomActuatorMetricServiceImpl", "superclass": "", "interfaces": "implements CustomActuatorMetricService", "fields": [{"original_string": "@Autowired\n    private MeterRegistry registry;", "modifier": "@Autowired\n    private", "type": "MeterRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final List<List<Integer>> statusMetricsByMinute;", "modifier": "private final", "type": "List<List<Integer>>", "declarator": "statusMetricsByMinute", "var_name": "statusMetricsByMinute"}, {"original_string": "private final List<String> statusList;", "modifier": "private final", "type": "List<String>", "declarator": "statusList", "var_name": "statusList"}], "methods": [{"identifier": "CustomActuatorMetricServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " CustomActuatorMetricServiceImpl()", "full_signature": "public  CustomActuatorMetricServiceImpl()", "class_method_signature": "CustomActuatorMetricServiceImpl.CustomActuatorMetricServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "increaseCount", "parameters": "(final int status)", "modifiers": "@Override public", "return": "void", "signature": "void increaseCount(final int status)", "full_signature": "@Override public void increaseCount(final int status)", "class_method_signature": "CustomActuatorMetricServiceImpl.increaseCount(final int status)", "testcase": false, "constructor": false}, {"identifier": "exportMetrics", "parameters": "()", "modifiers": "@Generated @Scheduled(fixedDelay = 60000) public", "return": "void", "signature": "void exportMetrics()", "full_signature": "@Generated @Scheduled(fixedDelay = 60000) public void exportMetrics()", "class_method_signature": "CustomActuatorMetricServiceImpl.exportMetrics()", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/acutator/CustomActuatorMetricServiceImpl.java"}, "focal_method": {"identifier": "increaseCount", "parameters": "(final int status)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void increaseCount(final int status) {\n        String counterName = \"counter.status.\" + status;\n        registry.counter(counterName).increment(1);\n        if (!statusList.contains(counterName)) {\n            statusList.add(counterName);\n        }\n    }", "signature": "void increaseCount(final int status)", "full_signature": "@Override public void increaseCount(final int status)", "class_method_signature": "CustomActuatorMetricServiceImpl.increaseCount(final int status)", "testcase": false, "constructor": false, "invocations": ["increment", "counter", "contains", "add"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}