{"test_class": {"identifier": "SessionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UUID serverUUID = TestConstants.SERVER_UUID;", "modifier": "private final", "type": "UUID", "declarator": "serverUUID = TestConstants.SERVER_UUID", "var_name": "serverUUID"}], "file": "Plan/common/src/test/java/com/djrapitops/plan/gathering/domain/SessionTest.java"}, "test_case": {"identifier": "killsAreAdded2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void killsAreAdded2() {\n        Session session = new Session(null, serverUUID, System.currentTimeMillis(), \"\", \"\");\n\n        session.playerKilled(new PlayerKill(TestConstants.PLAYER_TWO_UUID, \"Weapon\", System.currentTimeMillis()));\n\n        Optional<List<PlayerKill>> afterOptional = session.getValue(SessionKeys.PLAYER_KILLS);\n        assertTrue(afterOptional.isPresent());\n        List<PlayerKill> after = afterOptional.get();\n\n        assertFalse(after.isEmpty());\n    }", "signature": "void killsAreAdded2()", "full_signature": "@Test void killsAreAdded2()", "class_method_signature": "SessionTest.killsAreAdded2()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "playerKilled", "currentTimeMillis", "getValue", "assertTrue", "isPresent", "get", "assertFalse", "isEmpty"]}, "focal_class": {"identifier": "Session", "superclass": "extends DynamicDataContainer", "interfaces": "implements DateHolder", "fields": [{"original_string": "private final long sessionStart;", "modifier": "private final", "type": "long", "declarator": "sessionStart", "var_name": "sessionStart"}, {"original_string": "private WorldTimes worldTimes;", "modifier": "private", "type": "WorldTimes", "declarator": "worldTimes", "var_name": "worldTimes"}, {"original_string": "private List<PlayerKill> playerKills;", "modifier": "private", "type": "List<PlayerKill>", "declarator": "playerKills", "var_name": "playerKills"}, {"original_string": "private int mobKills;", "modifier": "private", "type": "int", "declarator": "mobKills", "var_name": "mobKills"}, {"original_string": "private int deaths;", "modifier": "private", "type": "int", "declarator": "deaths", "var_name": "deaths"}, {"original_string": "private long afkTime;", "modifier": "private", "type": "long", "declarator": "afkTime", "var_name": "afkTime"}, {"original_string": "private boolean firstSession;", "modifier": "private", "type": "boolean", "declarator": "firstSession", "var_name": "firstSession"}], "methods": [{"identifier": "Session", "parameters": "(UUID uuid, UUID serverUUID, long sessionStart, String world, String gm)", "modifiers": "public", "return": "", "signature": " Session(UUID uuid, UUID serverUUID, long sessionStart, String world, String gm)", "full_signature": "public  Session(UUID uuid, UUID serverUUID, long sessionStart, String world, String gm)", "class_method_signature": "Session.Session(UUID uuid, UUID serverUUID, long sessionStart, String world, String gm)", "testcase": false, "constructor": true}, {"identifier": "Session", "parameters": "(\n            int id, UUID uuid, UUID serverUUID,\n            long sessionStart, long sessionEnd,\n            int mobKills, int deaths, long afkTime\n    )", "modifiers": "public", "return": "", "signature": " Session(\n            int id, UUID uuid, UUID serverUUID,\n            long sessionStart, long sessionEnd,\n            int mobKills, int deaths, long afkTime\n    )", "full_signature": "public  Session(\n            int id, UUID uuid, UUID serverUUID,\n            long sessionStart, long sessionEnd,\n            int mobKills, int deaths, long afkTime\n    )", "class_method_signature": "Session.Session(\n            int id, UUID uuid, UUID serverUUID,\n            long sessionStart, long sessionEnd,\n            int mobKills, int deaths, long afkTime\n    )", "testcase": false, "constructor": true}, {"identifier": "endSession", "parameters": "(long endOfSession)", "modifiers": "public", "return": "void", "signature": "void endSession(long endOfSession)", "full_signature": "public void endSession(long endOfSession)", "class_method_signature": "Session.endSession(long endOfSession)", "testcase": false, "constructor": false}, {"identifier": "changeState", "parameters": "(String world, String gm, long time)", "modifiers": "public", "return": "void", "signature": "void changeState(String world, String gm, long time)", "full_signature": "public void changeState(String world, String gm, long time)", "class_method_signature": "Session.changeState(String world, String gm, long time)", "testcase": false, "constructor": false}, {"identifier": "playerKilled", "parameters": "(PlayerKill kill)", "modifiers": "public", "return": "void", "signature": "void playerKilled(PlayerKill kill)", "full_signature": "public void playerKilled(PlayerKill kill)", "class_method_signature": "Session.playerKilled(PlayerKill kill)", "testcase": false, "constructor": false}, {"identifier": "mobKilled", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void mobKilled()", "full_signature": "public void mobKilled()", "class_method_signature": "Session.mobKilled()", "testcase": false, "constructor": false}, {"identifier": "died", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void died()", "full_signature": "public void died()", "class_method_signature": "Session.died()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLength()", "full_signature": "public long getLength()", "class_method_signature": "Session.getLength()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getDate()", "full_signature": "@Override public long getDate()", "class_method_signature": "Session.getDate()", "testcase": false, "constructor": false}, {"identifier": "setWorldTimes", "parameters": "(WorldTimes worldTimes)", "modifiers": "public", "return": "void", "signature": "void setWorldTimes(WorldTimes worldTimes)", "full_signature": "public void setWorldTimes(WorldTimes worldTimes)", "class_method_signature": "Session.setWorldTimes(WorldTimes worldTimes)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Session.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "isFetchedFromDB", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFetchedFromDB()", "full_signature": "public boolean isFetchedFromDB()", "class_method_signature": "Session.isFetchedFromDB()", "testcase": false, "constructor": false}, {"identifier": "addAFKTime", "parameters": "(long timeAFK)", "modifiers": "public", "return": "void", "signature": "void addAFKTime(long timeAFK)", "full_signature": "public void addAFKTime(long timeAFK)", "class_method_signature": "Session.addAFKTime(long timeAFK)", "testcase": false, "constructor": false}, {"identifier": "setSessionID", "parameters": "(int sessionID)", "modifiers": "public", "return": "void", "signature": "void setSessionID(int sessionID)", "full_signature": "public void setSessionID(int sessionID)", "class_method_signature": "Session.setSessionID(int sessionID)", "testcase": false, "constructor": false}, {"identifier": "setAsFirstSessionIfMatches", "parameters": "(Long registerDate)", "modifiers": "public", "return": "void", "signature": "void setAsFirstSessionIfMatches(Long registerDate)", "full_signature": "public void setAsFirstSessionIfMatches(Long registerDate)", "class_method_signature": "Session.setAsFirstSessionIfMatches(Long registerDate)", "testcase": false, "constructor": false}, {"identifier": "isFirstSession", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFirstSession()", "full_signature": "public boolean isFirstSession()", "class_method_signature": "Session.isFirstSession()", "testcase": false, "constructor": false}, {"identifier": "getPlayerKills", "parameters": "()", "modifiers": "public", "return": "List<PlayerKill>", "signature": "List<PlayerKill> getPlayerKills()", "full_signature": "public List<PlayerKill> getPlayerKills()", "class_method_signature": "Session.getPlayerKills()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Session.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getSessionStart", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getSessionStart()", "full_signature": "private long getSessionStart()", "class_method_signature": "Session.getSessionStart()", "testcase": false, "constructor": false}, {"identifier": "getWorldTimes", "parameters": "()", "modifiers": "private", "return": "WorldTimes", "signature": "WorldTimes getWorldTimes()", "full_signature": "private WorldTimes getWorldTimes()", "class_method_signature": "Session.getWorldTimes()", "testcase": false, "constructor": false}, {"identifier": "setPlayerKills", "parameters": "(List<PlayerKill> playerKills)", "modifiers": "public", "return": "void", "signature": "void setPlayerKills(List<PlayerKill> playerKills)", "full_signature": "public void setPlayerKills(List<PlayerKill> playerKills)", "class_method_signature": "Session.setPlayerKills(List<PlayerKill> playerKills)", "testcase": false, "constructor": false}, {"identifier": "getMobKills", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getMobKills()", "full_signature": "private int getMobKills()", "class_method_signature": "Session.getMobKills()", "testcase": false, "constructor": false}, {"identifier": "getDeaths", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getDeaths()", "full_signature": "private int getDeaths()", "class_method_signature": "Session.getDeaths()", "testcase": false, "constructor": false}, {"identifier": "getAfkTime", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getAfkTime()", "full_signature": "private long getAfkTime()", "class_method_signature": "Session.getAfkTime()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Session.toString()", "testcase": false, "constructor": false}, {"identifier": "updateState", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateState()", "full_signature": "public void updateState()", "class_method_signature": "Session.updateState()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/gathering/domain/Session.java"}, "focal_method": {"identifier": "playerKilled", "parameters": "(PlayerKill kill)", "modifiers": "public", "return": "void", "body": "public void playerKilled(PlayerKill kill) {\n        playerKills.add(kill);\n    }", "signature": "void playerKilled(PlayerKill kill)", "full_signature": "public void playerKilled(PlayerKill kill)", "class_method_signature": "Session.playerKilled(PlayerKill kill)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}