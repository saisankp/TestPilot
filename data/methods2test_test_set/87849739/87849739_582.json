{"test_class": {"identifier": "KamonGaugeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Gauge sut;", "modifier": "private", "type": "Gauge", "declarator": "sut", "var_name": "sut"}], "file": "services/utils/metrics/src/test/java/org/eclipse/ditto/services/utils/metrics/instruments/gauge/KamonGaugeTest.java"}, "test_case": {"identifier": "reset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reset() {\n        sut.set(5L);\n        assertThat(sut.get()).isEqualTo(5L);\n        sut.reset();\n        assertThat(sut.get()).isEqualTo(0L);\n    }", "signature": "void reset()", "full_signature": "@Test public void reset()", "class_method_signature": "KamonGaugeTest.reset()", "testcase": true, "constructor": false, "invocations": ["set", "isEqualTo", "assertThat", "get", "reset", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "KamonGauge", "superclass": "", "interfaces": "implements Gauge", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(KamonGauge.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(KamonGauge.class)", "var_name": "LOGGER"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, String> tags;", "modifier": "private final", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}], "methods": [{"identifier": "KamonGauge", "parameters": "(final String name, final Map<String, String> tags)", "modifiers": "private", "return": "", "signature": " KamonGauge(final String name, final Map<String, String> tags)", "full_signature": "private  KamonGauge(final String name, final Map<String, String> tags)", "class_method_signature": "KamonGauge.KamonGauge(final String name, final Map<String, String> tags)", "testcase": false, "constructor": true}, {"identifier": "newGauge", "parameters": "(final String name)", "modifiers": "public static", "return": "Gauge", "signature": "Gauge newGauge(final String name)", "full_signature": "public static Gauge newGauge(final String name)", "class_method_signature": "KamonGauge.newGauge(final String name)", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "()", "modifiers": "@Override public", "return": "Gauge", "signature": "Gauge increment()", "full_signature": "@Override public Gauge increment()", "class_method_signature": "KamonGauge.increment()", "testcase": false, "constructor": false}, {"identifier": "decrement", "parameters": "()", "modifiers": "@Override public", "return": "Gauge", "signature": "Gauge decrement()", "full_signature": "@Override public Gauge decrement()", "class_method_signature": "KamonGauge.decrement()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final Long value)", "modifiers": "@Override public", "return": "void", "signature": "void set(final Long value)", "full_signature": "@Override public void set(final Long value)", "class_method_signature": "KamonGauge.set(final Long value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long get()", "full_signature": "@Override public Long get()", "class_method_signature": "KamonGauge.get()", "testcase": false, "constructor": false}, {"identifier": "tag", "parameters": "(final String key, final String value)", "modifiers": "@Override public", "return": "Gauge", "signature": "Gauge tag(final String key, final String value)", "full_signature": "@Override public Gauge tag(final String key, final String value)", "class_method_signature": "KamonGauge.tag(final String key, final String value)", "testcase": false, "constructor": false}, {"identifier": "tags", "parameters": "(final Map<String, String> tags)", "modifiers": "@Override public", "return": "Gauge", "signature": "Gauge tags(final Map<String, String> tags)", "full_signature": "@Override public Gauge tags(final Map<String, String> tags)", "class_method_signature": "KamonGauge.tags(final Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "(final String key)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String getTag(final String key)", "full_signature": "@Nullable @Override public String getTag(final String key)", "class_method_signature": "KamonGauge.getTag(final String key)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "@Override public Map<String, String> getTags()", "class_method_signature": "KamonGauge.getTags()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reset()", "full_signature": "@Override public boolean reset()", "class_method_signature": "KamonGauge.reset()", "testcase": false, "constructor": false}, {"identifier": "getKamonInternalGauge", "parameters": "()", "modifiers": "private", "return": "kamon.metric.Gauge", "signature": "kamon.metric.Gauge getKamonInternalGauge()", "full_signature": "private kamon.metric.Gauge getKamonInternalGauge()", "class_method_signature": "KamonGauge.getKamonInternalGauge()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KamonGauge.toString()", "testcase": false, "constructor": false}], "file": "services/utils/metrics/src/main/java/org/eclipse/ditto/services/utils/metrics/instruments/gauge/KamonGauge.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean reset() {\n        getKamonInternalGauge().update(0);\n        LOGGER.trace(\"Reset histogram with name <{}>.\", name);\n        return true;\n    }", "signature": "boolean reset()", "full_signature": "@Override public boolean reset()", "class_method_signature": "KamonGauge.reset()", "testcase": false, "constructor": false, "invocations": ["update", "getKamonInternalGauge", "trace"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}