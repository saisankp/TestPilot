{"test_class": {"identifier": "TestJedisSessionRepositoryFactory", "superclass": "", "interfaces": "", "fields": [], "file": "session-replacement/src/test/java/com/amadeus/session/repository/redis/TestJedisSessionRepositoryFactory.java"}, "test_case": {"identifier": "testSingleRedisFacadeWithPort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSingleRedisFacadeWithPort() {\n    JedisSessionRepositoryFactory factory = spy(new JedisSessionRepositoryFactory());\n    SessionConfiguration sessionConfig = spy(new SessionConfiguration());\n    RedisConfiguration config = spy(new RedisConfiguration(sessionConfig));\n    config.server = \"1.2.3.4:1\";\n    config.clusterMode = \"SINGLE\";\n    RedisFacade facade = factory.getRedisFacade(config);\n    assertThat(facade, instanceOf(JedisPoolFacade.class));\n  }", "signature": "void testSingleRedisFacadeWithPort()", "full_signature": "@Test public void testSingleRedisFacadeWithPort()", "class_method_signature": "TestJedisSessionRepositoryFactory.testSingleRedisFacadeWithPort()", "testcase": true, "constructor": false, "invocations": ["spy", "spy", "spy", "getRedisFacade", "assertThat", "instanceOf"]}, "focal_class": {"identifier": "JedisSessionRepositoryFactory", "superclass": "extends AbstractRedisSessionRepositoryFactory", "interfaces": "", "fields": [{"original_string": "static final Logger logger = LoggerFactory.getLogger(JedisSessionRepositoryFactory.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JedisSessionRepositoryFactory.class)", "var_name": "logger"}], "methods": [{"identifier": "getRedisFacade", "parameters": "(RedisConfiguration config)", "modifiers": "@Override protected", "return": "RedisFacade", "signature": "RedisFacade getRedisFacade(RedisConfiguration config)", "full_signature": "@Override protected RedisFacade getRedisFacade(RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.getRedisFacade(RedisConfiguration config)", "testcase": false, "constructor": false}, {"identifier": "configurePool", "parameters": "(RedisConfiguration config)", "modifiers": "static", "return": "JedisPoolConfig", "signature": "JedisPoolConfig configurePool(RedisConfiguration config)", "full_signature": "static JedisPoolConfig configurePool(RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.configurePool(RedisConfiguration config)", "testcase": false, "constructor": false}, {"identifier": "singleInstance", "parameters": "(JedisPoolConfig poolConfig, RedisConfiguration config)", "modifiers": "private", "return": "RedisFacade", "signature": "RedisFacade singleInstance(JedisPoolConfig poolConfig, RedisConfiguration config)", "full_signature": "private RedisFacade singleInstance(JedisPoolConfig poolConfig, RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.singleInstance(JedisPoolConfig poolConfig, RedisConfiguration config)", "testcase": false, "constructor": false}, {"identifier": "sentinelFacade", "parameters": "(JedisPoolConfig poolConfig, RedisConfiguration config)", "modifiers": "", "return": "RedisFacade", "signature": "RedisFacade sentinelFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "full_signature": " RedisFacade sentinelFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.sentinelFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "testcase": false, "constructor": false}, {"identifier": "clusterFacade", "parameters": "(JedisPoolConfig poolConfig, RedisConfiguration config)", "modifiers": "", "return": "RedisFacade", "signature": "RedisFacade clusterFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "full_signature": " RedisFacade clusterFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.clusterFacade(JedisPoolConfig poolConfig, RedisConfiguration config)", "testcase": false, "constructor": false}, {"identifier": "jedisHostsAndPorts", "parameters": "(RedisConfiguration config)", "modifiers": "static", "return": "Set<HostAndPort>", "signature": "Set<HostAndPort> jedisHostsAndPorts(RedisConfiguration config)", "full_signature": "static Set<HostAndPort> jedisHostsAndPorts(RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.jedisHostsAndPorts(RedisConfiguration config)", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/repository/redis/JedisSessionRepositoryFactory.java"}, "focal_method": {"identifier": "getRedisFacade", "parameters": "(RedisConfiguration config)", "modifiers": "@Override protected", "return": "RedisFacade", "body": "@Override\n  protected RedisFacade getRedisFacade(RedisConfiguration config) {\n    JedisPoolConfig poolConfig = configurePool(config);\n    switch (config.clusterMode) {\n    case \"SINGLE\":\n      return singleInstance(poolConfig, config);\n    case \"SENTINEL\":\n      return sentinelFacade(poolConfig, config);\n    case \"CLUSTER\":\n      return clusterFacade(poolConfig, config);\n    default:\n      throw new IllegalArgumentException(\"Unsupported redis mode: \" + config);\n    }\n  }", "signature": "RedisFacade getRedisFacade(RedisConfiguration config)", "full_signature": "@Override protected RedisFacade getRedisFacade(RedisConfiguration config)", "class_method_signature": "JedisSessionRepositoryFactory.getRedisFacade(RedisConfiguration config)", "testcase": false, "constructor": false, "invocations": ["configurePool", "singleInstance", "sentinelFacade", "clusterFacade"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}