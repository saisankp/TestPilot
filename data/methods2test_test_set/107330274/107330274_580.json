{"test_class": {"identifier": "AwsObservableExtTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-ext/aws/src/test/java/com/netflix/titus/ext/aws/AwsObservableExtTest.java"}, "test_case": {"identifier": "asyncActionCompletable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void asyncActionCompletable() throws Exception {\n        AmazonWebServiceRequest someRequest = AmazonWebServiceRequest.NOOP;\n        final MockAsyncClient<AmazonWebServiceRequest, String> client = new MockAsyncClient<>(someRequest, \"some response\");\n        final Completable completable = AwsObservableExt.asyncActionCompletable(factory -> client.someAsyncOperation(factory.handler(\n                (req, resp) -> {\n                    assertEquals(someRequest, req);\n                    assertEquals(\"some response\", resp);\n                },\n                (t) -> {\n                    throw new IllegalStateException(\"Should never be here\");\n                }\n        )));\n\n        TestScheduler testScheduler = Schedulers.test();\n        final AssertableSubscriber<Void> subscriber = completable.subscribeOn(testScheduler).test();\n\n        testScheduler.triggerActions();\n        subscriber.assertNotCompleted();\n\n        client.run();\n        testScheduler.triggerActions();\n        subscriber.assertCompleted();\n    }", "signature": "void asyncActionCompletable()", "full_signature": "@Test public void asyncActionCompletable()", "class_method_signature": "AwsObservableExtTest.asyncActionCompletable()", "testcase": true, "constructor": false, "invocations": ["asyncActionCompletable", "someAsyncOperation", "handler", "assertEquals", "assertEquals", "test", "test", "subscribeOn", "triggerActions", "assertNotCompleted", "run", "triggerActions", "assertCompleted"]}, "focal_class": {"identifier": "AwsObservableExt", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "asyncActionCompletable", "parameters": "(Func1<CompletableHandlerSupplier, Future<?>> action)", "modifiers": "public static", "return": "Completable", "signature": "Completable asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "full_signature": "public static Completable asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "class_method_signature": "AwsObservableExt.asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "testcase": false, "constructor": false}, {"identifier": "asyncActionSingle", "parameters": "(Func1<SingleHandlerSupplier<RES>, Future<RES>> action)", "modifiers": "public static", "return": "Single<RES>", "signature": "Single<RES> asyncActionSingle(Func1<SingleHandlerSupplier<RES>, Future<RES>> action)", "full_signature": "public static Single<RES> asyncActionSingle(Func1<SingleHandlerSupplier<RES>, Future<RES>> action)", "class_method_signature": "AwsObservableExt.asyncActionSingle(Func1<SingleHandlerSupplier<RES>, Future<RES>> action)", "testcase": false, "constructor": false}], "file": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AwsObservableExt.java"}, "focal_method": {"identifier": "asyncActionCompletable", "parameters": "(Func1<CompletableHandlerSupplier, Future<?>> action)", "modifiers": "public static", "return": "Completable", "body": "public static Completable asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action) {\n        return Completable.create(subscriber -> {\n            try {\n                final Future<?> result = action.call(new CompletableHandlerSupplier(subscriber));\n                subscriber.onSubscribe(Subscriptions.create(() -> result.cancel(true)));\n            } catch (Throwable t) {\n                Exceptions.throwIfFatal(t);\n                subscriber.onError(t);\n            }\n        });\n    }", "signature": "Completable asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "full_signature": "public static Completable asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "class_method_signature": "AwsObservableExt.asyncActionCompletable(Func1<CompletableHandlerSupplier, Future<?>> action)", "testcase": false, "constructor": false, "invocations": ["create", "call", "onSubscribe", "create", "cancel", "throwIfFatal", "onError"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}