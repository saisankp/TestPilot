{"test_class": {"identifier": "HelpPageCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExampleEntryPoint entryPoint;", "modifier": "private", "type": "ExampleEntryPoint", "declarator": "entryPoint", "var_name": "entryPoint"}, {"original_string": "private Gateway gateway;", "modifier": "private", "type": "Gateway", "declarator": "gateway", "var_name": "gateway"}, {"original_string": "private HelpPageCommand command;", "modifier": "private", "type": "HelpPageCommand", "declarator": "command", "var_name": "command"}, {"original_string": "private BufferedWriter writer;", "modifier": "private", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private StringWriter sWriter;", "modifier": "private", "type": "StringWriter", "declarator": "sWriter", "var_name": "sWriter"}, {"original_string": "private String target;", "modifier": "private", "type": "String", "declarator": "target", "var_name": "target"}], "file": "py4j-java/src/test/java/py4j/commands/HelpPageCommandTest.java"}, "test_case": {"identifier": "testHelpClassPattern", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHelpClassPattern() {\n\t\tString inputCommand = \"c\\n\" + ExampleClass.class.getName() + \"\\nsm*\\ntrue\\ne\\n\";\n\t\ttry {\n\t\t\tassertTrue(gateway.getBindings().containsKey(target));\n\t\t\tcommand.execute(\"h\", new BufferedReader(new StringReader(inputCommand)), writer);\n\t\t\tString page = sWriter.toString();\n\t\t\tSystem.out.println(page);\n\t\t\tassertTrue(page.length() > 1);\n\t\t\tassertTrue(page.contains(\"method1\"));\n\t\t\tassertTrue(!page.contains(\"getField1\"));\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail();\n\t\t}\n\t}", "signature": "void testHelpClassPattern()", "full_signature": "@Test public void testHelpClassPattern()", "class_method_signature": "HelpPageCommandTest.testHelpClassPattern()", "testcase": true, "constructor": false, "invocations": ["getName", "assertTrue", "containsKey", "getBindings", "execute", "toString", "println", "assertTrue", "length", "assertTrue", "contains", "assertTrue", "contains", "printStackTrace", "fail"]}, "focal_class": {"identifier": "HelpPageCommand", "superclass": "extends AbstractCommand", "interfaces": "", "fields": [{"original_string": "private final Logger logger = Logger.getLogger(HelpPageCommand.class.getName());", "modifier": "private final", "type": "Logger", "declarator": "logger = Logger.getLogger(HelpPageCommand.class.getName())", "var_name": "logger"}, {"original_string": "public final static String HELP_COMMAND_NAME = \"h\";", "modifier": "public final static", "type": "String", "declarator": "HELP_COMMAND_NAME = \"h\"", "var_name": "HELP_COMMAND_NAME"}, {"original_string": "public final static String HELP_OBJECT_SUB_COMMAND_NAME = \"o\";", "modifier": "public final static", "type": "String", "declarator": "HELP_OBJECT_SUB_COMMAND_NAME = \"o\"", "var_name": "HELP_OBJECT_SUB_COMMAND_NAME"}, {"original_string": "public final static String HELP_CLASS_SUB_COMMAND_NAME = \"c\";", "modifier": "public final static", "type": "String", "declarator": "HELP_CLASS_SUB_COMMAND_NAME = \"c\"", "var_name": "HELP_CLASS_SUB_COMMAND_NAME"}], "methods": [{"identifier": "HelpPageCommand", "parameters": "()", "modifiers": "public", "return": "", "signature": " HelpPageCommand()", "full_signature": "public  HelpPageCommand()", "class_method_signature": "HelpPageCommand.HelpPageCommand()", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(String commandName, BufferedReader reader, BufferedWriter writer)", "modifiers": "@Override public", "return": "void", "signature": "void execute(String commandName, BufferedReader reader, BufferedWriter writer)", "full_signature": "@Override public void execute(String commandName, BufferedReader reader, BufferedWriter writer)", "class_method_signature": "HelpPageCommand.execute(String commandName, BufferedReader reader, BufferedWriter writer)", "testcase": false, "constructor": false}, {"identifier": "getHelpClass", "parameters": "(BufferedReader reader)", "modifiers": "private", "return": "String", "signature": "String getHelpClass(BufferedReader reader)", "full_signature": "private String getHelpClass(BufferedReader reader)", "class_method_signature": "HelpPageCommand.getHelpClass(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "getHelpObject", "parameters": "(BufferedReader reader)", "modifiers": "private", "return": "String", "signature": "String getHelpObject(BufferedReader reader)", "full_signature": "private String getHelpObject(BufferedReader reader)", "class_method_signature": "HelpPageCommand.getHelpObject(BufferedReader reader)", "testcase": false, "constructor": false}], "file": "py4j-java/src/main/java/py4j/commands/HelpPageCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(String commandName, BufferedReader reader, BufferedWriter writer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(String commandName, BufferedReader reader, BufferedWriter writer)\n\t\t\tthrows Py4JException, IOException {\n\t\tString returnCommand = null;\n\t\tString subCommand = safeReadLine(reader, false);\n\n\t\tif (subCommand.equals(HELP_OBJECT_SUB_COMMAND_NAME)) {\n\t\t\treturnCommand = getHelpObject(reader);\n\t\t} else if (subCommand.equals(HELP_CLASS_SUB_COMMAND_NAME)) {\n\t\t\treturnCommand = getHelpClass(reader);\n\t\t} else {\n\t\t\treturnCommand = Protocol.getOutputErrorCommand(\"Unknown Help SubCommand Name: \" + subCommand);\n\t\t}\n\t\tlogger.finest(\"Returning command: \" + returnCommand);\n\t\twriter.write(returnCommand);\n\t\twriter.flush();\n\t}", "signature": "void execute(String commandName, BufferedReader reader, BufferedWriter writer)", "full_signature": "@Override public void execute(String commandName, BufferedReader reader, BufferedWriter writer)", "class_method_signature": "HelpPageCommand.execute(String commandName, BufferedReader reader, BufferedWriter writer)", "testcase": false, "constructor": false, "invocations": ["safeReadLine", "equals", "getHelpObject", "equals", "getHelpClass", "getOutputErrorCommand", "finest", "write", "flush"]}, "repository": {"repo_id": 1045976, "url": "https://github.com/bartdag/py4j", "language": "Java", "is_fork": false, "fork_count": 141, "stargazer_count": 737, "size": 16415, "license": "licensed"}}