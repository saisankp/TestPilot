{"test_class": {"identifier": "ValidationFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SchemaValidator schemaValidator;", "modifier": "@Mock\n    private", "type": "SchemaValidator", "declarator": "schemaValidator", "var_name": "schemaValidator"}, {"original_string": "@Mock\n    private SchemaService schemaService;", "modifier": "@Mock\n    private", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "@Mock\n    private AclService aclService;", "modifier": "@Mock\n    private", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "@Mock\n    private UserService userService;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = rule()", "var_name": "mockitoRule"}, {"original_string": "private ValidationFactory validationFactory;", "modifier": "private", "type": "ValidationFactory", "declarator": "validationFactory", "var_name": "validationFactory"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/objectbundle/validation/ValidationFactoryTest.java"}, "test_case": {"identifier": "verifyValidationFactoryProcessValidationCheck", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyValidationFactoryProcessValidationCheck()\n    {\n        ObjectBundle bundle = createObjectBundle();\n\n        TypeReport typeReport = validationFactory.validateBundle( bundle, Attribute.class,\n            bundle.getObjects( Attribute.class, true ), bundle.getObjects( Attribute.class, false ) );\n\n        // verify that object has been removed from bundle\n        assertThat( bundle.getObjects( Attribute.class, false ), hasSize( 0 ) );\n        assertThat( bundle.getObjects( Attribute.class, true ), hasSize( 0 ) );\n        assertThat( typeReport.getStats().getCreated(), is( 0 ) );\n        assertThat( typeReport.getStats().getUpdated(), is( 0 ) );\n        assertThat( typeReport.getStats().getDeleted(), is( 0 ) );\n        assertThat( typeReport.getStats().getIgnored(), is( 1 ) );\n        assertThat( typeReport.getObjectReports(), hasSize( 1 ) );\n    }", "signature": "void verifyValidationFactoryProcessValidationCheck()", "full_signature": "@Test public void verifyValidationFactoryProcessValidationCheck()", "class_method_signature": "ValidationFactoryTest.verifyValidationFactoryProcessValidationCheck()", "testcase": true, "constructor": false, "invocations": ["createObjectBundle", "validateBundle", "getObjects", "getObjects", "assertThat", "getObjects", "hasSize", "assertThat", "getObjects", "hasSize", "assertThat", "getCreated", "getStats", "is", "assertThat", "getUpdated", "getStats", "is", "assertThat", "getDeleted", "getStats", "is", "assertThat", "getIgnored", "getStats", "is", "assertThat", "getObjectReports", "hasSize"]}, "focal_class": {"identifier": "ValidationFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SchemaValidator schemaValidator;", "modifier": "private final", "type": "SchemaValidator", "declarator": "schemaValidator", "var_name": "schemaValidator"}, {"original_string": "private final SchemaService schemaService;", "modifier": "private final", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "private final AclService aclService;", "modifier": "private final", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final Map<ImportStrategy, List<Class<? extends ValidationCheck>>> validatorMap;", "modifier": "private final", "type": "Map<ImportStrategy, List<Class<? extends ValidationCheck>>>", "declarator": "validatorMap", "var_name": "validatorMap"}, {"original_string": "private List<ObjectBundleHook> objectBundleHooks;", "modifier": "private", "type": "List<ObjectBundleHook>", "declarator": "objectBundleHooks", "var_name": "objectBundleHooks"}], "methods": [{"identifier": "ValidationFactory", "parameters": "( SchemaValidator schemaValidator, SchemaService schemaService, AclService aclService,\n        UserService userService, List<ObjectBundleHook> objectBundleHooks,\n        Map<ImportStrategy, List<Class<? extends ValidationCheck>>> validatorMap )", "modifiers": "public", "return": "", "signature": " ValidationFactory( SchemaValidator schemaValidator, SchemaService schemaService, AclService aclService,\n        UserService userService, List<ObjectBundleHook> objectBundleHooks,\n        Map<ImportStrategy, List<Class<? extends ValidationCheck>>> validatorMap )", "full_signature": "public  ValidationFactory( SchemaValidator schemaValidator, SchemaService schemaService, AclService aclService,\n        UserService userService, List<ObjectBundleHook> objectBundleHooks,\n        Map<ImportStrategy, List<Class<? extends ValidationCheck>>> validatorMap )", "class_method_signature": "ValidationFactory.ValidationFactory( SchemaValidator schemaValidator, SchemaService schemaService, AclService aclService,\n        UserService userService, List<ObjectBundleHook> objectBundleHooks,\n        Map<ImportStrategy, List<Class<? extends ValidationCheck>>> validatorMap )", "testcase": false, "constructor": true}, {"identifier": "validateBundle", "parameters": "( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "modifiers": "public", "return": "TypeReport", "signature": "TypeReport validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "full_signature": "public TypeReport validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "class_method_signature": "ValidationFactory.validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "testcase": false, "constructor": false}, {"identifier": "addStatistics", "parameters": "( TypeReport typeReport, ObjectBundle bundle,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "modifiers": "private", "return": "TypeReport", "signature": "TypeReport addStatistics( TypeReport typeReport, ObjectBundle bundle,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "full_signature": "private TypeReport addStatistics( TypeReport typeReport, ObjectBundle bundle,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "class_method_signature": "ValidationFactory.addStatistics( TypeReport typeReport, ObjectBundle bundle,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "testcase": false, "constructor": false}, {"identifier": "removeFromBundle", "parameters": "( Class<? extends IdentifiableObject> klass, ValidationContext ctx,\n        ObjectBundle bundle )", "modifiers": "private", "return": "void", "signature": "void removeFromBundle( Class<? extends IdentifiableObject> klass, ValidationContext ctx,\n        ObjectBundle bundle )", "full_signature": "private void removeFromBundle( Class<? extends IdentifiableObject> klass, ValidationContext ctx,\n        ObjectBundle bundle )", "class_method_signature": "ValidationFactory.removeFromBundle( Class<? extends IdentifiableObject> klass, ValidationContext ctx,\n        ObjectBundle bundle )", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "private", "return": "ValidationContext", "signature": "ValidationContext getContext()", "full_signature": "private ValidationContext getContext()", "class_method_signature": "ValidationFactory.getContext()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/objectbundle/validation/ValidationFactory.java"}, "focal_method": {"identifier": "validateBundle", "parameters": "( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "modifiers": "public", "return": "TypeReport", "body": "public TypeReport validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )\n    {\n        ValidationContext ctx = getContext();\n        TypeReport typeReport = new ValidationRunner( validatorMap.get( bundle.getImportMode() ) )\n            .executeValidationChain( bundle, klass, persistedObjects, nonPersistedObjects, ctx );\n\n        // Remove invalid objects from the bundle\n        removeFromBundle( klass, ctx, bundle );\n\n        return addStatistics( typeReport, bundle, persistedObjects, nonPersistedObjects );\n    }", "signature": "TypeReport validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "full_signature": "public TypeReport validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "class_method_signature": "ValidationFactory.validateBundle( ObjectBundle bundle, Class<? extends IdentifiableObject> klass,\n        List<IdentifiableObject> persistedObjects, List<IdentifiableObject> nonPersistedObjects )", "testcase": false, "constructor": false, "invocations": ["getContext", "executeValidationChain", "get", "getImportMode", "removeFromBundle", "addStatistics"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}