{"test_class": {"identifier": "SchemaCacheTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/xml/src/test/java/org/geotools/xml/resolver/SchemaCacheTest.java"}, "test_case": {"identifier": "delete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void delete() throws Exception {\n        (new File(\"target/test/a/b/c\")).mkdirs();\n        (new File(\"target/test/a/b/d/e/f\")).mkdirs();\n        File f = new File(\"target/test/a/b/d/e/f/temp.txt\");\n        PrintWriter printWriter = null;\n        try {\n            printWriter = new PrintWriter(f);\n            printWriter.println(\"Some text\");\n        } finally {\n            if (printWriter != null) {\n                printWriter.close();\n            }\n        }\n        Assert.assertTrue((new File(\"target/test/a/b/d/e/f/temp.txt\")).exists());\n        SchemaCache.delete(new File(\"target/test/a\"));\n        Assert.assertFalse((new File(\"target/test/a\")).exists());\n    }", "signature": "void delete()", "full_signature": "@Test public void delete()", "class_method_signature": "SchemaCacheTest.delete()", "testcase": true, "constructor": false, "invocations": ["mkdirs", "mkdirs", "println", "close", "assertTrue", "exists", "delete", "assertFalse", "exists"]}, "focal_class": {"identifier": "SchemaCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = org.geotools.util.logging.Logging\n            .getLogger(SchemaCache.class.getPackage().getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = org.geotools.util.logging.Logging\n            .getLogger(SchemaCache.class.getPackage().getName())", "var_name": "LOGGER"}, {"original_string": "private static final int DEFAULT_DOWNLOAD_BLOCK_SIZE = 4096;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_DOWNLOAD_BLOCK_SIZE = 4096", "var_name": "DEFAULT_DOWNLOAD_BLOCK_SIZE"}, {"original_string": "private static final boolean DEFAULT_KEEP_QUERY = true;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_KEEP_QUERY = true", "var_name": "DEFAULT_KEEP_QUERY"}, {"original_string": "private static final String[] GEOSERVER_DATA_DIRECTORY_FILENAMES = { \"global.xml\", \"wcs.xml\",\n            \"wfs.xml\", \"wms.xml\" };", "modifier": "private static final", "type": "String[]", "declarator": "GEOSERVER_DATA_DIRECTORY_FILENAMES = { \"global.xml\", \"wcs.xml\",\n            \"wfs.xml\", \"wms.xml\" }", "var_name": "GEOSERVER_DATA_DIRECTORY_FILENAMES"}, {"original_string": "private static final String[] GEOSERVER_DATA_DIRECTORY_SUBDIRECTORIES = { \"styles\",\n            \"workspaces\" };", "modifier": "private static final", "type": "String[]", "declarator": "GEOSERVER_DATA_DIRECTORY_SUBDIRECTORIES = { \"styles\",\n            \"workspaces\" }", "var_name": "GEOSERVER_DATA_DIRECTORY_SUBDIRECTORIES"}, {"original_string": "private static final String CACHE_DIRECTORY_NAME = \"app-schema-cache\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_DIRECTORY_NAME = \"app-schema-cache\"", "var_name": "CACHE_DIRECTORY_NAME"}, {"original_string": "private static boolean automaticConfigurationEnabled = true;", "modifier": "private static", "type": "boolean", "declarator": "automaticConfigurationEnabled = true", "var_name": "automaticConfigurationEnabled"}, {"original_string": "private final File directory;", "modifier": "private final", "type": "File", "declarator": "directory", "var_name": "directory"}, {"original_string": "private final boolean download;", "modifier": "private final", "type": "boolean", "declarator": "download", "var_name": "download"}, {"original_string": "private final boolean keepQuery;", "modifier": "private final", "type": "boolean", "declarator": "keepQuery", "var_name": "keepQuery"}, {"original_string": "private static int downloadTimeout = 60000;", "modifier": "private static", "type": "int", "declarator": "downloadTimeout = 60000", "var_name": "downloadTimeout"}], "methods": [{"identifier": "SchemaCache", "parameters": "(File directory, boolean download)", "modifiers": "public", "return": "", "signature": " SchemaCache(File directory, boolean download)", "full_signature": "public  SchemaCache(File directory, boolean download)", "class_method_signature": "SchemaCache.SchemaCache(File directory, boolean download)", "testcase": false, "constructor": true}, {"identifier": "SchemaCache", "parameters": "(File directory, boolean download, boolean keepQuery)", "modifiers": "public", "return": "", "signature": " SchemaCache(File directory, boolean download, boolean keepQuery)", "full_signature": "public  SchemaCache(File directory, boolean download, boolean keepQuery)", "class_method_signature": "SchemaCache.SchemaCache(File directory, boolean download, boolean keepQuery)", "testcase": false, "constructor": true}, {"identifier": "getDirectory", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getDirectory()", "full_signature": "public File getDirectory()", "class_method_signature": "SchemaCache.getDirectory()", "testcase": false, "constructor": false}, {"identifier": "getTempDirectory", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getTempDirectory()", "full_signature": "public File getTempDirectory()", "class_method_signature": "SchemaCache.getTempDirectory()", "testcase": false, "constructor": false}, {"identifier": "isDownloadAllowed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDownloadAllowed()", "full_signature": "public boolean isDownloadAllowed()", "class_method_signature": "SchemaCache.isDownloadAllowed()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(File file)", "modifiers": "static", "return": "void", "signature": "void delete(File file)", "full_signature": "static void delete(File file)", "class_method_signature": "SchemaCache.delete(File file)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(File file, byte[] bytes)", "modifiers": "static", "return": "void", "signature": "void store(File file, byte[] bytes)", "full_signature": "static void store(File file, byte[] bytes)", "class_method_signature": "SchemaCache.store(File file, byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(String location)", "modifiers": "static", "return": "byte[]", "signature": "byte[] download(String location)", "full_signature": "static byte[] download(String location)", "class_method_signature": "SchemaCache.download(String location)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(URI location)", "modifiers": "static", "return": "byte[]", "signature": "byte[] download(URI location)", "full_signature": "static byte[] download(URI location)", "class_method_signature": "SchemaCache.download(URI location)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(URI location, int blockSize)", "modifiers": "static", "return": "byte[]", "signature": "byte[] download(URI location, int blockSize)", "full_signature": "static byte[] download(URI location, int blockSize)", "class_method_signature": "SchemaCache.download(URI location, int blockSize)", "testcase": false, "constructor": false}, {"identifier": "resolveLocation", "parameters": "(String location)", "modifiers": "public", "return": "String", "signature": "String resolveLocation(String location)", "full_signature": "public String resolveLocation(String location)", "class_method_signature": "SchemaCache.resolveLocation(String location)", "testcase": false, "constructor": false}, {"identifier": "buildAutomaticallyConfiguredUsingFileUrl", "parameters": "(URL url)", "modifiers": "public static", "return": "SchemaCache", "signature": "SchemaCache buildAutomaticallyConfiguredUsingFileUrl(URL url)", "full_signature": "public static SchemaCache buildAutomaticallyConfiguredUsingFileUrl(URL url)", "class_method_signature": "SchemaCache.buildAutomaticallyConfiguredUsingFileUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "disableAutomaticConfiguration", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void disableAutomaticConfiguration()", "full_signature": "public static void disableAutomaticConfiguration()", "class_method_signature": "SchemaCache.disableAutomaticConfiguration()", "testcase": false, "constructor": false}, {"identifier": "enableAutomaticConfiguration", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void enableAutomaticConfiguration()", "full_signature": "public static void enableAutomaticConfiguration()", "class_method_signature": "SchemaCache.enableAutomaticConfiguration()", "testcase": false, "constructor": false}, {"identifier": "isAutomaticConfigurationEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isAutomaticConfigurationEnabled()", "full_signature": "public static boolean isAutomaticConfigurationEnabled()", "class_method_signature": "SchemaCache.isAutomaticConfigurationEnabled()", "testcase": false, "constructor": false}, {"identifier": "isSuitableDirectoryToContainCache", "parameters": "(File directory)", "modifiers": "static", "return": "boolean", "signature": "boolean isSuitableDirectoryToContainCache(File directory)", "full_signature": "static boolean isSuitableDirectoryToContainCache(File directory)", "class_method_signature": "SchemaCache.isSuitableDirectoryToContainCache(File directory)", "testcase": false, "constructor": false}], "file": "modules/library/xml/src/main/java/org/geotools/xml/resolver/SchemaCache.java"}, "focal_method": {"identifier": "delete", "parameters": "(File file)", "modifiers": "static", "return": "void", "body": "static void delete(File file) {\n        if (file.isDirectory()) {\n            for (File f : file.listFiles()) {\n                delete(f);\n            }\n        }\n        file.delete();\n    }", "signature": "void delete(File file)", "full_signature": "static void delete(File file)", "class_method_signature": "SchemaCache.delete(File file)", "testcase": false, "constructor": false, "invocations": ["isDirectory", "listFiles", "delete", "delete"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}