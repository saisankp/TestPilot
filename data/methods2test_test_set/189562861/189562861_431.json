{"test_class": {"identifier": "PropertySourcesUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-spring/src/test/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtilsTest.java"}, "test_case": {"identifier": "testGetSubProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSubProperties() {\n\n        MutablePropertySources propertySources = new MutablePropertySources();\n\n        Map<String, Object> source = new HashMap<String, Object>();\n        Map<String, Object> source2 = new HashMap<String, Object>();\n\n        MapPropertySource propertySource = new MapPropertySource(\"propertySource\", source);\n        MapPropertySource propertySource2 = new MapPropertySource(\"propertySource2\", source2);\n\n        propertySources.addLast(propertySource);\n        propertySources.addLast(propertySource2);\n\n        Map<String, Object> result = PropertySourcesUtils.getSubProperties(propertySources, \"user\");\n\n        Assert.assertEquals(Collections.emptyMap(), result);\n\n        source.put(\"age\", \"31\");\n        source.put(\"user.name\", \"Mercy\");\n        source.put(\"user.age\", \"${age}\");\n\n        source2.put(\"user.name\", \"mercyblitz\");\n        source2.put(\"user.age\", \"32\");\n\n        Map<String, Object> expected = new HashMap<String, Object>();\n        expected.put(\"name\", \"Mercy\");\n        expected.put(\"age\", \"31\");\n\n        result = PropertySourcesUtils.getSubProperties(propertySources, \"user\");\n\n        Assert.assertEquals(expected, result);\n\n        result = PropertySourcesUtils.getSubProperties(propertySources, \"\");\n\n        Assert.assertEquals(Collections.emptyMap(), result);\n\n        result = PropertySourcesUtils.getSubProperties(propertySources, \"no-exists\");\n\n        Assert.assertEquals(Collections.emptyMap(), result);\n\n    }", "signature": "void testGetSubProperties()", "full_signature": "@Test public void testGetSubProperties()", "class_method_signature": "PropertySourcesUtilsTest.testGetSubProperties()", "testcase": true, "constructor": false, "invocations": ["addLast", "addLast", "getSubProperties", "assertEquals", "emptyMap", "put", "put", "put", "put", "put", "put", "put", "getSubProperties", "assertEquals", "getSubProperties", "assertEquals", "emptyMap", "getSubProperties", "assertEquals", "emptyMap"]}, "focal_class": {"identifier": "PropertySourcesUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getSubProperties", "parameters": "(Iterable<PropertySource<?>> propertySources, String prefix)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "full_signature": "public static Map<String, Object> getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "class_method_signature": "PropertySourcesUtils.getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "testcase": false, "constructor": false}, {"identifier": "getSubProperties", "parameters": "(ConfigurableEnvironment environment, String prefix)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getSubProperties(ConfigurableEnvironment environment, String prefix)", "full_signature": "public static Map<String, Object> getSubProperties(ConfigurableEnvironment environment, String prefix)", "class_method_signature": "PropertySourcesUtils.getSubProperties(ConfigurableEnvironment environment, String prefix)", "testcase": false, "constructor": false}, {"identifier": "normalizePrefix", "parameters": "(String prefix)", "modifiers": "public static", "return": "String", "signature": "String normalizePrefix(String prefix)", "full_signature": "public static String normalizePrefix(String prefix)", "class_method_signature": "PropertySourcesUtils.normalizePrefix(String prefix)", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java"}, "focal_method": {"identifier": "getSubProperties", "parameters": "(Iterable<PropertySource<?>> propertySources, String prefix)", "modifiers": "public static", "return": "Map<String, Object>", "body": "public static Map<String, Object> getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix) {\n\n        // Non-Extension AbstractEnvironment\n        AbstractEnvironment environment = new AbstractEnvironment() {\n        };\n\n        MutablePropertySources mutablePropertySources = environment.getPropertySources();\n\n        for (PropertySource<?> source : propertySources) {\n            mutablePropertySources.addLast(source);\n        }\n\n        return getSubProperties(environment, prefix);\n\n    }", "signature": "Map<String, Object> getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "full_signature": "public static Map<String, Object> getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "class_method_signature": "PropertySourcesUtils.getSubProperties(Iterable<PropertySource<?>> propertySources, String prefix)", "testcase": false, "constructor": false, "invocations": ["getPropertySources", "addLast", "getSubProperties"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}