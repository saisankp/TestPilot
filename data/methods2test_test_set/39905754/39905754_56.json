{"test_class": {"identifier": "MedianTest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2014/2014-12-18-ListOfListsMedian-Java-Randori/src/test/java/murex/pop/dojo/listoflistsmedian/MedianTest.java"}, "test_case": {"identifier": "min_of_a_list", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void\n   min_of_a_list() {\n      Assert.assertEquals(1, Median.min(Lists.<List<Integer>>newArrayList(\n        Lists.newArrayList(1, 3, 2))));\n   }", "signature": "void min_of_a_list()", "full_signature": "@Test public void min_of_a_list()", "class_method_signature": "MedianTest.min_of_a_list()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "min", "newArrayList", "newArrayList"]}, "focal_class": {"identifier": "Median", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "of", "parameters": "(List<List<Integer>> ints)", "modifiers": "public static", "return": "int", "signature": "int of(List<List<Integer>> ints)", "full_signature": "public static int of(List<List<Integer>> ints)", "class_method_signature": "Median.of(List<List<Integer>> ints)", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "(List<List<Integer>> lists)", "modifiers": "public static", "return": "int", "signature": "int max(List<List<Integer>> lists)", "full_signature": "public static int max(List<List<Integer>> lists)", "class_method_signature": "Median.max(List<List<Integer>> lists)", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "(List<List<Integer>> lists)", "modifiers": "public static", "return": "int", "signature": "int min(List<List<Integer>> lists)", "full_signature": "public static int min(List<List<Integer>> lists)", "class_method_signature": "Median.min(List<List<Integer>> lists)", "testcase": false, "constructor": false}, {"identifier": "ordinality", "parameters": "(int pivot, List<List<Integer>> lists)", "modifiers": "public static", "return": "Ordinality", "signature": "Ordinality ordinality(int pivot, List<List<Integer>> lists)", "full_signature": "public static Ordinality ordinality(int pivot, List<List<Integer>> lists)", "class_method_signature": "Median.ordinality(int pivot, List<List<Integer>> lists)", "testcase": false, "constructor": false}, {"identifier": "listOrdinality", "parameters": "(int pivot, Iterable<Integer> list)", "modifiers": "private static", "return": "Ordinality", "signature": "Ordinality listOrdinality(int pivot, Iterable<Integer> list)", "full_signature": "private static Ordinality listOrdinality(int pivot, Iterable<Integer> list)", "class_method_signature": "Median.listOrdinality(int pivot, Iterable<Integer> list)", "testcase": false, "constructor": false}], "file": "Paris/2014/2014-12-18-ListOfListsMedian-Java-Randori/src/main/java/murex/pop/dojo/listoflistsmedian/Median.java"}, "focal_method": {"identifier": "min", "parameters": "(List<List<Integer>> lists)", "modifiers": "public static", "return": "int", "body": "public static int min(List<List<Integer>> lists) {\n      int min = Integer.MAX_VALUE;\n\n      for (List<Integer> integerList : lists) {\n         min = Math.min(min, Collections.min(integerList));\n      }\n      return min;\n   }", "signature": "int min(List<List<Integer>> lists)", "full_signature": "public static int min(List<List<Integer>> lists)", "class_method_signature": "Median.min(List<List<Integer>> lists)", "testcase": false, "constructor": false, "invocations": ["min", "min"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}