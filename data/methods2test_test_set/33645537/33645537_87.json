{"test_class": {"identifier": "MoveElementsToPositionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MoveElementsToPositions moveElementsToPosition;", "modifier": "private", "type": "MoveElementsToPositions", "declarator": "moveElementsToPosition", "var_name": "moveElementsToPosition"}], "file": "algs/src/test/java/com/github/pedrovgs/problem40/MoveElementsToPositionsTest.java"}, "test_case": {"identifier": "shouldMoveElementsToTheCorrectPosition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldMoveElementsToTheCorrectPosition() {\n    int[] input = { 2, 3, 1, 0 };\n\n    moveElementsToPosition.move(input);\n\n    assertNumbersAreInTheCorrectPosition(input);\n  }", "signature": "void shouldMoveElementsToTheCorrectPosition()", "full_signature": "@Test public void shouldMoveElementsToTheCorrectPosition()", "class_method_signature": "MoveElementsToPositionsTest.shouldMoveElementsToTheCorrectPosition()", "testcase": true, "constructor": false, "invocations": ["move", "assertNumbersAreInTheCorrectPosition"]}, "focal_class": {"identifier": "MoveElementsToPositions", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "move", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void move(int[] array)", "full_signature": "public void move(int[] array)", "class_method_signature": "MoveElementsToPositions.move(int[] array)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[] array)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[] array)", "full_signature": "private void validateInput(int[] array)", "class_method_signature": "MoveElementsToPositions.validateInput(int[] array)", "testcase": false, "constructor": false}, {"identifier": "checkIfElementIsInsideTheValidInterval", "parameters": "(int number, int length)", "modifiers": "private", "return": "void", "signature": "void checkIfElementIsInsideTheValidInterval(int number, int length)", "full_signature": "private void checkIfElementIsInsideTheValidInterval(int number, int length)", "class_method_signature": "MoveElementsToPositions.checkIfElementIsInsideTheValidInterval(int number, int length)", "testcase": false, "constructor": false}, {"identifier": "swapElements", "parameters": "(int[] array, int i, int j)", "modifiers": "private", "return": "void", "signature": "void swapElements(int[] array, int i, int j)", "full_signature": "private void swapElements(int[] array, int i, int j)", "class_method_signature": "MoveElementsToPositions.swapElements(int[] array, int i, int j)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem40/MoveElementsToPositions.java"}, "focal_method": {"identifier": "move", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "body": "public void move(int[] array) {\n    validateInput(array);\n    int size = array.length;\n    boolean swap = true;\n    while (swap) {\n      swap = false;\n      for (int i = 0; i < size - 1; i++) {\n        if (array[i] > array[i + 1]) {\n          swap = true;\n          swapElements(array, i, i + 1);\n        }\n      }\n    }\n  }", "signature": "void move(int[] array)", "full_signature": "public void move(int[] array)", "class_method_signature": "MoveElementsToPositions.move(int[] array)", "testcase": false, "constructor": false, "invocations": ["validateInput", "swapElements"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}