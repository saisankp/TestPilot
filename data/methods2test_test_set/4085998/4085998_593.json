{"test_class": {"identifier": "GroupResourceEndpointControllerTest", "superclass": "extends AbstractSCIMTest", "interfaces": "", "fields": [{"original_string": "private GroupResourceEndpointController controller;", "modifier": "private", "type": "GroupResourceEndpointController", "declarator": "controller", "var_name": "controller"}, {"original_string": "private ObjectMapper mapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "perun-scim/src/test/java/cz/metacentrum/perun/scim/api/endpoints/GroupResourceEndpointControllerTest.java"}, "test_case": {"identifier": "testGetGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetGroup() throws Exception {\n\t\tGroupSCIM group = prepareExpectedResult();\n\t\tString expectedJson = mapper.writeValueAsString(group);\n\t\tResponse expectedResponse = Response.ok(expectedJson).build();\n\n\t\tResponse result = controller.getGroup(group.getId().toString());\n\n\t\tif (result.getStatus() != 200) {\n\t\t\tfail();\n\t\t}\n\n\t\tassertEquals(\"expected group should equal with result obtained from SCIM REST API\",\n\t\t\t\texpectedResponse.getEntity(), result.getEntity());\n\t}", "signature": "void testGetGroup()", "full_signature": "@Test public void testGetGroup()", "class_method_signature": "GroupResourceEndpointControllerTest.testGetGroup()", "testcase": true, "constructor": false, "invocations": ["prepareExpectedResult", "writeValueAsString", "build", "ok", "getGroup", "toString", "getId", "getStatus", "fail", "assertEquals", "getEntity", "getEntity"]}, "focal_class": {"identifier": "GroupResourceEndpointController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(GroupResourceEndpointController.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GroupResourceEndpointController.class)", "var_name": "log"}, {"original_string": "private final PerunSession session;", "modifier": "private final", "type": "PerunSession", "declarator": "session", "var_name": "session"}, {"original_string": "private final PerunBl perunBl;", "modifier": "private final", "type": "PerunBl", "declarator": "perunBl", "var_name": "perunBl"}], "methods": [{"identifier": "GroupResourceEndpointController", "parameters": "(PerunSession session)", "modifiers": "public", "return": "", "signature": " GroupResourceEndpointController(PerunSession session)", "full_signature": "public  GroupResourceEndpointController(PerunSession session)", "class_method_signature": "GroupResourceEndpointController.GroupResourceEndpointController(PerunSession session)", "testcase": false, "constructor": true}, {"identifier": "getGroup", "parameters": "(String identifier)", "modifiers": "public", "return": "Response", "signature": "Response getGroup(String identifier)", "full_signature": "public Response getGroup(String identifier)", "class_method_signature": "GroupResourceEndpointController.getGroup(String identifier)", "testcase": false, "constructor": false}, {"identifier": "mapPerunGroupToScimGroup", "parameters": "(Group perunGroup)", "modifiers": "private", "return": "GroupSCIM", "signature": "GroupSCIM mapPerunGroupToScimGroup(Group perunGroup)", "full_signature": "private GroupSCIM mapPerunGroupToScimGroup(Group perunGroup)", "class_method_signature": "GroupResourceEndpointController.mapPerunGroupToScimGroup(Group perunGroup)", "testcase": false, "constructor": false}, {"identifier": "mapPerunMembersToScimMembers", "parameters": "(List<Member> perunMembers)", "modifiers": "private", "return": "List<MemberSCIM>", "signature": "List<MemberSCIM> mapPerunMembersToScimMembers(List<Member> perunMembers)", "full_signature": "private List<MemberSCIM> mapPerunMembersToScimMembers(List<Member> perunMembers)", "class_method_signature": "GroupResourceEndpointController.mapPerunMembersToScimMembers(List<Member> perunMembers)", "testcase": false, "constructor": false}], "file": "perun-scim/src/main/java/cz/metacentrum/perun/scim/api/endpoints/GroupResourceEndpointController.java"}, "focal_method": {"identifier": "getGroup", "parameters": "(String identifier)", "modifiers": "public", "return": "Response", "body": "public Response getGroup(String identifier) throws SCIMException {\n\t\tlog.debug(\"Calling SCIM REST method getGroup by id {}\", identifier);\n\t\tif (identifier == null) {\n\t\t\tthrow new NullPointerException(\"identifier is null\");\n\t\t}\n\t\ttry {\n\t\t\tGroup perunGroup = perunBl.getGroupsManagerBl().getGroupById(session, Integer.parseInt(identifier));\n\t\t\tObjectMapper mapper = new ObjectMapper();\n\t\t\treturn Response.ok(mapper.writeValueAsString(mapPerunGroupToScimGroup(perunGroup))).build();\n\t\t} catch (InternalErrorException ex) {\n\t\t\tlog.warn(\"Internal exception occured while getting group with id {}.\", identifier);\n\t\t\treturn Response.status(Response.Status.INTERNAL_SERVER_ERROR).build();\n\t\t} catch (GroupNotExistsException ex) {\n\t\t\tlog.warn(\"Group with id {} does not exists.\", identifier);\n\t\t\treturn Response.status(Response.Status.NOT_FOUND).build();\n\t\t} catch (IOException ex) {\n\t\t\tthrow new SCIMException(\"Cannot convert group resource to json string\", ex);\n\t\t}\n\t}", "signature": "Response getGroup(String identifier)", "full_signature": "public Response getGroup(String identifier)", "class_method_signature": "GroupResourceEndpointController.getGroup(String identifier)", "testcase": false, "constructor": false, "invocations": ["debug", "getGroupById", "getGroupsManagerBl", "parseInt", "build", "ok", "writeValueAsString", "mapPerunGroupToScimGroup", "warn", "build", "status", "warn", "build", "status"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}