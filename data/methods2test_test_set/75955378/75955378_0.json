{"test_class": {"identifier": "GenericJsonEventTest", "superclass": "", "interfaces": "", "fields": [], "file": "deserializers/src/test/java/com/nextdoor/bender/deserializer/json/GenericJsonEventTest.java"}, "test_case": {"identifier": "testSetField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSetField() throws FieldNotFoundException {\n    GenericJsonEvent event = getEmptyEvent();\n    event.setField(\"$.foo\", \"bar\");\n    JsonObject payload = (JsonObject) event.getPayload();\n\n    assertEquals(\"bar\", payload.get(\"foo\").getAsString());\n    assertEquals(\"b\", payload.get(\"a\").getAsString());\n  }", "signature": "void testSetField()", "full_signature": "@Test public void testSetField()", "class_method_signature": "GenericJsonEventTest.testSetField()", "testcase": true, "constructor": false, "invocations": ["getEmptyEvent", "setField", "getPayload", "assertEquals", "getAsString", "get", "assertEquals", "getAsString", "get"]}, "focal_class": {"identifier": "GenericJsonEvent", "superclass": "", "interfaces": "implements DeserializedEvent", "fields": [{"original_string": "private JsonObject payload;", "modifier": "private", "type": "JsonObject", "declarator": "payload", "var_name": "payload"}], "methods": [{"identifier": "GenericJsonEvent", "parameters": "(JsonObject payload)", "modifiers": "public", "return": "", "signature": " GenericJsonEvent(JsonObject payload)", "full_signature": "public  GenericJsonEvent(JsonObject payload)", "class_method_signature": "GenericJsonEvent.GenericJsonEvent(JsonObject payload)", "testcase": false, "constructor": true}, {"identifier": "getPayload", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object getPayload()", "full_signature": "@Override public Object getPayload()", "class_method_signature": "GenericJsonEvent.getPayload()", "testcase": false, "constructor": false}, {"identifier": "setPayload", "parameters": "(JsonObject payload)", "modifiers": "protected", "return": "void", "signature": "void setPayload(JsonObject payload)", "full_signature": "protected void setPayload(JsonObject payload)", "class_method_signature": "GenericJsonEvent.setPayload(JsonObject payload)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(String field)", "modifiers": "@Override public", "return": "Object", "signature": "Object getField(String field)", "full_signature": "@Override public Object getField(String field)", "class_method_signature": "GenericJsonEvent.getField(String field)", "testcase": false, "constructor": false}, {"identifier": "setPayload", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void setPayload(Object object)", "full_signature": "@Override public void setPayload(Object object)", "class_method_signature": "GenericJsonEvent.setPayload(Object object)", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(String fieldName, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setField(String fieldName, Object value)", "full_signature": "@Override public void setField(String fieldName, Object value)", "class_method_signature": "GenericJsonEvent.setField(String fieldName, Object value)", "testcase": false, "constructor": false}, {"identifier": "getFieldAsString", "parameters": "(String fieldName)", "modifiers": "@Override public", "return": "String", "signature": "String getFieldAsString(String fieldName)", "full_signature": "@Override public String getFieldAsString(String fieldName)", "class_method_signature": "GenericJsonEvent.getFieldAsString(String fieldName)", "testcase": false, "constructor": false}, {"identifier": "removeField", "parameters": "(String fieldName)", "modifiers": "@Override public", "return": "Object", "signature": "Object removeField(String fieldName)", "full_signature": "@Override public Object removeField(String fieldName)", "class_method_signature": "GenericJsonEvent.removeField(String fieldName)", "testcase": false, "constructor": false}, {"identifier": "deleteField", "parameters": "(String fieldName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteField(String fieldName)", "full_signature": "@Override public void deleteField(String fieldName)", "class_method_signature": "GenericJsonEvent.deleteField(String fieldName)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "GenericJsonEvent", "signature": "GenericJsonEvent copy()", "full_signature": "@Override public GenericJsonEvent copy()", "class_method_signature": "GenericJsonEvent.copy()", "testcase": false, "constructor": false}], "file": "deserializers/src/main/java/com/nextdoor/bender/deserializer/json/GenericJsonEvent.java"}, "focal_method": {"identifier": "setField", "parameters": "(String fieldName, Object value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void setField(String fieldName, Object value) throws FieldNotFoundException {\n    if (this.payload == null) {\n      throw new FieldNotFoundException(\"payload is null\");\n    }\n\n    if (!fieldName.startsWith(\"$.\")) {\n      fieldName = \"$.\" + fieldName;\n    }\n\n    JsonPathProvider.setField(this.payload, value, fieldName);\n  }", "signature": "void setField(String fieldName, Object value)", "full_signature": "@Override public void setField(String fieldName, Object value)", "class_method_signature": "GenericJsonEvent.setField(String fieldName, Object value)", "testcase": false, "constructor": false, "invocations": ["startsWith", "setField"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}