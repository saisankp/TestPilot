{"test_class": {"identifier": "ArpPacketHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockitoAnnotations.Mock\n    private PacketDispatcher packetDispatcher;", "modifier": "@MockitoAnnotations.Mock\n    private", "type": "PacketDispatcher", "declarator": "packetDispatcher", "var_name": "packetDispatcher"}, {"original_string": "private ArpPacketHandler arpPacketHandler;", "modifier": "private", "type": "ArpPacketHandler", "declarator": "arpPacketHandler", "var_name": "arpPacketHandler"}], "file": "arphandler/src/test/java/org/opendaylight/l2switch/arphandler/core/ArpPacketHandlerTest.java"}, "test_case": {"identifier": "onArpPacketReceivedTest_EmptyPacketChain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onArpPacketReceivedTest_EmptyPacketChain() throws Exception {\n        ArrayList<PacketChain> packetChainList = new ArrayList<PacketChain>();\n        ArpPacketReceived arpReceived = new ArpPacketReceivedBuilder().setPacketChain(packetChainList).build();\n        arpPacketHandler.onArpPacketReceived(arpReceived);\n        verify(packetDispatcher, times(0)).dispatchPacket(any(byte[].class), any(NodeConnectorRef.class),\n                any(MacAddress.class), any(MacAddress.class));\n    }", "signature": "void onArpPacketReceivedTest_EmptyPacketChain()", "full_signature": "@Test public void onArpPacketReceivedTest_EmptyPacketChain()", "class_method_signature": "ArpPacketHandlerTest.onArpPacketReceivedTest_EmptyPacketChain()", "testcase": true, "constructor": false, "invocations": ["build", "setPacketChain", "onArpPacketReceived", "dispatchPacket", "verify", "times", "any", "any", "any", "any"]}, "focal_class": {"identifier": "ArpPacketHandler", "superclass": "", "interfaces": "implements ArpPacketListener", "fields": [{"original_string": "private final PacketDispatcher packetDispatcher;", "modifier": "private final", "type": "PacketDispatcher", "declarator": "packetDispatcher", "var_name": "packetDispatcher"}], "methods": [{"identifier": "ArpPacketHandler", "parameters": "(PacketDispatcher packetDispatcher)", "modifiers": "public", "return": "", "signature": " ArpPacketHandler(PacketDispatcher packetDispatcher)", "full_signature": "public  ArpPacketHandler(PacketDispatcher packetDispatcher)", "class_method_signature": "ArpPacketHandler.ArpPacketHandler(PacketDispatcher packetDispatcher)", "testcase": false, "constructor": true}, {"identifier": "onArpPacketReceived", "parameters": "(ArpPacketReceived packetReceived)", "modifiers": "@Override public", "return": "void", "signature": "void onArpPacketReceived(ArpPacketReceived packetReceived)", "full_signature": "@Override public void onArpPacketReceived(ArpPacketReceived packetReceived)", "class_method_signature": "ArpPacketHandler.onArpPacketReceived(ArpPacketReceived packetReceived)", "testcase": false, "constructor": false}], "file": "arphandler/src/main/java/org/opendaylight/l2switch/arphandler/core/ArpPacketHandler.java"}, "focal_method": {"identifier": "onArpPacketReceived", "parameters": "(ArpPacketReceived packetReceived)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onArpPacketReceived(ArpPacketReceived packetReceived) {\n        if (packetReceived == null || packetReceived.getPacketChain() == null) {\n            return;\n        }\n\n        RawPacket rawPacket = null;\n        EthernetPacket ethernetPacket = null;\n        ArpPacket arpPacket = null;\n        for (PacketChain packetChain : packetReceived.getPacketChain()) {\n            if (packetChain.getPacket() instanceof RawPacket) {\n                rawPacket = (RawPacket) packetChain.getPacket();\n            } else if (packetChain.getPacket() instanceof EthernetPacket) {\n                ethernetPacket = (EthernetPacket) packetChain.getPacket();\n            } else if (packetChain.getPacket() instanceof ArpPacket) {\n                arpPacket = (ArpPacket) packetChain.getPacket();\n            }\n        }\n        if (rawPacket == null || ethernetPacket == null || arpPacket == null) {\n            return;\n        }\n\n        packetDispatcher.dispatchPacket(packetReceived.getPayload(), rawPacket.getIngress(),\n                ethernetPacket.getSourceMac(), ethernetPacket.getDestinationMac());\n    }", "signature": "void onArpPacketReceived(ArpPacketReceived packetReceived)", "full_signature": "@Override public void onArpPacketReceived(ArpPacketReceived packetReceived)", "class_method_signature": "ArpPacketHandler.onArpPacketReceived(ArpPacketReceived packetReceived)", "testcase": false, "constructor": false, "invocations": ["getPacketChain", "getPacketChain", "getPacket", "getPacket", "getPacket", "getPacket", "getPacket", "getPacket", "dispatchPacket", "getPayload", "getIngress", "getSourceMac", "getDestinationMac"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}