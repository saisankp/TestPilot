{"test_class": {"identifier": "TableIdParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "debezium-core/src/test/java/io/debezium/relational/TableIdParserTest.java"}, "test_case": {"identifier": "trailingSeparatorIsInvalid", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void trailingSeparatorIsInvalid() {\n        TableIdParser.parse(\"table.\");\n    }", "signature": "void trailingSeparatorIsInvalid()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void trailingSeparatorIsInvalid()", "class_method_signature": "TableIdParserTest.trailingSeparatorIsInvalid()", "testcase": true, "constructor": false, "invocations": ["parse"]}, "focal_class": {"identifier": "TableIdParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char SEPARATOR = '.';", "modifier": "private static final", "type": "char", "declarator": "SEPARATOR = '.'", "var_name": "SEPARATOR"}], "methods": [{"identifier": "parse", "parameters": "(String identifier)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> parse(String identifier)", "full_signature": "public static List<String> parse(String identifier)", "class_method_signature": "TableIdParser.parse(String identifier)", "testcase": false, "constructor": false}], "file": "debezium-core/src/main/java/io/debezium/relational/TableIdParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String identifier)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> parse(String identifier) {\n        TokenStream stream = new TokenStream(identifier, new TableIdTokenizer(identifier), true);\n        stream.start();\n\n        List<String> parts = new ArrayList<>();\n\n        while (stream.hasNext()) {\n            parts.add(stream.consume().replaceAll(\"''\", \"'\").replaceAll(\"\\\"\\\"\", \"\\\"\").replaceAll(\"``\", \"`\"));\n        }\n\n        return parts;\n    }", "signature": "List<String> parse(String identifier)", "full_signature": "public static List<String> parse(String identifier)", "class_method_signature": "TableIdParser.parse(String identifier)", "testcase": false, "constructor": false, "invocations": ["start", "hasNext", "add", "replaceAll", "replaceAll", "replaceAll", "consume"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}