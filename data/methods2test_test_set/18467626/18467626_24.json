{"test_class": {"identifier": "EnumUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "library/src/test/java/com/github/devnied/emvnfccard/utils/EnumUtilsTest.java"}, "test_case": {"identifier": "testEnum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEnum() {\n\n\t\tAssertions.assertThat(EnumUtils.getValue(100000, CountryCodeEnum.class)).isNull();\n\t\tAssertions.assertThat(EnumUtils.getValue(250, CountryCodeEnum.class)).isEqualTo(CountryCodeEnum.FR);\n\n\t}", "signature": "void testEnum()", "full_signature": "@Test public void testEnum()", "class_method_signature": "EnumUtilsTest.testEnum()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getValue", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "EnumUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EnumUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EnumUtils.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "getValue", "parameters": "(final int pKey, final Class<T> pClass)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T getValue(final int pKey, final Class<T> pClass)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T getValue(final int pKey, final Class<T> pClass)", "class_method_signature": "EnumUtils.getValue(final int pKey, final Class<T> pClass)", "testcase": false, "constructor": false}, {"identifier": "EnumUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " EnumUtils()", "full_signature": "private  EnumUtils()", "class_method_signature": "EnumUtils.EnumUtils()", "testcase": false, "constructor": true}], "file": "library/src/main/java/com/github/devnied/emvnfccard/utils/EnumUtils.java"}, "focal_method": {"identifier": "getValue", "parameters": "(final int pKey, final Class<T> pClass)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "body": "@SuppressWarnings(\"unchecked\")\n\tpublic static <T extends IKeyEnum> T getValue(final int pKey, final Class<T> pClass) {\n\t\tfor (IKeyEnum val : pClass.getEnumConstants()) {\n\t\t\tif (val.getKey() == pKey) {\n\t\t\t\treturn (T) val;\n\t\t\t}\n\t\t}\n\t\tLOGGER.error(\"Unknow value:\" + pKey + \" for Enum:\" + pClass.getName());\n\t\treturn null;\n\t}", "signature": "T getValue(final int pKey, final Class<T> pClass)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T getValue(final int pKey, final Class<T> pClass)", "class_method_signature": "EnumUtils.getValue(final int pKey, final Class<T> pClass)", "testcase": false, "constructor": false, "invocations": ["getEnumConstants", "getKey", "error", "getName"]}, "repository": {"repo_id": 18467626, "url": "https://github.com/devnied/EMV-NFC-Paycard-Enrollment", "language": "Java", "is_fork": false, "fork_count": 425, "stargazer_count": 934, "size": 4233, "license": "licensed"}}