{"test_class": {"identifier": "urn_perun_group_resource_attribute_def_def_projectNameTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private urn_perun_group_resource_attribute_def_def_projectName classInstance;", "modifier": "private", "type": "urn_perun_group_resource_attribute_def_def_projectName", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private Attribute attributeToCheck;", "modifier": "private", "type": "Attribute", "declarator": "attributeToCheck", "var_name": "attributeToCheck"}, {"original_string": "private Group group = new Group();", "modifier": "private", "type": "Group", "declarator": "group = new Group()", "var_name": "group"}, {"original_string": "private Resource resource = new Resource();", "modifier": "private", "type": "Resource", "declarator": "resource = new Resource()", "var_name": "resource"}, {"original_string": "private PerunSessionImpl sess;", "modifier": "private", "type": "PerunSessionImpl", "declarator": "sess", "var_name": "sess"}, {"original_string": "private Attribute reqAttribute;", "modifier": "private", "type": "Attribute", "declarator": "reqAttribute", "var_name": "reqAttribute"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_resource_attribute_def_def_projectNameTest.java"}, "test_case": {"identifier": "testSemanticsMultipleGroupsWithSameName", "parameters": "()", "modifiers": "@Test(expected = WrongReferenceAttributeValueException.class) public", "return": "void", "body": "@Test(expected = WrongReferenceAttributeValueException.class)\n\tpublic void testSemanticsMultipleGroupsWithSameName() throws Exception {\n\t\tSystem.out.println(\"testSemanticsMultipleGroupsWithSameName()\");\n\t\tattributeToCheck.setValue(\"correct_value\");\n\t\treqAttribute.setValue(\"correct_value\");\n\n\t\tclassInstance.checkAttributeSemantics(sess, group, resource, attributeToCheck);\n\t}", "signature": "void testSemanticsMultipleGroupsWithSameName()", "full_signature": "@Test(expected = WrongReferenceAttributeValueException.class) public void testSemanticsMultipleGroupsWithSameName()", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectNameTest.testSemanticsMultipleGroupsWithSameName()", "testcase": true, "constructor": false, "invocations": ["println", "setValue", "setValue", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_group_resource_attribute_def_def_projectName", "superclass": "extends GroupResourceAttributesModuleAbstract", "interfaces": "implements GroupResourceAttributesModuleImplApi", "fields": [{"original_string": "private static final String A_R_projectsBasePath = AttributesManager.NS_RESOURCE_ATTR_DEF + \":projectsBasePath\";", "modifier": "private static final", "type": "String", "declarator": "A_R_projectsBasePath = AttributesManager.NS_RESOURCE_ATTR_DEF + \":projectsBasePath\"", "var_name": "A_R_projectsBasePath"}, {"original_string": "private static final String A_GR_projectName = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":projectName\";", "modifier": "private static final", "type": "String", "declarator": "A_GR_projectName = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":projectName\"", "var_name": "A_GR_projectName"}, {"original_string": "private static final Pattern pattern = Pattern.compile(\"^[-_a-zA-Z0-9]+$\");", "modifier": "private static final", "type": "Pattern", "declarator": "pattern = Pattern.compile(\"^[-_a-zA-Z0-9]+$\")", "var_name": "pattern"}], "methods": [{"identifier": "checkAttributeSyntax", "parameters": "(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSyntax(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "full_signature": "@Override public void checkAttributeSyntax(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectName.checkAttributeSyntax(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectName.checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "@Override public List<String> getDependencies()", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectName.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectName.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_resource_attribute_def_def_projectName.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n\t\tString name = attribute.valueAsString();\n\t\tif (name == null) return;\n\n\t\t//Prepare this resource projectsBasePath\n\t\tAttribute thisResourceProjectsBasePath;\n\t\ttry {\n\t\t\tthisResourceProjectsBasePath = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, A_R_projectsBasePath);\n\t\t} catch (AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(\"Attribute projectBasePath not exists!\", ex);\n\t\t}\n\n\t\t//Prepare value of this resource projectsBasePath\n\t\tString thisResourceProjectBasePathValue;\n\t\tif(thisResourceProjectsBasePath.getValue() != null) {\n\t\t\tthisResourceProjectBasePathValue = thisResourceProjectsBasePath.valueAsString();\n\t\t} else {\n\t\t\tthrow new WrongReferenceAttributeValueException(attribute, thisResourceProjectsBasePath, group, resource, resource, null, \"Resource must have set projectsBasePath if attribute projectName for it's group need to be set.\");\n\t\t}\n\n\t\t//Get All Resources with the same project_base_path\n\t\tFacility facility = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, resource);\n\t\tList<Resource> resources = sess.getPerunBl().getFacilitiesManagerBl().getAssignedResources(sess, facility);\n\t\tresources.remove(resource);\n\n\t\t//Remove all resources which has other\n\t\tIterator<Resource> iterator = resources.iterator();\n\t\twhile(iterator.hasNext()) {\n\t\t\tResource r = iterator.next();\n\t\t\tAttribute otherResourceProjectsBasePath;\n\t\t\ttry {\n\t\t\t\totherResourceProjectsBasePath = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, r, A_R_projectsBasePath);\n\t\t\t} catch (AttributeNotExistsException ex) {\n\t\t\t\tthrow new ConsistencyErrorException(\"Attribute projectBasePath not exists!\", ex);\n\t\t\t}\n\n\t\t\tif(otherResourceProjectsBasePath.getValue() != null) {\n\t\t\t\tString otherResourceProjectsBasePathValue = otherResourceProjectsBasePath.valueAsString();\n\t\t\t\tif(!thisResourceProjectBasePathValue.equals(otherResourceProjectsBasePathValue)) iterator.remove();\n\t\t\t} else {\n\t\t\t\t//If projectsBasePath is null, also remove resource\n\t\t\t\titerator.remove();\n\t\t\t}\n\t\t}\n\n\t\t//For all resources with the same project_base_path look for groups with the same projectName\n\t\tfor(Resource r: resources) {\n\t\t\tList<Group> groups = sess.getPerunBl().getGroupsManagerBl().getAssignedGroupsToResource(sess, r);\n\t\t\t//Our group may also be part of assigned Group, so it needs to be removed\n\t\t\tgroups.remove(group);\n\t\t\tfor(Group g: groups) {\n\t\t\t\tAttribute groupProjectName;\n\t\t\t\ttry {\n\t\t\t\t\tgroupProjectName = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, r, g, A_GR_projectName);\n\t\t\t\t} catch (AttributeNotExistsException ex) {\n\t\t\t\t\tthrow new ConsistencyErrorException(\"Attribute projectName not exists!\", ex);\n\t\t\t\t} catch (GroupResourceMismatchException ex) {\n\t\t\t\t\tthrow new InternalErrorException(ex);\n\t\t\t\t}\n\n\t\t\t\tString groupProjectNameValue = null;\n\t\t\t\tif(groupProjectName.getValue() != null) {\n\t\t\t\t\tgroupProjectNameValue = groupProjectName.valueAsString();\n\t\t\t\t}\n\n\t\t\t\t//If the name is somewhere same, exception must be thrown\n\t\t\t\tif(name.equals(groupProjectNameValue)) {\n\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, groupProjectName, group, resource, g, r, \"Group \" + group + \" and \" + g + \" have the same projectName in the same projectsBasePath.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "class_method_signature": "urn_perun_group_resource_attribute_def_def_projectName.checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["valueAsString", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "getFacility", "getResourcesManagerBl", "getPerunBl", "getAssignedResources", "getFacilitiesManagerBl", "getPerunBl", "remove", "iterator", "hasNext", "next", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "equals", "remove", "remove", "getAssignedGroupsToResource", "getGroupsManagerBl", "getPerunBl", "remove", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "equals"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}