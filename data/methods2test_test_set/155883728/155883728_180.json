{"test_class": {"identifier": "NothingTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/net/adamcin/oakpal/api/NothingTest.java"}, "test_case": {"identifier": "testVoidToNothing1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testVoidToNothing1() throws Exception {\n        final String sentinel = \"sentinel\";\n        final CompletableFuture<String> latch = new CompletableFuture<>();\n        final Consumer<String> consumer = latch::complete;\n        final Nothing nothing = Nothing.voidToNothing1(consumer).apply(sentinel);\n        assertTrue(\"future should be done: \" + latch, latch.isDone());\n        assertSame(\"nothing should be returned\", Nothing.instance, nothing);\n        assertSame(\"latched should be same as input\", sentinel, latch.get());\n    }", "signature": "void testVoidToNothing1()", "full_signature": "@Test public void testVoidToNothing1()", "class_method_signature": "NothingTest.testVoidToNothing1()", "testcase": true, "constructor": false, "invocations": ["apply", "voidToNothing1", "assertTrue", "isDone", "assertSame", "assertSame", "get"]}, "focal_class": {"identifier": "Nothing", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Nothing instance = new Nothing();", "modifier": "public static final", "type": "Nothing", "declarator": "instance = new Nothing()", "var_name": "instance"}], "methods": [{"identifier": "Nothing", "parameters": "()", "modifiers": "private", "return": "", "signature": " Nothing()", "full_signature": "private  Nothing()", "class_method_signature": "Nothing.Nothing()", "testcase": false, "constructor": true}, {"identifier": "voidToNothing1", "parameters": "(final @NotNull Consumer<? super T> consumer)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Function<T, Nothing>", "signature": "Function<T, Nothing> voidToNothing1(final @NotNull Consumer<? super T> consumer)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Function<T, Nothing> voidToNothing1(final @NotNull Consumer<? super T> consumer)", "class_method_signature": "Nothing.voidToNothing1(final @NotNull Consumer<? super T> consumer)", "testcase": false, "constructor": false}, {"identifier": "voidToNothing2", "parameters": "(final @NotNull BiConsumer<? super T, ? super U> consumer)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "BiFunction<T, U, Nothing>", "signature": "BiFunction<T, U, Nothing> voidToNothing2(final @NotNull BiConsumer<? super T, ? super U> consumer)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static BiFunction<T, U, Nothing> voidToNothing2(final @NotNull BiConsumer<? super T, ? super U> consumer)", "class_method_signature": "Nothing.voidToNothing2(final @NotNull BiConsumer<? super T, ? super U> consumer)", "testcase": false, "constructor": false}, {"identifier": "combine", "parameters": "(final @Nullable Nothing nothing)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "Nothing", "signature": "Nothing combine(final @Nullable Nothing nothing)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public Nothing combine(final @Nullable Nothing nothing)", "class_method_signature": "Nothing.combine(final @Nullable Nothing nothing)", "testcase": false, "constructor": false}], "file": "api/src/main/java/net/adamcin/oakpal/api/Nothing.java"}, "focal_method": {"identifier": "voidToNothing1", "parameters": "(final @NotNull Consumer<? super T> consumer)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Function<T, Nothing>", "body": "@SuppressWarnings(\"WeakerAccess\")\n    public static <T> Function<T, Nothing>\n    voidToNothing1(final @NotNull Consumer<? super T> consumer) {\n        return input -> {\n            consumer.accept(input);\n            return Nothing.instance;\n        };\n    }", "signature": "Function<T, Nothing> voidToNothing1(final @NotNull Consumer<? super T> consumer)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Function<T, Nothing> voidToNothing1(final @NotNull Consumer<? super T> consumer)", "class_method_signature": "Nothing.voidToNothing1(final @NotNull Consumer<? super T> consumer)", "testcase": false, "constructor": false, "invocations": ["accept"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}