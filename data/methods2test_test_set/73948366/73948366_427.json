{"test_class": {"identifier": "InstanceUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/instance_provider/src/test/java/com/yahoo/athenz/instance/provider/impl/InstanceUtilsTest.java"}, "test_case": {"identifier": "testGetInstanceProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstanceProperty() {\n\n        assertNull(InstanceUtils.getInstanceProperty(null,  \"cloudAccount\"));\n\n        HashMap<String, String> attributes = new HashMap<>();\n        assertNull(InstanceUtils.getInstanceProperty(attributes,  \"cloudAccount\"));\n\n        attributes.put(\"testAccount\", \"1235\");\n        assertNull(InstanceUtils.getInstanceProperty(attributes,  \"cloudAccount\"));\n\n        attributes.put(\"cloudAccount\", \"1235\");\n        assertEquals(InstanceUtils.getInstanceProperty(attributes,  \"cloudAccount\"), \"1235\");\n    }", "signature": "void testGetInstanceProperty()", "full_signature": "@Test public void testGetInstanceProperty()", "class_method_signature": "InstanceUtilsTest.testGetInstanceProperty()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getInstanceProperty", "assertNull", "getInstanceProperty", "put", "assertNull", "getInstanceProperty", "put", "assertEquals", "getInstanceProperty"]}, "focal_class": {"identifier": "InstanceUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(InstanceUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(InstanceUtils.class)", "var_name": "LOGGER"}, {"original_string": "static final String ZTS_CERT_INSTANCE_ID        = \".instanceid.athenz.\";", "modifier": "static final", "type": "String", "declarator": "ZTS_CERT_INSTANCE_ID        = \".instanceid.athenz.\"", "var_name": "ZTS_CERT_INSTANCE_ID"}, {"original_string": "static final String ZTS_CERT_INSTANCE_ID_URI    = \"athenz://instanceid/\";", "modifier": "static final", "type": "String", "declarator": "ZTS_CERT_INSTANCE_ID_URI    = \"athenz://instanceid/\"", "var_name": "ZTS_CERT_INSTANCE_ID_URI"}], "methods": [{"identifier": "getInstanceProperty", "parameters": "(final Map<String, String> attributes,\n            final String propertyName)", "modifiers": "public static", "return": "String", "signature": "String getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "full_signature": "public static String getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "class_method_signature": "InstanceUtils.getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "validateCertRequestSanDnsNames", "parameters": "(final Map<String, String> attributes,\n                                                         final String domain, final String service, final String dnsSuffix,\n                                                         StringBuilder instanceId)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateCertRequestSanDnsNames(final Map<String, String> attributes,\n                                                         final String domain, final String service, final String dnsSuffix,\n                                                         StringBuilder instanceId)", "full_signature": "public static boolean validateCertRequestSanDnsNames(final Map<String, String> attributes,\n                                                         final String domain, final String service, final String dnsSuffix,\n                                                         StringBuilder instanceId)", "class_method_signature": "InstanceUtils.validateCertRequestSanDnsNames(final Map<String, String> attributes,\n                                                         final String domain, final String service, final String dnsSuffix,\n                                                         StringBuilder instanceId)", "testcase": false, "constructor": false}, {"identifier": "validateCertRequestUriId", "parameters": "(final Map<String, String> attributes,\n            StringBuilder instanceId)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateCertRequestUriId(final Map<String, String> attributes,\n            StringBuilder instanceId)", "full_signature": "public static boolean validateCertRequestUriId(final Map<String, String> attributes,\n            StringBuilder instanceId)", "class_method_signature": "InstanceUtils.validateCertRequestUriId(final Map<String, String> attributes,\n            StringBuilder instanceId)", "testcase": false, "constructor": false}], "file": "libs/java/instance_provider/src/main/java/com/yahoo/athenz/instance/provider/impl/InstanceUtils.java"}, "focal_method": {"identifier": "getInstanceProperty", "parameters": "(final Map<String, String> attributes,\n            final String propertyName)", "modifiers": "public static", "return": "String", "body": "public static String getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName) {\n\n        if (attributes == null) {\n            LOGGER.error(\"getInstanceProperty: no attributes available\");\n            return null;\n        }\n\n        final String value = attributes.get(propertyName);\n        if (value == null) {\n            LOGGER.error(\"getInstanceProperty: \" + propertyName + \" attribute not available\");\n            return null;\n        }\n\n        return value;\n    }", "signature": "String getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "full_signature": "public static String getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "class_method_signature": "InstanceUtils.getInstanceProperty(final Map<String, String> attributes,\n            final String propertyName)", "testcase": false, "constructor": false, "invocations": ["error", "get", "error"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}