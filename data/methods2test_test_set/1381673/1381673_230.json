{"test_class": {"identifier": "DefaultGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultGenerator g;", "modifier": "private", "type": "DefaultGenerator", "declarator": "g", "var_name": "g"}], "file": "drools-templates/src/test/java/org/drools/template/parser/DefaultGeneratorTest.java"}, "test_case": {"identifier": "testGenerate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGenerate() {\n        g.generate(\"rt2\", new Row());\n        g.generate(\"rt1\", new Row());\n        String drl = g.getDrl();\n        assertEquals(\"Test template 2\\n\\nTest template 1\\n\\n\", drl);\n    }", "signature": "void testGenerate()", "full_signature": "@Test public void testGenerate()", "class_method_signature": "DefaultGeneratorTest.testGenerate()", "testcase": true, "constructor": false, "invocations": ["generate", "generate", "getDrl", "assertEquals"]}, "focal_class": {"identifier": "DefaultGenerator", "superclass": "", "interfaces": "implements\n        Generator", "fields": [{"original_string": "private Map<String, RuleTemplate> ruleTemplates;", "modifier": "private", "type": "Map<String, RuleTemplate>", "declarator": "ruleTemplates", "var_name": "ruleTemplates"}, {"original_string": "private TemplateRegistry registry = new SimpleTemplateRegistry();", "modifier": "private", "type": "TemplateRegistry", "declarator": "registry = new SimpleTemplateRegistry()", "var_name": "registry"}, {"original_string": "private List<String> rules = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "rules = new ArrayList<String>()", "var_name": "rules"}], "methods": [{"identifier": "DefaultGenerator", "parameters": "( final Map<String, RuleTemplate> t )", "modifiers": "public", "return": "", "signature": " DefaultGenerator( final Map<String, RuleTemplate> t )", "full_signature": "public  DefaultGenerator( final Map<String, RuleTemplate> t )", "class_method_signature": "DefaultGenerator.DefaultGenerator( final Map<String, RuleTemplate> t )", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "( String templateName,\n                          Row row )", "modifiers": "public", "return": "void", "signature": "void generate( String templateName,\n                          Row row )", "full_signature": "public void generate( String templateName,\n                          Row row )", "class_method_signature": "DefaultGenerator.generate( String templateName,\n                          Row row )", "testcase": false, "constructor": false}, {"identifier": "initializePriorCommaConstraints", "parameters": "( final Map<String, Object> vars )", "modifiers": "private", "return": "void", "signature": "void initializePriorCommaConstraints( final Map<String, Object> vars )", "full_signature": "private void initializePriorCommaConstraints( final Map<String, Object> vars )", "class_method_signature": "DefaultGenerator.initializePriorCommaConstraints( final Map<String, Object> vars )", "testcase": false, "constructor": false}, {"identifier": "initializeHasPriorJunctionConstraint", "parameters": "( final Map<String, Object> vars )", "modifiers": "private", "return": "void", "signature": "void initializeHasPriorJunctionConstraint( final Map<String, Object> vars )", "full_signature": "private void initializeHasPriorJunctionConstraint( final Map<String, Object> vars )", "class_method_signature": "DefaultGenerator.initializeHasPriorJunctionConstraint( final Map<String, Object> vars )", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "( String templateName )", "modifiers": "private", "return": "CompiledTemplate", "signature": "CompiledTemplate getTemplate( String templateName )", "full_signature": "private CompiledTemplate getTemplate( String templateName )", "class_method_signature": "DefaultGenerator.getTemplate( String templateName )", "testcase": false, "constructor": false}, {"identifier": "getDrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDrl()", "full_signature": "public String getDrl()", "class_method_signature": "DefaultGenerator.getDrl()", "testcase": false, "constructor": false}], "file": "drools-templates/src/main/java/org/drools/template/parser/DefaultGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "( String templateName,\n                          Row row )", "modifiers": "public", "return": "void", "body": "public void generate( String templateName,\n                          Row row ) {\n        try {\n            CompiledTemplate template = getTemplate( templateName );\n            VariableResolverFactory factory = new MapVariableResolverFactory();\n            Map<String, Object> vars = new HashMap<String, Object>();\n\n            initializePriorCommaConstraints( vars );\n            initializeHasPriorJunctionConstraint( vars );\n\n            vars.put( \"row\",\n                      row );\n\n            for ( Cell cell : row.getCells() ) {\n                cell.addValue( vars );\n            }\n\n            String drl = String.valueOf( TemplateRuntime.execute( template,\n                                                                  vars,\n                                                                  factory,\n                                                                  registry ) );\n\n            rules.add( drl );\n        } catch ( Exception e ) {\n            throw new RuntimeException( e );\n        }\n    }", "signature": "void generate( String templateName,\n                          Row row )", "full_signature": "public void generate( String templateName,\n                          Row row )", "class_method_signature": "DefaultGenerator.generate( String templateName,\n                          Row row )", "testcase": false, "constructor": false, "invocations": ["getTemplate", "initializePriorCommaConstraints", "initializeHasPriorJunctionConstraint", "put", "getCells", "addValue", "valueOf", "execute", "add"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}