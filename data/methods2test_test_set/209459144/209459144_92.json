{"test_class": {"identifier": "SysUserServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SysUserServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SysUserServiceTest.class)", "var_name": "LOG"}, {"original_string": "private SysUserService userService = new SysUserService();", "modifier": "private", "type": "SysUserService", "declarator": "userService = new SysUserService()", "var_name": "userService"}], "file": "submarine-server/server-core/src/test/java/org/apache/submarine/server/workbench/database/service/SysUserServiceTest.java"}, "test_case": {"identifier": "getUserByNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getUserByNameTest() throws Exception {\n    SysUser sysUser = new SysUser();\n    sysUser.setUserName(\"user_name\");\n    sysUser.setRealName(\"real_name\");\n    sysUser.setPassword(\"password\");\n    sysUser.setAvatar(\"avatar\");\n    sysUser.setDeleted(1);\n    sysUser.setPhone(\"123456789\");\n    sysUser.setRoleCode(\"roleCode\");\n    sysUser.setEmail(\"test@submarine.org\");\n    sysUser.setBirthday(new Date());\n    sysUser.setCreateTime(new Date());\n    sysUser.setUpdateTime(new Date());\n\n    Boolean ret = userService.add(sysUser);\n    assertTrue(ret);\n\n    SysUser user = userService.getUserByName(\"user_name\", \"password\");\n    // assertNotNull(user.getDeptName());\n    assertEquals(sysUser.getRealName(), user.getRealName());\n    assertEquals(sysUser.getUserName(), user.getUserName());\n    assertEquals(sysUser.getId(), user.getId());\n  }", "signature": "void getUserByNameTest()", "full_signature": "@Test public void getUserByNameTest()", "class_method_signature": "SysUserServiceTest.getUserByNameTest()", "testcase": true, "constructor": false, "invocations": ["setUserName", "setRealName", "setPassword", "setAvatar", "setDeleted", "setPhone", "setRoleCode", "setEmail", "setBirthday", "setCreateTime", "setUpdateTime", "add", "assertTrue", "getUserByName", "assertEquals", "getRealName", "getRealName", "assertEquals", "getUserName", "getUserName", "assertEquals", "getId", "getId"]}, "focal_class": {"identifier": "SysUserService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SysUserService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SysUserService.class)", "var_name": "LOG"}, {"original_string": "private static String GET_USER_BY_NAME_STATEMENT\n      = \"org.apache.submarine.server.workbench.database.mappers.SysUserMapper.getUserByName\";", "modifier": "private static", "type": "String", "declarator": "GET_USER_BY_NAME_STATEMENT\n      = \"org.apache.submarine.server.workbench.database.mappers.SysUserMapper.getUserByName\"", "var_name": "GET_USER_BY_NAME_STATEMENT"}], "methods": [{"identifier": "getUserByName", "parameters": "(String name, String password)", "modifiers": "public", "return": "SysUser", "signature": "SysUser getUserByName(String name, String password)", "full_signature": "public SysUser getUserByName(String name, String password)", "class_method_signature": "SysUserService.getUserByName(String name, String password)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(HashMap<String, String> mapParams)", "modifiers": "public", "return": "SysUser", "signature": "SysUser login(HashMap<String, String> mapParams)", "full_signature": "public SysUser login(HashMap<String, String> mapParams)", "class_method_signature": "SysUserService.login(HashMap<String, String> mapParams)", "testcase": false, "constructor": false}, {"identifier": "queryPageList", "parameters": "(String userName,\n                                     String email,\n                                     String deptCode,\n                                     String column,\n                                     String field,\n                                     int pageNo,\n                                     int pageSize)", "modifiers": "public", "return": "List<SysUser>", "signature": "List<SysUser> queryPageList(String userName,\n                                     String email,\n                                     String deptCode,\n                                     String column,\n                                     String field,\n                                     int pageNo,\n                                     int pageSize)", "full_signature": "public List<SysUser> queryPageList(String userName,\n                                     String email,\n                                     String deptCode,\n                                     String column,\n                                     String field,\n                                     int pageNo,\n                                     int pageSize)", "class_method_signature": "SysUserService.queryPageList(String userName,\n                                     String email,\n                                     String deptCode,\n                                     String column,\n                                     String field,\n                                     int pageNo,\n                                     int pageSize)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(SysUser sysUser)", "modifiers": "public", "return": "boolean", "signature": "boolean add(SysUser sysUser)", "full_signature": "public boolean add(SysUser sysUser)", "class_method_signature": "SysUserService.add(SysUser sysUser)", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "(SysUser sysUser)", "modifiers": "public", "return": "boolean", "signature": "boolean edit(SysUser sysUser)", "full_signature": "public boolean edit(SysUser sysUser)", "class_method_signature": "SysUserService.edit(SysUser sysUser)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String id)", "modifiers": "public", "return": "boolean", "signature": "boolean delete(String id)", "full_signature": "public boolean delete(String id)", "class_method_signature": "SysUserService.delete(String id)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(SysUser user)", "modifiers": "public", "return": "boolean", "signature": "boolean changePassword(SysUser user)", "full_signature": "public boolean changePassword(SysUser user)", "class_method_signature": "SysUserService.changePassword(SysUser user)", "testcase": false, "constructor": false}], "file": "submarine-server/server-core/src/main/java/org/apache/submarine/server/workbench/database/service/SysUserService.java"}, "focal_method": {"identifier": "getUserByName", "parameters": "(String name, String password)", "modifiers": "public", "return": "SysUser", "body": "public SysUser getUserByName(String name, String password) throws Exception {\n    SysUser sysUser = null;\n    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n      HashMap<String, Object> mapParams = new HashMap<>();\n      mapParams.put(\"name\", name);\n      mapParams.put(\"password\", password);\n\n      Map<String, Object> params = new HashMap<>();\n      params.put(\"mapParams\", mapParams);\n\n      sysUser = sqlSession.selectOne(GET_USER_BY_NAME_STATEMENT, params);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      throw new Exception(e);\n    }\n    return sysUser;\n  }", "signature": "SysUser getUserByName(String name, String password)", "full_signature": "public SysUser getUserByName(String name, String password)", "class_method_signature": "SysUserService.getUserByName(String name, String password)", "testcase": false, "constructor": false, "invocations": ["getSqlSession", "put", "put", "put", "selectOne", "error", "getMessage"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}