{"test_class": {"identifier": "TagHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "openshift/message-board/message-service/src/test/java/org/hibernate/demo/message/post/core/service/TagHelperTest.java"}, "test_case": {"identifier": "testTagExtractionFrom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTagExtractionFrom() {\n\t\tList<String> tags = TagHelper.readTagFromBody( \"I'm #Fabio. How are you? #nice\" );\n\n\t\tassertEquals( 2, tags.size() );\n\t\tassertEquals( \"#Fabio\", tags.get( 0 ) );\n\t\tassertEquals( \"#nice\", tags.get( 1 ) );\n\t}", "signature": "void testTagExtractionFrom()", "full_signature": "@Test public void testTagExtractionFrom()", "class_method_signature": "TagHelperTest.testTagExtractionFrom()", "testcase": true, "constructor": false, "invocations": ["readTagFromBody", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "TagHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern TAG_PATTERN = Pattern.compile(\"(?:^|\\\\s|[\\\\p{Punct}&&[^/]])(#[\\\\p{L}0-9-_]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "TAG_PATTERN = Pattern.compile(\"(?:^|\\\\s|[\\\\p{Punct}&&[^/]])(#[\\\\p{L}0-9-_]+)\")", "var_name": "TAG_PATTERN"}], "methods": [{"identifier": "readTagFromBody", "parameters": "(String body)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readTagFromBody(String body)", "full_signature": "public static List<String> readTagFromBody(String body)", "class_method_signature": "TagHelper.readTagFromBody(String body)", "testcase": false, "constructor": false}], "file": "openshift/message-board/message-service/src/main/java/org/hibernate/demo/message/post/core/service/TagHelper.java"}, "focal_method": {"identifier": "readTagFromBody", "parameters": "(String body)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> readTagFromBody(String body) {\n\t\tfinal List<String> tagValues = new ArrayList<String>();\n\t\tfinal Matcher matcher = TAG_PATTERN.matcher(body);\n\t\twhile (matcher.find()) {\n\t\t\ttagValues.add(matcher.group(1));\n\t\t}\n\t\treturn tagValues;\n\t}", "signature": "List<String> readTagFromBody(String body)", "full_signature": "public static List<String> readTagFromBody(String body)", "class_method_signature": "TagHelper.readTagFromBody(String body)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "add", "group"]}, "repository": {"repo_id": 19270555, "url": "https://github.com/hibernate/hibernate-demos", "language": "Java", "is_fork": false, "fork_count": 208, "stargazer_count": 199, "size": 12591, "license": "licensed"}}