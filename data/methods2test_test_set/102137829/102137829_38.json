{"test_class": {"identifier": "PropertyValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/domain/PropertyValueTest.java"}, "test_case": {"identifier": "shouldUnmarshallXmlToObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUnmarshallXmlToObject() throws Exception {\n        PropertyValue propertyValue = new PropertyValue(false, \"TestValue\");\n\n        String xml = \"<propertyValue Protected='False'>TestValue</propertyValue>\";\n        ByteArrayInputStream inputStream = new ByteArrayInputStream(xml.getBytes());\n        PropertyValue propertyValueUnmarshalled =\n                new SimpleXmlParser().fromXml(inputStream, new NullProtectionStrategy(), PropertyValue.class);\n\n        Assert.assertEquals(propertyValue.getValue(), propertyValueUnmarshalled.getValue());\n    }", "signature": "void shouldUnmarshallXmlToObject()", "full_signature": "@Test public void shouldUnmarshallXmlToObject()", "class_method_signature": "PropertyValueTest.shouldUnmarshallXmlToObject()", "testcase": true, "constructor": false, "invocations": ["getBytes", "fromXml", "assertEquals", "getValue", "getValue"]}, "focal_class": {"identifier": "PropertyValue", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Attribute(name = \"Protected\", required = false)\n    private Boolean isProtected;", "modifier": "@Attribute(name = \"Protected\", required = false)\n    private", "type": "Boolean", "declarator": "isProtected", "var_name": "isProtected"}, {"original_string": "@Text(required = false)\n    private String value = \"\";", "modifier": "@Text(required = false)\n    private", "type": "String", "declarator": "value = \"\"", "var_name": "value"}], "methods": [{"identifier": "PropertyValue", "parameters": "()", "modifiers": "", "return": "", "signature": " PropertyValue()", "full_signature": "  PropertyValue()", "class_method_signature": "PropertyValue.PropertyValue()", "testcase": false, "constructor": true}, {"identifier": "PropertyValue", "parameters": "(boolean isProtected, String value)", "modifiers": "public", "return": "", "signature": " PropertyValue(boolean isProtected, String value)", "full_signature": "public  PropertyValue(boolean isProtected, String value)", "class_method_signature": "PropertyValue.PropertyValue(boolean isProtected, String value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "PropertyValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "isProtected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isProtected()", "full_signature": "public boolean isProtected()", "class_method_signature": "PropertyValue.isProtected()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PropertyValue.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PropertyValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PropertyValue.equals(Object obj)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/domain/PropertyValue.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getValue() {\n        return value;\n    }", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "PropertyValue.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}