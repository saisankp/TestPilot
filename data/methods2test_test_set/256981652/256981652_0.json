{"test_class": {"identifier": "EtagGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EtagGeneratorInterface target;", "modifier": "private", "type": "EtagGeneratorInterface", "declarator": "target", "var_name": "target"}], "file": "dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/EtagGeneratorTest.java"}, "test_case": {"identifier": "shouldReturnCorrectEtag", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldReturnCorrectEtag() {\n        Assertions.assertThat(target.getEtag(1)).isEqualTo(\"6bd26b412635ad2a7bdbe07b9f2f6e8b\");\n    }", "signature": "void shouldReturnCorrectEtag()", "full_signature": "@Test void shouldReturnCorrectEtag()", "class_method_signature": "EtagGeneratorTest.shouldReturnCorrectEtag()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getEtag"]}, "focal_class": {"identifier": "EtagGenerator", "superclass": "", "interfaces": "implements EtagGeneratorInterface", "fields": [{"original_string": "private byte[] secret = new byte[]{'s', 'e', 'c', 'r', 'e', 't'};", "modifier": "private", "type": "byte[]", "declarator": "secret = new byte[]{'s', 'e', 'c', 'r', 'e', 't'}", "var_name": "secret"}], "methods": [{"identifier": "getEtag", "parameters": "(int primaryKey)", "modifiers": "@Override public", "return": "String", "signature": "String getEtag(int primaryKey)", "full_signature": "@Override public String getEtag(int primaryKey)", "class_method_signature": "EtagGenerator.getEtag(int primaryKey)", "testcase": false, "constructor": false}], "file": "dpppt-backend-sdk/dpppt-backend-sdk-data/src/main/java/org/dpppt/backend/sdk/data/EtagGenerator.java"}, "focal_method": {"identifier": "getEtag", "parameters": "(int primaryKey)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getEtag(int primaryKey) {\n        return DigestUtils.md5DigestAsHex(ByteBuffer.allocate(10).putInt(primaryKey).put(secret).array());\n    }", "signature": "String getEtag(int primaryKey)", "full_signature": "@Override public String getEtag(int primaryKey)", "class_method_signature": "EtagGenerator.getEtag(int primaryKey)", "testcase": false, "constructor": false, "invocations": ["md5DigestAsHex", "array", "put", "putInt", "allocate"]}, "repository": {"repo_id": 256981652, "url": "https://github.com/noiapp/noiapp-backend-old", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 44, "size": 652, "license": "licensed"}}