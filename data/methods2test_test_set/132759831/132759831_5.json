{"test_class": {"identifier": "CinemaDetailPresenterTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private CinemaDetailPresenter.View view;", "modifier": "@Mock private", "type": "CinemaDetailPresenter.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock private GetCinemaById useCaseGetCinemaByIdMock;", "modifier": "@Mock private", "type": "GetCinemaById", "declarator": "useCaseGetCinemaByIdMock", "var_name": "useCaseGetCinemaByIdMock"}, {"original_string": "@Mock private GetFavouriteListCinema useCaseGetFavouriteListCinema;", "modifier": "@Mock private", "type": "GetFavouriteListCinema", "declarator": "useCaseGetFavouriteListCinema", "var_name": "useCaseGetFavouriteListCinema"}, {"original_string": "@Mock private List<String> posterUrlsMock;", "modifier": "@Mock private", "type": "List<String>", "declarator": "posterUrlsMock", "var_name": "posterUrlsMock"}, {"original_string": "private static final int TEST_CINEMA_ID = 456;", "modifier": "private static final", "type": "int", "declarator": "TEST_CINEMA_ID = 456", "var_name": "TEST_CINEMA_ID"}, {"original_string": "private CinemaDetailPresenter presenter;", "modifier": "private", "type": "CinemaDetailPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "app/src/test/java/com/ru/devit/mediateka/presentation/cinemadetail/CinemaDetailPresenterTest.java"}, "test_case": {"identifier": "shouldShowPostersWhenPosterClicked", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldShowPostersWhenPosterClicked(){\n        presenter.setView(view);\n        presenter.onSmallPosterClicked(posterUrlsMock);\n\n        verify(view).showListPosters(posterUrlsMock);\n    }", "signature": "void shouldShowPostersWhenPosterClicked()", "full_signature": "@Test public void shouldShowPostersWhenPosterClicked()", "class_method_signature": "CinemaDetailPresenterTest.shouldShowPostersWhenPosterClicked()", "testcase": true, "constructor": false, "invocations": ["setView", "onSmallPosterClicked", "showListPosters", "verify"]}, "focal_class": {"identifier": "CinemaDetailPresenter", "superclass": "extends BasePresenter<CinemaDetailPresenter.View>", "interfaces": "", "fields": [{"original_string": "private int cinemaId;", "modifier": "private", "type": "int", "declarator": "cinemaId", "var_name": "cinemaId"}, {"original_string": "private boolean isFABMenuOpen;", "modifier": "private", "type": "boolean", "declarator": "isFABMenuOpen", "var_name": "isFABMenuOpen"}, {"original_string": "private Cinema cinemaInPresenter;", "modifier": "private", "type": "Cinema", "declarator": "cinemaInPresenter", "var_name": "cinemaInPresenter"}, {"original_string": "private final GetCinemaById useCaseGetCinemaById;", "modifier": "private final", "type": "GetCinemaById", "declarator": "useCaseGetCinemaById", "var_name": "useCaseGetCinemaById"}, {"original_string": "private final GetFavouriteListCinema useCaseGetFavouriteListCinema;", "modifier": "private final", "type": "GetFavouriteListCinema", "declarator": "useCaseGetFavouriteListCinema", "var_name": "useCaseGetFavouriteListCinema"}], "methods": [{"identifier": "CinemaDetailPresenter", "parameters": "(GetCinemaById useCaseGetCinemaById ,\n                                 GetFavouriteListCinema useCaseGetFavouriteListCinema)", "modifiers": "public", "return": "", "signature": " CinemaDetailPresenter(GetCinemaById useCaseGetCinemaById ,\n                                 GetFavouriteListCinema useCaseGetFavouriteListCinema)", "full_signature": "public  CinemaDetailPresenter(GetCinemaById useCaseGetCinemaById ,\n                                 GetFavouriteListCinema useCaseGetFavouriteListCinema)", "class_method_signature": "CinemaDetailPresenter.CinemaDetailPresenter(GetCinemaById useCaseGetCinemaById ,\n                                 GetFavouriteListCinema useCaseGetFavouriteListCinema)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "CinemaDetailPresenter.initialize()", "testcase": false, "constructor": false}, {"identifier": "setCinemaId", "parameters": "(int cinemaId)", "modifiers": "public", "return": "void", "signature": "void setCinemaId(int cinemaId)", "full_signature": "public void setCinemaId(int cinemaId)", "class_method_signature": "CinemaDetailPresenter.setCinemaId(int cinemaId)", "testcase": false, "constructor": false}, {"identifier": "onSmallPosterClicked", "parameters": "(List<String> posterUrls)", "modifiers": "public", "return": "void", "signature": "void onSmallPosterClicked(List<String> posterUrls)", "full_signature": "public void onSmallPosterClicked(List<String> posterUrls)", "class_method_signature": "CinemaDetailPresenter.onSmallPosterClicked(List<String> posterUrls)", "testcase": false, "constructor": false}, {"identifier": "onFABCinemaMenuClicked", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onFABCinemaMenuClicked()", "full_signature": "public void onFABCinemaMenuClicked()", "class_method_signature": "CinemaDetailPresenter.onFABCinemaMenuClicked()", "testcase": false, "constructor": false}, {"identifier": "onForegroundViewClicked", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onForegroundViewClicked()", "full_signature": "public void onForegroundViewClicked()", "class_method_signature": "CinemaDetailPresenter.onForegroundViewClicked()", "testcase": false, "constructor": false}, {"identifier": "onAddFavouriteCinemaClicked", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") public", "return": "void", "signature": "void onAddFavouriteCinemaClicked()", "full_signature": "@SuppressLint(\"CheckResult\") public void onAddFavouriteCinemaClicked()", "class_method_signature": "CinemaDetailPresenter.onAddFavouriteCinemaClicked()", "testcase": false, "constructor": false}, {"identifier": "onShowedDateAndTimePickerDialog", "parameters": "(DateAndTimeInfo dateAndTimeInfo)", "modifiers": "public", "return": "void", "signature": "void onShowedDateAndTimePickerDialog(DateAndTimeInfo dateAndTimeInfo)", "full_signature": "public void onShowedDateAndTimePickerDialog(DateAndTimeInfo dateAndTimeInfo)", "class_method_signature": "CinemaDetailPresenter.onShowedDateAndTimePickerDialog(DateAndTimeInfo dateAndTimeInfo)", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onDestroy()", "full_signature": "public void onDestroy()", "class_method_signature": "CinemaDetailPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "hideFABMenu", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void hideFABMenu()", "full_signature": "private void hideFABMenu()", "class_method_signature": "CinemaDetailPresenter.hideFABMenu()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/presentation/cinemadetail/CinemaDetailPresenter.java"}, "focal_method": {"identifier": "onSmallPosterClicked", "parameters": "(List<String> posterUrls)", "modifiers": "public", "return": "void", "body": "public void onSmallPosterClicked(List<String> posterUrls) {\n        getView().showListPosters(posterUrls);\n    }", "signature": "void onSmallPosterClicked(List<String> posterUrls)", "full_signature": "public void onSmallPosterClicked(List<String> posterUrls)", "class_method_signature": "CinemaDetailPresenter.onSmallPosterClicked(List<String> posterUrls)", "testcase": false, "constructor": false, "invocations": ["showListPosters", "getView"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}