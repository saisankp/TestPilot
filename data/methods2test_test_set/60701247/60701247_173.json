{"test_class": {"identifier": "ConfigureLogcatHeaderDialogTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final AndroidProjectRule myRule = AndroidProjectRule.inMemory();", "modifier": "@Rule\n  public final", "type": "AndroidProjectRule", "declarator": "myRule = AndroidProjectRule.inMemory()", "var_name": "myRule"}, {"original_string": "private ConfigureLogcatHeaderDialog myDialog;", "modifier": "private", "type": "ConfigureLogcatHeaderDialog", "declarator": "myDialog", "var_name": "myDialog"}], "file": "android/testSrc/com/android/tools/idea/logcat/ConfigureLogcatHeaderDialogTest.java"}, "test_case": {"identifier": "configureLogcatHeaderDialog", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void configureLogcatHeaderDialog() {\n    assertTrue(myDialog.getShowDateAndTimeCheckBox().isSelected());\n    assertFalse(myDialog.getShowAsSecondsSinceEpochCheckBox().isSelected());\n    assertTrue(myDialog.getShowProcessAndThreadIdsCheckBox().isSelected());\n    assertTrue(myDialog.getShowPackageNameCheckBox().isSelected());\n    assertTrue(myDialog.getShowTagCheckBox().isSelected());\n\n    assertEquals(\"2018-02-06 14:16:28.555 123-456/com.android.sample I/SampleTag: This is a sample message\",\n                 myDialog.getSampleLabel().getText());\n\n    assertEquals(\"\", myDialog.getFormat());\n  }", "signature": "void configureLogcatHeaderDialog()", "full_signature": "@Test public void configureLogcatHeaderDialog()", "class_method_signature": "ConfigureLogcatHeaderDialogTest.configureLogcatHeaderDialog()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isSelected", "getShowDateAndTimeCheckBox", "assertFalse", "isSelected", "getShowAsSecondsSinceEpochCheckBox", "assertTrue", "isSelected", "getShowProcessAndThreadIdsCheckBox", "assertTrue", "isSelected", "getShowPackageNameCheckBox", "assertTrue", "isSelected", "getShowTagCheckBox", "assertEquals", "getText", "getSampleLabel", "assertEquals", "getFormat"]}, "focal_class": {"identifier": "ConfigureLogcatHeaderDialog", "superclass": "extends DialogWrapper", "interfaces": "", "fields": [{"original_string": "private static final LogCatMessage SAMPLE = new LogCatMessage(\n    new LogCatHeader(LogLevel.INFO, 123, 456, \"com.android.sample\", \"SampleTag\", Instant.ofEpochMilli(1_517_955_388_555L)),\n    \"This is a sample message\");", "modifier": "private static final", "type": "LogCatMessage", "declarator": "SAMPLE = new LogCatMessage(\n    new LogCatHeader(LogLevel.INFO, 123, 456, \"com.android.sample\", \"SampleTag\", Instant.ofEpochMilli(1_517_955_388_555L)),\n    \"This is a sample message\")", "var_name": "SAMPLE"}, {"original_string": "private final ZoneId myTimeZone;", "modifier": "private final", "type": "ZoneId", "declarator": "myTimeZone", "var_name": "myTimeZone"}, {"original_string": "private final AbstractButton myShowDateAndTimeCheckBox;", "modifier": "private final", "type": "AbstractButton", "declarator": "myShowDateAndTimeCheckBox", "var_name": "myShowDateAndTimeCheckBox"}, {"original_string": "private final AbstractButton myShowAsSecondsSinceEpochCheckBox;", "modifier": "private final", "type": "AbstractButton", "declarator": "myShowAsSecondsSinceEpochCheckBox", "var_name": "myShowAsSecondsSinceEpochCheckBox"}, {"original_string": "private final AbstractButton myShowProcessAndThreadIdsCheckBox;", "modifier": "private final", "type": "AbstractButton", "declarator": "myShowProcessAndThreadIdsCheckBox", "var_name": "myShowProcessAndThreadIdsCheckBox"}, {"original_string": "private final AbstractButton myShowPackageNameCheckBox;", "modifier": "private final", "type": "AbstractButton", "declarator": "myShowPackageNameCheckBox", "var_name": "myShowPackageNameCheckBox"}, {"original_string": "private final AbstractButton myShowTagCheckBox;", "modifier": "private final", "type": "AbstractButton", "declarator": "myShowTagCheckBox", "var_name": "myShowTagCheckBox"}, {"original_string": "private final JLabel mySampleLabel;", "modifier": "private final", "type": "JLabel", "declarator": "mySampleLabel", "var_name": "mySampleLabel"}], "methods": [{"identifier": "ConfigureLogcatHeaderDialog", "parameters": "(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "modifiers": "", "return": "", "signature": " ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "full_signature": "  ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "class_method_signature": "ConfigureLogcatHeaderDialog.ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "testcase": false, "constructor": true}, {"identifier": "createShowDateAndTimeCheckBox", "parameters": "(@NotNull String format)", "modifiers": "@NotNull private", "return": "AbstractButton", "signature": "AbstractButton createShowDateAndTimeCheckBox(@NotNull String format)", "full_signature": "@NotNull private AbstractButton createShowDateAndTimeCheckBox(@NotNull String format)", "class_method_signature": "ConfigureLogcatHeaderDialog.createShowDateAndTimeCheckBox(@NotNull String format)", "testcase": false, "constructor": false}, {"identifier": "createCheckBox", "parameters": "(@NotNull String text, boolean selected, int displayedMnemonicIndex)", "modifiers": "@NotNull private", "return": "AbstractButton", "signature": "AbstractButton createCheckBox(@NotNull String text, boolean selected, int displayedMnemonicIndex)", "full_signature": "@NotNull private AbstractButton createCheckBox(@NotNull String text, boolean selected, int displayedMnemonicIndex)", "class_method_signature": "ConfigureLogcatHeaderDialog.createCheckBox(@NotNull String text, boolean selected, int displayedMnemonicIndex)", "testcase": false, "constructor": false}, {"identifier": "createSampleLabel", "parameters": "()", "modifiers": "@NotNull private", "return": "JLabel", "signature": "JLabel createSampleLabel()", "full_signature": "@NotNull private JLabel createSampleLabel()", "class_method_signature": "ConfigureLogcatHeaderDialog.createSampleLabel()", "testcase": false, "constructor": false}, {"identifier": "formatSample", "parameters": "()", "modifiers": "@NotNull private", "return": "String", "signature": "String formatSample()", "full_signature": "@NotNull private String formatSample()", "class_method_signature": "ConfigureLogcatHeaderDialog.formatSample()", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@NotNull", "return": "String", "signature": "String getFormat()", "full_signature": "@NotNull String getFormat()", "class_method_signature": "ConfigureLogcatHeaderDialog.getFormat()", "testcase": false, "constructor": false}, {"identifier": "getShowDateAndTimeCheckBox", "parameters": "()", "modifiers": "@NotNull", "return": "AbstractButton", "signature": "AbstractButton getShowDateAndTimeCheckBox()", "full_signature": "@NotNull AbstractButton getShowDateAndTimeCheckBox()", "class_method_signature": "ConfigureLogcatHeaderDialog.getShowDateAndTimeCheckBox()", "testcase": false, "constructor": false}, {"identifier": "getShowAsSecondsSinceEpochCheckBox", "parameters": "()", "modifiers": "@NotNull", "return": "AbstractButton", "signature": "AbstractButton getShowAsSecondsSinceEpochCheckBox()", "full_signature": "@NotNull AbstractButton getShowAsSecondsSinceEpochCheckBox()", "class_method_signature": "ConfigureLogcatHeaderDialog.getShowAsSecondsSinceEpochCheckBox()", "testcase": false, "constructor": false}, {"identifier": "getShowProcessAndThreadIdsCheckBox", "parameters": "()", "modifiers": "@NotNull", "return": "AbstractButton", "signature": "AbstractButton getShowProcessAndThreadIdsCheckBox()", "full_signature": "@NotNull AbstractButton getShowProcessAndThreadIdsCheckBox()", "class_method_signature": "ConfigureLogcatHeaderDialog.getShowProcessAndThreadIdsCheckBox()", "testcase": false, "constructor": false}, {"identifier": "getShowPackageNameCheckBox", "parameters": "()", "modifiers": "@NotNull", "return": "AbstractButton", "signature": "AbstractButton getShowPackageNameCheckBox()", "full_signature": "@NotNull AbstractButton getShowPackageNameCheckBox()", "class_method_signature": "ConfigureLogcatHeaderDialog.getShowPackageNameCheckBox()", "testcase": false, "constructor": false}, {"identifier": "getShowTagCheckBox", "parameters": "()", "modifiers": "@NotNull", "return": "AbstractButton", "signature": "AbstractButton getShowTagCheckBox()", "full_signature": "@NotNull AbstractButton getShowTagCheckBox()", "class_method_signature": "ConfigureLogcatHeaderDialog.getShowTagCheckBox()", "testcase": false, "constructor": false}, {"identifier": "getSampleLabel", "parameters": "()", "modifiers": "@NotNull", "return": "JLabel", "signature": "JLabel getSampleLabel()", "full_signature": "@NotNull JLabel getSampleLabel()", "class_method_signature": "ConfigureLogcatHeaderDialog.getSampleLabel()", "testcase": false, "constructor": false}, {"identifier": "createCenterPanel", "parameters": "()", "modifiers": "@NotNull @Override protected", "return": "JComponent", "signature": "JComponent createCenterPanel()", "full_signature": "@NotNull @Override protected JComponent createCenterPanel()", "class_method_signature": "ConfigureLogcatHeaderDialog.createCenterPanel()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/logcat/ConfigureLogcatHeaderDialog.java"}, "focal_method": {"identifier": "ConfigureLogcatHeaderDialog", "parameters": "(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "modifiers": "", "return": "", "body": "ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone) {\n    super(project, false, IdeModalityType.PROJECT);\n    myTimeZone = timeZone;\n\n    String format = preferences.LOGCAT_FORMAT_STRING;\n    myShowDateAndTimeCheckBox = createShowDateAndTimeCheckBox(format);\n    myShowAsSecondsSinceEpochCheckBox = createCheckBox(\"Show as seconds since epoch\", preferences.SHOW_AS_SECONDS_SINCE_EPOCH, 8);\n    myShowProcessAndThreadIdsCheckBox = createCheckBox(\"Show process and thread IDs\", format.isEmpty() || format.contains(\"%2$s\"), 5);\n    myShowPackageNameCheckBox = createCheckBox(\"Show package name\", format.isEmpty() || format.contains(\"%3$s\"), 13);\n    myShowTagCheckBox = createCheckBox(\"Show tag\", format.isEmpty() || format.contains(\"%5$s\"), 7);\n    mySampleLabel = createSampleLabel();\n\n    init();\n    setTitle(AndroidBundle.message(\"android.configure.logcat.header.title\"));\n  }", "signature": " ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "full_signature": "  ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "class_method_signature": "ConfigureLogcatHeaderDialog.ConfigureLogcatHeaderDialog(@NotNull Project project, @NotNull AndroidLogcatPreferences preferences, @NotNull ZoneId timeZone)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}