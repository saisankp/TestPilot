{"test_class": {"identifier": "SgfParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SgfParser parser;", "modifier": "private", "type": "SgfParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private CoordinateSystem coords;", "modifier": "private", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}], "file": "src/edu/lclark/orego/sgf/SgfParserTest.java"}, "test_case": {"identifier": "testBreakOnPass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBreakOnPass(){\n\t\tList<Short> moves = parser.parseGameFromFile(new File(\"sgf-test-files/19/Orego4-Magisus.sgf\"));\n\t\tassertEquals(174, moves.size());\n\t\tparser = new SgfParser(coords, false);\n\t\tmoves = parser.parseGameFromFile(new File(\"sgf-test-files/19/Orego4-Magisus.sgf\"));\n\t\tassertEquals(254, moves.size());\n\t}", "signature": "void testBreakOnPass()", "full_signature": "@Test public void testBreakOnPass()", "class_method_signature": "SgfParserTest.testBreakOnPass()", "testcase": true, "constructor": false, "invocations": ["parseGameFromFile", "assertEquals", "size", "parseGameFromFile", "assertEquals", "size"]}, "focal_class": {"identifier": "SgfParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CoordinateSystem coords;", "modifier": "private final", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}, {"original_string": "private boolean breakOnFirstPass;", "modifier": "private", "type": "boolean", "declarator": "breakOnFirstPass", "var_name": "breakOnFirstPass"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "@SuppressWarnings(\"boxing\") public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "@SuppressWarnings(\"boxing\") public static void main(String[] args)", "class_method_signature": "SgfParser.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "SgfParser", "parameters": "(CoordinateSystem coords, boolean breakOnFirstPass)", "modifiers": "public", "return": "", "signature": " SgfParser(CoordinateSystem coords, boolean breakOnFirstPass)", "full_signature": "public  SgfParser(CoordinateSystem coords, boolean breakOnFirstPass)", "class_method_signature": "SgfParser.SgfParser(CoordinateSystem coords, boolean breakOnFirstPass)", "testcase": false, "constructor": true}, {"identifier": "sgfToBoard", "parameters": "(String filepath, Board board)", "modifiers": "public", "return": "void", "signature": "void sgfToBoard(String filepath, Board board)", "full_signature": "public void sgfToBoard(String filepath, Board board)", "class_method_signature": "SgfParser.sgfToBoard(String filepath, Board board)", "testcase": false, "constructor": false}, {"identifier": "sgfToBoard", "parameters": "(File file, Board board)", "modifiers": "public", "return": "void", "signature": "void sgfToBoard(File file, Board board)", "full_signature": "public void sgfToBoard(File file, Board board)", "class_method_signature": "SgfParser.sgfToBoard(File file, Board board)", "testcase": false, "constructor": false}, {"identifier": "parseGame", "parameters": "(StringTokenizer stoken, int maxBookDepth)", "modifiers": "@SuppressWarnings(\"boxing\") private", "return": "List<Short>", "signature": "List<Short> parseGame(StringTokenizer stoken, int maxBookDepth)", "full_signature": "@SuppressWarnings(\"boxing\") private List<Short> parseGame(StringTokenizer stoken, int maxBookDepth)", "class_method_signature": "SgfParser.parseGame(StringTokenizer stoken, int maxBookDepth)", "testcase": false, "constructor": false}, {"identifier": "parseGameFromFile", "parameters": "(File file)", "modifiers": "public", "return": "List<Short>", "signature": "List<Short> parseGameFromFile(File file)", "full_signature": "public List<Short> parseGameFromFile(File file)", "class_method_signature": "SgfParser.parseGameFromFile(File file)", "testcase": false, "constructor": false}, {"identifier": "parseGamesFromFile", "parameters": "(File file, int maxBookDepth)", "modifiers": "public", "return": "List<List<Short>>", "signature": "List<List<Short>> parseGamesFromFile(File file, int maxBookDepth)", "full_signature": "public List<List<Short>> parseGamesFromFile(File file, int maxBookDepth)", "class_method_signature": "SgfParser.parseGamesFromFile(File file, int maxBookDepth)", "testcase": false, "constructor": false}, {"identifier": "sgfToPoint", "parameters": "(String label)", "modifiers": "public", "return": "short", "signature": "short sgfToPoint(String label)", "full_signature": "public short sgfToPoint(String label)", "class_method_signature": "SgfParser.sgfToPoint(String label)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/sgf/SgfParser.java"}, "focal_method": {"identifier": "parseGameFromFile", "parameters": "(File file)", "modifiers": "public", "return": "List<Short>", "body": "public List<Short> parseGameFromFile(File file) {\n\t\tfinal List<List<Short>> games = parseGamesFromFile(file, MAX_VALUE);\n\t\treturn games.get(0);\n\t}", "signature": "List<Short> parseGameFromFile(File file)", "full_signature": "public List<Short> parseGameFromFile(File file)", "class_method_signature": "SgfParser.parseGameFromFile(File file)", "testcase": false, "constructor": false, "invocations": ["parseGamesFromFile", "get"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}