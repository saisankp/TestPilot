{"test_class": {"identifier": "TestDefaultSourceFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SourceFactory sourceFactory;", "modifier": "private", "type": "SourceFactory", "declarator": "sourceFactory", "var_name": "sourceFactory"}], "file": "flume-ng-core/src/test/java/org/apache/flume/source/TestDefaultSourceFactory.java"}, "test_case": {"identifier": "testDuplicateCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDuplicateCreate()  {\n\n    Source avroSource1 = sourceFactory.create(\"avroSource1\", \"avro\");\n    Source avroSource2 = sourceFactory.create(\"avroSource2\", \"avro\");\n\n    Assert.assertNotNull(avroSource1);\n    Assert.assertNotNull(avroSource2);\n    Assert.assertNotSame(avroSource1, avroSource2);\n    Assert.assertTrue(avroSource1 instanceof AvroSource);\n    Assert.assertTrue(avroSource2 instanceof AvroSource);\n\n    Source s1 = sourceFactory.create(\"avroSource1\", \"avro\");\n    Source s2 = sourceFactory.create(\"avroSource2\", \"avro\");\n\n    Assert.assertNotSame(avroSource1, s1);\n    Assert.assertNotSame(avroSource2, s2);\n\n  }", "signature": "void testDuplicateCreate()", "full_signature": "@Test public void testDuplicateCreate()", "class_method_signature": "TestDefaultSourceFactory.testDuplicateCreate()", "testcase": true, "constructor": false, "invocations": ["create", "create", "assertNotNull", "assertNotNull", "assertNotSame", "assertTrue", "assertTrue", "create", "create", "assertNotSame", "assertNotSame"]}, "focal_class": {"identifier": "DefaultSourceFactory", "superclass": "", "interfaces": "implements SourceFactory", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(DefaultSourceFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(DefaultSourceFactory.class)", "var_name": "logger"}], "methods": [{"identifier": "create", "parameters": "(String name, String type)", "modifiers": "@Override public", "return": "Source", "signature": "Source create(String name, String type)", "full_signature": "@Override public Source create(String name, String type)", "class_method_signature": "DefaultSourceFactory.create(String name, String type)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String type)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Class<? extends Source>", "signature": "Class<? extends Source> getClass(String type)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Class<? extends Source> getClass(String type)", "class_method_signature": "DefaultSourceFactory.getClass(String type)", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/source/DefaultSourceFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(String name, String type)", "modifiers": "@Override public", "return": "Source", "body": "@Override\n  public Source create(String name, String type) throws FlumeException {\n    Preconditions.checkNotNull(name, \"name\");\n    Preconditions.checkNotNull(type, \"type\");\n    logger.info(\"Creating instance of source {}, type {}\", name, type);\n    Class<? extends Source> sourceClass = getClass(type);\n    try {\n      Source source = sourceClass.newInstance();\n      source.setName(name);\n      return source;\n    } catch (Exception ex) {\n      throw new FlumeException(\"Unable to create source: \" + name\n          + \", type: \" + type + \", class: \" + sourceClass.getName(), ex);\n    }\n  }", "signature": "Source create(String name, String type)", "full_signature": "@Override public Source create(String name, String type)", "class_method_signature": "DefaultSourceFactory.create(String name, String type)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "info", "getClass", "newInstance", "setName", "getName"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}