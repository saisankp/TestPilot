{"test_class": {"identifier": "ClassifyQueryTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/trident-ml/src/test/java/com/github/pmerienne/trident/ml/classification/ClassifyQueryTest.java"}, "test_case": {"identifier": "should_classify_instance_without_classifier", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void should_classify_instance_without_classifier() {\n\t\t// Given\n\t\tString classifierName = \"TestLearner\";\n\t\tClassifyQuery<Boolean> query = new ClassifyQuery<Boolean>(classifierName);\n\n\t\tdouble[] features1 = new double[10];\n\t\tdouble[] features2 = new double[10];\n\t\tTridentTuple tuple1 = createMockedInstanceTuple(features1);\n\t\tTridentTuple tuple2 = createMockedInstanceTuple(features2);\n\t\tList<TridentTuple> tuples = Arrays.asList(tuple1, tuple2);\n\n\t\tMapState<Classifier<Boolean>> state = mock(MapState.class);\n\t\tgiven(state.multiGet(asList(asList((Object) classifierName)))).willReturn(EMPTY_LIST);\n\n\t\t// When\n\t\tList<Boolean> labels = query.batchRetrieve(state, tuples);\n\n\t\tassertEquals(2, labels.size());\n\t\tassertNull(labels.get(0));\n\t\tassertNull(labels.get(1));\n\t}", "signature": "void should_classify_instance_without_classifier()", "full_signature": "@Test public void should_classify_instance_without_classifier()", "class_method_signature": "ClassifyQueryTest.should_classify_instance_without_classifier()", "testcase": true, "constructor": false, "invocations": ["createMockedInstanceTuple", "createMockedInstanceTuple", "asList", "mock", "willReturn", "given", "multiGet", "asList", "asList", "batchRetrieve", "assertEquals", "size", "assertNull", "get", "assertNull", "get"]}, "focal_class": {"identifier": "ClassifyQuery", "superclass": "extends BaseQueryFunction<MapState<Classifier<L>>, L>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -9046858936834644113L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -9046858936834644113L", "var_name": "serialVersionUID"}, {"original_string": "private String classifierName;", "modifier": "private", "type": "String", "declarator": "classifierName", "var_name": "classifierName"}], "methods": [{"identifier": "ClassifyQuery", "parameters": "(String classifierName)", "modifiers": "public", "return": "", "signature": " ClassifyQuery(String classifierName)", "full_signature": "public  ClassifyQuery(String classifierName)", "class_method_signature": "ClassifyQuery.ClassifyQuery(String classifierName)", "testcase": false, "constructor": true}, {"identifier": "batchRetrieve", "parameters": "(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<L>", "signature": "List<L> batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<L> batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "class_method_signature": "ClassifyQuery.batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(TridentTuple tuple, L result, TridentCollector collector)", "modifiers": "public", "return": "void", "signature": "void execute(TridentTuple tuple, L result, TridentCollector collector)", "full_signature": "public void execute(TridentTuple tuple, L result, TridentCollector collector)", "class_method_signature": "ClassifyQuery.execute(TridentTuple tuple, L result, TridentCollector collector)", "testcase": false, "constructor": false}], "file": "storm/trident-ml/src/main/java/com/github/pmerienne/trident/ml/classification/ClassifyQuery.java"}, "focal_method": {"identifier": "batchRetrieve", "parameters": "(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<L>", "body": "@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic List<L> batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples) {\n\t\tList<L> labels = new ArrayList<L>();\n\n\t\tList<Classifier<L>> classifiers = state.multiGet(KeysUtil.toKeys(this.classifierName));\n\t\tif (classifiers != null && !classifiers.isEmpty()) {\n\t\t\tClassifier<L> classifier = classifiers.get(0);\n\t\t\tif (classifier == null) {\n\t\t\t\tfor (int i = 0; i < tuples.size(); i++) {\n\t\t\t\t\tlabels.add(null);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tL label;\n\t\t\t\tInstance<L> instance;\n\t\t\t\tfor (TridentTuple tuple : tuples) {\n\t\t\t\t\tinstance = (Instance<L>) tuple.get(0);\n\t\t\t\t\tlabel = classifier.classify(instance.features);\n\t\t\t\t\tlabels.add(label);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < tuples.size(); i++) {\n\t\t\t\tlabels.add(null);\n\t\t\t}\n\t\t}\n\n\t\treturn labels;\n\t}", "signature": "List<L> batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<L> batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "class_method_signature": "ClassifyQuery.batchRetrieve(MapState<Classifier<L>> state, List<TridentTuple> tuples)", "testcase": false, "constructor": false, "invocations": ["multiGet", "toKeys", "isEmpty", "get", "size", "add", "get", "classify", "add", "size", "add"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}