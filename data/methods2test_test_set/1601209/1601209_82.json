{"test_class": {"identifier": "CompoundInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Interceptor t1;", "modifier": "@Mock", "type": "Interceptor", "declarator": "t1", "var_name": "t1"}, {"original_string": "@Mock\n    Interceptor t2;", "modifier": "@Mock", "type": "Interceptor", "declarator": "t2", "var_name": "t2"}, {"original_string": "@Mock\n    HttpRequest<?> request;", "modifier": "@Mock", "type": "HttpRequest<?>", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    Config config;", "modifier": "@Mock", "type": "Config", "declarator": "config", "var_name": "config"}, {"original_string": "MockResponse<?> response = new MockResponse<>();", "modifier": "", "type": "MockResponse<?>", "declarator": "response = new MockResponse<>()", "var_name": "response"}, {"original_string": "@Mock\n    HttpRequestSummary summary;", "modifier": "@Mock", "type": "HttpRequestSummary", "declarator": "summary", "var_name": "summary"}], "file": "unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java"}, "test_case": {"identifier": "willThrowIfNothingElse", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void willThrowIfNothingElse() {\n        CompoundInterceptor compound = new CompoundInterceptor(\n                Arrays.asList()\n        );\n\n        RuntimeException e = new RuntimeException();\n        UnirestException u = assertThrows(UnirestException.class,\n                () -> compound.onFail(e, summary, config));\n\n        assertSame(e, u.getCause());\n    }", "signature": "void willThrowIfNothingElse()", "full_signature": "@Test void willThrowIfNothingElse()", "class_method_signature": "CompoundInterceptorTest.willThrowIfNothingElse()", "testcase": true, "constructor": false, "invocations": ["asList", "assertThrows", "onFail", "assertSame", "getCause"]}, "focal_class": {"identifier": "CompoundInterceptor", "superclass": "", "interfaces": "implements Interceptor", "fields": [{"original_string": "private List<Interceptor> interceptors;", "modifier": "private", "type": "List<Interceptor>", "declarator": "interceptors", "var_name": "interceptors"}], "methods": [{"identifier": "CompoundInterceptor", "parameters": "()", "modifiers": "", "return": "", "signature": " CompoundInterceptor()", "full_signature": "  CompoundInterceptor()", "class_method_signature": "CompoundInterceptor.CompoundInterceptor()", "testcase": false, "constructor": true}, {"identifier": "CompoundInterceptor", "parameters": "(List<Interceptor> interceptors)", "modifiers": "", "return": "", "signature": " CompoundInterceptor(List<Interceptor> interceptors)", "full_signature": "  CompoundInterceptor(List<Interceptor> interceptors)", "class_method_signature": "CompoundInterceptor.CompoundInterceptor(List<Interceptor> interceptors)", "testcase": false, "constructor": true}, {"identifier": "onRequest", "parameters": "(HttpRequest<?> request, Config config)", "modifiers": "@Override public", "return": "void", "signature": "void onRequest(HttpRequest<?> request, Config config)", "full_signature": "@Override public void onRequest(HttpRequest<?> request, Config config)", "class_method_signature": "CompoundInterceptor.onRequest(HttpRequest<?> request, Config config)", "testcase": false, "constructor": false}, {"identifier": "onResponse", "parameters": "(HttpResponse<?> response, HttpRequestSummary request, Config config)", "modifiers": "@Override public", "return": "void", "signature": "void onResponse(HttpResponse<?> response, HttpRequestSummary request, Config config)", "full_signature": "@Override public void onResponse(HttpResponse<?> response, HttpRequestSummary request, Config config)", "class_method_signature": "CompoundInterceptor.onResponse(HttpResponse<?> response, HttpRequestSummary request, Config config)", "testcase": false, "constructor": false}, {"identifier": "onFail", "parameters": "(Exception e, HttpRequestSummary request, Config config)", "modifiers": "@Override public", "return": "HttpResponse<?>", "signature": "HttpResponse<?> onFail(Exception e, HttpRequestSummary request, Config config)", "full_signature": "@Override public HttpResponse<?> onFail(Exception e, HttpRequestSummary request, Config config)", "class_method_signature": "CompoundInterceptor.onFail(Exception e, HttpRequestSummary request, Config config)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "", "return": "int", "signature": "int size()", "full_signature": " int size()", "class_method_signature": "CompoundInterceptor.size()", "testcase": false, "constructor": false}, {"identifier": "getInterceptors", "parameters": "()", "modifiers": "", "return": "List<Interceptor>", "signature": "List<Interceptor> getInterceptors()", "full_signature": " List<Interceptor> getInterceptors()", "class_method_signature": "CompoundInterceptor.getInterceptors()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Interceptor t1)", "modifiers": "", "return": "void", "signature": "void register(Interceptor t1)", "full_signature": " void register(Interceptor t1)", "class_method_signature": "CompoundInterceptor.register(Interceptor t1)", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/CompoundInterceptor.java"}, "focal_method": {"identifier": "onFail", "parameters": "(Exception e, HttpRequestSummary request, Config config)", "modifiers": "@Override public", "return": "HttpResponse<?>", "body": "@Override\n    public HttpResponse<?> onFail(Exception e, HttpRequestSummary request, Config config) throws UnirestException {\n        return  interceptors.stream()\n                .map(i -> Optional.ofNullable(i.onFail(e, request, config)))\n                .flatMap(Util::stream)\n                .findFirst()\n                .orElseThrow(() -> new UnirestException(e));\n    }", "signature": "HttpResponse<?> onFail(Exception e, HttpRequestSummary request, Config config)", "full_signature": "@Override public HttpResponse<?> onFail(Exception e, HttpRequestSummary request, Config config)", "class_method_signature": "CompoundInterceptor.onFail(Exception e, HttpRequestSummary request, Config config)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "findFirst", "flatMap", "map", "stream", "ofNullable", "onFail"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}