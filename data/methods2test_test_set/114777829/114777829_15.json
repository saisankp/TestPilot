{"test_class": {"identifier": "WebXmlParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/webxml/src/test/java/cloud/piranha/webapp/webxml/WebXmlParserTest.java"}, "test_case": {"identifier": "testParseWebXml3", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testParseWebXml3() throws Exception {\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        webApplication.addResource(new DirectoryResource(new File(\"src/test/webxml/parse3\")));\n        InputStream inputStream = webApplication.getResourceAsStream(\"WEB-INF/web.xml\");\n        WebXmlParser parser = new WebXmlParser();\n        WebXml webXml = parser.parse(inputStream);\n        assertEquals(2, webXml.getWelcomeFiles().size());\n        assertEquals(\"index.html\", webXml.getWelcomeFiles().get(0));\n        assertEquals(\"default.jsp\", webXml.getWelcomeFiles().get(1));\n    }", "signature": "void testParseWebXml3()", "full_signature": "@Test void testParseWebXml3()", "class_method_signature": "WebXmlParserTest.testParseWebXml3()", "testcase": true, "constructor": false, "invocations": ["addResource", "getResourceAsStream", "parse", "assertEquals", "size", "getWelcomeFiles", "assertEquals", "get", "getWelcomeFiles", "assertEquals", "get", "getWelcomeFiles"]}, "focal_class": {"identifier": "WebXmlParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(WebXmlParser.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(WebXmlParser.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "parse", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "WebXml", "signature": "WebXml parse(InputStream inputStream)", "full_signature": "public WebXml parse(InputStream inputStream)", "class_method_signature": "WebXmlParser.parse(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "parseFragmentName", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseFragmentName(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseFragmentName(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseFragmentName(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseAbsoluteOrdering", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void parseAbsoluteOrdering(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void parseAbsoluteOrdering(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.parseAbsoluteOrdering(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "parseOrdering", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseOrdering(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseOrdering(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseOrdering(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseOrderingChildren", "parameters": "(XPath xPath, NodeList orderingChild)", "modifiers": "private", "return": "List<String>", "signature": "List<String> parseOrderingChildren(XPath xPath, NodeList orderingChild)", "full_signature": "private List<String> parseOrderingChildren(XPath xPath, NodeList orderingChild)", "class_method_signature": "WebXmlParser.parseOrderingChildren(XPath xPath, NodeList orderingChild)", "testcase": false, "constructor": false}, {"identifier": "parseBoolean", "parameters": "(XPath xPath, String expression, Node node)", "modifiers": "private static", "return": "Boolean", "signature": "Boolean parseBoolean(XPath xPath, String expression, Node node)", "full_signature": "private static Boolean parseBoolean(XPath xPath, String expression, Node node)", "class_method_signature": "WebXmlParser.parseBoolean(XPath xPath, String expression, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseContextParameters", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseContextParameters(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseContextParameters(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseContextParameters(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseDenyUncoveredHttpMethods", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseDenyUncoveredHttpMethods(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseDenyUncoveredHttpMethods(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseDenyUncoveredHttpMethods(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseDefaultContextPath", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseDefaultContextPath(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseDefaultContextPath(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseDefaultContextPath(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseDisplayName", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseDisplayName(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseDisplayName(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseDisplayName(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseDistributable", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseDistributable(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseDistributable(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseDistributable(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseErrorPages", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseErrorPages(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseErrorPages(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseErrorPages(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseFilterMappings", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void parseFilterMappings(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void parseFilterMappings(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.parseFilterMappings(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "parseFilters", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseFilters(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseFilters(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseFilters(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseInteger", "parameters": "(XPath xPath, String expression, Node node)", "modifiers": "private", "return": "int", "signature": "int parseInteger(XPath xPath, String expression, Node node)", "full_signature": "private int parseInteger(XPath xPath, String expression, Node node)", "class_method_signature": "WebXmlParser.parseInteger(XPath xPath, String expression, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseListeners", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseListeners(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseListeners(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseListeners(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseLoginConfig", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseLoginConfig(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseLoginConfig(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseLoginConfig(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseMimeMappings", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseMimeMappings(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseMimeMappings(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseMimeMappings(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseRequestCharacterEncoding", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseRequestCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseRequestCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseRequestCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseResponseCharacterEncoding", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseResponseCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseResponseCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseResponseCharacterEncoding(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "processSecurityConstraints", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void processSecurityConstraints(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void processSecurityConstraints(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.processSecurityConstraints(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "processSecurityConstraint", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void processSecurityConstraint(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void processSecurityConstraint(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.processSecurityConstraint(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "processSecurityRoles", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void processSecurityRoles(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void processSecurityRoles(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.processSecurityRoles(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "parseServletMappings", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseServletMappings(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseServletMappings(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseServletMappings(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseServlets", "parameters": "(WebXml webXml, XPath xPath, Node rootNode)", "modifiers": "private", "return": "void", "signature": "void parseServlets(WebXml webXml, XPath xPath, Node rootNode)", "full_signature": "private void parseServlets(WebXml webXml, XPath xPath, Node rootNode)", "class_method_signature": "WebXmlParser.parseServlets(WebXml webXml, XPath xPath, Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "parseSessionConfig", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseSessionConfig(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseSessionConfig(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseSessionConfig(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseWebApp", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseWebApp(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseWebApp(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseWebApp(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseString", "parameters": "(XPath xPath, String expression, Node node)", "modifiers": "private", "return": "String", "signature": "String parseString(XPath xPath, String expression, Node node)", "full_signature": "private String parseString(XPath xPath, String expression, Node node)", "class_method_signature": "WebXmlParser.parseString(XPath xPath, String expression, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseNodes", "parameters": "(XPath xPath, String expression, Node node)", "modifiers": "private", "return": "Iterable<Node>", "signature": "Iterable<Node> parseNodes(XPath xPath, String expression, Node node)", "full_signature": "private Iterable<Node> parseNodes(XPath xPath, String expression, Node node)", "class_method_signature": "WebXmlParser.parseNodes(XPath xPath, String expression, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseStrings", "parameters": "(XPath xPath, String expression, Node node)", "modifiers": "private", "return": "Iterable<String>", "signature": "Iterable<String> parseStrings(XPath xPath, String expression, Node node)", "full_signature": "private Iterable<String> parseStrings(XPath xPath, String expression, Node node)", "class_method_signature": "WebXmlParser.parseStrings(XPath xPath, String expression, Node node)", "testcase": false, "constructor": false}, {"identifier": "toIterable", "parameters": "(NodeList nodes)", "modifiers": "public static", "return": "Iterable<Node>", "signature": "Iterable<Node> toIterable(NodeList nodes)", "full_signature": "public static Iterable<Node> toIterable(NodeList nodes)", "class_method_signature": "WebXmlParser.toIterable(NodeList nodes)", "testcase": false, "constructor": false}, {"identifier": "parseWelcomeFiles", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseWelcomeFiles(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseWelcomeFiles(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseWelcomeFiles(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}, {"identifier": "parseLocaleEncodingMapping", "parameters": "(WebXml webXml, XPath xPath, Node node)", "modifiers": "private", "return": "void", "signature": "void parseLocaleEncodingMapping(WebXml webXml, XPath xPath, Node node)", "full_signature": "private void parseLocaleEncodingMapping(WebXml webXml, XPath xPath, Node node)", "class_method_signature": "WebXmlParser.parseLocaleEncodingMapping(WebXml webXml, XPath xPath, Node node)", "testcase": false, "constructor": false}], "file": "webapp/webxml/src/main/java/cloud/piranha/webapp/webxml/WebXmlParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "WebXml", "body": "public WebXml parse(InputStream inputStream) {\n        WebXml webXml = new WebXml();\n        try {\n            DocumentBuilder documentBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n            Document document = documentBuilder.parse(inputStream);\n            XPath xPath = XPathFactory.newInstance().newXPath();\n            parseAbsoluteOrdering(webXml, xPath, document);\n            parseOrdering(webXml, xPath, document);\n            parseContextParameters(webXml, xPath, document);\n            parseDefaultContextPath(webXml, xPath, document);\n            parseDenyUncoveredHttpMethods(webXml, xPath, document);\n            parseDisplayName(webXml, xPath, document);\n            parseFragmentName(webXml, xPath, document);\n            parseDistributable(webXml, xPath, document);\n            parseErrorPages(webXml, xPath, document);\n            parseFilterMappings(webXml, xPath, document);\n            parseFilters(webXml, xPath, document);\n            parseListeners(webXml, xPath, document);\n            parseLoginConfig(webXml, xPath, document);\n            parseMimeMappings(webXml, xPath, document);\n            parseRequestCharacterEncoding(webXml, xPath, document);\n            parseResponseCharacterEncoding(webXml, xPath, document);\n            parseLocaleEncodingMapping(webXml, xPath, document);\n            processSecurityConstraints(webXml, xPath, document);\n            processSecurityRoles(webXml, xPath, document);\n            parseServletMappings(webXml, xPath, document);\n            parseServlets(webXml, xPath, document);\n            parseSessionConfig(webXml, xPath, document);\n            parseWebApp(webXml, xPath, document);\n            parseWelcomeFiles(webXml, xPath, document);\n        } catch (Throwable t) {\n            LOGGER.log(WARNING, \"Unable to parse web.xml\", t);\n        }\n        return webXml;\n    }", "signature": "WebXml parse(InputStream inputStream)", "full_signature": "public WebXml parse(InputStream inputStream)", "class_method_signature": "WebXmlParser.parse(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["newDocumentBuilder", "newInstance", "parse", "newXPath", "newInstance", "parseAbsoluteOrdering", "parseOrdering", "parseContextParameters", "parseDefaultContextPath", "parseDenyUncoveredHttpMethods", "parseDisplayName", "parseFragmentName", "parseDistributable", "parseErrorPages", "parseFilterMappings", "parseFilters", "parseListeners", "parseLoginConfig", "parseMimeMappings", "parseRequestCharacterEncoding", "parseResponseCharacterEncoding", "parseLocaleEncodingMapping", "processSecurityConstraints", "processSecurityRoles", "parseServletMappings", "parseServlets", "parseSessionConfig", "parseWebApp", "parseWelcomeFiles", "log"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}