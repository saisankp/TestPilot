{"test_class": {"identifier": "CumulusTorSwitchServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static CumulusTorSwitchService cumulusTorSwitchService_Obj;", "modifier": "static", "type": "CumulusTorSwitchService", "declarator": "cumulusTorSwitchService_Obj", "var_name": "cumulusTorSwitchService_Obj"}, {"original_string": "private static Logger logger = Logger.getLogger( CumulusTorSwitchServiceTest.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( CumulusTorSwitchServiceTest.class )", "var_name": "logger"}, {"original_string": "static SwitchNode switchNode_Obj = null;", "modifier": "static", "type": "SwitchNode", "declarator": "switchNode_Obj = null", "var_name": "switchNode_Obj"}, {"original_string": "static List<String> listOfVlansString;", "modifier": "static", "type": "List<String>", "declarator": "listOfVlansString", "var_name": "listOfVlansString"}, {"original_string": "static List<SwitchVlan> listOfSwitchVlans;", "modifier": "static", "type": "List<SwitchVlan>", "declarator": "listOfSwitchVlans", "var_name": "listOfSwitchVlans"}, {"original_string": "static List<String> listOfLacpGroupNames;", "modifier": "static", "type": "List<String>", "declarator": "listOfLacpGroupNames", "var_name": "listOfLacpGroupNames"}, {"original_string": "static List<String> listOfSwitchPorts;", "modifier": "static", "type": "List<String>", "declarator": "listOfSwitchPorts", "var_name": "listOfSwitchPorts"}, {"original_string": "private static Properties properties;", "modifier": "private static", "type": "Properties", "declarator": "properties", "var_name": "properties"}, {"original_string": "private static final boolean PRINT_STACK_TRACE = false;", "modifier": "private static final", "type": "boolean", "declarator": "PRINT_STACK_TRACE = false", "var_name": "PRINT_STACK_TRACE"}, {"original_string": "private static final boolean FAIL_ON_EXCEPTION = true;", "modifier": "private static final", "type": "boolean", "declarator": "FAIL_ON_EXCEPTION = true", "var_name": "FAIL_ON_EXCEPTION"}], "file": "modules/cumulus-switch/src/test/java/com/vmware/vrack/hms/switches/cumulus/CumulusTorSwitchServiceTest.java"}, "test_case": {"identifier": "testCreateVlan", "parameters": "()", "modifiers": "@Ignore @Test public", "return": "void", "body": "@Ignore\n    @Test\n    public void testCreateVlan()\n    {\n        logger.info( \"Create VLAN\" );\n        boolean createVlanSuccess = false;\n        try\n        {\n            if ( listOfSwitchVlans == null )\n            {\n                listOfSwitchVlans = cumulusTorSwitchService_Obj.getSwitchVlansBulk( switchNode_Obj );\n                assertNotNull( \"The list of switch vlans is null\", listOfSwitchVlans );\n            }\n            else\n            {\n                for ( int vlan = 0; vlan < listOfSwitchVlans.size(); vlan++ )\n                {\n                    logger.info( \"in here\" );\n                    createVlanSuccess =\n                        cumulusTorSwitchService_Obj.createVlan( switchNode_Obj, listOfSwitchVlans.get( vlan ) );\n                    assertTrue( \"Vlan failed to get created\", createVlanSuccess );\n                    logger.info( \"Test was on: \" + listOfSwitchVlans.get( vlan ).getName() );\n                    logger.info( \"Creating Vlan on specified switch a success.\" );\n                }\n            }\n        }\n        catch ( HmsException e )\n        {\n            logger.info( \"There was error in create vLan: \" + e.getMessage() );\n            if ( PRINT_STACK_TRACE )\n                logger.debug( e.getStackTrace() );\n            if ( FAIL_ON_EXCEPTION )\n                fail();\n        }\n    }", "signature": "void testCreateVlan()", "full_signature": "@Ignore @Test public void testCreateVlan()", "class_method_signature": "CumulusTorSwitchServiceTest.testCreateVlan()", "testcase": true, "constructor": false, "invocations": ["info", "getSwitchVlansBulk", "assertNotNull", "size", "info", "createVlan", "get", "assertTrue", "info", "getName", "get", "info", "info", "getMessage", "debug", "getStackTrace", "fail"]}, "focal_class": {"identifier": "CumulusTorSwitchService", "superclass": "", "interfaces": "implements ISwitchService", "fields": [{"original_string": "private static final int HMS_SWITCH_CONNECTION_TIMEOUT = 20000;", "modifier": "private static final", "type": "int", "declarator": "HMS_SWITCH_CONNECTION_TIMEOUT = 20000", "var_name": "HMS_SWITCH_CONNECTION_TIMEOUT"}, {"original_string": "private static Logger logger = Logger.getLogger( CumulusTorSwitchService.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( CumulusTorSwitchService.class )", "var_name": "logger"}, {"original_string": "private CumulusSensorHelper sensorHelper = new CumulusSensorHelper( this );", "modifier": "private", "type": "CumulusSensorHelper", "declarator": "sensorHelper = new CumulusSensorHelper( this )", "var_name": "sensorHelper"}, {"original_string": "private CumulusLacpGroupHelper lacpHelper = new CumulusLacpGroupHelper( this );", "modifier": "private", "type": "CumulusLacpGroupHelper", "declarator": "lacpHelper = new CumulusLacpGroupHelper( this )", "var_name": "lacpHelper"}, {"original_string": "private CumulusVlanHelper vlanHelper = new CumulusVlanHelper( this );", "modifier": "private", "type": "CumulusVlanHelper", "declarator": "vlanHelper = new CumulusVlanHelper( this )", "var_name": "vlanHelper"}, {"original_string": "private CumulusPortStatusHelper portStatusHelper = new CumulusPortStatusHelper( this );", "modifier": "private", "type": "CumulusPortStatusHelper", "declarator": "portStatusHelper = new CumulusPortStatusHelper( this )", "var_name": "portStatusHelper"}, {"original_string": "private CumulusVxlanHelper vxlanHelper = new CumulusVxlanHelper( this );", "modifier": "private", "type": "CumulusVxlanHelper", "declarator": "vxlanHelper = new CumulusVxlanHelper( this )", "var_name": "vxlanHelper"}, {"original_string": "private CumulusBgpHelper bgpHelper = new CumulusBgpHelper( this );", "modifier": "private", "type": "CumulusBgpHelper", "declarator": "bgpHelper = new CumulusBgpHelper( this )", "var_name": "bgpHelper"}, {"original_string": "private CumulusBulkConfigHelper bulkConfigHelper = new CumulusBulkConfigHelper();", "modifier": "private", "type": "CumulusBulkConfigHelper", "declarator": "bulkConfigHelper = new CumulusBulkConfigHelper()", "var_name": "bulkConfigHelper"}, {"original_string": "private CumulusRouteHelper routeHelper = new CumulusRouteHelper();", "modifier": "private", "type": "CumulusRouteHelper", "declarator": "routeHelper = new CumulusRouteHelper()", "var_name": "routeHelper"}, {"original_string": "private static CumulusCache<List<String>> portListCache = new CumulusCache<List<String>>();", "modifier": "private static", "type": "CumulusCache<List<String>>", "declarator": "portListCache = new CumulusCache<List<String>>()", "var_name": "portListCache"}, {"original_string": "private static CumulusCache<List<SwitchPort>> portsBulkCache = new CumulusCache<List<SwitchPort>>( 300 );", "modifier": "private static", "type": "CumulusCache<List<SwitchPort>>", "declarator": "portsBulkCache = new CumulusCache<List<SwitchPort>>( 300 )", "var_name": "portsBulkCache"}, {"original_string": "private static CumulusCache<SwitchOsInfo> osInfoCache = new CumulusCache<SwitchOsInfo>();", "modifier": "private static", "type": "CumulusCache<SwitchOsInfo>", "declarator": "osInfoCache = new CumulusCache<SwitchOsInfo>()", "var_name": "osInfoCache"}, {"original_string": "private static CumulusCache<SwitchHardwareInfo> hwInfoCache = new CumulusCache<SwitchHardwareInfo>();", "modifier": "private static", "type": "CumulusCache<SwitchHardwareInfo>", "declarator": "hwInfoCache = new CumulusCache<SwitchHardwareInfo>()", "var_name": "hwInfoCache"}, {"original_string": "private CumulusCache<List<String>> bondListCache = new CumulusCache<List<String>>( 300 );", "modifier": "private", "type": "CumulusCache<List<String>>", "declarator": "bondListCache = new CumulusCache<List<String>>( 300 )", "var_name": "bondListCache"}], "methods": [{"identifier": "getSwitchType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSwitchType()", "full_signature": "@Override public String getSwitchType()", "class_method_signature": "CumulusTorSwitchService.getSwitchType()", "testcase": false, "constructor": false}, {"identifier": "getSupportedSwitchTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<SwitchType>", "signature": "List<SwitchType> getSupportedSwitchTypes()", "full_signature": "@Override public List<SwitchType> getSupportedSwitchTypes()", "class_method_signature": "CumulusTorSwitchService.getSupportedSwitchTypes()", "testcase": false, "constructor": false}, {"identifier": "discoverSwitch", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean discoverSwitch( SwitchNode switchNode )", "full_signature": "@Override public boolean discoverSwitch( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.discoverSwitch( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchSession", "signature": "SwitchSession getSession( SwitchNode switchNode )", "full_signature": "@Override public SwitchSession getSession( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSession( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "isPoweredOn", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPoweredOn( SwitchNode switchNode )", "full_signature": "@Override public boolean isPoweredOn( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.isPoweredOn( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchOsInfo", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchOsInfo", "signature": "SwitchOsInfo getSwitchOsInfo( SwitchNode switchNode )", "full_signature": "@Override public SwitchOsInfo getSwitchOsInfo( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchOsInfo( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchHardwareInfo", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchHardwareInfo", "signature": "SwitchHardwareInfo getSwitchHardwareInfo( SwitchNode switchNode )", "full_signature": "@Override public SwitchHardwareInfo getSwitchHardwareInfo( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchHardwareInfo( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "updateSwitchIpAddress", "parameters": "( SwitchNode switchNode, String ipAddress, String netmask, String gateway )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateSwitchIpAddress( SwitchNode switchNode, String ipAddress, String netmask, String gateway )", "full_signature": "@Override public boolean updateSwitchIpAddress( SwitchNode switchNode, String ipAddress, String netmask, String gateway )", "class_method_signature": "CumulusTorSwitchService.updateSwitchIpAddress( SwitchNode switchNode, String ipAddress, String netmask, String gateway )", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "( SwitchNode switchNode, String username, String newPassword )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setPassword( SwitchNode switchNode, String username, String newPassword )", "full_signature": "@Override public boolean setPassword( SwitchNode switchNode, String username, String newPassword )", "class_method_signature": "CumulusTorSwitchService.setPassword( SwitchNode switchNode, String username, String newPassword )", "testcase": false, "constructor": false}, {"identifier": "updateSwitchTimeServer", "parameters": "( SwitchNode switchNode, String timeServer )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateSwitchTimeServer( SwitchNode switchNode, String timeServer )", "full_signature": "@Override public boolean updateSwitchTimeServer( SwitchNode switchNode, String timeServer )", "class_method_signature": "CumulusTorSwitchService.updateSwitchTimeServer( SwitchNode switchNode, String timeServer )", "testcase": false, "constructor": false}, {"identifier": "getSwitchPortList", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSwitchPortList( SwitchNode switchNode )", "full_signature": "@Override public List<String> getSwitchPortList( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchPortList( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchPort", "parameters": "( SwitchNode switchNode, String portName )", "modifiers": "@Override public", "return": "SwitchPort", "signature": "SwitchPort getSwitchPort( SwitchNode switchNode, String portName )", "full_signature": "@Override public SwitchPort getSwitchPort( SwitchNode switchNode, String portName )", "class_method_signature": "CumulusTorSwitchService.getSwitchPort( SwitchNode switchNode, String portName )", "testcase": false, "constructor": false}, {"identifier": "getSwitchPortStatus", "parameters": "( SwitchNode switchNode, String portName )", "modifiers": "@Override public", "return": "PortStatus", "signature": "PortStatus getSwitchPortStatus( SwitchNode switchNode, String portName )", "full_signature": "@Override public PortStatus getSwitchPortStatus( SwitchNode switchNode, String portName )", "class_method_signature": "CumulusTorSwitchService.getSwitchPortStatus( SwitchNode switchNode, String portName )", "testcase": false, "constructor": false}, {"identifier": "setSwitchPortStatus", "parameters": "( SwitchNode switchNode, String portName, PortStatus portStatus )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setSwitchPortStatus( SwitchNode switchNode, String portName, PortStatus portStatus )", "full_signature": "@Override public boolean setSwitchPortStatus( SwitchNode switchNode, String portName, PortStatus portStatus )", "class_method_signature": "CumulusTorSwitchService.setSwitchPortStatus( SwitchNode switchNode, String portName, PortStatus portStatus )", "testcase": false, "constructor": false}, {"identifier": "updateSwitchPortNoRevert", "parameters": "( SwitchNode switchNode, String portName, SwitchPort newPort,\n                                           SwitchPort currPort )", "modifiers": "private", "return": "void", "signature": "void updateSwitchPortNoRevert( SwitchNode switchNode, String portName, SwitchPort newPort,\n                                           SwitchPort currPort )", "full_signature": "private void updateSwitchPortNoRevert( SwitchNode switchNode, String portName, SwitchPort newPort,\n                                           SwitchPort currPort )", "class_method_signature": "CumulusTorSwitchService.updateSwitchPortNoRevert( SwitchNode switchNode, String portName, SwitchPort newPort,\n                                           SwitchPort currPort )", "testcase": false, "constructor": false}, {"identifier": "updateSwitchPort", "parameters": "( SwitchNode switchNode, String portName, SwitchPort portInfo )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateSwitchPort( SwitchNode switchNode, String portName, SwitchPort portInfo )", "full_signature": "@Override public boolean updateSwitchPort( SwitchNode switchNode, String portName, SwitchPort portInfo )", "class_method_signature": "CumulusTorSwitchService.updateSwitchPort( SwitchNode switchNode, String portName, SwitchPort portInfo )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlan", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "@Override public", "return": "SwitchVlan", "signature": "SwitchVlan getSwitchVlan( SwitchNode switchNode, String vlanName )", "full_signature": "@Override public SwitchVlan getSwitchVlan( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusTorSwitchService.getSwitchVlan( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlans", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSwitchVlans( SwitchNode switchNode )", "full_signature": "@Override public List<String> getSwitchVlans( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchVlans( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlansBulk", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<SwitchVlan>", "signature": "List<SwitchVlan> getSwitchVlansBulk( SwitchNode switchNode )", "full_signature": "@Override public List<SwitchVlan> getSwitchVlansBulk( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchVlansBulk( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "createVlan", "parameters": "( SwitchNode switchNode, SwitchVlan vlan )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "full_signature": "@Override public boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "class_method_signature": "CumulusTorSwitchService.createVlan( SwitchNode switchNode, SwitchVlan vlan )", "testcase": false, "constructor": false}, {"identifier": "updateVlan", "parameters": "( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "full_signature": "@Override public boolean updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "class_method_signature": "CumulusTorSwitchService.updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "testcase": false, "constructor": false}, {"identifier": "deleteVlan", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteVlan( SwitchNode switchNode, String vlanName )", "full_signature": "@Override public boolean deleteVlan( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusTorSwitchService.deleteVlan( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "getSwitchLacpGroups", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSwitchLacpGroups( SwitchNode switchNode )", "full_signature": "@Override public List<String> getSwitchLacpGroups( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchLacpGroups( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName )", "modifiers": "@Override public", "return": "SwitchLacpGroup", "signature": "SwitchLacpGroup getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "full_signature": "@Override public SwitchLacpGroup getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "class_method_signature": "CumulusTorSwitchService.getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "testcase": false, "constructor": false}, {"identifier": "createLacpGroup", "parameters": "( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean createLacpGroup( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "full_signature": "@Override public boolean createLacpGroup( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "class_method_signature": "CumulusTorSwitchService.createLacpGroup( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "testcase": false, "constructor": false}, {"identifier": "deleteLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "full_signature": "@Override public boolean deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "class_method_signature": "CumulusTorSwitchService.deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "testcase": false, "constructor": false}, {"identifier": "reboot", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reboot( SwitchNode switchNode )", "full_signature": "@Override public boolean reboot( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.reboot( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "upgrade", "parameters": "( SwitchNode switchNode, SwitchUpgradeInfo upgradeInfo )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean upgrade( SwitchNode switchNode, SwitchUpgradeInfo upgradeInfo )", "full_signature": "@Override public boolean upgrade( SwitchNode switchNode, SwitchUpgradeInfo upgradeInfo )", "class_method_signature": "CumulusTorSwitchService.upgrade( SwitchNode switchNode, SwitchUpgradeInfo upgradeInfo )", "testcase": false, "constructor": false}, {"identifier": "applyNetworkConfiguration", "parameters": "( SwitchNode switchNode, SwitchNetworkConfiguration networkConfiguration )", "modifiers": "@Deprecated @Override public", "return": "boolean", "signature": "boolean applyNetworkConfiguration( SwitchNode switchNode, SwitchNetworkConfiguration networkConfiguration )", "full_signature": "@Deprecated @Override public boolean applyNetworkConfiguration( SwitchNode switchNode, SwitchNetworkConfiguration networkConfiguration )", "class_method_signature": "CumulusTorSwitchService.applyNetworkConfiguration( SwitchNode switchNode, SwitchNetworkConfiguration networkConfiguration )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVxlans", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<SwitchVxlan>", "signature": "List<SwitchVxlan> getSwitchVxlans( SwitchNode switchNode )", "full_signature": "@Override public List<SwitchVxlan> getSwitchVxlans( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchVxlans( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVxlansMatchingVlan", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "@Override public", "return": "List<SwitchVxlan>", "signature": "List<SwitchVxlan> getSwitchVxlansMatchingVlan( SwitchNode switchNode, String vlanName )", "full_signature": "@Override public List<SwitchVxlan> getSwitchVxlansMatchingVlan( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusTorSwitchService.getSwitchVxlansMatchingVlan( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "createVxlan", "parameters": "( SwitchNode switchNode, SwitchVxlan vxlan )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean createVxlan( SwitchNode switchNode, SwitchVxlan vxlan )", "full_signature": "@Override public boolean createVxlan( SwitchNode switchNode, SwitchVxlan vxlan )", "class_method_signature": "CumulusTorSwitchService.createVxlan( SwitchNode switchNode, SwitchVxlan vxlan )", "testcase": false, "constructor": false}, {"identifier": "deleteVxlan", "parameters": "( SwitchNode switchNode, String vxlanName, String vlanName )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteVxlan( SwitchNode switchNode, String vxlanName, String vlanName )", "full_signature": "@Override public boolean deleteVxlan( SwitchNode switchNode, String vxlanName, String vlanName )", "class_method_signature": "CumulusTorSwitchService.deleteVxlan( SwitchNode switchNode, String vxlanName, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "deletePortOrBondFromVlan", "parameters": "( SwitchNode switchNode, String vlanId, String portOrBondName )", "modifiers": "@Override public", "return": "void", "signature": "void deletePortOrBondFromVlan( SwitchNode switchNode, String vlanId, String portOrBondName )", "full_signature": "@Override public void deletePortOrBondFromVlan( SwitchNode switchNode, String vlanId, String portOrBondName )", "class_method_signature": "CumulusTorSwitchService.deletePortOrBondFromVlan( SwitchNode switchNode, String vlanId, String portOrBondName )", "testcase": false, "constructor": false}, {"identifier": "deletePortFromLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName, String portName )", "modifiers": "@Override public", "return": "void", "signature": "void deletePortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String portName )", "full_signature": "@Override public void deletePortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String portName )", "class_method_signature": "CumulusTorSwitchService.deletePortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String portName )", "testcase": false, "constructor": false}, {"identifier": "getSwitchPortListBulk", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "List<SwitchPort>", "signature": "List<SwitchPort> getSwitchPortListBulk( SwitchNode switchNode )", "full_signature": "@Override public List<SwitchPort> getSwitchPortListBulk( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchPortListBulk( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "configureOspf", "parameters": "( SwitchNode switchNode, SwitchOspfConfig ospf )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configureOspf( SwitchNode switchNode, SwitchOspfConfig ospf )", "full_signature": "@Override public boolean configureOspf( SwitchNode switchNode, SwitchOspfConfig ospf )", "class_method_signature": "CumulusTorSwitchService.configureOspf( SwitchNode switchNode, SwitchOspfConfig ospf )", "testcase": false, "constructor": false}, {"identifier": "getOspf", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchOspfConfig", "signature": "SwitchOspfConfig getOspf( SwitchNode switchNode )", "full_signature": "@Override public SwitchOspfConfig getOspf( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getOspf( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "configureBgp", "parameters": "( SwitchNode switchNode, SwitchBgpConfig bgp )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configureBgp( SwitchNode switchNode, SwitchBgpConfig bgp )", "full_signature": "@Override public boolean configureBgp( SwitchNode switchNode, SwitchBgpConfig bgp )", "class_method_signature": "CumulusTorSwitchService.configureBgp( SwitchNode switchNode, SwitchBgpConfig bgp )", "testcase": false, "constructor": false}, {"identifier": "getBgpConfiguration", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchBgpConfig", "signature": "SwitchBgpConfig getBgpConfiguration( SwitchNode switchNode )", "full_signature": "@Override public SwitchBgpConfig getBgpConfiguration( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getBgpConfiguration( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchSensorInfo", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchSensorInfo", "signature": "SwitchSensorInfo getSwitchSensorInfo( SwitchNode switchNode )", "full_signature": "@Override public SwitchSensorInfo getSwitchSensorInfo( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSwitchSensorInfo( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "configureMclag", "parameters": "( SwitchNode switchNode, SwitchMclagInfo mclag )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configureMclag( SwitchNode switchNode, SwitchMclagInfo mclag )", "full_signature": "@Override public boolean configureMclag( SwitchNode switchNode, SwitchMclagInfo mclag )", "class_method_signature": "CumulusTorSwitchService.configureMclag( SwitchNode switchNode, SwitchMclagInfo mclag )", "testcase": false, "constructor": false}, {"identifier": "getMclagStatus", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchMclagInfo", "signature": "SwitchMclagInfo getMclagStatus( SwitchNode switchNode )", "full_signature": "@Override public SwitchMclagInfo getMclagStatus( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getMclagStatus( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "applySwitchBulkConfigs", "parameters": "( SwitchNode switchNode, List<PluginSwitchBulkConfig> switchBulkConfigs )", "modifiers": "@Override public", "return": "void", "signature": "void applySwitchBulkConfigs( SwitchNode switchNode, List<PluginSwitchBulkConfig> switchBulkConfigs )", "full_signature": "@Override public void applySwitchBulkConfigs( SwitchNode switchNode, List<PluginSwitchBulkConfig> switchBulkConfigs )", "class_method_signature": "CumulusTorSwitchService.applySwitchBulkConfigs( SwitchNode switchNode, List<PluginSwitchBulkConfig> switchBulkConfigs )", "testcase": false, "constructor": false}, {"identifier": "configureIpv4DefaultRoute", "parameters": "( SwitchNode switchNode, String gateway, String portId )", "modifiers": "@Override public", "return": "void", "signature": "void configureIpv4DefaultRoute( SwitchNode switchNode, String gateway, String portId )", "full_signature": "@Override public void configureIpv4DefaultRoute( SwitchNode switchNode, String gateway, String portId )", "class_method_signature": "CumulusTorSwitchService.configureIpv4DefaultRoute( SwitchNode switchNode, String gateway, String portId )", "testcase": false, "constructor": false}, {"identifier": "deleteIpv4DefaultRoute", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "void", "signature": "void deleteIpv4DefaultRoute( SwitchNode switchNode )", "full_signature": "@Override public void deleteIpv4DefaultRoute( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.deleteIpv4DefaultRoute( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "qr", "parameters": "( String str )", "modifiers": "private static", "return": "String", "signature": "String qr( String str )", "full_signature": "private static String qr( String str )", "class_method_signature": "CumulusTorSwitchService.qr( String str )", "testcase": false, "constructor": false}, {"identifier": "ArrayFindPatternIndex", "parameters": "( String[] haystack, String needle, String abortPattern, int startIndex,\n                                              int endIndex )", "modifiers": "private static", "return": "int", "signature": "int ArrayFindPatternIndex( String[] haystack, String needle, String abortPattern, int startIndex,\n                                              int endIndex )", "full_signature": "private static int ArrayFindPatternIndex( String[] haystack, String needle, String abortPattern, int startIndex,\n                                              int endIndex )", "class_method_signature": "CumulusTorSwitchService.ArrayFindPatternIndex( String[] haystack, String needle, String abortPattern, int startIndex,\n                                              int endIndex )", "testcase": false, "constructor": false}, {"identifier": "GetMultipleCmdResults", "parameters": "( SwitchSession switchSession, String[] commands )", "modifiers": "private static", "return": "String[][]", "signature": "String[][] GetMultipleCmdResults( SwitchSession switchSession, String[] commands )", "full_signature": "private static String[][] GetMultipleCmdResults( SwitchSession switchSession, String[] commands )", "class_method_signature": "CumulusTorSwitchService.GetMultipleCmdResults( SwitchSession switchSession, String[] commands )", "testcase": false, "constructor": false}, {"identifier": "uploadConfigFile", "parameters": "( SwitchSession switchSession, SwitchNode switchNode, String localFilename,\n                                          String remoteFilename )", "modifiers": "private static", "return": "void", "signature": "void uploadConfigFile( SwitchSession switchSession, SwitchNode switchNode, String localFilename,\n                                          String remoteFilename )", "full_signature": "private static void uploadConfigFile( SwitchSession switchSession, SwitchNode switchNode, String localFilename,\n                                          String remoteFilename )", "class_method_signature": "CumulusTorSwitchService.uploadConfigFile( SwitchSession switchSession, SwitchNode switchNode, String localFilename,\n                                          String remoteFilename )", "testcase": false, "constructor": false}, {"identifier": "configureOspfParameters", "parameters": "( SwitchNode switchNode, SwitchOspfConfig ospf )", "modifiers": "private", "return": "void", "signature": "void configureOspfParameters( SwitchNode switchNode, SwitchOspfConfig ospf )", "full_signature": "private void configureOspfParameters( SwitchNode switchNode, SwitchOspfConfig ospf )", "class_method_signature": "CumulusTorSwitchService.configureOspfParameters( SwitchNode switchNode, SwitchOspfConfig ospf )", "testcase": false, "constructor": false}, {"identifier": "createLoopback", "parameters": "( String[] persistentConfigFile, List<String> newLines, String loopbackName,\n                                 String loopbackIp )", "modifiers": "@SuppressWarnings( \"unused\" ) private", "return": "void", "signature": "void createLoopback( String[] persistentConfigFile, List<String> newLines, String loopbackName,\n                                 String loopbackIp )", "full_signature": "@SuppressWarnings( \"unused\" ) private void createLoopback( String[] persistentConfigFile, List<String> newLines, String loopbackName,\n                                 String loopbackIp )", "class_method_signature": "CumulusTorSwitchService.createLoopback( String[] persistentConfigFile, List<String> newLines, String loopbackName,\n                                 String loopbackIp )", "testcase": false, "constructor": false}, {"identifier": "createInterface", "parameters": "( String[] persistentConfigFile, List<String> newLines, String ifName,\n                                  String ifQualifier, String ifIp, int ifMaskLen )", "modifiers": "private", "return": "void", "signature": "void createInterface( String[] persistentConfigFile, List<String> newLines, String ifName,\n                                  String ifQualifier, String ifIp, int ifMaskLen )", "full_signature": "private void createInterface( String[] persistentConfigFile, List<String> newLines, String ifName,\n                                  String ifQualifier, String ifIp, int ifMaskLen )", "class_method_signature": "CumulusTorSwitchService.createInterface( String[] persistentConfigFile, List<String> newLines, String ifName,\n                                  String ifQualifier, String ifIp, int ifMaskLen )", "testcase": false, "constructor": false}, {"identifier": "headerSubsectionCreate", "parameters": "( String[] file, int srchFromIndex, String[] patterns,\n                                           String[] substitutionStrings, String stopString )", "modifiers": "private", "return": "String", "signature": "String headerSubsectionCreate( String[] file, int srchFromIndex, String[] patterns,\n                                           String[] substitutionStrings, String stopString )", "full_signature": "private String headerSubsectionCreate( String[] file, int srchFromIndex, String[] patterns,\n                                           String[] substitutionStrings, String stopString )", "class_method_signature": "CumulusTorSwitchService.headerSubsectionCreate( String[] file, int srchFromIndex, String[] patterns,\n                                           String[] substitutionStrings, String stopString )", "testcase": false, "constructor": false}, {"identifier": "headerLineCreate", "parameters": "( String[] file, int srchFromIndex, String pattern, String substitutionString,\n                                  List<String> newlyAddedLines, Boolean skipIfFound )", "modifiers": "private", "return": "int", "signature": "int headerLineCreate( String[] file, int srchFromIndex, String pattern, String substitutionString,\n                                  List<String> newlyAddedLines, Boolean skipIfFound )", "full_signature": "private int headerLineCreate( String[] file, int srchFromIndex, String pattern, String substitutionString,\n                                  List<String> newlyAddedLines, Boolean skipIfFound )", "class_method_signature": "CumulusTorSwitchService.headerLineCreate( String[] file, int srchFromIndex, String pattern, String substitutionString,\n                                  List<String> newlyAddedLines, Boolean skipIfFound )", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "( String msg, Exception e, HmsOobNetworkErrorCode error )", "modifiers": "private", "return": "void", "signature": "void error( String msg, Exception e, HmsOobNetworkErrorCode error )", "full_signature": "private void error( String msg, Exception e, HmsOobNetworkErrorCode error )", "class_method_signature": "CumulusTorSwitchService.error( String msg, Exception e, HmsOobNetworkErrorCode error )", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "( String msg, HmsOobNetworkErrorCode error )", "modifiers": "private", "return": "void", "signature": "void error( String msg, HmsOobNetworkErrorCode error )", "full_signature": "private void error( String msg, HmsOobNetworkErrorCode error )", "class_method_signature": "CumulusTorSwitchService.error( String msg, HmsOobNetworkErrorCode error )", "testcase": false, "constructor": false}, {"identifier": "getComponentSwitchEventList", "parameters": "( ServiceHmsNode serviceNode,\n                                                                   SwitchComponentEnum component )", "modifiers": "@Override public", "return": "List<ServerComponentEvent>", "signature": "List<ServerComponentEvent> getComponentSwitchEventList( ServiceHmsNode serviceNode,\n                                                                   SwitchComponentEnum component )", "full_signature": "@Override public List<ServerComponentEvent> getComponentSwitchEventList( ServiceHmsNode serviceNode,\n                                                                   SwitchComponentEnum component )", "class_method_signature": "CumulusTorSwitchService.getComponentSwitchEventList( ServiceHmsNode serviceNode,\n                                                                   SwitchComponentEnum component )", "testcase": false, "constructor": false}, {"identifier": "getSupportedHmsSwitchApi", "parameters": "( ServiceHmsNode serviceNode )", "modifiers": "@Override public", "return": "List<HmsApi>", "signature": "List<HmsApi> getSupportedHmsSwitchApi( ServiceHmsNode serviceNode )", "full_signature": "@Override public List<HmsApi> getSupportedHmsSwitchApi( ServiceHmsNode serviceNode )", "class_method_signature": "CumulusTorSwitchService.getSupportedHmsSwitchApi( ServiceHmsNode serviceNode )", "testcase": false, "constructor": false}, {"identifier": "setSwitchTime", "parameters": "( SwitchNode switchNode, long time )", "modifiers": "@Override public", "return": "void", "signature": "void setSwitchTime( SwitchNode switchNode, long time )", "full_signature": "@Override public void setSwitchTime( SwitchNode switchNode, long time )", "class_method_signature": "CumulusTorSwitchService.setSwitchTime( SwitchNode switchNode, long time )", "testcase": false, "constructor": false}, {"identifier": "configureSnmp", "parameters": "( SwitchNode switchNode, SwitchSnmpConfig config )", "modifiers": "@Override public", "return": "void", "signature": "void configureSnmp( SwitchNode switchNode, SwitchSnmpConfig config )", "full_signature": "@Override public void configureSnmp( SwitchNode switchNode, SwitchSnmpConfig config )", "class_method_signature": "CumulusTorSwitchService.configureSnmp( SwitchNode switchNode, SwitchSnmpConfig config )", "testcase": false, "constructor": false}, {"identifier": "getSnmp", "parameters": "( SwitchNode switchNode )", "modifiers": "@Override public", "return": "SwitchSnmpConfig", "signature": "SwitchSnmpConfig getSnmp( SwitchNode switchNode )", "full_signature": "@Override public SwitchSnmpConfig getSnmp( SwitchNode switchNode )", "class_method_signature": "CumulusTorSwitchService.getSnmp( SwitchNode switchNode )", "testcase": false, "constructor": false}], "file": "modules/cumulus-switch/src/main/java/com/vmware/vrack/hms/switches/cumulus/CumulusTorSwitchService.java"}, "focal_method": {"identifier": "createVlan", "parameters": "( SwitchNode switchNode, SwitchVlan vlan )", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )\n        throws HmsException\n    {\n        CumulusTorSwitchSession session = (CumulusTorSwitchSession) getSession( switchNode );\n\n        if ( session == null )\n        {\n            error( String.format( \"Cannot ssh to switch %s (%s)\", switchNode.getIpAddress(), switchNode.getSwitchId() ),\n                   HmsOobNetworkErrorCode.SWITCH_UNREACHABLE );\n        }\n\n        return vlanHelper.createVlan( switchNode, vlan );\n    }", "signature": "boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "full_signature": "@Override public boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "class_method_signature": "CumulusTorSwitchService.createVlan( SwitchNode switchNode, SwitchVlan vlan )", "testcase": false, "constructor": false, "invocations": ["getSession", "error", "format", "getIpAddress", "getSwitchId", "createVlan"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}