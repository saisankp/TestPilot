{"test_class": {"identifier": "TestJVoiceXmlDocumentServer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DocumentMap map;", "modifier": "private", "type": "DocumentMap", "declarator": "map", "var_name": "map"}, {"original_string": "private JVoiceXmlDocumentServer server;", "modifier": "private", "type": "JVoiceXmlDocumentServer", "declarator": "server", "var_name": "server"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/documentserver/TestJVoiceXmlDocumentServer.java"}, "test_case": {"identifier": "testGetObjectTextPlain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetObjectTextPlain() throws JVoiceXMLEvent, Exception {\n        String test = \"Pinocchio\";\n        final URI uri = map.getUri(\"/test\");\n        map.addDocument(uri, test);\n\n        final DocumentDescriptor descriptor = new DocumentDescriptor(uri);\n        Object object = server.getObject(null, descriptor,\n                DocumentServer.TEXT_PLAIN);\n        Assert.assertEquals(test, object);\n    }", "signature": "void testGetObjectTextPlain()", "full_signature": "@Test public void testGetObjectTextPlain()", "class_method_signature": "TestJVoiceXmlDocumentServer.testGetObjectTextPlain()", "testcase": true, "constructor": false, "invocations": ["getUri", "addDocument", "getObject", "assertEquals"]}, "focal_class": {"identifier": "JVoiceXmlDocumentServer", "superclass": "", "interfaces": "implements DocumentServer", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(JVoiceXmlDocumentServer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(JVoiceXmlDocumentServer.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, SchemeStrategy> strategies;", "modifier": "private final", "type": "Map<String, SchemeStrategy>", "declarator": "strategies", "var_name": "strategies"}, {"original_string": "private FetchAttributes attributes;", "modifier": "private", "type": "FetchAttributes", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private DocumentStorage storage;", "modifier": "private", "type": "DocumentStorage", "declarator": "storage", "var_name": "storage"}], "methods": [{"identifier": "JVoiceXmlDocumentServer", "parameters": "()", "modifiers": "public", "return": "", "signature": " JVoiceXmlDocumentServer()", "full_signature": "public  JVoiceXmlDocumentServer()", "class_method_signature": "JVoiceXmlDocumentServer.JVoiceXmlDocumentServer()", "testcase": false, "constructor": true}, {"identifier": "setDocumentStorage", "parameters": "(final DocumentStorage documentStorage)", "modifiers": "public", "return": "void", "signature": "void setDocumentStorage(final DocumentStorage documentStorage)", "full_signature": "public void setDocumentStorage(final DocumentStorage documentStorage)", "class_method_signature": "JVoiceXmlDocumentServer.setDocumentStorage(final DocumentStorage documentStorage)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "JVoiceXmlDocumentServer.start()", "testcase": false, "constructor": false}, {"identifier": "setSchemeStrategies", "parameters": "(final List<SchemeStrategy> schemeStrategies)", "modifiers": "public", "return": "void", "signature": "void setSchemeStrategies(final List<SchemeStrategy> schemeStrategies)", "full_signature": "public void setSchemeStrategies(final List<SchemeStrategy> schemeStrategies)", "class_method_signature": "JVoiceXmlDocumentServer.setSchemeStrategies(final List<SchemeStrategy> schemeStrategies)", "testcase": false, "constructor": false}, {"identifier": "setFetchAttributes", "parameters": "(final FetchAttributes attrs)", "modifiers": "public", "return": "void", "signature": "void setFetchAttributes(final FetchAttributes attrs)", "full_signature": "public void setFetchAttributes(final FetchAttributes attrs)", "class_method_signature": "JVoiceXmlDocumentServer.setFetchAttributes(final FetchAttributes attrs)", "testcase": false, "constructor": false}, {"identifier": "mergeFetchAttributes", "parameters": "(final FetchAttributes attrs)", "modifiers": "private", "return": "FetchAttributes", "signature": "FetchAttributes mergeFetchAttributes(final FetchAttributes attrs)", "full_signature": "private FetchAttributes mergeFetchAttributes(final FetchAttributes attrs)", "class_method_signature": "JVoiceXmlDocumentServer.mergeFetchAttributes(final FetchAttributes attrs)", "testcase": false, "constructor": false}, {"identifier": "readDocument", "parameters": "(final InputStream input)", "modifiers": "private", "return": "VoiceXmlDocument", "signature": "VoiceXmlDocument readDocument(final InputStream input)", "full_signature": "private VoiceXmlDocument readDocument(final InputStream input)", "class_method_signature": "JVoiceXmlDocumentServer.readDocument(final InputStream input)", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "(final String sessionId,\n            final DocumentDescriptor descriptor)", "modifiers": "@Override public", "return": "VoiceXmlDocument", "signature": "VoiceXmlDocument getDocument(final String sessionId,\n            final DocumentDescriptor descriptor)", "full_signature": "@Override public VoiceXmlDocument getDocument(final String sessionId,\n            final DocumentDescriptor descriptor)", "class_method_signature": "JVoiceXmlDocumentServer.getDocument(final String sessionId,\n            final DocumentDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "getSchemeStrategy", "parameters": "(final URI uri)", "modifiers": "private", "return": "SchemeStrategy", "signature": "SchemeStrategy getSchemeStrategy(final URI uri)", "full_signature": "private SchemeStrategy getSchemeStrategy(final URI uri)", "class_method_signature": "JVoiceXmlDocumentServer.getSchemeStrategy(final URI uri)", "testcase": false, "constructor": false}, {"identifier": "addSchemeStrategy", "parameters": "(final SchemeStrategy strategy)", "modifiers": "public", "return": "void", "signature": "void addSchemeStrategy(final SchemeStrategy strategy)", "full_signature": "public void addSchemeStrategy(final SchemeStrategy strategy)", "class_method_signature": "JVoiceXmlDocumentServer.addSchemeStrategy(final SchemeStrategy strategy)", "testcase": false, "constructor": false}, {"identifier": "resolveBuiltinUri", "parameters": "(final URI uri)", "modifiers": "@Override public", "return": "URI", "signature": "URI resolveBuiltinUri(final URI uri)", "full_signature": "@Override public URI resolveBuiltinUri(final URI uri)", "class_method_signature": "JVoiceXmlDocumentServer.resolveBuiltinUri(final URI uri)", "testcase": false, "constructor": false}, {"identifier": "addGrammarDocument", "parameters": "(final String sessionId,\n            final GrammarDocument document)", "modifiers": "@Override public", "return": "URI", "signature": "URI addGrammarDocument(final String sessionId,\n            final GrammarDocument document)", "full_signature": "@Override public URI addGrammarDocument(final String sessionId,\n            final GrammarDocument document)", "class_method_signature": "JVoiceXmlDocumentServer.addGrammarDocument(final String sessionId,\n            final GrammarDocument document)", "testcase": false, "constructor": false}, {"identifier": "getGrammarDocument", "parameters": "(final String sessionId,\n            final URI uri, final FetchAttributes attrs)", "modifiers": "@Override public", "return": "GrammarDocument", "signature": "GrammarDocument getGrammarDocument(final String sessionId,\n            final URI uri, final FetchAttributes attrs)", "full_signature": "@Override public GrammarDocument getGrammarDocument(final String sessionId,\n            final URI uri, final FetchAttributes attrs)", "class_method_signature": "JVoiceXmlDocumentServer.getGrammarDocument(final String sessionId,\n            final URI uri, final FetchAttributes attrs)", "testcase": false, "constructor": false}, {"identifier": "getAudioInputStream", "parameters": "(final String sessionId,\n            final URI uri)", "modifiers": "@Override public", "return": "AudioInputStream", "signature": "AudioInputStream getAudioInputStream(final String sessionId,\n            final URI uri)", "full_signature": "@Override public AudioInputStream getAudioInputStream(final String sessionId,\n            final URI uri)", "class_method_signature": "JVoiceXmlDocumentServer.getAudioInputStream(final String sessionId,\n            final URI uri)", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "modifiers": "@Override public", "return": "Object", "signature": "Object getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "full_signature": "@Override public Object getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "class_method_signature": "JVoiceXmlDocumentServer.getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "testcase": false, "constructor": false}, {"identifier": "readXml", "parameters": "(final InputStream in)", "modifiers": "private", "return": "Document", "signature": "Document readXml(final InputStream in)", "full_signature": "private Document readXml(final InputStream in)", "class_method_signature": "JVoiceXmlDocumentServer.readXml(final InputStream in)", "testcase": false, "constructor": false}, {"identifier": "storeAudio", "parameters": "(final AudioInputStream in)", "modifiers": "@Override public", "return": "URI", "signature": "URI storeAudio(final AudioInputStream in)", "full_signature": "@Override public URI storeAudio(final AudioInputStream in)", "class_method_signature": "JVoiceXmlDocumentServer.storeAudio(final AudioInputStream in)", "testcase": false, "constructor": false}, {"identifier": "getRecordingsDirectory", "parameters": "()", "modifiers": "private", "return": "File", "signature": "File getRecordingsDirectory()", "full_signature": "private File getRecordingsDirectory()", "class_method_signature": "JVoiceXmlDocumentServer.getRecordingsDirectory()", "testcase": false, "constructor": false}, {"identifier": "sessionClosed", "parameters": "(final String sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void sessionClosed(final String sessionId)", "full_signature": "@Override public void sessionClosed(final String sessionId)", "class_method_signature": "JVoiceXmlDocumentServer.sessionClosed(final String sessionId)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "JVoiceXmlDocumentServer.stop()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/documentserver/JVoiceXmlDocumentServer.java"}, "focal_method": {"identifier": "getObject", "parameters": "(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)\n            throws BadFetchError {\n        final URI uri = descriptor.getUri();\n        LOGGER.info(\"retrieving object with type '\" + type + \"' from '\" + uri\n                + \"'\");\n\n        // Determine the relevant strategy\n        final RequestMethod method = descriptor.getMethod();\n        final Collection<KeyValuePair> parameters = descriptor.getParameters();\n        final FetchAttributes attrs = descriptor.getAttributes();\n        final FetchAttributes mergedAttrs = mergeFetchAttributes(attrs);\n        final long timeout = mergedAttrs.getFetchTimeout();\n        final SchemeStrategy strategy = getSchemeStrategy(uri);\n        InputStream input = null;\n\n        final Object object;\n        try {\n            input = strategy.getInputStream(sessionId, uri, method, timeout,\n                    parameters);\n            if (type == null) {\n                final ReadBuffer buffer = new ReadBuffer();\n                buffer.read(input);\n                return buffer;\n            } else if (type.equals(TEXT_PLAIN)) {\n                final ReadBuffer buffer = new ReadBuffer();\n                buffer.read(input);\n                return buffer.toString();\n            } else if (type.equals(TEXT_XML)) {\n                object = readXml(input);\n            } else {\n                throw new BadFetchError(\"unknown type '\" + type + \"'\");\n            }\n        } catch (IOException e) {\n            throw new BadFetchError(e.getMessage(), e);\n        } catch (UnsupportedElementError e) {\n            throw new BadFetchError(e.getMessage(), e);\n        } finally {\n            if (input != null) {\n                try {\n                    input.close();\n                } catch (IOException e) {\n                    throw new BadFetchError(e);\n                }\n            }\n        }\n\n        return object;\n    }", "signature": "Object getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "full_signature": "@Override public Object getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "class_method_signature": "JVoiceXmlDocumentServer.getObject(final String sessionId,\n            final DocumentDescriptor descriptor, final String type)", "testcase": false, "constructor": false, "invocations": ["getUri", "info", "getMethod", "getParameters", "getAttributes", "mergeFetchAttributes", "getFetchTimeout", "getSchemeStrategy", "getInputStream", "read", "equals", "read", "toString", "equals", "readXml", "getMessage", "getMessage", "close"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}