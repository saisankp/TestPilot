{"test_class": {"identifier": "EventStubGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TARGET_PACKAGE = \"fi.jumi.actors.generator.reference\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_PACKAGE = \"fi.jumi.actors.generator.reference\"", "var_name": "TARGET_PACKAGE"}, {"original_string": "@Rule\n    public final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Rule\n    public final TemporaryFolder tempDir = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "tempDir = new TemporaryFolder()", "var_name": "tempDir"}, {"original_string": "private EventStubGenerator generator;", "modifier": "private", "type": "EventStubGenerator", "declarator": "generator", "var_name": "generator"}], "file": "jumi-actors-generator/src/test/java/fi/jumi/actors/generator/EventStubGeneratorTest.java"}, "test_case": {"identifier": "generates_backend_class", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generates_backend_class() {\n        assertClassEquals(\"fi.jumi.actors.generator.reference.dummyListener.EventToDummyListener\", generator.getBackend());\n    }", "signature": "void generates_backend_class()", "full_signature": "@Test public void generates_backend_class()", "class_method_signature": "EventStubGeneratorTest.generates_backend_class()", "testcase": true, "constructor": false, "invocations": ["assertClassEquals", "getBackend"]}, "focal_class": {"identifier": "EventStubGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JavaType listenerInterface;", "modifier": "private final", "type": "JavaType", "declarator": "listenerInterface", "var_name": "listenerInterface"}, {"original_string": "private final List<JavaMethod> listenerMethods;", "modifier": "private final", "type": "List<JavaMethod>", "declarator": "listenerMethods", "var_name": "listenerMethods"}, {"original_string": "private final JavaType eventizerInterface;", "modifier": "private final", "type": "JavaType", "declarator": "eventizerInterface", "var_name": "eventizerInterface"}, {"original_string": "private final JavaType eventInterface;", "modifier": "private final", "type": "JavaType", "declarator": "eventInterface", "var_name": "eventInterface"}, {"original_string": "private final JavaType senderInterface;", "modifier": "private final", "type": "JavaType", "declarator": "senderInterface", "var_name": "senderInterface"}, {"original_string": "private final String eventizerPackage;", "modifier": "private final", "type": "String", "declarator": "eventizerPackage", "var_name": "eventizerPackage"}, {"original_string": "private final String stubsPackage;", "modifier": "private final", "type": "String", "declarator": "stubsPackage", "var_name": "stubsPackage"}, {"original_string": "private String generatorName = getClass().getName();", "modifier": "private", "type": "String", "declarator": "generatorName = getClass().getName()", "var_name": "generatorName"}, {"original_string": "private Date generationDate = new Date();", "modifier": "private", "type": "Date", "declarator": "generationDate = new Date()", "var_name": "generationDate"}], "methods": [{"identifier": "EventStubGenerator", "parameters": "(TypeElement listenerType, String targetPackage)", "modifiers": "public", "return": "", "signature": " EventStubGenerator(TypeElement listenerType, String targetPackage)", "full_signature": "public  EventStubGenerator(TypeElement listenerType, String targetPackage)", "class_method_signature": "EventStubGenerator.EventStubGenerator(TypeElement listenerType, String targetPackage)", "testcase": false, "constructor": true}, {"identifier": "setGeneratorName", "parameters": "(String generatorName)", "modifiers": "public", "return": "void", "signature": "void setGeneratorName(String generatorName)", "full_signature": "public void setGeneratorName(String generatorName)", "class_method_signature": "EventStubGenerator.setGeneratorName(String generatorName)", "testcase": false, "constructor": false}, {"identifier": "setGenerationDate", "parameters": "(Date generationDate)", "modifiers": "public", "return": "void", "signature": "void setGenerationDate(Date generationDate)", "full_signature": "public void setGenerationDate(Date generationDate)", "class_method_signature": "EventStubGenerator.setGenerationDate(Date generationDate)", "testcase": false, "constructor": false}, {"identifier": "getGeneratedClasses", "parameters": "()", "modifiers": "public", "return": "List<GeneratedClass>", "signature": "List<GeneratedClass> getGeneratedClasses()", "full_signature": "public List<GeneratedClass> getGeneratedClasses()", "class_method_signature": "EventStubGenerator.getGeneratedClasses()", "testcase": false, "constructor": false}, {"identifier": "getEventizer", "parameters": "()", "modifiers": "public", "return": "GeneratedClass", "signature": "GeneratedClass getEventizer()", "full_signature": "public GeneratedClass getEventizer()", "class_method_signature": "EventStubGenerator.getEventizer()", "testcase": false, "constructor": false}, {"identifier": "getFrontend", "parameters": "()", "modifiers": "public", "return": "GeneratedClass", "signature": "GeneratedClass getFrontend()", "full_signature": "public GeneratedClass getFrontend()", "class_method_signature": "EventStubGenerator.getFrontend()", "testcase": false, "constructor": false}, {"identifier": "getBackend", "parameters": "()", "modifiers": "public", "return": "GeneratedClass", "signature": "GeneratedClass getBackend()", "full_signature": "public GeneratedClass getBackend()", "class_method_signature": "EventStubGenerator.getBackend()", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "public", "return": "List<GeneratedClass>", "signature": "List<GeneratedClass> getEvents()", "full_signature": "public List<GeneratedClass> getEvents()", "class_method_signature": "EventStubGenerator.getEvents()", "testcase": false, "constructor": false}, {"identifier": "addGeneratedAnnotation", "parameters": "(ClassBuilder cb)", "modifiers": "private", "return": "void", "signature": "void addGeneratedAnnotation(ClassBuilder cb)", "full_signature": "private void addGeneratedAnnotation(ClassBuilder cb)", "class_method_signature": "EventStubGenerator.addGeneratedAnnotation(ClassBuilder cb)", "testcase": false, "constructor": false}, {"identifier": "myEventizerName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String myEventizerName()", "full_signature": "private String myEventizerName()", "class_method_signature": "EventStubGenerator.myEventizerName()", "testcase": false, "constructor": false}, {"identifier": "myFrontendName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String myFrontendName()", "full_signature": "private String myFrontendName()", "class_method_signature": "EventStubGenerator.myFrontendName()", "testcase": false, "constructor": false}, {"identifier": "myBackendName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String myBackendName()", "full_signature": "private String myBackendName()", "class_method_signature": "EventStubGenerator.myBackendName()", "testcase": false, "constructor": false}, {"identifier": "myEventWrapperName", "parameters": "(JavaMethod method)", "modifiers": "private", "return": "String", "signature": "String myEventWrapperName(JavaMethod method)", "full_signature": "private String myEventWrapperName(JavaMethod method)", "class_method_signature": "EventStubGenerator.myEventWrapperName(JavaMethod method)", "testcase": false, "constructor": false}, {"identifier": "getterName", "parameters": "(String field)", "modifiers": "private static", "return": "String", "signature": "String getterName(String field)", "full_signature": "private static String getterName(String field)", "class_method_signature": "EventStubGenerator.getterName(String field)", "testcase": false, "constructor": false}], "file": "jumi-actors-generator/src/main/java/fi/jumi/actors/generator/EventStubGenerator.java"}, "focal_method": {"identifier": "getBackend", "parameters": "()", "modifiers": "public", "return": "GeneratedClass", "body": "public GeneratedClass getBackend() {\n        JavaVar target = JavaVar.of(listenerInterface, \"target\");\n\n        ClassBuilder cb = new ClassBuilder(myBackendName(), stubsPackage);\n        addGeneratedAnnotation(cb);\n        cb.implement(senderInterface);\n        cb.fieldsAndConstructorParameters(Arrays.asList(target));\n\n        cb.addMethod(\"\" +\n                \"    @Override\\n\" +\n                \"    public void send(\" + cb.imports.getSimpleName(eventInterface) + \" message) {\\n\" +\n                \"        message.fireOn(\" + target.getName() + \");\\n\" +\n                \"    }\\n\");\n\n        return cb.build();\n    }", "signature": "GeneratedClass getBackend()", "full_signature": "public GeneratedClass getBackend()", "class_method_signature": "EventStubGenerator.getBackend()", "testcase": false, "constructor": false, "invocations": ["of", "myBackendName", "addGeneratedAnnotation", "implement", "fieldsAndConstructorParameters", "asList", "addMethod", "getSimpleName", "getName", "build"]}, "repository": {"repo_id": 6426667, "url": "https://github.com/luontola/jumi-actors", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 78, "size": 2989, "license": "licensed"}}