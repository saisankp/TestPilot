{"test_class": {"identifier": "LocalJournalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected ChangeJournal journal;", "modifier": "protected", "type": "ChangeJournal", "declarator": "journal", "var_name": "journal"}, {"original_string": "private DateTime timestamp1;", "modifier": "private", "type": "DateTime", "declarator": "timestamp1", "var_name": "timestamp1"}, {"original_string": "private DateTime timestamp2;", "modifier": "private", "type": "DateTime", "declarator": "timestamp2", "var_name": "timestamp2"}, {"original_string": "private DateTime timestamp3;", "modifier": "private", "type": "DateTime", "declarator": "timestamp3", "var_name": "timestamp3"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/journal/LocalJournalTest.java"}, "test_case": {"identifier": "shouldDetectedStartedState", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDetectedStartedState() throws Exception {\n        assertTrue(\"Journal should've been started\", journal.started());        \n    }", "signature": "void shouldDetectedStartedState()", "full_signature": "@Test public void shouldDetectedStartedState()", "class_method_signature": "LocalJournalTest.shouldDetectedStartedState()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "started"]}, "focal_class": {"identifier": "LocalJournal", "superclass": "", "interfaces": "implements ChangeJournal", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(LocalJournal.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(LocalJournal.class)", "var_name": "LOGGER"}, {"original_string": "private static final int DEFAULT_MAX_TIME_TO_KEEP_FILES = -1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_TIME_TO_KEEP_FILES = -1", "var_name": "DEFAULT_MAX_TIME_TO_KEEP_FILES"}, {"original_string": "private static final String RECORDS_FIELD = \"records\";", "modifier": "private static final", "type": "String", "declarator": "RECORDS_FIELD = \"records\"", "var_name": "RECORDS_FIELD"}, {"original_string": "private static final String JOURNAL_ID_FIELD = \"journalId\";", "modifier": "private static final", "type": "String", "declarator": "JOURNAL_ID_FIELD = \"journalId\"", "var_name": "JOURNAL_ID_FIELD"}, {"original_string": "private static final TimeBasedKeys TIME_BASED_KEYS = TimeBasedKeys.create();", "modifier": "private static final", "type": "TimeBasedKeys", "declarator": "TIME_BASED_KEYS = TimeBasedKeys.create()", "var_name": "TIME_BASED_KEYS"}, {"original_string": "private static final long DEFAULT_LOCAL_SEARCH_DELTA = TimeUnit.SECONDS.toMillis(1);", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_LOCAL_SEARCH_DELTA = TimeUnit.SECONDS.toMillis(1)", "var_name": "DEFAULT_LOCAL_SEARCH_DELTA"}, {"original_string": "private final String journalLocation;", "modifier": "private final", "type": "String", "declarator": "journalLocation", "var_name": "journalLocation"}, {"original_string": "private final boolean asyncWritesEnabled;", "modifier": "private final", "type": "boolean", "declarator": "asyncWritesEnabled", "var_name": "asyncWritesEnabled"}, {"original_string": "private final long maxTimeToKeepEntriesMillis;", "modifier": "private final", "type": "long", "declarator": "maxTimeToKeepEntriesMillis", "var_name": "maxTimeToKeepEntriesMillis"}, {"original_string": "private String journalId;", "modifier": "private", "type": "String", "declarator": "journalId", "var_name": "journalId"}, {"original_string": "private DB journalDB;", "modifier": "private", "type": "DB", "declarator": "journalDB", "var_name": "journalDB"}, {"original_string": "private BTreeMap<Long, JournalRecord> records;", "modifier": "private", "type": "BTreeMap<Long, JournalRecord>", "declarator": "records", "var_name": "records"}, {"original_string": "private long searchTimeDelta;", "modifier": "private", "type": "long", "declarator": "searchTimeDelta", "var_name": "searchTimeDelta"}, {"original_string": "private volatile boolean stopped;", "modifier": "private volatile", "type": "boolean", "declarator": "stopped", "var_name": "stopped"}], "methods": [{"identifier": "LocalJournal", "parameters": "( String journalLocation,\n                         boolean asyncWritesEnabled,\n                         int maxDaysToKeepEntries )", "modifiers": "public", "return": "", "signature": " LocalJournal( String journalLocation,\n                         boolean asyncWritesEnabled,\n                         int maxDaysToKeepEntries )", "full_signature": "public  LocalJournal( String journalLocation,\n                         boolean asyncWritesEnabled,\n                         int maxDaysToKeepEntries )", "class_method_signature": "LocalJournal.LocalJournal( String journalLocation,\n                         boolean asyncWritesEnabled,\n                         int maxDaysToKeepEntries )", "testcase": false, "constructor": true}, {"identifier": "LocalJournal", "parameters": "( String journalLocation )", "modifiers": "protected", "return": "", "signature": " LocalJournal( String journalLocation )", "full_signature": "protected  LocalJournal( String journalLocation )", "class_method_signature": "LocalJournal.LocalJournal( String journalLocation )", "testcase": false, "constructor": true}, {"identifier": "started", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean started()", "full_signature": "@Override public boolean started()", "class_method_signature": "LocalJournal.started()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@SuppressWarnings( \"rawtypes\" ) @Override public synchronized", "return": "void", "signature": "void start()", "full_signature": "@SuppressWarnings( \"rawtypes\" ) @Override public synchronized void start()", "class_method_signature": "LocalJournal.start()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public synchronized void shutdown()", "class_method_signature": "LocalJournal.shutdown()", "testcase": false, "constructor": false}, {"identifier": "notify", "parameters": "( ChangeSet changeSet )", "modifiers": "@Override public", "return": "void", "signature": "void notify( ChangeSet changeSet )", "full_signature": "@Override public void notify( ChangeSet changeSet )", "class_method_signature": "LocalJournal.notify( ChangeSet changeSet )", "testcase": false, "constructor": false}, {"identifier": "addRecords", "parameters": "( JournalRecord... records )", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addRecords( JournalRecord... records )", "full_signature": "@Override public synchronized void addRecords( JournalRecord... records )", "class_method_signature": "LocalJournal.addRecords( JournalRecord... records )", "testcase": false, "constructor": false}, {"identifier": "removeOldRecords", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void removeOldRecords()", "full_signature": "@Override public synchronized void removeOldRecords()", "class_method_signature": "LocalJournal.removeOldRecords()", "testcase": false, "constructor": false}, {"identifier": "removeRecordsOlderThan", "parameters": "( long millisInUtc )", "modifiers": "protected", "return": "void", "signature": "void removeRecordsOlderThan( long millisInUtc )", "full_signature": "protected void removeRecordsOlderThan( long millisInUtc )", "class_method_signature": "LocalJournal.removeRecordsOlderThan( long millisInUtc )", "testcase": false, "constructor": false}, {"identifier": "getJournalLocation", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getJournalLocation()", "full_signature": "protected String getJournalLocation()", "class_method_signature": "LocalJournal.getJournalLocation()", "testcase": false, "constructor": false}, {"identifier": "allRecords", "parameters": "( boolean descendingOrder )", "modifiers": "@Override public", "return": "Records", "signature": "Records allRecords( boolean descendingOrder )", "full_signature": "@Override public Records allRecords( boolean descendingOrder )", "class_method_signature": "LocalJournal.allRecords( boolean descendingOrder )", "testcase": false, "constructor": false}, {"identifier": "lastRecord", "parameters": "()", "modifiers": "@Override public", "return": "JournalRecord", "signature": "JournalRecord lastRecord()", "full_signature": "@Override public JournalRecord lastRecord()", "class_method_signature": "LocalJournal.lastRecord()", "testcase": false, "constructor": false}, {"identifier": "recordsNewerThan", "parameters": "( LocalDateTime changeSetTime,\n                                     boolean inclusive,\n                                     boolean descendingOrder )", "modifiers": "@Override public", "return": "Records", "signature": "Records recordsNewerThan( LocalDateTime changeSetTime,\n                                     boolean inclusive,\n                                     boolean descendingOrder )", "full_signature": "@Override public Records recordsNewerThan( LocalDateTime changeSetTime,\n                                     boolean inclusive,\n                                     boolean descendingOrder )", "class_method_signature": "LocalJournal.recordsNewerThan( LocalDateTime changeSetTime,\n                                     boolean inclusive,\n                                     boolean descendingOrder )", "testcase": false, "constructor": false}, {"identifier": "changedNodesSince", "parameters": "( final long timestamp )", "modifiers": "@Override public", "return": "Iterator<NodeKey>", "signature": "Iterator<NodeKey> changedNodesSince( final long timestamp )", "full_signature": "@Override public Iterator<NodeKey> changedNodesSince( final long timestamp )", "class_method_signature": "LocalJournal.changedNodesSince( final long timestamp )", "testcase": false, "constructor": false}, {"identifier": "journalId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String journalId()", "full_signature": "@Override public String journalId()", "class_method_signature": "LocalJournal.journalId()", "testcase": false, "constructor": false}, {"identifier": "withSearchTimeDelta", "parameters": "( final long searchTimeDelta )", "modifiers": "protected", "return": "LocalJournal", "signature": "LocalJournal withSearchTimeDelta( final long searchTimeDelta )", "full_signature": "protected LocalJournal withSearchTimeDelta( final long searchTimeDelta )", "class_method_signature": "LocalJournal.withSearchTimeDelta( final long searchTimeDelta )", "testcase": false, "constructor": false}, {"identifier": "recordsFrom", "parameters": "( final NavigableMap<Long, JournalRecord> content, boolean descending )", "modifiers": "private static", "return": "Records", "signature": "Records recordsFrom( final NavigableMap<Long, JournalRecord> content, boolean descending )", "full_signature": "private static Records recordsFrom( final NavigableMap<Long, JournalRecord> content, boolean descending )", "class_method_signature": "LocalJournal.recordsFrom( final NavigableMap<Long, JournalRecord> content, boolean descending )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/journal/LocalJournal.java"}, "focal_method": {"identifier": "started", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean started() {\n        return !stopped;\n    }", "signature": "boolean started()", "full_signature": "@Override public boolean started()", "class_method_signature": "LocalJournal.started()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}