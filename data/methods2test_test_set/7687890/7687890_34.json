{"test_class": {"identifier": "IssuanceHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static ObjectFactory of = new ObjectFactory();", "modifier": "static", "type": "ObjectFactory", "declarator": "of = new ObjectFactory()", "var_name": "of"}, {"original_string": "private final SpecAndPolicy idcard_idemix = new SpecAndPolicy(\"idcard_idemix\",\n      CryptoTechnology.IDEMIX, null, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\",\n      \"http://my.country/identitycard/issuancekey_v1.0/idemix\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "idcard_idemix = new SpecAndPolicy(\"idcard_idemix\",\n      CryptoTechnology.IDEMIX, null, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\",\n      \"http://my.country/identitycard/issuancekey_v1.0/idemix\")", "var_name": "idcard_idemix"}, {"original_string": "private final SpecAndPolicy idcard_uprove = new SpecAndPolicy(\"idcard_uprove\",\n      CryptoTechnology.UPROVE, null, 10, 1,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\",\n      \"http://my.country/identitycard/issuancekey_v1.0/uprove\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "idcard_uprove = new SpecAndPolicy(\"idcard_uprove\",\n      CryptoTechnology.UPROVE, null, 10, 1,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\",\n      \"http://my.country/identitycard/issuancekey_v1.0/uprove\")", "var_name": "idcard_uprove"}, {"original_string": "@SuppressWarnings(\"unused\")\n  private final SpecAndPolicy idcard_missmatch = new SpecAndPolicy(\"idcard_missmatch\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\");", "modifier": "@SuppressWarnings(\"unused\")\n  private final", "type": "SpecAndPolicy", "declarator": "idcard_missmatch = new SpecAndPolicy(\"idcard_missmatch\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationSimpleIdentitycard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicySimpleIdentitycard.xml\")", "var_name": "idcard_missmatch"}, {"original_string": "private final SpecAndPolicy creditcard_visa = new SpecAndPolicy(\"creditcard_visa\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationRevocableCreditcard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyRevocableCreditcardVisa.xml\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "creditcard_visa = new SpecAndPolicy(\"creditcard_visa\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationRevocableCreditcard.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyRevocableCreditcardVisa.xml\")", "var_name": "creditcard_visa"}, {"original_string": "private final SpecAndPolicy creditcard_amex = new SpecAndPolicy(\"creditcard_amex\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationRevocableCreditcardAmex.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyRevocableCreditcardAmex.xml\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "creditcard_amex = new SpecAndPolicy(\"creditcard_amex\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationRevocableCreditcardAmex.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyRevocableCreditcardAmex.xml\")", "var_name": "creditcard_amex"}, {"original_string": "private final SpecAndPolicy passport_ch = new SpecAndPolicy(\"passport_ch\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationPassport.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyPassport.xml\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "passport_ch = new SpecAndPolicy(\"passport_ch\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationPassport.xml\",\n      \"/eu/abc4trust/sampleXml/issuance/issuancePolicyPassport.xml\")", "var_name": "passport_ch"}, {"original_string": "private final SpecAndPolicy patras_university = new SpecAndPolicy(\"patras_university\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/patras/credentialSpecificationPatrasUniversity.xml\",\n      \"/eu/abc4trust/sampleXml/patras/issuancePolicyPatrasUniversity.xml\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "patras_university = new SpecAndPolicy(\"patras_university\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/patras/credentialSpecificationPatrasUniversity.xml\",\n      \"/eu/abc4trust/sampleXml/patras/issuancePolicyPatrasUniversity.xml\")", "var_name": "patras_university"}, {"original_string": "private final SpecAndPolicy patras_cource = new SpecAndPolicy(\"patras_course\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/patras/credentialSpecificationPatrasCourse.xml\",\n      \"/eu/abc4trust/sampleXml/patras/issuancePolicyPatrasCourse.xml\");", "modifier": "private final", "type": "SpecAndPolicy", "declarator": "patras_cource = new SpecAndPolicy(\"patras_course\",\n      CryptoTechnology.IDEMIX, 10, 0,\n      \"/eu/abc4trust/sampleXml/patras/credentialSpecificationPatrasCourse.xml\",\n      \"/eu/abc4trust/sampleXml/patras/issuancePolicyPatrasCourse.xml\")", "var_name": "patras_cource"}, {"original_string": "@SuppressWarnings(\"unused\")\n  private final String credSpecUID = \"http://my.country/identitycard/specification\";", "modifier": "@SuppressWarnings(\"unused\")\n  private final", "type": "String", "declarator": "credSpecUID = \"http://my.country/identitycard/specification\"", "var_name": "credSpecUID"}], "file": "Code/core-abce/service-helper/src/test/java/eu/abc4trust/ri/servicehelper/issuer/IssuanceHelperTest.java"}, "test_case": {"identifier": "test_creditcard_amex", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n  public void test_creditcard_amex() throws Exception {\n\n    IssuanceHelper.resetInstance();\n    this.test_init(\"amex\", this.creditcard_amex);\n  }", "signature": "void test_creditcard_amex()", "full_signature": "@Test() public void test_creditcard_amex()", "class_method_signature": "IssuanceHelperTest.test_creditcard_amex()", "testcase": true, "constructor": false, "invocations": ["resetInstance", "test_init"]}, "focal_class": {"identifier": "IssuanceHelper", "superclass": "extends AbstractHelper", "interfaces": "", "fields": [{"original_string": "static Logger log = Logger.getLogger(IssuanceHelper.class.getName());", "modifier": "static", "type": "Logger", "declarator": "log = Logger.getLogger(IssuanceHelper.class.getName())", "var_name": "log"}, {"original_string": "private static IssuanceHelper instance;", "modifier": "private static", "type": "IssuanceHelper", "declarator": "instance", "var_name": "instance"}, {"original_string": "private IssuerAbcEngine singleEngine = null;", "modifier": "private", "type": "IssuerAbcEngine", "declarator": "singleEngine = null", "var_name": "singleEngine"}, {"original_string": "private TokenStorageIssuer issuerTokenStorage;", "modifier": "private", "type": "TokenStorageIssuer", "declarator": "issuerTokenStorage", "var_name": "issuerTokenStorage"}, {"original_string": "private CredentialManager credentialManager;", "modifier": "private", "type": "CredentialManager", "declarator": "credentialManager", "var_name": "credentialManager"}, {"original_string": "private final Map<String, SpecAndPolicy> specAndPolicyMap = new HashMap<String, SpecAndPolicy>();", "modifier": "private final", "type": "Map<String, SpecAndPolicy>", "declarator": "specAndPolicyMap = new HashMap<String, SpecAndPolicy>()", "var_name": "specAndPolicyMap"}, {"original_string": "private Random random;", "modifier": "private", "type": "Random", "declarator": "random", "var_name": "random"}, {"original_string": "private final ObjectFactory of = new ObjectFactory();", "modifier": "private final", "type": "ObjectFactory", "declarator": "of = new ObjectFactory()", "var_name": "of"}, {"original_string": "private final String publicResourcesPrefix;", "modifier": "private final", "type": "String", "declarator": "publicResourcesPrefix", "var_name": "publicResourcesPrefix"}, {"original_string": "private final String privateStoragePrefix;", "modifier": "private final", "type": "String", "declarator": "privateStoragePrefix", "var_name": "privateStoragePrefix"}, {"original_string": "private static final boolean STORE_RESOURCES_AS_SERIALIZED_JAVA_OBJECTS = false;", "modifier": "private static final", "type": "boolean", "declarator": "STORE_RESOURCES_AS_SERIALIZED_JAVA_OBJECTS = false", "var_name": "STORE_RESOURCES_AS_SERIALIZED_JAVA_OBJECTS"}, {"original_string": "private SystemParameters generatedSystemParameters = null;", "modifier": "private", "type": "SystemParameters", "declarator": "generatedSystemParameters = null", "var_name": "generatedSystemParameters"}], "methods": [{"identifier": "isInit", "parameters": "()", "modifiers": "public static synchronized", "return": "boolean", "signature": "boolean isInit()", "full_signature": "public static synchronized boolean isInit()", "class_method_signature": "IssuanceHelper.isInit()", "testcase": false, "constructor": false}, {"identifier": "resetInstance", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void resetInstance()", "full_signature": "public static synchronized void resetInstance()", "class_method_signature": "IssuanceHelper.resetInstance()", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static synchronized", "return": "IssuanceHelper", "signature": "IssuanceHelper getInstance()", "full_signature": "public static synchronized IssuanceHelper getInstance()", "class_method_signature": "IssuanceHelper.getInstance()", "testcase": false, "constructor": false}, {"identifier": "IssuanceHelper", "parameters": "(String publicResourcesPrefix, String privateStoragePrefix)", "modifiers": "private", "return": "", "signature": " IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix)", "full_signature": "private  IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix)", "class_method_signature": "IssuanceHelper.IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix)", "testcase": false, "constructor": true}, {"identifier": "checkAndGenerateSystemParameters", "parameters": "(int keyLength)", "modifiers": "private", "return": "void", "signature": "void checkAndGenerateSystemParameters(int keyLength)", "full_signature": "private void checkAndGenerateSystemParameters(int keyLength)", "class_method_signature": "IssuanceHelper.checkAndGenerateSystemParameters(int keyLength)", "testcase": false, "constructor": false}, {"identifier": "initInstance", "parameters": "(int keyLength,\n      String publicResourcesPrefix, String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "modifiers": "public static synchronized", "return": "IssuanceHelper", "signature": "IssuanceHelper initInstance(int keyLength,\n      String publicResourcesPrefix, String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "full_signature": "public static synchronized IssuanceHelper initInstance(int keyLength,\n      String publicResourcesPrefix, String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "class_method_signature": "IssuanceHelper.initInstance(int keyLength,\n      String publicResourcesPrefix, String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "testcase": false, "constructor": false}, {"identifier": "initInstanceWithExitingSystemPareters", "parameters": "(\n      SystemParameters foreignSystemParameters, List<CredentialSpecification> foreignCredSpecList,\n      List<IssuerParameters> foreignIssuerParamList, String publicResourcesPrefix,\n      String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "modifiers": "public static synchronized", "return": "IssuanceHelper", "signature": "IssuanceHelper initInstanceWithExitingSystemPareters(\n      SystemParameters foreignSystemParameters, List<CredentialSpecification> foreignCredSpecList,\n      List<IssuerParameters> foreignIssuerParamList, String publicResourcesPrefix,\n      String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "full_signature": "public static synchronized IssuanceHelper initInstanceWithExitingSystemPareters(\n      SystemParameters foreignSystemParameters, List<CredentialSpecification> foreignCredSpecList,\n      List<IssuerParameters> foreignIssuerParamList, String publicResourcesPrefix,\n      String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "class_method_signature": "IssuanceHelper.initInstanceWithExitingSystemPareters(\n      SystemParameters foreignSystemParameters, List<CredentialSpecification> foreignCredSpecList,\n      List<IssuerParameters> foreignIssuerParamList, String publicResourcesPrefix,\n      String privateStoragePrefix, SpecAndPolicy[] specAndPolicyList,\n      List<RevocationAuthorityParameters> revocationAuthorityParametersList)", "testcase": false, "constructor": false}, {"identifier": "initInstanceForService", "parameters": "(\n      String systemAndIssuerParamsPrefix, String fileStoragePrefix)", "modifiers": "public static synchronized", "return": "IssuanceHelper", "signature": "IssuanceHelper initInstanceForService(\n      String systemAndIssuerParamsPrefix, String fileStoragePrefix)", "full_signature": "public static synchronized IssuanceHelper initInstanceForService(\n      String systemAndIssuerParamsPrefix, String fileStoragePrefix)", "class_method_signature": "IssuanceHelper.initInstanceForService(\n      String systemAndIssuerParamsPrefix, String fileStoragePrefix)", "testcase": false, "constructor": false}, {"identifier": "verifyFiles", "parameters": "(boolean wipe_existing_storage,\n      String fileStoragePrefix, CryptoEngine cryptoEngine)", "modifiers": "public static synchronized", "return": "StorageFiles", "signature": "StorageFiles verifyFiles(boolean wipe_existing_storage,\n      String fileStoragePrefix, CryptoEngine cryptoEngine)", "full_signature": "public static synchronized StorageFiles verifyFiles(boolean wipe_existing_storage,\n      String fileStoragePrefix, CryptoEngine cryptoEngine)", "class_method_signature": "IssuanceHelper.verifyFiles(boolean wipe_existing_storage,\n      String fileStoragePrefix, CryptoEngine cryptoEngine)", "testcase": false, "constructor": false}, {"identifier": "IssuanceHelper", "parameters": "(String publicResourcesPrefix, String privateStoragePrefix,\n      String[] revocationAuthorityParametersResourcesList)", "modifiers": "private", "return": "", "signature": " IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix,\n      String[] revocationAuthorityParametersResourcesList)", "full_signature": "private  IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix,\n      String[] revocationAuthorityParametersResourcesList)", "class_method_signature": "IssuanceHelper.IssuanceHelper(String publicResourcesPrefix, String privateStoragePrefix,\n      String[] revocationAuthorityParametersResourcesList)", "testcase": false, "constructor": true}, {"identifier": "createFoldersIfNoneExist", "parameters": "(String publicResources, String privateResources)", "modifiers": "private", "return": "void", "signature": "void createFoldersIfNoneExist(String publicResources, String privateResources)", "full_signature": "private void createFoldersIfNoneExist(String publicResources, String privateResources)", "class_method_signature": "IssuanceHelper.createFoldersIfNoneExist(String publicResources, String privateResources)", "testcase": false, "constructor": false}, {"identifier": "setupConfiguration", "parameters": "()", "modifiers": "private", "return": "AbceConfigurationImpl", "signature": "AbceConfigurationImpl setupConfiguration()", "full_signature": "private AbceConfigurationImpl setupConfiguration()", "class_method_signature": "IssuanceHelper.setupConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getFileStoragePrefix", "parameters": "(String filePrefix, CryptoEngine cryptoEngine)", "modifiers": "public static", "return": "String", "signature": "String getFileStoragePrefix(String filePrefix, CryptoEngine cryptoEngine)", "full_signature": "public static String getFileStoragePrefix(String filePrefix, CryptoEngine cryptoEngine)", "class_method_signature": "IssuanceHelper.getFileStoragePrefix(String filePrefix, CryptoEngine cryptoEngine)", "testcase": false, "constructor": false}, {"identifier": "createNewSystemParametersKeylength", "parameters": "(int keyLength)", "modifiers": "public", "return": "SystemParameters", "signature": "SystemParameters createNewSystemParametersKeylength(int keyLength)", "full_signature": "public SystemParameters createNewSystemParametersKeylength(int keyLength)", "class_method_signature": "IssuanceHelper.createNewSystemParametersKeylength(int keyLength)", "testcase": false, "constructor": false}, {"identifier": "createSystemParameters", "parameters": "(IssuerAbcEngine engine, int keyLength)", "modifiers": "private", "return": "void", "signature": "void createSystemParameters(IssuerAbcEngine engine, int keyLength)", "full_signature": "private void createSystemParameters(IssuerAbcEngine engine, int keyLength)", "class_method_signature": "IssuanceHelper.createSystemParameters(IssuerAbcEngine engine, int keyLength)", "testcase": false, "constructor": false}, {"identifier": "storeAndPublishSystemParameters", "parameters": "()", "modifiers": "private", "return": "SystemParameters", "signature": "SystemParameters storeAndPublishSystemParameters()", "full_signature": "private SystemParameters storeAndPublishSystemParameters()", "class_method_signature": "IssuanceHelper.storeAndPublishSystemParameters()", "testcase": false, "constructor": false}, {"identifier": "initIssuerParemeterList", "parameters": "(SpecAndPolicy[] specAndPolicyList,\n      CredentialManager credentialManager)", "modifiers": "private", "return": "void", "signature": "void initIssuerParemeterList(SpecAndPolicy[] specAndPolicyList,\n      CredentialManager credentialManager)", "full_signature": "private void initIssuerParemeterList(SpecAndPolicy[] specAndPolicyList,\n      CredentialManager credentialManager)", "class_method_signature": "IssuanceHelper.initIssuerParemeterList(SpecAndPolicy[] specAndPolicyList,\n      CredentialManager credentialManager)", "testcase": false, "constructor": false}, {"identifier": "initIssuerParemeters", "parameters": "(\n      // CryptoEngine cryptoEngine,\n      // IssuerAbcEngine initEngine, KeyManager keyManager,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      SpecAndPolicy currentSap, CredentialManager credentialManager)", "modifiers": "private", "return": "void", "signature": "void initIssuerParemeters(\n      // CryptoEngine cryptoEngine,\n      // IssuerAbcEngine initEngine, KeyManager keyManager,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      SpecAndPolicy currentSap, CredentialManager credentialManager)", "full_signature": "private void initIssuerParemeters(\n      // CryptoEngine cryptoEngine,\n      // IssuerAbcEngine initEngine, KeyManager keyManager,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      SpecAndPolicy currentSap, CredentialManager credentialManager)", "class_method_signature": "IssuanceHelper.initIssuerParemeters(\n      // CryptoEngine cryptoEngine,\n      // IssuerAbcEngine initEngine, KeyManager keyManager,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      SpecAndPolicy currentSap, CredentialManager credentialManager)", "testcase": false, "constructor": false}, {"identifier": "setupAndStoreIssuerParameters", "parameters": "(CryptoTechnology cryptoTechnology,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      CredentialSpecification credSpec, URI hash, URI issuerParamsUid, URI revocationParamsUid,\n      List<FriendlyDescription> friendlyDescriptions, int maximalNumberOfAttributes,\n      int numberOfTokens)", "modifiers": "private", "return": "IssuerParameters", "signature": "IssuerParameters setupAndStoreIssuerParameters(CryptoTechnology cryptoTechnology,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      CredentialSpecification credSpec, URI hash, URI issuerParamsUid, URI revocationParamsUid,\n      List<FriendlyDescription> friendlyDescriptions, int maximalNumberOfAttributes,\n      int numberOfTokens)", "full_signature": "private IssuerParameters setupAndStoreIssuerParameters(CryptoTechnology cryptoTechnology,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      CredentialSpecification credSpec, URI hash, URI issuerParamsUid, URI revocationParamsUid,\n      List<FriendlyDescription> friendlyDescriptions, int maximalNumberOfAttributes,\n      int numberOfTokens)", "class_method_signature": "IssuanceHelper.setupAndStoreIssuerParameters(CryptoTechnology cryptoTechnology,\n      String systemAndIssuerParamsPrefix, SystemParameters systemParameters,\n      CredentialSpecification credSpec, URI hash, URI issuerParamsUid, URI revocationParamsUid,\n      List<FriendlyDescription> friendlyDescriptions, int maximalNumberOfAttributes,\n      int numberOfTokens)", "testcase": false, "constructor": false}, {"identifier": "getParamsFilename", "parameters": "(String prefix, String suffix, URI issuerParamsUid)", "modifiers": "private", "return": "String", "signature": "String getParamsFilename(String prefix, String suffix, URI issuerParamsUid)", "full_signature": "private String getParamsFilename(String prefix, String suffix, URI issuerParamsUid)", "class_method_signature": "IssuanceHelper.getParamsFilename(String prefix, String suffix, URI issuerParamsUid)", "testcase": false, "constructor": false}, {"identifier": "getParamsFilename", "parameters": "(String prefix, URI issuerParamsUid, boolean urnScheme)", "modifiers": "private", "return": "String", "signature": "String getParamsFilename(String prefix, URI issuerParamsUid, boolean urnScheme)", "full_signature": "private String getParamsFilename(String prefix, URI issuerParamsUid, boolean urnScheme)", "class_method_signature": "IssuanceHelper.getParamsFilename(String prefix, URI issuerParamsUid, boolean urnScheme)", "testcase": false, "constructor": false}, {"identifier": "getCredSpecFilename", "parameters": "(URI uid)", "modifiers": "private", "return": "String", "signature": "String getCredSpecFilename(URI uid)", "full_signature": "private String getCredSpecFilename(URI uid)", "class_method_signature": "IssuanceHelper.getCredSpecFilename(URI uid)", "testcase": false, "constructor": false}, {"identifier": "checkIfCredSpecIsInKeystoreAddIfAbsent", "parameters": "(KeyManager keyManager,\n      CredentialSpecification credSpec)", "modifiers": "private", "return": "void", "signature": "void checkIfCredSpecIsInKeystoreAddIfAbsent(KeyManager keyManager,\n      CredentialSpecification credSpec)", "full_signature": "private void checkIfCredSpecIsInKeystoreAddIfAbsent(KeyManager keyManager,\n      CredentialSpecification credSpec)", "class_method_signature": "IssuanceHelper.checkIfCredSpecIsInKeystoreAddIfAbsent(KeyManager keyManager,\n      CredentialSpecification credSpec)", "testcase": false, "constructor": false}, {"identifier": "setupIssuerParameters", "parameters": "(CryptoEngine cryptoEngine,\n      CredentialSpecification credSpec, SystemParameters systemParameters, URI issuerParamsUid,\n      URI hash, URI revocationParamsUid, String systemAndIssuerParamsPrefix,\n      List<FriendlyDescription> friendlyDescriptions)", "modifiers": "public", "return": "IssuerParameters", "signature": "IssuerParameters setupIssuerParameters(CryptoEngine cryptoEngine,\n      CredentialSpecification credSpec, SystemParameters systemParameters, URI issuerParamsUid,\n      URI hash, URI revocationParamsUid, String systemAndIssuerParamsPrefix,\n      List<FriendlyDescription> friendlyDescriptions)", "full_signature": "public IssuerParameters setupIssuerParameters(CryptoEngine cryptoEngine,\n      CredentialSpecification credSpec, SystemParameters systemParameters, URI issuerParamsUid,\n      URI hash, URI revocationParamsUid, String systemAndIssuerParamsPrefix,\n      List<FriendlyDescription> friendlyDescriptions)", "class_method_signature": "IssuanceHelper.setupIssuerParameters(CryptoEngine cryptoEngine,\n      CredentialSpecification credSpec, SystemParameters systemParameters, URI issuerParamsUid,\n      URI hash, URI revocationParamsUid, String systemAndIssuerParamsPrefix,\n      List<FriendlyDescription> friendlyDescriptions)", "testcase": false, "constructor": false}, {"identifier": "registerSmartcardScopeExclusivePseudonym", "parameters": "(BigInteger pse)", "modifiers": "public", "return": "void", "signature": "void registerSmartcardScopeExclusivePseudonym(BigInteger pse)", "full_signature": "public void registerSmartcardScopeExclusivePseudonym(BigInteger pse)", "class_method_signature": "IssuanceHelper.registerSmartcardScopeExclusivePseudonym(BigInteger pse)", "testcase": false, "constructor": false}, {"identifier": "initSpecAndPolicy", "parameters": "(String specAndPolicyKey)", "modifiers": "public", "return": "SpecAndPolicy", "signature": "SpecAndPolicy initSpecAndPolicy(String specAndPolicyKey)", "full_signature": "public SpecAndPolicy initSpecAndPolicy(String specAndPolicyKey)", "class_method_signature": "IssuanceHelper.initSpecAndPolicy(String specAndPolicyKey)", "testcase": false, "constructor": false}, {"identifier": "modifyPA", "parameters": "(PresentationPolicy pp)", "modifiers": "private", "return": "void", "signature": "void modifyPA(PresentationPolicy pp)", "full_signature": "private void modifyPA(PresentationPolicy pp)", "class_method_signature": "IssuanceHelper.modifyPA(PresentationPolicy pp)", "testcase": false, "constructor": false}, {"identifier": "initSpecAndPolicyFromResouces", "parameters": "(SpecAndPolicy cloneThisSap)", "modifiers": "private", "return": "SpecAndPolicy", "signature": "SpecAndPolicy initSpecAndPolicyFromResouces(SpecAndPolicy cloneThisSap)", "full_signature": "private SpecAndPolicy initSpecAndPolicyFromResouces(SpecAndPolicy cloneThisSap)", "class_method_signature": "IssuanceHelper.initSpecAndPolicyFromResouces(SpecAndPolicy cloneThisSap)", "testcase": false, "constructor": false}, {"identifier": "initCredentialSpecificationFromResources", "parameters": "(SpecAndPolicy sap)", "modifiers": "private", "return": "CredentialSpecification", "signature": "CredentialSpecification initCredentialSpecificationFromResources(SpecAndPolicy sap)", "full_signature": "private CredentialSpecification initCredentialSpecificationFromResources(SpecAndPolicy sap)", "class_method_signature": "IssuanceHelper.initCredentialSpecificationFromResources(SpecAndPolicy sap)", "testcase": false, "constructor": false}, {"identifier": "issueStep", "parameters": "(IssuanceMessage issuanceMessage)", "modifiers": "public", "return": "IssuanceMessageAndBoolean", "signature": "IssuanceMessageAndBoolean issueStep(IssuanceMessage issuanceMessage)", "full_signature": "public IssuanceMessageAndBoolean issueStep(IssuanceMessage issuanceMessage)", "class_method_signature": "IssuanceHelper.issueStep(IssuanceMessage issuanceMessage)", "testcase": false, "constructor": false}, {"identifier": "issueStep", "parameters": "(IssuerAbcEngine useEngine,\n      IssuanceMessage issuanceMessage)", "modifiers": "private", "return": "IssuanceMessageAndBoolean", "signature": "IssuanceMessageAndBoolean issueStep(IssuerAbcEngine useEngine,\n      IssuanceMessage issuanceMessage)", "full_signature": "private IssuanceMessageAndBoolean issueStep(IssuerAbcEngine useEngine,\n      IssuanceMessage issuanceMessage)", "class_method_signature": "IssuanceHelper.issueStep(IssuerAbcEngine useEngine,\n      IssuanceMessage issuanceMessage)", "testcase": false, "constructor": false}, {"identifier": "reIssueStep", "parameters": "(IssuanceMessage issuanceMessage)", "modifiers": "public", "return": "IssuanceMessageAndBoolean", "signature": "IssuanceMessageAndBoolean reIssueStep(IssuanceMessage issuanceMessage)", "full_signature": "public IssuanceMessageAndBoolean reIssueStep(IssuanceMessage issuanceMessage)", "class_method_signature": "IssuanceHelper.reIssueStep(IssuanceMessage issuanceMessage)", "testcase": false, "constructor": false}, {"identifier": "initReIssuance", "parameters": "(String specAndPolicyKey)", "modifiers": "public", "return": "IssuanceMessage", "signature": "IssuanceMessage initReIssuance(String specAndPolicyKey)", "full_signature": "public IssuanceMessage initReIssuance(String specAndPolicyKey)", "class_method_signature": "IssuanceHelper.initReIssuance(String specAndPolicyKey)", "testcase": false, "constructor": false}, {"identifier": "initIssuance", "parameters": "(String credspecAndPolicyKey,\n      Map<String, Object> attributeValueMap)", "modifiers": "public", "return": "IssuanceMessage", "signature": "IssuanceMessage initIssuance(String credspecAndPolicyKey,\n      Map<String, Object> attributeValueMap)", "full_signature": "public IssuanceMessage initIssuance(String credspecAndPolicyKey,\n      Map<String, Object> attributeValueMap)", "class_method_signature": "IssuanceHelper.initIssuance(String credspecAndPolicyKey,\n      Map<String, Object> attributeValueMap)", "testcase": false, "constructor": false}, {"identifier": "initIssuance", "parameters": "(SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "modifiers": "public", "return": "IssuanceMessage", "signature": "IssuanceMessage initIssuance(SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "full_signature": "public IssuanceMessage initIssuance(SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "class_method_signature": "IssuanceHelper.initIssuance(SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "testcase": false, "constructor": false}, {"identifier": "initIssuance", "parameters": "(IssuerAbcEngine useEngine, SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "modifiers": "private", "return": "IssuanceMessage", "signature": "IssuanceMessage initIssuance(IssuerAbcEngine useEngine, SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "full_signature": "private IssuanceMessage initIssuance(IssuerAbcEngine useEngine, SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "class_method_signature": "IssuanceHelper.initIssuance(IssuerAbcEngine useEngine, SpecAndPolicy specAndPolicy,\n      Map<String, Object> attributeValueMap)", "testcase": false, "constructor": false}, {"identifier": "initIssuanceProtocol", "parameters": "(IssuerAbcEngine useEngine,\n      List<Attribute> issuerAtts, IssuancePolicy clonedIssuancePolicy, URI policyIssuerParametersUID)", "modifiers": "private", "return": "IssuanceMessageAndBoolean", "signature": "IssuanceMessageAndBoolean initIssuanceProtocol(IssuerAbcEngine useEngine,\n      List<Attribute> issuerAtts, IssuancePolicy clonedIssuancePolicy, URI policyIssuerParametersUID)", "full_signature": "private IssuanceMessageAndBoolean initIssuanceProtocol(IssuerAbcEngine useEngine,\n      List<Attribute> issuerAtts, IssuancePolicy clonedIssuancePolicy, URI policyIssuerParametersUID)", "class_method_signature": "IssuanceHelper.initIssuanceProtocol(IssuerAbcEngine useEngine,\n      List<Attribute> issuerAtts, IssuancePolicy clonedIssuancePolicy, URI policyIssuerParametersUID)", "testcase": false, "constructor": false}, {"identifier": "populateIssuerAttributes", "parameters": "(SpecAndPolicy specAndPolicy, List<Attribute> issuerAtts,\n      Map<String, Object> attributeValueMap)", "modifiers": "private", "return": "void", "signature": "void populateIssuerAttributes(SpecAndPolicy specAndPolicy, List<Attribute> issuerAtts,\n      Map<String, Object> attributeValueMap)", "full_signature": "private void populateIssuerAttributes(SpecAndPolicy specAndPolicy, List<Attribute> issuerAtts,\n      Map<String, Object> attributeValueMap)", "class_method_signature": "IssuanceHelper.populateIssuerAttributes(SpecAndPolicy specAndPolicy, List<Attribute> issuerAtts,\n      Map<String, Object> attributeValueMap)", "testcase": false, "constructor": false}, {"identifier": "initIssuanceProtocol", "parameters": "(IssuancePolicy issuancePolicy,\n      List<Attribute> attributes)", "modifiers": "public", "return": "IssuanceMessageAndBoolean", "signature": "IssuanceMessageAndBoolean initIssuanceProtocol(IssuancePolicy issuancePolicy,\n      List<Attribute> attributes)", "full_signature": "public IssuanceMessageAndBoolean initIssuanceProtocol(IssuancePolicy issuancePolicy,\n      List<Attribute> attributes)", "class_method_signature": "IssuanceHelper.initIssuanceProtocol(IssuancePolicy issuancePolicy,\n      List<Attribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "addCredentialSpecifications", "parameters": "(String[] credSpecResourceList)", "modifiers": "@Override public", "return": "void", "signature": "void addCredentialSpecifications(String[] credSpecResourceList)", "full_signature": "@Override public void addCredentialSpecifications(String[] credSpecResourceList)", "class_method_signature": "IssuanceHelper.addCredentialSpecifications(String[] credSpecResourceList)", "testcase": false, "constructor": false}, {"identifier": "addIssuerParameters", "parameters": "(String[] issuerParametersResourceList)", "modifiers": "@Override public", "return": "void", "signature": "void addIssuerParameters(String[] issuerParametersResourceList)", "full_signature": "@Override public void addIssuerParameters(String[] issuerParametersResourceList)", "class_method_signature": "IssuanceHelper.addIssuerParameters(String[] issuerParametersResourceList)", "testcase": false, "constructor": false}, {"identifier": "getIssuanceLogEntry", "parameters": "(URI issuanceEntryUid)", "modifiers": "public", "return": "IssuanceLogEntry", "signature": "IssuanceLogEntry getIssuanceLogEntry(URI issuanceEntryUid)", "full_signature": "public IssuanceLogEntry getIssuanceLogEntry(URI issuanceEntryUid)", "class_method_signature": "IssuanceHelper.getIssuanceLogEntry(URI issuanceEntryUid)", "testcase": false, "constructor": false}], "file": "Code/core-abce/service-helper/src/main/java/eu/abc4trust/ri/servicehelper/issuer/IssuanceHelper.java"}, "focal_method": {"identifier": "resetInstance", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "body": "public static synchronized void resetInstance() {\n    System.err.println(\"WARNING IssuanceHelper.resetInstance : \" + instance);\n    instance = null;\n  }", "signature": "void resetInstance()", "full_signature": "public static synchronized void resetInstance()", "class_method_signature": "IssuanceHelper.resetInstance()", "testcase": false, "constructor": false, "invocations": ["println"]}, "repository": {"repo_id": 7687890, "url": "https://github.com/p2abcengine/p2abcengine", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 71, "size": 11790, "license": "licensed"}}