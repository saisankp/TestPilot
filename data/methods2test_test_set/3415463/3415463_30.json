{"test_class": {"identifier": "JcrDaoSupportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SessionFactory sessionFactory;", "modifier": "private", "type": "SessionFactory", "declarator": "sessionFactory", "var_name": "sessionFactory"}, {"original_string": "private Session session;", "modifier": "private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}], "file": "se-jcr-commons/src/test/java/org/springframework/extensions/jcr/support/JcrDaoSupportTest.java"}, "test_case": {"identifier": "testSetSessionFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetSessionFactory() throws RepositoryException {\n        // sessCtrl.expectAndReturn(sess.getRepository(), repository,\n        // MockControl.ONE_OR_MORE);\n        // sfCtrl.expectAndReturn(sf.getSession(), sess);\n        replay(sessionFactory);\n        replay(session);\n\n        JcrDaoSupport dao = new JcrDaoSupport() {\n        };\n\n        dao.setSessionFactory(sessionFactory);\n\n        assertEquals(dao.getSessionFactory(), sessionFactory);\n    }", "signature": "void testSetSessionFactory()", "full_signature": "@Test public void testSetSessionFactory()", "class_method_signature": "JcrDaoSupportTest.testSetSessionFactory()", "testcase": true, "constructor": false, "invocations": ["replay", "replay", "setSessionFactory", "assertEquals", "getSessionFactory"]}, "focal_class": {"identifier": "JcrDaoSupport", "superclass": "extends DaoSupport", "interfaces": "", "fields": [{"original_string": "private JcrTemplate template;", "modifier": "private", "type": "JcrTemplate", "declarator": "template", "var_name": "template"}], "methods": [{"identifier": "setSessionFactory", "parameters": "(SessionFactory sessionFactory)", "modifiers": "public final", "return": "void", "signature": "void setSessionFactory(SessionFactory sessionFactory)", "full_signature": "public final void setSessionFactory(SessionFactory sessionFactory)", "class_method_signature": "JcrDaoSupport.setSessionFactory(SessionFactory sessionFactory)", "testcase": false, "constructor": false}, {"identifier": "getSessionFactory", "parameters": "()", "modifiers": "public final", "return": "SessionFactory", "signature": "SessionFactory getSessionFactory()", "full_signature": "public final SessionFactory getSessionFactory()", "class_method_signature": "JcrDaoSupport.getSessionFactory()", "testcase": false, "constructor": false}, {"identifier": "setTemplate", "parameters": "(JcrTemplate jcrTemplate)", "modifiers": "public final", "return": "void", "signature": "void setTemplate(JcrTemplate jcrTemplate)", "full_signature": "public final void setTemplate(JcrTemplate jcrTemplate)", "class_method_signature": "JcrDaoSupport.setTemplate(JcrTemplate jcrTemplate)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "()", "modifiers": "public final", "return": "JcrTemplate", "signature": "JcrTemplate getTemplate()", "full_signature": "public final JcrTemplate getTemplate()", "class_method_signature": "JcrDaoSupport.getTemplate()", "testcase": false, "constructor": false}, {"identifier": "checkDaoConfig", "parameters": "()", "modifiers": "protected final", "return": "void", "signature": "void checkDaoConfig()", "full_signature": "protected final void checkDaoConfig()", "class_method_signature": "JcrDaoSupport.checkDaoConfig()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "protected final", "return": "Session", "signature": "Session getSession()", "full_signature": "protected final Session getSession()", "class_method_signature": "JcrDaoSupport.getSession()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "(boolean allowCreate)", "modifiers": "protected final", "return": "Session", "signature": "Session getSession(boolean allowCreate)", "full_signature": "protected final Session getSession(boolean allowCreate)", "class_method_signature": "JcrDaoSupport.getSession(boolean allowCreate)", "testcase": false, "constructor": false}, {"identifier": "convertJcrAccessException", "parameters": "(\n\t\t\tRepositoryException ex)", "modifiers": "protected final", "return": "DataAccessException", "signature": "DataAccessException convertJcrAccessException(\n\t\t\tRepositoryException ex)", "full_signature": "protected final DataAccessException convertJcrAccessException(\n\t\t\tRepositoryException ex)", "class_method_signature": "JcrDaoSupport.convertJcrAccessException(\n\t\t\tRepositoryException ex)", "testcase": false, "constructor": false}, {"identifier": "releaseSession", "parameters": "(Session session)", "modifiers": "protected final", "return": "void", "signature": "void releaseSession(Session session)", "full_signature": "protected final void releaseSession(Session session)", "class_method_signature": "JcrDaoSupport.releaseSession(Session session)", "testcase": false, "constructor": false}], "file": "se-jcr-commons/src/main/java/org/springframework/extensions/jcr/support/JcrDaoSupport.java"}, "focal_method": {"identifier": "setSessionFactory", "parameters": "(SessionFactory sessionFactory)", "modifiers": "public final", "return": "void", "body": "public final void setSessionFactory(SessionFactory sessionFactory) {\n\t\tthis.template = new JcrTemplate(sessionFactory);\n\t}", "signature": "void setSessionFactory(SessionFactory sessionFactory)", "full_signature": "public final void setSessionFactory(SessionFactory sessionFactory)", "class_method_signature": "JcrDaoSupport.setSessionFactory(SessionFactory sessionFactory)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3415463, "url": "https://github.com/jbellmann/jcr-springextension", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 14, "size": 634, "license": "licensed"}}