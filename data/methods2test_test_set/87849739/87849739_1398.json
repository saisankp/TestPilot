{"test_class": {"identifier": "SignalEnrichmentFailedExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/exceptions/SignalEnrichmentFailedExceptionTest.java"}, "test_case": {"identifier": "buildForCause", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildForCause() {\n        final DittoHeaderInvalidException cause =\n                DittoHeaderInvalidException.newInvalidTypeBuilder(\"theHeaderName\", \"theValue\", \"theExpectedType\")\n                        .build();\n\n        final SignalEnrichmentFailedException underTest = SignalEnrichmentFailedException.dueTo(cause);\n\n        assertThat(underTest.getStatusCode()).isEqualTo(cause.getStatusCode());\n        assertThat(underTest.getDescription().orElseThrow(() -> new AssertionError(\"Expect description\")))\n                .contains(cause.getErrorCode())\n                .contains(cause.getMessage())\n                .contains(cause.getDescription().orElse(\"-----NOT POSSIBLE-----\"));\n    }", "signature": "void buildForCause()", "full_signature": "@Test public void buildForCause()", "class_method_signature": "SignalEnrichmentFailedExceptionTest.buildForCause()", "testcase": true, "constructor": false, "invocations": ["build", "newInvalidTypeBuilder", "dueTo", "isEqualTo", "assertThat", "getStatusCode", "getStatusCode", "contains", "contains", "contains", "assertThat", "orElseThrow", "getDescription", "getErrorCode", "getMessage", "orElse", "getDescription"]}, "focal_class": {"identifier": "SignalEnrichmentFailedException", "superclass": "extends DittoRuntimeException", "interfaces": "", "fields": [{"original_string": "public static final String ERROR_CODE = \"signal.enrichment.failed\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_CODE = \"signal.enrichment.failed\"", "var_name": "ERROR_CODE"}, {"original_string": "private static final HttpStatusCode DEFAULT_STATUS_CODE = HttpStatusCode.INTERNAL_SERVER_ERROR;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "DEFAULT_STATUS_CODE = HttpStatusCode.INTERNAL_SERVER_ERROR", "var_name": "DEFAULT_STATUS_CODE"}, {"original_string": "private static final String DEFAULT_MESSAGE = \"Signal enrichment failed.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MESSAGE = \"Signal enrichment failed.\"", "var_name": "DEFAULT_MESSAGE"}, {"original_string": "private static final String DESCRIPTION_TEMPLATE = \"Cause: {0} {1} {2}\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION_TEMPLATE = \"Cause: {0} {1} {2}\"", "var_name": "DESCRIPTION_TEMPLATE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION = \"The cause is unknown. Please try again later.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION = \"The cause is unknown. Please try again later.\"", "var_name": "DEFAULT_DESCRIPTION"}], "methods": [{"identifier": "SignalEnrichmentFailedException", "parameters": "(\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "modifiers": "private", "return": "", "signature": " SignalEnrichmentFailedException(\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "full_signature": "private  SignalEnrichmentFailedException(\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "class_method_signature": "SignalEnrichmentFailedException.SignalEnrichmentFailedException(\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "SignalEnrichmentFailedException.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SignalEnrichmentFailedException", "signature": "SignalEnrichmentFailedException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SignalEnrichmentFailedException fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SignalEnrichmentFailedException.fromJson(final JsonObject jsonObject,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "dueTo", "parameters": "(final DittoRuntimeException cause)", "modifiers": "public static", "return": "SignalEnrichmentFailedException", "signature": "SignalEnrichmentFailedException dueTo(final DittoRuntimeException cause)", "full_signature": "public static SignalEnrichmentFailedException dueTo(final DittoRuntimeException cause)", "class_method_signature": "SignalEnrichmentFailedException.dueTo(final DittoRuntimeException cause)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/exceptions/SignalEnrichmentFailedException.java"}, "focal_method": {"identifier": "dueTo", "parameters": "(final DittoRuntimeException cause)", "modifiers": "public static", "return": "SignalEnrichmentFailedException", "body": "public static SignalEnrichmentFailedException dueTo(final DittoRuntimeException cause) {\n        return newBuilder()\n                .dueTo(cause)\n                .dittoHeaders(cause.getDittoHeaders())\n                .build();\n    }", "signature": "SignalEnrichmentFailedException dueTo(final DittoRuntimeException cause)", "full_signature": "public static SignalEnrichmentFailedException dueTo(final DittoRuntimeException cause)", "class_method_signature": "SignalEnrichmentFailedException.dueTo(final DittoRuntimeException cause)", "testcase": false, "constructor": false, "invocations": ["build", "dittoHeaders", "dueTo", "newBuilder", "getDittoHeaders"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}