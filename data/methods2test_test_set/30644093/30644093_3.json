{"test_class": {"identifier": "DefinitionDocumentResolverFromDefinitionTest", "superclass": "", "interfaces": "", "fields": [], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/resolver/DefinitionDocumentResolverFromDefinitionTest.java"}, "test_case": {"identifier": "testWithSeparatedDefinitionsAndInterDocumentCrossReferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithSeparatedDefinitionsAndInterDocumentCrossReferences() {\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()\n                .withSeparatedDefinitions()\n                .withInterDocumentCrossReferences()\n                .build();\n        Swagger2MarkupConverter.SwaggerContext context = createContext(config);\n        context.setOutputPath(Paths.get(\"/tmp\"));\n\n        assertThat(new DefinitionDocumentResolverFromDefinition(context).apply(\"DefinitionName\"))\n                .isEqualTo(\"DefinitionName.adoc\");\n    }", "signature": "void testWithSeparatedDefinitionsAndInterDocumentCrossReferences()", "full_signature": "@Test public void testWithSeparatedDefinitionsAndInterDocumentCrossReferences()", "class_method_signature": "DefinitionDocumentResolverFromDefinitionTest.testWithSeparatedDefinitionsAndInterDocumentCrossReferences()", "testcase": true, "constructor": false, "invocations": ["build", "withInterDocumentCrossReferences", "withSeparatedDefinitions", "createContext", "setOutputPath", "get", "isEqualTo", "assertThat", "apply"]}, "focal_class": {"identifier": "DefinitionDocumentResolverFromDefinition", "superclass": "extends DefinitionDocumentResolverDefault", "interfaces": "", "fields": [], "methods": [{"identifier": "DefinitionDocumentResolverFromDefinition", "parameters": "(Swagger2MarkupConverter.SwaggerContext context)", "modifiers": "public", "return": "", "signature": " DefinitionDocumentResolverFromDefinition(Swagger2MarkupConverter.SwaggerContext context)", "full_signature": "public  DefinitionDocumentResolverFromDefinition(Swagger2MarkupConverter.SwaggerContext context)", "class_method_signature": "DefinitionDocumentResolverFromDefinition.DefinitionDocumentResolverFromDefinition(Swagger2MarkupConverter.SwaggerContext context)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(String definitionName)", "modifiers": "public", "return": "String", "signature": "String apply(String definitionName)", "full_signature": "public String apply(String definitionName)", "class_method_signature": "DefinitionDocumentResolverFromDefinition.apply(String definitionName)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/resolver/DefinitionDocumentResolverFromDefinition.java"}, "focal_method": {"identifier": "apply", "parameters": "(String definitionName)", "modifiers": "public", "return": "String", "body": "public String apply(String definitionName) {\n        String defaultResolver = super.apply(definitionName);\n\n        if (defaultResolver != null && config.isSeparatedDefinitionsEnabled())\n            return defaultString(config.getInterDocumentCrossReferencesPrefix()) + markupDocBuilder.addFileExtension(normalizeName(definitionName));\n        else\n            return defaultResolver;\n    }", "signature": "String apply(String definitionName)", "full_signature": "public String apply(String definitionName)", "class_method_signature": "DefinitionDocumentResolverFromDefinition.apply(String definitionName)", "testcase": false, "constructor": false, "invocations": ["apply", "isSeparatedDefinitionsEnabled", "defaultString", "getInterDocumentCrossReferencesPrefix", "addFileExtension", "normalizeName"]}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}