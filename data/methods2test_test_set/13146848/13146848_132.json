{"test_class": {"identifier": "SetPagesLabelParametersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "sejda-model/src/test/java/org/sejda/model/parameter/SetPagesLabelParametersTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SetPagesLabelParameters victim1 = new SetPagesLabelParameters();\n        SetPagesLabelParameters victim2 = new SetPagesLabelParameters();\n        SetPagesLabelParameters victim3 = new SetPagesLabelParameters();\n        SetPagesLabelParameters victim4 = new SetPagesLabelParameters();\n\n        PdfPageLabel label = PdfPageLabel.newInstanceWithLabel(\"label\", PdfLabelNumberingStyle.ARABIC, 2);\n        PdfPageLabel diffLabel = PdfPageLabel.newInstanceWithoutLabel(PdfLabelNumberingStyle.ARABIC, 2);\n\n        victim1.putLabel(1, label);\n        victim2.putLabel(1, label);\n        victim3.putLabel(1, label);\n        victim4.putLabel(1, diffLabel);\n        TestUtils.testEqualsAndHashCodes(victim1, victim2, victim3, victim4);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "SetPagesLabelParametersTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["newInstanceWithLabel", "newInstanceWithoutLabel", "putLabel", "putLabel", "putLabel", "putLabel", "testEqualsAndHashCodes"]}, "focal_class": {"identifier": "SetPagesLabelParameters", "superclass": "extends SinglePdfSourceSingleOutputParameters", "interfaces": "", "fields": [{"original_string": "@NotEmpty\n    @Valid\n    private final Map<Integer, PdfPageLabel> labels = new HashMap<Integer, PdfPageLabel>();", "modifier": "@NotEmpty\n    @Valid\n    private final", "type": "Map<Integer, PdfPageLabel>", "declarator": "labels = new HashMap<Integer, PdfPageLabel>()", "var_name": "labels"}], "methods": [{"identifier": "putLabel", "parameters": "(Integer page, PdfPageLabel label)", "modifiers": "public", "return": "PdfPageLabel", "signature": "PdfPageLabel putLabel(Integer page, PdfPageLabel label)", "full_signature": "public PdfPageLabel putLabel(Integer page, PdfPageLabel label)", "class_method_signature": "SetPagesLabelParameters.putLabel(Integer page, PdfPageLabel label)", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "Map<Integer, PdfPageLabel>", "signature": "Map<Integer, PdfPageLabel> getLabels()", "full_signature": "public Map<Integer, PdfPageLabel> getLabels()", "class_method_signature": "SetPagesLabelParameters.getLabels()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SetPagesLabelParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SetPagesLabelParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/SetPagesLabelParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof SetPagesLabelParameters)) {\n            return false;\n        }\n        SetPagesLabelParameters parameter = (SetPagesLabelParameters) other;\n        return new EqualsBuilder().appendSuper(super.equals(other)).append(getLabels(), parameter.getLabels())\n                .isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SetPagesLabelParameters.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "appendSuper", "equals", "getLabels", "getLabels"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}