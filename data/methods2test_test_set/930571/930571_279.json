{"test_class": {"identifier": "MigrationManagerTest", "superclass": "extends AbstractBaseTest", "interfaces": "", "fields": [{"original_string": "private PoolingDataSourceWrapper pds;", "modifier": "private", "type": "PoolingDataSourceWrapper", "declarator": "pds", "var_name": "pds"}, {"original_string": "private EntityManagerFactory emf;", "modifier": "private", "type": "EntityManagerFactory", "declarator": "emf", "var_name": "emf"}, {"original_string": "private UserGroupCallback userGroupCallback;", "modifier": "private", "type": "UserGroupCallback", "declarator": "userGroupCallback", "var_name": "userGroupCallback"}, {"original_string": "private RuntimeManager managerV1;", "modifier": "private", "type": "RuntimeManager", "declarator": "managerV1", "var_name": "managerV1"}, {"original_string": "private RuntimeManager managerV2;", "modifier": "private", "type": "RuntimeManager", "declarator": "managerV2", "var_name": "managerV2"}, {"original_string": "private static final String DEPLOYMENT_ID_V1 = \"managerV1\";", "modifier": "private static final", "type": "String", "declarator": "DEPLOYMENT_ID_V1 = \"managerV1\"", "var_name": "DEPLOYMENT_ID_V1"}, {"original_string": "private static final String DEPLOYMENT_ID_V2 = \"managerV2\";", "modifier": "private static final", "type": "String", "declarator": "DEPLOYMENT_ID_V2 = \"managerV2\"", "var_name": "DEPLOYMENT_ID_V2"}, {"original_string": "private static final String USER_JOHN = \"john\";", "modifier": "private static final", "type": "String", "declarator": "USER_JOHN = \"john\"", "var_name": "USER_JOHN"}, {"original_string": "private static final String PROCESS_ID_V1 = \"UserTask-1\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_ID_V1 = \"UserTask-1\"", "var_name": "PROCESS_ID_V1"}, {"original_string": "private static final String PROCESS_ID_V2 = \"UserTask-2\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_ID_V2 = \"UserTask-2\"", "var_name": "PROCESS_ID_V2"}, {"original_string": "private static final String PROCESS_NAME_V1 = \"User Task v1\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_NAME_V1 = \"User Task v1\"", "var_name": "PROCESS_NAME_V1"}, {"original_string": "private static final String PROCESS_NAME_V2 = \"User Task v2\";", "modifier": "private static final", "type": "String", "declarator": "PROCESS_NAME_V2 = \"User Task v2\"", "var_name": "PROCESS_NAME_V2"}, {"original_string": "private static final String TASK_NAME_V1 = \"Hello v1\";", "modifier": "private static final", "type": "String", "declarator": "TASK_NAME_V1 = \"Hello v1\"", "var_name": "TASK_NAME_V1"}, {"original_string": "private static final String TASK_NAME_V2 = \"Hello v2\";", "modifier": "private static final", "type": "String", "declarator": "TASK_NAME_V2 = \"Hello v2\"", "var_name": "TASK_NAME_V2"}, {"original_string": "private static final String ADDTASKAFTERACTIVE_ID_V1 = \"process-migration-testv1.AddTaskAfterActive\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKAFTERACTIVE_ID_V1 = \"process-migration-testv1.AddTaskAfterActive\"", "var_name": "ADDTASKAFTERACTIVE_ID_V1"}, {"original_string": "private static final String ADDTASKAFTERACTIVE_ID_V2 = \"process-migration-testv2.AddTaskAfterActive\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKAFTERACTIVE_ID_V2 = \"process-migration-testv2.AddTaskAfterActive\"", "var_name": "ADDTASKAFTERACTIVE_ID_V2"}, {"original_string": "private static final String ADDTASKBEFOREACTIVE_ID_V1 = \"process-migration-testv1.AddTaskBeforeActive\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKBEFOREACTIVE_ID_V1 = \"process-migration-testv1.AddTaskBeforeActive\"", "var_name": "ADDTASKBEFOREACTIVE_ID_V1"}, {"original_string": "private static final String ADDTASKBEFOREACTIVE_ID_V2 = \"process-migration-testv2.AddTaskBeforeActive\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKBEFOREACTIVE_ID_V2 = \"process-migration-testv2.AddTaskBeforeActive\"", "var_name": "ADDTASKBEFOREACTIVE_ID_V2"}, {"original_string": "private static final String REMOVEACTIVETASK_ID_V1 = \"process-migration-testv1.RemoveActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVEACTIVETASK_ID_V1 = \"process-migration-testv1.RemoveActiveTask\"", "var_name": "REMOVEACTIVETASK_ID_V1"}, {"original_string": "private static final String REMOVEACTIVETASK_ID_V2 = \"process-migration-testv2.RemoveActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVEACTIVETASK_ID_V2 = \"process-migration-testv2.RemoveActiveTask\"", "var_name": "REMOVEACTIVETASK_ID_V2"}, {"original_string": "private static final String REMOVENONACTIVETASK_ID_V1 = \"process-migration-testv1.RemoveNonActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVENONACTIVETASK_ID_V1 = \"process-migration-testv1.RemoveNonActiveTask\"", "var_name": "REMOVENONACTIVETASK_ID_V1"}, {"original_string": "private static final String REMOVENONACTIVETASK_ID_V2 = \"process-migration-testv2.RemoveNonActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVENONACTIVETASK_ID_V2 = \"process-migration-testv2.RemoveNonActiveTask\"", "var_name": "REMOVENONACTIVETASK_ID_V2"}, {"original_string": "private static final String REPLACEACTIVETASK_ID_V1 = \"process-migration-testv1.ReplaceActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REPLACEACTIVETASK_ID_V1 = \"process-migration-testv1.ReplaceActiveTask\"", "var_name": "REPLACEACTIVETASK_ID_V1"}, {"original_string": "private static final String REPLACEACTIVETASK_ID_V2 = \"process-migration-testv2.ReplaceActiveTask\";", "modifier": "private static final", "type": "String", "declarator": "REPLACEACTIVETASK_ID_V2 = \"process-migration-testv2.ReplaceActiveTask\"", "var_name": "REPLACEACTIVETASK_ID_V2"}, {"original_string": "private static final String REMOVENONACTIVEBEFORETASK_ID_V1 = \"process-migration-testv1.RemoveNonActiveBeforeTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVENONACTIVEBEFORETASK_ID_V1 = \"process-migration-testv1.RemoveNonActiveBeforeTask\"", "var_name": "REMOVENONACTIVEBEFORETASK_ID_V1"}, {"original_string": "private static final String REMOVENONACTIVEBEFORETASK_ID_V2 = \"process-migration-testv2.RemoveNonActiveBeforeTask\";", "modifier": "private static final", "type": "String", "declarator": "REMOVENONACTIVEBEFORETASK_ID_V2 = \"process-migration-testv2.RemoveNonActiveBeforeTask\"", "var_name": "REMOVENONACTIVEBEFORETASK_ID_V2"}, {"original_string": "private static final String MULTIINSTANCE_ID_V1 = \"MultiInstance-1\";", "modifier": "private static final", "type": "String", "declarator": "MULTIINSTANCE_ID_V1 = \"MultiInstance-1\"", "var_name": "MULTIINSTANCE_ID_V1"}, {"original_string": "private static final String MULTIINSTANCE_ID_V2 = \"MultiInstance-2\";", "modifier": "private static final", "type": "String", "declarator": "MULTIINSTANCE_ID_V2 = \"MultiInstance-2\"", "var_name": "MULTIINSTANCE_ID_V2"}, {"original_string": "private static final String ADDTASKAFTERACTIVE_EXPR_ID_V1 = \"process-migration-testv1.AddTaskAfterActiveExpr\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKAFTERACTIVE_EXPR_ID_V1 = \"process-migration-testv1.AddTaskAfterActiveExpr\"", "var_name": "ADDTASKAFTERACTIVE_EXPR_ID_V1"}, {"original_string": "private static final String ADDTASKAFTERACTIVE_EXPR_ID_V2 = \"process-migration-testv2.AddTaskAfterActiveExpr\";", "modifier": "private static final", "type": "String", "declarator": "ADDTASKAFTERACTIVE_EXPR_ID_V2 = \"process-migration-testv2.AddTaskAfterActiveExpr\"", "var_name": "ADDTASKAFTERACTIVE_EXPR_ID_V2"}, {"original_string": "private JPAAuditLogService auditService;", "modifier": "private", "type": "JPAAuditLogService", "declarator": "auditService", "var_name": "auditService"}], "file": "jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/migration/MigrationManagerTest.java"}, "test_case": {"identifier": "testMigrateUserTaskProcessInstanceWithNodeMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMigrateUserTaskProcessInstanceWithNodeMapping() {\n        createRuntimeManagers(\"migration/v1/BPMN2-UserTask-v1.bpmn2\", \"migration/v2/BPMN2-UserTask-v2.bpmn2\");\n        assertNotNull(managerV1);\n        assertNotNull(managerV2);\n        \n        RuntimeEngine runtime = managerV1.getRuntimeEngine(EmptyContext.get());\n        KieSession ksession = runtime.getKieSession();\n        assertNotNull(ksession); \n        \n        ProcessInstance pi1 = ksession.startProcess(PROCESS_ID_V1);\n        assertNotNull(pi1);\n        assertEquals(ProcessInstance.STATE_ACTIVE, pi1.getState());   \n        \n        TaskService taskService = runtime.getTaskService();        \n        TaskSummary task = getTask(taskService);\n        managerV1.disposeRuntimeEngine(runtime);\n        \n        assertEquals(PROCESS_ID_V1, task.getProcessId());\n        assertEquals(DEPLOYMENT_ID_V1, task.getDeploymentId());\n        assertEquals(TASK_NAME_V1, task.getName());        \n        \n        MigrationSpec migrationSpec = new MigrationSpec(DEPLOYMENT_ID_V1, pi1.getId(), DEPLOYMENT_ID_V2, PROCESS_ID_V2);\n        MigrationManager migrationManager = new MigrationManager(migrationSpec);\n        MigrationReport report = migrationManager.migrate(Collections.singletonMap(\"_2\", \"_2\"));        \n        assertNotNull(report);\n        assertTrue(report.isSuccessful());\n        \n        assertMigratedProcessInstance(PROCESS_ID_V2, pi1.getId(), ProcessInstance.STATE_ACTIVE);\n                \n        runtime = managerV2.getRuntimeEngine(EmptyContext.get());\n        taskService = runtime.getTaskService();        \n        assertMigratedTaskAndComplete(taskService, PROCESS_ID_V2, pi1.getId(), TASK_NAME_V2);\n        \n        assertMigratedProcessInstance(PROCESS_ID_V2, pi1.getId(), ProcessInstance.STATE_COMPLETED);\n        \n        managerV2.disposeRuntimeEngine(runtime);\n    }", "signature": "void testMigrateUserTaskProcessInstanceWithNodeMapping()", "full_signature": "@Test public void testMigrateUserTaskProcessInstanceWithNodeMapping()", "class_method_signature": "MigrationManagerTest.testMigrateUserTaskProcessInstanceWithNodeMapping()", "testcase": true, "constructor": false, "invocations": ["createRuntimeManagers", "assertNotNull", "assertNotNull", "getRuntimeEngine", "get", "getKieSession", "assertNotNull", "startProcess", "assertNotNull", "assertEquals", "getState", "getTaskService", "getTask", "disposeRuntimeEngine", "assertEquals", "getProcessId", "assertEquals", "getDeploymentId", "assertEquals", "getName", "getId", "migrate", "singletonMap", "assertNotNull", "assertTrue", "isSuccessful", "assertMigratedProcessInstance", "getId", "getRuntimeEngine", "get", "getTaskService", "assertMigratedTaskAndComplete", "getId", "assertMigratedProcessInstance", "getId", "disposeRuntimeEngine"]}, "focal_class": {"identifier": "MigrationManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MigrationManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MigrationManager.class)", "var_name": "logger"}, {"original_string": "private MigrationReport report;", "modifier": "private", "type": "MigrationReport", "declarator": "report", "var_name": "report"}, {"original_string": "private MigrationSpec migrationSpec;", "modifier": "private", "type": "MigrationSpec", "declarator": "migrationSpec", "var_name": "migrationSpec"}], "methods": [{"identifier": "MigrationManager", "parameters": "(MigrationSpec migrationSpec)", "modifiers": "public", "return": "", "signature": " MigrationManager(MigrationSpec migrationSpec)", "full_signature": "public  MigrationManager(MigrationSpec migrationSpec)", "class_method_signature": "MigrationManager.MigrationManager(MigrationSpec migrationSpec)", "testcase": false, "constructor": true}, {"identifier": "migrate", "parameters": "()", "modifiers": "public", "return": "MigrationReport", "signature": "MigrationReport migrate()", "full_signature": "public MigrationReport migrate()", "class_method_signature": "MigrationManager.migrate()", "testcase": false, "constructor": false}, {"identifier": "migrate", "parameters": "(Map<String, String> nodeMapping)", "modifiers": "public", "return": "MigrationReport", "signature": "MigrationReport migrate(Map<String, String> nodeMapping)", "full_signature": "public MigrationReport migrate(Map<String, String> nodeMapping)", "class_method_signature": "MigrationManager.migrate(Map<String, String> nodeMapping)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(boolean migrateExecutorJobs)", "modifiers": "private", "return": "void", "signature": "void validate(boolean migrateExecutorJobs)", "full_signature": "private void validate(boolean migrateExecutorJobs)", "class_method_signature": "MigrationManager.validate(boolean migrateExecutorJobs)", "testcase": false, "constructor": false}, {"identifier": "upgradeProcessInstance", "parameters": "(KieRuntime oldkruntime,\n                                        KieRuntime kruntime,\n                                        long processInstanceId,\n                                        String processId,\n                                        Map<String, String> nodeMapping,\n                                        EntityManager em,\n                                        String deploymentId)", "modifiers": "private", "return": "void", "signature": "void upgradeProcessInstance(KieRuntime oldkruntime,\n                                        KieRuntime kruntime,\n                                        long processInstanceId,\n                                        String processId,\n                                        Map<String, String> nodeMapping,\n                                        EntityManager em,\n                                        String deploymentId)", "full_signature": "private void upgradeProcessInstance(KieRuntime oldkruntime,\n                                        KieRuntime kruntime,\n                                        long processInstanceId,\n                                        String processId,\n                                        Map<String, String> nodeMapping,\n                                        EntityManager em,\n                                        String deploymentId)", "class_method_signature": "MigrationManager.upgradeProcessInstance(KieRuntime oldkruntime,\n                                        KieRuntime kruntime,\n                                        long processInstanceId,\n                                        String processId,\n                                        Map<String, String> nodeMapping,\n                                        EntityManager em,\n                                        String deploymentId)", "testcase": false, "constructor": false}, {"identifier": "updateNodeInstances", "parameters": "(NodeInstanceContainer nodeInstanceContainer, Map<String, String> nodeMapping, NodeContainer nodeContainer, EntityManager em)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void updateNodeInstances(NodeInstanceContainer nodeInstanceContainer, Map<String, String> nodeMapping, NodeContainer nodeContainer, EntityManager em)", "full_signature": "@SuppressWarnings(\"unchecked\") private void updateNodeInstances(NodeInstanceContainer nodeInstanceContainer, Map<String, String> nodeMapping, NodeContainer nodeContainer, EntityManager em)", "class_method_signature": "MigrationManager.updateNodeInstances(NodeInstanceContainer nodeInstanceContainer, Map<String, String> nodeMapping, NodeContainer nodeContainer, EntityManager em)", "testcase": false, "constructor": false}, {"identifier": "findNodeByUniqueId", "parameters": "(String uniqueId, NodeContainer nodeContainer)", "modifiers": "private", "return": "Node", "signature": "Node findNodeByUniqueId(String uniqueId, NodeContainer nodeContainer)", "full_signature": "private Node findNodeByUniqueId(String uniqueId, NodeContainer nodeContainer)", "class_method_signature": "MigrationManager.findNodeByUniqueId(String uniqueId, NodeContainer nodeContainer)", "testcase": false, "constructor": false}, {"identifier": "findNodeById", "parameters": "(Long id, NodeContainer nodeContainer)", "modifiers": "private", "return": "Node", "signature": "Node findNodeById(Long id, NodeContainer nodeContainer)", "full_signature": "private Node findNodeById(Long id, NodeContainer nodeContainer)", "class_method_signature": "MigrationManager.findNodeById(Long id, NodeContainer nodeContainer)", "testcase": false, "constructor": false}, {"identifier": "extractIfNeeded", "parameters": "(KieRuntime ksession)", "modifiers": "private", "return": "KieRuntime", "signature": "KieRuntime extractIfNeeded(KieRuntime ksession)", "full_signature": "private KieRuntime extractIfNeeded(KieRuntime ksession)", "class_method_signature": "MigrationManager.extractIfNeeded(KieRuntime ksession)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(String value)", "modifiers": "private", "return": "boolean", "signature": "boolean isEmpty(String value)", "full_signature": "private boolean isEmpty(String value)", "class_method_signature": "MigrationManager.isEmpty(String value)", "testcase": false, "constructor": false}, {"identifier": "getTimerManager", "parameters": "(KieSession ksession)", "modifiers": "protected", "return": "TimerManager", "signature": "TimerManager getTimerManager(KieSession ksession)", "full_signature": "protected TimerManager getTimerManager(KieSession ksession)", "class_method_signature": "MigrationManager.getTimerManager(KieSession ksession)", "testcase": false, "constructor": false}, {"identifier": "cancelActiveTimersBeforeMigration", "parameters": "(RuntimeManager manager)", "modifiers": "protected", "return": "Map<Long, List<TimerInstance>>", "signature": "Map<Long, List<TimerInstance>> cancelActiveTimersBeforeMigration(RuntimeManager manager)", "full_signature": "protected Map<Long, List<TimerInstance>> cancelActiveTimersBeforeMigration(RuntimeManager manager)", "class_method_signature": "MigrationManager.cancelActiveTimersBeforeMigration(RuntimeManager manager)", "testcase": false, "constructor": false}, {"identifier": "rescheduleTimersAfterMigration", "parameters": "(RuntimeManager manager, Map<Long, List<TimerInstance>> timerMigrated)", "modifiers": "protected", "return": "void", "signature": "void rescheduleTimersAfterMigration(RuntimeManager manager, Map<Long, List<TimerInstance>> timerMigrated)", "full_signature": "protected void rescheduleTimersAfterMigration(RuntimeManager manager, Map<Long, List<TimerInstance>> timerMigrated)", "class_method_signature": "MigrationManager.rescheduleTimersAfterMigration(RuntimeManager manager, Map<Long, List<TimerInstance>> timerMigrated)", "testcase": false, "constructor": false}, {"identifier": "updateBasedOnTrigger", "parameters": "(TimerInstance timerInstance)", "modifiers": "protected", "return": "void", "signature": "void updateBasedOnTrigger(TimerInstance timerInstance)", "full_signature": "protected void updateBasedOnTrigger(TimerInstance timerInstance)", "class_method_signature": "MigrationManager.updateBasedOnTrigger(TimerInstance timerInstance)", "testcase": false, "constructor": false}], "file": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/migration/MigrationManager.java"}, "focal_method": {"identifier": "migrate", "parameters": "()", "modifiers": "public", "return": "MigrationReport", "body": "public MigrationReport migrate() {\n        return migrate(null);\n    }", "signature": "MigrationReport migrate()", "full_signature": "public MigrationReport migrate()", "class_method_signature": "MigrationManager.migrate()", "testcase": false, "constructor": false, "invocations": ["migrate"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}