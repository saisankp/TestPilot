{"test_class": {"identifier": "Sha256Test", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/crypto/Sha256Test.java"}, "test_case": {"identifier": "whenInputStringIsNullShouldThrowArgumentException", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void whenInputStringIsNullShouldThrowArgumentException() {\n        String input = null;\n        Sha256.hash(input);\n    }", "signature": "void whenInputStringIsNullShouldThrowArgumentException()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void whenInputStringIsNullShouldThrowArgumentException()", "class_method_signature": "Sha256Test.whenInputStringIsNullShouldThrowArgumentException()", "testcase": true, "constructor": false, "invocations": ["hash"]}, "focal_class": {"identifier": "Sha256", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Sha256", "parameters": "()", "modifiers": "private", "return": "", "signature": " Sha256()", "full_signature": "private  Sha256()", "class_method_signature": "Sha256.Sha256()", "testcase": false, "constructor": true}, {"identifier": "hash", "parameters": "(String text)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(String text)", "full_signature": "public static byte[] hash(String text)", "class_method_signature": "Sha256.hash(String text)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(byte[] bytes)", "full_signature": "public static byte[] hash(byte[] bytes)", "class_method_signature": "Sha256.hash(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(byte[] bytes, int offset, int length)", "full_signature": "public static byte[] hash(byte[] bytes, int offset, int length)", "class_method_signature": "Sha256.hash(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/crypto/Sha256.java"}, "focal_method": {"identifier": "hash", "parameters": "(String text)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(String text) {\n        if (text == null) {\n            throw new IllegalArgumentException(\"Text must not be null\");\n        }\n\n        try {\n            return hash(text.getBytes(\"UTF-8\"));\n        } catch (UnsupportedEncodingException e) {\n            throw new UnsupportedOperationException(\"The encoding 'UTF-8' is not supported\", e);\n        }\n    }", "signature": "byte[] hash(String text)", "full_signature": "public static byte[] hash(String text)", "class_method_signature": "Sha256.hash(String text)", "testcase": false, "constructor": false, "invocations": ["hash", "getBytes"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}