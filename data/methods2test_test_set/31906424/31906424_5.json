{"test_class": {"identifier": "Onem2mbenchmarkModuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "onem2mbenchmark/impl/src/test/java/org/opendaylight/yang/gen/v1/urn/opendaylight/params/xml/ns/yang/onem2mbenchmark/impl/rev141210/Onem2mbenchmarkModuleTest.java"}, "test_case": {"identifier": "testCreateInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateInstance() throws Exception {\n        // configure mocks\n        DependencyResolver dependencyResolver = mock(DependencyResolver.class);\n        BindingAwareBroker broker = mock(BindingAwareBroker.class);\n        when(dependencyResolver.resolveInstance(eq(BindingAwareBroker.class), any(ObjectName.class), any(JmxAttribute.class))).thenReturn(broker);\n\n        // create instance of module with injected mocks\n        Onem2mbenchmarkModule module = new Onem2mbenchmarkModule(mock(ModuleIdentifier.class), dependencyResolver);\n\n        // getInstance calls resolveInstance to get the broker dependency and then calls createInstance\n        AutoCloseable closeable = module.getInstance();\n\n        // verify that the module registered the returned provider with the broker\n        verify(broker).registerProvider((Onem2mbenchmarkProvider)closeable);\n\n        // ensure no exceptions on close\n        closeable.close();\n    }", "signature": "void testCreateInstance()", "full_signature": "@Test public void testCreateInstance()", "class_method_signature": "Onem2mbenchmarkModuleTest.testCreateInstance()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "resolveInstance", "eq", "any", "any", "mock", "getInstance", "registerProvider", "verify", "close"]}, "focal_class": {"identifier": "Onem2mbenchmarkModule", "superclass": "extends org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.onem2mbenchmark.impl.rev141210.AbstractOnem2mbenchmarkModule", "interfaces": "", "fields": [], "methods": [{"identifier": "Onem2mbenchmarkModule", "parameters": "(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver)", "modifiers": "public", "return": "", "signature": " Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver)", "full_signature": "public  Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver)", "class_method_signature": "Onem2mbenchmarkModule.Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver)", "testcase": false, "constructor": true}, {"identifier": "Onem2mbenchmarkModule", "parameters": "(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.onem2mbenchmark.impl.rev141210.Onem2mbenchmarkModule oldModule, java.lang.AutoCloseable oldInstance)", "modifiers": "public", "return": "", "signature": " Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.onem2mbenchmark.impl.rev141210.Onem2mbenchmarkModule oldModule, java.lang.AutoCloseable oldInstance)", "full_signature": "public  Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.onem2mbenchmark.impl.rev141210.Onem2mbenchmarkModule oldModule, java.lang.AutoCloseable oldInstance)", "class_method_signature": "Onem2mbenchmarkModule.Onem2mbenchmarkModule(org.opendaylight.controller.config.api.ModuleIdentifier identifier, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.onem2mbenchmark.impl.rev141210.Onem2mbenchmarkModule oldModule, java.lang.AutoCloseable oldInstance)", "testcase": false, "constructor": true}, {"identifier": "customValidation", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void customValidation()", "full_signature": "@Override public void customValidation()", "class_method_signature": "Onem2mbenchmarkModule.customValidation()", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "()", "modifiers": "@Override public", "return": "java.lang.AutoCloseable", "signature": "java.lang.AutoCloseable createInstance()", "full_signature": "@Override public java.lang.AutoCloseable createInstance()", "class_method_signature": "Onem2mbenchmarkModule.createInstance()", "testcase": false, "constructor": false}], "file": "onem2mbenchmark/impl/src/main/java/org/opendaylight/yang/gen/v1/urn/opendaylight/params/xml/ns/yang/onem2mbenchmark/impl/rev141210/Onem2mbenchmarkModule.java"}, "focal_method": {"identifier": "createInstance", "parameters": "()", "modifiers": "@Override public", "return": "java.lang.AutoCloseable", "body": "@Override\n    public java.lang.AutoCloseable createInstance() {\n        Onem2mbenchmarkProvider provider = new Onem2mbenchmarkProvider();\n        getBrokerDependency().registerProvider(provider);\n        return provider;\n    }", "signature": "java.lang.AutoCloseable createInstance()", "full_signature": "@Override public java.lang.AutoCloseable createInstance()", "class_method_signature": "Onem2mbenchmarkModule.createInstance()", "testcase": false, "constructor": false, "invocations": ["registerProvider", "getBrokerDependency"]}, "repository": {"repo_id": 31906424, "url": "https://github.com/opendaylight/iotdm", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 10591, "license": "licensed"}}