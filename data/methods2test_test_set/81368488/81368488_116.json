{"test_class": {"identifier": "ImageDirectoryLocatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String folderName = \"test_music_folder\";", "modifier": "private static final", "type": "String", "declarator": "folderName = \"test_music_folder\"", "var_name": "folderName"}, {"original_string": "private static final int numberOfFiles = 10;", "modifier": "private static final", "type": "int", "declarator": "numberOfFiles = 10", "var_name": "numberOfFiles"}, {"original_string": "private static final String FILESEPARATOR = File.separator;", "modifier": "private static final", "type": "String", "declarator": "FILESEPARATOR = File.separator", "var_name": "FILESEPARATOR"}], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/utils/games/ImageDirectoryLocatorTest.java"}, "test_case": {"identifier": "canLocateImagesDirectoryInExplodedClassPath", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void canLocateImagesDirectoryInExplodedClassPath() {\n        final String pathName = \"data/common/default\";\n        final File result = ImageDirectoryLocator.locateImagesDirectoryInExplodedClassPath(pathName);\n        assert (result.getAbsolutePath().contains(\"data\" + FILESEPARATOR + \"common\" + FILESEPARATOR + \"default\"));\n    }", "signature": "void canLocateImagesDirectoryInExplodedClassPath()", "full_signature": "@Test void canLocateImagesDirectoryInExplodedClassPath()", "class_method_signature": "ImageDirectoryLocatorTest.canLocateImagesDirectoryInExplodedClassPath()", "testcase": true, "constructor": false, "invocations": ["locateImagesDirectoryInExplodedClassPath", "contains", "getAbsolutePath"]}, "focal_class": {"identifier": "ImageDirectoryLocator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "locateImagesDirectoryInUnpackedDistDirectory", "parameters": "(String parentImagesPackageResourceLocation)", "modifiers": "public static", "return": "File", "signature": "File locateImagesDirectoryInUnpackedDistDirectory(String parentImagesPackageResourceLocation)", "full_signature": "public static File locateImagesDirectoryInUnpackedDistDirectory(String parentImagesPackageResourceLocation)", "class_method_signature": "ImageDirectoryLocator.locateImagesDirectoryInUnpackedDistDirectory(String parentImagesPackageResourceLocation)", "testcase": false, "constructor": false}, {"identifier": "locateImagesDirectoryInExplodedClassPath", "parameters": "(String parentImagesPackageResourceLocation)", "modifiers": "public static", "return": "File", "signature": "File locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "full_signature": "public static File locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "class_method_signature": "ImageDirectoryLocator.locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "testcase": false, "constructor": false}, {"identifier": "checkImageDirectory", "parameters": "(File imagesDirectory)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkImageDirectory(File imagesDirectory)", "full_signature": "private static boolean checkImageDirectory(File imagesDirectory)", "class_method_signature": "ImageDirectoryLocator.checkImageDirectory(File imagesDirectory)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/utils/games/ImageDirectoryLocator.java"}, "focal_method": {"identifier": "locateImagesDirectoryInExplodedClassPath", "parameters": "(String parentImagesPackageResourceLocation)", "modifiers": "public static", "return": "File", "body": "public static File locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation) {\n        log.info(\"parentImagesPackageResourceLocation = {}\", parentImagesPackageResourceLocation);\n\n        final URL parentImagesPackageResourceUrl;\n\n        final ClassLoader classLoader = ImageDirectoryLocator.class.getClassLoader();\n        parentImagesPackageResourceUrl = classLoader.getResource(parentImagesPackageResourceLocation);\n        log.info(\"parentImagesPackageResourceUrl = {}\", parentImagesPackageResourceUrl);\n\n        if (parentImagesPackageResourceUrl == null) {\n            throw new IllegalStateException(\"Resource not found : \" + parentImagesPackageResourceLocation);\n        }\n\n        final File imagesDirectory = new File(parentImagesPackageResourceUrl.getFile());\n        log.info(\"imagesDirectory = {}\", imagesDirectory.getAbsolutePath());\n\n        checkImageDirectory(imagesDirectory);\n        return imagesDirectory;\n    }", "signature": "File locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "full_signature": "public static File locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "class_method_signature": "ImageDirectoryLocator.locateImagesDirectoryInExplodedClassPath(String parentImagesPackageResourceLocation)", "testcase": false, "constructor": false, "invocations": ["info", "getClassLoader", "getResource", "info", "getFile", "info", "getAbsolutePath", "checkImageDirectory"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}