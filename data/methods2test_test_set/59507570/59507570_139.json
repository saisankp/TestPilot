{"test_class": {"identifier": "IncidentListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    IncidentService incidentService;", "modifier": "@Mock", "type": "IncidentService", "declarator": "incidentService", "var_name": "incidentService"}, {"original_string": "@Mock\n    IncidentFormService incidentFormService;", "modifier": "@Mock", "type": "IncidentFormService", "declarator": "incidentFormService", "var_name": "incidentFormService"}, {"original_string": "@InjectMocks\n    IncidentListPresenter incidentListPresenter;", "modifier": "@InjectMocks", "type": "IncidentListPresenter", "declarator": "incidentListPresenter", "var_name": "incidentListPresenter"}], "file": "app/src/test/java/org/unicef/rapidreg/incident/incidentlist/IncidentListPresenterTest.java"}, "test_case": {"identifier": "should_return_records_by_registration_date_DES_filter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_records_by_registration_date_DES_filter() throws Exception {\n        SpinnerState spinnerState = SpinnerState.INTERVIEW_DATE_DES;\n\n        List<Long> expected = new ArrayList<>();\n        when(incidentService.getAllOrderByDateDES()).thenReturn(expected);\n\n        List<Long> actual = incidentListPresenter.getRecordsByFilter(spinnerState);\n\n        assertThat(\"Should return records by registrarion date DES filter when SpinnerState is AGE_DES\", actual, is(expected));\n    }", "signature": "void should_return_records_by_registration_date_DES_filter()", "full_signature": "@Test public void should_return_records_by_registration_date_DES_filter()", "class_method_signature": "IncidentListPresenterTest.should_return_records_by_registration_date_DES_filter()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAllOrderByDateDES", "getRecordsByFilter", "assertThat", "is"]}, "focal_class": {"identifier": "IncidentListPresenter", "superclass": "extends RecordListPresenter", "interfaces": "", "fields": [{"original_string": "private IncidentService incidentService;", "modifier": "private", "type": "IncidentService", "declarator": "incidentService", "var_name": "incidentService"}, {"original_string": "private IncidentFormService incidentFormService;", "modifier": "private", "type": "IncidentFormService", "declarator": "incidentFormService", "var_name": "incidentFormService"}], "methods": [{"identifier": "IncidentListPresenter", "parameters": "(IncidentService incidentService, IncidentFormService\n            incidentFormService, RecordService recordService)", "modifiers": "@Inject public", "return": "", "signature": " IncidentListPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService, RecordService recordService)", "full_signature": "@Inject public  IncidentListPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService, RecordService recordService)", "class_method_signature": "IncidentListPresenter.IncidentListPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService, RecordService recordService)", "testcase": false, "constructor": true}, {"identifier": "isFormReady", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFormReady()", "full_signature": "@Override public boolean isFormReady()", "class_method_signature": "IncidentListPresenter.isFormReady()", "testcase": false, "constructor": false}, {"identifier": "getRecordsByFilter", "parameters": "(SpinnerState spinnerState)", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getRecordsByFilter(SpinnerState spinnerState)", "full_signature": "@Override public List<Long> getRecordsByFilter(SpinnerState spinnerState)", "class_method_signature": "IncidentListPresenter.getRecordsByFilter(SpinnerState spinnerState)", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecords", "parameters": "()", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getSyncedRecords()", "full_signature": "@Override public List<Long> getSyncedRecords()", "class_method_signature": "IncidentListPresenter.getSyncedRecords()", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecordsCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSyncedRecordsCount()", "full_signature": "@Override public int getSyncedRecordsCount()", "class_method_signature": "IncidentListPresenter.getSyncedRecordsCount()", "testcase": false, "constructor": false}, {"identifier": "calculateDisplayedIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int calculateDisplayedIndex()", "full_signature": "@Override public int calculateDisplayedIndex()", "class_method_signature": "IncidentListPresenter.calculateDisplayedIndex()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/incident/incidentlist/IncidentListPresenter.java"}, "focal_method": {"identifier": "getRecordsByFilter", "parameters": "(SpinnerState spinnerState)", "modifiers": "@Override public", "return": "List<Long>", "body": "@Override\n    public List<Long> getRecordsByFilter(SpinnerState spinnerState) {\n        switch (spinnerState) {\n            case AGE_ASC:\n                return incidentService.getAllOrderByAgeASC();\n            case AGE_DES:\n                return incidentService.getAllOrderByAgeDES();\n            case INTERVIEW_DATE_ASC:\n                return incidentService.getAllOrderByDateASC();\n            case INTERVIEW_DATE_DES:\n                return incidentService.getAllOrderByDateDES();\n            default:\n                return new ArrayList<>();\n        }\n    }", "signature": "List<Long> getRecordsByFilter(SpinnerState spinnerState)", "full_signature": "@Override public List<Long> getRecordsByFilter(SpinnerState spinnerState)", "class_method_signature": "IncidentListPresenter.getRecordsByFilter(SpinnerState spinnerState)", "testcase": false, "constructor": false, "invocations": ["getAllOrderByAgeASC", "getAllOrderByAgeDES", "getAllOrderByDateASC", "getAllOrderByDateDES"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}