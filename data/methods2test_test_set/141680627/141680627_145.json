{"test_class": {"identifier": "GuidanceNextManeuverPresenterTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private GuidanceNextManeuverPresenter mNextManeuverPresenter;", "modifier": "private", "type": "GuidanceNextManeuverPresenter", "declarator": "mNextManeuverPresenter", "var_name": "mNextManeuverPresenter"}, {"original_string": "private NavigationManager mNavigationManager;", "modifier": "private", "type": "NavigationManager", "declarator": "mNavigationManager", "var_name": "mNavigationManager"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/guidance/GuidanceNextManeuverPresenterTest.java"}, "test_case": {"identifier": "testHandleManeuverEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleManeuverEvent() {\n        final Maneuver maneuver = MockUtils.mockManeuver();\n        GuidanceNextManeuverListener listener = mock(GuidanceNextManeuverListener.class);\n        mNextManeuverPresenter.addListener(listener);\n        when(mNavigationManager.getAfterNextManeuver()).thenReturn(maneuver);\n        mNextManeuverPresenter.handleManeuverEvent();\n        verify(listener).onDataChanged(any());\n    }", "signature": "void testHandleManeuverEvent()", "full_signature": "@Test public void testHandleManeuverEvent()", "class_method_signature": "GuidanceNextManeuverPresenterTest.testHandleManeuverEvent()", "testcase": true, "constructor": false, "invocations": ["mockManeuver", "mock", "addListener", "thenReturn", "when", "getAfterNextManeuver", "handleManeuverEvent", "onDataChanged", "verify", "any"]}, "focal_class": {"identifier": "GuidanceNextManeuverPresenter", "superclass": "extends BaseGuidancePresenter", "interfaces": "", "fields": [{"original_string": "private final Context mContext;", "modifier": "private final", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private final List<GuidanceNextManeuverListener> mListener = new ArrayList<>();", "modifier": "private final", "type": "List<GuidanceNextManeuverListener>", "declarator": "mListener = new ArrayList<>()", "var_name": "mListener"}], "methods": [{"identifier": "GuidanceNextManeuverPresenter", "parameters": "(Context context, NavigationManager navigationManager, Route route)", "modifiers": "public", "return": "", "signature": " GuidanceNextManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "full_signature": "public  GuidanceNextManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "class_method_signature": "GuidanceNextManeuverPresenter.GuidanceNextManeuverPresenter(Context context, NavigationManager navigationManager, Route route)", "testcase": false, "constructor": true}, {"identifier": "handleManeuverEvent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void handleManeuverEvent()", "full_signature": "@Override public void handleManeuverEvent()", "class_method_signature": "GuidanceNextManeuverPresenter.handleManeuverEvent()", "testcase": false, "constructor": false}, {"identifier": "handleNewInstructionEvent", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void handleNewInstructionEvent()", "full_signature": "@Override protected void handleNewInstructionEvent()", "class_method_signature": "GuidanceNextManeuverPresenter.handleNewInstructionEvent()", "testcase": false, "constructor": false}, {"identifier": "updateManeuverData", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "void", "signature": "void updateManeuverData(Maneuver maneuver)", "full_signature": "private void updateManeuverData(Maneuver maneuver)", "class_method_signature": "GuidanceNextManeuverPresenter.updateManeuverData(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "(Maneuver maneuver)", "modifiers": "protected", "return": "int", "signature": "int getIcon(Maneuver maneuver)", "full_signature": "protected int getIcon(Maneuver maneuver)", "class_method_signature": "GuidanceNextManeuverPresenter.getIcon(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getStreet", "parameters": "(Maneuver maneuver)", "modifiers": "private", "return": "String", "signature": "String getStreet(Maneuver maneuver)", "full_signature": "private String getStreet(Maneuver maneuver)", "class_method_signature": "GuidanceNextManeuverPresenter.getStreet(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(GuidanceNextManeuverListener listener)", "modifiers": "public", "return": "void", "signature": "void addListener(GuidanceNextManeuverListener listener)", "full_signature": "public void addListener(GuidanceNextManeuverListener listener)", "class_method_signature": "GuidanceNextManeuverPresenter.addListener(GuidanceNextManeuverListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(GuidanceNextManeuverListener listener)", "modifiers": "public", "return": "void", "signature": "void removeListener(GuidanceNextManeuverListener listener)", "full_signature": "public void removeListener(GuidanceNextManeuverListener listener)", "class_method_signature": "GuidanceNextManeuverPresenter.removeListener(GuidanceNextManeuverListener listener)", "testcase": false, "constructor": false}, {"identifier": "notifyDataChanged", "parameters": "(GuidanceNextManeuverData data)", "modifiers": "private", "return": "void", "signature": "void notifyDataChanged(GuidanceNextManeuverData data)", "full_signature": "private void notifyDataChanged(GuidanceNextManeuverData data)", "class_method_signature": "GuidanceNextManeuverPresenter.notifyDataChanged(GuidanceNextManeuverData data)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/guidance/GuidanceNextManeuverPresenter.java"}, "focal_method": {"identifier": "handleManeuverEvent", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleManeuverEvent() {\n        final Maneuver maneuver = getAfterNextManeuver();\n        updateManeuverData(maneuver);\n    }", "signature": "void handleManeuverEvent()", "full_signature": "@Override public void handleManeuverEvent()", "class_method_signature": "GuidanceNextManeuverPresenter.handleManeuverEvent()", "testcase": false, "constructor": false, "invocations": ["getAfterNextManeuver", "updateManeuverData"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}