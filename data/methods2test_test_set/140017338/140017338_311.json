{"test_class": {"identifier": "XMLValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/runtime/src/test/java/org/eclipse/sw360/antenna/xml/XMLValidatorTest.java"}, "test_case": {"identifier": "validateXMLTestValidURL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateXMLTestValidURL() {\n        XMLValidator validator = new XMLValidator();\n        URL xsd = validator.getClass().getResource(\"/configTest.xsd\");\n        URL xml = validator.getClass().getResource(\"/antennaconf.xml\");\n        validator.validateXML(xml, xsd);\n    }", "signature": "void validateXMLTestValidURL()", "full_signature": "@Test public void validateXMLTestValidURL()", "class_method_signature": "XMLValidatorTest.validateXMLTestValidURL()", "testcase": true, "constructor": false, "invocations": ["getResource", "getClass", "getResource", "getClass", "validateXML"]}, "focal_class": {"identifier": "XMLValidator", "superclass": "extends IXMLValidator", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(XMLValidator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(XMLValidator.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "validateXML", "parameters": "(File xmlFile, URL xsdUrl)", "modifiers": "@Override public", "return": "void", "signature": "void validateXML(File xmlFile, URL xsdUrl)", "full_signature": "@Override public void validateXML(File xmlFile, URL xsdUrl)", "class_method_signature": "XMLValidator.validateXML(File xmlFile, URL xsdUrl)", "testcase": false, "constructor": false}], "file": "core/runtime/src/main/java/org/eclipse/sw360/antenna/xml/XMLValidator.java"}, "focal_method": {"identifier": "validateXML", "parameters": "(File xmlFile, URL xsdUrl)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validateXML(File xmlFile, URL xsdUrl) {\n        Validate.notNull(xmlFile, \"No URL to xml file provided!\");\n        if (xsdUrl != null) {\n            SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n            try {\n                Schema schema = factory.newSchema(xsdUrl);\n                Validator validator = schema.newValidator();\n\n                StreamSource source = new StreamSource(xmlFile);\n                validator.validate(source);\n            } catch (SAXException e) {\n                LOGGER.error(\"Invalid XML\", e);\n                throw new ConfigurationException(\"The config File \" + xmlFile + \" could not be validated against\" + xsdUrl, e);\n            } catch (IOException e) {\n                LOGGER.error(\"File access failing\", e);\n                throw new ConfigurationException(\"The config File could not be validated\", e);\n            }\n        }\n    }", "signature": "void validateXML(File xmlFile, URL xsdUrl)", "full_signature": "@Override public void validateXML(File xmlFile, URL xsdUrl)", "class_method_signature": "XMLValidator.validateXML(File xmlFile, URL xsdUrl)", "testcase": false, "constructor": false, "invocations": ["notNull", "newInstance", "newSchema", "newValidator", "validate", "error", "error"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}