{"test_class": {"identifier": "OPeNDAPUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static GridDataset daymetGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "daymetGridDataSet", "var_name": "daymetGridDataSet"}, {"original_string": "static GridDataset prismGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "prismGridDataSet", "var_name": "prismGridDataSet"}, {"original_string": "static GridDataset ssebopetaGridDataSet;", "modifier": "static", "type": "GridDataset", "declarator": "ssebopetaGridDataSet", "var_name": "ssebopetaGridDataSet"}], "file": "gdp-common-utilities/src/test/java/gov/usgs/cida/gdp/utilities/OPeNDAPUtilsTest.java"}, "test_case": {"identifier": "daymetOpendapUriTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void daymetOpendapUriTest() {\n        String gridSetLocation = \"dods://daymet.ornl.gov/thredds/dodsC/daymet-agg/daymet-agg.ncml\";\n        List<String> gridVariableList = Arrays.asList(\"prcp\", \"srad\", \"swe\");\n        \n        Range timeRange = null;\n        try {\n            timeRange = new Range(9763, 10128);\n        } catch (InvalidRangeException ignore) {}\n        assertNotNull(timeRange);\n        \n        Range xLngRange = null;\n        try {\n            xLngRange = new Range(1241, 1852);\n        } catch (InvalidRangeException ignore) {}\n        assertNotNull(xLngRange);\n        \n        Range yLatRange = null;\n        try {\n            yLatRange = new Range(1903, 2369);\n        } catch (InvalidRangeException ignore) {}\n        assertNotNull(yLatRange);\n        \n        String openDapURL = null;\n        try {\n            openDapURL = OPeNDAPUtils.generateOpenDapURL(gridSetLocation, gridVariableList, daymetGridDataSet.getNetcdfFile().getVariables(), timeRange, yLatRange, xLngRange);\n            \n        } catch (OPeNDAPUtilException ignore) {}\n        \n        assertNotNull(openDapURL);    \n        assertTrue(openDapURL.equals(\"http://daymet.ornl.gov/thredds/dodsC/daymet-agg/daymet-agg.ncml?x[1241:1:1852],y[1903:1:2369],time[9763:1:10128],lambert_conformal_conic,prcp[9763:1:10128][1903:1:2369][1241:1:1852],srad[9763:1:10128][1903:1:2369][1241:1:1852],swe[9763:1:10128][1903:1:2369][1241:1:1852]\"));\n    }", "signature": "void daymetOpendapUriTest()", "full_signature": "@Test public void daymetOpendapUriTest()", "class_method_signature": "OPeNDAPUtilsTest.daymetOpendapUriTest()", "testcase": true, "constructor": false, "invocations": ["asList", "assertNotNull", "assertNotNull", "assertNotNull", "generateOpenDapURL", "getVariables", "getNetcdfFile", "assertNotNull", "assertTrue", "equals"]}, "focal_class": {"identifier": "OPeNDAPUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int RANGE_STRIDE = 1;", "modifier": "public static final", "type": "int", "declarator": "RANGE_STRIDE = 1", "var_name": "RANGE_STRIDE"}, {"original_string": "public static final String PARAMETER_DECLARATOR = \"?\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETER_DECLARATOR = \"?\"", "var_name": "PARAMETER_DECLARATOR"}, {"original_string": "public static final String RANGE_DELIMETER = \":\";", "modifier": "public static final", "type": "String", "declarator": "RANGE_DELIMETER = \":\"", "var_name": "RANGE_DELIMETER"}, {"original_string": "public static final String URI_DELIMETER = \",\";", "modifier": "public static final", "type": "String", "declarator": "URI_DELIMETER = \",\"", "var_name": "URI_DELIMETER"}, {"original_string": "public static final String OPENDAP_PROTO = \"dods:\";", "modifier": "public static final", "type": "String", "declarator": "OPENDAP_PROTO = \"dods:\"", "var_name": "OPENDAP_PROTO"}, {"original_string": "public static final String REQUEST_PROTO = \"http:\";", "modifier": "public static final", "type": "String", "declarator": "REQUEST_PROTO = \"http:\"", "var_name": "REQUEST_PROTO"}, {"original_string": "public static final List<String> REQUIRED_ATTRIBUTES = Arrays\n            .asList(\"grid_mapping\");", "modifier": "public static final", "type": "List<String>", "declarator": "REQUIRED_ATTRIBUTES = Arrays\n            .asList(\"grid_mapping\")", "var_name": "REQUIRED_ATTRIBUTES"}, {"original_string": "public static final String DESCRIPTION_HEADER = \"Content-Description\";", "modifier": "public static final", "type": "String", "declarator": "DESCRIPTION_HEADER = \"Content-Description\"", "var_name": "DESCRIPTION_HEADER"}], "methods": [{"identifier": "generateOpenDapURL", "parameters": "(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "modifiers": "public static", "return": "String", "signature": "String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "full_signature": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "class_method_signature": "OPeNDAPUtils.generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "testcase": false, "constructor": false}, {"identifier": "generateOpenDapURL", "parameters": "(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "modifiers": "public static", "return": "String", "signature": "String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "full_signature": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "class_method_signature": "OPeNDAPUtils.generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange,\n            OPeNDAPContentType contentType)", "testcase": false, "constructor": false}, {"identifier": "getDimensionRawNameRangeMapping", "parameters": "(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "full_signature": "public static Map<String, String> getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "class_method_signature": "OPeNDAPUtils.getDimensionRawNameRangeMapping(List<?> gridVariableList,\n            String xRangeString, String yRangeString, String timeRangeString)", "testcase": false, "constructor": false}, {"identifier": "getDimensionVariableNameRangeMapping", "parameters": "(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "full_signature": "public static Map<String, String> getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "class_method_signature": "OPeNDAPUtils.getDimensionVariableNameRangeMapping(\n            List<?> gridVariableList, String xRangeString, String yRangeString,\n            String timeRangeString)", "testcase": false, "constructor": false}, {"identifier": "isOPeNDAP", "parameters": "(URI uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean isOPeNDAP(URI uri)", "full_signature": "public static boolean isOPeNDAP(URI uri)", "class_method_signature": "OPeNDAPUtils.isOPeNDAP(URI uri)", "testcase": false, "constructor": false}], "file": "gdp-common-utilities/src/main/java/gov/usgs/cida/gdp/utilities/OPeNDAPUtils.java"}, "focal_method": {"identifier": "generateOpenDapURL", "parameters": "(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "modifiers": "public static", "return": "String", "body": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)\n            throws OPeNDAPUtilException {\n        return generateOpenDapURL(datasetURI, requestedVariableList,\n                gridVariableList, timeRange, yRange, xRange,\n                OPeNDAPContentType.NONE);\n    }", "signature": "String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "full_signature": "public static String generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "class_method_signature": "OPeNDAPUtils.generateOpenDapURL(String datasetURI, List<String> requestedVariableList,\n            List<?> gridVariableList, Range timeRange, Range yRange, Range xRange)", "testcase": false, "constructor": false, "invocations": ["generateOpenDapURL"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}