{"test_class": {"identifier": "HintsStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/strategy/HintsStrategyTest.java"}, "test_case": {"identifier": "testLocateDbShards", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLocateDbShards() {\n        HintsStrategy test = new HintsStrategy();\n        Map<String, String> settings = new HashMap<>();\n        settings.put(HintsStrategy.SHARD_BY_DB, \"true\");\n        test.initialize(settings);\n        assertTrue(test.isShardByDb());\n        assertTrue(test.locateDbShards(new ShardingContext(\"appId\", \"logicDbName\", set(\"1\", \"2\", \"3\"), new Hints(), ConditionList.andList())).size() == 0);\n        assertEquals(set(\"1\"), test.locateDbShards(new ShardingContext(\"appId\", \"logicDbName\", set(\"1\", \"2\", \"3\"), new Hints().inShard(1), ConditionList.andList())));\n        assertEquals(set(\"1\"), test.locateDbShards(new ShardingContext(\"appId\", \"logicDbName\", set(\"1\", \"2\", \"3\"), new Hints().inShard(\"1\"), ConditionList.andList())));\n    }", "signature": "void testLocateDbShards()", "full_signature": "@Test public void testLocateDbShards()", "class_method_signature": "HintsStrategyTest.testLocateDbShards()", "testcase": true, "constructor": false, "invocations": ["put", "initialize", "assertTrue", "isShardByDb", "assertTrue", "size", "locateDbShards", "set", "andList", "assertEquals", "set", "locateDbShards", "set", "inShard", "andList", "assertEquals", "set", "locateDbShards", "set", "inShard", "andList"]}, "focal_class": {"identifier": "HintsStrategy", "superclass": "extends AbstractShardingStrategy", "interfaces": "", "fields": [{"original_string": "public static final String SHARD_BY_DB = \"shardByDb\";", "modifier": "public static final", "type": "String", "declarator": "SHARD_BY_DB = \"shardByDb\"", "var_name": "SHARD_BY_DB"}, {"original_string": "public static final String SHARD_BY_TABLE = \"shardByTable\";", "modifier": "public static final", "type": "String", "declarator": "SHARD_BY_TABLE = \"shardByTable\"", "var_name": "SHARD_BY_TABLE"}], "methods": [{"identifier": "initialize", "parameters": "(Map<String, String> settings)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(Map<String, String> settings)", "full_signature": "@Override public void initialize(Map<String, String> settings)", "class_method_signature": "HintsStrategy.initialize(Map<String, String> settings)", "testcase": false, "constructor": false}, {"identifier": "locateDbShards", "parameters": "(ShardingContext ctx)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> locateDbShards(ShardingContext ctx)", "full_signature": "@Override public Set<String> locateDbShards(ShardingContext ctx)", "class_method_signature": "HintsStrategy.locateDbShards(ShardingContext ctx)", "testcase": false, "constructor": false}, {"identifier": "locateTableShards", "parameters": "(TableShardingContext ctx)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> locateTableShards(TableShardingContext ctx)", "full_signature": "@Override public Set<String> locateTableShards(TableShardingContext ctx)", "class_method_signature": "HintsStrategy.locateTableShards(TableShardingContext ctx)", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/strategy/HintsStrategy.java"}, "focal_method": {"identifier": "locateDbShards", "parameters": "(ShardingContext ctx)", "modifiers": "@Override public", "return": "Set<String>", "body": "@Override\n    public Set<String> locateDbShards(ShardingContext ctx) {\n        return toSet(ctx.getHints().getShard());\n    }", "signature": "Set<String> locateDbShards(ShardingContext ctx)", "full_signature": "@Override public Set<String> locateDbShards(ShardingContext ctx)", "class_method_signature": "HintsStrategy.locateDbShards(ShardingContext ctx)", "testcase": false, "constructor": false, "invocations": ["toSet", "getShard", "getHints"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}