{"test_class": {"identifier": "NotFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/filter/NotFilterTest.java"}, "test_case": {"identifier": "encode", "parameters": "(final NotFilter filter, final byte[] berValue)", "modifiers": "@Test(dataProvider = \"component\") public", "return": "void", "body": "@Test(dataProvider = \"component\")\n  public void encode(final NotFilter filter, final byte[] berValue)\n    throws Exception\n  {\n    Assert.assertEquals(filter.getEncoder().encode(), berValue);\n  }", "signature": "void encode(final NotFilter filter, final byte[] berValue)", "full_signature": "@Test(dataProvider = \"component\") public void encode(final NotFilter filter, final byte[] berValue)", "class_method_signature": "NotFilterTest.encode(final NotFilter filter, final byte[] berValue)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "encode", "getEncoder"]}, "focal_class": {"identifier": "NotFilter", "superclass": "", "interfaces": "implements FilterSet", "fields": [{"original_string": "private static final int HASH_CODE_SEED = 10079;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 10079", "var_name": "HASH_CODE_SEED"}, {"original_string": "private Filter filterComponent;", "modifier": "private", "type": "Filter", "declarator": "filterComponent", "var_name": "filterComponent"}], "methods": [{"identifier": "NotFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " NotFilter()", "full_signature": "public  NotFilter()", "class_method_signature": "NotFilter.NotFilter()", "testcase": false, "constructor": true}, {"identifier": "NotFilter", "parameters": "(final Filter component)", "modifiers": "public", "return": "", "signature": " NotFilter(final Filter component)", "full_signature": "public  NotFilter(final Filter component)", "class_method_signature": "NotFilter.NotFilter(final Filter component)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "Type", "signature": "Type getType()", "full_signature": "@Override public Type getType()", "class_method_signature": "NotFilter.getType()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Filter component)", "modifiers": "@Override public", "return": "void", "signature": "void add(final Filter component)", "full_signature": "@Override public void add(final Filter component)", "class_method_signature": "NotFilter.add(final Filter component)", "testcase": false, "constructor": false}, {"identifier": "getEncoder", "parameters": "()", "modifiers": "@Override public", "return": "DEREncoder", "signature": "DEREncoder getEncoder()", "full_signature": "@Override public DEREncoder getEncoder()", "class_method_signature": "NotFilter.getEncoder()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "NotFilter.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "NotFilter.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "NotFilter.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/filter/NotFilter.java"}, "focal_method": {"identifier": "getEncoder", "parameters": "()", "modifiers": "@Override public", "return": "DEREncoder", "body": "@Override\n  public DEREncoder getEncoder()\n  {\n    return new ConstructedDEREncoder(\n      new ContextDERTag(Type.NOT.ordinal(), true),\n      filterComponent.getEncoder());\n  }", "signature": "DEREncoder getEncoder()", "full_signature": "@Override public DEREncoder getEncoder()", "class_method_signature": "NotFilter.getEncoder()", "testcase": false, "constructor": false, "invocations": ["ordinal", "getEncoder"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}