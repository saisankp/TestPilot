{"test_class": {"identifier": "PyPiVerifierTest", "superclass": "", "interfaces": "", "fields": [], "file": "rest-backend/src/test/java/org/eclipse/steady/backend/util/PyPiVerifierTest.java"}, "test_case": {"identifier": "testVerify", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testVerify() throws IOException {\n    final String json = FileUtil.readFile(\"./src/test/resources/pypi_flask.json\");\n\n    PyPiVerifier ppv = new PyPiVerifier();\n    assertTrue(ppv.containsMD5(json, \"c1d30f51cff4a38f9454b23328a15c5a\")); // Flask 0.11\n    final Calendar c = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n    c.setTimeInMillis(1482351732000L);\n    assertEquals(c, ppv.getReleaseTimestamp());\n\n    ppv = new PyPiVerifier();\n    assertFalse(ppv.containsMD5(json, \"c1d30f51cff4a38f9454b23328a15c5azzzzz\")); // Does not exist\n    assertEquals(null, ppv.getReleaseTimestamp());\n  }", "signature": "void testVerify()", "full_signature": "@Test public void testVerify()", "class_method_signature": "PyPiVerifierTest.testVerify()", "testcase": true, "constructor": false, "invocations": ["readFile", "assertTrue", "containsMD5", "getInstance", "getTimeZone", "setTimeInMillis", "assertEquals", "getReleaseTimestamp", "assertFalse", "containsMD5", "assertEquals", "getReleaseTimestamp"]}, "focal_class": {"identifier": "PyPiVerifier", "superclass": "", "interfaces": "implements DigestVerifier", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(PyPiVerifier.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(PyPiVerifier.class)", "var_name": "log"}, {"original_string": "private static Set<ProgrammingLanguage> SUPP_LANG = new HashSet<ProgrammingLanguage>();", "modifier": "private static", "type": "Set<ProgrammingLanguage>", "declarator": "SUPP_LANG = new HashSet<ProgrammingLanguage>()", "var_name": "SUPP_LANG"}, {"original_string": "private static Set<DigestAlgorithm> SUPP_ALG = new HashSet<DigestAlgorithm>();", "modifier": "private static", "type": "Set<DigestAlgorithm>", "declarator": "SUPP_ALG = new HashSet<DigestAlgorithm>()", "var_name": "SUPP_ALG"}, {"original_string": "private String url = null;", "modifier": "private", "type": "String", "declarator": "url = null", "var_name": "url"}, {"original_string": "private java.util.Calendar timestamp;", "modifier": "private", "type": "java.util.Calendar", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "private SimpleDateFormat dateFormat = null;", "modifier": "private", "type": "SimpleDateFormat", "declarator": "dateFormat = null", "var_name": "dateFormat"}], "methods": [{"identifier": "PyPiVerifier", "parameters": "()", "modifiers": "public", "return": "", "signature": " PyPiVerifier()", "full_signature": "public  PyPiVerifier()", "class_method_signature": "PyPiVerifier.PyPiVerifier()", "testcase": false, "constructor": true}, {"identifier": "getSupportedLanguages", "parameters": "()", "modifiers": "@Override public", "return": "Set<ProgrammingLanguage>", "signature": "Set<ProgrammingLanguage> getSupportedLanguages()", "full_signature": "@Override public Set<ProgrammingLanguage> getSupportedLanguages()", "class_method_signature": "PyPiVerifier.getSupportedLanguages()", "testcase": false, "constructor": false}, {"identifier": "getSupportedDigestAlgorithms", "parameters": "()", "modifiers": "@Override public", "return": "Set<DigestAlgorithm>", "signature": "Set<DigestAlgorithm> getSupportedDigestAlgorithms()", "full_signature": "@Override public Set<DigestAlgorithm> getSupportedDigestAlgorithms()", "class_method_signature": "PyPiVerifier.getSupportedDigestAlgorithms()", "testcase": false, "constructor": false}, {"identifier": "getVerificationUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVerificationUrl()", "full_signature": "@Override public String getVerificationUrl()", "class_method_signature": "PyPiVerifier.getVerificationUrl()", "testcase": false, "constructor": false}, {"identifier": "getReleaseTimestamp", "parameters": "()", "modifiers": "@Override public", "return": "java.util.Calendar", "signature": "java.util.Calendar getReleaseTimestamp()", "full_signature": "@Override public java.util.Calendar getReleaseTimestamp()", "class_method_signature": "PyPiVerifier.getReleaseTimestamp()", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "(final Library _lib)", "modifiers": "@Override public", "return": "List<LibraryId>", "signature": "List<LibraryId> verify(final Library _lib)", "full_signature": "@Override public List<LibraryId> verify(final Library _lib)", "class_method_signature": "PyPiVerifier.verify(final Library _lib)", "testcase": false, "constructor": false}, {"identifier": "containsMD5", "parameters": "(String _json, final String _md5)", "modifiers": "", "return": "boolean", "signature": "boolean containsMD5(String _json, final String _md5)", "full_signature": " boolean containsMD5(String _json, final String _md5)", "class_method_signature": "PyPiVerifier.containsMD5(String _json, final String _md5)", "testcase": false, "constructor": false}], "file": "rest-backend/src/main/java/org/eclipse/steady/backend/util/PyPiVerifier.java"}, "focal_method": {"identifier": "verify", "parameters": "(final Library _lib)", "modifiers": "@Override public", "return": "List<LibraryId>", "body": "@Override\n  public List<LibraryId> verify(final Library _lib) throws VerificationException {\n    if (_lib == null || _lib.getDigest() == null)\n      throw new IllegalArgumentException(\"No library or digest provided: [\" + _lib + \"]\");\n\n    if (_lib.getLibraryId() == null\n        || _lib.getLibraryId().getMvnGroup() == null\n        || _lib.getLibraryId().getVersion() == null) return null;\n\n    this.url =\n        \"https://pypi.python.org/pypi/<name>/<version>/json\"\n            .replaceAll(\"<name>\", _lib.getLibraryId().getMvnGroup())\n            .replaceAll(\"<version>\", _lib.getLibraryId().getVersion());\n\n    String response_body = null;\n    List<LibraryId> verified_lids = null;\n    int sc = -1;\n    try {\n      final CloseableHttpClient httpclient = HttpClients.createDefault();\n      final HttpGet method = new HttpGet(this.url);\n      if (ConnectionUtil.getProxyConfig() != null)\n        method.setConfig(ConnectionUtil.getProxyConfig());\n      final CloseableHttpResponse response = httpclient.execute(method);\n      try {\n        sc = response.getStatusLine().getStatusCode();\n        HttpEntity entity = response.getEntity();\n        if (sc == HttpStatus.SC_OK && entity != null) {\n          response_body = ConnectionUtil.readInputStream(entity.getContent());\n          verified_lids = new ArrayList<LibraryId>();\n          if (this.containsMD5(response_body, _lib.getDigest()))\n            verified_lids.add(_lib.getLibraryId());\n        }\n      } finally {\n        response.close();\n      }\n    } catch (Exception e) {\n      throw new VerificationException(_lib, this.url, e);\n    }\n    return verified_lids;\n  }", "signature": "List<LibraryId> verify(final Library _lib)", "full_signature": "@Override public List<LibraryId> verify(final Library _lib)", "class_method_signature": "PyPiVerifier.verify(final Library _lib)", "testcase": false, "constructor": false, "invocations": ["getDigest", "getLibraryId", "getMvnGroup", "getLibraryId", "getVersion", "getLibraryId", "replaceAll", "replaceAll", "getMvnGroup", "getLibraryId", "getVersion", "getLibraryId", "createDefault", "getProxyConfig", "setConfig", "getProxyConfig", "execute", "getStatusCode", "getStatusLine", "getEntity", "readInputStream", "getContent", "containsMD5", "getDigest", "add", "getLibraryId", "close"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}