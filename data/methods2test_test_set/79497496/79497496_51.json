{"test_class": {"identifier": "PriceComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "Projects/Project_10/PriceComparatorTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void compare() throws Exception {\n      BakedItemList b = new BakedItemList();\n      b.readItemFile(\"baked_item_data.csv\");\n      Assert.assertEquals(\"---------------------------------------\\n\"\n            + \"Report for Auburn's Best Bakery (by Price)\\n\"\n            + \"---------------------------------------\\n\\n\"\n            + \"Cookie: Chips Delight - Chocolate Chip   \"\n            + \"Quantity: 12   Price: $4.20\\n\"\n            + \"(Ingredients: flour, sugar, dark chocolate chips, butter, baking\"\n            + \" soda, \\nsalt)\\n\\n\"\n            + \"Cake: Birthday - Chocolate   Quantity: 1   \"\n            + \"Price: $8.00\\n\"\n            + \"(Ingredients: flour, sugar, cocoa powder, vanilla, eggs, \\n\"\n            + \"butter, baking soda, baking powder, salt)\\n\\n\"\n            + \"Pie: Weekly Special - Apple   Quantity: 1   \"\n            + \"Price: $12.00\\n\"\n            + \"(Ingredients: flour, sugar, apple, cinnamon, butter, \\n\"\n            + \"baking soda, salt)\\n\\n\"\n            + \"Pie: Summer Special - Key Lime   Quantity: 1\"\n            + \"   Price: $14.00\\n\"\n            + \"(Ingredients: flour, sugar, lime juice, lemon juice, graham \"\n            + \"crackers, \\nbutter, baking soda, salt)\\n\\n\"\n            + \"Cake: 2-Layer - Red Velvet   Quantity: 1   \"\n            + \"Price: $16.00\\n\"\n            + \"(Ingredients: flour, sugar, cocoa powder, food coloring, eggs, \"\n            + \"\\nbutter, baking soda, baking powder, salt)\\n\\n\"\n            + \"WeddingCake: 3-Layer/3-Tier - Vanilla   \"\n            + \"Quantity: 1   Price: $135.00\\n(Ingredients: flour, sugar, \"\n            + \"buttermilk, coffee, eggs, \\nbutter, baking soda, baking powder,\"\n            + \" salt)\\n\\n\",\n            b.generateReportByPrice());\n   }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "PriceComparatorTest.compare()", "testcase": true, "constructor": false, "invocations": ["readItemFile", "assertEquals", "generateReportByPrice"]}, "focal_class": {"identifier": "PriceComparator", "superclass": "", "interfaces": "implements Comparator<BakedItem>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(BakedItem b1, BakedItem b2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(BakedItem b1, BakedItem b2)", "full_signature": "@Override public int compare(BakedItem b1, BakedItem b2)", "class_method_signature": "PriceComparator.compare(BakedItem b1, BakedItem b2)", "testcase": false, "constructor": false}], "file": "Projects/Project_10/PriceComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(BakedItem b1, BakedItem b2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n   public int compare(BakedItem b1, BakedItem b2) {\n      if (b1.price() == b2.price()) {\n         return 0;\n      } else if (b1.price() > b2.price()) {\n         return 1;\n      } else {\n         return -1;\n      }\n   }", "signature": "int compare(BakedItem b1, BakedItem b2)", "full_signature": "@Override public int compare(BakedItem b1, BakedItem b2)", "class_method_signature": "PriceComparator.compare(BakedItem b1, BakedItem b2)", "testcase": false, "constructor": false, "invocations": ["price", "price", "price", "price"]}, "repository": {"repo_id": 79497496, "url": "https://github.com/perryBunn/COMP1210", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 15825, "license": "MIT License"}}