{"test_class": {"identifier": "RemotePeerBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RemotePeerBeanTest.java"}, "test_case": {"identifier": "testIsLeader", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void testIsLeader() {\n        long peerId = 7;\n        QuorumPeer.QuorumServer quorumServerMock = mock(QuorumPeer.QuorumServer.class);\n        when(quorumServerMock.getId()).thenReturn(peerId);\n        QuorumPeer peerMock = mock(QuorumPeer.class);\n        RemotePeerBean remotePeerBean = new RemotePeerBean(peerMock, quorumServerMock);\n        when(peerMock.isLeader(eq(peerId))).thenReturn(true);\n        assertTrue(remotePeerBean.isLeader());\n        when(peerMock.isLeader(eq(peerId))).thenReturn(false);\n        assertFalse(remotePeerBean.isLeader());\n    }", "signature": "void testIsLeader()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void testIsLeader()", "class_method_signature": "RemotePeerBeanTest.testIsLeader()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getId", "mock", "thenReturn", "when", "isLeader", "eq", "assertTrue", "isLeader", "thenReturn", "when", "isLeader", "eq", "assertFalse", "isLeader"]}, "focal_class": {"identifier": "RemotePeerBean", "superclass": "", "interfaces": "implements RemotePeerMXBean,ZKMBeanInfo", "fields": [{"original_string": "private QuorumPeer.QuorumServer peer;", "modifier": "private", "type": "QuorumPeer.QuorumServer", "declarator": "peer", "var_name": "peer"}, {"original_string": "private final QuorumPeer localPeer;", "modifier": "private final", "type": "QuorumPeer", "declarator": "localPeer", "var_name": "localPeer"}], "methods": [{"identifier": "RemotePeerBean", "parameters": "(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "modifiers": "public", "return": "", "signature": " RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "full_signature": "public  RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "class_method_signature": "RemotePeerBean.RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "testcase": false, "constructor": true}, {"identifier": "setQuorumServer", "parameters": "(QuorumPeer.QuorumServer peer)", "modifiers": "public", "return": "void", "signature": "void setQuorumServer(QuorumPeer.QuorumServer peer)", "full_signature": "public void setQuorumServer(QuorumPeer.QuorumServer peer)", "class_method_signature": "RemotePeerBean.setQuorumServer(QuorumPeer.QuorumServer peer)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "RemotePeerBean.getName()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "public boolean isHidden()", "class_method_signature": "RemotePeerBean.isHidden()", "testcase": false, "constructor": false}, {"identifier": "getQuorumAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQuorumAddress()", "full_signature": "public String getQuorumAddress()", "class_method_signature": "RemotePeerBean.getQuorumAddress()", "testcase": false, "constructor": false}, {"identifier": "getElectionAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getElectionAddress()", "full_signature": "public String getElectionAddress()", "class_method_signature": "RemotePeerBean.getElectionAddress()", "testcase": false, "constructor": false}, {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientAddress()", "full_signature": "public String getClientAddress()", "class_method_signature": "RemotePeerBean.getClientAddress()", "testcase": false, "constructor": false}, {"identifier": "getLearnerType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLearnerType()", "full_signature": "public String getLearnerType()", "class_method_signature": "RemotePeerBean.getLearnerType()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLeader()", "full_signature": "@Override public boolean isLeader()", "class_method_signature": "RemotePeerBean.isLeader()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/RemotePeerBean.java"}, "focal_method": {"identifier": "isLeader", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isLeader() {\n        return localPeer.isLeader(peer.getId());\n    }", "signature": "boolean isLeader()", "full_signature": "@Override public boolean isLeader()", "class_method_signature": "RemotePeerBean.isLeader()", "testcase": false, "constructor": false, "invocations": ["isLeader", "getId"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}