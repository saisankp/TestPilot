{"test_class": {"identifier": "WorldFireReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WorldFireReader reader;", "modifier": "private", "type": "WorldFireReader", "declarator": "reader", "var_name": "reader"}], "file": "beam-glob-due-reader/src/test/java/org/esa/beam/dataio/worldfire/WorldFireReaderTest.java"}, "test_case": {"identifier": "testReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReader() throws IOException {\n        final File file = TestResourceHelper.getAatsrAlgo1AsFile();\n        reader.readProductNodes(file, null);\n        assertNotNull(reader.getInput());\n        assertNull(reader.getSubsetDef());\n        assertSame(file, reader.getInput());\n        final TreeNode<File> productComponents = reader.getProductComponents();\n        assertNotNull(productComponents);\n        assertEquals(1, productComponents.getChildren().length);\n    }", "signature": "void testReader()", "full_signature": "@Test public void testReader()", "class_method_signature": "WorldFireReaderTest.testReader()", "testcase": true, "constructor": false, "invocations": ["getAatsrAlgo1AsFile", "readProductNodes", "assertNotNull", "getInput", "assertNull", "getSubsetDef", "assertSame", "getInput", "getProductComponents", "assertNotNull", "assertEquals", "getChildren"]}, "focal_class": {"identifier": "WorldFireReader", "superclass": "extends AbstractProductReader", "interfaces": "", "fields": [{"original_string": "static final String PRODUCT_TYPE_AATSR_ALGO1 = \"AATSR_ALGO1\";", "modifier": "static final", "type": "String", "declarator": "PRODUCT_TYPE_AATSR_ALGO1 = \"AATSR_ALGO1\"", "var_name": "PRODUCT_TYPE_AATSR_ALGO1"}, {"original_string": "static final String PRODUCT_TYPE_AATSR_ALGO2 = \"AATSR_ALGO2\";", "modifier": "static final", "type": "String", "declarator": "PRODUCT_TYPE_AATSR_ALGO2 = \"AATSR_ALGO2\"", "var_name": "PRODUCT_TYPE_AATSR_ALGO2"}, {"original_string": "static final String PRODUCT_TYPE_ATSR2_ALGO1 = \"ATSR2_ALGO1\";", "modifier": "static final", "type": "String", "declarator": "PRODUCT_TYPE_ATSR2_ALGO1 = \"ATSR2_ALGO1\"", "var_name": "PRODUCT_TYPE_ATSR2_ALGO1"}, {"original_string": "static final String PRODUCT_TYPE_ATSR2_ALGO2 = \"ATSR2_ALGO2\";", "modifier": "static final", "type": "String", "declarator": "PRODUCT_TYPE_ATSR2_ALGO2 = \"ATSR2_ALGO2\"", "var_name": "PRODUCT_TYPE_ATSR2_ALGO2"}], "methods": [{"identifier": "WorldFireReader", "parameters": "(WorldFireReaderPlugIn readerPlugIn)", "modifiers": "protected", "return": "", "signature": " WorldFireReader(WorldFireReaderPlugIn readerPlugIn)", "full_signature": "protected  WorldFireReader(WorldFireReaderPlugIn readerPlugIn)", "class_method_signature": "WorldFireReader.WorldFireReader(WorldFireReaderPlugIn readerPlugIn)", "testcase": false, "constructor": true}, {"identifier": "readProductNodesImpl", "parameters": "()", "modifiers": "@Override protected", "return": "Product", "signature": "Product readProductNodesImpl()", "full_signature": "@Override protected Product readProductNodesImpl()", "class_method_signature": "WorldFireReader.readProductNodesImpl()", "testcase": false, "constructor": false}, {"identifier": "attachGeoCoding", "parameters": "(Product product)", "modifiers": "private", "return": "void", "signature": "void attachGeoCoding(Product product)", "full_signature": "private void attachGeoCoding(Product product)", "class_method_signature": "WorldFireReader.attachGeoCoding(Product product)", "testcase": false, "constructor": false}, {"identifier": "createFireImage", "parameters": "(List<Placemark> fireList, final Product product)", "modifiers": "private", "return": "MultiLevelImage", "signature": "MultiLevelImage createFireImage(List<Placemark> fireList, final Product product)", "full_signature": "private MultiLevelImage createFireImage(List<Placemark> fireList, final Product product)", "class_method_signature": "WorldFireReader.createFireImage(List<Placemark> fireList, final Product product)", "testcase": false, "constructor": false}, {"identifier": "getFireSpotList", "parameters": "(File inputFile, GeoCoding geoCoding)", "modifiers": "private", "return": "List<Placemark>", "signature": "List<Placemark> getFireSpotList(File inputFile, GeoCoding geoCoding)", "full_signature": "private List<Placemark> getFireSpotList(File inputFile, GeoCoding geoCoding)", "class_method_signature": "WorldFireReader.getFireSpotList(File inputFile, GeoCoding geoCoding)", "testcase": false, "constructor": false}, {"identifier": "getProductType", "parameters": "(File inputFile)", "modifiers": "", "return": "String", "signature": "String getProductType(File inputFile)", "full_signature": " String getProductType(File inputFile)", "class_method_signature": "WorldFireReader.getProductType(File inputFile)", "testcase": false, "constructor": false}, {"identifier": "readBandRasterDataImpl", "parameters": "(int sourceOffsetX, int sourceOffsetY,\n                                          int sourceWidth, int sourceHeight,\n                                          int sourceStepX, int sourceStepY,\n                                          Band destBand,\n                                          int destOffsetX, int destOffsetY,\n                                          int destWidth, int destHeight,\n                                          ProductData destBuffer, ProgressMonitor pm)", "modifiers": "@Override protected", "return": "void", "signature": "void readBandRasterDataImpl(int sourceOffsetX, int sourceOffsetY,\n                                          int sourceWidth, int sourceHeight,\n                                          int sourceStepX, int sourceStepY,\n                                          Band destBand,\n                                          int destOffsetX, int destOffsetY,\n                                          int destWidth, int destHeight,\n                                          ProductData destBuffer, ProgressMonitor pm)", "full_signature": "@Override protected void readBandRasterDataImpl(int sourceOffsetX, int sourceOffsetY,\n                                          int sourceWidth, int sourceHeight,\n                                          int sourceStepX, int sourceStepY,\n                                          Band destBand,\n                                          int destOffsetX, int destOffsetY,\n                                          int destWidth, int destHeight,\n                                          ProductData destBuffer, ProgressMonitor pm)", "class_method_signature": "WorldFireReader.readBandRasterDataImpl(int sourceOffsetX, int sourceOffsetY,\n                                          int sourceWidth, int sourceHeight,\n                                          int sourceStepX, int sourceStepY,\n                                          Band destBand,\n                                          int destOffsetX, int destOffsetY,\n                                          int destWidth, int destHeight,\n                                          ProductData destBuffer, ProgressMonitor pm)", "testcase": false, "constructor": false}, {"identifier": "getReaderPlugIn", "parameters": "()", "modifiers": "@Override public", "return": "WorldFireReaderPlugIn", "signature": "WorldFireReaderPlugIn getReaderPlugIn()", "full_signature": "@Override public WorldFireReaderPlugIn getReaderPlugIn()", "class_method_signature": "WorldFireReader.getReaderPlugIn()", "testcase": false, "constructor": false}, {"identifier": "getProductComponents", "parameters": "()", "modifiers": "@Override public", "return": "TreeNode<File>", "signature": "TreeNode<File> getProductComponents()", "full_signature": "@Override public TreeNode<File> getProductComponents()", "class_method_signature": "WorldFireReader.getProductComponents()", "testcase": false, "constructor": false}, {"identifier": "parseLine", "parameters": "(String text, int index, GeoCoding geoCoding)", "modifiers": "private static", "return": "Placemark", "signature": "Placemark parseLine(String text, int index, GeoCoding geoCoding)", "full_signature": "private static Placemark parseLine(String text, int index, GeoCoding geoCoding)", "class_method_signature": "WorldFireReader.parseLine(String text, int index, GeoCoding geoCoding)", "testcase": false, "constructor": false}], "file": "beam-glob-due-reader/src/main/java/org/esa/beam/dataio/worldfire/WorldFireReader.java"}, "focal_method": {"identifier": "getProductComponents", "parameters": "()", "modifiers": "@Override public", "return": "TreeNode<File>", "body": "@Override\n    public TreeNode<File> getProductComponents() {\n        final File inputFile = new File(getInput().toString());\n        final File parent = inputFile.getParentFile();\n        final TreeNode<File> result = new TreeNode<File>(parent.getName());\n        result.setContent(parent);\n\n        final TreeNode<File> productFile = new TreeNode<File>(inputFile.getName());\n        productFile.setContent(inputFile);\n        result.addChild(productFile);\n\n        return result;\n    }", "signature": "TreeNode<File> getProductComponents()", "full_signature": "@Override public TreeNode<File> getProductComponents()", "class_method_signature": "WorldFireReader.getProductComponents()", "testcase": false, "constructor": false, "invocations": ["toString", "getInput", "getParentFile", "getName", "setContent", "getName", "setContent", "addChild"]}, "repository": {"repo_id": 526150, "url": "https://github.com/bcdev/glob-box", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 6440, "license": "licensed"}}