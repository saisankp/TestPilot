{"test_class": {"identifier": "ModelImplTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected ApiInterface apiInterface;", "modifier": "@Inject\n    protected", "type": "ApiInterface", "declarator": "apiInterface", "var_name": "apiInterface"}, {"original_string": "private Model model;", "modifier": "private", "type": "Model", "declarator": "model", "var_name": "model"}], "file": "app/src/test/java/com/andrey7mel/stepbystep/model/ModelImplTest.java"}, "test_case": {"identifier": "testGetRepoList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetRepoList() {\n        RepositoryDTO[] repositoryDTOs = testUtils.getGson().fromJson(testUtils.readString(\"json/repos.json\"), RepositoryDTO[].class);\n\n        when(apiInterface.getRepositories(TestConst.TEST_OWNER)).thenReturn(Observable.just(Arrays.asList(repositoryDTOs)));\n\n        TestSubscriber<List<RepositoryDTO>> testSubscriber = new TestSubscriber<>();\n        model.getRepoList(TestConst.TEST_OWNER).subscribe(testSubscriber);\n\n        testSubscriber.assertNoErrors();\n        testSubscriber.assertValueCount(1);\n\n        List<RepositoryDTO> actual = testSubscriber.getOnNextEvents().get(0);\n\n        assertEquals(7, actual.size());\n        assertEquals(\"Android-Rate\", actual.get(0).getName());\n        assertEquals(\"andrey7mel/Android-Rate\", actual.get(0).getFullName());\n        assertEquals(26314692, actual.get(0).getId());\n    }", "signature": "void testGetRepoList()", "full_signature": "@Test public void testGetRepoList()", "class_method_signature": "ModelImplTest.testGetRepoList()", "testcase": true, "constructor": false, "invocations": ["fromJson", "getGson", "readString", "thenReturn", "when", "getRepositories", "just", "asList", "subscribe", "getRepoList", "assertNoErrors", "assertValueCount", "get", "getOnNextEvents", "assertEquals", "size", "assertEquals", "getName", "get", "assertEquals", "getFullName", "get", "assertEquals", "getId", "get"]}, "focal_class": {"identifier": "ModelImpl", "superclass": "", "interfaces": "implements Model", "fields": [{"original_string": "private final Observable.Transformer schedulersTransformer;", "modifier": "private final", "type": "Observable.Transformer", "declarator": "schedulersTransformer", "var_name": "schedulersTransformer"}, {"original_string": "@Inject\n    protected ApiInterface apiInterface;", "modifier": "@Inject\n    protected", "type": "ApiInterface", "declarator": "apiInterface", "var_name": "apiInterface"}, {"original_string": "@Inject\n    @Named(Const.UI_THREAD)\n    Scheduler uiThread;", "modifier": "@Inject\n    @Named(Const.UI_THREAD)", "type": "Scheduler", "declarator": "uiThread", "var_name": "uiThread"}, {"original_string": "@Inject\n    @Named(Const.IO_THREAD)\n    Scheduler ioThread;", "modifier": "@Inject\n    @Named(Const.IO_THREAD)", "type": "Scheduler", "declarator": "ioThread", "var_name": "ioThread"}], "methods": [{"identifier": "ModelImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " ModelImpl()", "full_signature": "public  ModelImpl()", "class_method_signature": "ModelImpl.ModelImpl()", "testcase": false, "constructor": true}, {"identifier": "getRepoList", "parameters": "(String name)", "modifiers": "@Override public", "return": "Observable<List<RepositoryDTO>>", "signature": "Observable<List<RepositoryDTO>> getRepoList(String name)", "full_signature": "@Override public Observable<List<RepositoryDTO>> getRepoList(String name)", "class_method_signature": "ModelImpl.getRepoList(String name)", "testcase": false, "constructor": false}, {"identifier": "getRepoBranches", "parameters": "(String owner, String name)", "modifiers": "@Override public", "return": "Observable<List<BranchDTO>>", "signature": "Observable<List<BranchDTO>> getRepoBranches(String owner, String name)", "full_signature": "@Override public Observable<List<BranchDTO>> getRepoBranches(String owner, String name)", "class_method_signature": "ModelImpl.getRepoBranches(String owner, String name)", "testcase": false, "constructor": false}, {"identifier": "getRepoContributors", "parameters": "(String owner, String name)", "modifiers": "@Override public", "return": "Observable<List<ContributorDTO>>", "signature": "Observable<List<ContributorDTO>> getRepoContributors(String owner, String name)", "full_signature": "@Override public Observable<List<ContributorDTO>> getRepoContributors(String owner, String name)", "class_method_signature": "ModelImpl.getRepoContributors(String owner, String name)", "testcase": false, "constructor": false}, {"identifier": "applySchedulers", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Observable.Transformer<T, T>", "signature": "Observable.Transformer<T, T> applySchedulers()", "full_signature": "@SuppressWarnings(\"unchecked\") private Observable.Transformer<T, T> applySchedulers()", "class_method_signature": "ModelImpl.applySchedulers()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/andrey7mel/stepbystep/model/ModelImpl.java"}, "focal_method": {"identifier": "getRepoList", "parameters": "(String name)", "modifiers": "@Override public", "return": "Observable<List<RepositoryDTO>>", "body": "@Override\n    public Observable<List<RepositoryDTO>> getRepoList(String name) {\n        return apiInterface\n                .getRepositories(name)\n                .compose(applySchedulers());\n    }", "signature": "Observable<List<RepositoryDTO>> getRepoList(String name)", "full_signature": "@Override public Observable<List<RepositoryDTO>> getRepoList(String name)", "class_method_signature": "ModelImpl.getRepoList(String name)", "testcase": false, "constructor": false, "invocations": ["compose", "getRepositories", "applySchedulers"]}, "repository": {"repo_id": 48544726, "url": "https://github.com/andrey7mel/android-step-by-step", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 130, "size": 313, "license": "licensed"}}