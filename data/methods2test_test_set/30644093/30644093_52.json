{"test_class": {"identifier": "SecuritySchemeComponentTest", "superclass": "extends AbstractComponentTest", "interfaces": "", "fields": [{"original_string": "private static final String COMPONENT_NAME = \"security_scheme\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_NAME = \"security_scheme\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private Path outputDirectory;", "modifier": "private", "type": "Path", "declarator": "outputDirectory", "var_name": "outputDirectory"}], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/component/SecuritySchemeComponentTest.java"}, "test_case": {"identifier": "testSecuritySchemeComponent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSecuritySchemeComponent() throws URISyntaxException {\n        //Given\n        Path file = Paths.get(SecuritySchemeComponentTest.class.getResource(\"/yaml/swagger_petstore.yaml\").toURI());\n        Swagger2MarkupConverter converter = Swagger2MarkupConverter.from(file).build();\n        Swagger swagger = converter.getContext().getSchema();\n\n        List<SwaggerPathOperation> pathOperations = PathUtils.toPathOperationsList(swagger.getPaths(), \"\", \"\",\n                converter.getContext().getConfig().getOperationOrdering());\n\n        Swagger2MarkupConverter.SwaggerContext context = converter.getContext();\n        MarkupDocBuilder markupDocBuilder = context.createMarkupDocBuilder();\n\n        //When\n        markupDocBuilder = new SecuritySchemeComponent(context, new SecurityDocumentResolver(context))\n                .apply(markupDocBuilder, SecuritySchemeComponent.parameters(pathOperations.get(0), 3));\n\n        markupDocBuilder.writeToFileWithoutExtension(outputDirectory, StandardCharsets.UTF_8);\n\n        //Then\n        Path expectedFile = getExpectedFile(COMPONENT_NAME);\n        DiffUtils.assertThatFileIsEqual(expectedFile, outputDirectory, getReportName(COMPONENT_NAME));\n\n    }", "signature": "void testSecuritySchemeComponent()", "full_signature": "@Test public void testSecuritySchemeComponent()", "class_method_signature": "SecuritySchemeComponentTest.testSecuritySchemeComponent()", "testcase": true, "constructor": false, "invocations": ["get", "toURI", "getResource", "build", "from", "getSchema", "getContext", "toPathOperationsList", "getPaths", "getOperationOrdering", "getConfig", "getContext", "getContext", "createMarkupDocBuilder", "apply", "parameters", "get", "writeToFileWithoutExtension", "getExpectedFile", "assertThatFileIsEqual", "getReportName"]}, "focal_class": {"identifier": "SecuritySchemeComponent", "superclass": "extends MarkupComponent<SecuritySchemeComponent.Parameters>", "interfaces": "", "fields": [{"original_string": "private final Map<String, SecuritySchemeDefinition> securityDefinitions;", "modifier": "private final", "type": "Map<String, SecuritySchemeDefinition>", "declarator": "securityDefinitions", "var_name": "securityDefinitions"}, {"original_string": "private final DocumentResolver securityDocumentResolver;", "modifier": "private final", "type": "DocumentResolver", "declarator": "securityDocumentResolver", "var_name": "securityDocumentResolver"}, {"original_string": "private final TableComponent tableComponent;", "modifier": "private final", "type": "TableComponent", "declarator": "tableComponent", "var_name": "tableComponent"}], "methods": [{"identifier": "SecuritySchemeComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "modifiers": "public", "return": "", "signature": " SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "full_signature": "public  SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "class_method_signature": "SecuritySchemeComponent.SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "testcase": false, "constructor": true}, {"identifier": "parameters", "parameters": "(SwaggerPathOperation operation,\n                                                                int titleLevel)", "modifiers": "public static", "return": "SecuritySchemeComponent.Parameters", "signature": "SecuritySchemeComponent.Parameters parameters(SwaggerPathOperation operation,\n                                                                int titleLevel)", "full_signature": "public static SecuritySchemeComponent.Parameters parameters(SwaggerPathOperation operation,\n                                                                int titleLevel)", "class_method_signature": "SecuritySchemeComponent.parameters(SwaggerPathOperation operation,\n                                                                int titleLevel)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(MarkupDocBuilder markupDocBuilder, Parameters params)", "modifiers": "@Override public", "return": "MarkupDocBuilder", "signature": "MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "full_signature": "@Override public MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "class_method_signature": "SecuritySchemeComponent.apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "testcase": false, "constructor": false}, {"identifier": "applyPathsDocumentExtension", "parameters": "(PathsDocumentExtension.Context context)", "modifiers": "private", "return": "void", "signature": "void applyPathsDocumentExtension(PathsDocumentExtension.Context context)", "full_signature": "private void applyPathsDocumentExtension(PathsDocumentExtension.Context context)", "class_method_signature": "SecuritySchemeComponent.applyPathsDocumentExtension(PathsDocumentExtension.Context context)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/component/SecuritySchemeComponent.java"}, "focal_method": {"identifier": "SecuritySchemeComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "modifiers": "public", "return": "", "body": "public SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver) {\n        super(context);\n        this.securityDefinitions = context.getSchema().getSecurityDefinitions();\n        this.securityDocumentResolver = Validate.notNull(securityDocumentResolver, \"SecurityDocumentResolver must not be null\");\n        this.tableComponent = new TableComponent(context);\n    }", "signature": " SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "full_signature": "public  SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "class_method_signature": "SecuritySchemeComponent.SecuritySchemeComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                   DocumentResolver securityDocumentResolver)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}