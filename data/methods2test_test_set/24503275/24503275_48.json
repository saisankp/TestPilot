{"test_class": {"identifier": "CompactEncoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static byte T = 16;", "modifier": "private final static", "type": "byte", "declarator": "T = 16", "var_name": "T"}], "file": "ethereumj-core/src/test/java/org/ethereum/util/CompactEncoderTest.java"}, "test_case": {"identifier": "testCompactEncodeEvenTerminated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompactEncodeEvenTerminated() {\n\t\tbyte[] test = new byte[] { 0, 15, 1, 12, 11, 8, T };\n\t\tbyte[] expectedData = new byte[] { 0x20, 0x0f, 0x1c, (byte) 0xb8 };\n\t\tassertArrayEquals(\"even terminated compact encode fail\", expectedData, CompactEncoder.packNibbles(test));\n\t}", "signature": "void testCompactEncodeEvenTerminated()", "full_signature": "@Test public void testCompactEncodeEvenTerminated()", "class_method_signature": "CompactEncoderTest.testCompactEncodeEvenTerminated()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "packNibbles"]}, "focal_class": {"identifier": "CompactEncoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static byte TERMINATOR = 16;", "modifier": "private final static", "type": "byte", "declarator": "TERMINATOR = 16", "var_name": "TERMINATOR"}, {"original_string": "private final static Map<Character, Byte> hexMap = new HashMap<>();", "modifier": "private final static", "type": "Map<Character, Byte>", "declarator": "hexMap = new HashMap<>()", "var_name": "hexMap"}], "methods": [{"identifier": "packNibbles", "parameters": "(byte[] nibbles)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] packNibbles(byte[] nibbles)", "full_signature": "public static byte[] packNibbles(byte[] nibbles)", "class_method_signature": "CompactEncoder.packNibbles(byte[] nibbles)", "testcase": false, "constructor": false}, {"identifier": "unpackToNibbles", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] unpackToNibbles(byte[] str)", "full_signature": "public static byte[] unpackToNibbles(byte[] str)", "class_method_signature": "CompactEncoder.unpackToNibbles(byte[] str)", "testcase": false, "constructor": false}, {"identifier": "binToNibbles", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] binToNibbles(byte[] str)", "full_signature": "public static byte[] binToNibbles(byte[] str)", "class_method_signature": "CompactEncoder.binToNibbles(byte[] str)", "testcase": false, "constructor": false}, {"identifier": "binToNibblesNoTerminator", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] binToNibblesNoTerminator(byte[] str)", "full_signature": "public static byte[] binToNibblesNoTerminator(byte[] str)", "class_method_signature": "CompactEncoder.binToNibblesNoTerminator(byte[] str)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/util/CompactEncoder.java"}, "focal_method": {"identifier": "packNibbles", "parameters": "(byte[] nibbles)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] packNibbles(byte[] nibbles) {\n\t\tint terminator = 0;\n\t\t\n\t\tif (nibbles[nibbles.length-1] == TERMINATOR) {\n\t\t\tterminator = 1;\n\t\t\tnibbles = copyOf(nibbles, nibbles.length-1);\n\t\t}\n\t\tint oddlen = nibbles.length % 2;\n\t\tint flag = 2*terminator + oddlen;\n\t\tif (oddlen != 0) {\n\t\t\tbyte[] flags = new byte[] { (byte) flag};\n\t\t\tnibbles = concatenate(flags, nibbles);\n\t\t} else {\n\t\t\tbyte[] flags = new byte[] { (byte) flag, 0};\n\t\t\tnibbles = concatenate(flags, nibbles);\n\t\t}\n\t\tByteArrayOutputStream buffer = new ByteArrayOutputStream();\n\t\tfor (int i = 0; i < nibbles.length; i += 2) {\n\t\t\tbuffer.write(16*nibbles[i] + nibbles[i+1]);\n\t\t}\n\t\treturn buffer.toByteArray();\n\t}", "signature": "byte[] packNibbles(byte[] nibbles)", "full_signature": "public static byte[] packNibbles(byte[] nibbles)", "class_method_signature": "CompactEncoder.packNibbles(byte[] nibbles)", "testcase": false, "constructor": false, "invocations": ["copyOf", "concatenate", "concatenate", "write", "toByteArray"]}, "repository": {"repo_id": 24503275, "url": "https://github.com/ethereumj/ethereumj", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 27, "size": 13884, "license": "licensed"}}