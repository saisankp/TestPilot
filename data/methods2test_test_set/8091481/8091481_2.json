{"test_class": {"identifier": "LuceneHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static LuceneHelper helper = null;", "modifier": "static", "type": "LuceneHelper", "declarator": "helper = null", "var_name": "helper"}, {"original_string": "static File luceneDir = Files.createTempDir();", "modifier": "static", "type": "File", "declarator": "luceneDir = Files.createTempDir()", "var_name": "luceneDir"}], "file": "dexter-core/src/test/java/it/cnr/isti/hpc/dexter/lucene/LuceneHelperTest.java"}, "test_case": {"identifier": "testSimilarity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSimilarity() {\n\n\t\tassertEquals(0, helper.getCosineSimilarity(1, 6), 0.01);\n\t\tassertEquals(1, helper.getCosineSimilarity(1, 1), 0.01);\n\t\tassertTrue(helper.getCosineSimilarity(1, 4) > helper\n\t\t\t\t.getCosineSimilarity(1, 3));\n\t}", "signature": "void testSimilarity()", "full_signature": "@Test public void testSimilarity()", "class_method_signature": "LuceneHelperTest.testSimilarity()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCosineSimilarity", "assertEquals", "getCosineSimilarity", "assertTrue", "getCosineSimilarity", "getCosineSimilarity"]}, "focal_class": {"identifier": "LuceneHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final String LUCENE_ARTICLE_DEFAULT_FIELD = \"content\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_DEFAULT_FIELD = \"content\"", "var_name": "LUCENE_ARTICLE_DEFAULT_FIELD"}, {"original_string": "protected static final String LUCENE_ARTICLE_ID = \"wiki-id\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_ID = \"wiki-id\"", "var_name": "LUCENE_ARTICLE_ID"}, {"original_string": "protected static final String LUCENE_ARTICLE_WIKI_TITLE = \"wiki-title\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_WIKI_TITLE = \"wiki-title\"", "var_name": "LUCENE_ARTICLE_WIKI_TITLE"}, {"original_string": "protected static final String LUCENE_ARTICLE_TITLE = \"title\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_TITLE = \"title\"", "var_name": "LUCENE_ARTICLE_TITLE"}, {"original_string": "protected static final String LUCENE_ARTICLE_TYPE = \"type\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_TYPE = \"type\"", "var_name": "LUCENE_ARTICLE_TYPE"}, {"original_string": "protected static final String LUCENE_ARTICLE_LIST = \"list\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_LIST = \"list\"", "var_name": "LUCENE_ARTICLE_LIST"}, {"original_string": "protected static final String LUCENE_ARTICLE_INFOBOX = \"infobox\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_INFOBOX = \"infobox\"", "var_name": "LUCENE_ARTICLE_INFOBOX"}, {"original_string": "protected static final String LUCENE_ARTICLE_EMPH = \"emph\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_EMPH = \"emph\"", "var_name": "LUCENE_ARTICLE_EMPH"}, {"original_string": "protected static final String LUCENE_ARTICLE_SECTIONS = \"sections\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_SECTIONS = \"sections\"", "var_name": "LUCENE_ARTICLE_SECTIONS"}, {"original_string": "protected static final String LUCENE_ARTICLE_DESCRIPTIONS = \"desc\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_DESCRIPTIONS = \"desc\"", "var_name": "LUCENE_ARTICLE_DESCRIPTIONS"}, {"original_string": "protected static final String LUCENE_ARTICLE_LINKS = \"link\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_LINKS = \"link\"", "var_name": "LUCENE_ARTICLE_LINKS"}, {"original_string": "protected static final String LUCENE_ARTICLE_CONTENT = \"content\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_CONTENT = \"content\"", "var_name": "LUCENE_ARTICLE_CONTENT"}, {"original_string": "protected static final String LUCENE_ARTICLE_SUMMARY = \"summary\";", "modifier": "protected static final", "type": "String", "declarator": "LUCENE_ARTICLE_SUMMARY = \"summary\"", "var_name": "LUCENE_ARTICLE_SUMMARY"}, {"original_string": "private static final Logger logger = LoggerFactory\n\t\t\t.getLogger(LuceneHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n\t\t\t.getLogger(LuceneHelper.class)", "var_name": "logger"}, {"original_string": "protected final StandardAnalyzer ANALYZER = new StandardAnalyzer(\n\t\t\tVersion.LUCENE_41, CharArraySet.EMPTY_SET);", "modifier": "protected final", "type": "StandardAnalyzer", "declarator": "ANALYZER = new StandardAnalyzer(\n\t\t\tVersion.LUCENE_41, CharArraySet.EMPTY_SET)", "var_name": "ANALYZER"}, {"original_string": "protected static LuceneHelper dexterHelper;", "modifier": "protected static", "type": "LuceneHelper", "declarator": "dexterHelper", "var_name": "dexterHelper"}, {"original_string": "protected Directory index;", "modifier": "protected", "type": "Directory", "declarator": "index", "var_name": "index"}, {"original_string": "protected IndexWriter writer;", "modifier": "protected", "type": "IndexWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "protected IndexSearcher searcher;", "modifier": "protected", "type": "IndexSearcher", "declarator": "searcher", "var_name": "searcher"}, {"original_string": "protected final IndexWriterConfig config;", "modifier": "protected final", "type": "IndexWriterConfig", "declarator": "config", "var_name": "config"}, {"original_string": "protected final ArticleSummarizer summarizer;", "modifier": "protected final", "type": "ArticleSummarizer", "declarator": "summarizer", "var_name": "summarizer"}, {"original_string": "private static DexterParams params = DexterParams.getInstance();", "modifier": "private static", "type": "DexterParams", "declarator": "params = DexterParams.getInstance()", "var_name": "params"}, {"original_string": "protected final int collectionSize;", "modifier": "protected final", "type": "int", "declarator": "collectionSize", "var_name": "collectionSize"}, {"original_string": "protected static final FieldType STORE_TERM_VECTORS = new FieldType();", "modifier": "protected static final", "type": "FieldType", "declarator": "STORE_TERM_VECTORS = new FieldType()", "var_name": "STORE_TERM_VECTORS"}, {"original_string": "protected static final FieldType STORE_TERM_VECTORS_NOT_STORED = new FieldType();", "modifier": "protected static final", "type": "FieldType", "declarator": "STORE_TERM_VECTORS_NOT_STORED = new FieldType()", "var_name": "STORE_TERM_VECTORS_NOT_STORED"}, {"original_string": "private static SpotManager cleaner = new SpotManager();", "modifier": "private static", "type": "SpotManager", "declarator": "cleaner = new SpotManager()", "var_name": "cleaner"}, {"original_string": "protected final File wikiIdtToLuceneIdSerialization;", "modifier": "protected final", "type": "File", "declarator": "wikiIdtToLuceneIdSerialization", "var_name": "wikiIdtToLuceneIdSerialization"}, {"original_string": "protected static Map<Integer, Integer> wikiIdToLuceneId;", "modifier": "protected static", "type": "Map<Integer, Integer>", "declarator": "wikiIdToLuceneId", "var_name": "wikiIdToLuceneId"}], "methods": [{"identifier": "LuceneHelper", "parameters": "(File wikiIdtToLuceneIdSerialization, File indexPath)", "modifiers": "protected", "return": "", "signature": " LuceneHelper(File wikiIdtToLuceneIdSerialization, File indexPath)", "full_signature": "protected  LuceneHelper(File wikiIdtToLuceneIdSerialization, File indexPath)", "class_method_signature": "LuceneHelper.LuceneHelper(File wikiIdtToLuceneIdSerialization, File indexPath)", "testcase": false, "constructor": true}, {"identifier": "getReader", "parameters": "()", "modifiers": "protected", "return": "IndexReader", "signature": "IndexReader getReader()", "full_signature": "protected IndexReader getReader()", "class_method_signature": "LuceneHelper.getReader()", "testcase": false, "constructor": false}, {"identifier": "getSearcher", "parameters": "()", "modifiers": "protected", "return": "IndexSearcher", "signature": "IndexSearcher getSearcher()", "full_signature": "protected IndexSearcher getSearcher()", "class_method_signature": "LuceneHelper.getSearcher()", "testcase": false, "constructor": false}, {"identifier": "hasDexterLuceneIndex", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean hasDexterLuceneIndex()", "full_signature": "public static boolean hasDexterLuceneIndex()", "class_method_signature": "LuceneHelper.hasDexterLuceneIndex()", "testcase": false, "constructor": false}, {"identifier": "getDexterLuceneHelper", "parameters": "()", "modifiers": "public static", "return": "LuceneHelper", "signature": "LuceneHelper getDexterLuceneHelper()", "full_signature": "public static LuceneHelper getDexterLuceneHelper()", "class_method_signature": "LuceneHelper.getDexterLuceneHelper()", "testcase": false, "constructor": false}, {"identifier": "parseWikiIdToLuceneId", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void parseWikiIdToLuceneId()", "full_signature": "protected void parseWikiIdToLuceneId()", "class_method_signature": "LuceneHelper.parseWikiIdToLuceneId()", "testcase": false, "constructor": false}, {"identifier": "dumpWikiIdToLuceneId", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void dumpWikiIdToLuceneId()", "full_signature": "protected void dumpWikiIdToLuceneId()", "class_method_signature": "LuceneHelper.dumpWikiIdToLuceneId()", "testcase": false, "constructor": false}, {"identifier": "loadWikiIdToLuceneId", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void loadWikiIdToLuceneId()", "full_signature": "@SuppressWarnings(\"unchecked\") public void loadWikiIdToLuceneId()", "class_method_signature": "LuceneHelper.loadWikiIdToLuceneId()", "testcase": false, "constructor": false}, {"identifier": "getLuceneId", "parameters": "(int wikiId)", "modifiers": "protected", "return": "int", "signature": "int getLuceneId(int wikiId)", "full_signature": "protected int getLuceneId(int wikiId)", "class_method_signature": "LuceneHelper.getLuceneId(int wikiId)", "testcase": false, "constructor": false}, {"identifier": "getSimilarity", "parameters": "(Query query, int wikiId)", "modifiers": "public", "return": "float", "signature": "float getSimilarity(Query query, int wikiId)", "full_signature": "public float getSimilarity(Query query, int wikiId)", "class_method_signature": "LuceneHelper.getSimilarity(Query query, int wikiId)", "testcase": false, "constructor": false}, {"identifier": "getCosineSimilarity", "parameters": "(int x, int y)", "modifiers": "public", "return": "double", "signature": "double getCosineSimilarity(int x, int y)", "full_signature": "public double getCosineSimilarity(int x, int y)", "class_method_signature": "LuceneHelper.getCosineSimilarity(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "getCosineSimilarity", "parameters": "(int x, int y, String field)", "modifiers": "public", "return": "double", "signature": "double getCosineSimilarity(int x, int y, String field)", "full_signature": "public double getCosineSimilarity(int x, int y, String field)", "class_method_signature": "LuceneHelper.getCosineSimilarity(int x, int y, String field)", "testcase": false, "constructor": false}, {"identifier": "tfidfVector", "parameters": "(Map<String, Double> tfidf,\n\t\t\tMap<String, Integer> freq, String field)", "modifiers": "private", "return": "double", "signature": "double tfidfVector(Map<String, Double> tfidf,\n\t\t\tMap<String, Integer> freq, String field)", "full_signature": "private double tfidfVector(Map<String, Double> tfidf,\n\t\t\tMap<String, Integer> freq, String field)", "class_method_signature": "LuceneHelper.tfidfVector(Map<String, Double> tfidf,\n\t\t\tMap<String, Integer> freq, String field)", "testcase": false, "constructor": false}, {"identifier": "toLuceneDocument", "parameters": "(Article a)", "modifiers": "private", "return": "Document", "signature": "Document toLuceneDocument(Article a)", "full_signature": "private Document toLuceneDocument(Article a)", "class_method_signature": "LuceneHelper.toLuceneDocument(Article a)", "testcase": false, "constructor": false}, {"identifier": "addDocument", "parameters": "(Article a)", "modifiers": "public", "return": "void", "signature": "void addDocument(Article a)", "full_signature": "public void addDocument(Article a)", "class_method_signature": "LuceneHelper.addDocument(Article a)", "testcase": false, "constructor": false}, {"identifier": "addDocument", "parameters": "(int id, String content)", "modifiers": "protected", "return": "void", "signature": "void addDocument(int id, String content)", "full_signature": "protected void addDocument(int id, String content)", "class_method_signature": "LuceneHelper.addDocument(int id, String content)", "testcase": false, "constructor": false}, {"identifier": "clearIndex", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearIndex()", "full_signature": "public void clearIndex()", "class_method_signature": "LuceneHelper.clearIndex()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "LuceneHelper.commit()", "testcase": false, "constructor": false}, {"identifier": "getDoc", "parameters": "(int wikiId)", "modifiers": "private", "return": "Document", "signature": "Document getDoc(int wikiId)", "full_signature": "private Document getDoc(int wikiId)", "class_method_signature": "LuceneHelper.getDoc(int wikiId)", "testcase": false, "constructor": false}, {"identifier": "getFreq", "parameters": "(String query, String field)", "modifiers": "public", "return": "int", "signature": "int getFreq(String query, String field)", "full_signature": "public int getFreq(String query, String field)", "class_method_signature": "LuceneHelper.getFreq(String query, String field)", "testcase": false, "constructor": false}, {"identifier": "getFreq", "parameters": "(String query)", "modifiers": "public", "return": "int", "signature": "int getFreq(String query)", "full_signature": "public int getFreq(String query)", "class_method_signature": "LuceneHelper.getFreq(String query)", "testcase": false, "constructor": false}, {"identifier": "getFreqFromSummary", "parameters": "(String query)", "modifiers": "public", "return": "int", "signature": "int getFreqFromSummary(String query)", "full_signature": "public int getFreqFromSummary(String query)", "class_method_signature": "LuceneHelper.getFreqFromSummary(String query)", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "()", "modifiers": "private", "return": "IndexWriter", "signature": "IndexWriter getWriter()", "full_signature": "private IndexWriter getWriter()", "class_method_signature": "LuceneHelper.getWriter()", "testcase": false, "constructor": false}, {"identifier": "numDocs", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int numDocs()", "full_signature": "public int numDocs()", "class_method_signature": "LuceneHelper.numDocs()", "testcase": false, "constructor": false}, {"identifier": "closeWriter", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void closeWriter()", "full_signature": "public void closeWriter()", "class_method_signature": "LuceneHelper.closeWriter()", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String query, String field, int n)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> query(String query, String field, int n)", "full_signature": "public List<Integer> query(String query, String field, int n)", "class_method_signature": "LuceneHelper.query(String query, String field, int n)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String query, String field)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> query(String query, String field)", "full_signature": "public List<Integer> query(String query, String field)", "class_method_signature": "LuceneHelper.query(String query, String field)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String query)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> query(String query)", "full_signature": "public List<Integer> query(String query)", "class_method_signature": "LuceneHelper.query(String query)", "testcase": false, "constructor": false}, {"identifier": "getArticle", "parameters": "(int id)", "modifiers": "public", "return": "Article", "signature": "Article getArticle(int id)", "full_signature": "public Article getArticle(int id)", "class_method_signature": "LuceneHelper.getArticle(int id)", "testcase": false, "constructor": false}, {"identifier": "getArticleSummary", "parameters": "(int id)", "modifiers": "public", "return": "Article", "signature": "Article getArticleSummary(int id)", "full_signature": "public Article getArticleSummary(int id)", "class_method_signature": "LuceneHelper.getArticleSummary(int id)", "testcase": false, "constructor": false}, {"identifier": "getWikiId", "parameters": "(int luceneId)", "modifiers": "public", "return": "int", "signature": "int getWikiId(int luceneId)", "full_signature": "public int getWikiId(int luceneId)", "class_method_signature": "LuceneHelper.getWikiId(int luceneId)", "testcase": false, "constructor": false}, {"identifier": "rankBySimilarity", "parameters": "(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context, String field)", "modifiers": "@SuppressWarnings(\"null\") public", "return": "void", "signature": "void rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context, String field)", "full_signature": "@SuppressWarnings(\"null\") public void rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context, String field)", "class_method_signature": "LuceneHelper.rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context, String field)", "testcase": false, "constructor": false}, {"identifier": "rankBySimilarity", "parameters": "(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context)", "modifiers": "public", "return": "void", "signature": "void rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context)", "full_signature": "public void rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context)", "class_method_signature": "LuceneHelper.rankBySimilarity(SpotMatch spot, EntityMatchList eml,\n\t\t\tString context)", "testcase": false, "constructor": false}], "file": "dexter-core/src/main/java/it/cnr/isti/hpc/dexter/lucene/LuceneHelper.java"}, "focal_method": {"identifier": "getCosineSimilarity", "parameters": "(int x, int y)", "modifiers": "public", "return": "double", "body": "public double getCosineSimilarity(int x, int y) {\n\t\treturn getCosineSimilarity(x, y, LUCENE_ARTICLE_DEFAULT_FIELD);\n\t}", "signature": "double getCosineSimilarity(int x, int y)", "full_signature": "public double getCosineSimilarity(int x, int y)", "class_method_signature": "LuceneHelper.getCosineSimilarity(int x, int y)", "testcase": false, "constructor": false, "invocations": ["getCosineSimilarity"]}, "repository": {"repo_id": 8091481, "url": "https://github.com/dexter/dexter", "language": "Java", "is_fork": false, "fork_count": 52, "stargazer_count": 196, "size": 17631, "license": "licensed"}}