{"test_class": {"identifier": "CaseListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    CaseService caseService;", "modifier": "@Mock", "type": "CaseService", "declarator": "caseService", "var_name": "caseService"}, {"original_string": "@Mock\n    CaseFormService caseFormService;", "modifier": "@Mock", "type": "CaseFormService", "declarator": "caseFormService", "var_name": "caseFormService"}, {"original_string": "@Mock\n    CasePhotoService casePhotoService;", "modifier": "@Mock", "type": "CasePhotoService", "declarator": "casePhotoService", "var_name": "casePhotoService"}, {"original_string": "@InjectMocks\n    CaseListPresenter caseListPresenter;", "modifier": "@InjectMocks", "type": "CaseListPresenter", "declarator": "caseListPresenter", "var_name": "caseListPresenter"}], "file": "app/src/test/java/org/unicef/rapidreg/childcase/caselist/CaseListPresenterTest.java"}, "test_case": {"identifier": "should_return_displayed_index_when_case_is_empty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_displayed_index_when_case_is_empty() throws Exception {\n        when(caseService.getAll()).thenReturn(Collections.EMPTY_LIST);\n\n        int index = caseListPresenter.calculateDisplayedIndex();\n\n        assertThat(\"Should return 1 when cases is empty\", index, is(1));\n    }", "signature": "void should_return_displayed_index_when_case_is_empty()", "full_signature": "@Test public void should_return_displayed_index_when_case_is_empty()", "class_method_signature": "CaseListPresenterTest.should_return_displayed_index_when_case_is_empty()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAll", "calculateDisplayedIndex", "assertThat", "is"]}, "focal_class": {"identifier": "CaseListPresenter", "superclass": "extends RecordListPresenter", "interfaces": "", "fields": [{"original_string": "private CaseService caseService;", "modifier": "private", "type": "CaseService", "declarator": "caseService", "var_name": "caseService"}, {"original_string": "private CaseFormService caseFormService;", "modifier": "private", "type": "CaseFormService", "declarator": "caseFormService", "var_name": "caseFormService"}], "methods": [{"identifier": "CaseListPresenter", "parameters": "(CaseService caseService, CaseFormService caseFormService, RecordService recordService)", "modifiers": "@Inject public", "return": "", "signature": " CaseListPresenter(CaseService caseService, CaseFormService caseFormService, RecordService recordService)", "full_signature": "@Inject public  CaseListPresenter(CaseService caseService, CaseFormService caseFormService, RecordService recordService)", "class_method_signature": "CaseListPresenter.CaseListPresenter(CaseService caseService, CaseFormService caseFormService, RecordService recordService)", "testcase": false, "constructor": true}, {"identifier": "isFormReady", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFormReady()", "full_signature": "@Override public boolean isFormReady()", "class_method_signature": "CaseListPresenter.isFormReady()", "testcase": false, "constructor": false}, {"identifier": "getRecordsByFilter", "parameters": "(SpinnerState spinnerState)", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getRecordsByFilter(SpinnerState spinnerState)", "full_signature": "@Override public List<Long> getRecordsByFilter(SpinnerState spinnerState)", "class_method_signature": "CaseListPresenter.getRecordsByFilter(SpinnerState spinnerState)", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecords", "parameters": "()", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getSyncedRecords()", "full_signature": "@Override public List<Long> getSyncedRecords()", "class_method_signature": "CaseListPresenter.getSyncedRecords()", "testcase": false, "constructor": false}, {"identifier": "calculateDisplayedIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int calculateDisplayedIndex()", "full_signature": "@Override public int calculateDisplayedIndex()", "class_method_signature": "CaseListPresenter.calculateDisplayedIndex()", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecordsCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSyncedRecordsCount()", "full_signature": "@Override public int getSyncedRecordsCount()", "class_method_signature": "CaseListPresenter.getSyncedRecordsCount()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/childcase/caselist/CaseListPresenter.java"}, "focal_method": {"identifier": "calculateDisplayedIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int calculateDisplayedIndex() {\n        List<Case> cases = caseService.getAll();\n        return cases.isEmpty() ? HAVE_NO_RESULT : HAVE_RESULT_LIST;\n    }", "signature": "int calculateDisplayedIndex()", "full_signature": "@Override public int calculateDisplayedIndex()", "class_method_signature": "CaseListPresenter.calculateDisplayedIndex()", "testcase": false, "constructor": false, "invocations": ["getAll", "isEmpty"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}