{"test_class": {"identifier": "CompletableSubjectTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/subjects/CompletableSubjectTest.java"}, "test_case": {"identifier": "disposeTwice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void disposeTwice() {\n        CompletableSubject.create()\n        .subscribe(new CompletableObserver() {\n            @Override\n            public void onSubscribe(Disposable d) {\n                assertFalse(d.isDisposed());\n\n                d.dispose();\n                d.dispose();\n\n                assertTrue(d.isDisposed());\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onComplete() {\n\n            }\n        });\n    }", "signature": "void disposeTwice()", "full_signature": "@Test public void disposeTwice()", "class_method_signature": "CompletableSubjectTest.disposeTwice()", "testcase": true, "constructor": false, "invocations": ["subscribe", "create", "assertFalse", "isDisposed", "dispose", "dispose", "assertTrue", "isDisposed"]}, "focal_class": {"identifier": "CompletableSubject", "superclass": "extends Completable", "interfaces": "implements CompletableObserver", "fields": [{"original_string": "final AtomicReference<CompletableDisposable[]> observers;", "modifier": "final", "type": "AtomicReference<CompletableDisposable[]>", "declarator": "observers", "var_name": "observers"}, {"original_string": "static final CompletableDisposable[] EMPTY = new CompletableDisposable[0];", "modifier": "static final", "type": "CompletableDisposable[]", "declarator": "EMPTY = new CompletableDisposable[0]", "var_name": "EMPTY"}, {"original_string": "static final CompletableDisposable[] TERMINATED = new CompletableDisposable[0];", "modifier": "static final", "type": "CompletableDisposable[]", "declarator": "TERMINATED = new CompletableDisposable[0]", "var_name": "TERMINATED"}, {"original_string": "final AtomicBoolean once;", "modifier": "final", "type": "AtomicBoolean", "declarator": "once", "var_name": "once"}, {"original_string": "Throwable error;", "modifier": "", "type": "Throwable", "declarator": "error", "var_name": "error"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "CompletableSubject", "signature": "CompletableSubject create()", "full_signature": "@CheckReturnValue @NonNull public static CompletableSubject create()", "class_method_signature": "CompletableSubject.create()", "testcase": false, "constructor": false}, {"identifier": "CompletableSubject", "parameters": "()", "modifiers": "", "return": "", "signature": " CompletableSubject()", "full_signature": "  CompletableSubject()", "class_method_signature": "CompletableSubject.CompletableSubject()", "testcase": false, "constructor": true}, {"identifier": "onSubscribe", "parameters": "(Disposable d)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Disposable d)", "full_signature": "@Override public void onSubscribe(Disposable d)", "class_method_signature": "CompletableSubject.onSubscribe(Disposable d)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable e)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable e)", "full_signature": "@Override public void onError(Throwable e)", "class_method_signature": "CompletableSubject.onError(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "CompletableSubject.onComplete()", "testcase": false, "constructor": false}, {"identifier": "subscribeActual", "parameters": "(CompletableObserver observer)", "modifiers": "@Override protected", "return": "void", "signature": "void subscribeActual(CompletableObserver observer)", "full_signature": "@Override protected void subscribeActual(CompletableObserver observer)", "class_method_signature": "CompletableSubject.subscribeActual(CompletableObserver observer)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(CompletableDisposable inner)", "modifiers": "", "return": "boolean", "signature": "boolean add(CompletableDisposable inner)", "full_signature": " boolean add(CompletableDisposable inner)", "class_method_signature": "CompletableSubject.add(CompletableDisposable inner)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(CompletableDisposable inner)", "modifiers": "", "return": "void", "signature": "void remove(CompletableDisposable inner)", "full_signature": " void remove(CompletableDisposable inner)", "class_method_signature": "CompletableSubject.remove(CompletableDisposable inner)", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "@Nullable public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "@Nullable public Throwable getThrowable()", "class_method_signature": "CompletableSubject.getThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasThrowable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasThrowable()", "full_signature": "public boolean hasThrowable()", "class_method_signature": "CompletableSubject.hasThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasComplete", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasComplete()", "full_signature": "public boolean hasComplete()", "class_method_signature": "CompletableSubject.hasComplete()", "testcase": false, "constructor": false}, {"identifier": "hasObservers", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasObservers()", "full_signature": "public boolean hasObservers()", "class_method_signature": "CompletableSubject.hasObservers()", "testcase": false, "constructor": false}, {"identifier": "observerCount", "parameters": "()", "modifiers": "", "return": "int", "signature": "int observerCount()", "full_signature": " int observerCount()", "class_method_signature": "CompletableSubject.observerCount()", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/subjects/CompletableSubject.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "CompletableSubject", "body": "@CheckReturnValue\n    @NonNull\n    public static CompletableSubject create() {\n        return new CompletableSubject();\n    }", "signature": "CompletableSubject create()", "full_signature": "@CheckReturnValue @NonNull public static CompletableSubject create()", "class_method_signature": "CompletableSubject.create()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}