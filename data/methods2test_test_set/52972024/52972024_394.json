{"test_class": {"identifier": "SchedulerActorTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IPool pool;", "modifier": "private", "type": "IPool", "declarator": "pool", "var_name": "pool"}, {"original_string": "private ISchedulerEntryStorage storage;", "modifier": "private", "type": "ISchedulerEntryStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private ISchedulerService service;", "modifier": "private", "type": "ISchedulerService", "declarator": "service", "var_name": "service"}, {"original_string": "private IAction activationAction;", "modifier": "private", "type": "IAction", "declarator": "activationAction", "var_name": "activationAction"}, {"original_string": "private IObject args;", "modifier": "private", "type": "IObject", "declarator": "args", "var_name": "args"}, {"original_string": "private AddEntryQueryMessage addEntryQueryMessage;", "modifier": "private", "type": "AddEntryQueryMessage", "declarator": "addEntryQueryMessage", "var_name": "addEntryQueryMessage"}, {"original_string": "private SetEntryIdMessage addEntryWithSettingIdMessage;", "modifier": "private", "type": "SetEntryIdMessage", "declarator": "addEntryWithSettingIdMessage", "var_name": "addEntryWithSettingIdMessage"}, {"original_string": "private AddEntryQueryListMessage addListEntryQueryMessage;", "modifier": "private", "type": "AddEntryQueryListMessage", "declarator": "addListEntryQueryMessage", "var_name": "addListEntryQueryMessage"}, {"original_string": "private ListEntriesQueryMessage listEntriesQueryMessage;", "modifier": "private", "type": "ListEntriesQueryMessage", "declarator": "listEntriesQueryMessage", "var_name": "listEntriesQueryMessage"}, {"original_string": "private DeleteEntryQueryMessage deleteEntryQueryMessage;", "modifier": "private", "type": "DeleteEntryQueryMessage", "declarator": "deleteEntryQueryMessage", "var_name": "deleteEntryQueryMessage"}, {"original_string": "private IResolveDependencyStrategy newEntryStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "newEntryStrategy", "var_name": "newEntryStrategy"}, {"original_string": "private ISchedulerEntry entryMock;", "modifier": "private", "type": "ISchedulerEntry", "declarator": "entryMock", "var_name": "entryMock"}, {"original_string": "private IQueue taskQueueMock;", "modifier": "private", "type": "IQueue", "declarator": "taskQueueMock", "var_name": "taskQueueMock"}, {"original_string": "private ISchedulerEntryFilter preShutdownModeEntryFilterMock;", "modifier": "private", "type": "ISchedulerEntryFilter", "declarator": "preShutdownModeEntryFilterMock", "var_name": "preShutdownModeEntryFilterMock"}, {"original_string": "private IUpCounter upCounterMock;", "modifier": "private", "type": "IUpCounter", "declarator": "upCounterMock", "var_name": "upCounterMock"}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/test/java/info/smart_tools/smartactors/scheduler/actor/SchedulerActorTest.java"}, "test_case": {"identifier": "Should_registerUpCounterShutdownCompletionCallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_registerUpCounterShutdownCompletionCallback()\n            throws Exception {\n        SchedulerActor actor = new SchedulerActor(args);\n\n        ArgumentCaptor<IPoorAction> callbackCaptor = ArgumentCaptor.forClass(IPoorAction.class);\n\n        verify(upCounterMock).onShutdownComplete(callbackCaptor.capture());\n\n        callbackCaptor.getValue().execute();\n        verify(service).stop();\n\n        doThrow(ServiceStopException.class).when(service).stop();\n        try {\n            callbackCaptor.getValue().execute();\n            fail();\n        } catch (ActionExecuteException ignore) { }\n\n        doThrow(IllegalServiceStateException.class).when(service).stop();\n        callbackCaptor.getValue().execute();\n    }", "signature": "void Should_registerUpCounterShutdownCompletionCallback()", "full_signature": "@Test public void Should_registerUpCounterShutdownCompletionCallback()", "class_method_signature": "SchedulerActorTest.Should_registerUpCounterShutdownCompletionCallback()", "testcase": true, "constructor": false, "invocations": ["forClass", "onShutdownComplete", "verify", "capture", "execute", "getValue", "stop", "verify", "stop", "when", "doThrow", "execute", "getValue", "fail", "stop", "when", "doThrow", "execute", "getValue"]}, "focal_class": {"identifier": "SchedulerActor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ISchedulerService service;", "modifier": "private final", "type": "ISchedulerService", "declarator": "service", "var_name": "service"}], "methods": [{"identifier": "SchedulerActor", "parameters": "(final IObject args)", "modifiers": "public", "return": "", "signature": " SchedulerActor(final IObject args)", "full_signature": "public  SchedulerActor(final IObject args)", "class_method_signature": "SchedulerActor.SchedulerActor(final IObject args)", "testcase": false, "constructor": true}, {"identifier": "addEntry", "parameters": "(final AddEntryQueryMessage message)", "modifiers": "public", "return": "void", "signature": "void addEntry(final AddEntryQueryMessage message)", "full_signature": "public void addEntry(final AddEntryQueryMessage message)", "class_method_signature": "SchedulerActor.addEntry(final AddEntryQueryMessage message)", "testcase": false, "constructor": false}, {"identifier": "addEntryWithSettingId", "parameters": "(final SetEntryIdMessage message)", "modifiers": "public", "return": "void", "signature": "void addEntryWithSettingId(final SetEntryIdMessage message)", "full_signature": "public void addEntryWithSettingId(final SetEntryIdMessage message)", "class_method_signature": "SchedulerActor.addEntryWithSettingId(final SetEntryIdMessage message)", "testcase": false, "constructor": false}, {"identifier": "addEntryList", "parameters": "(final AddEntryQueryListMessage message)", "modifiers": "public", "return": "void", "signature": "void addEntryList(final AddEntryQueryListMessage message)", "full_signature": "public void addEntryList(final AddEntryQueryListMessage message)", "class_method_signature": "SchedulerActor.addEntryList(final AddEntryQueryListMessage message)", "testcase": false, "constructor": false}, {"identifier": "listEntries", "parameters": "(final ListEntriesQueryMessage message)", "modifiers": "public", "return": "void", "signature": "void listEntries(final ListEntriesQueryMessage message)", "full_signature": "public void listEntries(final ListEntriesQueryMessage message)", "class_method_signature": "SchedulerActor.listEntries(final ListEntriesQueryMessage message)", "testcase": false, "constructor": false}, {"identifier": "deleteEntry", "parameters": "(final DeleteEntryQueryMessage message)", "modifiers": "public", "return": "void", "signature": "void deleteEntry(final DeleteEntryQueryMessage message)", "full_signature": "public void deleteEntry(final DeleteEntryQueryMessage message)", "class_method_signature": "SchedulerActor.deleteEntry(final DeleteEntryQueryMessage message)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(final StartStopMessage message)", "modifiers": "public", "return": "void", "signature": "void start(final StartStopMessage message)", "full_signature": "public void start(final StartStopMessage message)", "class_method_signature": "SchedulerActor.start(final StartStopMessage message)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(final StartStopMessage message)", "modifiers": "public", "return": "void", "signature": "void stop(final StartStopMessage message)", "full_signature": "public void stop(final StartStopMessage message)", "class_method_signature": "SchedulerActor.stop(final StartStopMessage message)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(final ConfigureQueryMessage message)", "modifiers": "public", "return": "void", "signature": "void configure(final ConfigureQueryMessage message)", "full_signature": "public void configure(final ConfigureQueryMessage message)", "class_method_signature": "SchedulerActor.configure(final ConfigureQueryMessage message)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/main/java/info/smart_tools/smartactors/scheduler/actor/SchedulerActor.java"}, "focal_method": {"identifier": "stop", "parameters": "(final StartStopMessage message)", "modifiers": "public", "return": "void", "body": "public void stop(final StartStopMessage message)\n            throws IllegalServiceStateException, ServiceStopException {\n        service.stop();\n    }", "signature": "void stop(final StartStopMessage message)", "full_signature": "public void stop(final StartStopMessage message)", "class_method_signature": "SchedulerActor.stop(final StartStopMessage message)", "testcase": false, "constructor": false, "invocations": ["stop"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}