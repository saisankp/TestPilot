{"test_class": {"identifier": "StormTopologyTimeSeriesMetricsImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StormTopologyTimeSeriesMetricsImpl stormTopologyTimeSeriesMetrics;", "modifier": "private", "type": "StormTopologyTimeSeriesMetricsImpl", "declarator": "stormTopologyTimeSeriesMetrics", "var_name": "stormTopologyTimeSeriesMetrics"}, {"original_string": "@Mocked\n    private TimeSeriesQuerier mockTimeSeriesQuerier;", "modifier": "@Mocked\n    private", "type": "TimeSeriesQuerier", "declarator": "mockTimeSeriesQuerier", "var_name": "mockTimeSeriesQuerier"}, {"original_string": "private Random random = new Random();", "modifier": "private", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}, {"original_string": "private ObjectMapper mapper = new ObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static final String TOPIC_NAME = \"topic\";", "modifier": "private static final", "type": "String", "declarator": "TOPIC_NAME = \"topic\"", "var_name": "TOPIC_NAME"}, {"original_string": "private TopologyLayout topology;", "modifier": "private", "type": "TopologyLayout", "declarator": "topology", "var_name": "topology"}, {"original_string": "private Component source;", "modifier": "private", "type": "Component", "declarator": "source", "var_name": "source"}, {"original_string": "private Component processor;", "modifier": "private", "type": "Component", "declarator": "processor", "var_name": "processor"}, {"original_string": "private Component sink;", "modifier": "private", "type": "Component", "declarator": "sink", "var_name": "sink"}, {"original_string": "private String mockedTopologyName;", "modifier": "private", "type": "String", "declarator": "mockedTopologyName", "var_name": "mockedTopologyName"}], "file": "streams/runners/storm/metrics/src/test/java/com/hortonworks/streamline/streams/metrics/storm/topology/StormTopologyTimeSeriesMetricsImplTest.java"}, "test_case": {"identifier": "testGetCompleteLatency", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCompleteLatency() throws Exception {\n        final long from = 1L;\n        final long to = 3L;\n\n        final Map<Long, Double> expected = generateTestPointsMap();\n\n        // also verification\n        new Expectations() {{\n            mockTimeSeriesQuerier.getMetrics(\n                    withEqual(mockedTopologyName),\n                    withEqual(source.getId() + \"-\" + source.getName()),\n                    withEqual(StormMappedMetric.completeLatency.getStormMetricName()),\n                    withEqual(StormMappedMetric.completeLatency.getAggregateFunction()),\n                    withEqual(from), withEqual(to)\n            );\n\n            result = expected;\n        }};\n\n        Map<Long, Double> actual = stormTopologyTimeSeriesMetrics.getCompleteLatency(topology, source, from, to, null);\n        assertEquals(expected, actual);\n    }", "signature": "void testGetCompleteLatency()", "full_signature": "@Test public void testGetCompleteLatency()", "class_method_signature": "StormTopologyTimeSeriesMetricsImplTest.testGetCompleteLatency()", "testcase": true, "constructor": false, "invocations": ["generateTestPointsMap", "getMetrics", "withEqual", "withEqual", "getId", "getName", "withEqual", "getStormMetricName", "withEqual", "getAggregateFunction", "withEqual", "withEqual", "getCompleteLatency", "assertEquals"]}, "focal_class": {"identifier": "StormTopologyTimeSeriesMetricsImpl", "superclass": "", "interfaces": "implements TopologyTimeSeriesMetrics", "fields": [{"original_string": "private static final int FORK_JOIN_POOL_PARALLELISM = 30;", "modifier": "private static final", "type": "int", "declarator": "FORK_JOIN_POOL_PARALLELISM = 30", "var_name": "FORK_JOIN_POOL_PARALLELISM"}, {"original_string": "private static final ForkJoinPool FORK_JOIN_POOL = new ForkJoinPool(FORK_JOIN_POOL_PARALLELISM);", "modifier": "private static final", "type": "ForkJoinPool", "declarator": "FORK_JOIN_POOL = new ForkJoinPool(FORK_JOIN_POOL_PARALLELISM)", "var_name": "FORK_JOIN_POOL"}, {"original_string": "private final StormRestAPIClient client;", "modifier": "private final", "type": "StormRestAPIClient", "declarator": "client", "var_name": "client"}, {"original_string": "private TimeSeriesQuerier timeSeriesQuerier;", "modifier": "private", "type": "TimeSeriesQuerier", "declarator": "timeSeriesQuerier", "var_name": "timeSeriesQuerier"}, {"original_string": "private static final StormMappedMetric[] STATS_METRICS = new StormMappedMetric[]{\n            StormMappedMetric.inputRecords, StormMappedMetric.outputRecords, StormMappedMetric.ackedRecords,\n            StormMappedMetric.failedRecords, StormMappedMetric.processedTime, StormMappedMetric.recordsInWaitQueue,\n            StormMappedMetric.executeTime\n    };", "modifier": "private static final", "type": "StormMappedMetric[]", "declarator": "STATS_METRICS = new StormMappedMetric[]{\n            StormMappedMetric.inputRecords, StormMappedMetric.outputRecords, StormMappedMetric.ackedRecords,\n            StormMappedMetric.failedRecords, StormMappedMetric.processedTime, StormMappedMetric.recordsInWaitQueue,\n            StormMappedMetric.executeTime\n    }", "var_name": "STATS_METRICS"}, {"original_string": "private static final StormMappedMetric[] STATS_METRICS_SOURCE = new StormMappedMetric[]{\n            StormMappedMetric.inputRecords, StormMappedMetric.outputRecords, StormMappedMetric.ackedRecords,\n            StormMappedMetric.failedRecords, StormMappedMetric.processedTime, StormMappedMetric.recordsInWaitQueue,\n            StormMappedMetric.completeLatency\n    };", "modifier": "private static final", "type": "StormMappedMetric[]", "declarator": "STATS_METRICS_SOURCE = new StormMappedMetric[]{\n            StormMappedMetric.inputRecords, StormMappedMetric.outputRecords, StormMappedMetric.ackedRecords,\n            StormMappedMetric.failedRecords, StormMappedMetric.processedTime, StormMappedMetric.recordsInWaitQueue,\n            StormMappedMetric.completeLatency\n    }", "var_name": "STATS_METRICS_SOURCE"}], "methods": [{"identifier": "StormTopologyTimeSeriesMetricsImpl", "parameters": "(StormRestAPIClient client)", "modifiers": "public", "return": "", "signature": " StormTopologyTimeSeriesMetricsImpl(StormRestAPIClient client)", "full_signature": "public  StormTopologyTimeSeriesMetricsImpl(StormRestAPIClient client)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.StormTopologyTimeSeriesMetricsImpl(StormRestAPIClient client)", "testcase": false, "constructor": true}, {"identifier": "setTimeSeriesQuerier", "parameters": "(TimeSeriesQuerier timeSeriesQuerier)", "modifiers": "@Override public", "return": "void", "signature": "void setTimeSeriesQuerier(TimeSeriesQuerier timeSeriesQuerier)", "full_signature": "@Override public void setTimeSeriesQuerier(TimeSeriesQuerier timeSeriesQuerier)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.setTimeSeriesQuerier(TimeSeriesQuerier timeSeriesQuerier)", "testcase": false, "constructor": false}, {"identifier": "getTimeSeriesQuerier", "parameters": "()", "modifiers": "@Override public", "return": "TimeSeriesQuerier", "signature": "TimeSeriesQuerier getTimeSeriesQuerier()", "full_signature": "@Override public TimeSeriesQuerier getTimeSeriesQuerier()", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getTimeSeriesQuerier()", "testcase": false, "constructor": false}, {"identifier": "getCompleteLatency", "parameters": "(TopologyLayout topology, Component component, long from, long to, String asUser)", "modifiers": "@Override public", "return": "Map<Long, Double>", "signature": "Map<Long, Double> getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "full_signature": "@Override public Map<Long, Double> getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "testcase": false, "constructor": false}, {"identifier": "getkafkaTopicOffsets", "parameters": "(TopologyLayout topology, Component component, long from, long to, String asUser)", "modifiers": "@Override public", "return": "Map<String, Map<Long, Double>>", "signature": "Map<String, Map<Long, Double>> getkafkaTopicOffsets(TopologyLayout topology, Component component, long from, long to, String asUser)", "full_signature": "@Override public Map<String, Map<Long, Double>> getkafkaTopicOffsets(TopologyLayout topology, Component component, long from, long to, String asUser)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getkafkaTopicOffsets(TopologyLayout topology, Component component, long from, long to, String asUser)", "testcase": false, "constructor": false}, {"identifier": "getTopologyStats", "parameters": "(TopologyLayout topology, long from, long to, String asUser)", "modifiers": "@Override public", "return": "TimeSeriesComponentMetric", "signature": "TimeSeriesComponentMetric getTopologyStats(TopologyLayout topology, long from, long to, String asUser)", "full_signature": "@Override public TimeSeriesComponentMetric getTopologyStats(TopologyLayout topology, long from, long to, String asUser)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getTopologyStats(TopologyLayout topology, long from, long to, String asUser)", "testcase": false, "constructor": false}, {"identifier": "getComponentStats", "parameters": "(TopologyLayout topology, Component component, long from, long to, String asUser)", "modifiers": "@Override public", "return": "TimeSeriesComponentMetric", "signature": "TimeSeriesComponentMetric getComponentStats(TopologyLayout topology, Component component, long from, long to, String asUser)", "full_signature": "@Override public TimeSeriesComponentMetric getComponentStats(TopologyLayout topology, Component component, long from, long to, String asUser)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getComponentStats(TopologyLayout topology, Component component, long from, long to, String asUser)", "testcase": false, "constructor": false}, {"identifier": "buildTimeSeriesComponentMetric", "parameters": "(String name, Map<String, Map<Long, Double>> stats)", "modifiers": "private", "return": "TimeSeriesComponentMetric", "signature": "TimeSeriesComponentMetric buildTimeSeriesComponentMetric(String name, Map<String, Map<Long, Double>> stats)", "full_signature": "private TimeSeriesComponentMetric buildTimeSeriesComponentMetric(String name, Map<String, Map<Long, Double>> stats)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.buildTimeSeriesComponentMetric(String name, Map<String, Map<Long, Double>> stats)", "testcase": false, "constructor": false}, {"identifier": "getComponentName", "parameters": "(Component component)", "modifiers": "private", "return": "String", "signature": "String getComponentName(Component component)", "full_signature": "private String getComponentName(Component component)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getComponentName(Component component)", "testcase": false, "constructor": false}, {"identifier": "findKafkaTopicName", "parameters": "(Component component)", "modifiers": "private", "return": "String", "signature": "String findKafkaTopicName(Component component)", "full_signature": "private String findKafkaTopicName(Component component)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.findKafkaTopicName(Component component)", "testcase": false, "constructor": false}, {"identifier": "queryTopologyMetrics", "parameters": "(String stormTopologyName, StormMappedMetric mappedMetric, long from, long to)", "modifiers": "private", "return": "Map<Long, Double>", "signature": "Map<Long, Double> queryTopologyMetrics(String stormTopologyName, StormMappedMetric mappedMetric, long from, long to)", "full_signature": "private Map<Long, Double> queryTopologyMetrics(String stormTopologyName, StormMappedMetric mappedMetric, long from, long to)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.queryTopologyMetrics(String stormTopologyName, StormMappedMetric mappedMetric, long from, long to)", "testcase": false, "constructor": false}, {"identifier": "queryComponentMetrics", "parameters": "(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric, long from, long to)", "modifiers": "private", "return": "Map<Long, Double>", "signature": "Map<Long, Double> queryComponentMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric, long from, long to)", "full_signature": "private Map<Long, Double> queryComponentMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric, long from, long to)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.queryComponentMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric, long from, long to)", "testcase": false, "constructor": false}, {"identifier": "queryKafkaMetrics", "parameters": "(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric,\n                                                  String kafkaTopic, long from, long to)", "modifiers": "private", "return": "Map<Long, Double>", "signature": "Map<Long, Double> queryKafkaMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric,\n                                                  String kafkaTopic, long from, long to)", "full_signature": "private Map<Long, Double> queryKafkaMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric,\n                                                  String kafkaTopic, long from, long to)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.queryKafkaMetrics(String stormTopologyName, String sourceId, StormMappedMetric mappedMetric,\n                                                  String kafkaTopic, long from, long to)", "testcase": false, "constructor": false}], "file": "streams/runners/storm/metrics/src/main/java/com/hortonworks/streamline/streams/metrics/storm/topology/StormTopologyTimeSeriesMetricsImpl.java"}, "focal_method": {"identifier": "getCompleteLatency", "parameters": "(TopologyLayout topology, Component component, long from, long to, String asUser)", "modifiers": "@Override public", "return": "Map<Long, Double>", "body": "@Override\n    public Map<Long, Double> getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser) {\n        String stormTopologyName = StormTopologyUtil.findOrGenerateTopologyName(client, topology.getId(), topology.getName(), asUser);\n        String stormComponentName = getComponentName(component);\n\n        return queryComponentMetrics(stormTopologyName, stormComponentName, StormMappedMetric.completeLatency, from, to);\n    }", "signature": "Map<Long, Double> getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "full_signature": "@Override public Map<Long, Double> getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "class_method_signature": "StormTopologyTimeSeriesMetricsImpl.getCompleteLatency(TopologyLayout topology, Component component, long from, long to, String asUser)", "testcase": false, "constructor": false, "invocations": ["findOrGenerateTopologyName", "getId", "getName", "getComponentName", "queryComponentMetrics"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}