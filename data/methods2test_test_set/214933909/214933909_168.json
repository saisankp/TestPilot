{"test_class": {"identifier": "UserServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private UserService userService;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private LoginUser user = LoginUser.builder().id(1L).build();", "modifier": "private", "type": "LoginUser", "declarator": "user = LoginUser.builder().id(1L).build()", "var_name": "user"}, {"original_string": "private Errors errors = new BeanPropertyBindingResult(user, \"user\", true, 256);", "modifier": "private", "type": "Errors", "declarator": "errors = new BeanPropertyBindingResult(user, \"user\", true, 256)", "var_name": "errors"}, {"original_string": "private LoginUser currentUser = LoginUser.builder().id(2L).build();", "modifier": "private", "type": "LoginUser", "declarator": "currentUser = LoginUser.builder().id(2L).build()", "var_name": "currentUser"}, {"original_string": "private LoginUser newUser = LoginUser.builder().id(3L).build();", "modifier": "private", "type": "LoginUser", "declarator": "newUser = LoginUser.builder().id(3L).build()", "var_name": "newUser"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/UserServiceTest.java"}, "test_case": {"identifier": "canUpdateOrDeleteUserTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canUpdateOrDeleteUserTest() throws SQLException {\n        Assert.assertTrue(userService.canUpdateOrDeleteUser(currentUser, newUser));\n    }", "signature": "void canUpdateOrDeleteUserTest()", "full_signature": "@Test public void canUpdateOrDeleteUserTest()", "class_method_signature": "UserServiceTest.canUpdateOrDeleteUserTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canUpdateOrDeleteUser"]}, "focal_class": {"identifier": "UserService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private Consts consts;", "modifier": "@Autowired\n    private", "type": "Consts", "declarator": "consts", "var_name": "consts"}, {"original_string": "@Autowired\n    private Transform transform;", "modifier": "@Autowired\n    private", "type": "Transform", "declarator": "transform", "var_name": "transform"}, {"original_string": "@Autowired\n    private LoginUserDao loginUserDao;", "modifier": "@Autowired\n    private", "type": "LoginUserDao", "declarator": "loginUserDao", "var_name": "loginUserDao"}, {"original_string": "@Autowired\n    private GroupService groupService;", "modifier": "@Autowired\n    private", "type": "GroupService", "declarator": "groupService", "var_name": "groupService"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}, {"original_string": "@Autowired\n    private UserGroupDao userGroupDao;", "modifier": "@Autowired\n    private", "type": "UserGroupDao", "declarator": "userGroupDao", "var_name": "userGroupDao"}, {"original_string": "@Autowired\n    private EncdecConfiguration encdecConfiguration;", "modifier": "@Autowired\n    private", "type": "EncdecConfiguration", "declarator": "encdecConfiguration", "var_name": "encdecConfiguration"}, {"original_string": "@Autowired\n    private DefaultConfiguration defaultConfiguration;", "modifier": "@Autowired\n    private", "type": "DefaultConfiguration", "declarator": "defaultConfiguration", "var_name": "defaultConfiguration"}, {"original_string": "@Autowired\n    private UserConfiguration userConfiguration;", "modifier": "@Autowired\n    private", "type": "UserConfiguration", "declarator": "userConfiguration", "var_name": "userConfiguration"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, Errors errors)", "class_method_signature": "UserService.validatePermision(LoginUser user, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "canUpdateOrDeleteUser", "parameters": "(LoginUser currentUser, LoginUser newUser)", "modifiers": "public", "return": "boolean", "signature": "boolean canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "full_signature": "public boolean canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "class_method_signature": "UserService.canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "testcase": false, "constructor": false}, {"identifier": "canUpdateOrDeleteUser", "parameters": "(Long userId, Integer userRole, Long newUserId, Integer newUserRole)", "modifiers": "public", "return": "boolean", "signature": "boolean canUpdateOrDeleteUser(Long userId, Integer userRole, Long newUserId, Integer newUserRole)", "full_signature": "public boolean canUpdateOrDeleteUser(Long userId, Integer userRole, Long newUserId, Integer newUserRole)", "class_method_signature": "UserService.canUpdateOrDeleteUser(Long userId, Integer userRole, Long newUserId, Integer newUserRole)", "testcase": false, "constructor": false}, {"identifier": "addUser", "parameters": "(LoginUser user)", "modifiers": "public", "return": "boolean", "signature": "boolean addUser(LoginUser user)", "full_signature": "public boolean addUser(LoginUser user)", "class_method_signature": "UserService.addUser(LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(LoginUser user)", "modifiers": "public", "return": "boolean", "signature": "boolean update(LoginUser user)", "full_signature": "public boolean update(LoginUser user)", "class_method_signature": "UserService.update(LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "findUserPageList", "parameters": "(Paging<LoginUser> paging)", "modifiers": "public", "return": "ListResult<LoginUserView>", "signature": "ListResult<LoginUserView> findUserPageList(Paging<LoginUser> paging)", "full_signature": "public ListResult<LoginUserView> findUserPageList(Paging<LoginUser> paging)", "class_method_signature": "UserService.findUserPageList(Paging<LoginUser> paging)", "testcase": false, "constructor": false}, {"identifier": "initAdminInfo", "parameters": "(LoginUser user)", "modifiers": "public", "return": "boolean", "signature": "boolean initAdminInfo(LoginUser user)", "full_signature": "public boolean initAdminInfo(LoginUser user)", "class_method_signature": "UserService.initAdminInfo(LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(LoginUser user)", "modifiers": "public", "return": "boolean", "signature": "boolean register(LoginUser user)", "full_signature": "public boolean register(LoginUser user)", "class_method_signature": "UserService.register(LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "getUserInfoByWorkName", "parameters": "(LoginUser user, String name)", "modifiers": "public", "return": "ServiceResult<LoginUser>", "signature": "ServiceResult<LoginUser> getUserInfoByWorkName(LoginUser user, String name)", "full_signature": "public ServiceResult<LoginUser> getUserInfoByWorkName(LoginUser user, String name)", "class_method_signature": "UserService.getUserInfoByWorkName(LoginUser user, String name)", "testcase": false, "constructor": false}, {"identifier": "getUserManageButton", "parameters": "(LoginUser user)", "modifiers": "public", "return": "ServiceResult", "signature": "ServiceResult getUserManageButton(LoginUser user)", "full_signature": "public ServiceResult getUserManageButton(LoginUser user)", "class_method_signature": "UserService.getUserManageButton(LoginUser user)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/UserService.java"}, "focal_method": {"identifier": "canUpdateOrDeleteUser", "parameters": "(LoginUser currentUser, LoginUser newUser)", "modifiers": "public", "return": "boolean", "body": "public boolean canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser) throws SQLException {\n        if (permissionService.isSuperManagerById(currentUser.getId())) {\n            return true;\n        }\n        return canUpdateOrDeleteUser(currentUser.getId(), currentUser.getRole(), newUser.getId(), newUser.getRole());\n    }", "signature": "boolean canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "full_signature": "public boolean canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "class_method_signature": "UserService.canUpdateOrDeleteUser(LoginUser currentUser, LoginUser newUser)", "testcase": false, "constructor": false, "invocations": ["isSuperManagerById", "getId", "canUpdateOrDeleteUser", "getId", "getRole", "getId", "getRole"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}