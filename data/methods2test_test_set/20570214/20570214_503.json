{"test_class": {"identifier": "PaymentMethodTokenRecipientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MERCHANT_PUBLIC_KEY_BASE64 =\n      \"BOdoXP+9Aq473SnGwg3JU1aiNpsd9vH2ognq4PtDtlLGa3Kj8TPf+jaQNPyDSkh3JUhiS0KyrrlWhAgNZKHYF2Y=\";", "modifier": "private static final", "type": "String", "declarator": "MERCHANT_PUBLIC_KEY_BASE64 =\n      \"BOdoXP+9Aq473SnGwg3JU1aiNpsd9vH2ognq4PtDtlLGa3Kj8TPf+jaQNPyDSkh3JUhiS0KyrrlWhAgNZKHYF2Y=\"", "var_name": "MERCHANT_PUBLIC_KEY_BASE64"}, {"original_string": "private static final String MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgCPSuFr4iSIaQprjj\"\n          + \"chHPyDu2NXFe0vDBoTpPkYaK9dehRANCAATnaFz/vQKuO90pxsINyVNWojabHfbx\"\n          + \"9qIJ6uD7Q7ZSxmtyo/Ez3/o2kDT8g0pIdyVIYktCsq65VoQIDWSh2Bdm\";", "modifier": "private static final", "type": "String", "declarator": "MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgCPSuFr4iSIaQprjj\"\n          + \"chHPyDu2NXFe0vDBoTpPkYaK9dehRANCAATnaFz/vQKuO90pxsINyVNWojabHfbx\"\n          + \"9qIJ6uD7Q7ZSxmtyo/Ez3/o2kDT8g0pIdyVIYktCsq65VoQIDWSh2Bdm\"", "var_name": "MERCHANT_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String ALTERNATE_MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOUIzccyJ3rTx6SVm\"\n          + \"XrWdtwUP0NU26nvc8KIYw2GmYZKhRANCAAR5AjmTNAE93hQEQE+PryLlgr6Q7FXyN\"\n          + \"XoZRk+1Fikhq61mFhQ9s14MOwGBxd5O6Jwn/sdUrWxkYk3idtNEN1Rz\";", "modifier": "private static final", "type": "String", "declarator": "ALTERNATE_MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOUIzccyJ3rTx6SVm\"\n          + \"XrWdtwUP0NU26nvc8KIYw2GmYZKhRANCAAR5AjmTNAE93hQEQE+PryLlgr6Q7FXyN\"\n          + \"XoZRk+1Fikhq61mFhQ9s14MOwGBxd5O6Jwn/sdUrWxkYk3idtNEN1Rz\"", "var_name": "ALTERNATE_MERCHANT_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_VERIFYING_PUBLIC_KEYS_JSON =\n      \"{\\n\"\n          + \"  \\\"keys\\\": [\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYnHwS8uegWAewQtlxizmLFynw\"\n          + \"HcxRT1PK07cDA6/C4sXrVI1SzZCUx8U8S0LjMrT6ird/VW7be3Mz6t/srtRQ==\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv1\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM\"\n          + \"43yRydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENXvYqxD5WayKYhuXQevdGdLA8i\"\n          + \"fV4LsRS2uKvFo8wwyiwgQHB9DiKzG6T/P1Fu9Bl7zWy/se5Dy4wk1mJoPuxg==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2SigningOnly\\\"\\n\"\n          + \"    },\\n\"\n          + \"  ],\\n\"\n          + \"}\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_VERIFYING_PUBLIC_KEYS_JSON =\n      \"{\\n\"\n          + \"  \\\"keys\\\": [\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYnHwS8uegWAewQtlxizmLFynw\"\n          + \"HcxRT1PK07cDA6/C4sXrVI1SzZCUx8U8S0LjMrT6ird/VW7be3Mz6t/srtRQ==\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv1\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM\"\n          + \"43yRydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENXvYqxD5WayKYhuXQevdGdLA8i\"\n          + \"fV4LsRS2uKvFo8wwyiwgQHB9DiKzG6T/P1Fu9Bl7zWy/se5Dy4wk1mJoPuxg==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2SigningOnly\\\"\\n\"\n          + \"    },\\n\"\n          + \"  ],\\n\"\n          + \"}\"", "var_name": "GOOGLE_VERIFYING_PUBLIC_KEYS_JSON"}, {"original_string": "private static final int INDEX_OF_GOOGLE_SIGNING_EC_V1 = 0;", "modifier": "private static final", "type": "int", "declarator": "INDEX_OF_GOOGLE_SIGNING_EC_V1 = 0", "var_name": "INDEX_OF_GOOGLE_SIGNING_EC_V1"}, {"original_string": "private static final int INDEX_OF_GOOGLE_SIGNING_EC_V2 = 1;", "modifier": "private static final", "type": "int", "declarator": "INDEX_OF_GOOGLE_SIGNING_EC_V2 = 1", "var_name": "INDEX_OF_GOOGLE_SIGNING_EC_V2"}, {"original_string": "private static final int INDEX_OF_GOOGLE_SIGNING_EC_V2_SIGNING_ONLY = 2;", "modifier": "private static final", "type": "int", "declarator": "INDEX_OF_GOOGLE_SIGNING_EC_V2_SIGNING_ONLY = 2", "var_name": "INDEX_OF_GOOGLE_SIGNING_EC_V2_SIGNING_ONLY"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgZj/Dldxz8fvKVF5O\"\n          + \"TeAtK6tY3G1McmvhMppe6ayW6GahRANCAAQ9icfBLy56BYB7BC2XGLOYsXKfAdzF\"\n          + \"FPU8rTtwMDr8LixetUjVLNkJTHxTxLQuMytPqKt39Vbtt7czPq3+yu1F\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgZj/Dldxz8fvKVF5O\"\n          + \"TeAtK6tY3G1McmvhMppe6ayW6GahRANCAAQ9icfBLy56BYB7BC2XGLOYsXKfAdzF\"\n          + \"FPU8rTtwMDr8LixetUjVLNkJTHxTxLQuMytPqKt39Vbtt7czPq3+yu1F\"", "var_name": "GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\"", "var_name": "GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM43yR\"\n          + \"ydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM43yR\"\n          + \"ydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\"", "var_name": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\"", "var_name": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgRi9hSdY+knJ08odnY\"\n          + \"tZFMRi7ZYeMoasAijLhD4GiQ1yhRANCAAQ1e9irEPlZrIpiG5dB690Z0sDy\"\n          + \"J9XguxFLa4q8WjzDDKLCBAcH0OIrMbpP8/UW70GXvNbL+x7kPLjCTWYmg+7G\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgRi9hSdY+knJ08odnY\"\n          + \"tZFMRi7ZYeMoasAijLhD4GiQ1yhRANCAAQ1e9irEPlZrIpiG5dB690Z0sDy\"\n          + \"J9XguxFLa4q8WjzDDKLCBAcH0OIrMbpP8/UW70GXvNbL+x7kPLjCTWYmg+7G\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String\n      GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n          \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8OaurwvbyYm8JWDgFPRTIDg0/\"\n              + \"kcQTFAQ4txi5IP0AyM1QiagwRhDUfjpqZkpw8xt/DXwyWYM0DdHqoeV\"\n              + \"TKqmYQ==\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n          \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8OaurwvbyYm8JWDgFPRTIDg0/\"\n              + \"kcQTFAQ4txi5IP0AyM1QiagwRhDUfjpqZkpw8xt/DXwyWYM0DdHqoeV\"\n              + \"TKqmYQ==\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64"}, {"original_string": "private static final String\n      GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n          \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg+Jvpkq26tpZ0s\"\n              + \"TTZVh4teEI41SnJdmkBzM8VZ5ZirE2hRANCAATw5q6vC9vJibwlYOAU\"\n              + \"9FMgODT+RxBMUBDi3GLkg/QDIzVCJqDBGENR+OmpmSnDzG38NfDJZgz\"\n              + \"QN0eqh5VMqqZh\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n          \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg+Jvpkq26tpZ0s\"\n              + \"TTZVh4teEI41SnJdmkBzM8VZ5ZirE2hRANCAATw5q6vC9vJibwlYOAU\"\n              + \"9FMgODT+RxBMUBDi3GLkg/QDIzVCJqDBGENR+OmpmSnDzG38NfDJZgz\"\n              + \"QN0eqh5VMqqZh\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String RECIPIENT_ID = \"someRecipient\";", "modifier": "private static final", "type": "String", "declarator": "RECIPIENT_ID = \"someRecipient\"", "var_name": "RECIPIENT_ID"}, {"original_string": "private static final String PLAINTEXT = \"plaintext\";", "modifier": "private static final", "type": "String", "declarator": "PLAINTEXT = \"plaintext\"", "var_name": "PLAINTEXT"}, {"original_string": "private static final String CIPHERTEXT_EC_V1 =\n      \"{\"\n          + \"\\\"protocolVersion\\\":\\\"ECv1\\\",\"\n          + \"\\\"signedMessage\\\":\"\n          + (\"\\\"{\"\n              + \"\\\\\\\"tag\\\\\\\":\\\\\\\"ZVwlJt7dU8Plk0+r8rPF8DmPTvDiOA1UAoNjDV+SqDE\\\\\\\\u003d\\\\\\\",\"\n              + \"\\\\\\\"ephemeralPublicKey\\\\\\\":\\\\\\\"BPhVspn70Zj2Kkgu9t8+ApEuUWsI/zos5whGCQBlgOkuYagOis7\"\n              + \"qsrcbQrcprjvTZO3XOU+Qbcc28FSgsRtcgQE\\\\\\\\u003d\\\\\\\",\"\n              + \"\\\\\\\"encryptedMessage\\\\\\\":\\\\\\\"12jUObueVTdy\\\\\\\"}\\\",\")\n          + \"\\\"signature\\\":\\\"MEQCIDxBoUCoFRGReLdZ/cABlSSRIKoOEFoU3e27c14vMZtfAiBtX3pGMEpnw6mSAbnagC\"\n          + \"CgHlCk3NcFwWYEyxIE6KGZVA\\\\u003d\\\\u003d\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "CIPHERTEXT_EC_V1 =\n      \"{\"\n          + \"\\\"protocolVersion\\\":\\\"ECv1\\\",\"\n          + \"\\\"signedMessage\\\":\"\n          + (\"\\\"{\"\n              + \"\\\\\\\"tag\\\\\\\":\\\\\\\"ZVwlJt7dU8Plk0+r8rPF8DmPTvDiOA1UAoNjDV+SqDE\\\\\\\\u003d\\\\\\\",\"\n              + \"\\\\\\\"ephemeralPublicKey\\\\\\\":\\\\\\\"BPhVspn70Zj2Kkgu9t8+ApEuUWsI/zos5whGCQBlgOkuYagOis7\"\n              + \"qsrcbQrcprjvTZO3XOU+Qbcc28FSgsRtcgQE\\\\\\\\u003d\\\\\\\",\"\n              + \"\\\\\\\"encryptedMessage\\\\\\\":\\\\\\\"12jUObueVTdy\\\\\\\"}\\\",\")\n          + \"\\\"signature\\\":\\\"MEQCIDxBoUCoFRGReLdZ/cABlSSRIKoOEFoU3e27c14vMZtfAiBtX3pGMEpnw6mSAbnagC\"\n          + \"CgHlCk3NcFwWYEyxIE6KGZVA\\\\u003d\\\\u003d\\\"}\"", "var_name": "CIPHERTEXT_EC_V1"}, {"original_string": "private static final String ALTERNATE_PUBLIC_SIGNING_KEY =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEU8E6JppGKFG40r5dDU1idHRN52NuwsemFzXZh1oUqh3bGUPgPioH+RoW\"\n          + \"nmVSUQz1WfM2426w9f0GADuXzpUkcw==\";", "modifier": "private static final", "type": "String", "declarator": "ALTERNATE_PUBLIC_SIGNING_KEY =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEU8E6JppGKFG40r5dDU1idHRN52NuwsemFzXZh1oUqh3bGUPgPioH+RoW\"\n          + \"nmVSUQz1WfM2426w9f0GADuXzpUkcw==\"", "var_name": "ALTERNATE_PUBLIC_SIGNING_KEY"}], "file": "apps/paymentmethodtoken/src/test/java/com/google/crypto/tink/apps/paymentmethodtoken/PaymentMethodTokenRecipientTest.java"}, "test_case": {"identifier": "testShouldThrowIfSignatureForSignedKeyIsIncorrectInECV2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testShouldThrowIfSignatureForSignedKeyIsIncorrectInECV2() throws Exception {\n    PaymentMethodTokenRecipient recipient =\n        new PaymentMethodTokenRecipient.Builder()\n            .protocolVersion(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2)\n            .senderVerifyingKeys(GOOGLE_VERIFYING_PUBLIC_KEYS_JSON)\n            .recipientId(RECIPIENT_ID)\n            .addRecipientPrivateKey(MERCHANT_PRIVATE_KEY_PKCS8_BASE64)\n            .build();\n    JSONObject payload = new JSONObject(sealECV2(PLAINTEXT));\n    JSONArray signatures =\n        payload.getJSONObject(\"intermediateSigningKey\").getJSONArray(\"signatures\");\n    String correctSignature = signatures.getString(0);\n    byte[] wrongSignatureBytes = Base64.decode(correctSignature);\n    wrongSignatureBytes[0] = (byte) ~wrongSignatureBytes[0];\n    payload\n        .getJSONObject(\"intermediateSigningKey\")\n        .put(\"signatures\", new JSONArray().put(Base64.encode(wrongSignatureBytes)));\n\n    try {\n      recipient.unseal(payload.toString());\n      fail(\"Expected GeneralSecurityException\");\n    } catch (GeneralSecurityException e) {\n      assertEquals(\"cannot verify signature\", e.getMessage());\n    }\n  }", "signature": "void testShouldThrowIfSignatureForSignedKeyIsIncorrectInECV2()", "full_signature": "@Test public void testShouldThrowIfSignatureForSignedKeyIsIncorrectInECV2()", "class_method_signature": "PaymentMethodTokenRecipientTest.testShouldThrowIfSignatureForSignedKeyIsIncorrectInECV2()", "testcase": true, "constructor": false, "invocations": ["build", "addRecipientPrivateKey", "recipientId", "senderVerifyingKeys", "protocolVersion", "sealECV2", "getJSONArray", "getJSONObject", "getString", "decode", "put", "getJSONObject", "put", "encode", "unseal", "toString", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "PaymentMethodTokenRecipient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String protocolVersion;", "modifier": "private final", "type": "String", "declarator": "protocolVersion", "var_name": "protocolVersion"}, {"original_string": "private final List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders;", "modifier": "private final", "type": "List<SenderVerifyingKeysProvider>", "declarator": "senderVerifyingKeysProviders", "var_name": "senderVerifyingKeysProviders"}, {"original_string": "private final List<HybridDecrypt> hybridDecrypters = new ArrayList<HybridDecrypt>();", "modifier": "private final", "type": "List<HybridDecrypt>", "declarator": "hybridDecrypters = new ArrayList<HybridDecrypt>()", "var_name": "hybridDecrypters"}, {"original_string": "private final String senderId;", "modifier": "private final", "type": "String", "declarator": "senderId", "var_name": "senderId"}, {"original_string": "private final String recipientId;", "modifier": "private final", "type": "String", "declarator": "recipientId", "var_name": "recipientId"}], "methods": [{"identifier": "PaymentMethodTokenRecipient", "parameters": "(\n      String protocolVersion,\n      List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      String senderId,\n      List<ECPrivateKey> recipientPrivateKeys,\n      List<PaymentMethodTokenRecipientKem> recipientKems,\n      String recipientId)", "modifiers": "", "return": "", "signature": " PaymentMethodTokenRecipient(\n      String protocolVersion,\n      List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      String senderId,\n      List<ECPrivateKey> recipientPrivateKeys,\n      List<PaymentMethodTokenRecipientKem> recipientKems,\n      String recipientId)", "full_signature": "  PaymentMethodTokenRecipient(\n      String protocolVersion,\n      List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      String senderId,\n      List<ECPrivateKey> recipientPrivateKeys,\n      List<PaymentMethodTokenRecipientKem> recipientKems,\n      String recipientId)", "class_method_signature": "PaymentMethodTokenRecipient.PaymentMethodTokenRecipient(\n      String protocolVersion,\n      List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      String senderId,\n      List<ECPrivateKey> recipientPrivateKeys,\n      List<PaymentMethodTokenRecipientKem> recipientKems,\n      String recipientId)", "testcase": false, "constructor": true}, {"identifier": "PaymentMethodTokenRecipient", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " PaymentMethodTokenRecipient(Builder builder)", "full_signature": "private  PaymentMethodTokenRecipient(Builder builder)", "class_method_signature": "PaymentMethodTokenRecipient.PaymentMethodTokenRecipient(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "unseal", "parameters": "(final String sealedMessage)", "modifiers": "public", "return": "String", "signature": "String unseal(final String sealedMessage)", "full_signature": "public String unseal(final String sealedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.unseal(final String sealedMessage)", "testcase": false, "constructor": false}, {"identifier": "unsealECV1", "parameters": "(String sealedMessage)", "modifiers": "private", "return": "String", "signature": "String unsealECV1(String sealedMessage)", "full_signature": "private String unsealECV1(String sealedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.unsealECV1(String sealedMessage)", "testcase": false, "constructor": false}, {"identifier": "unsealECV2", "parameters": "(String sealedMessage)", "modifiers": "private", "return": "String", "signature": "String unsealECV2(String sealedMessage)", "full_signature": "private String unsealECV2(String sealedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.unsealECV2(String sealedMessage)", "testcase": false, "constructor": false}, {"identifier": "unsealECV2SigningOnly", "parameters": "(String sealedMessage)", "modifiers": "private", "return": "String", "signature": "String unsealECV2SigningOnly(String sealedMessage)", "full_signature": "private String unsealECV2SigningOnly(String sealedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.unsealECV2SigningOnly(String sealedMessage)", "testcase": false, "constructor": false}, {"identifier": "verifyECV1", "parameters": "(final JSONObject jsonMsg)", "modifiers": "private", "return": "String", "signature": "String verifyECV1(final JSONObject jsonMsg)", "full_signature": "private String verifyECV1(final JSONObject jsonMsg)", "class_method_signature": "PaymentMethodTokenRecipient.verifyECV1(final JSONObject jsonMsg)", "testcase": false, "constructor": false}, {"identifier": "verifyECV2", "parameters": "(final JSONObject jsonMsg)", "modifiers": "private", "return": "String", "signature": "String verifyECV2(final JSONObject jsonMsg)", "full_signature": "private String verifyECV2(final JSONObject jsonMsg)", "class_method_signature": "PaymentMethodTokenRecipient.verifyECV2(final JSONObject jsonMsg)", "testcase": false, "constructor": false}, {"identifier": "getSignedBytes", "parameters": "(String protocolVersion, String signedMessage)", "modifiers": "private", "return": "byte[]", "signature": "byte[] getSignedBytes(String protocolVersion, String signedMessage)", "full_signature": "private byte[] getSignedBytes(String protocolVersion, String signedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.getSignedBytes(String protocolVersion, String signedMessage)", "testcase": false, "constructor": false}, {"identifier": "validateMessage", "parameters": "(String decryptedMessage)", "modifiers": "private", "return": "void", "signature": "void validateMessage(String decryptedMessage)", "full_signature": "private void validateMessage(String decryptedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.validateMessage(String decryptedMessage)", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "(\n      final String protocolVersion,\n      final List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      final List<byte[]> signatures,\n      final byte[] signedBytes)", "modifiers": "private static", "return": "void", "signature": "void verify(\n      final String protocolVersion,\n      final List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      final List<byte[]> signatures,\n      final byte[] signedBytes)", "full_signature": "private static void verify(\n      final String protocolVersion,\n      final List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      final List<byte[]> signatures,\n      final byte[] signedBytes)", "class_method_signature": "PaymentMethodTokenRecipient.verify(\n      final String protocolVersion,\n      final List<SenderVerifyingKeysProvider> senderVerifyingKeysProviders,\n      final List<byte[]> signatures,\n      final byte[] signedBytes)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(String ciphertext)", "modifiers": "private", "return": "String", "signature": "String decrypt(String ciphertext)", "full_signature": "private String decrypt(String ciphertext)", "class_method_signature": "PaymentMethodTokenRecipient.decrypt(String ciphertext)", "testcase": false, "constructor": false}, {"identifier": "validateECV1", "parameters": "(final JSONObject jsonMsg)", "modifiers": "private", "return": "void", "signature": "void validateECV1(final JSONObject jsonMsg)", "full_signature": "private void validateECV1(final JSONObject jsonMsg)", "class_method_signature": "PaymentMethodTokenRecipient.validateECV1(final JSONObject jsonMsg)", "testcase": false, "constructor": false}, {"identifier": "validateECV2", "parameters": "(final JSONObject jsonMsg)", "modifiers": "private", "return": "void", "signature": "void validateECV2(final JSONObject jsonMsg)", "full_signature": "private void validateECV2(final JSONObject jsonMsg)", "class_method_signature": "PaymentMethodTokenRecipient.validateECV2(final JSONObject jsonMsg)", "testcase": false, "constructor": false}, {"identifier": "verifyIntermediateSigningKey", "parameters": "(JSONObject jsonMsg)", "modifiers": "private", "return": "List<SenderVerifyingKeysProvider>", "signature": "List<SenderVerifyingKeysProvider> verifyIntermediateSigningKey(JSONObject jsonMsg)", "full_signature": "private List<SenderVerifyingKeysProvider> verifyIntermediateSigningKey(JSONObject jsonMsg)", "class_method_signature": "PaymentMethodTokenRecipient.verifyIntermediateSigningKey(JSONObject jsonMsg)", "testcase": false, "constructor": false}, {"identifier": "validateIntermediateSigningKey", "parameters": "(final JSONObject intermediateSigningKey)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject validateIntermediateSigningKey(final JSONObject intermediateSigningKey)", "full_signature": "private JSONObject validateIntermediateSigningKey(final JSONObject intermediateSigningKey)", "class_method_signature": "PaymentMethodTokenRecipient.validateIntermediateSigningKey(final JSONObject intermediateSigningKey)", "testcase": false, "constructor": false}, {"identifier": "validateSignedKey", "parameters": "(final JSONObject signedKey)", "modifiers": "private", "return": "void", "signature": "void validateSignedKey(final JSONObject signedKey)", "full_signature": "private void validateSignedKey(final JSONObject signedKey)", "class_method_signature": "PaymentMethodTokenRecipient.validateSignedKey(final JSONObject signedKey)", "testcase": false, "constructor": false}, {"identifier": "parseTrustedSigningKeysJson", "parameters": "(\n      String protocolVersion, String trustedSigningKeysJson)", "modifiers": "private static", "return": "List<ECPublicKey>", "signature": "List<ECPublicKey> parseTrustedSigningKeysJson(\n      String protocolVersion, String trustedSigningKeysJson)", "full_signature": "private static List<ECPublicKey> parseTrustedSigningKeysJson(\n      String protocolVersion, String trustedSigningKeysJson)", "class_method_signature": "PaymentMethodTokenRecipient.parseTrustedSigningKeysJson(\n      String protocolVersion, String trustedSigningKeysJson)", "testcase": false, "constructor": false}], "file": "apps/paymentmethodtoken/src/main/java/com/google/crypto/tink/apps/paymentmethodtoken/PaymentMethodTokenRecipient.java"}, "focal_method": {"identifier": "unseal", "parameters": "(final String sealedMessage)", "modifiers": "public", "return": "String", "body": "public String unseal(final String sealedMessage) throws GeneralSecurityException {\n    try {\n      if (protocolVersion.equals(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V1)) {\n        return unsealECV1(sealedMessage);\n      } else if (protocolVersion.equals(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2)) {\n        return unsealECV2(sealedMessage);\n      } else if (protocolVersion.equals(\n          PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2_SIGNING_ONLY)) {\n        return unsealECV2SigningOnly(sealedMessage);\n      }\n      throw new IllegalArgumentException(\"unsupported version: \" + protocolVersion);\n    } catch (JSONException e) {\n      throw new GeneralSecurityException(\"cannot unseal; invalid JSON message\");\n    }\n  }", "signature": "String unseal(final String sealedMessage)", "full_signature": "public String unseal(final String sealedMessage)", "class_method_signature": "PaymentMethodTokenRecipient.unseal(final String sealedMessage)", "testcase": false, "constructor": false, "invocations": ["equals", "unsealECV1", "equals", "unsealECV2", "equals", "unsealECV2SigningOnly"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}