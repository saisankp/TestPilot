{"test_class": {"identifier": "GraphiteResultTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics/src/test/java/com/expedia/adaptivealerting/metrics/functions/source/graphite/GraphiteResultTest.java"}, "test_case": {"identifier": "testGetGraphiteQueryWithOnlyNullResultFromJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetGraphiteQueryWithOnlyNullResultFromJson() throws MissingDatapointException {\n        List<GraphiteResult> graphiteResults = readGraphiteFile(\"tests/invalidGraphiteResponse.json\");\n        for (GraphiteResult graphiteResult : graphiteResults) {\n            try {\n                graphiteResult.getDatapoint();\n            } catch (MissingDatapointException e) {\n                assertTrue(true);\n            }\n        }\n    }", "signature": "void testGetGraphiteQueryWithOnlyNullResultFromJson()", "full_signature": "@Test public void testGetGraphiteQueryWithOnlyNullResultFromJson()", "class_method_signature": "GraphiteResultTest.testGetGraphiteQueryWithOnlyNullResultFromJson()", "testcase": true, "constructor": false, "invocations": ["readGraphiteFile", "getDatapoint", "assertTrue"]}, "focal_class": {"identifier": "GraphiteResult", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[][] datapoints;", "modifier": "private", "type": "String[][]", "declarator": "datapoints", "var_name": "datapoints"}, {"original_string": "private String target;", "modifier": "private", "type": "String", "declarator": "target", "var_name": "target"}, {"original_string": "private Map<String, String> tags;", "modifier": "private", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}], "methods": [{"identifier": "getDatapoint", "parameters": "()", "modifiers": "public", "return": "Datapoint", "signature": "Datapoint getDatapoint()", "full_signature": "public Datapoint getDatapoint()", "class_method_signature": "GraphiteResult.getDatapoint()", "testcase": false, "constructor": false}], "file": "metrics/src/main/java/com/expedia/adaptivealerting/metrics/functions/source/graphite/GraphiteResult.java"}, "focal_method": {"identifier": "getDatapoint", "parameters": "()", "modifiers": "public", "return": "Datapoint", "body": "public Datapoint getDatapoint() throws MissingDatapointException {\n        Double value;\n        long timestamp;\n        for (int i = 0; i < this.datapoints.length; i++) {\n            if (datapoints[i][0] == null)\n                continue;\n\n            value = Double.parseDouble(datapoints[i][0]);\n            timestamp = Long.parseLong(datapoints[i][1]);\n            return new Datapoint(value, timestamp);\n        }\n        throw new MissingDatapointException();\n    }", "signature": "Datapoint getDatapoint()", "full_signature": "public Datapoint getDatapoint()", "class_method_signature": "GraphiteResult.getDatapoint()", "testcase": false, "constructor": false, "invocations": ["parseDouble", "parseLong"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}