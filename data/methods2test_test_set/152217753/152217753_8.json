{"test_class": {"identifier": "MyControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}], "file": "how-to-handle-mock-mvc/src/test/java/me/siyoon/howtohandlemockmvc/MyControllerTest.java"}, "test_case": {"identifier": "helloNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void helloNameTest() throws Exception {\n        String name = \"siyoon\";\n\n        mockMvc.perform(get(\"/hello/{name}\", name).accept(MediaType.TEXT_HTML))\n                .andExpect(status().isOk())\n                .andDo(print());\n    }", "signature": "void helloNameTest()", "full_signature": "@Test public void helloNameTest()", "class_method_signature": "MyControllerTest.helloNameTest()", "testcase": true, "constructor": false, "invocations": ["andDo", "andExpect", "perform", "accept", "get", "isOk", "status", "print"]}, "focal_class": {"identifier": "MyController", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hello", "parameters": "(Model model)", "modifiers": "@GetMapping(\"/hello\") public", "return": "String", "signature": "String hello(Model model)", "full_signature": "@GetMapping(\"/hello\") public String hello(Model model)", "class_method_signature": "MyController.hello(Model model)", "testcase": false, "constructor": false}, {"identifier": "helloName", "parameters": "(@PathVariable String name)", "modifiers": "@GetMapping(\"/hello/{name}\") public @ResponseBody", "return": "String", "signature": "String helloName(@PathVariable String name)", "full_signature": "@GetMapping(\"/hello/{name}\") public @ResponseBody String helloName(@PathVariable String name)", "class_method_signature": "MyController.helloName(@PathVariable String name)", "testcase": false, "constructor": false}, {"identifier": "helloName", "parameters": "(@PathVariable(name = \"name1\") String name1, @PathVariable(name = \"name2\") String name2)", "modifiers": "@GetMapping(\"/hello/{name1}/{name2}\") public @ResponseBody", "return": "String", "signature": "String helloName(@PathVariable(name = \"name1\") String name1, @PathVariable(name = \"name2\") String name2)", "full_signature": "@GetMapping(\"/hello/{name1}/{name2}\") public @ResponseBody String helloName(@PathVariable(name = \"name1\") String name1, @PathVariable(name = \"name2\") String name2)", "class_method_signature": "MyController.helloName(@PathVariable(name = \"name1\") String name1, @PathVariable(name = \"name2\") String name2)", "testcase": false, "constructor": false}], "file": "how-to-handle-mock-mvc/src/main/java/me/siyoon/howtohandlemockmvc/MyController.java"}, "focal_method": {"identifier": "helloName", "parameters": "(@PathVariable String name)", "modifiers": "@GetMapping(\"/hello/{name}\") public @ResponseBody", "return": "String", "body": "@GetMapping(\"/hello/{name}\")\n    public @ResponseBody\n    String helloName(@PathVariable String name) {\n        return \"hello \" + name;\n    }", "signature": "String helloName(@PathVariable String name)", "full_signature": "@GetMapping(\"/hello/{name}\") public @ResponseBody String helloName(@PathVariable String name)", "class_method_signature": "MyController.helloName(@PathVariable String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 152217753, "url": "https://github.com/siyoon210/spring-framework", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 7064, "license": "licensed"}}