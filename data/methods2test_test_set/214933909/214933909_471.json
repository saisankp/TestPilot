{"test_class": {"identifier": "ProjectDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    ProjectDao projectDao;", "modifier": "@Autowired", "type": "ProjectDao", "declarator": "projectDao", "var_name": "projectDao"}, {"original_string": "Project project;", "modifier": "", "type": "Project", "declarator": "project", "var_name": "project"}, {"original_string": "ProjectModel projectModel;", "modifier": "", "type": "ProjectModel", "declarator": "projectModel", "var_name": "projectModel"}, {"original_string": "Paging<ProjectModel> paging;", "modifier": "", "type": "Paging<ProjectModel>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/ProjectDaoTest.java"}, "test_case": {"identifier": "getProjectByID", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getProjectByID() throws Exception {\n        Project project = projectDao.getProjectByID(182L);\n        System.out.println(\"getProjectByID :-------> \" + project);\n        Assert.assertTrue(project != null);\n    }", "signature": "void getProjectByID()", "full_signature": "@Test public void getProjectByID()", "class_method_signature": "ProjectDaoTest.getProjectByID()", "testcase": true, "constructor": false, "invocations": ["getProjectByID", "println", "assertTrue"]}, "focal_class": {"identifier": "ProjectDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertProject", "parameters": "(Project project)", "modifiers": "public", "return": "Long", "signature": "Long insertProject(Project project)", "full_signature": "public Long insertProject(Project project)", "class_method_signature": "ProjectDao.insertProject(Project project)", "testcase": false, "constructor": false}, {"identifier": "deleteProject", "parameters": "(Project project)", "modifiers": "public", "return": "int", "signature": "int deleteProject(Project project)", "full_signature": "public int deleteProject(Project project)", "class_method_signature": "ProjectDao.deleteProject(Project project)", "testcase": false, "constructor": false}, {"identifier": "updateProject", "parameters": "(Project project)", "modifiers": "public", "return": "int", "signature": "int updateProject(Project project)", "full_signature": "public int updateProject(Project project)", "class_method_signature": "ProjectDao.updateProject(Project project)", "testcase": false, "constructor": false}, {"identifier": "updateTokenByAppId", "parameters": "(String app_id, String token)", "modifiers": "public", "return": "int", "signature": "int updateTokenByAppId(String app_id, String token)", "full_signature": "public int updateTokenByAppId(String app_id, String token)", "class_method_signature": "ProjectDao.updateTokenByAppId(String app_id, String token)", "testcase": false, "constructor": false}, {"identifier": "updateProjectGroupById", "parameters": "(int groupId, int id)", "modifiers": "public", "return": "int", "signature": "int updateProjectGroupById(int groupId, int id)", "full_signature": "public int updateProjectGroupById(int groupId, int id)", "class_method_signature": "ProjectDao.updateProjectGroupById(int groupId, int id)", "testcase": false, "constructor": false}, {"identifier": "updateProjectAppGroupIdById", "parameters": "(Long appGroupId, Set<Long> projectIds)", "modifiers": "public", "return": "int", "signature": "int updateProjectAppGroupIdById(Long appGroupId, Set<Long> projectIds)", "full_signature": "public int updateProjectAppGroupIdById(Long appGroupId, Set<Long> projectIds)", "class_method_signature": "ProjectDao.updateProjectAppGroupIdById(Long appGroupId, Set<Long> projectIds)", "testcase": false, "constructor": false}, {"identifier": "deleteProjectAppGroupIdById", "parameters": "(Long appGroupId)", "modifiers": "public", "return": "int", "signature": "int deleteProjectAppGroupIdById(Long appGroupId)", "full_signature": "public int deleteProjectAppGroupIdById(Long appGroupId)", "class_method_signature": "ProjectDao.deleteProjectAppGroupIdById(Long appGroupId)", "testcase": false, "constructor": false}, {"identifier": "deleteProjectAppGroupIdByIdS", "parameters": "(Set<Long> projectIds)", "modifiers": "public", "return": "int", "signature": "int deleteProjectAppGroupIdByIdS(Set<Long> projectIds)", "full_signature": "public int deleteProjectAppGroupIdByIdS(Set<Long> projectIds)", "class_method_signature": "ProjectDao.deleteProjectAppGroupIdByIdS(Set<Long> projectIds)", "testcase": false, "constructor": false}, {"identifier": "getProjectByID", "parameters": "(Long id)", "modifiers": "public", "return": "Project", "signature": "Project getProjectByID(Long id)", "full_signature": "public Project getProjectByID(Long id)", "class_method_signature": "ProjectDao.getProjectByID(Long id)", "testcase": false, "constructor": false}, {"identifier": "getProjectByAppId", "parameters": "(String appId)", "modifiers": "public", "return": "Project", "signature": "Project getProjectByAppId(String appId)", "full_signature": "public Project getProjectByAppId(String appId)", "class_method_signature": "ProjectDao.getProjectByAppId(String appId)", "testcase": false, "constructor": false}, {"identifier": "getProjectViewById", "parameters": "(Long id)", "modifiers": "public", "return": "ProjectView", "signature": "ProjectView getProjectViewById(Long id)", "full_signature": "public ProjectView getProjectViewById(Long id)", "class_method_signature": "ProjectDao.getProjectViewById(Long id)", "testcase": false, "constructor": false}, {"identifier": "getProjectByDbId", "parameters": "(Integer dbId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectByDbId(Integer dbId)", "full_signature": "public List<Project> getProjectByDbId(Integer dbId)", "class_method_signature": "ProjectDao.getProjectByDbId(Integer dbId)", "testcase": false, "constructor": false}, {"identifier": "getProjectBydbsetId", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectBydbsetId(Long dbsetId)", "full_signature": "public List<Project> getProjectBydbsetId(Long dbsetId)", "class_method_signature": "ProjectDao.getProjectBydbsetId(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "getProjectByGroupId", "parameters": "(Long groupId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectByGroupId(Long groupId)", "full_signature": "public List<Project> getProjectByGroupId(Long groupId)", "class_method_signature": "ProjectDao.getProjectByGroupId(Long groupId)", "testcase": false, "constructor": false}, {"identifier": "getProjectByAppGroupId", "parameters": "(Long appGroupId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectByAppGroupId(Long appGroupId)", "full_signature": "public List<Project> getProjectByAppGroupId(Long appGroupId)", "class_method_signature": "ProjectDao.getProjectByAppGroupId(Long appGroupId)", "testcase": false, "constructor": false}, {"identifier": "getCountByName", "parameters": "(String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByName(String name)", "full_signature": "public Long getCountByName(String name)", "class_method_signature": "ProjectDao.getCountByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCountByAppId", "parameters": "(String app_id)", "modifiers": "public", "return": "Long", "signature": "Long getCountByAppId(String app_id)", "full_signature": "public Long getCountByAppId(String app_id)", "class_method_signature": "ProjectDao.getCountByAppId(String app_id)", "testcase": false, "constructor": false}, {"identifier": "getCountByIdAndName", "parameters": "(Long id, String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByIdAndName(Long id, String name)", "full_signature": "public Long getCountByIdAndName(Long id, String name)", "class_method_signature": "ProjectDao.getCountByIdAndName(Long id, String name)", "testcase": false, "constructor": false}, {"identifier": "getCountByIdAndAppId", "parameters": "(Long id, String app_id)", "modifiers": "public", "return": "Long", "signature": "Long getCountByIdAndAppId(Long id, String app_id)", "full_signature": "public Long getCountByIdAndAppId(Long id, String app_id)", "class_method_signature": "ProjectDao.getCountByIdAndAppId(Long id, String app_id)", "testcase": false, "constructor": false}, {"identifier": "getProjectsListByLikeName", "parameters": "(String name)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectsListByLikeName(String name)", "full_signature": "public List<Project> getProjectsListByLikeName(String name)", "class_method_signature": "ProjectDao.getProjectsListByLikeName(String name)", "testcase": false, "constructor": false}, {"identifier": "getProjectsListBySetName", "parameters": "(String name)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectsListBySetName(String name)", "full_signature": "public List<Project> getProjectsListBySetName(String name)", "class_method_signature": "ProjectDao.getProjectsListBySetName(String name)", "testcase": false, "constructor": false}, {"identifier": "getProjectsNoGroup", "parameters": "(Long appGroupId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectsNoGroup(Long appGroupId)", "full_signature": "public List<Project> getProjectsNoGroup(Long appGroupId)", "class_method_signature": "ProjectDao.getProjectsNoGroup(Long appGroupId)", "testcase": false, "constructor": false}, {"identifier": "getProjectsByAppGroupId", "parameters": "(Long appGroupId)", "modifiers": "public", "return": "List<Project>", "signature": "List<Project> getProjectsByAppGroupId(Long appGroupId)", "full_signature": "public List<Project> getProjectsByAppGroupId(Long appGroupId)", "class_method_signature": "ProjectDao.getProjectsByAppGroupId(Long appGroupId)", "testcase": false, "constructor": false}, {"identifier": "getfindProjectSql", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getfindProjectSql()", "full_signature": "public String getfindProjectSql()", "class_method_signature": "ProjectDao.getfindProjectSql()", "testcase": false, "constructor": false}, {"identifier": "getProjectTotalCount", "parameters": "(Paging<ProjectModel> paging)", "modifiers": "public", "return": "Long", "signature": "Long getProjectTotalCount(Paging<ProjectModel> paging)", "full_signature": "public Long getProjectTotalCount(Paging<ProjectModel> paging)", "class_method_signature": "ProjectDao.getProjectTotalCount(Paging<ProjectModel> paging)", "testcase": false, "constructor": false}, {"identifier": "findProjectPageList", "parameters": "(Paging<ProjectModel> paging)", "modifiers": "public", "return": "List<ProjectView>", "signature": "List<ProjectView> findProjectPageList(Paging<ProjectModel> paging)", "full_signature": "public List<ProjectView> findProjectPageList(Paging<ProjectModel> paging)", "class_method_signature": "ProjectDao.findProjectPageList(Paging<ProjectModel> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<ProjectModel> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<ProjectModel> paging)", "full_signature": "private String appenWhere(Paging<ProjectModel> paging)", "class_method_signature": "ProjectDao.appenWhere(Paging<ProjectModel> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<ProjectModel> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<ProjectModel> paging)", "full_signature": "private String appenCondition(Paging<ProjectModel> paging)", "class_method_signature": "ProjectDao.appenCondition(Paging<ProjectModel> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/ProjectDao.java"}, "focal_method": {"identifier": "getProjectByID", "parameters": "(Long id)", "modifiers": "public", "return": "Project", "body": "public Project getProjectByID(Long id) throws SQLException {\n        Project project = new Project();\n        project.setId(id);\n        return getDasClient().queryByPk(project);\n    }", "signature": "Project getProjectByID(Long id)", "full_signature": "public Project getProjectByID(Long id)", "class_method_signature": "ProjectDao.getProjectByID(Long id)", "testcase": false, "constructor": false, "invocations": ["setId", "queryByPk", "getDasClient"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}