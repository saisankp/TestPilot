{"test_class": {"identifier": "AnnotationListTest", "superclass": "", "interfaces": "", "fields": [], "file": "subdomains/excel/applib/src/test/java/org/apache/isis/subdomains/excel/applib/dom/util/AnnotationListTest.java"}, "test_case": {"identifier": "testGetByAnnotation_OrderBy_OrderAscending", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetByAnnotation_OrderBy_OrderAscending() throws Exception {\n\n        // given\n        AnnotationTriplet t0 = new AnnotationTriplet(\"value\", 0, 0);\n        AnnotationTriplet t1 = new AnnotationTriplet(\"value\", 1, 1);\n        AnnotationTriplet t2 = new AnnotationTriplet(\"deco\", 2, 1);\n        AnnotationTriplet t3 = new AnnotationTriplet(\"deco\", 3, 2);\n\n        AnnotationList list = new AnnotationList(Arrays.asList(t2, t1, t3, t0));\n\n        // when\n        List<AnnotationTriplet> result = list.getByAnnotation_OrderBy_OrderAscending(\"value\");\n\n        // assert\n        Assertions.assertThat(result.size()).isEqualTo(2);\n        Assertions.assertThat(result.get(0)).isEqualTo(t0);\n        Assertions.assertThat(result.get(1)).isEqualTo(t1);\n\n    }", "signature": "void testGetByAnnotation_OrderBy_OrderAscending()", "full_signature": "@Test public void testGetByAnnotation_OrderBy_OrderAscending()", "class_method_signature": "AnnotationListTest.testGetByAnnotation_OrderBy_OrderAscending()", "testcase": true, "constructor": false, "invocations": ["asList", "getByAnnotation_OrderBy_OrderAscending", "isEqualTo", "assertThat", "size", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "AnnotationList", "superclass": "", "interfaces": "", "fields": [{"original_string": "List<AnnotationTriplet> list;", "modifier": "", "type": "List<AnnotationTriplet>", "declarator": "list", "var_name": "list"}], "methods": [{"identifier": "AnnotationList", "parameters": "(List<AnnotationTriplet> list)", "modifiers": "", "return": "", "signature": " AnnotationList(List<AnnotationTriplet> list)", "full_signature": "  AnnotationList(List<AnnotationTriplet> list)", "class_method_signature": "AnnotationList.AnnotationList(List<AnnotationTriplet> list)", "testcase": false, "constructor": true}, {"identifier": "getByAnnotation_OrderBy_OrderAscending", "parameters": "(String annotation)", "modifiers": "", "return": "List<AnnotationTriplet>", "signature": "List<AnnotationTriplet> getByAnnotation_OrderBy_OrderAscending(String annotation)", "full_signature": " List<AnnotationTriplet> getByAnnotation_OrderBy_OrderAscending(String annotation)", "class_method_signature": "AnnotationList.getByAnnotation_OrderBy_OrderAscending(String annotation)", "testcase": false, "constructor": false}], "file": "subdomains/excel/applib/src/main/java/org/apache/isis/subdomains/excel/applib/dom/util/AnnotationList.java"}, "focal_method": {"identifier": "getByAnnotation_OrderBy_OrderAscending", "parameters": "(String annotation)", "modifiers": "", "return": "List<AnnotationTriplet>", "body": "List<AnnotationTriplet> getByAnnotation_OrderBy_OrderAscending(String annotation){\n        List<AnnotationTriplet> result = new ArrayList<>();\n        for (AnnotationTriplet a : list){\n            if (a.getAnnotation().equals(annotation)){\n                result.add(a);\n            }\n        }\n        Collections.sort(result);\n        return result;\n    }", "signature": "List<AnnotationTriplet> getByAnnotation_OrderBy_OrderAscending(String annotation)", "full_signature": " List<AnnotationTriplet> getByAnnotation_OrderBy_OrderAscending(String annotation)", "class_method_signature": "AnnotationList.getByAnnotation_OrderBy_OrderAscending(String annotation)", "testcase": false, "constructor": false, "invocations": ["equals", "getAnnotation", "add", "sort"]}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}