{"test_class": {"identifier": "DefaultStrategiesHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-ws-core/src/test/java/org/springframework/ws/support/DefaultStrategiesHelperTest.java"}, "test_case": {"identifier": "testGetDefaultStrategies", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetDefaultStrategies() throws Exception {\n\n\t\tProperties strategies = new Properties();\n\t\tstrategies.put(Strategy.class.getName(),\n\t\t\t\tStrategyImpl.class.getName() + \",\" + ContextAwareStrategyImpl.class.getName());\n\t\tDefaultStrategiesHelper helper = new DefaultStrategiesHelper(strategies);\n\n\t\tStaticApplicationContext applicationContext = new StaticApplicationContext();\n\t\tapplicationContext.registerSingleton(\"strategy1\", StrategyImpl.class);\n\t\tapplicationContext.registerSingleton(\"strategy2\", ContextAwareStrategyImpl.class);\n\n\t\tList<Strategy> result = helper.getDefaultStrategies(Strategy.class, applicationContext);\n\t\tAssert.assertNotNull(\"No result\", result);\n\t\tAssert.assertEquals(\"Invalid amount of strategies\", 2, result.size());\n\t\tAssert.assertTrue(\"Result not a Strategy implementation\", result.get(0) != null);\n\t\tAssert.assertTrue(\"Result not a Strategy implementation\", result.get(1) != null);\n\t\tAssert.assertTrue(\"Result not a StrategyImpl implementation\", result.get(0) instanceof StrategyImpl);\n\t\tAssert.assertTrue(\"Result not a StrategyImpl implementation\", result.get(1) instanceof ContextAwareStrategyImpl);\n\t\tContextAwareStrategyImpl impl = (ContextAwareStrategyImpl) result.get(1);\n\t\tAssert.assertNotNull(\"No application context injected\", impl.getApplicationContext());\n\t}", "signature": "void testGetDefaultStrategies()", "full_signature": "@Test public void testGetDefaultStrategies()", "class_method_signature": "DefaultStrategiesHelperTest.testGetDefaultStrategies()", "testcase": true, "constructor": false, "invocations": ["put", "getName", "getName", "getName", "registerSingleton", "registerSingleton", "getDefaultStrategies", "assertNotNull", "assertEquals", "size", "assertTrue", "get", "assertTrue", "get", "assertTrue", "get", "assertTrue", "get", "get", "assertNotNull", "getApplicationContext"]}, "focal_class": {"identifier": "DefaultStrategiesHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Properties defaultStrategies;", "modifier": "private", "type": "Properties", "declarator": "defaultStrategies", "var_name": "defaultStrategies"}], "methods": [{"identifier": "DefaultStrategiesHelper", "parameters": "(Properties defaultStrategies)", "modifiers": "public", "return": "", "signature": " DefaultStrategiesHelper(Properties defaultStrategies)", "full_signature": "public  DefaultStrategiesHelper(Properties defaultStrategies)", "class_method_signature": "DefaultStrategiesHelper.DefaultStrategiesHelper(Properties defaultStrategies)", "testcase": false, "constructor": true}, {"identifier": "DefaultStrategiesHelper", "parameters": "(Resource resource)", "modifiers": "public", "return": "", "signature": " DefaultStrategiesHelper(Resource resource)", "full_signature": "public  DefaultStrategiesHelper(Resource resource)", "class_method_signature": "DefaultStrategiesHelper.DefaultStrategiesHelper(Resource resource)", "testcase": false, "constructor": true}, {"identifier": "DefaultStrategiesHelper", "parameters": "(Class<?> type)", "modifiers": "public", "return": "", "signature": " DefaultStrategiesHelper(Class<?> type)", "full_signature": "public  DefaultStrategiesHelper(Class<?> type)", "class_method_signature": "DefaultStrategiesHelper.DefaultStrategiesHelper(Class<?> type)", "testcase": false, "constructor": true}, {"identifier": "getDefaultStrategies", "parameters": "(Class<T> strategyInterface)", "modifiers": "public", "return": "List<T>", "signature": "List<T> getDefaultStrategies(Class<T> strategyInterface)", "full_signature": "public List<T> getDefaultStrategies(Class<T> strategyInterface)", "class_method_signature": "DefaultStrategiesHelper.getDefaultStrategies(Class<T> strategyInterface)", "testcase": false, "constructor": false}, {"identifier": "getDefaultStrategies", "parameters": "(Class<T> strategyInterface, ApplicationContext applicationContext)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<T>", "signature": "List<T> getDefaultStrategies(Class<T> strategyInterface, ApplicationContext applicationContext)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<T> getDefaultStrategies(Class<T> strategyInterface, ApplicationContext applicationContext)", "class_method_signature": "DefaultStrategiesHelper.getDefaultStrategies(Class<T> strategyInterface, ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "instantiateBean", "parameters": "(Class<T> clazz, ApplicationContext applicationContext)", "modifiers": "private", "return": "T", "signature": "T instantiateBean(Class<T> clazz, ApplicationContext applicationContext)", "full_signature": "private T instantiateBean(Class<T> clazz, ApplicationContext applicationContext)", "class_method_signature": "DefaultStrategiesHelper.instantiateBean(Class<T> clazz, ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "getDefaultStrategy", "parameters": "(Class<T> strategyInterface)", "modifiers": "public", "return": "T", "signature": "T getDefaultStrategy(Class<T> strategyInterface)", "full_signature": "public T getDefaultStrategy(Class<T> strategyInterface)", "class_method_signature": "DefaultStrategiesHelper.getDefaultStrategy(Class<T> strategyInterface)", "testcase": false, "constructor": false}, {"identifier": "getDefaultStrategy", "parameters": "(Class<T> strategyInterface, ApplicationContext applicationContext)", "modifiers": "public", "return": "T", "signature": "T getDefaultStrategy(Class<T> strategyInterface, ApplicationContext applicationContext)", "full_signature": "public T getDefaultStrategy(Class<T> strategyInterface, ApplicationContext applicationContext)", "class_method_signature": "DefaultStrategiesHelper.getDefaultStrategy(Class<T> strategyInterface, ApplicationContext applicationContext)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/support/DefaultStrategiesHelper.java"}, "focal_method": {"identifier": "getDefaultStrategies", "parameters": "(Class<T> strategyInterface)", "modifiers": "public", "return": "List<T>", "body": "public <T> List<T> getDefaultStrategies(Class<T> strategyInterface) throws BeanInitializationException {\n\t\treturn getDefaultStrategies(strategyInterface, null);\n\t}", "signature": "List<T> getDefaultStrategies(Class<T> strategyInterface)", "full_signature": "public List<T> getDefaultStrategies(Class<T> strategyInterface)", "class_method_signature": "DefaultStrategiesHelper.getDefaultStrategies(Class<T> strategyInterface)", "testcase": false, "constructor": false, "invocations": ["getDefaultStrategies"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}