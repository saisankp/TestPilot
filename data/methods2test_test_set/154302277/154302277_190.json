{"test_class": {"identifier": "GetPowerQualityProfileCommandExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GetPowerQualityProfileNoSelectiveAccessHandler getPowerQualityProfileNoSelectiveAccessHandler;", "modifier": "@Mock\n    private", "type": "GetPowerQualityProfileNoSelectiveAccessHandler", "declarator": "getPowerQualityProfileNoSelectiveAccessHandler", "var_name": "getPowerQualityProfileNoSelectiveAccessHandler"}, {"original_string": "@Mock\n    private GetPowerQualityProfileSelectiveAccessHandler getPowerQualityProfileSelectiveAccessHandler;", "modifier": "@Mock\n    private", "type": "GetPowerQualityProfileSelectiveAccessHandler", "declarator": "getPowerQualityProfileSelectiveAccessHandler", "var_name": "getPowerQualityProfileSelectiveAccessHandler"}, {"original_string": "@Mock\n    private DlmsConnectionManager conn;", "modifier": "@Mock\n    private", "type": "DlmsConnectionManager", "declarator": "conn", "var_name": "conn"}, {"original_string": "@Mock\n    GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto;", "modifier": "@Mock", "type": "GetPowerQualityProfileRequestDataDto", "declarator": "getPowerQualityProfileRequestDataDto", "var_name": "getPowerQualityProfileRequestDataDto"}, {"original_string": "@InjectMocks\n    private GetPowerQualityProfileCommandExecutor executor;", "modifier": "@InjectMocks\n    private", "type": "GetPowerQualityProfileCommandExecutor", "declarator": "executor", "var_name": "executor"}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java"}, "test_case": {"identifier": "executeWithSelectiveAccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void executeWithSelectiveAccess() throws ProtocolAdapterException {\n\n        DlmsDevice dlmsDevice = new DlmsDevice();\n        dlmsDevice.setSelectiveAccessSupported(true);\n\n        executor.execute(conn, dlmsDevice, getPowerQualityProfileRequestDataDto);\n\n        verify(getPowerQualityProfileSelectiveAccessHandler)\n                .handle(any(DlmsConnectionManager.class), any(DlmsDevice.class),\n                        any(GetPowerQualityProfileRequestDataDto.class));\n\n    }", "signature": "void executeWithSelectiveAccess()", "full_signature": "@Test public void executeWithSelectiveAccess()", "class_method_signature": "GetPowerQualityProfileCommandExecutorTest.executeWithSelectiveAccess()", "testcase": true, "constructor": false, "invocations": ["setSelectiveAccessSupported", "execute", "handle", "verify", "any", "any", "any"]}, "focal_class": {"identifier": "GetPowerQualityProfileCommandExecutor", "superclass": "extends AbstractCommandExecutor<GetPowerQualityProfileRequestDataDto, GetPowerQualityProfileResponseDto>", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private GetPowerQualityProfileNoSelectiveAccessHandler getPowerQualityProfileNoSelectiveAccessHandler;", "modifier": "@Autowired\n    private", "type": "GetPowerQualityProfileNoSelectiveAccessHandler", "declarator": "getPowerQualityProfileNoSelectiveAccessHandler", "var_name": "getPowerQualityProfileNoSelectiveAccessHandler"}, {"original_string": "@Autowired\n    private GetPowerQualityProfileSelectiveAccessHandler getPowerQualityProfileSelectiveAccessHandler;", "modifier": "@Autowired\n    private", "type": "GetPowerQualityProfileSelectiveAccessHandler", "declarator": "getPowerQualityProfileSelectiveAccessHandler", "var_name": "getPowerQualityProfileSelectiveAccessHandler"}], "methods": [{"identifier": "GetPowerQualityProfileCommandExecutor", "parameters": "()", "modifiers": "public", "return": "", "signature": " GetPowerQualityProfileCommandExecutor()", "full_signature": "public  GetPowerQualityProfileCommandExecutor()", "class_method_signature": "GetPowerQualityProfileCommandExecutor.GetPowerQualityProfileCommandExecutor()", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "modifiers": "@Override public", "return": "GetPowerQualityProfileResponseDto", "signature": "GetPowerQualityProfileResponseDto execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "full_signature": "@Override public GetPowerQualityProfileResponseDto execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "class_method_signature": "GetPowerQualityProfileCommandExecutor.execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutor.java"}, "focal_method": {"identifier": "execute", "parameters": "(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "modifiers": "@Override public", "return": "GetPowerQualityProfileResponseDto", "body": "@Override\n    public GetPowerQualityProfileResponseDto execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto) throws ProtocolAdapterException {\n\n        if (device.isSelectiveAccessSupported()) {\n            return this.getPowerQualityProfileSelectiveAccessHandler\n                    .handle(conn, device, getPowerQualityProfileRequestDataDto);\n        } else {\n            return this.getPowerQualityProfileNoSelectiveAccessHandler\n                    .handle(conn, device, getPowerQualityProfileRequestDataDto);\n        }\n    }", "signature": "GetPowerQualityProfileResponseDto execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "full_signature": "@Override public GetPowerQualityProfileResponseDto execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "class_method_signature": "GetPowerQualityProfileCommandExecutor.execute(DlmsConnectionManager conn, DlmsDevice device,\n            GetPowerQualityProfileRequestDataDto getPowerQualityProfileRequestDataDto)", "testcase": false, "constructor": false, "invocations": ["isSelectiveAccessSupported", "handle", "handle"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}