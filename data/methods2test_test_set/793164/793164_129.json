{"test_class": {"identifier": "RSP_K21Test", "superclass": "", "interfaces": "", "fields": [], "file": "commons/ihe/hl7v2/src/test/java/org/openehealth/ipf/commons/ihe/hl7v2/definitions/pdq/v25/message/RSP_K21Test.java"}, "test_case": {"identifier": "testGetQUERY_RESPONSE", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetQUERY_RESPONSE(){\n\t\t//Fix of issue #69 (Problem with RSP_K21.getRSP_K21_QUERY_RESPONSE())\n\t\tRSP_K21 msg = new RSP_K21();\n\t\tRSP_K21_QUERY_RESPONSE response = msg.getQUERY_RESPONSE();\n\t\tassertNotNull (response);\n\t\tassertTrue(response instanceof RSP_K21_QUERY_RESPONSE);\n\t}", "signature": "void testGetQUERY_RESPONSE()", "full_signature": "@Test public void testGetQUERY_RESPONSE()", "class_method_signature": "RSP_K21Test.testGetQUERY_RESPONSE()", "testcase": true, "constructor": false, "invocations": ["getQUERY_RESPONSE", "assertNotNull", "assertTrue"]}, "focal_class": {"identifier": "RSP_K21", "superclass": "extends AbstractMessage", "interfaces": "", "fields": [], "methods": [{"identifier": "RSP_K21", "parameters": "(ModelClassFactory factory)", "modifiers": "public", "return": "", "signature": " RSP_K21(ModelClassFactory factory)", "full_signature": "public  RSP_K21(ModelClassFactory factory)", "class_method_signature": "RSP_K21.RSP_K21(ModelClassFactory factory)", "testcase": false, "constructor": true}, {"identifier": "RSP_K21", "parameters": "()", "modifiers": "public", "return": "", "signature": " RSP_K21()", "full_signature": "public  RSP_K21()", "class_method_signature": "RSP_K21.RSP_K21()", "testcase": false, "constructor": true}, {"identifier": "structures", "parameters": "(\n            Map<Class<? extends Structure>, Cardinality> s)", "modifiers": "@Override protected", "return": "Map<Class<? extends Structure>, Cardinality>", "signature": "Map<Class<? extends Structure>, Cardinality> structures(\n            Map<Class<? extends Structure>, Cardinality> s)", "full_signature": "@Override protected Map<Class<? extends Structure>, Cardinality> structures(\n            Map<Class<? extends Structure>, Cardinality> s)", "class_method_signature": "RSP_K21.structures(\n            Map<Class<? extends Structure>, Cardinality> s)", "testcase": false, "constructor": false}, {"identifier": "getMSH", "parameters": "()", "modifiers": "public", "return": "MSH", "signature": "MSH getMSH()", "full_signature": "public MSH getMSH()", "class_method_signature": "RSP_K21.getMSH()", "testcase": false, "constructor": false}, {"identifier": "getSFT", "parameters": "()", "modifiers": "public", "return": "SFT", "signature": "SFT getSFT()", "full_signature": "public SFT getSFT()", "class_method_signature": "RSP_K21.getSFT()", "testcase": false, "constructor": false}, {"identifier": "getSFT", "parameters": "(int rep)", "modifiers": "public", "return": "SFT", "signature": "SFT getSFT(int rep)", "full_signature": "public SFT getSFT(int rep)", "class_method_signature": "RSP_K21.getSFT(int rep)", "testcase": false, "constructor": false}, {"identifier": "getSFTReps", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSFTReps()", "full_signature": "public int getSFTReps()", "class_method_signature": "RSP_K21.getSFTReps()", "testcase": false, "constructor": false}, {"identifier": "getMSA", "parameters": "()", "modifiers": "public", "return": "MSA", "signature": "MSA getMSA()", "full_signature": "public MSA getMSA()", "class_method_signature": "RSP_K21.getMSA()", "testcase": false, "constructor": false}, {"identifier": "getERR", "parameters": "()", "modifiers": "public", "return": "ERR", "signature": "ERR getERR()", "full_signature": "public ERR getERR()", "class_method_signature": "RSP_K21.getERR()", "testcase": false, "constructor": false}, {"identifier": "getQAK", "parameters": "()", "modifiers": "public", "return": "QAK", "signature": "QAK getQAK()", "full_signature": "public QAK getQAK()", "class_method_signature": "RSP_K21.getQAK()", "testcase": false, "constructor": false}, {"identifier": "getQPD", "parameters": "()", "modifiers": "public", "return": "QPD", "signature": "QPD getQPD()", "full_signature": "public QPD getQPD()", "class_method_signature": "RSP_K21.getQPD()", "testcase": false, "constructor": false}, {"identifier": "getQUERY_RESPONSE", "parameters": "()", "modifiers": "public", "return": "RSP_K21_QUERY_RESPONSE", "signature": "RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE()", "full_signature": "public RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE()", "class_method_signature": "RSP_K21.getQUERY_RESPONSE()", "testcase": false, "constructor": false}, {"identifier": "getQUERY_RESPONSE", "parameters": "(int rep)", "modifiers": "public", "return": "RSP_K21_QUERY_RESPONSE", "signature": "RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE(int rep)", "full_signature": "public RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE(int rep)", "class_method_signature": "RSP_K21.getQUERY_RESPONSE(int rep)", "testcase": false, "constructor": false}, {"identifier": "getQUERY_RESPONSEReps", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getQUERY_RESPONSEReps()", "full_signature": "public int getQUERY_RESPONSEReps()", "class_method_signature": "RSP_K21.getQUERY_RESPONSEReps()", "testcase": false, "constructor": false}, {"identifier": "getDSC", "parameters": "()", "modifiers": "public", "return": "DSC", "signature": "DSC getDSC()", "full_signature": "public DSC getDSC()", "class_method_signature": "RSP_K21.getDSC()", "testcase": false, "constructor": false}], "file": "commons/ihe/hl7v2/src/main/java/org/openehealth/ipf/commons/ihe/hl7v2/definitions/pdq/v25/message/RSP_K21.java"}, "focal_method": {"identifier": "getQUERY_RESPONSE", "parameters": "()", "modifiers": "public", "return": "RSP_K21_QUERY_RESPONSE", "body": "public RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE() {\n        return getTyped(\"QUERY_RESPONSE\", 0, RSP_K21_QUERY_RESPONSE.class);\n    }", "signature": "RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE()", "full_signature": "public RSP_K21_QUERY_RESPONSE getQUERY_RESPONSE()", "class_method_signature": "RSP_K21.getQUERY_RESPONSE()", "testcase": false, "constructor": false, "invocations": ["getTyped"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}