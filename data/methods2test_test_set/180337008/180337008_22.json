{"test_class": {"identifier": "ConvocationServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SpyBean\n    ConvocationService convocationService;", "modifier": "@SpyBean", "type": "ConvocationService", "declarator": "convocationService", "var_name": "convocationService"}, {"original_string": "@MockBean\n    ConvocationRepository convocationRepository;", "modifier": "@MockBean", "type": "ConvocationRepository", "declarator": "convocationRepository", "var_name": "convocationRepository"}, {"original_string": "@MockBean\n    LocalAuthorityService localAuthorityService;", "modifier": "@MockBean", "type": "LocalAuthorityService", "declarator": "localAuthorityService", "var_name": "localAuthorityService"}, {"original_string": "@MockBean\n    StorageService storageService;", "modifier": "@MockBean", "type": "StorageService", "declarator": "storageService", "var_name": "storageService"}, {"original_string": "@MockBean\n    LocalesService localesService;", "modifier": "@MockBean", "type": "LocalesService", "declarator": "localesService", "var_name": "localesService"}, {"original_string": "@MockBean\n    ExternalRestService externalRestService;", "modifier": "@MockBean", "type": "ExternalRestService", "declarator": "externalRestService", "var_name": "externalRestService"}, {"original_string": "@MockBean\n    TagService tagService;", "modifier": "@MockBean", "type": "TagService", "declarator": "tagService", "var_name": "tagService"}, {"original_string": "@MockBean\n    RecipientResponseRepository recipientResponseRepository;", "modifier": "@MockBean", "type": "RecipientResponseRepository", "declarator": "recipientResponseRepository", "var_name": "recipientResponseRepository"}, {"original_string": "@MockBean\n    QuestionResponseRepository questionResponseRepository;", "modifier": "@MockBean", "type": "QuestionResponseRepository", "declarator": "questionResponseRepository", "var_name": "questionResponseRepository"}, {"original_string": "@MockBean\n    AttachmentRepository attachmentRepository;", "modifier": "@MockBean", "type": "AttachmentRepository", "declarator": "attachmentRepository", "var_name": "attachmentRepository"}, {"original_string": "@MockBean\n    ApplicationEventPublisher applicationEventPublisher;", "modifier": "@MockBean", "type": "ApplicationEventPublisher", "declarator": "applicationEventPublisher", "var_name": "applicationEventPublisher"}, {"original_string": "@MockBean\n    private EntityManager entityManager;", "modifier": "@MockBean\n    private", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}, {"original_string": "@MockBean\n    EntityManagerFactory entityManagerFactory;", "modifier": "@MockBean", "type": "EntityManagerFactory", "declarator": "entityManagerFactory", "var_name": "entityManagerFactory"}, {"original_string": "@MockBean\n    PdfGeneratorUtil pdfGeneratorUtil;", "modifier": "@MockBean", "type": "PdfGeneratorUtil", "declarator": "pdfGeneratorUtil", "var_name": "pdfGeneratorUtil"}], "file": "convocation-service/src/test/java/fr/sictiam/stela/convocationservice/service/ConvocationServiceTest.java"}, "test_case": {"identifier": "questionOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void questionOrder() {\n        Convocation convocation = convocationService.getConvocation(\"anything\", \"anything\");\n        long i = 1;\n\n        for (Iterator<Question> it = convocation.getQuestions().iterator(); it.hasNext(); i++) {\n            Question q = it.next();\n            assertEquals(q.getRank().longValue(), i);\n        }\n    }", "signature": "void questionOrder()", "full_signature": "@Test public void questionOrder()", "class_method_signature": "ConvocationServiceTest.questionOrder()", "testcase": true, "constructor": false, "invocations": ["getConvocation", "iterator", "getQuestions", "hasNext", "next", "assertEquals", "longValue", "getRank"]}, "focal_class": {"identifier": "ConvocationService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ConvocationService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ConvocationService.class)", "var_name": "LOGGER"}, {"original_string": "@PersistenceContext\n    private EntityManager entityManager;", "modifier": "@PersistenceContext\n    private", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}, {"original_string": "private final ConvocationRepository convocationRepository;", "modifier": "private final", "type": "ConvocationRepository", "declarator": "convocationRepository", "var_name": "convocationRepository"}, {"original_string": "private final LocalAuthorityService localAuthorityService;", "modifier": "private final", "type": "LocalAuthorityService", "declarator": "localAuthorityService", "var_name": "localAuthorityService"}, {"original_string": "private final StorageService storageService;", "modifier": "private final", "type": "StorageService", "declarator": "storageService", "var_name": "storageService"}, {"original_string": "private final ExternalRestService externalRestService;", "modifier": "private final", "type": "ExternalRestService", "declarator": "externalRestService", "var_name": "externalRestService"}, {"original_string": "private final LocalesService localesService;", "modifier": "private final", "type": "LocalesService", "declarator": "localesService", "var_name": "localesService"}, {"original_string": "private final TagService tagService;", "modifier": "private final", "type": "TagService", "declarator": "tagService", "var_name": "tagService"}, {"original_string": "private final RecipientResponseRepository recipientResponseRepository;", "modifier": "private final", "type": "RecipientResponseRepository", "declarator": "recipientResponseRepository", "var_name": "recipientResponseRepository"}, {"original_string": "private final QuestionResponseRepository questionResponseRepository;", "modifier": "private final", "type": "QuestionResponseRepository", "declarator": "questionResponseRepository", "var_name": "questionResponseRepository"}, {"original_string": "private final AttachmentRepository attachmentRepository;", "modifier": "private final", "type": "AttachmentRepository", "declarator": "attachmentRepository", "var_name": "attachmentRepository"}, {"original_string": "private final ApplicationEventPublisher applicationEventPublisher;", "modifier": "private final", "type": "ApplicationEventPublisher", "declarator": "applicationEventPublisher", "var_name": "applicationEventPublisher"}, {"original_string": "private final PdfGeneratorUtil pdfGeneratorUtil;", "modifier": "private final", "type": "PdfGeneratorUtil", "declarator": "pdfGeneratorUtil", "var_name": "pdfGeneratorUtil"}], "methods": [{"identifier": "ConvocationService", "parameters": "(\n            ConvocationRepository convocationRepository,\n            LocalAuthorityService localAuthorityService,\n            StorageService storageService,\n            ExternalRestService externalRestService,\n            LocalesService localesService,\n            TagService tagService,\n            RecipientResponseRepository recipientResponseRepository,\n            QuestionResponseRepository questionResponseRepository,\n            AttachmentRepository attachmentRepository,\n            ApplicationEventPublisher applicationEventPublisher,\n            PdfGeneratorUtil pdfGeneratorUtil)", "modifiers": "@Autowired public", "return": "", "signature": " ConvocationService(\n            ConvocationRepository convocationRepository,\n            LocalAuthorityService localAuthorityService,\n            StorageService storageService,\n            ExternalRestService externalRestService,\n            LocalesService localesService,\n            TagService tagService,\n            RecipientResponseRepository recipientResponseRepository,\n            QuestionResponseRepository questionResponseRepository,\n            AttachmentRepository attachmentRepository,\n            ApplicationEventPublisher applicationEventPublisher,\n            PdfGeneratorUtil pdfGeneratorUtil)", "full_signature": "@Autowired public  ConvocationService(\n            ConvocationRepository convocationRepository,\n            LocalAuthorityService localAuthorityService,\n            StorageService storageService,\n            ExternalRestService externalRestService,\n            LocalesService localesService,\n            TagService tagService,\n            RecipientResponseRepository recipientResponseRepository,\n            QuestionResponseRepository questionResponseRepository,\n            AttachmentRepository attachmentRepository,\n            ApplicationEventPublisher applicationEventPublisher,\n            PdfGeneratorUtil pdfGeneratorUtil)", "class_method_signature": "ConvocationService.ConvocationService(\n            ConvocationRepository convocationRepository,\n            LocalAuthorityService localAuthorityService,\n            StorageService storageService,\n            ExternalRestService externalRestService,\n            LocalesService localesService,\n            TagService tagService,\n            RecipientResponseRepository recipientResponseRepository,\n            QuestionResponseRepository questionResponseRepository,\n            AttachmentRepository attachmentRepository,\n            ApplicationEventPublisher applicationEventPublisher,\n            PdfGeneratorUtil pdfGeneratorUtil)", "testcase": false, "constructor": true}, {"identifier": "getConvocation", "parameters": "(String uuid)", "modifiers": "public", "return": "Convocation", "signature": "Convocation getConvocation(String uuid)", "full_signature": "public Convocation getConvocation(String uuid)", "class_method_signature": "ConvocationService.getConvocation(String uuid)", "testcase": false, "constructor": false}, {"identifier": "openBy", "parameters": "(Convocation convocation, Recipient recipient)", "modifiers": "public", "return": "Convocation", "signature": "Convocation openBy(Convocation convocation, Recipient recipient)", "full_signature": "public Convocation openBy(Convocation convocation, Recipient recipient)", "class_method_signature": "ConvocationService.openBy(Convocation convocation, Recipient recipient)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Convocation convocation, String localAuthorityUuid, String profileUuid)", "modifiers": "public", "return": "Convocation", "signature": "Convocation create(Convocation convocation, String localAuthorityUuid, String profileUuid)", "full_signature": "public Convocation create(Convocation convocation, String localAuthorityUuid, String profileUuid)", "class_method_signature": "ConvocationService.create(Convocation convocation, String localAuthorityUuid, String profileUuid)", "testcase": false, "constructor": false}, {"identifier": "createRecipientResponse", "parameters": "(Convocation convocation)", "modifiers": "private", "return": "void", "signature": "void createRecipientResponse(Convocation convocation)", "full_signature": "private void createRecipientResponse(Convocation convocation)", "class_method_signature": "ConvocationService.createRecipientResponse(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(String uuid, String localAuthorityUuid, Convocation params)", "modifiers": "public", "return": "Convocation", "signature": "Convocation update(String uuid, String localAuthorityUuid, Convocation params)", "full_signature": "public Convocation update(String uuid, String localAuthorityUuid, Convocation params)", "class_method_signature": "ConvocationService.update(String uuid, String localAuthorityUuid, Convocation params)", "testcase": false, "constructor": false}, {"identifier": "getConvocation", "parameters": "(String uuid, String localAuthorityUuid)", "modifiers": "public", "return": "Convocation", "signature": "Convocation getConvocation(String uuid, String localAuthorityUuid)", "full_signature": "public Convocation getConvocation(String uuid, String localAuthorityUuid)", "class_method_signature": "ConvocationService.getConvocation(String uuid, String localAuthorityUuid)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Convocation convocation)", "modifiers": "public", "return": "void", "signature": "void delete(Convocation convocation)", "full_signature": "public void delete(Convocation convocation)", "class_method_signature": "ConvocationService.delete(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "cancelConvocation", "parameters": "(Convocation convocation)", "modifiers": "public", "return": "void", "signature": "void cancelConvocation(Convocation convocation)", "full_signature": "public void cancelConvocation(Convocation convocation)", "class_method_signature": "ConvocationService.cancelConvocation(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "getByUuid", "parameters": "(String uuid, String localAuthorityUuid)", "modifiers": "public", "return": "Convocation", "signature": "Convocation getByUuid(String uuid, String localAuthorityUuid)", "full_signature": "public Convocation getByUuid(String uuid, String localAuthorityUuid)", "class_method_signature": "ConvocationService.getByUuid(String uuid, String localAuthorityUuid)", "testcase": false, "constructor": false}, {"identifier": "uploadFiles", "parameters": "(Convocation convocation, MultipartFile file,\n            MultipartFile procuration, MultipartFile[] annexes, String[] tagsIds)", "modifiers": "public", "return": "void", "signature": "void uploadFiles(Convocation convocation, MultipartFile file,\n            MultipartFile procuration, MultipartFile[] annexes, String[] tagsIds)", "full_signature": "public void uploadFiles(Convocation convocation, MultipartFile file,\n            MultipartFile procuration, MultipartFile[] annexes, String[] tagsIds)", "class_method_signature": "ConvocationService.uploadFiles(Convocation convocation, MultipartFile file,\n            MultipartFile procuration, MultipartFile[] annexes, String[] tagsIds)", "testcase": false, "constructor": false}, {"identifier": "uploadAdditionalFiles", "parameters": "(Convocation convocation, MultipartFile[] annexes, String[] tagsIds)", "modifiers": "public", "return": "void", "signature": "void uploadAdditionalFiles(Convocation convocation, MultipartFile[] annexes, String[] tagsIds)", "full_signature": "public void uploadAdditionalFiles(Convocation convocation, MultipartFile[] annexes, String[] tagsIds)", "class_method_signature": "ConvocationService.uploadAdditionalFiles(Convocation convocation, MultipartFile[] annexes, String[] tagsIds)", "testcase": false, "constructor": false}, {"identifier": "uploadMinutes", "parameters": "(Convocation convocation, MultipartFile minutes)", "modifiers": "public", "return": "void", "signature": "void uploadMinutes(Convocation convocation, MultipartFile minutes)", "full_signature": "public void uploadMinutes(Convocation convocation, MultipartFile minutes)", "class_method_signature": "ConvocationService.uploadMinutes(Convocation convocation, MultipartFile minutes)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(Convocation convocation, String fileUuid)", "modifiers": "public", "return": "Attachment", "signature": "Attachment getFile(Convocation convocation, String fileUuid)", "full_signature": "public Attachment getFile(Convocation convocation, String fileUuid)", "class_method_signature": "ConvocationService.getFile(Convocation convocation, String fileUuid)", "testcase": false, "constructor": false}, {"identifier": "getStampedFile", "parameters": "(byte[] content, LocalDateTime sentDate, LocalAuthority localAuthority, Integer x,\n            Integer y)", "modifiers": "public", "return": "byte[]", "signature": "byte[] getStampedFile(byte[] content, LocalDateTime sentDate, LocalAuthority localAuthority, Integer x,\n            Integer y)", "full_signature": "public byte[] getStampedFile(byte[] content, LocalDateTime sentDate, LocalAuthority localAuthority, Integer x,\n            Integer y)", "class_method_signature": "ConvocationService.getStampedFile(byte[] content, LocalDateTime sentDate, LocalAuthority localAuthority, Integer x,\n            Integer y)", "testcase": false, "constructor": false}, {"identifier": "answerConvocation", "parameters": "(Convocation convocation, Recipient recipient, ResponseType responseType,\n            String substituteUuid)", "modifiers": "public", "return": "void", "signature": "void answerConvocation(Convocation convocation, Recipient recipient, ResponseType responseType,\n            String substituteUuid)", "full_signature": "public void answerConvocation(Convocation convocation, Recipient recipient, ResponseType responseType,\n            String substituteUuid)", "class_method_signature": "ConvocationService.answerConvocation(Convocation convocation, Recipient recipient, ResponseType responseType,\n            String substituteUuid)", "testcase": false, "constructor": false}, {"identifier": "answerQuestion", "parameters": "(Convocation convocation, Recipient currentRecipient, String questionUuid,\n            Boolean response)", "modifiers": "public", "return": "void", "signature": "void answerQuestion(Convocation convocation, Recipient currentRecipient, String questionUuid,\n            Boolean response)", "full_signature": "public void answerQuestion(Convocation convocation, Recipient currentRecipient, String questionUuid,\n            Boolean response)", "class_method_signature": "ConvocationService.answerQuestion(Convocation convocation, Recipient currentRecipient, String questionUuid,\n            Boolean response)", "testcase": false, "constructor": false}, {"identifier": "convocationSent", "parameters": "(Convocation convocation)", "modifiers": "public", "return": "void", "signature": "void convocationSent(Convocation convocation)", "full_signature": "public void convocationSent(Convocation convocation)", "class_method_signature": "ConvocationService.convocationSent(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "retrieveProfile", "parameters": "(String profileUuid)", "modifiers": "public", "return": "Profile", "signature": "Profile retrieveProfile(String profileUuid)", "full_signature": "public Profile retrieveProfile(String profileUuid)", "class_method_signature": "ConvocationService.retrieveProfile(String profileUuid)", "testcase": false, "constructor": false}, {"identifier": "getConvocationsToRemind", "parameters": "(int reminderDelay)", "modifiers": "public", "return": "List<Convocation>", "signature": "List<Convocation> getConvocationsToRemind(int reminderDelay)", "full_signature": "public List<Convocation> getConvocationsToRemind(int reminderDelay)", "class_method_signature": "ConvocationService.getConvocationsToRemind(int reminderDelay)", "testcase": false, "constructor": false}, {"identifier": "getNoResponseInformation", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getNoResponseInformation()", "full_signature": "public List<String> getNoResponseInformation()", "class_method_signature": "ConvocationService.getNoResponseInformation()", "testcase": false, "constructor": false}, {"identifier": "addTagToFile", "parameters": "(Convocation convocation, String fileUuid, String tagUuid)", "modifiers": "public", "return": "void", "signature": "void addTagToFile(Convocation convocation, String fileUuid, String tagUuid)", "full_signature": "public void addTagToFile(Convocation convocation, String fileUuid, String tagUuid)", "class_method_signature": "ConvocationService.addTagToFile(Convocation convocation, String fileUuid, String tagUuid)", "testcase": false, "constructor": false}, {"identifier": "removeTagFromFile", "parameters": "(Convocation convocation, String fileUuid, String tagUuid)", "modifiers": "public", "return": "void", "signature": "void removeTagFromFile(Convocation convocation, String fileUuid, String tagUuid)", "full_signature": "public void removeTagFromFile(Convocation convocation, String fileUuid, String tagUuid)", "class_method_signature": "ConvocationService.removeTagFromFile(Convocation convocation, String fileUuid, String tagUuid)", "testcase": false, "constructor": false}, {"identifier": "createArchive", "parameters": "(Convocation convocation)", "modifiers": "public", "return": "ByteArrayOutputStream", "signature": "ByteArrayOutputStream createArchive(Convocation convocation)", "full_signature": "public ByteArrayOutputStream createArchive(Convocation convocation)", "class_method_signature": "ConvocationService.createArchive(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "countSentWithQuery", "parameters": "(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String\n            assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject,\n            String filter, String currentLocalAuthUuid, Set<String> groups)", "modifiers": "public", "return": "Long", "signature": "Long countSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String\n            assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject,\n            String filter, String currentLocalAuthUuid, Set<String> groups)", "full_signature": "public Long countSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String\n            assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject,\n            String filter, String currentLocalAuthUuid, Set<String> groups)", "class_method_signature": "ConvocationService.countSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String\n            assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject,\n            String filter, String currentLocalAuthUuid, Set<String> groups)", "testcase": false, "constructor": false}, {"identifier": "countReceivedWithQuery", "parameters": "(String multifield, String assemblyType, LocalDate meetingDateFrom,\n            LocalDate meetingDateTo, String subject, String filter, String currentLocalAuthUuid, Recipient recipient)", "modifiers": "public", "return": "Long", "signature": "Long countReceivedWithQuery(String multifield, String assemblyType, LocalDate meetingDateFrom,\n            LocalDate meetingDateTo, String subject, String filter, String currentLocalAuthUuid, Recipient recipient)", "full_signature": "public Long countReceivedWithQuery(String multifield, String assemblyType, LocalDate meetingDateFrom,\n            LocalDate meetingDateTo, String subject, String filter, String currentLocalAuthUuid, Recipient recipient)", "class_method_signature": "ConvocationService.countReceivedWithQuery(String multifield, String assemblyType, LocalDate meetingDateFrom,\n            LocalDate meetingDateTo, String subject, String filter, String currentLocalAuthUuid, Recipient recipient)", "testcase": false, "constructor": false}, {"identifier": "findSentWithQuery", "parameters": "(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo,\n            String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            Integer limit, Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Set<String> groups)", "modifiers": "public", "return": "List<Convocation>", "signature": "List<Convocation> findSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo,\n            String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            Integer limit, Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Set<String> groups)", "full_signature": "public List<Convocation> findSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo,\n            String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            Integer limit, Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Set<String> groups)", "class_method_signature": "ConvocationService.findSentWithQuery(String multifield, LocalDate sentDateFrom, LocalDate sentDateTo,\n            String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            Integer limit, Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Set<String> groups)", "testcase": false, "constructor": false}, {"identifier": "findReceivedWithQuery", "parameters": "(String multifield, String assemblyType,\n            LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter, Integer limit,\n            Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Recipient recipient)", "modifiers": "public", "return": "List<Convocation>", "signature": "List<Convocation> findReceivedWithQuery(String multifield, String assemblyType,\n            LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter, Integer limit,\n            Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Recipient recipient)", "full_signature": "public List<Convocation> findReceivedWithQuery(String multifield, String assemblyType,\n            LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter, Integer limit,\n            Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Recipient recipient)", "class_method_signature": "ConvocationService.findReceivedWithQuery(String multifield, String assemblyType,\n            LocalDate meetingDateFrom, LocalDate meetingDateTo, String subject, String filter, Integer limit,\n            Integer offset, String column, String direction,\n            String currentLocalAuthUuid, Recipient recipient)", "testcase": false, "constructor": false}, {"identifier": "getSentQueryPredicates", "parameters": "(CriteriaBuilder builder, Root<Convocation> convocationRoot,\n            String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String assemblyType, LocalDate\n            meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            String currentLocalAuthUuid, Set<String> groups)", "modifiers": "private", "return": "List<Predicate>", "signature": "List<Predicate> getSentQueryPredicates(CriteriaBuilder builder, Root<Convocation> convocationRoot,\n            String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String assemblyType, LocalDate\n            meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            String currentLocalAuthUuid, Set<String> groups)", "full_signature": "private List<Predicate> getSentQueryPredicates(CriteriaBuilder builder, Root<Convocation> convocationRoot,\n            String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String assemblyType, LocalDate\n            meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            String currentLocalAuthUuid, Set<String> groups)", "class_method_signature": "ConvocationService.getSentQueryPredicates(CriteriaBuilder builder, Root<Convocation> convocationRoot,\n            String multifield, LocalDate sentDateFrom, LocalDate sentDateTo, String assemblyType, LocalDate\n            meetingDateFrom, LocalDate meetingDateTo, String subject, String filter,\n            String currentLocalAuthUuid, Set<String> groups)", "testcase": false, "constructor": false}, {"identifier": "getGroupPredicate", "parameters": "(CriteriaBuilder builder, Root<Convocation> convocationRoot, Set<String> groups)", "modifiers": "private", "return": "Predicate", "signature": "Predicate getGroupPredicate(CriteriaBuilder builder, Root<Convocation> convocationRoot, Set<String> groups)", "full_signature": "private Predicate getGroupPredicate(CriteriaBuilder builder, Root<Convocation> convocationRoot, Set<String> groups)", "class_method_signature": "ConvocationService.getGroupPredicate(CriteriaBuilder builder, Root<Convocation> convocationRoot, Set<String> groups)", "testcase": false, "constructor": false}, {"identifier": "saveAttachment", "parameters": "(MultipartFile file, boolean additionalDocument, List<Tag> tags)", "modifiers": "private", "return": "Attachment", "signature": "Attachment saveAttachment(MultipartFile file, boolean additionalDocument, List<Tag> tags)", "full_signature": "private Attachment saveAttachment(MultipartFile file, boolean additionalDocument, List<Tag> tags)", "class_method_signature": "ConvocationService.saveAttachment(MultipartFile file, boolean additionalDocument, List<Tag> tags)", "testcase": false, "constructor": false}, {"identifier": "getReceivedQueryPredicates", "parameters": "(CriteriaBuilder\n            builder, Root<Convocation> convocationRoot,\n            String multifield, String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String\n            subject,\n            String filter, String currentLocalAuthUuid, Recipient recipient)", "modifiers": "private", "return": "List<Predicate>", "signature": "List<Predicate> getReceivedQueryPredicates(CriteriaBuilder\n            builder, Root<Convocation> convocationRoot,\n            String multifield, String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String\n            subject,\n            String filter, String currentLocalAuthUuid, Recipient recipient)", "full_signature": "private List<Predicate> getReceivedQueryPredicates(CriteriaBuilder\n            builder, Root<Convocation> convocationRoot,\n            String multifield, String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String\n            subject,\n            String filter, String currentLocalAuthUuid, Recipient recipient)", "class_method_signature": "ConvocationService.getReceivedQueryPredicates(CriteriaBuilder\n            builder, Root<Convocation> convocationRoot,\n            String multifield, String assemblyType, LocalDate meetingDateFrom, LocalDate meetingDateTo, String\n            subject,\n            String filter, String currentLocalAuthUuid, Recipient recipient)", "testcase": false, "constructor": false}, {"identifier": "checkConvocationValidity", "parameters": "(Convocation convocation)", "modifiers": "private", "return": "void", "signature": "void checkConvocationValidity(Convocation convocation)", "full_signature": "private void checkConvocationValidity(Convocation convocation)", "class_method_signature": "ConvocationService.checkConvocationValidity(Convocation convocation)", "testcase": false, "constructor": false}, {"identifier": "addEntry", "parameters": "(String entryName, byte[] content, TarArchiveOutputStream taos)", "modifiers": "private", "return": "void", "signature": "void addEntry(String entryName, byte[] content, TarArchiveOutputStream taos)", "full_signature": "private void addEntry(String entryName, byte[] content, TarArchiveOutputStream taos)", "class_method_signature": "ConvocationService.addEntry(String entryName, byte[] content, TarArchiveOutputStream taos)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(ByteArrayOutputStream baos)", "modifiers": "private", "return": "ByteArrayOutputStream", "signature": "ByteArrayOutputStream compress(ByteArrayOutputStream baos)", "full_signature": "private ByteArrayOutputStream compress(ByteArrayOutputStream baos)", "class_method_signature": "ConvocationService.compress(ByteArrayOutputStream baos)", "testcase": false, "constructor": false}, {"identifier": "addHistory", "parameters": "(Convocation convocation, HistoryType type)", "modifiers": "private", "return": "void", "signature": "void addHistory(Convocation convocation, HistoryType type)", "full_signature": "private void addHistory(Convocation convocation, HistoryType type)", "class_method_signature": "ConvocationService.addHistory(Convocation convocation, HistoryType type)", "testcase": false, "constructor": false}, {"identifier": "addHistory", "parameters": "(Convocation convocation, HistoryType type, String message)", "modifiers": "private", "return": "void", "signature": "void addHistory(Convocation convocation, HistoryType type, String message)", "full_signature": "private void addHistory(Convocation convocation, HistoryType type, String message)", "class_method_signature": "ConvocationService.addHistory(Convocation convocation, HistoryType type, String message)", "testcase": false, "constructor": false}, {"identifier": "addHistory", "parameters": "(Convocation convocation, HistoryType type, String message, boolean publicHistory)", "modifiers": "private", "return": "void", "signature": "void addHistory(Convocation convocation, HistoryType type, String message, boolean publicHistory)", "full_signature": "private void addHistory(Convocation convocation, HistoryType type, String message, boolean publicHistory)", "class_method_signature": "ConvocationService.addHistory(Convocation convocation, HistoryType type, String message, boolean publicHistory)", "testcase": false, "constructor": false}, {"identifier": "extractTags", "parameters": "(String[] tagsIds, String localAuthorityUuid)", "modifiers": "private", "return": "Map<String, List<Tag>>", "signature": "Map<String, List<Tag>> extractTags(String[] tagsIds, String localAuthorityUuid)", "full_signature": "private Map<String, List<Tag>> extractTags(String[] tagsIds, String localAuthorityUuid)", "class_method_signature": "ConvocationService.extractTags(String[] tagsIds, String localAuthorityUuid)", "testcase": false, "constructor": false}], "file": "convocation-service/src/main/java/fr/sictiam/stela/convocationservice/service/ConvocationService.java"}, "focal_method": {"identifier": "getConvocation", "parameters": "(String uuid)", "modifiers": "public", "return": "Convocation", "body": "public Convocation getConvocation(String uuid) {\n        return convocationRepository.findById(uuid).orElseThrow(() -> new NotFoundException(\"Convocation \" + uuid + \" not found\"));\n    }", "signature": "Convocation getConvocation(String uuid)", "full_signature": "public Convocation getConvocation(String uuid)", "class_method_signature": "ConvocationService.getConvocation(String uuid)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "findById"]}, "repository": {"repo_id": 180337008, "url": "https://github.com/SICTIAM/stela", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 7714, "license": "licensed"}}