{"test_class": {"identifier": "RequireScrollMixinTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private TemplateLayout mTemplateLayout;", "modifier": "@Mock\n    private", "type": "TemplateLayout", "declarator": "mTemplateLayout", "var_name": "mTemplateLayout"}, {"original_string": "@Mock\n    private ScrollHandlingDelegate mDelegate;", "modifier": "@Mock\n    private", "type": "ScrollHandlingDelegate", "declarator": "mDelegate", "var_name": "mDelegate"}, {"original_string": "private RequireScrollMixin mRequireScrollMixin;", "modifier": "private", "type": "RequireScrollMixin", "declarator": "mRequireScrollMixin", "var_name": "mRequireScrollMixin"}], "file": "com/android/setupwizardlib/template/RequireScrollMixinTest.java"}, "test_case": {"identifier": "testRequireScrollWithNavigationBar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRequireScrollWithNavigationBar() {\n        final NavigationBar navigationBar = new NavigationBar(application);\n        mRequireScrollMixin.requireScrollWithNavigationBar(navigationBar);\n\n        mRequireScrollMixin.notifyScrollabilityChange(true);\n        assertEquals(\"More button should be visible\",\n                View.VISIBLE, navigationBar.getMoreButton().getVisibility());\n        assertEquals(\"Next button should be hidden\",\n                View.GONE, navigationBar.getNextButton().getVisibility());\n\n        navigationBar.getMoreButton().performClick();\n        verify(mDelegate).pageScrollDown();\n\n        mRequireScrollMixin.notifyScrollabilityChange(false);\n        assertEquals(\"More button should be hidden\",\n                View.GONE, navigationBar.getMoreButton().getVisibility());\n        assertEquals(\"Next button should be visible\",\n                View.VISIBLE, navigationBar.getNextButton().getVisibility());\n    }", "signature": "void testRequireScrollWithNavigationBar()", "full_signature": "@Test public void testRequireScrollWithNavigationBar()", "class_method_signature": "RequireScrollMixinTest.testRequireScrollWithNavigationBar()", "testcase": true, "constructor": false, "invocations": ["requireScrollWithNavigationBar", "notifyScrollabilityChange", "assertEquals", "getVisibility", "getMoreButton", "assertEquals", "getVisibility", "getNextButton", "performClick", "getMoreButton", "pageScrollDown", "verify", "notifyScrollabilityChange", "assertEquals", "getVisibility", "getMoreButton", "assertEquals", "getVisibility", "getNextButton"]}, "focal_class": {"identifier": "RequireScrollMixin", "superclass": "", "interfaces": "implements Mixin", "fields": [{"original_string": "@NonNull\n    private final TemplateLayout mTemplateLayout;", "modifier": "@NonNull\n    private final", "type": "TemplateLayout", "declarator": "mTemplateLayout", "var_name": "mTemplateLayout"}, {"original_string": "private final Handler mHandler = new Handler(Looper.getMainLooper());", "modifier": "private final", "type": "Handler", "declarator": "mHandler = new Handler(Looper.getMainLooper())", "var_name": "mHandler"}, {"original_string": "private boolean mRequiringScrollToBottom = false;", "modifier": "private", "type": "boolean", "declarator": "mRequiringScrollToBottom = false", "var_name": "mRequiringScrollToBottom"}, {"original_string": "private boolean mEverScrolledToBottom = false;", "modifier": "private", "type": "boolean", "declarator": "mEverScrolledToBottom = false", "var_name": "mEverScrolledToBottom"}, {"original_string": "private ScrollHandlingDelegate mDelegate;", "modifier": "private", "type": "ScrollHandlingDelegate", "declarator": "mDelegate", "var_name": "mDelegate"}, {"original_string": "@Nullable\n    private OnRequireScrollStateChangedListener mListener;", "modifier": "@Nullable\n    private", "type": "OnRequireScrollStateChangedListener", "declarator": "mListener", "var_name": "mListener"}], "methods": [{"identifier": "RequireScrollMixin", "parameters": "(@NonNull TemplateLayout templateLayout)", "modifiers": "public", "return": "", "signature": " RequireScrollMixin(@NonNull TemplateLayout templateLayout)", "full_signature": "public  RequireScrollMixin(@NonNull TemplateLayout templateLayout)", "class_method_signature": "RequireScrollMixin.RequireScrollMixin(@NonNull TemplateLayout templateLayout)", "testcase": false, "constructor": true}, {"identifier": "setScrollHandlingDelegate", "parameters": "(@NonNull ScrollHandlingDelegate delegate)", "modifiers": "public", "return": "void", "signature": "void setScrollHandlingDelegate(@NonNull ScrollHandlingDelegate delegate)", "full_signature": "public void setScrollHandlingDelegate(@NonNull ScrollHandlingDelegate delegate)", "class_method_signature": "RequireScrollMixin.setScrollHandlingDelegate(@NonNull ScrollHandlingDelegate delegate)", "testcase": false, "constructor": false}, {"identifier": "setOnRequireScrollStateChangedListener", "parameters": "(\n            @Nullable OnRequireScrollStateChangedListener listener)", "modifiers": "public", "return": "void", "signature": "void setOnRequireScrollStateChangedListener(\n            @Nullable OnRequireScrollStateChangedListener listener)", "full_signature": "public void setOnRequireScrollStateChangedListener(\n            @Nullable OnRequireScrollStateChangedListener listener)", "class_method_signature": "RequireScrollMixin.setOnRequireScrollStateChangedListener(\n            @Nullable OnRequireScrollStateChangedListener listener)", "testcase": false, "constructor": false}, {"identifier": "getOnRequireScrollStateChangedListener", "parameters": "()", "modifiers": "public", "return": "OnRequireScrollStateChangedListener", "signature": "OnRequireScrollStateChangedListener getOnRequireScrollStateChangedListener()", "full_signature": "public OnRequireScrollStateChangedListener getOnRequireScrollStateChangedListener()", "class_method_signature": "RequireScrollMixin.getOnRequireScrollStateChangedListener()", "testcase": false, "constructor": false}, {"identifier": "createOnClickListener", "parameters": "(@Nullable final OnClickListener listener)", "modifiers": "public", "return": "OnClickListener", "signature": "OnClickListener createOnClickListener(@Nullable final OnClickListener listener)", "full_signature": "public OnClickListener createOnClickListener(@Nullable final OnClickListener listener)", "class_method_signature": "RequireScrollMixin.createOnClickListener(@Nullable final OnClickListener listener)", "testcase": false, "constructor": false}, {"identifier": "requireScrollWithNavigationBar", "parameters": "(@NonNull final NavigationBar navigationBar)", "modifiers": "public", "return": "void", "signature": "void requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "full_signature": "public void requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "class_method_signature": "RequireScrollMixin.requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "testcase": false, "constructor": false}, {"identifier": "requireScrollWithButton", "parameters": "(\n            @NonNull Button button,\n            @StringRes int moreText,\n            @Nullable OnClickListener onClickListener)", "modifiers": "public", "return": "void", "signature": "void requireScrollWithButton(\n            @NonNull Button button,\n            @StringRes int moreText,\n            @Nullable OnClickListener onClickListener)", "full_signature": "public void requireScrollWithButton(\n            @NonNull Button button,\n            @StringRes int moreText,\n            @Nullable OnClickListener onClickListener)", "class_method_signature": "RequireScrollMixin.requireScrollWithButton(\n            @NonNull Button button,\n            @StringRes int moreText,\n            @Nullable OnClickListener onClickListener)", "testcase": false, "constructor": false}, {"identifier": "requireScrollWithButton", "parameters": "(\n            @NonNull final Button button,\n            final CharSequence moreText,\n            @Nullable OnClickListener onClickListener)", "modifiers": "public", "return": "void", "signature": "void requireScrollWithButton(\n            @NonNull final Button button,\n            final CharSequence moreText,\n            @Nullable OnClickListener onClickListener)", "full_signature": "public void requireScrollWithButton(\n            @NonNull final Button button,\n            final CharSequence moreText,\n            @Nullable OnClickListener onClickListener)", "class_method_signature": "RequireScrollMixin.requireScrollWithButton(\n            @NonNull final Button button,\n            final CharSequence moreText,\n            @Nullable OnClickListener onClickListener)", "testcase": false, "constructor": false}, {"identifier": "isScrollingRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isScrollingRequired()", "full_signature": "public boolean isScrollingRequired()", "class_method_signature": "RequireScrollMixin.isScrollingRequired()", "testcase": false, "constructor": false}, {"identifier": "requireScroll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void requireScroll()", "full_signature": "public void requireScroll()", "class_method_signature": "RequireScrollMixin.requireScroll()", "testcase": false, "constructor": false}, {"identifier": "notifyScrollabilityChange", "parameters": "(boolean canScrollDown)", "modifiers": "", "return": "void", "signature": "void notifyScrollabilityChange(boolean canScrollDown)", "full_signature": " void notifyScrollabilityChange(boolean canScrollDown)", "class_method_signature": "RequireScrollMixin.notifyScrollabilityChange(boolean canScrollDown)", "testcase": false, "constructor": false}, {"identifier": "postScrollStateChange", "parameters": "(final boolean scrollNeeded)", "modifiers": "private", "return": "void", "signature": "void postScrollStateChange(final boolean scrollNeeded)", "full_signature": "private void postScrollStateChange(final boolean scrollNeeded)", "class_method_signature": "RequireScrollMixin.postScrollStateChange(final boolean scrollNeeded)", "testcase": false, "constructor": false}], "file": "com/android/setupwizardlib/template/RequireScrollMixin.java"}, "focal_method": {"identifier": "requireScrollWithNavigationBar", "parameters": "(@NonNull final NavigationBar navigationBar)", "modifiers": "public", "return": "void", "body": "public void requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar) {\n        setOnRequireScrollStateChangedListener(\n                new OnRequireScrollStateChangedListener() {\n                    @Override\n                    public void onRequireScrollStateChanged(boolean scrollNeeded) {\n                        navigationBar.getMoreButton()\n                                .setVisibility(scrollNeeded ? View.VISIBLE : View.GONE);\n                        navigationBar.getNextButton()\n                                .setVisibility(scrollNeeded ? View.GONE : View.VISIBLE);\n                    }\n                });\n        navigationBar.getMoreButton().setOnClickListener(createOnClickListener(null));\n        requireScroll();\n    }", "signature": "void requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "full_signature": "public void requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "class_method_signature": "RequireScrollMixin.requireScrollWithNavigationBar(@NonNull final NavigationBar navigationBar)", "testcase": false, "constructor": false, "invocations": ["setOnRequireScrollStateChangedListener", "setVisibility", "getMoreButton", "setVisibility", "getNextButton", "setOnClickListener", "getMoreButton", "createOnClickListener", "requireScroll"]}, "repository": {"repo_id": 109116423, "url": "https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-26", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 29147, "license": "licensed"}}