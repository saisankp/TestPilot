{"test_class": {"identifier": "MirageIOExceptionTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/exceptions/MirageIOExceptionTest.java"}, "test_case": {"identifier": "testSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSource() throws Exception {\n        MirageIOException e = new MirageIOException(Mirage.Source.EXTERNAL);\n        Assert.assertEquals(Mirage.Source.EXTERNAL, e.getSource());\n\n        e = new MirageIOException(Mirage.Source.DISK, new IOException(\"test exception\"));\n        Assert.assertEquals(Mirage.Source.DISK, e.getSource());\n    }", "signature": "void testSource()", "full_signature": "@Test public void testSource()", "class_method_signature": "MirageIOExceptionTest.testSource()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSource", "assertEquals", "getSource"]}, "focal_class": {"identifier": "MirageIOException", "superclass": "extends IOException", "interfaces": "implements MirageException", "fields": [{"original_string": "private Mirage.Source source;", "modifier": "private", "type": "Mirage.Source", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "MirageIOException", "parameters": "(Mirage.Source source)", "modifiers": "public", "return": "", "signature": " MirageIOException(Mirage.Source source)", "full_signature": "public  MirageIOException(Mirage.Source source)", "class_method_signature": "MirageIOException.MirageIOException(Mirage.Source source)", "testcase": false, "constructor": true}, {"identifier": "MirageIOException", "parameters": "(Mirage.Source source, Throwable cause)", "modifiers": "public", "return": "", "signature": " MirageIOException(Mirage.Source source, Throwable cause)", "full_signature": "public  MirageIOException(Mirage.Source source, Throwable cause)", "class_method_signature": "MirageIOException.MirageIOException(Mirage.Source source, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "getSource", "parameters": "()", "modifiers": "@Override public", "return": "Mirage.Source", "signature": "Mirage.Source getSource()", "full_signature": "@Override public Mirage.Source getSource()", "class_method_signature": "MirageIOException.getSource()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/exceptions/MirageIOException.java"}, "focal_method": {"identifier": "getSource", "parameters": "()", "modifiers": "@Override public", "return": "Mirage.Source", "body": "@Override\n\tpublic Mirage.Source getSource() {\n\t\treturn source;\n\t}", "signature": "Mirage.Source getSource()", "full_signature": "@Override public Mirage.Source getSource()", "class_method_signature": "MirageIOException.getSource()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}