{"test_class": {"identifier": "SmaPointForecasterParamsTest", "superclass": "", "interfaces": "", "fields": [], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/forecast/point/algo/sma/SmaPointForecasterParamsTest.java"}, "test_case": {"identifier": "validParamsTotallyEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validParamsTotallyEmpty() {\n        new SmaPointForecasterParams()\n            .validate();\n    }", "signature": "void validParamsTotallyEmpty()", "full_signature": "@Test public void validParamsTotallyEmpty()", "class_method_signature": "SmaPointForecasterParamsTest.validParamsTotallyEmpty()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "SmaPointForecasterParams", "superclass": "", "interfaces": "implements AlgoParams", "fields": [{"original_string": "private int lookBackPeriod = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "lookBackPeriod = Integer.MAX_VALUE", "var_name": "lookBackPeriod"}, {"original_string": "private List<Double> initialPeriodOfValues;", "modifier": "private", "type": "List<Double>", "declarator": "initialPeriodOfValues", "var_name": "initialPeriodOfValues"}], "methods": [{"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "SmaPointForecasterParams.validate()", "testcase": false, "constructor": false}, {"identifier": "initialPeriodOfValuesValid", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean initialPeriodOfValuesValid()", "full_signature": "private boolean initialPeriodOfValuesValid()", "class_method_signature": "SmaPointForecasterParams.initialPeriodOfValuesValid()", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/forecast/point/algo/sma/SmaPointForecasterParams.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate() {\n        isStrictlyPositive(lookBackPeriod, \"Required: lookBackPeriod > 0\");\n        isTrue(initialPeriodOfValuesValid(), \"When specified, initialPeriodOfValues.size must equal lookBackPeriod\");\n    }", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "SmaPointForecasterParams.validate()", "testcase": false, "constructor": false, "invocations": ["isStrictlyPositive", "isTrue", "initialPeriodOfValuesValid"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}