{"test_class": {"identifier": "MidtransServiceManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ERR_TYPE_NPE = 1;", "modifier": "private static final", "type": "int", "declarator": "ERR_TYPE_NPE = 1", "var_name": "ERR_TYPE_NPE"}, {"original_string": "@InjectMocks\n    protected MidtransServiceCallbackImplement callbackImplement;", "modifier": "@InjectMocks\n    protected", "type": "MidtransServiceCallbackImplement", "declarator": "callbackImplement", "var_name": "callbackImplement"}, {"original_string": "@Mock\n    private Context contextMock;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "contextMock", "var_name": "contextMock"}, {"original_string": "@Mock\n    private Resources resourcesMock;", "modifier": "@Mock\n    private", "type": "Resources", "declarator": "resourcesMock", "var_name": "resourcesMock"}, {"original_string": "@Mock\n    private SecurePreferences preferencesMock;", "modifier": "@Mock\n    private", "type": "SecurePreferences", "declarator": "preferencesMock", "var_name": "preferencesMock"}, {"original_string": "private MidtransServiceManager midtransServiceManager;", "modifier": "private", "type": "MidtransServiceManager", "declarator": "midtransServiceManager", "var_name": "midtransServiceManager"}, {"original_string": "@Mock\n    MidtransApiService midtransServiceMock;", "modifier": "@Mock", "type": "MidtransApiService", "declarator": "midtransServiceMock", "var_name": "midtransServiceMock"}, {"original_string": "private int timout = 1000;", "modifier": "private", "type": "int", "declarator": "timout = 1000", "var_name": "timout"}, {"original_string": "@Mock\n    private Call<CardRegistrationResponse> callRegisterCardMock;", "modifier": "@Mock\n    private", "type": "Call<CardRegistrationResponse>", "declarator": "callRegisterCardMock", "var_name": "callRegisterCardMock"}, {"original_string": "@Mock\n    private CallbackCollaborator callbackCollaboratorMock;", "modifier": "@Mock\n    private", "type": "CallbackCollaborator", "declarator": "callbackCollaboratorMock", "var_name": "callbackCollaboratorMock"}, {"original_string": "@Mock\n    private Call<TokenDetailsResponse> callGetCardTokenMock;", "modifier": "@Mock\n    private", "type": "Call<TokenDetailsResponse>", "declarator": "callGetCardTokenMock", "var_name": "callGetCardTokenMock"}, {"original_string": "@Captor\n    private ArgumentCaptor<Callback<CardRegistrationResponse>> cardRegistrationCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Callback<CardRegistrationResponse>>", "declarator": "cardRegistrationCaptor", "var_name": "cardRegistrationCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<Callback<TokenDetailsResponse>> getCardTokenCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Callback<TokenDetailsResponse>>", "declarator": "getCardTokenCaptor", "var_name": "getCardTokenCaptor"}], "file": "corekit/src/test/java/com/midtrans/sdk/corekit/core/MidtransServiceManagerTest.java"}, "test_case": {"identifier": "getBankPointsFailure_whenServiceNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBankPointsFailure_whenServiceNull() {\n        midtransServiceManager.setService(null);\n\n        callbackImplement.registerCard(SDKConfigTest.CARD_NUMBER,\n                SDKConfigTest.CARD_CVV,\n                SDKConfigTest.CARD_EXPIRY_MONTH,\n                SDKConfigTest.CARD_EXPIRY_YEAR,\n                SDKConfigTest.CLIENT_KEY);\n\n        Mockito.verify(callbackCollaboratorMock).onError();\n    }", "signature": "void getBankPointsFailure_whenServiceNull()", "full_signature": "@Test public void getBankPointsFailure_whenServiceNull()", "class_method_signature": "MidtransServiceManagerTest.getBankPointsFailure_whenServiceNull()", "testcase": true, "constructor": false, "invocations": ["setService", "registerCard", "onError", "verify"]}, "focal_class": {"identifier": "MidtransServiceManager", "superclass": "extends BaseServiceManager", "interfaces": "", "fields": [{"original_string": "private static final String TAG = MerchantServiceManager.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = MerchantServiceManager.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private MidtransApiService service;", "modifier": "private", "type": "MidtransApiService", "declarator": "service", "var_name": "service"}], "methods": [{"identifier": "MidtransServiceManager", "parameters": "(MidtransApiService service)", "modifiers": "public", "return": "", "signature": " MidtransServiceManager(MidtransApiService service)", "full_signature": "public  MidtransServiceManager(MidtransApiService service)", "class_method_signature": "MidtransServiceManager.MidtransServiceManager(MidtransApiService service)", "testcase": false, "constructor": true}, {"identifier": "cardRegistration", "parameters": "(String cardNumber,\n                                 String cardCvv,\n                                 String cardExpMonth,\n                                 String cardExpYear, String clientKey, final CardRegistrationCallback callback)", "modifiers": "public", "return": "void", "signature": "void cardRegistration(String cardNumber,\n                                 String cardCvv,\n                                 String cardExpMonth,\n                                 String cardExpYear, String clientKey, final CardRegistrationCallback callback)", "full_signature": "public void cardRegistration(String cardNumber,\n                                 String cardCvv,\n                                 String cardExpMonth,\n                                 String cardExpYear, String clientKey, final CardRegistrationCallback callback)", "class_method_signature": "MidtransServiceManager.cardRegistration(String cardNumber,\n                                 String cardCvv,\n                                 String cardExpMonth,\n                                 String cardExpYear, String clientKey, final CardRegistrationCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "(CardTokenRequest cardTokenRequest, final CardTokenCallback callback)", "modifiers": "public", "return": "void", "signature": "void getToken(CardTokenRequest cardTokenRequest, final CardTokenCallback callback)", "full_signature": "public void getToken(CardTokenRequest cardTokenRequest, final CardTokenCallback callback)", "class_method_signature": "MidtransServiceManager.getToken(CardTokenRequest cardTokenRequest, final CardTokenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "doOnGetCardTokenSuccess", "parameters": "(Response<TokenDetailsResponse> response, CardTokenCallback callback)", "modifiers": "private", "return": "void", "signature": "void doOnGetCardTokenSuccess(Response<TokenDetailsResponse> response, CardTokenCallback callback)", "full_signature": "private void doOnGetCardTokenSuccess(Response<TokenDetailsResponse> response, CardTokenCallback callback)", "class_method_signature": "MidtransServiceManager.doOnGetCardTokenSuccess(Response<TokenDetailsResponse> response, CardTokenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "setService", "parameters": "(MidtransApiService service)", "modifiers": "public", "return": "void", "signature": "void setService(MidtransApiService service)", "full_signature": "public void setService(MidtransApiService service)", "class_method_signature": "MidtransServiceManager.setService(MidtransApiService service)", "testcase": false, "constructor": false}], "file": "corekit/src/main/java/com/midtrans/sdk/corekit/core/MidtransServiceManager.java"}, "focal_method": {"identifier": "setService", "parameters": "(MidtransApiService service)", "modifiers": "public", "return": "void", "body": "public void setService(MidtransApiService service) {\n        this.service = service;\n    }", "signature": "void setService(MidtransApiService service)", "full_signature": "public void setService(MidtransApiService service)", "class_method_signature": "MidtransServiceManager.setService(MidtransApiService service)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 59952554, "url": "https://github.com/veritrans/veritrans-android", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 49, "size": 60382, "license": "licensed"}}