{"test_class": {"identifier": "JobRuntimePredictionSelectorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JobDescriptor JOB_DESCRIPTOR = JobDescriptorGenerator.oneTaskBatchJobDescriptor();", "modifier": "private static final", "type": "JobDescriptor", "declarator": "JOB_DESCRIPTOR = JobDescriptorGenerator.oneTaskBatchJobDescriptor()", "var_name": "JOB_DESCRIPTOR"}, {"original_string": "private static final JobRuntimePredictions JOB_PREDICTIONS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.05, 5),\n                    new JobRuntimePrediction(0.25, 10),\n                    new JobRuntimePrediction(0.95, 20)\n            )));", "modifier": "private static final", "type": "JobRuntimePredictions", "declarator": "JOB_PREDICTIONS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.05, 5),\n                    new JobRuntimePrediction(0.25, 10),\n                    new JobRuntimePrediction(0.95, 20)\n            )))", "var_name": "JOB_PREDICTIONS"}, {"original_string": "private static final JobRuntimePredictions BAD_CONFIDENCE_LEVELS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.1, 5),\n                    new JobRuntimePrediction(0.5, 10),\n                    new JobRuntimePrediction(0.9, 20)\n            )));", "modifier": "private static final", "type": "JobRuntimePredictions", "declarator": "BAD_CONFIDENCE_LEVELS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.1, 5),\n                    new JobRuntimePrediction(0.5, 10),\n                    new JobRuntimePrediction(0.9, 20)\n            )))", "var_name": "BAD_CONFIDENCE_LEVELS"}, {"original_string": "private static final Map<String, String> METADATA = Collections.singletonMap(\"key\", \"value\");", "modifier": "private static final", "type": "Map<String, String>", "declarator": "METADATA = Collections.singletonMap(\"key\", \"value\")", "var_name": "METADATA"}], "file": "titus-server-runtime/src/test/java/com/netflix/titus/runtime/endpoint/admission/JobRuntimePredictionSelectorsTest.java"}, "test_case": {"identifier": "testReloadedOnConfigurationUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReloadedOnConfigurationUpdate() {\n        SettableConfig config = new DefaultSettableConfig();\n        config.setProperty(\"root.runtimeThresholdInSeconds\", \"60\");\n        config.setProperty(\"root.sigmaThreshold\", \"10\");\n\n        CloseableReference<JobRuntimePredictionSelector> selectorRef = reloadedOnConfigurationUpdate(\n                config.getPrefixedView(\"root\"),\n                configUpdate -> aboveThreshold(configUpdate, METADATA)\n        );\n        JobRuntimePredictionSelector selector = selectorRef.get();\n        checkSelection(selector.apply(JOB_DESCRIPTOR, JOB_PREDICTIONS), HIGH_QUANTILE);\n\n        // Now change it to fail\n        config.setProperty(\"root.runtimeThresholdInSeconds\", \"6\");\n        assertThat(selector.apply(JOB_DESCRIPTOR, JOB_PREDICTIONS)).isEmpty();\n\n        selectorRef.close();\n    }", "signature": "void testReloadedOnConfigurationUpdate()", "full_signature": "@Test public void testReloadedOnConfigurationUpdate()", "class_method_signature": "JobRuntimePredictionSelectorsTest.testReloadedOnConfigurationUpdate()", "testcase": true, "constructor": false, "invocations": ["setProperty", "setProperty", "reloadedOnConfigurationUpdate", "getPrefixedView", "aboveThreshold", "get", "checkSelection", "apply", "setProperty", "isEmpty", "assertThat", "apply", "close"]}, "focal_class": {"identifier": "JobRuntimePredictionSelectors", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(JobRuntimePredictionSelectors.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JobRuntimePredictionSelectors.class)", "var_name": "logger"}, {"original_string": "private static final JobRuntimePredictionSelector NEVER_SELECTOR = (jobDescriptor, predictions) -> Optional.empty();", "modifier": "private static final", "type": "JobRuntimePredictionSelector", "declarator": "NEVER_SELECTOR = (jobDescriptor, predictions) -> Optional.empty()", "var_name": "NEVER_SELECTOR"}], "methods": [{"identifier": "JobRuntimePredictionSelectors", "parameters": "()", "modifiers": "private", "return": "", "signature": " JobRuntimePredictionSelectors()", "full_signature": "private  JobRuntimePredictionSelectors()", "class_method_signature": "JobRuntimePredictionSelectors.JobRuntimePredictionSelectors()", "testcase": false, "constructor": true}, {"identifier": "never", "parameters": "()", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector never()", "full_signature": "public static JobRuntimePredictionSelector never()", "class_method_signature": "JobRuntimePredictionSelectors.never()", "testcase": false, "constructor": false}, {"identifier": "best", "parameters": "()", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector best()", "full_signature": "public static JobRuntimePredictionSelector best()", "class_method_signature": "JobRuntimePredictionSelectors.best()", "testcase": false, "constructor": false}, {"identifier": "best", "parameters": "(Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector best(Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector best(Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.best(Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThreshold", "parameters": "(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThreshold", "parameters": "(Config config, Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector aboveThreshold(Config config, Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector aboveThreshold(Config config, Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThreshold(Config config, Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThresholds", "parameters": "(Config config, Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "Map<String, JobRuntimePredictionSelector>", "signature": "Map<String, JobRuntimePredictionSelector> aboveThresholds(Config config, Map<String, String> selectionMetadata)", "full_signature": "public static Map<String, JobRuntimePredictionSelector> aboveThresholds(Config config, Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThresholds(Config config, Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "reloadedOnConfigurationUpdate", "parameters": "(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "modifiers": "public static", "return": "CloseableReference<JobRuntimePredictionSelector>", "signature": "CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "full_signature": "public static CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "class_method_signature": "JobRuntimePredictionSelectors.reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "testcase": false, "constructor": false}, {"identifier": "abTestRandom", "parameters": "(Map<String, JobRuntimePredictionSelector> selectors)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "full_signature": "public static JobRuntimePredictionSelector abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "class_method_signature": "JobRuntimePredictionSelectors.abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "testcase": false, "constructor": false}, {"identifier": "appendSelectorInfoIfMissing", "parameters": "(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "full_signature": "private static Map<String, String> appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "class_method_signature": "JobRuntimePredictionSelectors.appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "testcase": false, "constructor": false}], "file": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/endpoint/admission/JobRuntimePredictionSelectors.java"}, "focal_method": {"identifier": "reloadedOnConfigurationUpdate", "parameters": "(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "modifiers": "public static", "return": "CloseableReference<JobRuntimePredictionSelector>", "body": "public static CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory) {\n        AtomicReference<JobRuntimePredictionSelector> last = new AtomicReference<>(factory.apply(config));\n\n        ConfigListener listener = new ConfigListener() {\n            @Override\n            public void onConfigAdded(Config config) {\n                tryReload(config);\n            }\n\n            @Override\n            public void onConfigRemoved(Config config) {\n                tryReload(config);\n            }\n\n            @Override\n            public void onConfigUpdated(Config config) {\n                tryReload(config);\n            }\n\n            @Override\n            public void onError(Throwable error, Config config) {\n                tryReload(config);\n            }\n\n            private void tryReload(Config updated) {\n                try {\n                    // Use the past config, in case it is prefixed view\n                    last.set(factory.apply(config));\n                } catch (Exception e) {\n                    logger.info(\"Failed to reload job runtime prediction selectors\", e);\n                }\n            }\n        };\n        config.addListener(listener);\n\n        JobRuntimePredictionSelector wrapper = (jobDescriptor, predictions) -> last.get().apply(jobDescriptor, predictions);\n\n        return CloseableReference.<JobRuntimePredictionSelector>newBuilder()\n                .withResource(wrapper)\n                .withCloseAction(() -> config.removeListener(listener))\n                .withSwallowException(true)\n                .withSerialize(true)\n                .build();\n    }", "signature": "CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "full_signature": "public static CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "class_method_signature": "JobRuntimePredictionSelectors.reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "testcase": false, "constructor": false, "invocations": ["apply", "tryReload", "tryReload", "tryReload", "tryReload", "set", "apply", "info", "addListener", "apply", "get", "build", "withSerialize", "withSwallowException", "withCloseAction", "withResource", "newBuilder", "removeListener"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}