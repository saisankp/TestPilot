{"test_class": {"identifier": "DefaultScriptHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DefaultScriptHandler scriptHandler = null;", "modifier": "", "type": "DefaultScriptHandler", "declarator": "scriptHandler = null", "var_name": "scriptHandler"}], "file": "beanmother-core/src/test/java/io/beanmother/core/script/DefaultScriptHandlerTest.java"}, "test_case": {"identifier": "testRaiseError", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testRaiseError() {\n        scriptHandler.runScript(ScriptFragment.of(\"fail\"));\n    }", "signature": "void testRaiseError()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testRaiseError()", "class_method_signature": "DefaultScriptHandlerTest.testRaiseError()", "testcase": true, "constructor": false, "invocations": ["runScript", "of"]}, "focal_class": {"identifier": "DefaultScriptHandler", "superclass": "", "interfaces": "implements ScriptHandler", "fields": [{"original_string": "private Set<ScriptRunner> scriptRunners = new HashSet<>();", "modifier": "private", "type": "Set<ScriptRunner>", "declarator": "scriptRunners = new HashSet<>()", "var_name": "scriptRunners"}], "methods": [{"identifier": "DefaultScriptHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultScriptHandler()", "full_signature": "public  DefaultScriptHandler()", "class_method_signature": "DefaultScriptHandler.DefaultScriptHandler()", "testcase": false, "constructor": true}, {"identifier": "runScript", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "@Override public", "return": "Object", "signature": "Object runScript(ScriptFragment scriptFragment)", "full_signature": "@Override public Object runScript(ScriptFragment scriptFragment)", "class_method_signature": "DefaultScriptHandler.runScript(ScriptFragment scriptFragment)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(ScriptRunnerModule scriptRunnerModule)", "modifiers": "@Override public", "return": "void", "signature": "void register(ScriptRunnerModule scriptRunnerModule)", "full_signature": "@Override public void register(ScriptRunnerModule scriptRunnerModule)", "class_method_signature": "DefaultScriptHandler.register(ScriptRunnerModule scriptRunnerModule)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(ScriptRunner scriptRunner)", "modifiers": "@Override public", "return": "void", "signature": "void register(ScriptRunner scriptRunner)", "full_signature": "@Override public void register(ScriptRunner scriptRunner)", "class_method_signature": "DefaultScriptHandler.register(ScriptRunner scriptRunner)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "public", "return": "ScriptRunner", "signature": "ScriptRunner get(ScriptFragment scriptFragment)", "full_signature": "public ScriptRunner get(ScriptFragment scriptFragment)", "class_method_signature": "DefaultScriptHandler.get(ScriptFragment scriptFragment)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/script/DefaultScriptHandler.java"}, "focal_method": {"identifier": "runScript", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object runScript(ScriptFragment scriptFragment) {\n        ScriptRunner process = get(scriptFragment);\n        if (process == null) {\n            throw new IllegalArgumentException(\"can not find ScriptRunner for \" + scriptFragment.toScriptString());\n        }\n        return process.run(scriptFragment);\n    }", "signature": "Object runScript(ScriptFragment scriptFragment)", "full_signature": "@Override public Object runScript(ScriptFragment scriptFragment)", "class_method_signature": "DefaultScriptHandler.runScript(ScriptFragment scriptFragment)", "testcase": false, "constructor": false, "invocations": ["get", "toScriptString", "run"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}