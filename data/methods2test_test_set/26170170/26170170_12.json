{"test_class": {"identifier": "ReservationCostCalculatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "booking/src/test/java/org/koenighotze/jee7hotel/booking/business/ReservationCostCalculatorTest.java"}, "test_case": {"identifier": "calcRate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calcRate() {\n        LocalDate from = of(1976, SEPTEMBER, 8);\n        LocalDate to = of(1976, SEPTEMBER, 12);\n        BigDecimal rate = new ReservationCostCalculator().calculateRateFor(BUDGET, from, to);\n        assertThat(rate).isEqualTo(BigDecimal.valueOf(240L));\n    }", "signature": "void calcRate()", "full_signature": "@Test public void calcRate()", "class_method_signature": "ReservationCostCalculatorTest.calcRate()", "testcase": true, "constructor": false, "invocations": ["of", "of", "calculateRateFor", "isEqualTo", "assertThat", "valueOf"]}, "focal_class": {"identifier": "ReservationCostCalculator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculateRateFor", "parameters": "(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "modifiers": "public", "return": "BigDecimal", "signature": "BigDecimal calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "full_signature": "public BigDecimal calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "class_method_signature": "ReservationCostCalculator.calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "testcase": false, "constructor": false}], "file": "booking/src/main/java/org/koenighotze/jee7hotel/booking/business/ReservationCostCalculator.java"}, "focal_method": {"identifier": "calculateRateFor", "parameters": "(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "modifiers": "public", "return": "BigDecimal", "body": "public BigDecimal calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout) {\n        // rather simple...\n        long days = checkin.until(checkout, DAYS);\n\n        BigDecimal rate = null;\n\n        switch (roomEquipment) {\n            case BUDGET:\n                rate = BigDecimal.valueOf(60L);\n                break;\n            case STANDARD:\n                rate = BigDecimal.valueOf(92L);\n                break;\n            case SUPERIOR:\n                rate = BigDecimal.valueOf(210L);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown equipment \" + roomEquipment);\n        }\n\n        return rate.multiply(BigDecimal.valueOf(days));\n    }", "signature": "BigDecimal calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "full_signature": "public BigDecimal calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "class_method_signature": "ReservationCostCalculator.calculateRateFor(RoomEquipment roomEquipment, LocalDate checkin, LocalDate checkout)", "testcase": false, "constructor": false, "invocations": ["until", "valueOf", "valueOf", "valueOf", "multiply", "valueOf"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}