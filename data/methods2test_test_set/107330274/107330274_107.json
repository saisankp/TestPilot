{"test_class": {"identifier": "MathExtTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/MathExtTest.java"}, "test_case": {"identifier": "testScaleBetween1and10", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testScaleBetween1and10() {\n        double scaledValue = MathExt.scale(10.0, 0.0, 100.0, 0.0, 10.0);\n        Assertions.assertThat(scaledValue).isEqualTo(1.0);\n    }", "signature": "void testScaleBetween1and10()", "full_signature": "@Test public void testScaleBetween1and10()", "class_method_signature": "MathExtTest.testScaleBetween1and10()", "testcase": true, "constructor": false, "invocations": ["scale", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "MathExt", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "scale", "parameters": "(double value, double min, double max)", "modifiers": "public static", "return": "double", "signature": "double scale(double value, double min, double max)", "full_signature": "public static double scale(double value, double min, double max)", "class_method_signature": "MathExt.scale(double value, double min, double max)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(double value, double min, double max, double minRangeValue, double maxRangeValue)", "modifiers": "public static", "return": "double", "signature": "double scale(double value, double min, double max, double minRangeValue, double maxRangeValue)", "full_signature": "public static double scale(double value, double min, double max, double minRangeValue, double maxRangeValue)", "class_method_signature": "MathExt.scale(double value, double min, double max, double minRangeValue, double maxRangeValue)", "testcase": false, "constructor": false}, {"identifier": "between", "parameters": "(double value, double min, double max)", "modifiers": "public static", "return": "double", "signature": "double between(double value, double min, double max)", "full_signature": "public static double between(double value, double min, double max)", "class_method_signature": "MathExt.between(double value, double min, double max)", "testcase": false, "constructor": false}, {"identifier": "between", "parameters": "(long value, long min, long max)", "modifiers": "public static", "return": "long", "signature": "long between(long value, long min, long max)", "full_signature": "public static long between(long value, long min, long max)", "class_method_signature": "MathExt.between(long value, long min, long max)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/MathExt.java"}, "focal_method": {"identifier": "scale", "parameters": "(double value, double min, double max)", "modifiers": "public static", "return": "double", "body": "public static double scale(double value, double min, double max) {\n        Preconditions.checkArgument(min < max, \"min must be less than max\");\n        return (value - min) / (max - min);\n    }", "signature": "double scale(double value, double min, double max)", "full_signature": "public static double scale(double value, double min, double max)", "class_method_signature": "MathExt.scale(double value, double min, double max)", "testcase": false, "constructor": false, "invocations": ["checkArgument"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}