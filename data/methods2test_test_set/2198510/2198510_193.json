{"test_class": {"identifier": "TestDurablePositionTracker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TestDurablePositionTracker.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TestDurablePositionTracker.class)", "var_name": "logger"}], "file": "flume-ng-core/src/test/java/org/apache/flume/serialization/TestDurablePositionTracker.java"}, "test_case": {"identifier": "testGoodTrackerFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGoodTrackerFile() throws IOException, URISyntaxException {\n    String fileName = \"/TestResettableFileInputStream_1.avro\";\n    File trackerFile = new File(getClass().getResource(fileName).toURI());\n    Assert.assertTrue(trackerFile.exists());\n    PositionTracker tracker;\n    tracker = new DurablePositionTracker(trackerFile, \"foo\");\n    // note: 62 is the last value in this manually-created file\n    Assert.assertEquals(62, tracker.getPosition());\n  }", "signature": "void testGoodTrackerFile()", "full_signature": "@Test public void testGoodTrackerFile()", "class_method_signature": "TestDurablePositionTracker.testGoodTrackerFile()", "testcase": true, "constructor": false, "invocations": ["toURI", "getResource", "getClass", "assertTrue", "exists", "assertEquals", "getPosition"]}, "focal_class": {"identifier": "DurablePositionTracker", "superclass": "", "interfaces": "implements PositionTracker", "fields": [{"original_string": "private final File trackerFile;", "modifier": "private final", "type": "File", "declarator": "trackerFile", "var_name": "trackerFile"}, {"original_string": "private final DataFileWriter<TransferStateFileMeta> writer;", "modifier": "private final", "type": "DataFileWriter<TransferStateFileMeta>", "declarator": "writer", "var_name": "writer"}, {"original_string": "private final DataFileReader<TransferStateFileMeta> reader;", "modifier": "private final", "type": "DataFileReader<TransferStateFileMeta>", "declarator": "reader", "var_name": "reader"}, {"original_string": "private final TransferStateFileMeta metaCache;", "modifier": "private final", "type": "TransferStateFileMeta", "declarator": "metaCache", "var_name": "metaCache"}, {"original_string": "private String target;", "modifier": "private", "type": "String", "declarator": "target", "var_name": "target"}, {"original_string": "private boolean isOpen;", "modifier": "private", "type": "boolean", "declarator": "isOpen", "var_name": "isOpen"}], "methods": [{"identifier": "getInstance", "parameters": "(File trackerFile,\n      String target)", "modifiers": "public static", "return": "DurablePositionTracker", "signature": "DurablePositionTracker getInstance(File trackerFile,\n      String target)", "full_signature": "public static DurablePositionTracker getInstance(File trackerFile,\n      String target)", "class_method_signature": "DurablePositionTracker.getInstance(File trackerFile,\n      String target)", "testcase": false, "constructor": false}, {"identifier": "DurablePositionTracker", "parameters": "(File trackerFile, String target)", "modifiers": "", "return": "", "signature": " DurablePositionTracker(File trackerFile, String target)", "full_signature": "  DurablePositionTracker(File trackerFile, String target)", "class_method_signature": "DurablePositionTracker.DurablePositionTracker(File trackerFile, String target)", "testcase": false, "constructor": true}, {"identifier": "initReader", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initReader()", "full_signature": "private void initReader()", "class_method_signature": "DurablePositionTracker.initReader()", "testcase": false, "constructor": false}, {"identifier": "storePosition", "parameters": "(long position)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void storePosition(long position)", "full_signature": "@Override public synchronized void storePosition(long position)", "class_method_signature": "DurablePositionTracker.storePosition(long position)", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "signature": "long getPosition()", "full_signature": "@Override public synchronized long getPosition()", "class_method_signature": "DurablePositionTracker.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTarget()", "full_signature": "@Override public String getTarget()", "class_method_signature": "DurablePositionTracker.getTarget()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DurablePositionTracker.close()", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/serialization/DurablePositionTracker.java"}, "focal_method": {"identifier": "getPosition", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "body": "@Override\n  public synchronized long getPosition() {\n    return metaCache.getOffset();\n  }", "signature": "long getPosition()", "full_signature": "@Override public synchronized long getPosition()", "class_method_signature": "DurablePositionTracker.getPosition()", "testcase": false, "constructor": false, "invocations": ["getOffset"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}