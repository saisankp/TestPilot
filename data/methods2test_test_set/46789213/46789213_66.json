{"test_class": {"identifier": "TestBroadcastingNetworkProxy", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Network validBroadcastNetwork = new BroadcastingNetworkProxy(new Network() {\n\n    @Override\n    public void send(int partyId, byte[] data) {}\n\n    @Override\n    public byte[] receive(int partyId) {\n      return null;\n    }\n\n    @Override\n    public int getNoOfParties() {\n      return 3;\n    }\n  }, null);", "modifier": "private final", "type": "Network", "declarator": "validBroadcastNetwork = new BroadcastingNetworkProxy(new Network() {\n\n    @Override\n    public void send(int partyId, byte[] data) {}\n\n    @Override\n    public byte[] receive(int partyId) {\n      return null;\n    }\n\n    @Override\n    public int getNoOfParties() {\n      return 3;\n    }\n  }, null)", "var_name": "validBroadcastNetwork"}], "file": "tools/mascot/src/test/java/dk/alexandra/fresco/tools/mascot/broadcast/TestBroadcastingNetworkProxy.java"}, "test_case": {"identifier": "testSendUnsupported", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n  public void testSendUnsupported() {\n    validBroadcastNetwork.send(1, null);\n  }", "signature": "void testSendUnsupported()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testSendUnsupported()", "class_method_signature": "TestBroadcastingNetworkProxy.testSendUnsupported()", "testcase": true, "constructor": false, "invocations": ["send"]}, "focal_class": {"identifier": "BroadcastingNetworkProxy", "superclass": "", "interfaces": "implements Network", "fields": [{"original_string": "private final Network network;", "modifier": "private final", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private final BroadcastValidation validator;", "modifier": "private final", "type": "BroadcastValidation", "declarator": "validator", "var_name": "validator"}], "methods": [{"identifier": "BroadcastingNetworkProxy", "parameters": "(Network network, BroadcastValidation validator)", "modifiers": "public", "return": "", "signature": " BroadcastingNetworkProxy(Network network, BroadcastValidation validator)", "full_signature": "public  BroadcastingNetworkProxy(Network network, BroadcastValidation validator)", "class_method_signature": "BroadcastingNetworkProxy.BroadcastingNetworkProxy(Network network, BroadcastValidation validator)", "testcase": false, "constructor": true}, {"identifier": "send", "parameters": "(int partyId, byte[] data)", "modifiers": "@Override public", "return": "void", "signature": "void send(int partyId, byte[] data)", "full_signature": "@Override public void send(int partyId, byte[] data)", "class_method_signature": "BroadcastingNetworkProxy.send(int partyId, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "(int partyId)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] receive(int partyId)", "full_signature": "@Override public byte[] receive(int partyId)", "class_method_signature": "BroadcastingNetworkProxy.receive(int partyId)", "testcase": false, "constructor": false}, {"identifier": "getNoOfParties", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNoOfParties()", "full_signature": "@Override public int getNoOfParties()", "class_method_signature": "BroadcastingNetworkProxy.getNoOfParties()", "testcase": false, "constructor": false}, {"identifier": "sendToAll", "parameters": "(byte[] data)", "modifiers": "@Override public", "return": "void", "signature": "void sendToAll(byte[] data)", "full_signature": "@Override public void sendToAll(byte[] data)", "class_method_signature": "BroadcastingNetworkProxy.sendToAll(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "receiveFromAll", "parameters": "()", "modifiers": "@Override public", "return": "List<byte[]>", "signature": "List<byte[]> receiveFromAll()", "full_signature": "@Override public List<byte[]> receiveFromAll()", "class_method_signature": "BroadcastingNetworkProxy.receiveFromAll()", "testcase": false, "constructor": false}], "file": "tools/mascot/src/main/java/dk/alexandra/fresco/tools/mascot/broadcast/BroadcastingNetworkProxy.java"}, "focal_method": {"identifier": "send", "parameters": "(int partyId, byte[] data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void send(int partyId, byte[] data) {\n    throw new UnsupportedOperationException(\"Broadcast network can only send to all\");\n  }", "signature": "void send(int partyId, byte[] data)", "full_signature": "@Override public void send(int partyId, byte[] data)", "class_method_signature": "BroadcastingNetworkProxy.send(int partyId, byte[] data)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}