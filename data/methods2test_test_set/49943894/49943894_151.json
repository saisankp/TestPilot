{"test_class": {"identifier": "ImageStoreUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/org/apache/cloudstack/utils/imagestore/ImageStoreUtilTest.java"}, "test_case": {"identifier": "testgeneratePostUploadUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testgeneratePostUploadUrl() throws MalformedURLException {\n        String ssvmdomain = \"*.realhostip.com\";\n        String ipAddress = \"10.147.28.14\";\n        String uuid = UUID.randomUUID().toString();\n\n        //ssvm domain is not set\n        String url = ImageStoreUtil.generatePostUploadUrl(null, ipAddress, uuid);\n        assertPostUploadUrl(url, ipAddress, uuid);\n\n        //ssvm domain is set to empty value\n        url = ImageStoreUtil.generatePostUploadUrl(\"\", ipAddress, uuid);\n        assertPostUploadUrl(url, ipAddress, uuid);\n\n        //ssvm domain is set to a valid value\n        url = ImageStoreUtil.generatePostUploadUrl(ssvmdomain, ipAddress, uuid);\n        assertPostUploadUrl(url, ipAddress.replace(\".\", \"-\") + ssvmdomain.substring(1), uuid);\n    }", "signature": "void testgeneratePostUploadUrl()", "full_signature": "@Test public void testgeneratePostUploadUrl()", "class_method_signature": "ImageStoreUtilTest.testgeneratePostUploadUrl()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "generatePostUploadUrl", "assertPostUploadUrl", "generatePostUploadUrl", "assertPostUploadUrl", "generatePostUploadUrl", "assertPostUploadUrl", "replace", "substring"]}, "focal_class": {"identifier": "ImageStoreUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Logger s_logger = LoggerFactory.getLogger(ImageStoreUtil.class.getName());", "modifier": "public static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(ImageStoreUtil.class.getName())", "var_name": "s_logger"}], "methods": [{"identifier": "generatePostUploadUrl", "parameters": "(String ssvmUrlDomain, String ipAddress, String uuid)", "modifiers": "public static", "return": "String", "signature": "String generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "full_signature": "public static String generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "class_method_signature": "ImageStoreUtil.generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "testcase": false, "constructor": false}, {"identifier": "checkTemplateFormat", "parameters": "(String path, String uripath)", "modifiers": "public static", "return": "String", "signature": "String checkTemplateFormat(String path, String uripath)", "full_signature": "public static String checkTemplateFormat(String path, String uripath)", "class_method_signature": "ImageStoreUtil.checkTemplateFormat(String path, String uripath)", "testcase": false, "constructor": false}, {"identifier": "isCorrectExtension", "parameters": "(String path, String ext)", "modifiers": "private static", "return": "boolean", "signature": "boolean isCorrectExtension(String path, String ext)", "full_signature": "private static boolean isCorrectExtension(String path, String ext)", "class_method_signature": "ImageStoreUtil.isCorrectExtension(String path, String ext)", "testcase": false, "constructor": false}, {"identifier": "isCompressedExtension", "parameters": "(String path)", "modifiers": "private static", "return": "boolean", "signature": "boolean isCompressedExtension(String path)", "full_signature": "private static boolean isCompressedExtension(String path)", "class_method_signature": "ImageStoreUtil.isCompressedExtension(String path)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/org/apache/cloudstack/utils/imagestore/ImageStoreUtil.java"}, "focal_method": {"identifier": "generatePostUploadUrl", "parameters": "(String ssvmUrlDomain, String ipAddress, String uuid)", "modifiers": "public static", "return": "String", "body": "public static String generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid) {\n    String hostname = ipAddress;\n\n    //if ssvm url domain is present, use it to construct hostname in the format 1-2-3-4.domain\n    // if the domain name is not present, ssl validation fails and has to be ignored\n    if(StringUtils.isNotBlank(ssvmUrlDomain)) {\n      hostname = ipAddress.replace(\".\", \"-\");\n      hostname = hostname + ssvmUrlDomain.substring(1);\n    }\n\n    //only https works with postupload and url format is fixed\n    return \"https://\" + hostname + \"/upload/\" + uuid;\n  }", "signature": "String generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "full_signature": "public static String generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "class_method_signature": "ImageStoreUtil.generatePostUploadUrl(String ssvmUrlDomain, String ipAddress, String uuid)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "replace", "substring"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}