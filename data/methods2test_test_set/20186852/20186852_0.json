{"test_class": {"identifier": "SelectUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "db/org.tinygroup.jsqlparser/src/test/java/org/tinygroup/jsqlparser/util/SelectUtilsTest.java"}, "test_case": {"identifier": "testAddExpr", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAddExpr() throws JSQLParserException {\n\t\tSelect select = (Select) CCJSqlParserUtil.parse(\"select a from mytable\");\n\t\tSelectUtils.addExpression(select, new Column(\"b\"));\n\t\tassertEquals(\"SELECT a, b FROM mytable\", select.toString());\n\t\t\n\t\tAddition add = new Addition();\n\t\tadd.setLeftExpression(new LongValue(5));\n\t\tadd.setRightExpression(new LongValue(6));\n\t\tSelectUtils.addExpression(select, add);\n\t\t\n\t\tassertEquals(\"SELECT a, b, 5 + 6 FROM mytable\", select.toString());\n\t}", "signature": "void testAddExpr()", "full_signature": "@Test public void testAddExpr()", "class_method_signature": "SelectUtilsTest.testAddExpr()", "testcase": true, "constructor": false, "invocations": ["parse", "addExpression", "assertEquals", "toString", "setLeftExpression", "setRightExpression", "addExpression", "assertEquals", "toString"]}, "focal_class": {"identifier": "SelectUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SelectUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SelectUtils()", "full_signature": "private  SelectUtils()", "class_method_signature": "SelectUtils.SelectUtils()", "testcase": false, "constructor": true}, {"identifier": "buildSelectFromTableAndExpressions", "parameters": "(Table table, Expression ... expr)", "modifiers": "public static", "return": "Select", "signature": "Select buildSelectFromTableAndExpressions(Table table, Expression ... expr)", "full_signature": "public static Select buildSelectFromTableAndExpressions(Table table, Expression ... expr)", "class_method_signature": "SelectUtils.buildSelectFromTableAndExpressions(Table table, Expression ... expr)", "testcase": false, "constructor": false}, {"identifier": "buildSelectFromTableAndExpressions", "parameters": "(Table table, String ... expr)", "modifiers": "public static", "return": "Select", "signature": "Select buildSelectFromTableAndExpressions(Table table, String ... expr)", "full_signature": "public static Select buildSelectFromTableAndExpressions(Table table, String ... expr)", "class_method_signature": "SelectUtils.buildSelectFromTableAndExpressions(Table table, String ... expr)", "testcase": false, "constructor": false}, {"identifier": "buildSelectFromTableAndSelectItems", "parameters": "(Table table, SelectItem ... selectItems)", "modifiers": "public static", "return": "Select", "signature": "Select buildSelectFromTableAndSelectItems(Table table, SelectItem ... selectItems)", "full_signature": "public static Select buildSelectFromTableAndSelectItems(Table table, SelectItem ... selectItems)", "class_method_signature": "SelectUtils.buildSelectFromTableAndSelectItems(Table table, SelectItem ... selectItems)", "testcase": false, "constructor": false}, {"identifier": "buildSelectFromTable", "parameters": "(Table table)", "modifiers": "public static", "return": "Select", "signature": "Select buildSelectFromTable(Table table)", "full_signature": "public static Select buildSelectFromTable(Table table)", "class_method_signature": "SelectUtils.buildSelectFromTable(Table table)", "testcase": false, "constructor": false}, {"identifier": "addExpression", "parameters": "(Select select, final Expression expr)", "modifiers": "public static", "return": "void", "signature": "void addExpression(Select select, final Expression expr)", "full_signature": "public static void addExpression(Select select, final Expression expr)", "class_method_signature": "SelectUtils.addExpression(Select select, final Expression expr)", "testcase": false, "constructor": false}, {"identifier": "addJoin", "parameters": "(Select select, final Table table, final Expression onExpression)", "modifiers": "public static", "return": "Join", "signature": "Join addJoin(Select select, final Table table, final Expression onExpression)", "full_signature": "public static Join addJoin(Select select, final Table table, final Expression onExpression)", "class_method_signature": "SelectUtils.addJoin(Select select, final Table table, final Expression onExpression)", "testcase": false, "constructor": false}], "file": "db/org.tinygroup.jsqlparser/src/main/java/org/tinygroup/jsqlparser/util/SelectUtils.java"}, "focal_method": {"identifier": "addExpression", "parameters": "(Select select, final Expression expr)", "modifiers": "public static", "return": "void", "body": "public static void addExpression(Select select, final Expression expr) {\n\t\tselect.getSelectBody().accept(new SelectVisitor() {\n\n\n\t\t\tpublic void visit(PlainSelect plainSelect) {\n\t\t\t\tplainSelect.getSelectItems().add(new SelectExpressionItem(expr));\n\t\t\t}\n\n\n\t\t\tpublic void visit(SetOperationList setOpList) {\n\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\");\n\t\t\t}\n\n\n\t\t\tpublic void visit(WithItem withItem) {\n\t\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\");\n\t\t\t}\n\t\t});\n\t}", "signature": "void addExpression(Select select, final Expression expr)", "full_signature": "public static void addExpression(Select select, final Expression expr)", "class_method_signature": "SelectUtils.addExpression(Select select, final Expression expr)", "testcase": false, "constructor": false, "invocations": ["accept", "getSelectBody", "add", "getSelectItems"]}, "repository": {"repo_id": 20186852, "url": "https://github.com/TinyGroup/tiny", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 4712, "license": "licensed"}}