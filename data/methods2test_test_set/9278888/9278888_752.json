{"test_class": {"identifier": "SamplingFlagsTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/propagation/SamplingFlagsTest.java"}, "test_case": {"identifier": "sampled_flags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void sampled_flags() {\n    assertThat(SamplingFlags.debug(false, SamplingFlags.DEBUG.flags))\n      .isEqualTo(SamplingFlags.SAMPLED.flags)\n      .isEqualTo(FLAG_SAMPLED_SET | FLAG_SAMPLED);\n  }", "signature": "void sampled_flags()", "full_signature": "@Test public void sampled_flags()", "class_method_signature": "SamplingFlagsTest.sampled_flags()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "isEqualTo", "assertThat", "debug"]}, "focal_class": {"identifier": "SamplingFlags", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final SamplingFlags EMPTY = new SamplingFlags(0);", "modifier": "public static final", "type": "SamplingFlags", "declarator": "EMPTY = new SamplingFlags(0)", "var_name": "EMPTY"}, {"original_string": "public static final SamplingFlags NOT_SAMPLED = new SamplingFlags(FLAG_SAMPLED_SET);", "modifier": "public static final", "type": "SamplingFlags", "declarator": "NOT_SAMPLED = new SamplingFlags(FLAG_SAMPLED_SET)", "var_name": "NOT_SAMPLED"}, {"original_string": "public static final SamplingFlags SAMPLED = new SamplingFlags(NOT_SAMPLED.flags | FLAG_SAMPLED);", "modifier": "public static final", "type": "SamplingFlags", "declarator": "SAMPLED = new SamplingFlags(NOT_SAMPLED.flags | FLAG_SAMPLED)", "var_name": "SAMPLED"}, {"original_string": "public static final SamplingFlags DEBUG = new SamplingFlags(SAMPLED.flags | FLAG_DEBUG);", "modifier": "public static final", "type": "SamplingFlags", "declarator": "DEBUG = new SamplingFlags(SAMPLED.flags | FLAG_DEBUG)", "var_name": "DEBUG"}, {"original_string": "final int flags;", "modifier": "final", "type": "int", "declarator": "flags", "var_name": "flags"}, {"original_string": "static final SamplingFlags\n    EMPTY_SAMPLED_LOCAL = new SamplingFlags(FLAG_SAMPLED_LOCAL),\n    NOT_SAMPLED_SAMPLED_LOCAL = new SamplingFlags(NOT_SAMPLED.flags | FLAG_SAMPLED_LOCAL),\n    SAMPLED_SAMPLED_LOCAL = new SamplingFlags(SAMPLED.flags | FLAG_SAMPLED_LOCAL),\n    DEBUG_SAMPLED_LOCAL = new SamplingFlags(DEBUG.flags | FLAG_SAMPLED_LOCAL);", "modifier": "static final", "type": "SamplingFlags", "declarator": "EMPTY_SAMPLED_LOCAL = new SamplingFlags(FLAG_SAMPLED_LOCAL)", "var_name": "EMPTY_SAMPLED_LOCAL"}], "methods": [{"identifier": "SamplingFlags", "parameters": "(int flags)", "modifiers": "", "return": "", "signature": " SamplingFlags(int flags)", "full_signature": "  SamplingFlags(int flags)", "class_method_signature": "SamplingFlags.SamplingFlags(int flags)", "testcase": false, "constructor": true}, {"identifier": "sampled", "parameters": "()", "modifiers": "@Nullable public final", "return": "Boolean", "signature": "Boolean sampled()", "full_signature": "@Nullable public final Boolean sampled()", "class_method_signature": "SamplingFlags.sampled()", "testcase": false, "constructor": false}, {"identifier": "sampledLocal", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean sampledLocal()", "full_signature": "public final boolean sampledLocal()", "class_method_signature": "SamplingFlags.sampledLocal()", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean debug()", "full_signature": "public final boolean debug()", "class_method_signature": "SamplingFlags.debug()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SamplingFlags.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int flags)", "modifiers": "static", "return": "String", "signature": "String toString(int flags)", "full_signature": "static String toString(int flags)", "class_method_signature": "SamplingFlags.toString(int flags)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(int flags)", "modifiers": "static", "return": "boolean", "signature": "boolean debug(int flags)", "full_signature": "static boolean debug(int flags)", "class_method_signature": "SamplingFlags.debug(int flags)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(boolean debug, int flags)", "modifiers": "static", "return": "int", "signature": "int debug(boolean debug, int flags)", "full_signature": "static int debug(boolean debug, int flags)", "class_method_signature": "SamplingFlags.debug(boolean debug, int flags)", "testcase": false, "constructor": false}, {"identifier": "toSamplingFlags", "parameters": "(int flags)", "modifiers": "static", "return": "SamplingFlags", "signature": "SamplingFlags toSamplingFlags(int flags)", "full_signature": "static SamplingFlags toSamplingFlags(int flags)", "class_method_signature": "SamplingFlags.toSamplingFlags(int flags)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/propagation/SamplingFlags.java"}, "focal_method": {"identifier": "debug", "parameters": "()", "modifiers": "public final", "return": "boolean", "body": "public final boolean debug() {\n    return debug(flags);\n  }", "signature": "boolean debug()", "full_signature": "public final boolean debug()", "class_method_signature": "SamplingFlags.debug()", "testcase": false, "constructor": false, "invocations": ["debug"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}