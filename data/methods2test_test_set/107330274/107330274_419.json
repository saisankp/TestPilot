{"test_class": {"identifier": "AggregatingJobServiceGatewayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JobStatus ACCEPTED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.Accepted).build();", "modifier": "private static final", "type": "JobStatus", "declarator": "ACCEPTED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.Accepted).build()", "var_name": "ACCEPTED_STATE"}, {"original_string": "private static final JobStatus KILL_INITIATED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.KillInitiated).build();", "modifier": "private static final", "type": "JobStatus", "declarator": "KILL_INITIATED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.KillInitiated).build()", "var_name": "KILL_INITIATED_STATE"}, {"original_string": "private static final JobStatus FINISHED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.Finished).build();", "modifier": "private static final", "type": "JobStatus", "declarator": "FINISHED_STATE = JobStatus.newBuilder().setState(JobStatus.JobState.Finished).build()", "var_name": "FINISHED_STATE"}, {"original_string": "private static final int TASKS_IN_GENERATED_JOBS = 10;", "modifier": "private static final", "type": "int", "declarator": "TASKS_IN_GENERATED_JOBS = 10", "var_name": "TASKS_IN_GENERATED_JOBS"}, {"original_string": "private static final long GRPC_REQUEST_TIMEOUT_MS = 1_000L;", "modifier": "private static final", "type": "long", "declarator": "GRPC_REQUEST_TIMEOUT_MS = 1_000L", "var_name": "GRPC_REQUEST_TIMEOUT_MS"}, {"original_string": "@Rule\n    public final GrpcServerRule cellOne = new GrpcServerRule().directExecutor();", "modifier": "@Rule\n    public final", "type": "GrpcServerRule", "declarator": "cellOne = new GrpcServerRule().directExecutor()", "var_name": "cellOne"}, {"original_string": "private final PublishSubject<JobChangeNotification> cellOneUpdates = PublishSubject.create();", "modifier": "private final", "type": "PublishSubject<JobChangeNotification>", "declarator": "cellOneUpdates = PublishSubject.create()", "var_name": "cellOneUpdates"}, {"original_string": "@Rule\n    public final GrpcServerRule cellTwo = new GrpcServerRule().directExecutor();", "modifier": "@Rule\n    public final", "type": "GrpcServerRule", "declarator": "cellTwo = new GrpcServerRule().directExecutor()", "var_name": "cellTwo"}, {"original_string": "private final PublishSubject<JobChangeNotification> cellTwoUpdates = PublishSubject.create();", "modifier": "private final", "type": "PublishSubject<JobChangeNotification>", "declarator": "cellTwoUpdates = PublishSubject.create()", "var_name": "cellTwoUpdates"}, {"original_string": "private String stackName;", "modifier": "private", "type": "String", "declarator": "stackName", "var_name": "stackName"}, {"original_string": "private AggregatingJobServiceGateway service;", "modifier": "private", "type": "AggregatingJobServiceGateway", "declarator": "service", "var_name": "service"}, {"original_string": "private List<Cell> cells;", "modifier": "private", "type": "List<Cell>", "declarator": "cells", "var_name": "cells"}, {"original_string": "private Map<Cell, GrpcServerRule> cellToServiceMap;", "modifier": "private", "type": "Map<Cell, GrpcServerRule>", "declarator": "cellToServiceMap", "var_name": "cellToServiceMap"}, {"original_string": "private TestClock clock;", "modifier": "private", "type": "TestClock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private ServiceDataGenerator dataGenerator;", "modifier": "private", "type": "ServiceDataGenerator", "declarator": "dataGenerator", "var_name": "dataGenerator"}], "file": "titus-server-federation/src/test/java/com/netflix/titus/federation/service/AggregatingJobServiceGatewayTest.java"}, "test_case": {"identifier": "singleJobUpdates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void singleJobUpdates() {\n        Random random = new Random();\n        List<String> cellOneSnapshot = new ArrayList<>(dataGenerator.newServiceJobs(12)).stream()\n                .map(job -> job.getId())\n                .collect(Collectors.toList());\n        List<String> cellTwoSnapshot = new ArrayList<>(dataGenerator.newBatchJobs(7)).stream()\n                .map(job -> job.getId())\n                .collect(Collectors.toList());\n        CellWithJobIds cellOneService = new CellWithJobIds(cellOneSnapshot);\n        CellWithJobIds cellTwoService = new CellWithJobIds(cellTwoSnapshot);\n        cellOne.getServiceRegistry().addService(cellOneService);\n        cellTwo.getServiceRegistry().addService(cellTwoService);\n\n        String cellOneJobId = cellOneSnapshot.get(random.nextInt(cellOneSnapshot.size()));\n        String cellTwoJobId = cellTwoSnapshot.get(random.nextInt(cellTwoSnapshot.size()));\n        assertThat(cellOneService.containsCapacityUpdates(cellOneJobId)).isFalse();\n        assertThat(cellTwoService.containsCapacityUpdates(cellOneJobId)).isFalse();\n\n        JobCapacityUpdate cellOneUpdate = JobCapacityUpdate.newBuilder()\n                .setJobId(cellOneJobId)\n                .setCapacity(Capacity.newBuilder()\n                        .setMax(1).setDesired(2).setMax(3)\n                        .build())\n                .build();\n        AssertableSubscriber<Void> testSubscriber = service.updateJobCapacity(cellOneUpdate, UNDEFINED_CALL_METADATA).test();\n        testSubscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n        testSubscriber.assertNoErrors();\n        testSubscriber.assertNoValues();\n        testSubscriber.assertCompleted();\n        assertThat(cellOneService.containsCapacityUpdates(cellOneJobId)).isTrue();\n        assertThat(cellTwoService.containsCapacityUpdates(cellOneJobId)).isFalse();\n        testSubscriber.unsubscribe();\n\n        JobCapacityUpdate cellTwoUpdate = JobCapacityUpdate.newBuilder()\n                .setJobId(cellTwoJobId)\n                .setCapacity(Capacity.newBuilder()\n                        .setMax(2).setDesired(2).setMax(2)\n                        .build())\n                .build();\n        testSubscriber = service.updateJobCapacity(cellTwoUpdate, UNDEFINED_CALL_METADATA).test();\n        testSubscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n        testSubscriber.assertNoErrors();\n        testSubscriber.assertNoValues();\n        testSubscriber.assertCompleted();\n        assertThat(cellOneService.containsCapacityUpdates(cellTwoJobId)).isFalse();\n        assertThat(cellTwoService.containsCapacityUpdates(cellTwoJobId)).isTrue();\n        testSubscriber.unsubscribe();\n    }", "signature": "void singleJobUpdates()", "full_signature": "@Test public void singleJobUpdates()", "class_method_signature": "AggregatingJobServiceGatewayTest.singleJobUpdates()", "testcase": true, "constructor": false, "invocations": ["collect", "map", "stream", "newServiceJobs", "getId", "toList", "collect", "map", "stream", "newBatchJobs", "getId", "toList", "addService", "getServiceRegistry", "addService", "getServiceRegistry", "get", "nextInt", "size", "get", "nextInt", "size", "isFalse", "assertThat", "containsCapacityUpdates", "isFalse", "assertThat", "containsCapacityUpdates", "build", "setCapacity", "setJobId", "newBuilder", "build", "setMax", "setDesired", "setMax", "newBuilder", "test", "updateJobCapacity", "awaitTerminalEvent", "assertNoErrors", "assertNoValues", "assertCompleted", "isTrue", "assertThat", "containsCapacityUpdates", "isFalse", "assertThat", "containsCapacityUpdates", "unsubscribe", "build", "setCapacity", "setJobId", "newBuilder", "build", "setMax", "setDesired", "setMax", "newBuilder", "test", "updateJobCapacity", "awaitTerminalEvent", "assertNoErrors", "assertNoValues", "assertCompleted", "isFalse", "assertThat", "containsCapacityUpdates", "isTrue", "assertThat", "containsCapacityUpdates", "unsubscribe"]}, "focal_class": {"identifier": "AggregatingJobServiceGateway", "superclass": "", "interfaces": "implements JobServiceGateway", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(AggregatingJobServiceGateway.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(AggregatingJobServiceGateway.class)", "var_name": "logger"}, {"original_string": "private static final Set<String> JOB_FEDERATION_MINIMUM_FIELD_SET = CollectionsExt.asSet(\"id\", \"status\", \"statusHistory\");", "modifier": "private static final", "type": "Set<String>", "declarator": "JOB_FEDERATION_MINIMUM_FIELD_SET = CollectionsExt.asSet(\"id\", \"status\", \"statusHistory\")", "var_name": "JOB_FEDERATION_MINIMUM_FIELD_SET"}, {"original_string": "private static final Set<String> TASK_FEDERATION_MINIMUM_FIELD_SET = CollectionsExt.asSet(\"id\", \"status\", \"statusHistory\");", "modifier": "private static final", "type": "Set<String>", "declarator": "TASK_FEDERATION_MINIMUM_FIELD_SET = CollectionsExt.asSet(\"id\", \"status\", \"statusHistory\")", "var_name": "TASK_FEDERATION_MINIMUM_FIELD_SET"}, {"original_string": "private final GrpcConfiguration grpcConfiguration;", "modifier": "private final", "type": "GrpcConfiguration", "declarator": "grpcConfiguration", "var_name": "grpcConfiguration"}, {"original_string": "private final TitusFederationConfiguration federationConfiguration;", "modifier": "private final", "type": "TitusFederationConfiguration", "declarator": "federationConfiguration", "var_name": "federationConfiguration"}, {"original_string": "private final CellConnector connector;", "modifier": "private final", "type": "CellConnector", "declarator": "connector", "var_name": "connector"}, {"original_string": "private final AggregatingCellClient aggregatingClient;", "modifier": "private final", "type": "AggregatingCellClient", "declarator": "aggregatingClient", "var_name": "aggregatingClient"}, {"original_string": "private AggregatingJobManagementServiceHelper jobManagementServiceHelper;", "modifier": "private", "type": "AggregatingJobManagementServiceHelper", "declarator": "jobManagementServiceHelper", "var_name": "jobManagementServiceHelper"}, {"original_string": "private final CellRouter router;", "modifier": "private final", "type": "CellRouter", "declarator": "router", "var_name": "router"}], "methods": [{"identifier": "AggregatingJobServiceGateway", "parameters": "(GrpcConfiguration grpcConfiguration,\n                                        TitusFederationConfiguration federationConfiguration,\n                                        CellConnector connector,\n                                        CellRouter router,\n                                        AggregatingCellClient aggregatingClient,\n                                        AggregatingJobManagementServiceHelper jobManagementServiceHelper)", "modifiers": "@Inject public", "return": "", "signature": " AggregatingJobServiceGateway(GrpcConfiguration grpcConfiguration,\n                                        TitusFederationConfiguration federationConfiguration,\n                                        CellConnector connector,\n                                        CellRouter router,\n                                        AggregatingCellClient aggregatingClient,\n                                        AggregatingJobManagementServiceHelper jobManagementServiceHelper)", "full_signature": "@Inject public  AggregatingJobServiceGateway(GrpcConfiguration grpcConfiguration,\n                                        TitusFederationConfiguration federationConfiguration,\n                                        CellConnector connector,\n                                        CellRouter router,\n                                        AggregatingCellClient aggregatingClient,\n                                        AggregatingJobManagementServiceHelper jobManagementServiceHelper)", "class_method_signature": "AggregatingJobServiceGateway.AggregatingJobServiceGateway(GrpcConfiguration grpcConfiguration,\n                                        TitusFederationConfiguration federationConfiguration,\n                                        CellConnector connector,\n                                        CellRouter router,\n                                        AggregatingCellClient aggregatingClient,\n                                        AggregatingJobManagementServiceHelper jobManagementServiceHelper)", "testcase": false, "constructor": true}, {"identifier": "createJob", "parameters": "(JobDescriptor jobDescriptor, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<String>", "signature": "Observable<String> createJob(JobDescriptor jobDescriptor, CallMetadata callMetadata)", "full_signature": "@Override public Observable<String> createJob(JobDescriptor jobDescriptor, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.createJob(JobDescriptor jobDescriptor, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobCapacity", "parameters": "(JobCapacityUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobCapacityWithOptionalAttributes", "parameters": "(JobCapacityUpdateWithOptionalAttributes request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable updateJobCapacityWithOptionalAttributes(JobCapacityUpdateWithOptionalAttributes request, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateJobCapacityWithOptionalAttributes(JobCapacityUpdateWithOptionalAttributes request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobCapacityWithOptionalAttributes(JobCapacityUpdateWithOptionalAttributes request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobProcesses", "parameters": "(JobProcessesUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable updateJobProcesses(JobProcessesUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateJobProcesses(JobProcessesUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobProcesses(JobProcessesUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobStatus", "parameters": "(JobStatusUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable updateJobStatus(JobStatusUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateJobStatus(JobStatusUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobStatus(JobStatusUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobDisruptionBudget", "parameters": "(JobDisruptionBudgetUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> updateJobDisruptionBudget(JobDisruptionBudgetUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Mono<Void> updateJobDisruptionBudget(JobDisruptionBudgetUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobDisruptionBudget(JobDisruptionBudgetUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateJobAttributes", "parameters": "(JobAttributesUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> updateJobAttributes(JobAttributesUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Mono<Void> updateJobAttributes(JobAttributesUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobAttributes(JobAttributesUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "deleteJobAttributes", "parameters": "(JobAttributesDeleteRequest request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> deleteJobAttributes(JobAttributesDeleteRequest request, CallMetadata callMetadata)", "full_signature": "@Override public Mono<Void> deleteJobAttributes(JobAttributesDeleteRequest request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.deleteJobAttributes(JobAttributesDeleteRequest request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findJob", "parameters": "(String jobId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<Job>", "signature": "Observable<Job> findJob(String jobId, CallMetadata callMetadata)", "full_signature": "@Override public Observable<Job> findJob(String jobId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findJob(String jobId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findJobs", "parameters": "(JobQuery request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<JobQueryResult>", "signature": "Observable<JobQueryResult> findJobs(JobQuery request, CallMetadata callMetadata)", "full_signature": "@Override public Observable<JobQueryResult> findJobs(JobQuery request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findJobs(JobQuery request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findJobsWithCursorPagination", "parameters": "(JobQuery request, Set<String> fields, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<JobQueryResult>", "signature": "Observable<JobQueryResult> findJobsWithCursorPagination(JobQuery request, Set<String> fields, CallMetadata callMetadata)", "full_signature": "private Observable<JobQueryResult> findJobsWithCursorPagination(JobQuery request, Set<String> fields, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findJobsWithCursorPagination(JobQuery request, Set<String> fields, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findJobsInCell", "parameters": "(JobQuery request, CallMetadata callMetadata)", "modifiers": "private", "return": "ClientCall<JobQueryResult>", "signature": "ClientCall<JobQueryResult> findJobsInCell(JobQuery request, CallMetadata callMetadata)", "full_signature": "private ClientCall<JobQueryResult> findJobsInCell(JobQuery request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findJobsInCell(JobQuery request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "combineJobResults", "parameters": "(JobQueryResult one, JobQueryResult other)", "modifiers": "private", "return": "JobQueryResult", "signature": "JobQueryResult combineJobResults(JobQueryResult one, JobQueryResult other)", "full_signature": "private JobQueryResult combineJobResults(JobQueryResult one, JobQueryResult other)", "class_method_signature": "AggregatingJobServiceGateway.combineJobResults(JobQueryResult one, JobQueryResult other)", "testcase": false, "constructor": false}, {"identifier": "observeJob", "parameters": "(String jobId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<JobChangeNotification>", "signature": "Observable<JobChangeNotification> observeJob(String jobId, CallMetadata callMetadata)", "full_signature": "@Override public Observable<JobChangeNotification> observeJob(String jobId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.observeJob(String jobId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "observeJobs", "parameters": "(ObserveJobsQuery query, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<JobChangeNotification>", "signature": "Observable<JobChangeNotification> observeJobs(ObserveJobsQuery query, CallMetadata callMetadata)", "full_signature": "@Override public Observable<JobChangeNotification> observeJobs(ObserveJobsQuery query, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.observeJobs(ObserveJobsQuery query, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "killJob", "parameters": "(String jobId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable killJob(String jobId, CallMetadata callMetadata)", "full_signature": "@Override public Completable killJob(String jobId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.killJob(String jobId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTask", "parameters": "(String taskId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<Task>", "signature": "Observable<Task> findTask(String taskId, CallMetadata callMetadata)", "full_signature": "@Override public Observable<Task> findTask(String taskId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTask(String taskId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTaskInAllCells", "parameters": "(String taskId, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<CellResponse<JobManagementServiceStub, Task>>", "signature": "Observable<CellResponse<JobManagementServiceStub, Task>> findTaskInAllCells(String taskId, CallMetadata callMetadata)", "full_signature": "private Observable<CellResponse<JobManagementServiceStub, Task>> findTaskInAllCells(String taskId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTaskInAllCells(String taskId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTaskInCell", "parameters": "(String taskId, CallMetadata callMetadata)", "modifiers": "private", "return": "ClientCall<Task>", "signature": "ClientCall<Task> findTaskInCell(String taskId, CallMetadata callMetadata)", "full_signature": "private ClientCall<Task> findTaskInCell(String taskId, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTaskInCell(String taskId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTasks", "parameters": "(TaskQuery request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<TaskQueryResult>", "signature": "Observable<TaskQueryResult> findTasks(TaskQuery request, CallMetadata callMetadata)", "full_signature": "@Override public Observable<TaskQueryResult> findTasks(TaskQuery request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTasks(TaskQuery request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTasksWithCursorPagination", "parameters": "(TaskQuery request, Set<String> fields, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<TaskQueryResult>", "signature": "Observable<TaskQueryResult> findTasksWithCursorPagination(TaskQuery request, Set<String> fields, CallMetadata callMetadata)", "full_signature": "private Observable<TaskQueryResult> findTasksWithCursorPagination(TaskQuery request, Set<String> fields, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTasksWithCursorPagination(TaskQuery request, Set<String> fields, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTasksInCell", "parameters": "(TaskQuery request, CallMetadata callMetadata)", "modifiers": "private", "return": "ClientCall<TaskQueryResult>", "signature": "ClientCall<TaskQueryResult> findTasksInCell(TaskQuery request, CallMetadata callMetadata)", "full_signature": "private ClientCall<TaskQueryResult> findTasksInCell(TaskQuery request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.findTasksInCell(TaskQuery request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "combineTaskResults", "parameters": "(TaskQueryResult one, TaskQueryResult other)", "modifiers": "private", "return": "TaskQueryResult", "signature": "TaskQueryResult combineTaskResults(TaskQueryResult one, TaskQueryResult other)", "full_signature": "private TaskQueryResult combineTaskResults(TaskQueryResult one, TaskQueryResult other)", "class_method_signature": "AggregatingJobServiceGateway.combineTaskResults(TaskQueryResult one, TaskQueryResult other)", "testcase": false, "constructor": false}, {"identifier": "killTask", "parameters": "(TaskKillRequest request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable killTask(TaskKillRequest request, CallMetadata callMetadata)", "full_signature": "@Override public Completable killTask(TaskKillRequest request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.killTask(TaskKillRequest request, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "updateTaskAttributes", "parameters": "(TaskAttributesUpdate attributesUpdate, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable updateTaskAttributes(TaskAttributesUpdate attributesUpdate, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateTaskAttributes(TaskAttributesUpdate attributesUpdate, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateTaskAttributes(TaskAttributesUpdate attributesUpdate, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "deleteTaskAttributes", "parameters": "(TaskAttributesDeleteRequest deleteRequest, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable deleteTaskAttributes(TaskAttributesDeleteRequest deleteRequest, CallMetadata callMetadata)", "full_signature": "@Override public Completable deleteTaskAttributes(TaskAttributesDeleteRequest deleteRequest, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.deleteTaskAttributes(TaskAttributesDeleteRequest deleteRequest, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "moveTask", "parameters": "(TaskMoveRequest taskMoveRequest, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable moveTask(TaskMoveRequest taskMoveRequest, CallMetadata callMetadata)", "full_signature": "@Override public Completable moveTask(TaskMoveRequest taskMoveRequest, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.moveTask(TaskMoveRequest taskMoveRequest, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(JobQueryResult result)", "modifiers": "private", "return": "JobQueryResult", "signature": "JobQueryResult addStackName(JobQueryResult result)", "full_signature": "private JobQueryResult addStackName(JobQueryResult result)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(JobQueryResult result)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(TaskQueryResult result)", "modifiers": "private", "return": "TaskQueryResult", "signature": "TaskQueryResult addStackName(TaskQueryResult result)", "full_signature": "private TaskQueryResult addStackName(TaskQueryResult result)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(TaskQueryResult result)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(JobDescriptor jobDescriptor)", "modifiers": "private", "return": "JobDescriptor", "signature": "JobDescriptor addStackName(JobDescriptor jobDescriptor)", "full_signature": "private JobDescriptor addStackName(JobDescriptor jobDescriptor)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(JobDescriptor jobDescriptor)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(Job job)", "modifiers": "private", "return": "Job", "signature": "Job addStackName(Job job)", "full_signature": "private Job addStackName(Job job)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(Job job)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(Task task)", "modifiers": "private", "return": "Task", "signature": "Task addStackName(Task task)", "full_signature": "private Task addStackName(Task task)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(Task task)", "testcase": false, "constructor": false}, {"identifier": "addStackName", "parameters": "(JobChangeNotification notification)", "modifiers": "private", "return": "JobChangeNotification", "signature": "JobChangeNotification addStackName(JobChangeNotification notification)", "full_signature": "private JobChangeNotification addStackName(JobChangeNotification notification)", "class_method_signature": "AggregatingJobServiceGateway.addStackName(JobChangeNotification notification)", "testcase": false, "constructor": false}, {"identifier": "buildJobSnapshotEndMarker", "parameters": "()", "modifiers": "private static", "return": "JobChangeNotification", "signature": "JobChangeNotification buildJobSnapshotEndMarker()", "full_signature": "private static JobChangeNotification buildJobSnapshotEndMarker()", "class_method_signature": "AggregatingJobServiceGateway.buildJobSnapshotEndMarker()", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(JobManagementServiceStub client, CallMetadata callMetadata)", "modifiers": "private", "return": "JobManagementServiceStub", "signature": "JobManagementServiceStub wrap(JobManagementServiceStub client, CallMetadata callMetadata)", "full_signature": "private JobManagementServiceStub wrap(JobManagementServiceStub client, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.wrap(JobManagementServiceStub client, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "wrapWithNoDeadline", "parameters": "(JobManagementServiceStub client, CallMetadata callMetadata)", "modifiers": "private", "return": "JobManagementServiceStub", "signature": "JobManagementServiceStub wrapWithNoDeadline(JobManagementServiceStub client, CallMetadata callMetadata)", "full_signature": "private JobManagementServiceStub wrapWithNoDeadline(JobManagementServiceStub client, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.wrapWithNoDeadline(JobManagementServiceStub client, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "singleCellCall", "parameters": "(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<T>", "signature": "Observable<T> singleCellCall(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "full_signature": "private Observable<T> singleCellCall(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.singleCellCall(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "singleCellCallReact", "parameters": "(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "modifiers": "private", "return": "Mono<T>", "signature": "Mono<T> singleCellCallReact(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "full_signature": "private Mono<T> singleCellCallReact(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.singleCellCallReact(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "singleCellCallWithNoDeadline", "parameters": "(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<T>", "signature": "Observable<T> singleCellCallWithNoDeadline(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "full_signature": "private Observable<T> singleCellCallWithNoDeadline(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.singleCellCallWithNoDeadline(Cell cell, ClientCall<T> clientCall, CallMetadata callMetadata)", "testcase": false, "constructor": false}], "file": "titus-server-federation/src/main/java/com/netflix/titus/federation/service/AggregatingJobServiceGateway.java"}, "focal_method": {"identifier": "updateJobCapacity", "parameters": "(JobCapacityUpdate request, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Completable", "body": "@Override\n    public Completable updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata) {\n        Observable<Empty> result = jobManagementServiceHelper.findJobInAllCells(request.getJobId(), callMetadata)\n                .flatMap(response -> singleCellCall(response.getCell(),\n                        (client, streamObserver) -> client.updateJobCapacity(request, streamObserver),\n                        callMetadata)\n                );\n        return result.toCompletable();\n    }", "signature": "Completable updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "full_signature": "@Override public Completable updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "class_method_signature": "AggregatingJobServiceGateway.updateJobCapacity(JobCapacityUpdate request, CallMetadata callMetadata)", "testcase": false, "constructor": false, "invocations": ["flatMap", "findJobInAllCells", "getJobId", "singleCellCall", "getCell", "updateJobCapacity", "toCompletable"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}