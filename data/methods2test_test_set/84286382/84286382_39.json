{"test_class": {"identifier": "PopUpCoachMarkPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    CoachMarkBuilder mCoachMarkBuilder;", "modifier": "@Mock", "type": "CoachMarkBuilder", "declarator": "mCoachMarkBuilder", "var_name": "mCoachMarkBuilder"}, {"original_string": "@Mock\n    IPopUpCoachMarkPresentation mPopUpCoachMarkPresentation;", "modifier": "@Mock", "type": "IPopUpCoachMarkPresentation", "declarator": "mPopUpCoachMarkPresentation", "var_name": "mPopUpCoachMarkPresentation"}, {"original_string": "@Mock\n    IStringResourceProvider mStringResourceProvider;", "modifier": "@Mock", "type": "IStringResourceProvider", "declarator": "mStringResourceProvider", "var_name": "mStringResourceProvider"}, {"original_string": "@Mock\n    IDimensionResourceProvider mDimensionResourceProvider;", "modifier": "@Mock", "type": "IDimensionResourceProvider", "declarator": "mDimensionResourceProvider", "var_name": "mDimensionResourceProvider"}, {"original_string": "@Mock\n    IScreenInfoProvider mScreenInfoProvider;", "modifier": "@Mock", "type": "IScreenInfoProvider", "declarator": "mScreenInfoProvider", "var_name": "mScreenInfoProvider"}, {"original_string": "@Mock\n    ITypeFaceProvider mTypeFaceProvider;", "modifier": "@Mock", "type": "ITypeFaceProvider", "declarator": "mTypeFaceProvider", "var_name": "mTypeFaceProvider"}, {"original_string": "@Mock\n    @StringRes\n    int mockedStringRes;", "modifier": "@Mock\n    @StringRes", "type": "int", "declarator": "mockedStringRes", "var_name": "mockedStringRes"}, {"original_string": "@Mock\n    @ColorRes\n    int mockedColorRes;", "modifier": "@Mock\n    @ColorRes", "type": "int", "declarator": "mockedColorRes", "var_name": "mockedColorRes"}, {"original_string": "@Mock\n    @DrawableRes\n    int mockedDrawableRes;", "modifier": "@Mock\n    @DrawableRes", "type": "int", "declarator": "mockedDrawableRes", "var_name": "mockedDrawableRes"}, {"original_string": "@Mock\n    CoachMarkLayoutMargin mCoachMarkLayoutMargin;", "modifier": "@Mock", "type": "CoachMarkLayoutMargin", "declarator": "mCoachMarkLayoutMargin", "var_name": "mCoachMarkLayoutMargin"}, {"original_string": "@Mock\n    ImageLayoutInformation mImageLayoutInformation;", "modifier": "@Mock", "type": "ImageLayoutInformation", "declarator": "mImageLayoutInformation", "var_name": "mImageLayoutInformation"}, {"original_string": "@Mock\n    @DimenRes\n    int mockedDimenRes;", "modifier": "@Mock\n    @DimenRes", "type": "int", "declarator": "mockedDimenRes", "var_name": "mockedDimenRes"}, {"original_string": "private PopUpCoachMarkPresenter mPopUpCoachMarkPresenter;", "modifier": "private", "type": "PopUpCoachMarkPresenter", "declarator": "mPopUpCoachMarkPresenter", "var_name": "mPopUpCoachMarkPresenter"}, {"original_string": "private CoachMarkPixelInfo mCoachMarkPixelInfo;", "modifier": "private", "type": "CoachMarkPixelInfo", "declarator": "mCoachMarkPixelInfo", "var_name": "mCoachMarkPixelInfo"}], "file": "coachmarks/src/test/java/com/myntra/coachmarks/ui/presenter/PopUpCoachMarkPresenterTest.java"}, "test_case": {"identifier": "getCorrectPositionOfCoachMarkIfDefaultFailsLeftPositionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCorrectPositionOfCoachMarkIfDefaultFailsLeftPositionTest(){\n\n        MockedPoint point = new MockedPoint(700, 1020);\n        assertEquals(PopUpPosition.LEFT, mPopUpCoachMarkPresenter.\n                getCorrectPositionOfCoachMarkIfDefaultFails(point, mCoachMarkPixelInfo));\n\n    }", "signature": "void getCorrectPositionOfCoachMarkIfDefaultFailsLeftPositionTest()", "full_signature": "@Test public void getCorrectPositionOfCoachMarkIfDefaultFailsLeftPositionTest()", "class_method_signature": "PopUpCoachMarkPresenterTest.getCorrectPositionOfCoachMarkIfDefaultFailsLeftPositionTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCorrectPositionOfCoachMarkIfDefaultFails"]}, "focal_class": {"identifier": "PopUpCoachMarkPresenter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = PopUpCoachMarkPresenter.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = PopUpCoachMarkPresenter.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static final double MAX_NOTCH_RANGE = .85;", "modifier": "private static final", "type": "double", "declarator": "MAX_NOTCH_RANGE = .85", "var_name": "MAX_NOTCH_RANGE"}, {"original_string": "private static final double MIN_NOTCH_RANGE = 0.0;", "modifier": "private static final", "type": "double", "declarator": "MIN_NOTCH_RANGE = 0.0", "var_name": "MIN_NOTCH_RANGE"}, {"original_string": "private static final int NO_MARGIN = 0;", "modifier": "private static final", "type": "int", "declarator": "NO_MARGIN = 0", "var_name": "NO_MARGIN"}, {"original_string": "private static final float ROTATION_0 = 0;", "modifier": "private static final", "type": "float", "declarator": "ROTATION_0 = 0", "var_name": "ROTATION_0"}, {"original_string": "private static final float ROTATION_90 = 90;", "modifier": "private static final", "type": "float", "declarator": "ROTATION_90 = 90", "var_name": "ROTATION_90"}, {"original_string": "private static final float ROTATION_180 = 180;", "modifier": "private static final", "type": "float", "declarator": "ROTATION_180 = 180", "var_name": "ROTATION_180"}, {"original_string": "private static final float ROTATION_270 = 270;", "modifier": "private static final", "type": "float", "declarator": "ROTATION_270 = 270", "var_name": "ROTATION_270"}, {"original_string": "private static final double MULTIPLICATION_FACTOR_NOTCH_POSITION = 1.8;", "modifier": "private static final", "type": "double", "declarator": "MULTIPLICATION_FACTOR_NOTCH_POSITION = 1.8", "var_name": "MULTIPLICATION_FACTOR_NOTCH_POSITION"}, {"original_string": "private static final double MULTIPLICATION_FACTOR_FOR_NOTCH_UI_ADJUSTMENT_BOTTOM = 2.9;", "modifier": "private static final", "type": "double", "declarator": "MULTIPLICATION_FACTOR_FOR_NOTCH_UI_ADJUSTMENT_BOTTOM = 2.9", "var_name": "MULTIPLICATION_FACTOR_FOR_NOTCH_UI_ADJUSTMENT_BOTTOM"}, {"original_string": "private static final double MULTIPLICATION_FACTOR_FOR_UI_ADJUSTMENT_RIGHT = 0.4;", "modifier": "private static final", "type": "double", "declarator": "MULTIPLICATION_FACTOR_FOR_UI_ADJUSTMENT_RIGHT = 0.4", "var_name": "MULTIPLICATION_FACTOR_FOR_UI_ADJUSTMENT_RIGHT"}, {"original_string": "private static final double PIXEL_ADJUSTMENT_NOTCH = 0.5;", "modifier": "private static final", "type": "double", "declarator": "PIXEL_ADJUSTMENT_NOTCH = 0.5", "var_name": "PIXEL_ADJUSTMENT_NOTCH"}, {"original_string": "private CoachMarkBuilder mCoachMarkBuilder;", "modifier": "private", "type": "CoachMarkBuilder", "declarator": "mCoachMarkBuilder", "var_name": "mCoachMarkBuilder"}, {"original_string": "private IPopUpCoachMarkPresentation mPresentation;", "modifier": "private", "type": "IPopUpCoachMarkPresentation", "declarator": "mPresentation", "var_name": "mPresentation"}, {"original_string": "private ITypeFaceProvider mTypeFaceProvider;", "modifier": "private", "type": "ITypeFaceProvider", "declarator": "mTypeFaceProvider", "var_name": "mTypeFaceProvider"}, {"original_string": "private IScreenInfoProvider mScreenInfoProvider;", "modifier": "private", "type": "IScreenInfoProvider", "declarator": "mScreenInfoProvider", "var_name": "mScreenInfoProvider"}, {"original_string": "private IStringResourceProvider mStringResourceProvider;", "modifier": "private", "type": "IStringResourceProvider", "declarator": "mStringResourceProvider", "var_name": "mStringResourceProvider"}, {"original_string": "private IDimensionResourceProvider mDimensionResourceProvider;", "modifier": "private", "type": "IDimensionResourceProvider", "declarator": "mDimensionResourceProvider", "var_name": "mDimensionResourceProvider"}], "methods": [{"identifier": "PopUpCoachMarkPresenter", "parameters": "(final IStringResourceProvider stringResourceProvider,\n                                   final IDimensionResourceProvider dimensionResourceProvider,\n                                   final ITypeFaceProvider typeFaceProvider,\n                                   final IScreenInfoProvider screenInfoProvider)", "modifiers": "public", "return": "", "signature": " PopUpCoachMarkPresenter(final IStringResourceProvider stringResourceProvider,\n                                   final IDimensionResourceProvider dimensionResourceProvider,\n                                   final ITypeFaceProvider typeFaceProvider,\n                                   final IScreenInfoProvider screenInfoProvider)", "full_signature": "public  PopUpCoachMarkPresenter(final IStringResourceProvider stringResourceProvider,\n                                   final IDimensionResourceProvider dimensionResourceProvider,\n                                   final ITypeFaceProvider typeFaceProvider,\n                                   final IScreenInfoProvider screenInfoProvider)", "class_method_signature": "PopUpCoachMarkPresenter.PopUpCoachMarkPresenter(final IStringResourceProvider stringResourceProvider,\n                                   final IDimensionResourceProvider dimensionResourceProvider,\n                                   final ITypeFaceProvider typeFaceProvider,\n                                   final IScreenInfoProvider screenInfoProvider)", "testcase": false, "constructor": true}, {"identifier": "onCreate", "parameters": "(CoachMarkBuilder coachMarkBuilder)", "modifiers": "public", "return": "void", "signature": "void onCreate(CoachMarkBuilder coachMarkBuilder)", "full_signature": "public void onCreate(CoachMarkBuilder coachMarkBuilder)", "class_method_signature": "PopUpCoachMarkPresenter.onCreate(CoachMarkBuilder coachMarkBuilder)", "testcase": false, "constructor": false}, {"identifier": "onCreateView", "parameters": "(IPopUpCoachMarkPresentation popUpCoachMarkPresentation)", "modifiers": "public", "return": "void", "signature": "void onCreateView(IPopUpCoachMarkPresentation popUpCoachMarkPresentation)", "full_signature": "public void onCreateView(IPopUpCoachMarkPresentation popUpCoachMarkPresentation)", "class_method_signature": "PopUpCoachMarkPresenter.onCreateView(IPopUpCoachMarkPresentation popUpCoachMarkPresentation)", "testcase": false, "constructor": false}, {"identifier": "onViewCreated", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onViewCreated()", "full_signature": "public void onViewCreated()", "class_method_signature": "PopUpCoachMarkPresenter.onViewCreated()", "testcase": false, "constructor": false}, {"identifier": "onDestroyView", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onDestroyView()", "full_signature": "public void onDestroyView()", "class_method_signature": "PopUpCoachMarkPresenter.onDestroyView()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onDestroy()", "full_signature": "public void onDestroy()", "class_method_signature": "PopUpCoachMarkPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onOkButtonClicked", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onOkButtonClicked()", "full_signature": "public void onOkButtonClicked()", "class_method_signature": "PopUpCoachMarkPresenter.onOkButtonClicked()", "testcase": false, "constructor": false}, {"identifier": "onShimClicked", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onShimClicked()", "full_signature": "public void onShimClicked()", "class_method_signature": "PopUpCoachMarkPresenter.onShimClicked()", "testcase": false, "constructor": false}, {"identifier": "displayCoachMark", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void displayCoachMark()", "full_signature": "protected void displayCoachMark()", "class_method_signature": "PopUpCoachMarkPresenter.displayCoachMark()", "testcase": false, "constructor": false}, {"identifier": "setMessageForCoachMarkText", "parameters": "(@StringRes int messageForCoachMarkTextRes)", "modifiers": "protected", "return": "void", "signature": "void setMessageForCoachMarkText(@StringRes int messageForCoachMarkTextRes)", "full_signature": "protected void setMessageForCoachMarkText(@StringRes int messageForCoachMarkTextRes)", "class_method_signature": "PopUpCoachMarkPresenter.setMessageForCoachMarkText(@StringRes int messageForCoachMarkTextRes)", "testcase": false, "constructor": false}, {"identifier": "setTypeFaceForDismissButton", "parameters": "(@Nullable String fontFileForDismissButton)", "modifiers": "protected", "return": "void", "signature": "void setTypeFaceForDismissButton(@Nullable String fontFileForDismissButton)", "full_signature": "protected void setTypeFaceForDismissButton(@Nullable String fontFileForDismissButton)", "class_method_signature": "PopUpCoachMarkPresenter.setTypeFaceForDismissButton(@Nullable String fontFileForDismissButton)", "testcase": false, "constructor": false}, {"identifier": "setTypeFaceForCoachMarkText", "parameters": "(@Nullable String fontFileForPopUpText)", "modifiers": "protected", "return": "void", "signature": "void setTypeFaceForCoachMarkText(@Nullable String fontFileForPopUpText)", "full_signature": "protected void setTypeFaceForCoachMarkText(@Nullable String fontFileForPopUpText)", "class_method_signature": "PopUpCoachMarkPresenter.setTypeFaceForCoachMarkText(@Nullable String fontFileForPopUpText)", "testcase": false, "constructor": false}, {"identifier": "setGravityForCoachMarkText", "parameters": "(int textAlignmentForPopUpText)", "modifiers": "protected", "return": "void", "signature": "void setGravityForCoachMarkText(int textAlignmentForPopUpText)", "full_signature": "protected void setGravityForCoachMarkText(int textAlignmentForPopUpText)", "class_method_signature": "PopUpCoachMarkPresenter.setGravityForCoachMarkText(int textAlignmentForPopUpText)", "testcase": false, "constructor": false}, {"identifier": "setNotchDisplayEdge", "parameters": "(int position,\n                                     int anchorTopY,\n                                     int anchorBottomY,\n                                     int anchorTopX,\n                                     CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "void", "signature": "void setNotchDisplayEdge(int position,\n                                     int anchorTopY,\n                                     int anchorBottomY,\n                                     int anchorTopX,\n                                     CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected void setNotchDisplayEdge(int position,\n                                     int anchorTopY,\n                                     int anchorBottomY,\n                                     int anchorTopX,\n                                     CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.setNotchDisplayEdge(int position,\n                                     int anchorTopY,\n                                     int anchorBottomY,\n                                     int anchorTopX,\n                                     CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "getMarginLeftForNotch", "parameters": "(double notchPosition, int popUpWidth, int notchDimen)", "modifiers": "protected", "return": "int", "signature": "int getMarginLeftForNotch(double notchPosition, int popUpWidth, int notchDimen)", "full_signature": "protected int getMarginLeftForNotch(double notchPosition, int popUpWidth, int notchDimen)", "class_method_signature": "PopUpCoachMarkPresenter.getMarginLeftForNotch(double notchPosition, int popUpWidth, int notchDimen)", "testcase": false, "constructor": false}, {"identifier": "getMarginTopForNotch", "parameters": "(double notchPosition, int popUpHeight, int notchDimen)", "modifiers": "protected", "return": "int", "signature": "int getMarginTopForNotch(double notchPosition, int popUpHeight, int notchDimen)", "full_signature": "protected int getMarginTopForNotch(double notchPosition, int popUpHeight, int notchDimen)", "class_method_signature": "PopUpCoachMarkPresenter.getMarginTopForNotch(double notchPosition, int popUpHeight, int notchDimen)", "testcase": false, "constructor": false}, {"identifier": "detectAndCreateShimOutViews", "parameters": "(@Nullable List<InfoForViewToMask> infoForViewToMaskList)", "modifiers": "protected", "return": "void", "signature": "void detectAndCreateShimOutViews(@Nullable List<InfoForViewToMask> infoForViewToMaskList)", "full_signature": "protected void detectAndCreateShimOutViews(@Nullable List<InfoForViewToMask> infoForViewToMaskList)", "class_method_signature": "PopUpCoachMarkPresenter.detectAndCreateShimOutViews(@Nullable List<InfoForViewToMask> infoForViewToMaskList)", "testcase": false, "constructor": false}, {"identifier": "findCoachMarkTextPopUpDisplayPosition", "parameters": "(Point anchorTop,\n                                                      Point anchorBottom,\n                                                      @PopUpPosition int defaultPopUpPosition,\n                                                      CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "@PopUpPosition protected", "return": "int", "signature": "int findCoachMarkTextPopUpDisplayPosition(Point anchorTop,\n                                                      Point anchorBottom,\n                                                      @PopUpPosition int defaultPopUpPosition,\n                                                      CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "@PopUpPosition protected int findCoachMarkTextPopUpDisplayPosition(Point anchorTop,\n                                                      Point anchorBottom,\n                                                      @PopUpPosition int defaultPopUpPosition,\n                                                      CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.findCoachMarkTextPopUpDisplayPosition(Point anchorTop,\n                                                      Point anchorBottom,\n                                                      @PopUpPosition int defaultPopUpPosition,\n                                                      CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "setImageParamsAndPosition", "parameters": "(Point anchorTop, Point anchorBottom,\n                                           int imageWidth, int imageHeight,\n                                           @ColorRes int backGroundTintForImage,\n                                           @DrawableRes int imageDrawableRes)", "modifiers": "protected", "return": "void", "signature": "void setImageParamsAndPosition(Point anchorTop, Point anchorBottom,\n                                           int imageWidth, int imageHeight,\n                                           @ColorRes int backGroundTintForImage,\n                                           @DrawableRes int imageDrawableRes)", "full_signature": "protected void setImageParamsAndPosition(Point anchorTop, Point anchorBottom,\n                                           int imageWidth, int imageHeight,\n                                           @ColorRes int backGroundTintForImage,\n                                           @DrawableRes int imageDrawableRes)", "class_method_signature": "PopUpCoachMarkPresenter.setImageParamsAndPosition(Point anchorTop, Point anchorBottom,\n                                           int imageWidth, int imageHeight,\n                                           @ColorRes int backGroundTintForImage,\n                                           @DrawableRes int imageDrawableRes)", "testcase": false, "constructor": false}, {"identifier": "showCoachMark", "parameters": "(@DialogDismissButtonPosition int dismissButtonPosition,\n                               @PopUpPosition int popUpPosition)", "modifiers": "protected", "return": "void", "signature": "void showCoachMark(@DialogDismissButtonPosition int dismissButtonPosition,\n                               @PopUpPosition int popUpPosition)", "full_signature": "protected void showCoachMark(@DialogDismissButtonPosition int dismissButtonPosition,\n                               @PopUpPosition int popUpPosition)", "class_method_signature": "PopUpCoachMarkPresenter.showCoachMark(@DialogDismissButtonPosition int dismissButtonPosition,\n                               @PopUpPosition int popUpPosition)", "testcase": false, "constructor": false}, {"identifier": "getDisplayPosition", "parameters": "(Point viewCenterPoint,\n                                   @PopUpPosition int defaultPopUpPosition,\n                                   CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "@PopUpPosition protected", "return": "int", "signature": "int getDisplayPosition(Point viewCenterPoint,\n                                   @PopUpPosition int defaultPopUpPosition,\n                                   CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "@PopUpPosition protected int getDisplayPosition(Point viewCenterPoint,\n                                   @PopUpPosition int defaultPopUpPosition,\n                                   CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.getDisplayPosition(Point viewCenterPoint,\n                                   @PopUpPosition int defaultPopUpPosition,\n                                   CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "checkIfLeftPossible", "parameters": "(Point viewCenterPoint,\n                                        CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkIfLeftPossible(Point viewCenterPoint,\n                                        CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected boolean checkIfLeftPossible(Point viewCenterPoint,\n                                        CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.checkIfLeftPossible(Point viewCenterPoint,\n                                        CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "checkIfRightPossible", "parameters": "(Point viewCenterPoint,\n                                         CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkIfRightPossible(Point viewCenterPoint,\n                                         CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected boolean checkIfRightPossible(Point viewCenterPoint,\n                                         CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.checkIfRightPossible(Point viewCenterPoint,\n                                         CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "checkIfTopPossible", "parameters": "(Point viewCenterPoint,\n                                       CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkIfTopPossible(Point viewCenterPoint,\n                                       CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected boolean checkIfTopPossible(Point viewCenterPoint,\n                                       CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.checkIfTopPossible(Point viewCenterPoint,\n                                       CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "checkIfBottomPossible", "parameters": "(Point viewCenterPoint,\n                                          CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkIfBottomPossible(Point viewCenterPoint,\n                                          CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected boolean checkIfBottomPossible(Point viewCenterPoint,\n                                          CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.checkIfBottomPossible(Point viewCenterPoint,\n                                          CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "getCorrectPositionOfCoachMarkIfDefaultFails", "parameters": "(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "@PopUpPosition protected", "return": "int", "signature": "int getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "@PopUpPosition protected int getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "createCoachMarkPixelInfo", "parameters": "()", "modifiers": "protected", "return": "CoachMarkPixelInfo", "signature": "CoachMarkPixelInfo createCoachMarkPixelInfo()", "full_signature": "protected CoachMarkPixelInfo createCoachMarkPixelInfo()", "class_method_signature": "PopUpCoachMarkPresenter.createCoachMarkPixelInfo()", "testcase": false, "constructor": false}, {"identifier": "getActualTopMargin", "parameters": "(int centerTopY, CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "int", "signature": "int getActualTopMargin(int centerTopY, CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected int getActualTopMargin(int centerTopY, CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.getActualTopMargin(int centerTopY, CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}, {"identifier": "getActualLeftMargin", "parameters": "(int anchorTopX, CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "protected", "return": "int", "signature": "int getActualLeftMargin(int anchorTopX, CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "protected int getActualLeftMargin(int anchorTopX, CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.getActualLeftMargin(int anchorTopX, CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false}], "file": "coachmarks/src/main/java/com/myntra/coachmarks/ui/presenter/PopUpCoachMarkPresenter.java"}, "focal_method": {"identifier": "getCorrectPositionOfCoachMarkIfDefaultFails", "parameters": "(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "modifiers": "@PopUpPosition protected", "return": "int", "body": "@PopUpPosition\n    protected int getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel) {\n\n        @PopUpPosition\n        int correctPopUpPosition = PopUpPosition.NONE;\n\n        if (checkIfRightPossible(viewCenterPoint, coachMarkDimenInPixel))\n            correctPopUpPosition = PopUpPosition.RIGHT;\n        else if (checkIfBottomPossible(viewCenterPoint, coachMarkDimenInPixel))\n            correctPopUpPosition = PopUpPosition.BOTTOM;\n        else if (checkIfLeftPossible(viewCenterPoint, coachMarkDimenInPixel))\n            correctPopUpPosition = PopUpPosition.LEFT;\n        else if (checkIfTopPossible(viewCenterPoint, coachMarkDimenInPixel))\n            correctPopUpPosition = PopUpPosition.TOP;\n\n        return correctPopUpPosition;\n    }", "signature": "int getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "full_signature": "@PopUpPosition protected int getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "class_method_signature": "PopUpCoachMarkPresenter.getCorrectPositionOfCoachMarkIfDefaultFails(Point viewCenterPoint,\n                                                            CoachMarkPixelInfo coachMarkDimenInPixel)", "testcase": false, "constructor": false, "invocations": ["checkIfRightPossible", "checkIfBottomPossible", "checkIfLeftPossible", "checkIfTopPossible"]}, "repository": {"repo_id": 84286382, "url": "https://github.com/myntra/CoachMarks", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 28, "size": 18753, "license": "licensed"}}