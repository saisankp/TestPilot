{"test_class": {"identifier": "ParallelJobsFutureTest", "superclass": "", "interfaces": "", "fields": [], "file": "sdk/src/test/java/com/centurylink/cloud/sdk/base/services/dsl/domain/queue/job/future/ParallelJobsFutureTest.java"}, "test_case": {"identifier": "testWaitAsync", "parameters": "()", "modifiers": "@Test(timeOut = 3000L) public", "return": "void", "body": "@Test(timeOut = 3000L)\n    public void testWaitAsync() throws Exception {\n        new ParallelJobsFuture(successJobFutures(3))\n            .waitAsync()\n            .join();\n    }", "signature": "void testWaitAsync()", "full_signature": "@Test(timeOut = 3000L) public void testWaitAsync()", "class_method_signature": "ParallelJobsFutureTest.testWaitAsync()", "testcase": true, "constructor": false, "invocations": ["join", "waitAsync", "successJobFutures"]}, "focal_class": {"identifier": "ParallelJobsFuture", "superclass": "", "interfaces": "implements JobFuture", "fields": [{"original_string": "private final ErrorsContainer errors =\n            new ErrorsContainer(msg -> new JobFailedException(msg));", "modifier": "private final", "type": "ErrorsContainer", "declarator": "errors =\n            new ErrorsContainer(msg -> new JobFailedException(msg))", "var_name": "errors"}, {"original_string": "private final Stream<JobFuture> jobs;", "modifier": "private final", "type": "Stream<JobFuture>", "declarator": "jobs", "var_name": "jobs"}], "methods": [{"identifier": "ParallelJobsFuture", "parameters": "(JobFuture... jobs)", "modifiers": "public", "return": "", "signature": " ParallelJobsFuture(JobFuture... jobs)", "full_signature": "public  ParallelJobsFuture(JobFuture... jobs)", "class_method_signature": "ParallelJobsFuture.ParallelJobsFuture(JobFuture... jobs)", "testcase": false, "constructor": true}, {"identifier": "ParallelJobsFuture", "parameters": "(List<JobFuture> jobs)", "modifiers": "public", "return": "", "signature": " ParallelJobsFuture(List<JobFuture> jobs)", "full_signature": "public  ParallelJobsFuture(List<JobFuture> jobs)", "class_method_signature": "ParallelJobsFuture.ParallelJobsFuture(List<JobFuture> jobs)", "testcase": false, "constructor": true}, {"identifier": "ParallelJobsFuture", "parameters": "(List<JobInfo> jobInfoList, QueueClient queueClient)", "modifiers": "public", "return": "", "signature": " ParallelJobsFuture(List<JobInfo> jobInfoList, QueueClient queueClient)", "full_signature": "public  ParallelJobsFuture(List<JobInfo> jobInfoList, QueueClient queueClient)", "class_method_signature": "ParallelJobsFuture.ParallelJobsFuture(List<JobInfo> jobInfoList, QueueClient queueClient)", "testcase": false, "constructor": true}, {"identifier": "waitUntilComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void waitUntilComplete()", "full_signature": "@Override public void waitUntilComplete()", "class_method_signature": "ParallelJobsFuture.waitUntilComplete()", "testcase": false, "constructor": false}, {"identifier": "waitUntilComplete", "parameters": "(Duration timeout)", "modifiers": "@Override public", "return": "void", "signature": "void waitUntilComplete(Duration timeout)", "full_signature": "@Override public void waitUntilComplete(Duration timeout)", "class_method_signature": "ParallelJobsFuture.waitUntilComplete(Duration timeout)", "testcase": false, "constructor": false}, {"identifier": "forEachFuture", "parameters": "(Consumer<JobFuture> func)", "modifiers": "private", "return": "void", "signature": "void forEachFuture(Consumer<JobFuture> func)", "full_signature": "private void forEachFuture(Consumer<JobFuture> func)", "class_method_signature": "ParallelJobsFuture.forEachFuture(Consumer<JobFuture> func)", "testcase": false, "constructor": false}, {"identifier": "waitAsync", "parameters": "()", "modifiers": "@Override public", "return": "CompletableFuture<Void>", "signature": "CompletableFuture<Void> waitAsync()", "full_signature": "@Override public CompletableFuture<Void> waitAsync()", "class_method_signature": "ParallelJobsFuture.waitAsync()", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "(Stream<CompletableFuture> futures)", "modifiers": "private", "return": "CompletableFuture[]", "signature": "CompletableFuture[] array(Stream<CompletableFuture> futures)", "full_signature": "private CompletableFuture[] array(Stream<CompletableFuture> futures)", "class_method_signature": "ParallelJobsFuture.array(Stream<CompletableFuture> futures)", "testcase": false, "constructor": false}, {"identifier": "throwSummaryExceptionIfNeeded", "parameters": "(Void val)", "modifiers": "private", "return": "Void", "signature": "Void throwSummaryExceptionIfNeeded(Void val)", "full_signature": "private Void throwSummaryExceptionIfNeeded(Void val)", "class_method_signature": "ParallelJobsFuture.throwSummaryExceptionIfNeeded(Void val)", "testcase": false, "constructor": false}, {"identifier": "collectErrors", "parameters": "(Throwable ex)", "modifiers": "private", "return": "Void", "signature": "Void collectErrors(Throwable ex)", "full_signature": "private Void collectErrors(Throwable ex)", "class_method_signature": "ParallelJobsFuture.collectErrors(Throwable ex)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/centurylink/cloud/sdk/base/services/dsl/domain/queue/job/future/ParallelJobsFuture.java"}, "focal_method": {"identifier": "waitAsync", "parameters": "()", "modifiers": "@Override public", "return": "CompletableFuture<Void>", "body": "@Override\n    public CompletableFuture<Void> waitAsync() {\n        Stream<CompletableFuture> futures =\n            jobs\n                .map(JobFuture::waitAsync)\n                .map(curFuture -> curFuture.exceptionally(this::collectErrors));\n\n        return\n            CompletableFuture\n                .allOf(array(futures))\n                .thenApply(this::throwSummaryExceptionIfNeeded);\n    }", "signature": "CompletableFuture<Void> waitAsync()", "full_signature": "@Override public CompletableFuture<Void> waitAsync()", "class_method_signature": "ParallelJobsFuture.waitAsync()", "testcase": false, "constructor": false, "invocations": ["map", "map", "exceptionally", "thenApply", "allOf", "array"]}, "repository": {"repo_id": 31234709, "url": "https://github.com/CenturyLinkCloud/clc-java-sdk", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 5036, "license": "licensed"}}