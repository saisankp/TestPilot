{"test_class": {"identifier": "LegacyGcStatsDataSeriesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final FakeMemoryService myService = new FakeMemoryService();", "modifier": "private final", "type": "FakeMemoryService", "declarator": "myService = new FakeMemoryService()", "var_name": "myService"}, {"original_string": "@Rule public FakeGrpcChannel myGrpcChannel = new FakeGrpcChannel(\"AllocationInfosDataSeriesTest\", myService);", "modifier": "@Rule public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel = new FakeGrpcChannel(\"AllocationInfosDataSeriesTest\", myService)", "var_name": "myGrpcChannel"}], "file": "profilers/testSrc/com/android/tools/profilers/memory/LegacyGcStatsDataSeriesTest.java"}, "test_case": {"identifier": "testGetDataForXRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetDataForXRange() throws Exception {\n    MemoryData memoryData = MemoryData.newBuilder()\n      .setEndTimestamp(1)\n      .addGcStatsSamples(\n        MemoryData.GcStatsSample.newBuilder().setStartTime(TimeUnit.MICROSECONDS.toNanos(3))\n          .setEndTime(TimeUnit.MICROSECONDS.toNanos(7)))\n      .addGcStatsSamples(\n        MemoryData.GcStatsSample.newBuilder().setStartTime(TimeUnit.MICROSECONDS.toNanos(14))\n          .setEndTime(TimeUnit.MICROSECONDS.toNanos(17)))\n      .build();\n    myService.setMemoryData(memoryData);\n\n    LegacyGcStatsDataSeries\n      series = new LegacyGcStatsDataSeries(new ProfilerClient(myGrpcChannel.getName()).getMemoryClient(), ProfilersTestData.SESSION_DATA);\n    List<SeriesData<GcDurationData>> dataList = series.getDataForRange(new Range(0, Double.MAX_VALUE));\n\n    assertEquals(2, dataList.size());\n    SeriesData<GcDurationData> data1 = dataList.get(0);\n    assertEquals(3, data1.x);\n    assertEquals(4, data1.value.getDurationUs());\n\n    SeriesData<GcDurationData> data2 = dataList.get(1);\n    assertEquals(14, data2.x);\n    assertEquals(3, data2.value.getDurationUs());\n  }", "signature": "void testGetDataForXRange()", "full_signature": "@Test public void testGetDataForXRange()", "class_method_signature": "LegacyGcStatsDataSeriesTest.testGetDataForXRange()", "testcase": true, "constructor": false, "invocations": ["build", "addGcStatsSamples", "addGcStatsSamples", "setEndTimestamp", "newBuilder", "setEndTime", "setStartTime", "newBuilder", "toNanos", "toNanos", "setEndTime", "setStartTime", "newBuilder", "toNanos", "toNanos", "setMemoryData", "getMemoryClient", "getName", "getDataForRange", "assertEquals", "size", "get", "assertEquals", "assertEquals", "getDurationUs", "get", "assertEquals", "assertEquals", "getDurationUs"]}, "focal_class": {"identifier": "LegacyGcStatsDataSeries", "superclass": "", "interfaces": "implements DataSeries<GcDurationData>", "fields": [{"original_string": "@NotNull private MemoryServiceGrpc.MemoryServiceBlockingStub myClient;", "modifier": "@NotNull private", "type": "MemoryServiceGrpc.MemoryServiceBlockingStub", "declarator": "myClient", "var_name": "myClient"}, {"original_string": "@NotNull private final Common.Session mySession;", "modifier": "@NotNull private final", "type": "Common.Session", "declarator": "mySession", "var_name": "mySession"}], "methods": [{"identifier": "LegacyGcStatsDataSeries", "parameters": "(@NotNull MemoryServiceGrpc.MemoryServiceBlockingStub client, @NotNull Common.Session session)", "modifiers": "public", "return": "", "signature": " LegacyGcStatsDataSeries(@NotNull MemoryServiceGrpc.MemoryServiceBlockingStub client, @NotNull Common.Session session)", "full_signature": "public  LegacyGcStatsDataSeries(@NotNull MemoryServiceGrpc.MemoryServiceBlockingStub client, @NotNull Common.Session session)", "class_method_signature": "LegacyGcStatsDataSeries.LegacyGcStatsDataSeries(@NotNull MemoryServiceGrpc.MemoryServiceBlockingStub client, @NotNull Common.Session session)", "testcase": false, "constructor": true}, {"identifier": "getDataForRange", "parameters": "(@NotNull Range timeCurrentRangeUs)", "modifiers": "@Override public", "return": "List<SeriesData<GcDurationData>>", "signature": "List<SeriesData<GcDurationData>> getDataForRange(@NotNull Range timeCurrentRangeUs)", "full_signature": "@Override public List<SeriesData<GcDurationData>> getDataForRange(@NotNull Range timeCurrentRangeUs)", "class_method_signature": "LegacyGcStatsDataSeries.getDataForRange(@NotNull Range timeCurrentRangeUs)", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/memory/LegacyGcStatsDataSeries.java"}, "focal_method": {"identifier": "getDataForRange", "parameters": "(@NotNull Range timeCurrentRangeUs)", "modifiers": "@Override public", "return": "List<SeriesData<GcDurationData>>", "body": "@Override\n  public List<SeriesData<GcDurationData>> getDataForRange(@NotNull Range timeCurrentRangeUs) {\n    // TODO: Change the Memory API to allow specifying padding in the request as number of samples.\n    long bufferNs = TimeUnit.SECONDS.toNanos(1);\n    MemoryProfiler.MemoryRequest.Builder dataRequestBuilder = MemoryProfiler.MemoryRequest.newBuilder()\n      .setSession(mySession)\n      .setStartTime(TimeUnit.MICROSECONDS.toNanos((long)timeCurrentRangeUs.getMin()) - bufferNs)\n      .setEndTime(TimeUnit.MICROSECONDS.toNanos((long)timeCurrentRangeUs.getMax()) + bufferNs);\n    MemoryProfiler.MemoryData response = myClient.getData(dataRequestBuilder.build());\n\n    List<SeriesData<GcDurationData>> seriesData = new ArrayList<>();\n    for (MemoryProfiler.MemoryData.GcStatsSample sample : response.getGcStatsSamplesList()) {\n      long dataTimestamp = TimeUnit.NANOSECONDS.toMicros(sample.getStartTime());\n      long duration = TimeUnit.NANOSECONDS.toMicros(sample.getEndTime() - sample.getStartTime());\n      seriesData.add(new SeriesData<>(dataTimestamp, new GcDurationData(duration)));\n    }\n    return seriesData;\n  }", "signature": "List<SeriesData<GcDurationData>> getDataForRange(@NotNull Range timeCurrentRangeUs)", "full_signature": "@Override public List<SeriesData<GcDurationData>> getDataForRange(@NotNull Range timeCurrentRangeUs)", "class_method_signature": "LegacyGcStatsDataSeries.getDataForRange(@NotNull Range timeCurrentRangeUs)", "testcase": false, "constructor": false, "invocations": ["toNanos", "setEndTime", "setStartTime", "setSession", "newBuilder", "toNanos", "getMin", "toNanos", "getMax", "getData", "build", "getGcStatsSamplesList", "toMicros", "getStartTime", "toMicros", "getEndTime", "getStartTime", "add"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}