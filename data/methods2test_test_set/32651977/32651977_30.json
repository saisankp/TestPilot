{"test_class": {"identifier": "MessageFieldUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Field f1;", "modifier": "private", "type": "Field", "declarator": "f1", "var_name": "f1"}, {"original_string": "private Field f32;", "modifier": "private", "type": "Field", "declarator": "f32", "var_name": "f32"}, {"original_string": "private Field f33;", "modifier": "private", "type": "Field", "declarator": "f33", "var_name": "f33"}], "file": "protostuff-generator/src/test/java/io/protostuff/generator/java/MessageFieldUtilTest.java"}, "test_case": {"identifier": "getDefaultValue_scalar", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getDefaultValue_scalar() {\n        Field field = new Field(null);\n        field.setType(ScalarFieldType.INT32);\n        assertEquals(\"0\",\n                MessageFieldUtil.getDefaultValue(field));\n    }", "signature": "void getDefaultValue_scalar()", "full_signature": "@Test void getDefaultValue_scalar()", "class_method_signature": "MessageFieldUtilTest.getDefaultValue_scalar()", "testcase": true, "constructor": false, "invocations": ["setType", "assertEquals", "getDefaultValue"]}, "focal_class": {"identifier": "MessageFieldUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HAS_PREFIX = \"has\";", "modifier": "private static final", "type": "String", "declarator": "HAS_PREFIX = \"has\"", "var_name": "HAS_PREFIX"}, {"original_string": "private static final String GETTER_PREFIX = \"get\";", "modifier": "private static final", "type": "String", "declarator": "GETTER_PREFIX = \"get\"", "var_name": "GETTER_PREFIX"}, {"original_string": "private static final String SETTER_PREFIX = \"set\";", "modifier": "private static final", "type": "String", "declarator": "SETTER_PREFIX = \"set\"", "var_name": "SETTER_PREFIX"}, {"original_string": "private static final String LIST = \"java.util.List\";", "modifier": "private static final", "type": "String", "declarator": "LIST = \"java.util.List\"", "var_name": "LIST"}, {"original_string": "private static final String ITERABLE = \"java.lang.Iterable\";", "modifier": "private static final", "type": "String", "declarator": "ITERABLE = \"java.lang.Iterable\"", "var_name": "ITERABLE"}, {"original_string": "private static final String GETTER_REPEATED_SUFFIX = \"List\";", "modifier": "private static final", "type": "String", "declarator": "GETTER_REPEATED_SUFFIX = \"List\"", "var_name": "GETTER_REPEATED_SUFFIX"}, {"original_string": "private static final String MAP_SUFFIX = \"Map\";", "modifier": "private static final", "type": "String", "declarator": "MAP_SUFFIX = \"Map\"", "var_name": "MAP_SUFFIX"}, {"original_string": "private static final String PUT_PREFIX = \"put\";", "modifier": "private static final", "type": "String", "declarator": "PUT_PREFIX = \"put\"", "var_name": "PUT_PREFIX"}, {"original_string": "private static final String VALUE = \"Value\";", "modifier": "private static final", "type": "String", "declarator": "VALUE = \"Value\"", "var_name": "VALUE"}, {"original_string": "private static final Map<ScalarFieldType, String> PROTOSTUFF_IO_NAME =\n            new EnumMap<>(ImmutableMap.<ScalarFieldType, String>builder()\n                    .put(ScalarFieldType.INT32, \"Int32\")\n                    .put(ScalarFieldType.INT64, \"Int64\")\n                    .put(ScalarFieldType.UINT32, \"UInt32\")\n                    .put(ScalarFieldType.UINT64, \"UInt64\")\n                    .put(ScalarFieldType.SINT32, \"SInt32\")\n                    .put(ScalarFieldType.SINT64, \"SInt64\")\n                    .put(ScalarFieldType.FIXED32, \"Fixed32\")\n                    .put(ScalarFieldType.FIXED64, \"Fixed64\")\n                    .put(ScalarFieldType.SFIXED32, \"SFixed32\")\n                    .put(ScalarFieldType.SFIXED64, \"SFixed64\")\n                    .put(ScalarFieldType.FLOAT, \"Float\")\n                    .put(ScalarFieldType.DOUBLE, \"Double\")\n                    .put(ScalarFieldType.BOOL, \"Bool\")\n                    .put(ScalarFieldType.STRING, \"String\")\n                    .put(ScalarFieldType.BYTES, \"Bytes\")\n                    .build());", "modifier": "private static final", "type": "Map<ScalarFieldType, String>", "declarator": "PROTOSTUFF_IO_NAME =\n            new EnumMap<>(ImmutableMap.<ScalarFieldType, String>builder()\n                    .put(ScalarFieldType.INT32, \"Int32\")\n                    .put(ScalarFieldType.INT64, \"Int64\")\n                    .put(ScalarFieldType.UINT32, \"UInt32\")\n                    .put(ScalarFieldType.UINT64, \"UInt64\")\n                    .put(ScalarFieldType.SINT32, \"SInt32\")\n                    .put(ScalarFieldType.SINT64, \"SInt64\")\n                    .put(ScalarFieldType.FIXED32, \"Fixed32\")\n                    .put(ScalarFieldType.FIXED64, \"Fixed64\")\n                    .put(ScalarFieldType.SFIXED32, \"SFixed32\")\n                    .put(ScalarFieldType.SFIXED64, \"SFixed64\")\n                    .put(ScalarFieldType.FLOAT, \"Float\")\n                    .put(ScalarFieldType.DOUBLE, \"Double\")\n                    .put(ScalarFieldType.BOOL, \"Bool\")\n                    .put(ScalarFieldType.STRING, \"String\")\n                    .put(ScalarFieldType.BYTES, \"Bytes\")\n                    .build())", "var_name": "PROTOSTUFF_IO_NAME"}], "methods": [{"identifier": "MessageFieldUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " MessageFieldUtil()", "full_signature": "private  MessageFieldUtil()", "class_method_signature": "MessageFieldUtil.MessageFieldUtil()", "testcase": false, "constructor": true}, {"identifier": "getFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldType(Field field)", "full_signature": "public static String getFieldType(Field field)", "class_method_signature": "MessageFieldUtil.getFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldName(Field field)", "full_signature": "public static String getFieldName(Field field)", "class_method_signature": "MessageFieldUtil.getFieldName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getJsonFieldName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getJsonFieldName(Field field)", "full_signature": "public static String getJsonFieldName(Field field)", "class_method_signature": "MessageFieldUtil.getJsonFieldName(Field field)", "testcase": false, "constructor": false}, {"identifier": "isReservedKeyword", "parameters": "(String formattedName)", "modifiers": "private static", "return": "boolean", "signature": "boolean isReservedKeyword(String formattedName)", "full_signature": "private static boolean isReservedKeyword(String formattedName)", "class_method_signature": "MessageFieldUtil.isReservedKeyword(String formattedName)", "testcase": false, "constructor": false}, {"identifier": "getFieldGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldGetterName(Field field)", "full_signature": "public static String getFieldGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getFieldGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldSetterName(Field field)", "full_signature": "public static String getFieldSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getFieldSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldWitherName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldWitherName(Field field)", "full_signature": "public static String getFieldWitherName(Field field)", "class_method_signature": "MessageFieldUtil.getFieldWitherName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getEnumFieldValueGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getEnumFieldValueGetterName(Field field)", "full_signature": "public static String getEnumFieldValueGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getEnumFieldValueGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getEnumFieldValueSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getEnumFieldValueSetterName(Field field)", "full_signature": "public static String getEnumFieldValueSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getEnumFieldValueSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldCleanerName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getFieldCleanerName(Field field)", "full_signature": "public static String getFieldCleanerName(Field field)", "class_method_signature": "MessageFieldUtil.getFieldCleanerName(Field field)", "testcase": false, "constructor": false}, {"identifier": "isMessage", "parameters": "(Field field)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMessage(Field field)", "full_signature": "public static boolean isMessage(Field field)", "class_method_signature": "MessageFieldUtil.isMessage(Field field)", "testcase": false, "constructor": false}, {"identifier": "getHasMethodName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getHasMethodName(Field field)", "full_signature": "public static String getHasMethodName(Field field)", "class_method_signature": "MessageFieldUtil.getHasMethodName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getBuilderSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getBuilderSetterName(Field field)", "full_signature": "public static String getBuilderSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getBuilderSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getDefaultValue", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getDefaultValue(Field field)", "full_signature": "public static String getDefaultValue(Field field)", "class_method_signature": "MessageFieldUtil.getDefaultValue(Field field)", "testcase": false, "constructor": false}, {"identifier": "isScalarNullableType", "parameters": "(Field field)", "modifiers": "public static", "return": "boolean", "signature": "boolean isScalarNullableType(Field field)", "full_signature": "public static boolean isScalarNullableType(Field field)", "class_method_signature": "MessageFieldUtil.isScalarNullableType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedFieldType(Field field)", "full_signature": "public static String getRepeatedFieldType(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getIterableFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getIterableFieldType(Field field)", "full_signature": "public static String getIterableFieldType(Field field)", "class_method_signature": "MessageFieldUtil.getIterableFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getWrapperFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getWrapperFieldType(Field field)", "full_signature": "public static String getWrapperFieldType(Field field)", "class_method_signature": "MessageFieldUtil.getWrapperFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedFieldGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedFieldGetterName(Field field)", "full_signature": "public static String getRepeatedFieldGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedFieldGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedEnumFieldValueGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedEnumFieldValueGetterName(Field field)", "full_signature": "public static String getRepeatedEnumFieldValueGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedEnumFieldValueGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "javaRepeatedEnumValueGetterByIndexName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String javaRepeatedEnumValueGetterByIndexName(Field field)", "full_signature": "public static String javaRepeatedEnumValueGetterByIndexName(Field field)", "class_method_signature": "MessageFieldUtil.javaRepeatedEnumValueGetterByIndexName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedEnumConverterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedEnumConverterName(Field field)", "full_signature": "public static String getRepeatedEnumConverterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedEnumConverterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedFieldSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedFieldSetterName(Field field)", "full_signature": "public static String getRepeatedFieldSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedFieldSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedEnumValueSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedEnumValueSetterName(Field field)", "full_signature": "public static String getRepeatedEnumValueSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedEnumValueSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "repeatedGetCountMethodName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String repeatedGetCountMethodName(Field field)", "full_signature": "public static String repeatedGetCountMethodName(Field field)", "class_method_signature": "MessageFieldUtil.repeatedGetCountMethodName(Field field)", "testcase": false, "constructor": false}, {"identifier": "repeatedGetByIndexMethodName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String repeatedGetByIndexMethodName(Field field)", "full_signature": "public static String repeatedGetByIndexMethodName(Field field)", "class_method_signature": "MessageFieldUtil.repeatedGetByIndexMethodName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedBuilderSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedBuilderSetterName(Field field)", "full_signature": "public static String getRepeatedBuilderSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedBuilderSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getBuilderGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getBuilderGetterName(Field field)", "full_signature": "public static String getBuilderGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getBuilderGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedFieldAdderName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedFieldAdderName(Field field)", "full_signature": "public static String getRepeatedFieldAdderName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedFieldAdderName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedFieldAddAllName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedFieldAddAllName(Field field)", "full_signature": "public static String getRepeatedFieldAddAllName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedFieldAddAllName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedEnumValueAdderName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedEnumValueAdderName(Field field)", "full_signature": "public static String getRepeatedEnumValueAdderName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedEnumValueAdderName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getRepeatedEnumValueAddAllName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getRepeatedEnumValueAddAllName(Field field)", "full_signature": "public static String getRepeatedEnumValueAddAllName(Field field)", "class_method_signature": "MessageFieldUtil.getRepeatedEnumValueAddAllName(Field field)", "testcase": false, "constructor": false}, {"identifier": "toStringPart", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String toStringPart(Field field)", "full_signature": "public static String toStringPart(Field field)", "class_method_signature": "MessageFieldUtil.toStringPart(Field field)", "testcase": false, "constructor": false}, {"identifier": "protostuffReadMethod", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String protostuffReadMethod(Field field)", "full_signature": "public static String protostuffReadMethod(Field field)", "class_method_signature": "MessageFieldUtil.protostuffReadMethod(Field field)", "testcase": false, "constructor": false}, {"identifier": "protostuffWriteMethod", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String protostuffWriteMethod(Field field)", "full_signature": "public static String protostuffWriteMethod(Field field)", "class_method_signature": "MessageFieldUtil.protostuffWriteMethod(Field field)", "testcase": false, "constructor": false}, {"identifier": "protostuffIoMethodName", "parameters": "(Field field, String operation)", "modifiers": "private static", "return": "String", "signature": "String protostuffIoMethodName(Field field, String operation)", "full_signature": "private static String protostuffIoMethodName(Field field, String operation)", "class_method_signature": "MessageFieldUtil.protostuffIoMethodName(Field field, String operation)", "testcase": false, "constructor": false}, {"identifier": "bitFieldName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String bitFieldName(Field field)", "full_signature": "public static String bitFieldName(Field field)", "class_method_signature": "MessageFieldUtil.bitFieldName(Field field)", "testcase": false, "constructor": false}, {"identifier": "bitFieldIndex", "parameters": "(Field field)", "modifiers": "public static", "return": "int", "signature": "int bitFieldIndex(Field field)", "full_signature": "public static int bitFieldIndex(Field field)", "class_method_signature": "MessageFieldUtil.bitFieldIndex(Field field)", "testcase": false, "constructor": false}, {"identifier": "bitFieldMask", "parameters": "(Field field)", "modifiers": "public static", "return": "int", "signature": "int bitFieldMask(Field field)", "full_signature": "public static int bitFieldMask(Field field)", "class_method_signature": "MessageFieldUtil.bitFieldMask(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapFieldType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapFieldType(Field field)", "full_signature": "public static String getMapFieldType(Field field)", "class_method_signature": "MessageFieldUtil.getMapFieldType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapFieldKeyType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapFieldKeyType(Field field)", "full_signature": "public static String getMapFieldKeyType(Field field)", "class_method_signature": "MessageFieldUtil.getMapFieldKeyType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapFieldValueType", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapFieldValueType(Field field)", "full_signature": "public static String getMapFieldValueType(Field field)", "class_method_signature": "MessageFieldUtil.getMapFieldValueType(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapGetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapGetterName(Field field)", "full_signature": "public static String getMapGetterName(Field field)", "class_method_signature": "MessageFieldUtil.getMapGetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapSetterName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapSetterName(Field field)", "full_signature": "public static String getMapSetterName(Field field)", "class_method_signature": "MessageFieldUtil.getMapSetterName(Field field)", "testcase": false, "constructor": false}, {"identifier": "mapGetByKeyMethodName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String mapGetByKeyMethodName(Field field)", "full_signature": "public static String mapGetByKeyMethodName(Field field)", "class_method_signature": "MessageFieldUtil.mapGetByKeyMethodName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapFieldAdderName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapFieldAdderName(Field field)", "full_signature": "public static String getMapFieldAdderName(Field field)", "class_method_signature": "MessageFieldUtil.getMapFieldAdderName(Field field)", "testcase": false, "constructor": false}, {"identifier": "getMapFieldAddAllName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String getMapFieldAddAllName(Field field)", "full_signature": "public static String getMapFieldAddAllName(Field field)", "class_method_signature": "MessageFieldUtil.getMapFieldAddAllName(Field field)", "testcase": false, "constructor": false}, {"identifier": "javaOneofConstantName", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "signature": "String javaOneofConstantName(Field field)", "full_signature": "public static String javaOneofConstantName(Field field)", "class_method_signature": "MessageFieldUtil.javaOneofConstantName(Field field)", "testcase": false, "constructor": false}, {"identifier": "isNumericType", "parameters": "(Field field)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNumericType(Field field)", "full_signature": "public static boolean isNumericType(Field field)", "class_method_signature": "MessageFieldUtil.isNumericType(Field field)", "testcase": false, "constructor": false}, {"identifier": "isBooleanType", "parameters": "(Field field)", "modifiers": "public static", "return": "boolean", "signature": "boolean isBooleanType(Field field)", "full_signature": "public static boolean isBooleanType(Field field)", "class_method_signature": "MessageFieldUtil.isBooleanType(Field field)", "testcase": false, "constructor": false}], "file": "protostuff-generator/src/main/java/io/protostuff/generator/java/MessageFieldUtil.java"}, "focal_method": {"identifier": "getDefaultValue", "parameters": "(Field field)", "modifiers": "public static", "return": "String", "body": "public static String getDefaultValue(Field field) {\n        FieldType type = field.getType();\n        if (type instanceof ScalarFieldType) {\n            return ScalarFieldTypeUtil.getDefaultValue((ScalarFieldType) type);\n        }\n        if (type instanceof Message) {\n            Message m = (Message) type;\n            return UserTypeUtil.getCanonicalName(m) + \".getDefaultInstance()\";\n        }\n        if (type instanceof Enum) {\n            Enum anEnum = (Enum) type;\n            String defaultValue;\n            List<EnumConstant> constants = anEnum.getConstants();\n            if (constants.isEmpty()) {\n                defaultValue = \"UNRECOGNIZED\";\n            } else {\n                DynamicMessage options = field.getOptions();\n                defaultValue = options.containsKey(DEFAULT) ? options.get(DEFAULT).getEnumName() : constants.get(0).getName();\n            }\n            return UserTypeUtil.getCanonicalName(anEnum) + \".\" + defaultValue;\n        }\n        throw new IllegalArgumentException(String.valueOf(type));\n    }", "signature": "String getDefaultValue(Field field)", "full_signature": "public static String getDefaultValue(Field field)", "class_method_signature": "MessageFieldUtil.getDefaultValue(Field field)", "testcase": false, "constructor": false, "invocations": ["getType", "getDefaultValue", "getCanonicalName", "getConstants", "isEmpty", "getOptions", "containsKey", "getEnumName", "get", "getName", "get", "getCanonicalName", "valueOf"]}, "repository": {"repo_id": 32651977, "url": "https://github.com/protostuff/protostuff-compiler", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 30, "size": 1539, "license": "licensed"}}