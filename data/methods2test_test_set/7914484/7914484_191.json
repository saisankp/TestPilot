{"test_class": {"identifier": "JaxbElementPayloadMethodProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JaxbElementPayloadMethodProcessor processor;", "modifier": "private", "type": "JaxbElementPayloadMethodProcessor", "declarator": "processor", "var_name": "processor"}, {"original_string": "private MethodParameter supportedParameter;", "modifier": "private", "type": "MethodParameter", "declarator": "supportedParameter", "var_name": "supportedParameter"}, {"original_string": "private MethodParameter supportedReturnType;", "modifier": "private", "type": "MethodParameter", "declarator": "supportedReturnType", "var_name": "supportedReturnType"}, {"original_string": "private MethodParameter stringReturnType;", "modifier": "private", "type": "MethodParameter", "declarator": "stringReturnType", "var_name": "stringReturnType"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessorTest.java"}, "test_case": {"identifier": "resolveArgument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveArgument() throws JAXBException {\n\t\tWebServiceMessage request = new MockWebServiceMessage(\n\t\t\t\t\"<myType xmlns='http://springframework.org'><string>Foo</string></myType>\");\n\t\tMessageContext messageContext = new DefaultMessageContext(request, new MockWebServiceMessageFactory());\n\n\t\tJAXBElement<?> result = processor.resolveArgument(messageContext, supportedParameter);\n\t\tassertTrue(\"result not a MyType\", result.getValue() instanceof MyType);\n\t\tMyType type = (MyType) result.getValue();\n\t\tassertEquals(\"invalid result\", \"Foo\", type.getString());\n\t}", "signature": "void resolveArgument()", "full_signature": "@Test public void resolveArgument()", "class_method_signature": "JaxbElementPayloadMethodProcessorTest.resolveArgument()", "testcase": true, "constructor": false, "invocations": ["resolveArgument", "assertTrue", "getValue", "getValue", "assertEquals", "getString"]}, "focal_class": {"identifier": "JaxbElementPayloadMethodProcessor", "superclass": "extends AbstractJaxb2PayloadMethodProcessor", "interfaces": "", "fields": [], "methods": [{"identifier": "supportsRequestPayloadParameter", "parameters": "(MethodParameter parameter)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean supportsRequestPayloadParameter(MethodParameter parameter)", "full_signature": "@Override protected boolean supportsRequestPayloadParameter(MethodParameter parameter)", "class_method_signature": "JaxbElementPayloadMethodProcessor.supportsRequestPayloadParameter(MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "JAXBElement<?>", "signature": "JAXBElement<?> resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public JAXBElement<?> resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "JaxbElementPayloadMethodProcessor.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "supportsResponsePayloadReturnType", "parameters": "(MethodParameter returnType)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean supportsResponsePayloadReturnType(MethodParameter returnType)", "full_signature": "@Override protected boolean supportsResponsePayloadReturnType(MethodParameter returnType)", "class_method_signature": "JaxbElementPayloadMethodProcessor.supportsResponsePayloadReturnType(MethodParameter returnType)", "testcase": false, "constructor": false}, {"identifier": "handleReturnValueInternal", "parameters": "(MessageContext messageContext, MethodParameter returnType,\n\t\t\tObject returnValue)", "modifiers": "@Override protected", "return": "void", "signature": "void handleReturnValueInternal(MessageContext messageContext, MethodParameter returnType,\n\t\t\tObject returnValue)", "full_signature": "@Override protected void handleReturnValueInternal(MessageContext messageContext, MethodParameter returnType,\n\t\t\tObject returnValue)", "class_method_signature": "JaxbElementPayloadMethodProcessor.handleReturnValueInternal(MessageContext messageContext, MethodParameter returnType,\n\t\t\tObject returnValue)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessor.java"}, "focal_method": {"identifier": "resolveArgument", "parameters": "(MessageContext messageContext, MethodParameter parameter)", "modifiers": "@Override public", "return": "JAXBElement<?>", "body": "@Override\n\tpublic JAXBElement<?> resolveArgument(MessageContext messageContext, MethodParameter parameter) throws JAXBException {\n\t\tParameterizedType parameterizedType = (ParameterizedType) parameter.getGenericParameterType();\n\t\tClass<?> clazz = (Class<?>) parameterizedType.getActualTypeArguments()[0];\n\t\treturn unmarshalElementFromRequestPayload(messageContext, clazz);\n\t}", "signature": "JAXBElement<?> resolveArgument(MessageContext messageContext, MethodParameter parameter)", "full_signature": "@Override public JAXBElement<?> resolveArgument(MessageContext messageContext, MethodParameter parameter)", "class_method_signature": "JaxbElementPayloadMethodProcessor.resolveArgument(MessageContext messageContext, MethodParameter parameter)", "testcase": false, "constructor": false, "invocations": ["getGenericParameterType", "getActualTypeArguments", "unmarshalElementFromRequestPayload"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}