{"test_class": {"identifier": "FloatConditionTest", "superclass": "", "interfaces": "", "fields": [], "file": "lib/src/test/java/com/busybusy/dbc/conditions/FloatConditionTest.java"}, "test_case": {"identifier": "isNear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void isNear() throws Exception\n\t{\n\t\tFloatCondition condition = new FloatCondition(2.0F);\n\t\tcondition.isNear(2F);\n\n\t\tassertThatThrownBy(() -> condition.isNear(1F))\n\t\t\t\t.isInstanceOf(DbcAssertionError.class)\n\t\t\t\t.hasCauseInstanceOf(IllegalArgumentException.class);\n\t}", "signature": "void isNear()", "full_signature": "@Test public void isNear()", "class_method_signature": "FloatConditionTest.isNear()", "testcase": true, "constructor": false, "invocations": ["isNear", "hasCauseInstanceOf", "isInstanceOf", "assertThatThrownBy", "isNear"]}, "focal_class": {"identifier": "FloatCondition", "superclass": "extends BasicCondition<Float, FloatCondition>", "interfaces": "implements FloatingPointChecks<Float, FloatCondition>", "fields": [], "methods": [{"identifier": "FloatCondition", "parameters": "(Float subject)", "modifiers": "public", "return": "", "signature": " FloatCondition(Float subject)", "full_signature": "public  FloatCondition(Float subject)", "class_method_signature": "FloatCondition.FloatCondition(Float subject)", "testcase": false, "constructor": true}, {"identifier": "isGreaterThan", "parameters": "(Float number)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isGreaterThan(Float number)", "full_signature": "@Override public FloatCondition isGreaterThan(Float number)", "class_method_signature": "FloatCondition.isGreaterThan(Float number)", "testcase": false, "constructor": false}, {"identifier": "isGreaterThanOrEqual", "parameters": "(Float number)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isGreaterThanOrEqual(Float number)", "full_signature": "@Override public FloatCondition isGreaterThanOrEqual(Float number)", "class_method_signature": "FloatCondition.isGreaterThanOrEqual(Float number)", "testcase": false, "constructor": false}, {"identifier": "isLessThan", "parameters": "(Float number)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isLessThan(Float number)", "full_signature": "@Override public FloatCondition isLessThan(Float number)", "class_method_signature": "FloatCondition.isLessThan(Float number)", "testcase": false, "constructor": false}, {"identifier": "isLessThanOrEqual", "parameters": "(Float number)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isLessThanOrEqual(Float number)", "full_signature": "@Override public FloatCondition isLessThanOrEqual(Float number)", "class_method_signature": "FloatCondition.isLessThanOrEqual(Float number)", "testcase": false, "constructor": false}, {"identifier": "isNear", "parameters": "(Float floatingPointNumber)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isNear(Float floatingPointNumber)", "full_signature": "@Override public FloatCondition isNear(Float floatingPointNumber)", "class_method_signature": "FloatCondition.isNear(Float floatingPointNumber)", "testcase": false, "constructor": false}, {"identifier": "isNearWithTolerance", "parameters": "(Float floatingPointNumber, Float tolerance)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isNearWithTolerance(Float floatingPointNumber, Float tolerance)", "full_signature": "@Override public FloatCondition isNearWithTolerance(Float floatingPointNumber, Float tolerance)", "class_method_signature": "FloatCondition.isNearWithTolerance(Float floatingPointNumber, Float tolerance)", "testcase": false, "constructor": false}, {"identifier": "isNearZero", "parameters": "()", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isNearZero()", "full_signature": "@Override public FloatCondition isNearZero()", "class_method_signature": "FloatCondition.isNearZero()", "testcase": false, "constructor": false}, {"identifier": "isNearZeroWithTolerance", "parameters": "(Float tolerance)", "modifiers": "@Override public", "return": "FloatCondition", "signature": "FloatCondition isNearZeroWithTolerance(Float tolerance)", "full_signature": "@Override public FloatCondition isNearZeroWithTolerance(Float tolerance)", "class_method_signature": "FloatCondition.isNearZeroWithTolerance(Float tolerance)", "testcase": false, "constructor": false}, {"identifier": "isEqualTo", "parameters": "(Float toCompare)", "modifiers": "@Deprecated @Override public", "return": "FloatCondition", "signature": "FloatCondition isEqualTo(Float toCompare)", "full_signature": "@Deprecated @Override public FloatCondition isEqualTo(Float toCompare)", "class_method_signature": "FloatCondition.isEqualTo(Float toCompare)", "testcase": false, "constructor": false}], "file": "lib/src/main/java/com/busybusy/dbc/conditions/FloatCondition.java"}, "focal_method": {"identifier": "isNear", "parameters": "(Float floatingPointNumber)", "modifiers": "@Override public", "return": "FloatCondition", "body": "@Override\n\tpublic FloatCondition isNear(Float floatingPointNumber)\n\t{\n\t\trequire(this.subject).isNotNull();\n\t\trequire(floatingPointNumber).isNotNull();\n\n\t\tif (!(Math.abs(this.subject - floatingPointNumber) < DEFAULT_DOUBLE_EPSILON))\n\t\t{\n\t\t\tDbcAssertionError.throwNew(new IllegalArgumentException(\"Expected float <\" + this.subject + \"> to be near <\" + floatingPointNumber + \"> with epsilon <\" + DEFAULT_DOUBLE_EPSILON + \">\"), this.message);\n\t\t}\n\n\t\treturn result();\n\t}", "signature": "FloatCondition isNear(Float floatingPointNumber)", "full_signature": "@Override public FloatCondition isNear(Float floatingPointNumber)", "class_method_signature": "FloatCondition.isNear(Float floatingPointNumber)", "testcase": false, "constructor": false, "invocations": ["isNotNull", "require", "isNotNull", "require", "abs", "throwNew", "result"]}, "repository": {"repo_id": 61247013, "url": "https://github.com/busybusy/DBC-Android", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 203, "license": "licensed"}}