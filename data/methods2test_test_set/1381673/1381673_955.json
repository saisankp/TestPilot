{"test_class": {"identifier": "BinaryHeapQueueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Integer[]>  perms = new ArrayList<Integer[]>();", "modifier": "private", "type": "List<Integer[]>", "declarator": "perms = new ArrayList<Integer[]>()", "var_name": "perms"}, {"original_string": "private final static int max   = 6;", "modifier": "private final static", "type": "int", "declarator": "max   = 6", "var_name": "max"}], "file": "drools-core/src/test/java/org/drools/core/util/BinaryHeapQueueTest.java"}, "test_case": {"identifier": "testShuffled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShuffled() {\n\n        for ( Integer[] perm : perms ) {\n            Group group = new Group( \"group\" );\n\n            for ( Integer i : perm ) {\n                Item item = new Item( group,\n                                      i );\n                group.add( item );\n            }\n\n            Activation[] elems = group.getQueue();\n            for (Activation elem : elems ) {\n                Item item = (Item) elem;\n                //        System.out.print( \" \" + item.getSalience() + \"/\"  + item.getActivationNumber() + \"/\" + item.getQueueIndex() );\n                if ( item.getQueueIndex() % 2 == 0 ) {\n                    group.remove( item );\n                    group.add( item );\n                }\n            }\n            boolean ok = true;\n            StringBuilder sb = new StringBuilder( \"queue:\" );\n            for ( int i = max - 1; i >= 0; i-- ) {\n                int sal = group.getNext().getSalience();\n                sb.append( \" \" ).append( sal );\n                if ( sal != i ) ok = false;\n            }\n            assertTrue( \"incorrect order in \" + sb.toString(),\n                        ok );\n            //      System.out.println( sb.toString() );\n        }\n    }", "signature": "void testShuffled()", "full_signature": "@Test public void testShuffled()", "class_method_signature": "BinaryHeapQueueTest.testShuffled()", "testcase": true, "constructor": false, "invocations": ["add", "getQueue", "getQueueIndex", "remove", "add", "getSalience", "getNext", "append", "append", "assertTrue", "toString"]}, "focal_class": {"identifier": "BinaryHeapQueue", "superclass": "", "interfaces": "implements\n        Queue,\n        Externalizable", "fields": [{"original_string": "protected static final transient Logger log = LoggerFactory.getLogger(BinaryHeapQueue.class);", "modifier": "protected static final transient", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BinaryHeapQueue.class)", "var_name": "log"}, {"original_string": "private static final int DEFAULT_CAPACITY = 13;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CAPACITY = 13", "var_name": "DEFAULT_CAPACITY"}, {"original_string": "private Comparator<Activation> comparator;", "modifier": "private", "type": "Comparator<Activation>", "declarator": "comparator", "var_name": "comparator"}, {"original_string": "private volatile int size;", "modifier": "private volatile", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private Activation[] elements;", "modifier": "private", "type": "Activation[]", "declarator": "elements", "var_name": "elements"}], "methods": [{"identifier": "BinaryHeapQueue", "parameters": "()", "modifiers": "public", "return": "", "signature": " BinaryHeapQueue()", "full_signature": "public  BinaryHeapQueue()", "class_method_signature": "BinaryHeapQueue.BinaryHeapQueue()", "testcase": false, "constructor": true}, {"identifier": "BinaryHeapQueue", "parameters": "(final Comparator<Activation> comparator)", "modifiers": "public", "return": "", "signature": " BinaryHeapQueue(final Comparator<Activation> comparator)", "full_signature": "public  BinaryHeapQueue(final Comparator<Activation> comparator)", "class_method_signature": "BinaryHeapQueue.BinaryHeapQueue(final Comparator<Activation> comparator)", "testcase": false, "constructor": true}, {"identifier": "BinaryHeapQueue", "parameters": "(final Comparator<Activation> comparator,\n                           final int capacity)", "modifiers": "public", "return": "", "signature": " BinaryHeapQueue(final Comparator<Activation> comparator,\n                           final int capacity)", "full_signature": "public  BinaryHeapQueue(final Comparator<Activation> comparator,\n                           final int capacity)", "class_method_signature": "BinaryHeapQueue.BinaryHeapQueue(final Comparator<Activation> comparator,\n                           final int capacity)", "testcase": false, "constructor": true}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "BinaryHeapQueue.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "public void writeExternal(ObjectOutput out)", "class_method_signature": "BinaryHeapQueue.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "BinaryHeapQueue.clear()", "testcase": false, "constructor": false}, {"identifier": "getAndClear", "parameters": "()", "modifiers": "public", "return": "Activation[]", "signature": "Activation[] getAndClear()", "full_signature": "public Activation[] getAndClear()", "class_method_signature": "BinaryHeapQueue.getAndClear()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "BinaryHeapQueue.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "isFull", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFull()", "full_signature": "public boolean isFull()", "class_method_signature": "BinaryHeapQueue.isFull()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "BinaryHeapQueue.size()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "Activation", "signature": "Activation peek()", "full_signature": "public Activation peek()", "class_method_signature": "BinaryHeapQueue.peek()", "testcase": false, "constructor": false}, {"identifier": "enqueue", "parameters": "(final Activation element)", "modifiers": "public", "return": "void", "signature": "void enqueue(final Activation element)", "full_signature": "public void enqueue(final Activation element)", "class_method_signature": "BinaryHeapQueue.enqueue(final Activation element)", "testcase": false, "constructor": false}, {"identifier": "dequeue", "parameters": "()", "modifiers": "public", "return": "Activation", "signature": "Activation dequeue()", "full_signature": "public Activation dequeue()", "class_method_signature": "BinaryHeapQueue.dequeue()", "testcase": false, "constructor": false}, {"identifier": "dequeue", "parameters": "(Activation activation)", "modifiers": "public", "return": "Activation", "signature": "Activation dequeue(Activation activation)", "full_signature": "public Activation dequeue(Activation activation)", "class_method_signature": "BinaryHeapQueue.dequeue(Activation activation)", "testcase": false, "constructor": false}, {"identifier": "dequeue", "parameters": "(final int index)", "modifiers": "", "return": "Activation", "signature": "Activation dequeue(final int index)", "full_signature": " Activation dequeue(final int index)", "class_method_signature": "BinaryHeapQueue.dequeue(final int index)", "testcase": false, "constructor": false}, {"identifier": "percolateDownMaxHeap", "parameters": "(final int index)", "modifiers": "protected", "return": "void", "signature": "void percolateDownMaxHeap(final int index)", "full_signature": "protected void percolateDownMaxHeap(final int index)", "class_method_signature": "BinaryHeapQueue.percolateDownMaxHeap(final int index)", "testcase": false, "constructor": false}, {"identifier": "percolateUpMaxHeap", "parameters": "(final int index)", "modifiers": "protected", "return": "void", "signature": "void percolateUpMaxHeap(final int index)", "full_signature": "protected void percolateUpMaxHeap(final int index)", "class_method_signature": "BinaryHeapQueue.percolateUpMaxHeap(final int index)", "testcase": false, "constructor": false}, {"identifier": "percolateUpMaxHeap", "parameters": "(final Activation element)", "modifiers": "protected", "return": "void", "signature": "void percolateUpMaxHeap(final Activation element)", "full_signature": "protected void percolateUpMaxHeap(final Activation element)", "class_method_signature": "BinaryHeapQueue.percolateUpMaxHeap(final Activation element)", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(final Activation a,\n                        final Activation b)", "modifiers": "private", "return": "int", "signature": "int compare(final Activation a,\n                        final Activation b)", "full_signature": "private int compare(final Activation a,\n                        final Activation b)", "class_method_signature": "BinaryHeapQueue.compare(final Activation a,\n                        final Activation b)", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void grow()", "full_signature": "private void grow()", "class_method_signature": "BinaryHeapQueue.grow()", "testcase": false, "constructor": false}, {"identifier": "setElement", "parameters": "(final int index,\n                            final Activation element)", "modifiers": "private", "return": "void", "signature": "void setElement(final int index,\n                            final Activation element)", "full_signature": "private void setElement(final int index,\n                            final Activation element)", "class_method_signature": "BinaryHeapQueue.setElement(final int index,\n                            final Activation element)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(Object[] a)", "modifiers": "public", "return": "Object[]", "signature": "Object[] toArray(Object[] a)", "full_signature": "public Object[] toArray(Object[] a)", "class_method_signature": "BinaryHeapQueue.toArray(Object[] a)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BinaryHeapQueue.toString()", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/util/BinaryHeapQueue.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return Stream.of( elements ).filter(Objects::nonNull).collect(toList() ).toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BinaryHeapQueue.toString()", "testcase": false, "constructor": false, "invocations": ["toString", "collect", "filter", "of", "toList"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}