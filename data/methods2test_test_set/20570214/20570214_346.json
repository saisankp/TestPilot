{"test_class": {"identifier": "AwsKmsAeadTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KEY_ID = \"123\";", "modifier": "private static final", "type": "String", "declarator": "KEY_ID = \"123\"", "var_name": "KEY_ID"}, {"original_string": "@Mock private AWSKMS mockKms;", "modifier": "@Mock private", "type": "AWSKMS", "declarator": "mockKms", "var_name": "mockKms"}], "file": "java_src/src/test/java/com/google/crypto/tink/integration/awskms/AwsKmsAeadTest.java"}, "test_case": {"identifier": "testEncryptShouldThrowExceptionIfRequestFailed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEncryptShouldThrowExceptionIfRequestFailed() throws Exception {\n    AmazonServiceException exception = mock(AmazonServiceException.class);\n    when(mockKms.encrypt(isA(EncryptRequest.class)))\n        .thenThrow(exception);\n\n    Aead aead = new AwsKmsAead(mockKms, KEY_ID);\n    byte[] aad = Random.randBytes(20);\n    byte[] message = Random.randBytes(20);\n    try {\n      aead.encrypt(message, aad);\n      fail(\"Expected GeneralSecurityException\");\n    } catch (GeneralSecurityException e) {\n      // expected.\n    }\n  }", "signature": "void testEncryptShouldThrowExceptionIfRequestFailed()", "full_signature": "@Test public void testEncryptShouldThrowExceptionIfRequestFailed()", "class_method_signature": "AwsKmsAeadTest.testEncryptShouldThrowExceptionIfRequestFailed()", "testcase": true, "constructor": false, "invocations": ["mock", "thenThrow", "when", "encrypt", "isA", "randBytes", "randBytes", "encrypt", "fail"]}, "focal_class": {"identifier": "AwsKmsAead", "superclass": "", "interfaces": "implements Aead", "fields": [{"original_string": "private final AWSKMS kmsClient;", "modifier": "private final", "type": "AWSKMS", "declarator": "kmsClient", "var_name": "kmsClient"}, {"original_string": "private final String keyArn;", "modifier": "private final", "type": "String", "declarator": "keyArn", "var_name": "keyArn"}], "methods": [{"identifier": "AwsKmsAead", "parameters": "(AWSKMS kmsClient, String keyUri)", "modifiers": "public", "return": "", "signature": " AwsKmsAead(AWSKMS kmsClient, String keyUri)", "full_signature": "public  AwsKmsAead(AWSKMS kmsClient, String keyUri)", "class_method_signature": "AwsKmsAead.AwsKmsAead(AWSKMS kmsClient, String keyUri)", "testcase": false, "constructor": true}, {"identifier": "encrypt", "parameters": "(final byte[] plaintext, final byte[] associatedData)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encrypt(final byte[] plaintext, final byte[] associatedData)", "full_signature": "@Override public byte[] encrypt(final byte[] plaintext, final byte[] associatedData)", "class_method_signature": "AwsKmsAead.encrypt(final byte[] plaintext, final byte[] associatedData)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(final byte[] ciphertext, final byte[] associatedData)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] decrypt(final byte[] ciphertext, final byte[] associatedData)", "full_signature": "@Override public byte[] decrypt(final byte[] ciphertext, final byte[] associatedData)", "class_method_signature": "AwsKmsAead.decrypt(final byte[] ciphertext, final byte[] associatedData)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/integration/awskms/AwsKmsAead.java"}, "focal_method": {"identifier": "encrypt", "parameters": "(final byte[] plaintext, final byte[] associatedData)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] encrypt(final byte[] plaintext, final byte[] associatedData)\n      throws GeneralSecurityException {\n    try {\n      EncryptRequest req =\n          new EncryptRequest().withKeyId(keyArn).withPlaintext(ByteBuffer.wrap(plaintext));\n      if (associatedData != null && associatedData.length != 0) {\n        req = req.addEncryptionContextEntry(\"associatedData\", BinaryUtils.toHex(associatedData));\n      }\n      return kmsClient.encrypt(req).getCiphertextBlob().array();\n    } catch (AmazonServiceException e) {\n      throw new GeneralSecurityException(\"encryption failed\", e);\n    }\n  }", "signature": "byte[] encrypt(final byte[] plaintext, final byte[] associatedData)", "full_signature": "@Override public byte[] encrypt(final byte[] plaintext, final byte[] associatedData)", "class_method_signature": "AwsKmsAead.encrypt(final byte[] plaintext, final byte[] associatedData)", "testcase": false, "constructor": false, "invocations": ["withPlaintext", "withKeyId", "wrap", "addEncryptionContextEntry", "toHex", "array", "getCiphertextBlob", "encrypt"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}