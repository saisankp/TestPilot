{"test_class": {"identifier": "DateUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")", "var_name": "df"}], "file": "kie-soup-dataset/kie-soup-dataset-core/src/test/java/org/dashbuilder/dataset/date/DateUtilsTest.java"}, "test_case": {"identifier": "testMinuteFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMinuteFormat() throws Exception {\n        String result = DateUtils.ensureTwoDigits(\"2015-M1-D23 H3:m0\", DateIntervalType.MINUTE);\n        assertThat(result).isEqualTo(\"2015-01-23 03:00\");\n        result = DateUtils.ensureTwoDigits(\"2015-M11-D01 H23:m59\", DateIntervalType.MINUTE);\n        assertThat(result).isEqualTo(\"2015-11-01 23:59\");\n    }", "signature": "void testMinuteFormat()", "full_signature": "@Test public void testMinuteFormat()", "class_method_signature": "DateUtilsTest.testMinuteFormat()", "testcase": true, "constructor": false, "invocations": ["ensureTwoDigits", "isEqualTo", "assertThat", "ensureTwoDigits", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DateUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final SimpleDateFormat FORMATTER_YEAR  = new SimpleDateFormat(DateIntervalPattern.YEAR);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_YEAR  = new SimpleDateFormat(DateIntervalPattern.YEAR)", "var_name": "FORMATTER_YEAR"}, {"original_string": "public static final SimpleDateFormat FORMATTER_MONTH = new SimpleDateFormat(DateIntervalPattern.MONTH);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_MONTH = new SimpleDateFormat(DateIntervalPattern.MONTH)", "var_name": "FORMATTER_MONTH"}, {"original_string": "public static final SimpleDateFormat FORMATTER_DAY = new SimpleDateFormat(DateIntervalPattern.DAY);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_DAY = new SimpleDateFormat(DateIntervalPattern.DAY)", "var_name": "FORMATTER_DAY"}, {"original_string": "public static final SimpleDateFormat FORMATTER_HOUR = new SimpleDateFormat(DateIntervalPattern.HOUR);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_HOUR = new SimpleDateFormat(DateIntervalPattern.HOUR)", "var_name": "FORMATTER_HOUR"}, {"original_string": "public static final SimpleDateFormat FORMATTER_MINUTE = new SimpleDateFormat(DateIntervalPattern.MINUTE);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_MINUTE = new SimpleDateFormat(DateIntervalPattern.MINUTE)", "var_name": "FORMATTER_MINUTE"}, {"original_string": "public static final SimpleDateFormat FORMATTER_SECOND = new SimpleDateFormat(DateIntervalPattern.SECOND);", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "FORMATTER_SECOND = new SimpleDateFormat(DateIntervalPattern.SECOND)", "var_name": "FORMATTER_SECOND"}, {"original_string": "private static final String MONTH_START = \"-M\";", "modifier": "private static final", "type": "String", "declarator": "MONTH_START = \"-M\"", "var_name": "MONTH_START"}, {"original_string": "private static final String MONTH_END = \"-\";", "modifier": "private static final", "type": "String", "declarator": "MONTH_END = \"-\"", "var_name": "MONTH_END"}, {"original_string": "private static final String DAY_START = \"-D\";", "modifier": "private static final", "type": "String", "declarator": "DAY_START = \"-D\"", "var_name": "DAY_START"}, {"original_string": "private static final String DAY_END = \" \";", "modifier": "private static final", "type": "String", "declarator": "DAY_END = \" \"", "var_name": "DAY_END"}, {"original_string": "private static final String HOUR_START = \" H\";", "modifier": "private static final", "type": "String", "declarator": "HOUR_START = \" H\"", "var_name": "HOUR_START"}, {"original_string": "private static final String HOUR_END = \":\";", "modifier": "private static final", "type": "String", "declarator": "HOUR_END = \":\"", "var_name": "HOUR_END"}, {"original_string": "private static final String MINUTE_START = \":m\";", "modifier": "private static final", "type": "String", "declarator": "MINUTE_START = \":m\"", "var_name": "MINUTE_START"}, {"original_string": "private static final String MINUTE_END = \":\";", "modifier": "private static final", "type": "String", "declarator": "MINUTE_END = \":\"", "var_name": "MINUTE_END"}, {"original_string": "private static final String SECOND_START = \":s\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_START = \":s\"", "var_name": "SECOND_START"}, {"original_string": "private static final String SECOND_END = \":\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_END = \":\"", "var_name": "SECOND_END"}], "methods": [{"identifier": "parseDate", "parameters": "(DataColumn dateColumn, Object date)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(DataColumn dateColumn, Object date)", "full_signature": "public static Date parseDate(DataColumn dateColumn, Object date)", "class_method_signature": "DateUtils.parseDate(DataColumn dateColumn, Object date)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(DateIntervalType type, GroupStrategy strategy, Object date)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(DateIntervalType type, GroupStrategy strategy, Object date)", "full_signature": "public static Date parseDate(DateIntervalType type, GroupStrategy strategy, Object date)", "class_method_signature": "DateUtils.parseDate(DateIntervalType type, GroupStrategy strategy, Object date)", "testcase": false, "constructor": false}, {"identifier": "ensureTwoDigits", "parameters": "(String date, DateIntervalType intervalType)", "modifiers": "public static", "return": "String", "signature": "String ensureTwoDigits(String date, DateIntervalType intervalType)", "full_signature": "public static String ensureTwoDigits(String date, DateIntervalType intervalType)", "class_method_signature": "DateUtils.ensureTwoDigits(String date, DateIntervalType intervalType)", "testcase": false, "constructor": false}, {"identifier": "ensureTwoDigits", "parameters": "(String date, String symbolStart, String symbolEnd)", "modifiers": "public static", "return": "String", "signature": "String ensureTwoDigits(String date, String symbolStart, String symbolEnd)", "full_signature": "public static String ensureTwoDigits(String date, String symbolStart, String symbolEnd)", "class_method_signature": "DateUtils.ensureTwoDigits(String date, String symbolStart, String symbolEnd)", "testcase": false, "constructor": false}], "file": "kie-soup-dataset/kie-soup-dataset-core/src/main/java/org/dashbuilder/dataset/date/DateUtils.java"}, "focal_method": {"identifier": "ensureTwoDigits", "parameters": "(String date, DateIntervalType intervalType)", "modifiers": "public static", "return": "String", "body": "public static String ensureTwoDigits(String date, DateIntervalType intervalType) {\n        String result = date;\n        if (DateIntervalType.compare(intervalType, DateIntervalType.MONTH) <= 0) {\n            result = ensureTwoDigits(result, MONTH_START, MONTH_END);\n        }\n        if (DateIntervalType.compare(intervalType, DateIntervalType.DAY) <= 0) {\n            result = ensureTwoDigits(result, DAY_START, DAY_END);\n        }\n        if (DateIntervalType.compare(intervalType, DateIntervalType.HOUR) <= 0) {\n            result = ensureTwoDigits(result, HOUR_START, HOUR_END);\n        }\n        if (DateIntervalType.compare(intervalType, DateIntervalType.MINUTE) <= 0) {\n            result = ensureTwoDigits(result, MINUTE_START, MINUTE_END);\n        }\n        if (DateIntervalType.compare(intervalType, DateIntervalType.SECOND) <= 0) {\n            result = ensureTwoDigits(result, SECOND_START, SECOND_END);\n        }\n        return result;\n    }", "signature": "String ensureTwoDigits(String date, DateIntervalType intervalType)", "full_signature": "public static String ensureTwoDigits(String date, DateIntervalType intervalType)", "class_method_signature": "DateUtils.ensureTwoDigits(String date, DateIntervalType intervalType)", "testcase": false, "constructor": false, "invocations": ["compare", "ensureTwoDigits", "compare", "ensureTwoDigits", "compare", "ensureTwoDigits", "compare", "ensureTwoDigits", "compare", "ensureTwoDigits"]}, "repository": {"repo_id": 103437385, "url": "https://github.com/kiegroup/kie-soup", "stars": 11, "created": "9/13/2017 6:41:37 PM +00:00", "updates": "2020-01-21T13:07:53+00:00", "fork": "False", "license": "licensed"}}