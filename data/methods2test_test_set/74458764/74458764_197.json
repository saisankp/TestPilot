{"test_class": {"identifier": "TestHttpResponseWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpRequestWrapper requestWrapper;", "modifier": "private", "type": "HttpRequestWrapper", "declarator": "requestWrapper", "var_name": "requestWrapper"}, {"original_string": "private HttpServletResponse response;", "modifier": "private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private HttpResponseWrapper responseWrapper;", "modifier": "private", "type": "HttpResponseWrapper", "declarator": "responseWrapper", "var_name": "responseWrapper"}, {"original_string": "private ByteArrayOutputStream outputStream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "private StringWriter outputWriter;", "modifier": "private", "type": "StringWriter", "declarator": "outputWriter", "var_name": "outputWriter"}, {"original_string": "private SessionConfiguration configuration;", "modifier": "private", "type": "SessionConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private SessionManager manager;", "modifier": "private", "type": "SessionManager", "declarator": "manager", "var_name": "manager"}], "file": "session-replacement/src/test/java/com/amadeus/session/servlet/TestHttpResponseWrapper.java"}, "test_case": {"identifier": "testPropagateOnOutputStreamFlush", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPropagateOnOutputStreamFlush() throws IOException {\n    ServletOutputStream os = responseWrapper.getOutputStream();\n    verify(response).getOutputStream();\n    verify(requestWrapper, never()).propagateSession();\n    os.flush();\n    verify(requestWrapper).propagateSession();\n  }", "signature": "void testPropagateOnOutputStreamFlush()", "full_signature": "@Test public void testPropagateOnOutputStreamFlush()", "class_method_signature": "TestHttpResponseWrapper.testPropagateOnOutputStreamFlush()", "testcase": true, "constructor": false, "invocations": ["getOutputStream", "getOutputStream", "verify", "propagateSession", "verify", "never", "flush", "propagateSession", "verify"]}, "focal_class": {"identifier": "HttpResponseWrapper", "superclass": "extends HttpServletResponseWrapper", "interfaces": "implements ResponseWithSessionId", "fields": [{"original_string": "private static final int LN_LENGTH = System.getProperty(\"line.separator\").length();", "modifier": "private static final", "type": "int", "declarator": "LN_LENGTH = System.getProperty(\"line.separator\").length()", "var_name": "LN_LENGTH"}, {"original_string": "private static final byte[] CRLF = new byte[] { '\\r', '\\n' };", "modifier": "private static final", "type": "byte[]", "declarator": "CRLF = new byte[] { '\\r', '\\n' }", "var_name": "CRLF"}, {"original_string": "private final HttpRequestWrapper request;", "modifier": "private final", "type": "HttpRequestWrapper", "declarator": "request", "var_name": "request"}, {"original_string": "private PrintWriter writer;", "modifier": "private", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private long contentWritten;", "modifier": "private", "type": "long", "declarator": "contentWritten", "var_name": "contentWritten"}, {"original_string": "protected long contentLength;", "modifier": "protected", "type": "long", "declarator": "contentLength", "var_name": "contentLength"}, {"original_string": "private SaveSessionServletOutputStream outputStream;", "modifier": "private", "type": "SaveSessionServletOutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "private final boolean delegatePrintWriter;", "modifier": "private final", "type": "boolean", "declarator": "delegatePrintWriter", "var_name": "delegatePrintWriter"}], "methods": [{"identifier": "HttpResponseWrapper", "parameters": "(HttpRequestWrapper request, HttpServletResponse response)", "modifiers": "", "return": "", "signature": " HttpResponseWrapper(HttpRequestWrapper request, HttpServletResponse response)", "full_signature": "  HttpResponseWrapper(HttpRequestWrapper request, HttpServletResponse response)", "class_method_signature": "HttpResponseWrapper.HttpResponseWrapper(HttpRequestWrapper request, HttpServletResponse response)", "testcase": false, "constructor": true}, {"identifier": "sendError", "parameters": "(int sc)", "modifiers": "@Override public final", "return": "void", "signature": "void sendError(int sc)", "full_signature": "@Override public final void sendError(int sc)", "class_method_signature": "HttpResponseWrapper.sendError(int sc)", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(int sc, String msg)", "modifiers": "@Override public final", "return": "void", "signature": "void sendError(int sc, String msg)", "full_signature": "@Override public final void sendError(int sc, String msg)", "class_method_signature": "HttpResponseWrapper.sendError(int sc, String msg)", "testcase": false, "constructor": false}, {"identifier": "sendRedirect", "parameters": "(String location)", "modifiers": "@Override public final", "return": "void", "signature": "void sendRedirect(String location)", "full_signature": "@Override public final void sendRedirect(String location)", "class_method_signature": "HttpResponseWrapper.sendRedirect(String location)", "testcase": false, "constructor": false}, {"identifier": "getOutputStream", "parameters": "()", "modifiers": "@Override public", "return": "SaveSessionServletOutputStream", "signature": "SaveSessionServletOutputStream getOutputStream()", "full_signature": "@Override public SaveSessionServletOutputStream getOutputStream()", "class_method_signature": "HttpResponseWrapper.getOutputStream()", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "()", "modifiers": "@Override public", "return": "PrintWriter", "signature": "PrintWriter getWriter()", "full_signature": "@Override public PrintWriter getWriter()", "class_method_signature": "HttpResponseWrapper.getWriter()", "testcase": false, "constructor": false}, {"identifier": "wrapOutputStream", "parameters": "(ServletOutputStream servletOutputStream)", "modifiers": "protected", "return": "SaveSessionServletOutputStream", "signature": "SaveSessionServletOutputStream wrapOutputStream(ServletOutputStream servletOutputStream)", "full_signature": "protected SaveSessionServletOutputStream wrapOutputStream(ServletOutputStream servletOutputStream)", "class_method_signature": "HttpResponseWrapper.wrapOutputStream(ServletOutputStream servletOutputStream)", "testcase": false, "constructor": false}, {"identifier": "wrapPrintWriter", "parameters": "()", "modifiers": "private", "return": "PrintWriter", "signature": "PrintWriter wrapPrintWriter()", "full_signature": "private PrintWriter wrapPrintWriter()", "class_method_signature": "HttpResponseWrapper.wrapPrintWriter()", "testcase": false, "constructor": false}, {"identifier": "addHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addHeader(String name, String value)", "full_signature": "@Override public void addHeader(String name, String value)", "class_method_signature": "HttpResponseWrapper.addHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "checkContentLenghtHeader", "parameters": "(String name, String value)", "modifiers": "", "return": "void", "signature": "void checkContentLenghtHeader(String name, String value)", "full_signature": " void checkContentLenghtHeader(String name, String value)", "class_method_signature": "HttpResponseWrapper.checkContentLenghtHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void setHeader(String name, String value)", "full_signature": "@Override public void setHeader(String name, String value)", "class_method_signature": "HttpResponseWrapper.setHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setContentLength", "parameters": "(int len)", "modifiers": "@Override public", "return": "void", "signature": "void setContentLength(int len)", "full_signature": "@Override public void setContentLength(int len)", "class_method_signature": "HttpResponseWrapper.setContentLength(int len)", "testcase": false, "constructor": false}, {"identifier": "checkContentLength", "parameters": "(int contentLengthToWrite)", "modifiers": "private", "return": "void", "signature": "void checkContentLength(int contentLengthToWrite)", "full_signature": "private void checkContentLength(int contentLengthToWrite)", "class_method_signature": "HttpResponseWrapper.checkContentLength(int contentLengthToWrite)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "HttpResponseWrapper.reset()", "testcase": false, "constructor": false}, {"identifier": "encodeURL", "parameters": "(String url)", "modifiers": "@Override public", "return": "String", "signature": "String encodeURL(String url)", "full_signature": "@Override public String encodeURL(String url)", "class_method_signature": "HttpResponseWrapper.encodeURL(String url)", "testcase": false, "constructor": false}, {"identifier": "flushBuffer", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flushBuffer()", "full_signature": "@Override public void flushBuffer()", "class_method_signature": "HttpResponseWrapper.flushBuffer()", "testcase": false, "constructor": false}, {"identifier": "flushAndPropagate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flushAndPropagate()", "full_signature": "private void flushAndPropagate()", "class_method_signature": "HttpResponseWrapper.flushAndPropagate()", "testcase": false, "constructor": false}, {"identifier": "closeOutput", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void closeOutput()", "full_signature": "private void closeOutput()", "class_method_signature": "HttpResponseWrapper.closeOutput()", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/servlet/HttpResponseWrapper.java"}, "focal_method": {"identifier": "getOutputStream", "parameters": "()", "modifiers": "@Override public", "return": "SaveSessionServletOutputStream", "body": "@Override\n  public SaveSessionServletOutputStream getOutputStream() throws IOException {\n    if (writer != null) {\n      throw new IllegalStateException(\"Only one of getWriter()/getOutputStream() can be called, and writer is already used.\");\n    }\n    if (outputStream == null) {\n      outputStream = wrapOutputStream(super.getOutputStream());\n    }\n    return outputStream;\n  }", "signature": "SaveSessionServletOutputStream getOutputStream()", "full_signature": "@Override public SaveSessionServletOutputStream getOutputStream()", "class_method_signature": "HttpResponseWrapper.getOutputStream()", "testcase": false, "constructor": false, "invocations": ["wrapOutputStream", "getOutputStream"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}