{"test_class": {"identifier": "TeradataDatePeriodTest", "superclass": "", "interfaces": "", "fields": [], "file": "dbfit-java/teradata/src/test/java/dbfit/environment/TeradataDatePeriodTest.java"}, "test_case": {"identifier": "equalsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void equalsTest() {\n\n        String fromStr = \"2012-11-11\";\n        String toStr = \"2014-06-02\";\n\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Date fromDate = null;\n        Date toDate = null;\n\n        try {\n            fromDate = dateFormat.parse(fromStr);\n            toDate = dateFormat.parse(toStr);\n        }\n        catch (ParseException e) {\n            throw new Error(\"TeradataDatePeriodTest: toStringTest: error parsing test input\");\n        }\n\n        Date[] range = {fromDate, toDate};\n        TeradataDatePeriod tdp = new TeradataDatePeriod(range);\n        TeradataDatePeriod tdp2 = new TeradataDatePeriod(range);\n        assertTrue(\"Date periods are not equal\", tdp.equals(tdp2));\n    }", "signature": "void equalsTest()", "full_signature": "@Test public void equalsTest()", "class_method_signature": "TeradataDatePeriodTest.equalsTest()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "assertTrue", "equals"]}, "focal_class": {"identifier": "TeradataDatePeriod", "superclass": "extends DbStruct", "interfaces": "", "fields": [], "methods": [{"identifier": "TeradataDatePeriod", "parameters": "(Object[] dates)", "modifiers": "public", "return": "", "signature": " TeradataDatePeriod(Object[] dates)", "full_signature": "public  TeradataDatePeriod(Object[] dates)", "class_method_signature": "TeradataDatePeriod.TeradataDatePeriod(Object[] dates)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TeradataDatePeriod.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "TeradataDatePeriod.equals(Object other)", "testcase": false, "constructor": false}], "file": "dbfit-java/teradata/src/main/java/dbfit/environment/TeradataDatePeriod.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n\n        if (other == null)\n            return false;\n\n        if (!(other instanceof TeradataDatePeriod))\n            return false;\n\n        TeradataDatePeriod odp = (TeradataDatePeriod)other;\n\n        Object[] thisAtts = null;\n        Object[] otherAtts = null;\n\n        try {\n            otherAtts = odp.getAttributes();\n            thisAtts = this.getAttributes();\n        } catch (SQLException e) {\n            System.out.println(\"TeradataDatePeriod: equal: caught exception\");\n        }\n\n        if (!(thisAtts[0].equals(otherAtts[0])))\n            return false;\n\n        if (!(thisAtts[1].equals(otherAtts[1])))\n            return false;\n\n        return true;\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "TeradataDatePeriod.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["getAttributes", "getAttributes", "println", "equals", "equals"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}