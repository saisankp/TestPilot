{"test_class": {"identifier": "EnvironmentConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MOCK_KEY = \"DUBBO_KEY\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_KEY = \"DUBBO_KEY\"", "var_name": "MOCK_KEY"}, {"original_string": "private static final String MOCK_VALUE = \"mockValue\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_VALUE = \"mockValue\"", "var_name": "MOCK_VALUE"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/config/EnvironmentConfigurationTest.java"}, "test_case": {"identifier": "testGetInternalProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInternalProperty() {\n        Map<String, String> map = new HashMap<>();\n        map.put(MOCK_KEY, MOCK_VALUE);\n        try {\n            setEnv(map);\n            EnvironmentConfiguration configuration = new EnvironmentConfiguration();\n            // this UT maybe only works on particular platform, assert only when value is not null.\n            Assertions.assertEquals(MOCK_VALUE, configuration.getInternalProperty(\"dubbo.key\"));\n            Assertions.assertEquals(MOCK_VALUE, configuration.getInternalProperty(\"key\"));\n            Assertions.assertEquals(MOCK_VALUE, configuration.getInternalProperty(\"dubbo_key\"));\n            Assertions.assertEquals(MOCK_VALUE, configuration.getInternalProperty(MOCK_KEY));\n        } catch (Exception e) {\n            // skip test.\n            e.printStackTrace();\n        }\n    }", "signature": "void testGetInternalProperty()", "full_signature": "@Test public void testGetInternalProperty()", "class_method_signature": "EnvironmentConfigurationTest.testGetInternalProperty()", "testcase": true, "constructor": false, "invocations": ["put", "setEnv", "assertEquals", "getInternalProperty", "assertEquals", "getInternalProperty", "assertEquals", "getInternalProperty", "assertEquals", "getInternalProperty", "printStackTrace"]}, "focal_class": {"identifier": "EnvironmentConfiguration", "superclass": "", "interfaces": "implements Configuration", "fields": [], "methods": [{"identifier": "getInternalProperty", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object getInternalProperty(String key)", "full_signature": "@Override public Object getInternalProperty(String key)", "class_method_signature": "EnvironmentConfiguration.getInternalProperty(String key)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/config/EnvironmentConfiguration.java"}, "focal_method": {"identifier": "getInternalProperty", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getInternalProperty(String key) {\n        String value = System.getenv(key);\n        if (StringUtils.isEmpty(value)) {\n            value = System.getenv(StringUtils.toOSStyleKey(key));\n        }\n        return value;\n    }", "signature": "Object getInternalProperty(String key)", "full_signature": "@Override public Object getInternalProperty(String key)", "class_method_signature": "EnvironmentConfiguration.getInternalProperty(String key)", "testcase": false, "constructor": false, "invocations": ["getenv", "isEmpty", "getenv", "toOSStyleKey"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}