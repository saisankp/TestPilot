{"test_class": {"identifier": "AbstractPatternDefinitionResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefinitionPatternMatcher firstMatcher;", "modifier": "private", "type": "DefinitionPatternMatcher", "declarator": "firstMatcher", "var_name": "firstMatcher"}, {"original_string": "private DefinitionPatternMatcher thirdMatcher;", "modifier": "private", "type": "DefinitionPatternMatcher", "declarator": "thirdMatcher", "var_name": "thirdMatcher"}, {"original_string": "private final PatternDefinitionResolver<Integer> resolver = new AbstractPatternDefinitionResolver<Integer>() {\n        @Override\n        protected Map<String, Definition> addDefinitionsAsPatternMatchers(\n                List<DefinitionPatternMatcher> matchers,\n                Map<String, Definition> defsMap) {\n\n            if (defsMap.containsKey(\"first\")) {\n                matchers.add(firstMatcher);\n            }\n            if (defsMap.containsKey(\"third\")) {\n                matchers.add(thirdMatcher);\n            }\n            Map<String, Definition> retValue = new HashMap<String, Definition>(defsMap);\n            retValue.remove(\"first\");\n            retValue.remove(\"third\");\n            return retValue;\n        }\n    };", "modifier": "private final", "type": "PatternDefinitionResolver<Integer>", "declarator": "resolver = new AbstractPatternDefinitionResolver<Integer>() {\n        @Override\n        protected Map<String, Definition> addDefinitionsAsPatternMatchers(\n                List<DefinitionPatternMatcher> matchers,\n                Map<String, Definition> defsMap) {\n\n            if (defsMap.containsKey(\"first\")) {\n                matchers.add(firstMatcher);\n            }\n            if (defsMap.containsKey(\"third\")) {\n                matchers.add(thirdMatcher);\n            }\n            Map<String, Definition> retValue = new HashMap<String, Definition>(defsMap);\n            retValue.remove(\"first\");\n            retValue.remove(\"third\");\n            return retValue;\n        }\n    }", "var_name": "resolver"}], "file": "tiles-core/src/test/java/org/apache/tiles/definition/pattern/AbstractPatternDefinitionResolverTest.java"}, "test_case": {"identifier": "testResolveDefinition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveDefinition() {\n        testResolveDefinitionImpl();\n    }", "signature": "void testResolveDefinition()", "full_signature": "@Test public void testResolveDefinition()", "class_method_signature": "AbstractPatternDefinitionResolverTest.testResolveDefinition()", "testcase": true, "constructor": false, "invocations": ["testResolveDefinitionImpl"]}, "focal_class": {"identifier": "AbstractPatternDefinitionResolver", "superclass": "", "interfaces": "implements\n        PatternDefinitionResolver<T>", "fields": [{"original_string": "private Map<T, List<DefinitionPatternMatcher>> localePatternPaths =\n        new HashMap<T, List<DefinitionPatternMatcher>>();", "modifier": "private", "type": "Map<T, List<DefinitionPatternMatcher>>", "declarator": "localePatternPaths =\n        new HashMap<T, List<DefinitionPatternMatcher>>()", "var_name": "localePatternPaths"}], "methods": [{"identifier": "resolveDefinition", "parameters": "(String name, T customizationKey)", "modifiers": "public", "return": "Definition", "signature": "Definition resolveDefinition(String name, T customizationKey)", "full_signature": "public Definition resolveDefinition(String name, T customizationKey)", "class_method_signature": "AbstractPatternDefinitionResolver.resolveDefinition(String name, T customizationKey)", "testcase": false, "constructor": false}, {"identifier": "storeDefinitionPatterns", "parameters": "(Map<String, Definition> localeDefsMap,\n            T customizationKey)", "modifiers": "public", "return": "Map<String, Definition>", "signature": "Map<String, Definition> storeDefinitionPatterns(Map<String, Definition> localeDefsMap,\n            T customizationKey)", "full_signature": "public Map<String, Definition> storeDefinitionPatterns(Map<String, Definition> localeDefsMap,\n            T customizationKey)", "class_method_signature": "AbstractPatternDefinitionResolver.storeDefinitionPatterns(Map<String, Definition> localeDefsMap,\n            T customizationKey)", "testcase": false, "constructor": false}, {"identifier": "addDefinitionsAsPatternMatchers", "parameters": "(\n            List<DefinitionPatternMatcher> matchers,\n            Map<String, Definition> defsMap)", "modifiers": "protected abstract", "return": "Map<String, Definition>", "signature": "Map<String, Definition> addDefinitionsAsPatternMatchers(\n            List<DefinitionPatternMatcher> matchers,\n            Map<String, Definition> defsMap)", "full_signature": "protected abstract Map<String, Definition> addDefinitionsAsPatternMatchers(\n            List<DefinitionPatternMatcher> matchers,\n            Map<String, Definition> defsMap)", "class_method_signature": "AbstractPatternDefinitionResolver.addDefinitionsAsPatternMatchers(\n            List<DefinitionPatternMatcher> matchers,\n            Map<String, Definition> defsMap)", "testcase": false, "constructor": false}, {"identifier": "searchAndResolveDefinition", "parameters": "(\n            List<DefinitionPatternMatcher> paths, String name)", "modifiers": "private", "return": "Definition", "signature": "Definition searchAndResolveDefinition(\n            List<DefinitionPatternMatcher> paths, String name)", "full_signature": "private Definition searchAndResolveDefinition(\n            List<DefinitionPatternMatcher> paths, String name)", "class_method_signature": "AbstractPatternDefinitionResolver.searchAndResolveDefinition(\n            List<DefinitionPatternMatcher> paths, String name)", "testcase": false, "constructor": false}, {"identifier": "clearPatternPaths", "parameters": "(T customizationKey)", "modifiers": "@Override public", "return": "void", "signature": "void clearPatternPaths(T customizationKey)", "full_signature": "@Override public void clearPatternPaths(T customizationKey)", "class_method_signature": "AbstractPatternDefinitionResolver.clearPatternPaths(T customizationKey)", "testcase": false, "constructor": false}], "file": "tiles-core/src/main/java/org/apache/tiles/definition/pattern/AbstractPatternDefinitionResolver.java"}, "focal_method": {"identifier": "resolveDefinition", "parameters": "(String name, T customizationKey)", "modifiers": "public", "return": "Definition", "body": "public Definition resolveDefinition(String name, T customizationKey) {\n        Definition retValue = null;\n        if (localePatternPaths.containsKey(customizationKey)) {\n            retValue = searchAndResolveDefinition(localePatternPaths\n                    .get(customizationKey), name);\n        }\n        return retValue;\n    }", "signature": "Definition resolveDefinition(String name, T customizationKey)", "full_signature": "public Definition resolveDefinition(String name, T customizationKey)", "class_method_signature": "AbstractPatternDefinitionResolver.resolveDefinition(String name, T customizationKey)", "testcase": false, "constructor": false, "invocations": ["containsKey", "searchAndResolveDefinition", "get"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}