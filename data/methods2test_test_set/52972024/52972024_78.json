{"test_class": {"identifier": "InMemoryDBSelectTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "InMemoryDatabase inMemoryDatabase;", "modifier": "", "type": "InMemoryDatabase", "declarator": "inMemoryDatabase", "var_name": "inMemoryDatabase"}], "file": "CoreFeatures/Database-in-memory/InMemoryDBSelectTask/src/test/java/info/smart_tools/smartactors/database_in_memory/in_memory_db_select_task/InMemoryDBSelectTaskTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws InvalidArgumentException, ChangeValueException, TaskPrepareException, TaskExecutionException, IDatabaseException, ActionExecuteException {\n        InMemoryDBSelectTask selectTask = new InMemoryDBSelectTask();\n        IObject query = new DSObject(\"{\\\"collectionName\\\": \\\"collection_name\\\"}\");\n        IObject criteria = new DSObject(\"{\\\"hello\\\": \\\"world\\\"}\");\n        IAction<IObject[]> callback = mock(IAction.class);\n\n        IFieldName criteriaFieldName = new FieldName(\"criteria\");\n        IFieldName callbackFieldName = new FieldName(\"callback\");\n        query.setValue(criteriaFieldName, criteria);\n        query.setValue(callbackFieldName, callback);\n\n        selectTask.prepare(query);\n        selectTask.execute();\n\n        verify(inMemoryDatabase).select(criteria, \"collection_name\");\n        verify(callback).execute(any(IObject[].class));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "InMemoryDBSelectTaskTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["mock", "setValue", "setValue", "prepare", "execute", "select", "verify", "execute", "verify", "any"]}, "focal_class": {"identifier": "InMemoryDBSelectTask", "superclass": "", "interfaces": "implements IDatabaseTask", "fields": [{"original_string": "private IFieldName collectionFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "collectionFieldName", "var_name": "collectionFieldName"}, {"original_string": "private IFieldName criteriaFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "criteriaFieldName", "var_name": "criteriaFieldName"}, {"original_string": "private IFieldName callbackFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "callbackFieldName", "var_name": "callbackFieldName"}, {"original_string": "private String collection;", "modifier": "private", "type": "String", "declarator": "collection", "var_name": "collection"}, {"original_string": "private IObject criteria;", "modifier": "private", "type": "IObject", "declarator": "criteria", "var_name": "criteria"}, {"original_string": "private IAction<IObject[]> callback;", "modifier": "private", "type": "IAction<IObject[]>", "declarator": "callback", "var_name": "callback"}], "methods": [{"identifier": "InMemoryDBSelectTask", "parameters": "()", "modifiers": "public", "return": "", "signature": " InMemoryDBSelectTask()", "full_signature": "public  InMemoryDBSelectTask()", "class_method_signature": "InMemoryDBSelectTask.InMemoryDBSelectTask()", "testcase": false, "constructor": true}, {"identifier": "prepare", "parameters": "(final IObject query)", "modifiers": "@Override public", "return": "void", "signature": "void prepare(final IObject query)", "full_signature": "@Override public void prepare(final IObject query)", "class_method_signature": "InMemoryDBSelectTask.prepare(final IObject query)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "InMemoryDBSelectTask.execute()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Database-in-memory/InMemoryDBSelectTask/src/main/java/info/smart_tools/smartactors/database_in_memory/in_memory_db_select_task/InMemoryDBSelectTask.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute() throws TaskExecutionException {\n        try {\n            IDatabase dataBase = IOC.resolve(Keys.getOrAdd(InMemoryDatabase.class.getCanonicalName()));\n            List<IObject> result = dataBase.select(criteria, collection);\n            callback.execute(result.toArray(new IObject[result.size()]));\n        } catch (ResolutionException e) {\n            throw new TaskExecutionException(\"Failed to resolve InMemoryDatabase\", e);\n        } catch (Exception e) {\n            try {\n                throw new TaskExecutionException(\"Select failed: criteria = \" + criteria.serialize(), e);\n            } catch (SerializeException | NullPointerException e1) {\n                throw new TaskExecutionException(\"Select failed\", e);\n            }\n        }\n    }", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "InMemoryDBSelectTask.execute()", "testcase": false, "constructor": false, "invocations": ["resolve", "getOrAdd", "getCanonicalName", "select", "execute", "toArray", "size", "serialize"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}