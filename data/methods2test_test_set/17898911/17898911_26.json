{"test_class": {"identifier": "DataSetGroupDateEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    DataSetGroupDateEditor.View view;", "modifier": "@Mock", "type": "DataSetGroupDateEditor.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    Event<DataSetGroupDateChanged> changeEvent;", "modifier": "@Mock", "type": "Event<DataSetGroupDateChanged>", "declarator": "changeEvent", "var_name": "changeEvent"}, {"original_string": "DataSetGroupDateEditor presenter;", "modifier": "", "type": "DataSetGroupDateEditor", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/widgets/group/DataSetGroupDateEditorTest.java"}, "test_case": {"identifier": "testFixedModeInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFixedModeInit() {\n        presenter.init(new ColumnGroup(\"col\", \"col\", FIXED, 15, HOUR.toString()));\n\n        verify(view).setFixedModeValue(true);\n        verify(view).clearIntervalTypeSelector();\n        verify(view, times(FIXED_INTERVALS_SUPPORTED.size())).addIntervalTypeItem(any(DateIntervalType.class));\n        verify(view).setSelectedIntervalTypeIndex(anyInt());\n        verify(view, never()).setMaxIntervalsVisibility(true);\n        verify(view, never()).setFirstDayVisibility(true);\n        verify(view, never()).setFirstMonthVisibility(true);\n    }", "signature": "void testFixedModeInit()", "full_signature": "@Test public void testFixedModeInit()", "class_method_signature": "DataSetGroupDateEditorTest.testFixedModeInit()", "testcase": true, "constructor": false, "invocations": ["init", "toString", "setFixedModeValue", "verify", "clearIntervalTypeSelector", "verify", "addIntervalTypeItem", "verify", "times", "size", "any", "setSelectedIntervalTypeIndex", "verify", "anyInt", "setMaxIntervalsVisibility", "verify", "never", "setFirstDayVisibility", "verify", "never", "setFirstMonthVisibility", "verify", "never"]}, "focal_class": {"identifier": "DataSetGroupDateEditor", "superclass": "", "interfaces": "implements IsWidget", "fields": [{"original_string": "View view = null;", "modifier": "", "type": "View", "declarator": "view = null", "var_name": "view"}, {"original_string": "ColumnGroup columnGroup = null;", "modifier": "", "type": "ColumnGroup", "declarator": "columnGroup = null", "var_name": "columnGroup"}, {"original_string": "Event<DataSetGroupDateChanged> changeEvent = null;", "modifier": "", "type": "Event<DataSetGroupDateChanged>", "declarator": "changeEvent = null", "var_name": "changeEvent"}], "methods": [{"identifier": "DataSetGroupDateEditor", "parameters": "(View view, Event<DataSetGroupDateChanged> changeEvent)", "modifiers": "@Inject public", "return": "", "signature": " DataSetGroupDateEditor(View view, Event<DataSetGroupDateChanged> changeEvent)", "full_signature": "@Inject public  DataSetGroupDateEditor(View view, Event<DataSetGroupDateChanged> changeEvent)", "class_method_signature": "DataSetGroupDateEditor.DataSetGroupDateEditor(View view, Event<DataSetGroupDateChanged> changeEvent)", "testcase": false, "constructor": true}, {"identifier": "asWidget", "parameters": "()", "modifiers": "@Override public", "return": "Widget", "signature": "Widget asWidget()", "full_signature": "@Override public Widget asWidget()", "class_method_signature": "DataSetGroupDateEditor.asWidget()", "testcase": false, "constructor": false}, {"identifier": "getColumnGroup", "parameters": "()", "modifiers": "public", "return": "ColumnGroup", "signature": "ColumnGroup getColumnGroup()", "full_signature": "public ColumnGroup getColumnGroup()", "class_method_signature": "DataSetGroupDateEditor.getColumnGroup()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(ColumnGroup columnGroup)", "modifiers": "public", "return": "void", "signature": "void init(ColumnGroup columnGroup)", "full_signature": "public void init(ColumnGroup columnGroup)", "class_method_signature": "DataSetGroupDateEditor.init(ColumnGroup columnGroup)", "testcase": false, "constructor": false}, {"identifier": "isFixedStrategy", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFixedStrategy()", "full_signature": "public boolean isFixedStrategy()", "class_method_signature": "DataSetGroupDateEditor.isFixedStrategy()", "testcase": false, "constructor": false}, {"identifier": "initIntervalTypeSelector", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initIntervalTypeSelector()", "full_signature": "protected void initIntervalTypeSelector()", "class_method_signature": "DataSetGroupDateEditor.initIntervalTypeSelector()", "testcase": false, "constructor": false}, {"identifier": "getListOfIntervalTypes", "parameters": "()", "modifiers": "public", "return": "List<DateIntervalType>", "signature": "List<DateIntervalType> getListOfIntervalTypes()", "full_signature": "public List<DateIntervalType> getListOfIntervalTypes()", "class_method_signature": "DataSetGroupDateEditor.getListOfIntervalTypes()", "testcase": false, "constructor": false}, {"identifier": "initFirstDayListBox", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initFirstDayListBox()", "full_signature": "protected void initFirstDayListBox()", "class_method_signature": "DataSetGroupDateEditor.initFirstDayListBox()", "testcase": false, "constructor": false}, {"identifier": "initFirstMonthListBox", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initFirstMonthListBox()", "full_signature": "protected void initFirstMonthListBox()", "class_method_signature": "DataSetGroupDateEditor.initFirstMonthListBox()", "testcase": false, "constructor": false}, {"identifier": "initMaxIntervalsTextBox", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initMaxIntervalsTextBox()", "full_signature": "protected void initMaxIntervalsTextBox()", "class_method_signature": "DataSetGroupDateEditor.initMaxIntervalsTextBox()", "testcase": false, "constructor": false}, {"identifier": "initEmptyIntervalsFlag", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initEmptyIntervalsFlag()", "full_signature": "protected void initEmptyIntervalsFlag()", "class_method_signature": "DataSetGroupDateEditor.initEmptyIntervalsFlag()", "testcase": false, "constructor": false}, {"identifier": "resetCommon", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void resetCommon()", "full_signature": "protected void resetCommon()", "class_method_signature": "DataSetGroupDateEditor.resetCommon()", "testcase": false, "constructor": false}, {"identifier": "gotoDynamicMode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoDynamicMode()", "full_signature": "public void gotoDynamicMode()", "class_method_signature": "DataSetGroupDateEditor.gotoDynamicMode()", "testcase": false, "constructor": false}, {"identifier": "gotoFixedMode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoFixedMode()", "full_signature": "public void gotoFixedMode()", "class_method_signature": "DataSetGroupDateEditor.gotoFixedMode()", "testcase": false, "constructor": false}, {"identifier": "onFixedStrategyChanged", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onFixedStrategyChanged()", "full_signature": "public void onFixedStrategyChanged()", "class_method_signature": "DataSetGroupDateEditor.onFixedStrategyChanged()", "testcase": false, "constructor": false}, {"identifier": "onIntervalTypeSelected", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onIntervalTypeSelected()", "full_signature": " void onIntervalTypeSelected()", "class_method_signature": "DataSetGroupDateEditor.onIntervalTypeSelected()", "testcase": false, "constructor": false}, {"identifier": "onEmptyIntervalsChanged", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onEmptyIntervalsChanged()", "full_signature": " void onEmptyIntervalsChanged()", "class_method_signature": "DataSetGroupDateEditor.onEmptyIntervalsChanged()", "testcase": false, "constructor": false}, {"identifier": "onMaxIntervalsChanged", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onMaxIntervalsChanged()", "full_signature": " void onMaxIntervalsChanged()", "class_method_signature": "DataSetGroupDateEditor.onMaxIntervalsChanged()", "testcase": false, "constructor": false}, {"identifier": "onFirstDaySelected", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onFirstDaySelected()", "full_signature": " void onFirstDaySelected()", "class_method_signature": "DataSetGroupDateEditor.onFirstDaySelected()", "testcase": false, "constructor": false}, {"identifier": "onFirstMonthSelected", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onFirstMonthSelected()", "full_signature": " void onFirstMonthSelected()", "class_method_signature": "DataSetGroupDateEditor.onFirstMonthSelected()", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/widgets/group/DataSetGroupDateEditor.java"}, "focal_method": {"identifier": "init", "parameters": "(ColumnGroup columnGroup)", "modifiers": "public", "return": "void", "body": "public void init(ColumnGroup columnGroup) {\n        this.columnGroup = columnGroup;\n        if (columnGroup != null) {\n            if (isFixedStrategy()) {\n                gotoFixedMode();\n            } else {\n                gotoDynamicMode();\n            }\n        }\n    }", "signature": "void init(ColumnGroup columnGroup)", "full_signature": "public void init(ColumnGroup columnGroup)", "class_method_signature": "DataSetGroupDateEditor.init(ColumnGroup columnGroup)", "testcase": false, "constructor": false, "invocations": ["isFixedStrategy", "gotoFixedMode", "gotoDynamicMode"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}