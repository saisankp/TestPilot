{"test_class": {"identifier": "BooleanArrayDifferenceTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "misc/diff/src/test/java/org/openscience/cdk/tools/diff/tree/BooleanArrayDifferenceTest.java"}, "test_case": {"identifier": "testDiff", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDiff() {\n        IDifference result = BooleanArrayDifference.construct(\"Foo\", new boolean[]{true, true}, new boolean[]{false,\n                false});\n        Assert.assertNotNull(result);\n    }", "signature": "void testDiff()", "full_signature": "@Test public void testDiff()", "class_method_signature": "BooleanArrayDifferenceTest.testDiff()", "testcase": true, "constructor": false, "invocations": ["construct", "assertNotNull"]}, "focal_class": {"identifier": "BooleanArrayDifference", "superclass": "extends AbstractDifferenceList", "interfaces": "implements IDifferenceList", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "BooleanArrayDifference", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " BooleanArrayDifference(String name)", "full_signature": "private  BooleanArrayDifference(String name)", "class_method_signature": "BooleanArrayDifference.BooleanArrayDifference(String name)", "testcase": false, "constructor": true}, {"identifier": "construct", "parameters": "(String name, boolean[] first, boolean[] second)", "modifiers": "public static", "return": "IDifference", "signature": "IDifference construct(String name, boolean[] first, boolean[] second)", "full_signature": "public static IDifference construct(String name, boolean[] first, boolean[] second)", "class_method_signature": "BooleanArrayDifference.construct(String name, boolean[] first, boolean[] second)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BooleanArrayDifference.toString()", "testcase": false, "constructor": false}], "file": "misc/diff/src/main/java/org/openscience/cdk/tools/diff/tree/BooleanArrayDifference.java"}, "focal_method": {"identifier": "construct", "parameters": "(String name, boolean[] first, boolean[] second)", "modifiers": "public static", "return": "IDifference", "body": "public static IDifference construct(String name, boolean[] first, boolean[] second) {\n        if (first == null && second == null) return null;\n\n        BooleanArrayDifference totalDiff = new BooleanArrayDifference(name);\n        int firstLength = first == null ? 0 : first.length;\n        int secondLength = second == null ? 0 : second.length;\n        if (firstLength == secondLength) {\n            for (int i = 0; i < firstLength; i++) {\n                totalDiff.addChild(BooleanDifference.construct(\"\" + i, first[i], second[i]));\n            }\n        } else if (firstLength < secondLength) {\n            for (int i = 0; i < firstLength; i++) {\n                totalDiff.addChild(BooleanDifference.construct(\"\" + i, first[i], second[i]));\n            }\n            for (int i = firstLength; i < secondLength; i++) {\n                totalDiff.addChild(BooleanDifference.construct(\"\" + i, null, second[i]));\n            }\n        } else { // secondLength < firstLength\n            for (int i = 0; i < secondLength; i++) {\n                totalDiff.addChild(BooleanDifference.construct(\"\" + i, first[i], second[i]));\n            }\n            for (int i = secondLength; i < firstLength; i++) {\n                totalDiff.addChild(BooleanDifference.construct(\"\" + i, first[i], null));\n            }\n        }\n        if (totalDiff.childCount() == 0) {\n            return null;\n        }\n        return totalDiff;\n    }", "signature": "IDifference construct(String name, boolean[] first, boolean[] second)", "full_signature": "public static IDifference construct(String name, boolean[] first, boolean[] second)", "class_method_signature": "BooleanArrayDifference.construct(String name, boolean[] first, boolean[] second)", "testcase": false, "constructor": false, "invocations": ["addChild", "construct", "addChild", "construct", "addChild", "construct", "addChild", "construct", "addChild", "construct", "childCount"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}