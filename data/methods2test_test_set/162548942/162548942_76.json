{"test_class": {"identifier": "DnsNamingServiceTest", "superclass": "extends BaseMockitoTest", "interfaces": "", "fields": [], "file": "brpc-java-governance/src/test/java/com/baidu/brpc/naming/DnsNamingServiceTest.java"}, "test_case": {"identifier": "testEmptyServerList", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testEmptyServerList() {\n        DnsNamingService namingService = new DnsNamingService(new BrpcURL(\"\"));\n        namingService.lookup(null);\n    }", "signature": "void testEmptyServerList()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testEmptyServerList()", "class_method_signature": "DnsNamingServiceTest.testEmptyServerList()", "testcase": true, "constructor": false, "invocations": ["lookup"]}, "focal_class": {"identifier": "DnsNamingService", "superclass": "", "interfaces": "implements NamingService", "fields": [{"original_string": "private BrpcURL namingUrl;", "modifier": "private", "type": "BrpcURL", "declarator": "namingUrl", "var_name": "namingUrl"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private int port;", "modifier": "private", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private String hostPort;", "modifier": "private", "type": "String", "declarator": "hostPort", "var_name": "hostPort"}, {"original_string": "private List<ServiceInstance> lastInstances = new ArrayList<ServiceInstance>();", "modifier": "private", "type": "List<ServiceInstance>", "declarator": "lastInstances = new ArrayList<ServiceInstance>()", "var_name": "lastInstances"}, {"original_string": "private Timer namingServiceTimer;", "modifier": "private", "type": "Timer", "declarator": "namingServiceTimer", "var_name": "namingServiceTimer"}, {"original_string": "private int updateInterval;", "modifier": "private", "type": "int", "declarator": "updateInterval", "var_name": "updateInterval"}], "methods": [{"identifier": "DnsNamingService", "parameters": "(BrpcURL namingUrl)", "modifiers": "public", "return": "", "signature": " DnsNamingService(BrpcURL namingUrl)", "full_signature": "public  DnsNamingService(BrpcURL namingUrl)", "class_method_signature": "DnsNamingService.DnsNamingService(BrpcURL namingUrl)", "testcase": false, "constructor": true}, {"identifier": "lookup", "parameters": "(SubscribeInfo subscribeInfo)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "signature": "List<ServiceInstance> lookup(SubscribeInfo subscribeInfo)", "full_signature": "@Override public List<ServiceInstance> lookup(SubscribeInfo subscribeInfo)", "class_method_signature": "DnsNamingService.lookup(SubscribeInfo subscribeInfo)", "testcase": false, "constructor": false}, {"identifier": "subscribe", "parameters": "(SubscribeInfo subscribeInfo, final NotifyListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void subscribe(SubscribeInfo subscribeInfo, final NotifyListener listener)", "full_signature": "@Override public void subscribe(SubscribeInfo subscribeInfo, final NotifyListener listener)", "class_method_signature": "DnsNamingService.subscribe(SubscribeInfo subscribeInfo, final NotifyListener listener)", "testcase": false, "constructor": false}, {"identifier": "unsubscribe", "parameters": "(SubscribeInfo subscribeInfo)", "modifiers": "@Override public", "return": "void", "signature": "void unsubscribe(SubscribeInfo subscribeInfo)", "full_signature": "@Override public void unsubscribe(SubscribeInfo subscribeInfo)", "class_method_signature": "DnsNamingService.unsubscribe(SubscribeInfo subscribeInfo)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(RegisterInfo registerInfo)", "modifiers": "@Override public", "return": "void", "signature": "void register(RegisterInfo registerInfo)", "full_signature": "@Override public void register(RegisterInfo registerInfo)", "class_method_signature": "DnsNamingService.register(RegisterInfo registerInfo)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(RegisterInfo registerInfo)", "modifiers": "@Override public", "return": "void", "signature": "void unregister(RegisterInfo registerInfo)", "full_signature": "@Override public void unregister(RegisterInfo registerInfo)", "class_method_signature": "DnsNamingService.unregister(RegisterInfo registerInfo)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "DnsNamingService.destroy()", "testcase": false, "constructor": false}, {"identifier": "getHostPort", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHostPort()", "full_signature": "public String getHostPort()", "class_method_signature": "DnsNamingService.getHostPort()", "testcase": false, "constructor": false}], "file": "brpc-java-governance/src/main/java/com/baidu/brpc/naming/DnsNamingService.java"}, "focal_method": {"identifier": "lookup", "parameters": "(SubscribeInfo subscribeInfo)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "body": "@Override\n    public List<ServiceInstance> lookup(SubscribeInfo subscribeInfo) {\n        InetAddress[] addresses;\n        try {\n            addresses = InetAddress.getAllByName(host);\n        } catch (UnknownHostException ex) {\n            throw new IllegalArgumentException(\"unknown http host\");\n        }\n\n        List<ServiceInstance> instances = new ArrayList<ServiceInstance>();\n        for (InetAddress address : addresses) {\n            ServiceInstance instance = new ServiceInstance(address.getHostAddress(), port);\n            if (subscribeInfo != null && StringUtils.isNoneBlank(subscribeInfo.getServiceId())) {\n                instance.setServiceName(subscribeInfo.getServiceId());\n            }\n            instances.add(instance);\n        }\n        return instances;\n    }", "signature": "List<ServiceInstance> lookup(SubscribeInfo subscribeInfo)", "full_signature": "@Override public List<ServiceInstance> lookup(SubscribeInfo subscribeInfo)", "class_method_signature": "DnsNamingService.lookup(SubscribeInfo subscribeInfo)", "testcase": false, "constructor": false, "invocations": ["getAllByName", "getHostAddress", "isNoneBlank", "getServiceId", "setServiceName", "getServiceId", "add"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}