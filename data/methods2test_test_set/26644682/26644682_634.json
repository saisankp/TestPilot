{"test_class": {"identifier": "ComputePreparationIdTest", "superclass": "extends Base_1_2_0_PE_Test", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ComputePreparationId task;", "modifier": "@Autowired\n    private", "type": "ComputePreparationId", "declarator": "task", "var_name": "task"}, {"original_string": "@Autowired\n    private PreparationRepository preparationRepository;", "modifier": "@Autowired\n    private", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}], "file": "dataprep-upgrade/src/test/java/org/talend/dataprep/upgrade/to_1_2_0_PE/ComputePreparationIdTest.java"}, "test_case": {"identifier": "shouldComputePreparationsId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputePreparationsId() throws Exception {\n        // given\n        final Stream<Preparation> initialPreparations = preparationRepository.list(Preparation.class);\n        final List<String> initialIds = initialPreparations.map(Preparation::getId).collect(Collectors.toList());\n\n        // when\n        task.run();\n\n        // then\n        final Stream<Preparation> preparations = preparationRepository.list(Preparation.class);\n        final List<String> updatedIds = preparations.map(Preparation::getId).collect(Collectors.toList());\n        assertEquals(initialIds.size(), updatedIds.size());\n        updatedIds.forEach(id -> assertFalse(initialIds.contains(id)));\n\n    }", "signature": "void shouldComputePreparationsId()", "full_signature": "@Test public void shouldComputePreparationsId()", "class_method_signature": "ComputePreparationIdTest.shouldComputePreparationsId()", "testcase": true, "constructor": false, "invocations": ["list", "collect", "map", "toList", "run", "list", "collect", "map", "toList", "assertEquals", "size", "size", "forEach", "assertFalse", "contains"]}, "focal_class": {"identifier": "ComputePreparationId", "superclass": "", "interfaces": "implements BaseUpgradeTaskTo_1_2_0_PE", "fields": [{"original_string": "private static final Logger LOG = getLogger(ComputePreparationId.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = getLogger(ComputePreparationId.class)", "var_name": "LOG"}, {"original_string": "@Autowired\n    private PreparationRepository repository;", "modifier": "@Autowired\n    private", "type": "PreparationRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "ComputePreparationId.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "@Override public", "return": "target", "signature": "target getTarget()", "full_signature": "@Override public target getTarget()", "class_method_signature": "ComputePreparationId.getTarget()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ComputePreparationId.run()", "testcase": false, "constructor": false}], "file": "dataprep-upgrade/src/main/java/org/talend/dataprep/upgrade/to_1_2_0_PE/ComputePreparationId.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n\n        final Stream<Preparation> preparations = repository.list(Preparation.class);\n        preparations.forEach(p -> {\n            // preparation needs to be removed first as its id will change\n            repository.remove(p);\n\n            // change the preparation id and save id\n            p.setId(UUID.randomUUID().toString());\n            repository.add(p);\n\n            LOG.debug(\"preparation {} has a new id {}\", p.getName(), p.getName());\n        });\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ComputePreparationId.run()", "testcase": false, "constructor": false, "invocations": ["list", "forEach", "remove", "setId", "toString", "randomUUID", "add", "debug", "getName", "getName"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}