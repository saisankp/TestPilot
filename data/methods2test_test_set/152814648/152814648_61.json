{"test_class": {"identifier": "JobActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINK_NAME = \"link-name\";", "modifier": "private static final", "type": "String", "declarator": "LINK_NAME = \"link-name\"", "var_name": "LINK_NAME"}, {"original_string": "private static final String TREND_NAME = \"trend-name\";", "modifier": "private static final", "type": "String", "declarator": "TREND_NAME = \"trend-name\"", "var_name": "TREND_NAME"}, {"original_string": "private static final String ID = \"jobaction-id\";", "modifier": "private static final", "type": "String", "declarator": "ID = \"jobaction-id\"", "var_name": "ID"}, {"original_string": "private static final String ANALYSIS_ID = \"analysis-id\";", "modifier": "private static final", "type": "String", "declarator": "ANALYSIS_ID = \"analysis-id\"", "var_name": "ANALYSIS_ID"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/JobActionTest.java"}, "test_case": {"identifier": "shouldUseLabelProviderIDAsID", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldUseLabelProviderIDAsID() {\n        Job<?, ?> job = mock(Job.class);\n        StaticAnalysisLabelProvider labelProvider = mock(StaticAnalysisLabelProvider.class);\n        when(labelProvider.getId()).thenReturn(ID); \n        JobAction action = new JobAction(job, labelProvider, 1);\n        assertThat(action.getId()).isEqualTo(ID); \n    }", "signature": "void shouldUseLabelProviderIDAsID()", "full_signature": "@Test void shouldUseLabelProviderIDAsID()", "class_method_signature": "JobActionTest.shouldUseLabelProviderIDAsID()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getId", "isEqualTo", "assertThat", "getId"]}, "focal_class": {"identifier": "JobAction", "superclass": "", "interfaces": "implements Action, AsyncTrendChart", "fields": [{"original_string": "private final Job<?, ?> owner;", "modifier": "private final", "type": "Job<?, ?>", "declarator": "owner", "var_name": "owner"}, {"original_string": "private final StaticAnalysisLabelProvider labelProvider;", "modifier": "private final", "type": "StaticAnalysisLabelProvider", "declarator": "labelProvider", "var_name": "labelProvider"}, {"original_string": "private final int numberOfTools;", "modifier": "private final", "type": "int", "declarator": "numberOfTools", "var_name": "numberOfTools"}, {"original_string": "private final TrendChartType trendChartType;", "modifier": "private final", "type": "TrendChartType", "declarator": "trendChartType", "var_name": "trendChartType"}], "methods": [{"identifier": "JobAction", "parameters": "(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider)", "modifiers": "@Deprecated public", "return": "", "signature": " JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider)", "full_signature": "@Deprecated public  JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider)", "class_method_signature": "JobAction.JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider)", "testcase": false, "constructor": true}, {"identifier": "JobAction", "parameters": "(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools)", "modifiers": "public", "return": "", "signature": " JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools)", "full_signature": "public  JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools)", "class_method_signature": "JobAction.JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools)", "testcase": false, "constructor": true}, {"identifier": "JobAction", "parameters": "(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools,\n            final TrendChartType trendChartType)", "modifiers": "public", "return": "", "signature": " JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools,\n            final TrendChartType trendChartType)", "full_signature": "public  JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools,\n            final TrendChartType trendChartType)", "class_method_signature": "JobAction.JobAction(final Job<?, ?> owner, final StaticAnalysisLabelProvider labelProvider, final int numberOfTools,\n            final TrendChartType trendChartType)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "JobAction.getId()", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@Override public String getDisplayName()", "class_method_signature": "JobAction.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "getTrendName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTrendName()", "full_signature": "public String getTrendName()", "class_method_signature": "JobAction.getTrendName()", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "Job<?, ?>", "signature": "Job<?, ?> getOwner()", "full_signature": "public Job<?, ?> getOwner()", "class_method_signature": "JobAction.getOwner()", "testcase": false, "constructor": false}, {"identifier": "createBuildHistory", "parameters": "()", "modifiers": "public", "return": "History", "signature": "History createBuildHistory()", "full_signature": "public History createBuildHistory()", "class_method_signature": "JobAction.createBuildHistory()", "testcase": false, "constructor": false}, {"identifier": "getIconFileName", "parameters": "()", "modifiers": "@Override @CheckForNull public", "return": "String", "signature": "String getIconFileName()", "full_signature": "@Override @CheckForNull public String getIconFileName()", "class_method_signature": "JobAction.getIconFileName()", "testcase": false, "constructor": false}, {"identifier": "getUrlName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUrlName()", "full_signature": "@Override public String getUrlName()", "class_method_signature": "JobAction.getUrlName()", "testcase": false, "constructor": false}, {"identifier": "doIndex", "parameters": "(final StaplerRequest request, final StaplerResponse response)", "modifiers": "@SuppressWarnings(\"unused\") // Called by jelly view public", "return": "void", "signature": "void doIndex(final StaplerRequest request, final StaplerResponse response)", "full_signature": "@SuppressWarnings(\"unused\") // Called by jelly view public void doIndex(final StaplerRequest request, final StaplerResponse response)", "class_method_signature": "JobAction.doIndex(final StaplerRequest request, final StaplerResponse response)", "testcase": false, "constructor": false}, {"identifier": "getLatestAction", "parameters": "()", "modifiers": "public", "return": "Optional<ResultAction>", "signature": "Optional<ResultAction> getLatestAction()", "full_signature": "public Optional<ResultAction> getLatestAction()", "class_method_signature": "JobAction.getLatestAction()", "testcase": false, "constructor": false}, {"identifier": "getBuildTrendModel", "parameters": "()", "modifiers": "@JavaScriptMethod @Override public", "return": "String", "signature": "String getBuildTrendModel()", "full_signature": "@JavaScriptMethod @Override public String getBuildTrendModel()", "class_method_signature": "JobAction.getBuildTrendModel()", "testcase": false, "constructor": false}, {"identifier": "createChartModel", "parameters": "()", "modifiers": "private", "return": "LinesChartModel", "signature": "LinesChartModel createChartModel()", "full_signature": "private LinesChartModel createChartModel()", "class_method_signature": "JobAction.createChartModel()", "testcase": false, "constructor": false}, {"identifier": "isTrendVisible", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // Called by jelly view @Override public", "return": "boolean", "signature": "boolean isTrendVisible()", "full_signature": "@SuppressWarnings(\"unused\") // Called by jelly view @Override public boolean isTrendVisible()", "class_method_signature": "JobAction.isTrendVisible()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "JobAction.toString()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/JobAction.java"}, "focal_method": {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getId() {\n        return labelProvider.getId();\n    }", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "JobAction.getId()", "testcase": false, "constructor": false, "invocations": ["getId"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}