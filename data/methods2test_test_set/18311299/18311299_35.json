{"test_class": {"identifier": "MysqlEventMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "reactive-source-mysql/src/test/java/org/reactivesource/mysql/MysqlEventMapperTest.java"}, "test_case": {"identifier": "testCorrectlyMapsAMysqlToAnEventWithAMapForOldAndNewEntities", "parameters": "()", "modifiers": "@Test(groups = SMALL) public", "return": "void", "body": "@Test(groups = SMALL)\n    public void testCorrectlyMapsAMysqlToAnEventWithAMapForOldAndNewEntities() {\n        MysqlEventMapper mapper = new MysqlEventMapper();\n        MysqlEvent mysqlEvent = new MysqlEvent(1, \"tableName\", \"INSERT\", \"{}\", \"{'key':'value'}\", new Date());\n        Event<Map<String, Object>> genericEvent = mapper.mapToGenericEvent(mysqlEvent);\n\n        assertEquals(genericEvent.getEventType(), mysqlEvent.getEventType());\n        assertEquals(genericEvent.getEntityName(), mysqlEvent.getEntityName());\n        assertEquals(genericEvent.getNewEntity().size(), 1);\n        assertEquals(genericEvent.getOldEntity().size(), 0);\n    }", "signature": "void testCorrectlyMapsAMysqlToAnEventWithAMapForOldAndNewEntities()", "full_signature": "@Test(groups = SMALL) public void testCorrectlyMapsAMysqlToAnEventWithAMapForOldAndNewEntities()", "class_method_signature": "MysqlEventMapperTest.testCorrectlyMapsAMysqlToAnEventWithAMapForOldAndNewEntities()", "testcase": true, "constructor": false, "invocations": ["mapToGenericEvent", "assertEquals", "getEventType", "getEventType", "assertEquals", "getEntityName", "getEntityName", "assertEquals", "size", "getNewEntity", "assertEquals", "size", "getOldEntity"]}, "focal_class": {"identifier": "MysqlEventMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "mapToGenericEvent", "parameters": "(MysqlEvent mysqlEvent)", "modifiers": "", "return": "Event<Map<String, Object>>", "signature": "Event<Map<String, Object>> mapToGenericEvent(MysqlEvent mysqlEvent)", "full_signature": " Event<Map<String, Object>> mapToGenericEvent(MysqlEvent mysqlEvent)", "class_method_signature": "MysqlEventMapper.mapToGenericEvent(MysqlEvent mysqlEvent)", "testcase": false, "constructor": false}], "file": "reactive-source-mysql/src/main/java/org/reactivesource/mysql/MysqlEventMapper.java"}, "focal_method": {"identifier": "mapToGenericEvent", "parameters": "(MysqlEvent mysqlEvent)", "modifiers": "", "return": "Event<Map<String, Object>>", "body": "Event<Map<String, Object>> mapToGenericEvent(MysqlEvent mysqlEvent) {\n        Map<String, Object> oldEntity = JsonParserUtils.jsonStringToMap(mysqlEvent.getOldEntity());\n        Map<String, Object> newEntity = JsonParserUtils.jsonStringToMap(mysqlEvent.getNewEntity());\n        return new Event<>(mysqlEvent.getEventType(), mysqlEvent.getEntityName(), newEntity, oldEntity);\n    }", "signature": "Event<Map<String, Object>> mapToGenericEvent(MysqlEvent mysqlEvent)", "full_signature": " Event<Map<String, Object>> mapToGenericEvent(MysqlEvent mysqlEvent)", "class_method_signature": "MysqlEventMapper.mapToGenericEvent(MysqlEvent mysqlEvent)", "testcase": false, "constructor": false, "invocations": ["jsonStringToMap", "getOldEntity", "jsonStringToMap", "getNewEntity", "getEventType", "getEntityName"]}, "repository": {"repo_id": 18311299, "url": "https://github.com/eBay/reactive-source", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 9, "size": 317, "license": "licensed"}}