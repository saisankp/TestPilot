{"test_class": {"identifier": "DynamoDBManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    public AmazonDynamoDB dynamoDB = PowerMock.createMock(AmazonDynamoDB.class);", "modifier": "@Mock\n    public", "type": "AmazonDynamoDB", "declarator": "dynamoDB = PowerMock.createMock(AmazonDynamoDB.class)", "var_name": "dynamoDB"}, {"original_string": "static final String tableName = \"table\";", "modifier": "static final", "type": "String", "declarator": "tableName = \"table\"", "var_name": "tableName"}], "file": "ingester/src/test/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/DynamoDBManagerTest.java"}, "test_case": {"identifier": "testTableDoesNotExist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTableDoesNotExist() {\n        EasyMock.expect(dynamoDB.describeTable(tableName)).andThrow(new ResourceNotFoundException(\"\"));\n        PowerMock.replayAll();\n        assertFalse(DynamoDBManager.doesTableExist(dynamoDB, tableName));\n        PowerMock.verifyAll();\n    }", "signature": "void testTableDoesNotExist()", "full_signature": "@Test public void testTableDoesNotExist()", "class_method_signature": "DynamoDBManagerTest.testTableDoesNotExist()", "testcase": true, "constructor": false, "invocations": ["andThrow", "expect", "describeTable", "replayAll", "assertFalse", "doesTableExist", "verifyAll"]}, "focal_class": {"identifier": "DynamoDBManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(DynamoDBManager.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DynamoDBManager.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static final long RETRY_DELAY = 20 * 1000;", "modifier": "private static final", "type": "long", "declarator": "RETRY_DELAY = 20 * 1000", "var_name": "RETRY_DELAY"}, {"original_string": "private static final int RETRY_COUNT = 3;", "modifier": "private static final", "type": "int", "declarator": "RETRY_COUNT = 3", "var_name": "RETRY_COUNT"}], "methods": [{"identifier": "createTable", "parameters": "(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "modifiers": "public static", "return": "TableDescription", "signature": "TableDescription createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "full_signature": "public static TableDescription createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "class_method_signature": "DynamoDBManager.createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "testcase": false, "constructor": false}, {"identifier": "doesTableExist", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "getTableStatus", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "TableStatus", "signature": "TableStatus getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static TableStatus getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "waitForTableToBecomeActive", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "void", "signature": "void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "DynamoDBManager", "parameters": "()", "modifiers": "private", "return": "", "signature": " DynamoDBManager()", "full_signature": "private  DynamoDBManager()", "class_method_signature": "DynamoDBManager.DynamoDBManager()", "testcase": false, "constructor": true}], "file": "ingester/src/main/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/DynamoDBManager.java"}, "focal_method": {"identifier": "doesTableExist", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "boolean", "body": "public static boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName) {\n        try {\n            dynamoDB.describeTable(tableName);\n            return true;\n        } catch (final ResourceNotFoundException e) {\n            return false;\n        } catch (final AmazonClientException e) {\n            LOGGER.severe(e.getMessage());\n            return false;\n        }\n\n    }", "signature": "boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false, "invocations": ["describeTable", "severe", "getMessage"]}, "repository": {"repo_id": 24917019, "url": "https://github.com/aws-samples/aws-dynamodb-mars-json-demo", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 48, "size": 1648, "license": "licensed"}}