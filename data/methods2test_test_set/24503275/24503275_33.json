{"test_class": {"identifier": "ByteUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "ethereumj-core/src/test/java/org/ethereum/util/ByteUtilTest.java"}, "test_case": {"identifier": "testCalcPacketLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCalcPacketLength() {\n\t\tbyte[] test = new byte[] { 0x0f, 0x10, 0x43 };\n\t\tbyte[] expected = new byte[] { 0x00, 0x00, 0x00, 0x03 };\n\t\tassertArrayEquals(expected, ByteUtil.calcPacketLength(test));\n\t}", "signature": "void testCalcPacketLength()", "full_signature": "@Test public void testCalcPacketLength()", "class_method_signature": "ByteUtilTest.testCalcPacketLength()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "calcPacketLength"]}, "focal_class": {"identifier": "ByteUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];", "modifier": "public static final", "type": "byte[]", "declarator": "EMPTY_BYTE_ARRAY = new byte[0]", "var_name": "EMPTY_BYTE_ARRAY"}], "methods": [{"identifier": "appendByte", "parameters": "(byte[] bytes, byte b)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] appendByte(byte[] bytes, byte b)", "full_signature": "public static byte[] appendByte(byte[] bytes, byte b)", "class_method_signature": "ByteUtil.appendByte(byte[] bytes, byte b)", "testcase": false, "constructor": false}, {"identifier": "bigIntegerToBytes", "parameters": "(BigInteger b, int numBytes)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] bigIntegerToBytes(BigInteger b, int numBytes)", "full_signature": "public static byte[] bigIntegerToBytes(BigInteger b, int numBytes)", "class_method_signature": "ByteUtil.bigIntegerToBytes(BigInteger b, int numBytes)", "testcase": false, "constructor": false}, {"identifier": "bigIntegerToBytes", "parameters": "(BigInteger value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] bigIntegerToBytes(BigInteger value)", "full_signature": "public static byte[] bigIntegerToBytes(BigInteger value)", "class_method_signature": "ByteUtil.bigIntegerToBytes(BigInteger value)", "testcase": false, "constructor": false}, {"identifier": "matchingNibbleLength", "parameters": "(byte[] a, byte[] b)", "modifiers": "public static", "return": "int", "signature": "int matchingNibbleLength(byte[] a, byte[] b)", "full_signature": "public static int matchingNibbleLength(byte[] a, byte[] b)", "class_method_signature": "ByteUtil.matchingNibbleLength(byte[] a, byte[] b)", "testcase": false, "constructor": false}, {"identifier": "longToBytes", "parameters": "(long val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] longToBytes(long val)", "full_signature": "public static byte[] longToBytes(long val)", "class_method_signature": "ByteUtil.longToBytes(long val)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(byte[] data)", "modifiers": "public static", "return": "String", "signature": "String toHexString(byte[] data)", "full_signature": "public static String toHexString(byte[] data)", "class_method_signature": "ByteUtil.toHexString(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "calcPacketLength", "parameters": "(byte[] msg)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] calcPacketLength(byte[] msg)", "full_signature": "public static byte[] calcPacketLength(byte[] msg)", "class_method_signature": "ByteUtil.calcPacketLength(byte[] msg)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToInt", "parameters": "(byte[] b)", "modifiers": "public static", "return": "int", "signature": "int byteArrayToInt(byte[] b)", "full_signature": "public static int byteArrayToInt(byte[] b)", "class_method_signature": "ByteUtil.byteArrayToInt(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "nibblesToPrettyString", "parameters": "(byte[] nibbles)", "modifiers": "public static", "return": "String", "signature": "String nibblesToPrettyString(byte[] nibbles)", "full_signature": "public static String nibblesToPrettyString(byte[] nibbles)", "class_method_signature": "ByteUtil.nibblesToPrettyString(byte[] nibbles)", "testcase": false, "constructor": false}, {"identifier": "oneByteToHexString", "parameters": "(byte value)", "modifiers": "public static", "return": "String", "signature": "String oneByteToHexString(byte value)", "full_signature": "public static String oneByteToHexString(byte value)", "class_method_signature": "ByteUtil.oneByteToHexString(byte value)", "testcase": false, "constructor": false}, {"identifier": "numBytes", "parameters": "(String val)", "modifiers": "public static", "return": "int", "signature": "int numBytes(String val)", "full_signature": "public static int numBytes(String val)", "class_method_signature": "ByteUtil.numBytes(String val)", "testcase": false, "constructor": false}, {"identifier": "encodeValFor32Bits", "parameters": "(Object arg)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encodeValFor32Bits(Object arg)", "full_signature": "public static byte[] encodeValFor32Bits(Object arg)", "class_method_signature": "ByteUtil.encodeValFor32Bits(Object arg)", "testcase": false, "constructor": false}, {"identifier": "encodeDataList", "parameters": "(Object... args)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encodeDataList(Object... args)", "full_signature": "public static byte[] encodeDataList(Object... args)", "class_method_signature": "ByteUtil.encodeDataList(Object... args)", "testcase": false, "constructor": false}, {"identifier": "stripLeadingZeroes", "parameters": "(byte[] data)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] stripLeadingZeroes(byte[] data)", "full_signature": "public static byte[] stripLeadingZeroes(byte[] data)", "class_method_signature": "ByteUtil.stripLeadingZeroes(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "boolean", "signature": "boolean increment(byte[] bytes)", "full_signature": "public static boolean increment(byte[] bytes)", "class_method_signature": "ByteUtil.increment(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "copyToArray", "parameters": "(BigInteger value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] copyToArray(BigInteger value)", "full_signature": "public static byte[] copyToArray(BigInteger value)", "class_method_signature": "ByteUtil.copyToArray(BigInteger value)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/util/ByteUtil.java"}, "focal_method": {"identifier": "calcPacketLength", "parameters": "(byte[] msg)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] calcPacketLength(byte[] msg) {\n        int msgLen = msg.length;\n        byte[] len = {\n                (byte)((msgLen >> 24) & 0xFF),\n                (byte)((msgLen >> 16) & 0xFF),\n                (byte)((msgLen >>  8) & 0xFF),\n                (byte)((msgLen      ) & 0xFF)};\n        return len;\n    }", "signature": "byte[] calcPacketLength(byte[] msg)", "full_signature": "public static byte[] calcPacketLength(byte[] msg)", "class_method_signature": "ByteUtil.calcPacketLength(byte[] msg)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 24503275, "url": "https://github.com/ethereumj/ethereumj", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 27, "size": 13884, "license": "licensed"}}