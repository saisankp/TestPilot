{"test_class": {"identifier": "DefaultMetadataExportServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SchemaService schemaService;", "modifier": "@Mock\n    private", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "@Mock\n    private QueryService queryService;", "modifier": "@Mock\n    private", "type": "QueryService", "declarator": "queryService", "var_name": "queryService"}, {"original_string": "@Mock\n    private FieldFilterService fieldFilterService;", "modifier": "@Mock\n    private", "type": "FieldFilterService", "declarator": "fieldFilterService", "var_name": "fieldFilterService"}, {"original_string": "@Mock\n    private CurrentUserService currentUserService;", "modifier": "@Mock\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@Mock\n    private ProgramRuleService programRuleService;", "modifier": "@Mock\n    private", "type": "ProgramRuleService", "declarator": "programRuleService", "var_name": "programRuleService"}, {"original_string": "@Mock\n    private ProgramRuleVariableService programRuleVariableService;", "modifier": "@Mock\n    private", "type": "ProgramRuleVariableService", "declarator": "programRuleVariableService", "var_name": "programRuleVariableService"}, {"original_string": "@Mock\n    private SystemService systemService;", "modifier": "@Mock\n    private", "type": "SystemService", "declarator": "systemService", "var_name": "systemService"}, {"original_string": "@InjectMocks\n    private DefaultMetadataExportService service;", "modifier": "@InjectMocks\n    private", "type": "DefaultMetadataExportService", "declarator": "service", "var_name": "service"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/DefaultMetadataExportServiceTest.java"}, "test_case": {"identifier": "getParamsFromMapIncludedSecondary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getParamsFromMapIncludedSecondary()\n    {\n        Mockito.when( schemaService.getSchemaByPluralName( Mockito.eq( \"jobConfigurations\" ) ) )\n            .thenReturn( new Schema( JobConfiguration.class, \"jobConfiguration\", \"jobConfigurations\" ) );\n        Mockito.when( schemaService.getSchemaByPluralName( Mockito.eq( \"options\" ) ) )\n            .thenReturn( new Schema( Option.class, \"option\", \"options\" ) );\n\n        final Map<String, List<String>> params = new HashMap<>();\n        params.put( \"jobConfigurations\", Collections.singletonList( \"true\" ) );\n        params.put( \"options\", Collections.singletonList( \"true\" ) );\n\n        MetadataExportParams exportParams = service.getParamsFromMap( params );\n        Assert.assertTrue( exportParams.getClasses().contains( JobConfiguration.class ) );\n        Assert.assertTrue( exportParams.getClasses().contains( Option.class ) );\n    }", "signature": "void getParamsFromMapIncludedSecondary()", "full_signature": "@Test public void getParamsFromMapIncludedSecondary()", "class_method_signature": "DefaultMetadataExportServiceTest.getParamsFromMapIncludedSecondary()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSchemaByPluralName", "eq", "thenReturn", "when", "getSchemaByPluralName", "eq", "put", "singletonList", "put", "singletonList", "getParamsFromMap", "assertTrue", "contains", "getClasses", "assertTrue", "contains", "getClasses"]}, "focal_class": {"identifier": "DefaultMetadataExportService", "superclass": "", "interfaces": "implements MetadataExportService", "fields": [{"original_string": "@Autowired\n    private SchemaService schemaService;", "modifier": "@Autowired\n    private", "type": "SchemaService", "declarator": "schemaService", "var_name": "schemaService"}, {"original_string": "@Autowired\n    private QueryService queryService;", "modifier": "@Autowired\n    private", "type": "QueryService", "declarator": "queryService", "var_name": "queryService"}, {"original_string": "@Autowired\n    private FieldFilterService fieldFilterService;", "modifier": "@Autowired\n    private", "type": "FieldFilterService", "declarator": "fieldFilterService", "var_name": "fieldFilterService"}, {"original_string": "@Autowired\n    private CurrentUserService currentUserService;", "modifier": "@Autowired\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@Autowired\n    private ProgramRuleService programRuleService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleService", "declarator": "programRuleService", "var_name": "programRuleService"}, {"original_string": "@Autowired\n    private ProgramRuleVariableService programRuleVariableService;", "modifier": "@Autowired\n    private", "type": "ProgramRuleVariableService", "declarator": "programRuleVariableService", "var_name": "programRuleVariableService"}, {"original_string": "@Autowired\n    private SystemService systemService;", "modifier": "@Autowired\n    private", "type": "SystemService", "declarator": "systemService", "var_name": "systemService"}, {"original_string": "@Autowired\n    private AttributeService attributeService;", "modifier": "@Autowired\n    private", "type": "AttributeService", "declarator": "attributeService", "var_name": "attributeService"}], "methods": [{"identifier": "getMetadata", "parameters": "( MetadataExportParams params )", "modifiers": "@Override @SuppressWarnings( \"unchecked\" ) public", "return": "Map<Class<? extends IdentifiableObject>, List<? extends IdentifiableObject>>", "signature": "Map<Class<? extends IdentifiableObject>, List<? extends IdentifiableObject>> getMetadata( MetadataExportParams params )", "full_signature": "@Override @SuppressWarnings( \"unchecked\" ) public Map<Class<? extends IdentifiableObject>, List<? extends IdentifiableObject>> getMetadata( MetadataExportParams params )", "class_method_signature": "DefaultMetadataExportService.getMetadata( MetadataExportParams params )", "testcase": false, "constructor": false}, {"identifier": "getMetadataAsNode", "parameters": "( MetadataExportParams params )", "modifiers": "@Override public", "return": "RootNode", "signature": "RootNode getMetadataAsNode( MetadataExportParams params )", "full_signature": "@Override public RootNode getMetadataAsNode( MetadataExportParams params )", "class_method_signature": "DefaultMetadataExportService.getMetadataAsNode( MetadataExportParams params )", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( MetadataExportParams params )", "modifiers": "@Override public", "return": "void", "signature": "void validate( MetadataExportParams params )", "full_signature": "@Override public void validate( MetadataExportParams params )", "class_method_signature": "DefaultMetadataExportService.validate( MetadataExportParams params )", "testcase": false, "constructor": false}, {"identifier": "getParamsFromMap", "parameters": "( Map<String, List<String>> parameters )", "modifiers": "@Override @SuppressWarnings( \"unchecked\" ) public", "return": "MetadataExportParams", "signature": "MetadataExportParams getParamsFromMap( Map<String, List<String>> parameters )", "full_signature": "@Override @SuppressWarnings( \"unchecked\" ) public MetadataExportParams getParamsFromMap( Map<String, List<String>> parameters )", "class_method_signature": "DefaultMetadataExportService.getParamsFromMap( Map<String, List<String>> parameters )", "testcase": false, "constructor": false}, {"identifier": "getMetadataWithDependencies", "parameters": "( IdentifiableObject object )", "modifiers": "@Override public", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> getMetadataWithDependencies( IdentifiableObject object )", "full_signature": "@Override public SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> getMetadataWithDependencies( IdentifiableObject object )", "class_method_signature": "DefaultMetadataExportService.getMetadataWithDependencies( IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "getMetadataWithDependenciesAsNode", "parameters": "( IdentifiableObject object, @Nonnull MetadataExportParams params )", "modifiers": "@Override public", "return": "RootNode", "signature": "RootNode getMetadataWithDependenciesAsNode( IdentifiableObject object, @Nonnull MetadataExportParams params )", "full_signature": "@Override public RootNode getMetadataWithDependenciesAsNode( IdentifiableObject object, @Nonnull MetadataExportParams params )", "class_method_signature": "DefaultMetadataExportService.getMetadataWithDependenciesAsNode( IdentifiableObject object, @Nonnull MetadataExportParams params )", "testcase": false, "constructor": false}, {"identifier": "isSelectedClass", "parameters": "( @Nonnull List<String> values )", "modifiers": "private", "return": "boolean", "signature": "boolean isSelectedClass( @Nonnull List<String> values )", "full_signature": "private boolean isSelectedClass( @Nonnull List<String> values )", "class_method_signature": "DefaultMetadataExportService.isSelectedClass( @Nonnull List<String> values )", "testcase": false, "constructor": false}, {"identifier": "handleDataSet", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSet dataSet )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSet dataSet )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSet dataSet )", "class_method_signature": "DefaultMetadataExportService.handleDataSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSet dataSet )", "testcase": false, "constructor": false}, {"identifier": "handleDataElementOperand", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementOperand dataElementOperand )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElementOperand( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementOperand dataElementOperand )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElementOperand( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementOperand dataElementOperand )", "class_method_signature": "DefaultMetadataExportService.handleDataElementOperand( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementOperand dataElementOperand )", "testcase": false, "constructor": false}, {"identifier": "handleCategoryOptionCombo", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOptionCombo categoryOptionCombo )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryOptionCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOptionCombo categoryOptionCombo )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryOptionCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOptionCombo categoryOptionCombo )", "class_method_signature": "DefaultMetadataExportService.handleCategoryOptionCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOptionCombo categoryOptionCombo )", "testcase": false, "constructor": false}, {"identifier": "handleCategoryCombo", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryCombo categoryCombo )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryCombo categoryCombo )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryCombo categoryCombo )", "class_method_signature": "DefaultMetadataExportService.handleCategoryCombo( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryCombo categoryCombo )", "testcase": false, "constructor": false}, {"identifier": "handleCategory", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Category category )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategory( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Category category )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategory( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Category category )", "class_method_signature": "DefaultMetadataExportService.handleCategory( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Category category )", "testcase": false, "constructor": false}, {"identifier": "handleCategoryOption", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOption categoryOption )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOption categoryOption )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleCategoryOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOption categoryOption )", "class_method_signature": "DefaultMetadataExportService.handleCategoryOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, CategoryOption categoryOption )", "testcase": false, "constructor": false}, {"identifier": "handleLegendSet", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, List<LegendSet> legendSets )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleLegendSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, List<LegendSet> legendSets )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleLegendSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, List<LegendSet> legendSets )", "class_method_signature": "DefaultMetadataExportService.handleLegendSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, List<LegendSet> legendSets )", "testcase": false, "constructor": false}, {"identifier": "handleLegend", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Legend legend )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleLegend( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Legend legend )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleLegend( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Legend legend )", "class_method_signature": "DefaultMetadataExportService.handleLegend( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Legend legend )", "testcase": false, "constructor": false}, {"identifier": "handleDataEntryForm", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataEntryForm dataEntryForm )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataEntryForm( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataEntryForm dataEntryForm )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataEntryForm( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataEntryForm dataEntryForm )", "class_method_signature": "DefaultMetadataExportService.handleDataEntryForm( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataEntryForm dataEntryForm )", "testcase": false, "constructor": false}, {"identifier": "handleDataSetElement", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSetElement dataSetElement )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataSetElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSetElement dataSetElement )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataSetElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSetElement dataSetElement )", "class_method_signature": "DefaultMetadataExportService.handleDataSetElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataSetElement dataSetElement )", "testcase": false, "constructor": false}, {"identifier": "handleDataElement", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElement dataElement )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElement dataElement )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElement dataElement )", "class_method_signature": "DefaultMetadataExportService.handleDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "handleOptionSet", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, OptionSet optionSet )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleOptionSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, OptionSet optionSet )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleOptionSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, OptionSet optionSet )", "class_method_signature": "DefaultMetadataExportService.handleOptionSet( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, OptionSet optionSet )", "testcase": false, "constructor": false}, {"identifier": "handleOption", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Option option )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Option option )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Option option )", "class_method_signature": "DefaultMetadataExportService.handleOption( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Option option )", "testcase": false, "constructor": false}, {"identifier": "handleSection", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Section section )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Section section )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Section section )", "class_method_signature": "DefaultMetadataExportService.handleSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Section section )", "testcase": false, "constructor": false}, {"identifier": "handleIndicator", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Indicator indicator )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Indicator indicator )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Indicator indicator )", "class_method_signature": "DefaultMetadataExportService.handleIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Indicator indicator )", "testcase": false, "constructor": false}, {"identifier": "handleIndicatorType", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IndicatorType indicatorType )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleIndicatorType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IndicatorType indicatorType )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleIndicatorType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IndicatorType indicatorType )", "class_method_signature": "DefaultMetadataExportService.handleIndicatorType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IndicatorType indicatorType )", "testcase": false, "constructor": false}, {"identifier": "handleProgram", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Program program )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgram( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Program program )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgram( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Program program )", "class_method_signature": "DefaultMetadataExportService.handleProgram( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Program program )", "testcase": false, "constructor": false}, {"identifier": "handleNotificationTemplate", "parameters": "( SetMap<Class<? extends\n        IdentifiableObject>, IdentifiableObject> metadata, ProgramNotificationTemplate template )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleNotificationTemplate( SetMap<Class<? extends\n        IdentifiableObject>, IdentifiableObject> metadata, ProgramNotificationTemplate template )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleNotificationTemplate( SetMap<Class<? extends\n        IdentifiableObject>, IdentifiableObject> metadata, ProgramNotificationTemplate template )", "class_method_signature": "DefaultMetadataExportService.handleNotificationTemplate( SetMap<Class<? extends\n        IdentifiableObject>, IdentifiableObject> metadata, ProgramNotificationTemplate template )", "testcase": false, "constructor": false}, {"identifier": "handleProgramRuleVariable", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleVariable programRuleVariable )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRuleVariable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleVariable programRuleVariable )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRuleVariable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleVariable programRuleVariable )", "class_method_signature": "DefaultMetadataExportService.handleProgramRuleVariable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleVariable programRuleVariable )", "testcase": false, "constructor": false}, {"identifier": "handleTrackedEntityAttribute", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityAttribute trackedEntityAttribute )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityAttribute trackedEntityAttribute )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityAttribute trackedEntityAttribute )", "class_method_signature": "DefaultMetadataExportService.handleTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityAttribute trackedEntityAttribute )", "testcase": false, "constructor": false}, {"identifier": "handleProgramRule", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRule programRule )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRule( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRule programRule )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRule( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRule programRule )", "class_method_signature": "DefaultMetadataExportService.handleProgramRule( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRule programRule )", "testcase": false, "constructor": false}, {"identifier": "handleProgramRuleAction", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleAction programRuleAction )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRuleAction( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleAction programRuleAction )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramRuleAction( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleAction programRuleAction )", "class_method_signature": "DefaultMetadataExportService.handleProgramRuleAction( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramRuleAction programRuleAction )", "testcase": false, "constructor": false}, {"identifier": "handleProgramTrackedEntityAttribute", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramTrackedEntityAttribute programTrackedEntityAttribute )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramTrackedEntityAttribute programTrackedEntityAttribute )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramTrackedEntityAttribute programTrackedEntityAttribute )", "class_method_signature": "DefaultMetadataExportService.handleProgramTrackedEntityAttribute( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramTrackedEntityAttribute programTrackedEntityAttribute )", "testcase": false, "constructor": false}, {"identifier": "handleProgramStage", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStage programStage )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStage( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStage programStage )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStage( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStage programStage )", "class_method_signature": "DefaultMetadataExportService.handleProgramStage( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStage programStage )", "testcase": false, "constructor": false}, {"identifier": "handleProgramStageSection", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageSection programStageSection )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStageSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageSection programStageSection )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStageSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageSection programStageSection )", "class_method_signature": "DefaultMetadataExportService.handleProgramStageSection( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageSection programStageSection )", "testcase": false, "constructor": false}, {"identifier": "handleProgramIndicator", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramIndicator programIndicator )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramIndicator programIndicator )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramIndicator programIndicator )", "class_method_signature": "DefaultMetadataExportService.handleProgramIndicator( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramIndicator programIndicator )", "testcase": false, "constructor": false}, {"identifier": "handleProgramStageDataElement", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageDataElement programStageDataElement )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStageDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageDataElement programStageDataElement )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleProgramStageDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageDataElement programStageDataElement )", "class_method_signature": "DefaultMetadataExportService.handleProgramStageDataElement( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ProgramStageDataElement programStageDataElement )", "testcase": false, "constructor": false}, {"identifier": "handleTrackedEntityType", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityType trackedEntityType )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleTrackedEntityType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityType trackedEntityType )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleTrackedEntityType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityType trackedEntityType )", "class_method_signature": "DefaultMetadataExportService.handleTrackedEntityType( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, TrackedEntityType trackedEntityType )", "testcase": false, "constructor": false}, {"identifier": "handleChart", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Chart chart )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Chart chart )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Chart chart )", "class_method_signature": "DefaultMetadataExportService.handleChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Chart chart )", "testcase": false, "constructor": false}, {"identifier": "handleEventChart", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventChart eventChart )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEventChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventChart eventChart )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEventChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventChart eventChart )", "class_method_signature": "DefaultMetadataExportService.handleEventChart( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventChart eventChart )", "testcase": false, "constructor": false}, {"identifier": "handleEventReport", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventReport eventReport )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEventReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventReport eventReport )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEventReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventReport eventReport )", "class_method_signature": "DefaultMetadataExportService.handleEventReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, EventReport eventReport )", "testcase": false, "constructor": false}, {"identifier": "handleMapView", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, MapView mapView )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleMapView( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, MapView mapView )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleMapView( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, MapView mapView )", "class_method_signature": "DefaultMetadataExportService.handleMapView( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, MapView mapView )", "testcase": false, "constructor": false}, {"identifier": "handleMap", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, org.hisp.dhis.mapping.Map map )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleMap( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, org.hisp.dhis.mapping.Map map )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleMap( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, org.hisp.dhis.mapping.Map map )", "class_method_signature": "DefaultMetadataExportService.handleMap( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, org.hisp.dhis.mapping.Map map )", "testcase": false, "constructor": false}, {"identifier": "handleReportTable", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ReportTable reportTable )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleReportTable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ReportTable reportTable )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleReportTable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ReportTable reportTable )", "class_method_signature": "DefaultMetadataExportService.handleReportTable( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, ReportTable reportTable )", "testcase": false, "constructor": false}, {"identifier": "handleVisualization", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Visualization visualization )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleVisualization( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Visualization visualization )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleVisualization( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Visualization visualization )", "class_method_signature": "DefaultMetadataExportService.handleVisualization( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Visualization visualization )", "testcase": false, "constructor": false}, {"identifier": "handleReport", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Report report )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Report report )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Report report )", "class_method_signature": "DefaultMetadataExportService.handleReport( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Report report )", "testcase": false, "constructor": false}, {"identifier": "handleInterpretation", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Interpretation interpretation )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleInterpretation( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Interpretation interpretation )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleInterpretation( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Interpretation interpretation )", "class_method_signature": "DefaultMetadataExportService.handleInterpretation( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Interpretation interpretation )", "testcase": false, "constructor": false}, {"identifier": "handleEmbbedItem", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, InterpretableObject embbededItem )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEmbbedItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, InterpretableObject embbededItem )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleEmbbedItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, InterpretableObject embbededItem )", "class_method_signature": "DefaultMetadataExportService.handleEmbbedItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, InterpretableObject embbededItem )", "testcase": false, "constructor": false}, {"identifier": "handleDocument", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Document document )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDocument( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Document document )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDocument( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Document document )", "class_method_signature": "DefaultMetadataExportService.handleDocument( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Document document )", "testcase": false, "constructor": false}, {"identifier": "handleDashboardItem", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DashboardItem dashboardItem )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDashboardItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DashboardItem dashboardItem )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDashboardItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DashboardItem dashboardItem )", "class_method_signature": "DefaultMetadataExportService.handleDashboardItem( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DashboardItem dashboardItem )", "testcase": false, "constructor": false}, {"identifier": "handleDashboard", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Dashboard dashboard )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDashboard( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Dashboard dashboard )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDashboard( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Dashboard dashboard )", "class_method_signature": "DefaultMetadataExportService.handleDashboard( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, Dashboard dashboard )", "testcase": false, "constructor": false}, {"identifier": "handleDataElementGroup", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementGroup dataElementGroup )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElementGroup( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementGroup dataElementGroup )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleDataElementGroup( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementGroup dataElementGroup )", "class_method_signature": "DefaultMetadataExportService.handleDataElementGroup( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, DataElementGroup dataElementGroup )", "testcase": false, "constructor": false}, {"identifier": "handleAttributes", "parameters": "( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IdentifiableObject identifiableObject )", "modifiers": "private", "return": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleAttributes( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IdentifiableObject identifiableObject )", "full_signature": "private SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> handleAttributes( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IdentifiableObject identifiableObject )", "class_method_signature": "DefaultMetadataExportService.handleAttributes( SetMap<Class<? extends IdentifiableObject>, IdentifiableObject> metadata, IdentifiableObject identifiableObject )", "testcase": false, "constructor": false}, {"identifier": "getEnumWithDefault", "parameters": "( Class<T> enumKlass, Map<String, List<String>> parameters, String key, T defaultValue )", "modifiers": "private", "return": "T", "signature": "T getEnumWithDefault( Class<T> enumKlass, Map<String, List<String>> parameters, String key, T defaultValue )", "full_signature": "private T getEnumWithDefault( Class<T> enumKlass, Map<String, List<String>> parameters, String key, T defaultValue )", "class_method_signature": "DefaultMetadataExportService.getEnumWithDefault( Class<T> enumKlass, Map<String, List<String>> parameters, String key, T defaultValue )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/DefaultMetadataExportService.java"}, "focal_method": {"identifier": "getParamsFromMap", "parameters": "( Map<String, List<String>> parameters )", "modifiers": "@Override @SuppressWarnings( \"unchecked\" ) public", "return": "MetadataExportParams", "body": "@Override\n    @SuppressWarnings( \"unchecked\" )\n    public MetadataExportParams getParamsFromMap( Map<String, List<String>> parameters )\n    {\n        MetadataExportParams params = new MetadataExportParams();\n        Map<Class<? extends IdentifiableObject>, Map<String, List<String>>> map = new HashMap<>();\n\n        params.setDefaults( getEnumWithDefault( Defaults.class, parameters, \"defaults\", Defaults.INCLUDE ) );\n        params.setInclusionStrategy( getEnumWithDefault( InclusionStrategy.Include.class, parameters, \"inclusionStrategy\",\n            InclusionStrategy.Include.NON_NULL ) );\n\n        if ( parameters.containsKey( \"fields\" ) )\n        {\n            params.setDefaultFields( parameters.get( \"fields\" ) );\n            parameters.remove( \"fields\" );\n        }\n\n        if ( parameters.containsKey( \"filter\" ) )\n        {\n            params.setDefaultFilter( parameters.get( \"filter\" ) );\n            parameters.remove( \"filter\" );\n        }\n\n        if ( parameters.containsKey( \"order\" ) )\n        {\n            params.setDefaultOrder( parameters.get( \"order\" ) );\n            parameters.remove( \"order\" );\n        }\n\n        if ( parameters.containsKey( \"skipSharing\" ) )\n        {\n            params.setSkipSharing( Boolean.parseBoolean( parameters.get( \"skipSharing\" ).get( 0 ) ) );\n            parameters.remove( \"skipSharing\" );\n        }\n\n        for ( String parameterKey : parameters.keySet() )\n        {\n            String[] parameter = parameterKey.split( \":\" );\n            Schema schema = schemaService.getSchemaByPluralName( parameter[0] );\n\n            if ( schema == null || !schema.isIdentifiableObject() )\n            {\n                continue;\n            }\n\n            Class<? extends IdentifiableObject> klass = (Class<? extends IdentifiableObject>) schema.getKlass();\n\n            // class is enabled if value = true, or fields/filter/order is present\n            if ( isSelectedClass( parameters.get( parameterKey ) ) || (parameter.length > 1 && (\"fields\".equalsIgnoreCase( parameter[1] )\n                || \"filter\".equalsIgnoreCase( parameter[1] ) || \"order\".equalsIgnoreCase( parameter[1] ))) )\n            {\n                if ( !map.containsKey( klass ) ) map.put( klass, new HashMap<>() );\n            }\n            else\n            {\n                continue;\n            }\n\n            if ( parameter.length > 1 )\n            {\n                if ( \"fields\".equalsIgnoreCase( parameter[1] ) )\n                {\n                    if ( !map.get( klass ).containsKey( \"fields\" ) ) map.get( klass ).put( \"fields\", new ArrayList<>() );\n                    map.get( klass ).get( \"fields\" ).addAll( parameters.get( parameterKey ) );\n                }\n\n                if ( \"filter\".equalsIgnoreCase( parameter[1] ) )\n                {\n                    if ( !map.get( klass ).containsKey( \"filter\" ) ) map.get( klass ).put( \"filter\", new ArrayList<>() );\n                    map.get( klass ).get( \"filter\" ).addAll( parameters.get( parameterKey ) );\n                }\n\n                if ( \"order\".equalsIgnoreCase( parameter[1] ) )\n                {\n                    if ( !map.get( klass ).containsKey( \"order\" ) ) map.get( klass ).put( \"order\", new ArrayList<>() );\n                    map.get( klass ).get( \"order\" ).addAll( parameters.get( parameterKey ) );\n                }\n            }\n        }\n\n        map.keySet().forEach( params::addClass );\n\n        for ( Class<? extends IdentifiableObject> klass : map.keySet() )\n        {\n            Map<String, List<String>> classMap = map.get( klass );\n            Schema schema = schemaService.getDynamicSchema( klass );\n\n            if ( classMap.containsKey( \"fields\" ) ) params.addFields( klass, classMap.get( \"fields\" ) );\n\n            if ( classMap.containsKey( \"filter\" ) && classMap.containsKey( \"order\" ) )\n            {\n                OrderParams orderParams = new OrderParams( Sets.newHashSet( classMap.get( \"order\" ) ) );\n                Query query = queryService.getQueryFromUrl( klass, classMap.get( \"filter\" ), orderParams.getOrders( schema ) );\n                query.setDefaultOrder();\n                params.addQuery( query );\n            }\n            else if ( classMap.containsKey( \"filter\" ) )\n            {\n                Query query = queryService.getQueryFromUrl( klass, classMap.get( \"filter\" ), new ArrayList<>() );\n                query.setDefaultOrder();\n                params.addQuery( query );\n            }\n            else if ( classMap.containsKey( \"order\" ) )\n            {\n                OrderParams orderParams = new OrderParams();\n                orderParams.setOrder( Sets.newHashSet( classMap.get( \"order\" ) ) );\n\n                Query query = queryService.getQueryFromUrl( klass, new ArrayList<>(), orderParams.getOrders( schema ) );\n                query.setDefaultOrder();\n                params.addQuery( query );\n            }\n        }\n\n        return params;\n    }", "signature": "MetadataExportParams getParamsFromMap( Map<String, List<String>> parameters )", "full_signature": "@Override @SuppressWarnings( \"unchecked\" ) public MetadataExportParams getParamsFromMap( Map<String, List<String>> parameters )", "class_method_signature": "DefaultMetadataExportService.getParamsFromMap( Map<String, List<String>> parameters )", "testcase": false, "constructor": false, "invocations": ["setDefaults", "getEnumWithDefault", "setInclusionStrategy", "getEnumWithDefault", "containsKey", "setDefaultFields", "get", "remove", "containsKey", "setDefaultFilter", "get", "remove", "containsKey", "setDefaultOrder", "get", "remove", "containsKey", "setSkipSharing", "parseBoolean", "get", "get", "remove", "keySet", "split", "getSchemaByPluralName", "isIdentifiableObject", "getKlass", "isSelectedClass", "get", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "containsKey", "put", "equalsIgnoreCase", "containsKey", "get", "put", "get", "addAll", "get", "get", "get", "equalsIgnoreCase", "containsKey", "get", "put", "get", "addAll", "get", "get", "get", "equalsIgnoreCase", "containsKey", "get", "put", "get", "addAll", "get", "get", "get", "forEach", "keySet", "keySet", "get", "getDynamicSchema", "containsKey", "addFields", "get", "containsKey", "containsKey", "newHashSet", "get", "getQueryFromUrl", "get", "getOrders", "setDefaultOrder", "addQuery", "containsKey", "getQueryFromUrl", "get", "setDefaultOrder", "addQuery", "containsKey", "setOrder", "newHashSet", "get", "getQueryFromUrl", "getOrders", "setDefaultOrder", "addQuery"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}