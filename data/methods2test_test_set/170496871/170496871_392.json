{"test_class": {"identifier": "LongRunningProcessStartTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ConcurrentMap<UUID, Future<?>> metadataStorage = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentMap<UUID, Future<?>>", "declarator": "metadataStorage = new ConcurrentHashMap<>()", "var_name": "metadataStorage"}], "file": "modules/tensorflow/src/test/java/org/apache/ignite/tensorflow/core/longrunning/task/LongRunningProcessStartTaskTest.java"}, "test_case": {"identifier": "testCall", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCall() throws ExecutionException, InterruptedException {\n        LongRunningProcess proc = new LongRunningProcess(UUID.randomUUID(), () -> {});\n        LongRunningProcessStartTask task = createTask(proc);\n        List<UUID> procIds = task.call();\n\n        assertEquals(1, procIds.size());\n\n        UUID procId = procIds.get(0);\n\n        assertNotNull(metadataStorage.get(procId));\n\n        Future<?> fut = metadataStorage.get(procId);\n        fut.get();\n\n        assertEquals(true, fut.isDone());\n    }", "signature": "void testCall()", "full_signature": "@Test public void testCall()", "class_method_signature": "LongRunningProcessStartTaskTest.testCall()", "testcase": true, "constructor": false, "invocations": ["randomUUID", "createTask", "call", "assertEquals", "size", "get", "assertNotNull", "get", "get", "get", "assertEquals", "isDone"]}, "focal_class": {"identifier": "LongRunningProcessStartTask", "superclass": "extends LongRunningProcessTask<List<UUID>>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -3934183044853083034L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3934183044853083034L", "var_name": "serialVersionUID"}, {"original_string": "private final List<LongRunningProcess> processes;", "modifier": "private final", "type": "List<LongRunningProcess>", "declarator": "processes", "var_name": "processes"}], "methods": [{"identifier": "LongRunningProcessStartTask", "parameters": "(List<LongRunningProcess> processes)", "modifiers": "public", "return": "", "signature": " LongRunningProcessStartTask(List<LongRunningProcess> processes)", "full_signature": "public  LongRunningProcessStartTask(List<LongRunningProcess> processes)", "class_method_signature": "LongRunningProcessStartTask.LongRunningProcessStartTask(List<LongRunningProcess> processes)", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "()", "modifiers": "@Override public", "return": "List<UUID>", "signature": "List<UUID> call()", "full_signature": "@Override public List<UUID> call()", "class_method_signature": "LongRunningProcessStartTask.call()", "testcase": false, "constructor": false}, {"identifier": "runTask", "parameters": "(Runnable task)", "modifiers": "private", "return": "Future<?>", "signature": "Future<?> runTask(Runnable task)", "full_signature": "private Future<?> runTask(Runnable task)", "class_method_signature": "LongRunningProcessStartTask.runTask(Runnable task)", "testcase": false, "constructor": false}, {"identifier": "saveProcMetadata", "parameters": "(Future<?> fut)", "modifiers": "private", "return": "UUID", "signature": "UUID saveProcMetadata(Future<?> fut)", "full_signature": "private UUID saveProcMetadata(Future<?> fut)", "class_method_signature": "LongRunningProcessStartTask.saveProcMetadata(Future<?> fut)", "testcase": false, "constructor": false}, {"identifier": "stopAllProcessesAndClearMetadata", "parameters": "(List<UUID> procIds)", "modifiers": "private", "return": "void", "signature": "void stopAllProcessesAndClearMetadata(List<UUID> procIds)", "full_signature": "private void stopAllProcessesAndClearMetadata(List<UUID> procIds)", "class_method_signature": "LongRunningProcessStartTask.stopAllProcessesAndClearMetadata(List<UUID> procIds)", "testcase": false, "constructor": false}], "file": "modules/tensorflow/src/main/java/org/apache/ignite/tensorflow/core/longrunning/task/LongRunningProcessStartTask.java"}, "focal_method": {"identifier": "call", "parameters": "()", "modifiers": "@Override public", "return": "List<UUID>", "body": "@Override public List<UUID> call() {\n        ArrayList<UUID> res = new ArrayList<>();\n\n        try {\n            for (LongRunningProcess proc : processes) {\n                Future<?> fut = runTask(proc.getTask());\n\n                UUID procId = saveProcMetadata(fut);\n\n                res.add(procId);\n            }\n        }\n        catch (Exception e) {\n            // All-or-nothing strategy. In case of exception already started processes will be stopped.\n            stopAllProcessesAndClearMetadata(res);\n\n            throw e;\n        }\n\n        return res;\n    }", "signature": "List<UUID> call()", "full_signature": "@Override public List<UUID> call()", "class_method_signature": "LongRunningProcessStartTask.call()", "testcase": false, "constructor": false, "invocations": ["runTask", "getTask", "saveProcMetadata", "add", "stopAllProcessesAndClearMetadata"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}