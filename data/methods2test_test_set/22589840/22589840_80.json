{"test_class": {"identifier": "NotifyDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NotifyDelegate notifyDelegateTestObject;", "modifier": "private", "type": "NotifyDelegate", "declarator": "notifyDelegateTestObject", "var_name": "notifyDelegateTestObject"}, {"original_string": "private Subscriber subscriberMock;", "modifier": "private", "type": "Subscriber", "declarator": "subscriberMock", "var_name": "subscriberMock"}, {"original_string": "private Long subscriberId = new Long(1);", "modifier": "private", "type": "Long", "declarator": "subscriberId = new Long(1)", "var_name": "subscriberId"}, {"original_string": "private List<Long> subscriberIDs = new ArrayList<Long>();", "modifier": "private", "type": "List<Long>", "declarator": "subscriberIDs = new ArrayList<Long>()", "var_name": "subscriberIDs"}, {"original_string": "private NotificationEvent eventMock;", "modifier": "private", "type": "NotificationEvent", "declarator": "eventMock", "var_name": "eventMock"}, {"original_string": "private List<NotificationEvent> events = new ArrayList<NotificationEvent>();", "modifier": "private", "type": "List<NotificationEvent>", "declarator": "events = new ArrayList<NotificationEvent>()", "var_name": "events"}, {"original_string": "private List<NotificationEventTO> eventTOs = new ArrayList<NotificationEventTO>();", "modifier": "private", "type": "List<NotificationEventTO>", "declarator": "eventTOs = new ArrayList<NotificationEventTO>()", "var_name": "eventTOs"}, {"original_string": "private NotifyStatistics statisticsMock;", "modifier": "private", "type": "NotifyStatistics", "declarator": "statisticsMock", "var_name": "statisticsMock"}], "file": "OLAT-LMS/src/test/java/org/olat/lms/core/notification/impl/NotifyDelegateTest.java"}, "test_case": {"identifier": "notifySubscriber_nullSubscriber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void notifySubscriber_nullSubscriber() {\n        NotifyStatistics statistics = notifyDelegateTestObject.notifySubscriber(null);\n        assertNotNull(statistics);\n    }", "signature": "void notifySubscriber_nullSubscriber()", "full_signature": "@Test public void notifySubscriber_nullSubscriber()", "class_method_signature": "NotifyDelegateTest.notifySubscriber_nullSubscriber()", "testcase": true, "constructor": false, "invocations": ["notifySubscriber", "assertNotNull"]}, "focal_class": {"identifier": "NotifyDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "@Autowired\n    ChannelChain channelChain;", "modifier": "@Autowired", "type": "ChannelChain", "declarator": "channelChain", "var_name": "channelChain"}, {"original_string": "@Autowired\n    NotificationConverter converter;", "modifier": "@Autowired", "type": "NotificationConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Autowired\n    SubscriberDao subscriberDao;", "modifier": "@Autowired", "type": "SubscriberDao", "declarator": "subscriberDao", "var_name": "subscriberDao"}, {"original_string": "@Autowired\n    NotificationEventDao eventDao;", "modifier": "@Autowired", "type": "NotificationEventDao", "declarator": "eventDao", "var_name": "eventDao"}, {"original_string": "@Autowired\n    SubscriptionDao subscriptionDao;", "modifier": "@Autowired", "type": "SubscriptionDao", "declarator": "subscriptionDao", "var_name": "subscriptionDao"}], "methods": [{"identifier": "notifySubscriber", "parameters": "(Long subscriberId)", "modifiers": "@Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "NotifyStatistics", "signature": "NotifyStatistics notifySubscriber(Long subscriberId)", "full_signature": "@Transactional(propagation = Propagation.REQUIRES_NEW) public NotifyStatistics notifySubscriber(Long subscriberId)", "class_method_signature": "NotifyDelegate.notifySubscriber(Long subscriberId)", "testcase": false, "constructor": false}, {"identifier": "getSubscribersIdIterator", "parameters": "()", "modifiers": "private", "return": "Iterator<Long>", "signature": "Iterator<Long> getSubscribersIdIterator()", "full_signature": "private Iterator<Long> getSubscribersIdIterator()", "class_method_signature": "NotifyDelegate.getSubscribersIdIterator()", "testcase": false, "constructor": false}, {"identifier": "getSubscribersIDs", "parameters": "()", "modifiers": "protected", "return": "List<Long>", "signature": "List<Long> getSubscribersIDs()", "full_signature": "protected List<Long> getSubscribersIDs()", "class_method_signature": "NotifyDelegate.getSubscribersIDs()", "testcase": false, "constructor": false}, {"identifier": "findSubscriber", "parameters": "(Long id)", "modifiers": "private", "return": "Subscriber", "signature": "Subscriber findSubscriber(Long id)", "full_signature": "private Subscriber findSubscriber(Long id)", "class_method_signature": "NotifyDelegate.findSubscriber(Long id)", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "(Long subscriberId)", "modifiers": "private", "return": "List<NotificationEvent>", "signature": "List<NotificationEvent> getEvents(Long subscriberId)", "full_signature": "private List<NotificationEvent> getEvents(Long subscriberId)", "class_method_signature": "NotifyDelegate.getEvents(Long subscriberId)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(Subscriber subscriber, List<NotificationEventTO> notificationEventTOList)", "modifiers": "private", "return": "NotifyStatistics", "signature": "NotifyStatistics send(Subscriber subscriber, List<NotificationEventTO> notificationEventTOList)", "full_signature": "private NotifyStatistics send(Subscriber subscriber, List<NotificationEventTO> notificationEventTOList)", "class_method_signature": "NotifyDelegate.send(Subscriber subscriber, List<NotificationEventTO> notificationEventTOList)", "testcase": false, "constructor": false}, {"identifier": "updateEvents", "parameters": "(List<NotificationEventTO> eventTOs, NotifyStatistics statistics)", "modifiers": "private", "return": "void", "signature": "void updateEvents(List<NotificationEventTO> eventTOs, NotifyStatistics statistics)", "full_signature": "private void updateEvents(List<NotificationEventTO> eventTOs, NotifyStatistics statistics)", "class_method_signature": "NotifyDelegate.updateEvents(List<NotificationEventTO> eventTOs, NotifyStatistics statistics)", "testcase": false, "constructor": false}, {"identifier": "getSubscribersIterator", "parameters": "()", "modifiers": "public", "return": "Iterator<Subscriber>", "signature": "Iterator<Subscriber> getSubscribersIterator()", "full_signature": "public Iterator<Subscriber> getSubscribersIterator()", "class_method_signature": "NotifyDelegate.getSubscribersIterator()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "(NotifyStatistics statistics)", "modifiers": "private", "return": "NotificationEvent.Status", "signature": "NotificationEvent.Status getStatus(NotifyStatistics statistics)", "full_signature": "private NotificationEvent.Status getStatus(NotifyStatistics statistics)", "class_method_signature": "NotifyDelegate.getStatus(NotifyStatistics statistics)", "testcase": false, "constructor": false}, {"identifier": "updateEventsAndSubscriptions", "parameters": "(List<NotificationEventTO> eventTOs, NotificationEvent.Status status)", "modifiers": "private", "return": "void", "signature": "void updateEventsAndSubscriptions(List<NotificationEventTO> eventTOs, NotificationEvent.Status status)", "full_signature": "private void updateEventsAndSubscriptions(List<NotificationEventTO> eventTOs, NotificationEvent.Status status)", "class_method_signature": "NotifyDelegate.updateEventsAndSubscriptions(List<NotificationEventTO> eventTOs, NotificationEvent.Status status)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/lms/core/notification/impl/NotifyDelegate.java"}, "focal_method": {"identifier": "notifySubscriber", "parameters": "(Long subscriberId)", "modifiers": "@Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "NotifyStatistics", "body": "@Transactional(propagation = Propagation.REQUIRES_NEW)\n    public NotifyStatistics notifySubscriber(Long subscriberId) {\n        NotifyStatistics statistics = new NotifyStatistics();\n\n        if (subscriberId == null) {\n            return statistics;\n        }\n\n        List<NotificationEvent> events = getEvents(subscriberId);\n        if (events.isEmpty()) {\n            return statistics;\n        }\n\n        List<NotificationEventTO> eventTOs = converter.toEventTOList(events);\n        if (eventTOs.isEmpty()) {\n            return statistics;\n        }\n\n        Collections.sort(eventTOs, new NotificationEventTO.NotificationEventTOComparator());\n        statistics = send(eventTOs.get(0).getEvent().getSubscription().getSubscriber(), eventTOs);\n        updateEvents(eventTOs, statistics);\n\n        return statistics;\n    }", "signature": "NotifyStatistics notifySubscriber(Long subscriberId)", "full_signature": "@Transactional(propagation = Propagation.REQUIRES_NEW) public NotifyStatistics notifySubscriber(Long subscriberId)", "class_method_signature": "NotifyDelegate.notifySubscriber(Long subscriberId)", "testcase": false, "constructor": false, "invocations": ["getEvents", "isEmpty", "toEventTOList", "isEmpty", "sort", "send", "getSubscriber", "getSubscription", "getEvent", "get", "updateEvents"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}