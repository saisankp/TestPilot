{"test_class": {"identifier": "IoTDBResultMetadataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IoTDBResultMetadata metadata;", "modifier": "private", "type": "IoTDBResultMetadata", "declarator": "metadata", "var_name": "metadata"}], "file": "jdbc/src/test/java/org/apache/iotdb/jdbc/IoTDBResultMetadataTest.java"}, "test_case": {"identifier": "testGetColumnType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetColumnType() throws SQLException {\n    metadata = new IoTDBResultMetadata(null, null, false);\n    boolean flag = false;\n    try {\n      metadata.getColumnType(1);\n    } catch (Exception e) {\n      flag = true;\n    }\n    assertTrue(flag);\n\n    List<String> columnInfoList = new ArrayList<>();\n    metadata = new IoTDBResultMetadata(columnInfoList, null, false);\n    flag = false;\n    try {\n      metadata.getColumnType(1);\n    } catch (Exception e) {\n      flag = true;\n    }\n    assertTrue(flag);\n\n    String[] columns = {\"timestamp\", \"root.a.b.boolean\", \"root.a.b.int32\", \"root.a.b.int64\",\n        \"root.a.b.float\",\n        \"root.a.b.double\", \"root.a.b.text\"};\n    String[] typesString = {\"BOOLEAN\", \"INT32\", \"INT64\", \"FLOAT\", \"DOUBLE\", \"TEXT\"};\n    int[] types = {Types.BOOLEAN, Types.INTEGER, Types.BIGINT, Types.FLOAT, Types.DOUBLE,\n        Types.VARCHAR};\n    metadata = new IoTDBResultMetadata(Arrays.asList(columns), Arrays.asList(typesString), false);\n    flag = false;\n    try {\n      metadata.getColumnType(columns.length + 1);\n    } catch (Exception e) {\n      flag = true;\n    }\n    assertTrue(flag);\n\n    flag = false;\n    try {\n      metadata.getColumnType(0);\n    } catch (Exception e) {\n      flag = true;\n    }\n    assertTrue(flag);\n\n    assertEquals(metadata.getColumnType(1), Types.TIMESTAMP);\n    for (int i = 1; i <= types.length; i++) {\n      assertEquals(metadata.getColumnType(i + 1), types[i - 1]);\n    }\n  }", "signature": "void testGetColumnType()", "full_signature": "@Test public void testGetColumnType()", "class_method_signature": "IoTDBResultMetadataTest.testGetColumnType()", "testcase": true, "constructor": false, "invocations": ["getColumnType", "assertTrue", "getColumnType", "assertTrue", "asList", "asList", "getColumnType", "assertTrue", "getColumnType", "assertTrue", "assertEquals", "getColumnType", "assertEquals", "getColumnType"]}, "focal_class": {"identifier": "IoTDBResultMetadata", "superclass": "", "interfaces": "implements ResultSetMetaData", "fields": [{"original_string": "private List<String> columnInfoList;", "modifier": "private", "type": "List<String>", "declarator": "columnInfoList", "var_name": "columnInfoList"}, {"original_string": "private List<String> columnTypeList;", "modifier": "private", "type": "List<String>", "declarator": "columnTypeList", "var_name": "columnTypeList"}, {"original_string": "private boolean ignoreTimestamp;", "modifier": "private", "type": "boolean", "declarator": "ignoreTimestamp", "var_name": "ignoreTimestamp"}], "methods": [{"identifier": "IoTDBResultMetadata", "parameters": "(List<String> columnInfoList, List<String> columnTypeList, boolean ignoreTimestamp)", "modifiers": "public", "return": "", "signature": " IoTDBResultMetadata(List<String> columnInfoList, List<String> columnTypeList, boolean ignoreTimestamp)", "full_signature": "public  IoTDBResultMetadata(List<String> columnInfoList, List<String> columnTypeList, boolean ignoreTimestamp)", "class_method_signature": "IoTDBResultMetadata.IoTDBResultMetadata(List<String> columnInfoList, List<String> columnTypeList, boolean ignoreTimestamp)", "testcase": false, "constructor": true}, {"identifier": "isWrapperFor", "parameters": "(Class<?> arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> arg0)", "full_signature": "@Override public boolean isWrapperFor(Class<?> arg0)", "class_method_signature": "IoTDBResultMetadata.isWrapperFor(Class<?> arg0)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> arg0)", "modifiers": "@Override public", "return": "T", "signature": "T unwrap(Class<T> arg0)", "full_signature": "@Override public T unwrap(Class<T> arg0)", "class_method_signature": "IoTDBResultMetadata.unwrap(Class<T> arg0)", "testcase": false, "constructor": false}, {"identifier": "getCatalogName", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getCatalogName(int arg0)", "full_signature": "@Override public String getCatalogName(int arg0)", "class_method_signature": "IoTDBResultMetadata.getCatalogName(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getColumnClassName", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnClassName(int arg0)", "full_signature": "@Override public String getColumnClassName(int arg0)", "class_method_signature": "IoTDBResultMetadata.getColumnClassName(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getColumnCount()", "full_signature": "@Override public int getColumnCount()", "class_method_signature": "IoTDBResultMetadata.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnDisplaySize", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "int", "signature": "int getColumnDisplaySize(int arg0)", "full_signature": "@Override public int getColumnDisplaySize(int arg0)", "class_method_signature": "IoTDBResultMetadata.getColumnDisplaySize(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getColumnLabel", "parameters": "(int column)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnLabel(int column)", "full_signature": "@Override public String getColumnLabel(int column)", "class_method_signature": "IoTDBResultMetadata.getColumnLabel(int column)", "testcase": false, "constructor": false}, {"identifier": "getColumnName", "parameters": "(int column)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnName(int column)", "full_signature": "@Override public String getColumnName(int column)", "class_method_signature": "IoTDBResultMetadata.getColumnName(int column)", "testcase": false, "constructor": false}, {"identifier": "checkColumnIndex", "parameters": "(int column)", "modifiers": "private", "return": "void", "signature": "void checkColumnIndex(int column)", "full_signature": "private void checkColumnIndex(int column)", "class_method_signature": "IoTDBResultMetadata.checkColumnIndex(int column)", "testcase": false, "constructor": false}, {"identifier": "getColumnType", "parameters": "(int column)", "modifiers": "@Override public", "return": "int", "signature": "int getColumnType(int column)", "full_signature": "@Override public int getColumnType(int column)", "class_method_signature": "IoTDBResultMetadata.getColumnType(int column)", "testcase": false, "constructor": false}, {"identifier": "getColumnTypeName", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnTypeName(int arg0)", "full_signature": "@Override public String getColumnTypeName(int arg0)", "class_method_signature": "IoTDBResultMetadata.getColumnTypeName(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getPrecision", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "int", "signature": "int getPrecision(int arg0)", "full_signature": "@Override public int getPrecision(int arg0)", "class_method_signature": "IoTDBResultMetadata.getPrecision(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getScale", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "int", "signature": "int getScale(int arg0)", "full_signature": "@Override public int getScale(int arg0)", "class_method_signature": "IoTDBResultMetadata.getScale(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getSchemaName", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getSchemaName(int arg0)", "full_signature": "@Override public String getSchemaName(int arg0)", "class_method_signature": "IoTDBResultMetadata.getSchemaName(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getTableName(int arg0)", "full_signature": "@Override public String getTableName(int arg0)", "class_method_signature": "IoTDBResultMetadata.getTableName(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isAutoIncrement", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAutoIncrement(int arg0)", "full_signature": "@Override public boolean isAutoIncrement(int arg0)", "class_method_signature": "IoTDBResultMetadata.isAutoIncrement(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isCaseSensitive", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCaseSensitive(int arg0)", "full_signature": "@Override public boolean isCaseSensitive(int arg0)", "class_method_signature": "IoTDBResultMetadata.isCaseSensitive(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isCurrency", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCurrency(int arg0)", "full_signature": "@Override public boolean isCurrency(int arg0)", "class_method_signature": "IoTDBResultMetadata.isCurrency(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isDefinitelyWritable", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefinitelyWritable(int arg0)", "full_signature": "@Override public boolean isDefinitelyWritable(int arg0)", "class_method_signature": "IoTDBResultMetadata.isDefinitelyWritable(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isNullable", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "int", "signature": "int isNullable(int arg0)", "full_signature": "@Override public int isNullable(int arg0)", "class_method_signature": "IoTDBResultMetadata.isNullable(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly(int arg0)", "full_signature": "@Override public boolean isReadOnly(int arg0)", "class_method_signature": "IoTDBResultMetadata.isReadOnly(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isSearchable", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSearchable(int arg0)", "full_signature": "@Override public boolean isSearchable(int arg0)", "class_method_signature": "IoTDBResultMetadata.isSearchable(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isSigned", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSigned(int arg0)", "full_signature": "@Override public boolean isSigned(int arg0)", "class_method_signature": "IoTDBResultMetadata.isSigned(int arg0)", "testcase": false, "constructor": false}, {"identifier": "isWritable", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWritable(int arg0)", "full_signature": "@Override public boolean isWritable(int arg0)", "class_method_signature": "IoTDBResultMetadata.isWritable(int arg0)", "testcase": false, "constructor": false}], "file": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBResultMetadata.java"}, "focal_method": {"identifier": "getColumnType", "parameters": "(int column)", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int getColumnType(int column) throws SQLException {\n    checkColumnIndex(column);\n    if (column == 1 && !ignoreTimestamp) {\n      return Types.TIMESTAMP;\n    }\n    // BOOLEAN, INT32, INT64, FLOAT, DOUBLE, TEXT,\n    String columnType;\n    if(!ignoreTimestamp) {\n      columnType = columnTypeList.get(column - 2);\n    } else {\n      columnType = columnTypeList.get(column - 1);\n    }\n    switch (columnType.toUpperCase()) {\n      case \"BOOLEAN\":\n        return Types.BOOLEAN;\n      case \"INT32\":\n        return Types.INTEGER;\n      case \"INT64\":\n        return Types.BIGINT;\n      case \"FLOAT\":\n        return Types.FLOAT;\n      case \"DOUBLE\":\n        return Types.DOUBLE;\n      case \"TEXT\":\n        return Types.VARCHAR;\n      default:\n        break;\n    }\n    return 0;\n  }", "signature": "int getColumnType(int column)", "full_signature": "@Override public int getColumnType(int column)", "class_method_signature": "IoTDBResultMetadata.getColumnType(int column)", "testcase": false, "constructor": false, "invocations": ["checkColumnIndex", "get", "get", "toUpperCase"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}