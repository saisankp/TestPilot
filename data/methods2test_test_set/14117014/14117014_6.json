{"test_class": {"identifier": "SetPropertyMethodTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SetPropertyMethod setPropertyMethod;", "modifier": "private", "type": "SetPropertyMethod", "declarator": "setPropertyMethod", "var_name": "setPropertyMethod"}, {"original_string": "private SetPropertyMethod setInvalidPropertyMethod;", "modifier": "private", "type": "SetPropertyMethod", "declarator": "setInvalidPropertyMethod", "var_name": "setInvalidPropertyMethod"}], "file": "spi/src/test/java/com/buschmais/xo/spi/reflection/SetPropertyMethodTest.java"}, "test_case": {"identifier": "getAnnotations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAnnotations() {\n        Annotation[] annotations = setPropertyMethod.getAnnotations();\n        assertThat(annotations, notNullValue());\n        assertThat(annotations.length, equalTo(1));\n        assertThat(annotations[0], instanceOf(TestAnnotation.class));\n    }", "signature": "void getAnnotations()", "full_signature": "@Test public void getAnnotations()", "class_method_signature": "SetPropertyMethodTest.getAnnotations()", "testcase": true, "constructor": false, "invocations": ["getAnnotations", "assertThat", "notNullValue", "assertThat", "equalTo", "assertThat", "instanceOf"]}, "focal_class": {"identifier": "SetPropertyMethod", "superclass": "extends AbstractPropertyMethod", "interfaces": "", "fields": [{"original_string": "private final GetPropertyMethod getter;", "modifier": "private final", "type": "GetPropertyMethod", "declarator": "getter", "var_name": "getter"}], "methods": [{"identifier": "SetPropertyMethod", "parameters": "(Method setter, GetPropertyMethod getter, String name, Class<?> type, Type genericType)", "modifiers": "public", "return": "", "signature": " SetPropertyMethod(Method setter, GetPropertyMethod getter, String name, Class<?> type, Type genericType)", "full_signature": "public  SetPropertyMethod(Method setter, GetPropertyMethod getter, String name, Class<?> type, Type genericType)", "class_method_signature": "SetPropertyMethod.SetPropertyMethod(Method setter, GetPropertyMethod getter, String name, Class<?> type, Type genericType)", "testcase": false, "constructor": true}, {"identifier": "getAnnotation", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "T", "signature": "T getAnnotation(Class<T> type)", "full_signature": "@Override public T getAnnotation(Class<T> type)", "class_method_signature": "SetPropertyMethod.getAnnotation(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getByMetaAnnotation", "parameters": "(Class<M> type)", "modifiers": "@Override public", "return": "T", "signature": "T getByMetaAnnotation(Class<M> type)", "full_signature": "@Override public T getByMetaAnnotation(Class<M> type)", "class_method_signature": "SetPropertyMethod.getByMetaAnnotation(Class<M> type)", "testcase": false, "constructor": false}, {"identifier": "getAnnotations", "parameters": "()", "modifiers": "@Override public", "return": "Annotation[]", "signature": "Annotation[] getAnnotations()", "full_signature": "@Override public Annotation[] getAnnotations()", "class_method_signature": "SetPropertyMethod.getAnnotations()", "testcase": false, "constructor": false}, {"identifier": "reportInvalidAnnotationLocation", "parameters": "()", "modifiers": "private", "return": "T", "signature": "T reportInvalidAnnotationLocation()", "full_signature": "private T reportInvalidAnnotationLocation()", "class_method_signature": "SetPropertyMethod.reportInvalidAnnotationLocation()", "testcase": false, "constructor": false}], "file": "spi/src/main/java/com/buschmais/xo/spi/reflection/SetPropertyMethod.java"}, "focal_method": {"identifier": "getAnnotations", "parameters": "()", "modifiers": "@Override public", "return": "Annotation[]", "body": "@Override\n    public Annotation[] getAnnotations() {\n        return getter.getAnnotations();\n    }", "signature": "Annotation[] getAnnotations()", "full_signature": "@Override public Annotation[] getAnnotations()", "class_method_signature": "SetPropertyMethod.getAnnotations()", "testcase": false, "constructor": false, "invocations": ["getAnnotations"]}, "repository": {"repo_id": 14117014, "url": "https://github.com/buschmais/extended-objects", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 23, "size": 9542, "license": "licensed"}}