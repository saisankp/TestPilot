{"test_class": {"identifier": "SrgsNodeFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.xml/src/test/java/org/jvoicexml/xml/srgs/SrgsNodeFactoryTest.java"}, "test_case": {"identifier": "testGetXmlNode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetXmlNode() throws Exception {\n        final SrgsXmlDocument document = new SrgsXmlDocument();\n        final Grammar grammar = document.getGrammar();\n        grammar.setRoot(\"test\");\n        final Rule rule = grammar.appendChild(Rule.class);\n        rule.setId(\"test\");\n        rule.addText(\"this is a test\");\n        final SrgsNodeFactory factory = new SrgsNodeFactory();\n        final SrgsNode node = factory.getXmlNode(rule);\n        Assert.assertNotNull(node);\n        Assert.assertEquals(Rule.TAG_NAME, node.getTagName());\n    }", "signature": "void testGetXmlNode()", "full_signature": "@Test public void testGetXmlNode()", "class_method_signature": "SrgsNodeFactoryTest.testGetXmlNode()", "testcase": true, "constructor": false, "invocations": ["getGrammar", "setRoot", "appendChild", "setId", "addText", "getXmlNode", "assertNotNull", "assertEquals", "getTagName"]}, "focal_class": {"identifier": "SrgsNodeFactory", "superclass": "", "interfaces": "implements XmlNodeFactory<SrgsNode>", "fields": [{"original_string": "private static final Logger LOGGER =\n        Logger.getLogger(SrgsNodeFactory.class.getCanonicalName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n        Logger.getLogger(SrgsNodeFactory.class.getCanonicalName())", "var_name": "LOGGER"}, {"original_string": "private static final Map<String, SrgsNode> NODES;", "modifier": "private static final", "type": "Map<String, SrgsNode>", "declarator": "NODES", "var_name": "NODES"}], "methods": [{"identifier": "SrgsNodeFactory", "parameters": "()", "modifiers": "", "return": "", "signature": " SrgsNodeFactory()", "full_signature": "  SrgsNodeFactory()", "class_method_signature": "SrgsNodeFactory.SrgsNodeFactory()", "testcase": false, "constructor": true}, {"identifier": "getXmlNode", "parameters": "(final Node node)", "modifiers": "public", "return": "SrgsNode", "signature": "SrgsNode getXmlNode(final Node node)", "full_signature": "public SrgsNode getXmlNode(final Node node)", "class_method_signature": "SrgsNodeFactory.getXmlNode(final Node node)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.xml/src/main/java/org/jvoicexml/xml/srgs/SrgsNodeFactory.java"}, "focal_method": {"identifier": "getXmlNode", "parameters": "(final Node node)", "modifiers": "public", "return": "SrgsNode", "body": "public SrgsNode getXmlNode(final Node node) {\n        // Do nothing if the node is null\n        if (node == null) {\n            return null;\n        }\n\n        // Do nothing if we already have the righttype.\n        if (node instanceof SrgsNode) {\n            return (SrgsNode) node;\n        }\n\n        String name = node.getLocalName();\n        if (name == null) {\n            name = node.getNodeName();\n        }\n        final SrgsNode srgsXmlNode = NODES.get(name);\n        if (srgsXmlNode == null) {\n            LOGGER.warning(\"cannot resolve node with name '\" + name + \"'\");\n\n            return new GenericSrgsNode(node);\n        }\n\n        return (SrgsNode) srgsXmlNode.newInstance(node, this);\n    }", "signature": "SrgsNode getXmlNode(final Node node)", "full_signature": "public SrgsNode getXmlNode(final Node node)", "class_method_signature": "SrgsNodeFactory.getXmlNode(final Node node)", "testcase": false, "constructor": false, "invocations": ["getLocalName", "getNodeName", "get", "warning", "newInstance"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}