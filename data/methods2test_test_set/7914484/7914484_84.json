{"test_class": {"identifier": "SaajUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MessageFactory messageFactory;", "modifier": "private", "type": "MessageFactory", "declarator": "messageFactory", "var_name": "messageFactory"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/support/SaajUtilsTest.java"}, "test_case": {"identifier": "testToQName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testToQName() throws Exception {\n\t\tSOAPMessage message = messageFactory.createMessage();\n\t\tName name = message.getSOAPPart().getEnvelope().createName(\"localPart\", null, null);\n\t\tQName qName = SaajUtils.toQName(name);\n\t\tAssert.assertNotNull(\"Invalid qName\", qName);\n\t\tAssert.assertEquals(\"Invalid namespace\", name.getURI(), qName.getNamespaceURI());\n\t\tAssert.assertFalse(\"Invalid prefix\", StringUtils.hasLength(qName.getPrefix()));\n\t\tAssert.assertFalse(\"Invalid namespace\", StringUtils.hasLength(qName.getNamespaceURI()));\n\t}", "signature": "void testToQName()", "full_signature": "@Test public void testToQName()", "class_method_signature": "SaajUtilsTest.testToQName()", "testcase": true, "constructor": false, "invocations": ["createMessage", "createName", "getEnvelope", "getSOAPPart", "toQName", "assertNotNull", "assertEquals", "getURI", "getNamespaceURI", "assertFalse", "hasLength", "getPrefix", "assertFalse", "hasLength", "getNamespaceURI"]}, "focal_class": {"identifier": "SaajUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int SAAJ_11 = 0;", "modifier": "public static final", "type": "int", "declarator": "SAAJ_11 = 0", "var_name": "SAAJ_11"}, {"original_string": "public static final int SAAJ_12 = 1;", "modifier": "public static final", "type": "int", "declarator": "SAAJ_12 = 1", "var_name": "SAAJ_12"}, {"original_string": "public static final int SAAJ_13 = 2;", "modifier": "public static final", "type": "int", "declarator": "SAAJ_13 = 2", "var_name": "SAAJ_13"}, {"original_string": "private static int saajVersion = SAAJ_13;", "modifier": "private static", "type": "int", "declarator": "saajVersion = SAAJ_13", "var_name": "saajVersion"}], "methods": [{"identifier": "getSaajVersion", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getSaajVersion()", "full_signature": "public static int getSaajVersion()", "class_method_signature": "SaajUtils.getSaajVersion()", "testcase": false, "constructor": false}, {"identifier": "getSaajVersion", "parameters": "(SOAPMessage soapMessage)", "modifiers": "public static", "return": "int", "signature": "int getSaajVersion(SOAPMessage soapMessage)", "full_signature": "public static int getSaajVersion(SOAPMessage soapMessage)", "class_method_signature": "SaajUtils.getSaajVersion(SOAPMessage soapMessage)", "testcase": false, "constructor": false}, {"identifier": "getSaajVersion", "parameters": "(SOAPElement soapElement)", "modifiers": "public static", "return": "int", "signature": "int getSaajVersion(SOAPElement soapElement)", "full_signature": "public static int getSaajVersion(SOAPElement soapElement)", "class_method_signature": "SaajUtils.getSaajVersion(SOAPElement soapElement)", "testcase": false, "constructor": false}, {"identifier": "getSaajVersionString", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSaajVersionString()", "full_signature": "public static String getSaajVersionString()", "class_method_signature": "SaajUtils.getSaajVersionString()", "testcase": false, "constructor": false}, {"identifier": "getSaajVersionString", "parameters": "(int saajVersion)", "modifiers": "private static", "return": "String", "signature": "String getSaajVersionString(int saajVersion)", "full_signature": "private static String getSaajVersionString(int saajVersion)", "class_method_signature": "SaajUtils.getSaajVersionString(int saajVersion)", "testcase": false, "constructor": false}, {"identifier": "toName", "parameters": "(QName qName, SOAPElement resolveElement)", "modifiers": "public static", "return": "Name", "signature": "Name toName(QName qName, SOAPElement resolveElement)", "full_signature": "public static Name toName(QName qName, SOAPElement resolveElement)", "class_method_signature": "SaajUtils.toName(QName qName, SOAPElement resolveElement)", "testcase": false, "constructor": false}, {"identifier": "toQName", "parameters": "(Name name)", "modifiers": "public static", "return": "QName", "signature": "QName toQName(Name name)", "full_signature": "public static QName toQName(Name name)", "class_method_signature": "SaajUtils.toQName(Name name)", "testcase": false, "constructor": false}, {"identifier": "loadMessage", "parameters": "(Resource resource, MessageFactory messageFactory)", "modifiers": "public static", "return": "SOAPMessage", "signature": "SOAPMessage loadMessage(Resource resource, MessageFactory messageFactory)", "full_signature": "public static SOAPMessage loadMessage(Resource resource, MessageFactory messageFactory)", "class_method_signature": "SaajUtils.loadMessage(Resource resource, MessageFactory messageFactory)", "testcase": false, "constructor": false}, {"identifier": "getEnvelope", "parameters": "(SOAPElement element)", "modifiers": "public static", "return": "SOAPEnvelope", "signature": "SOAPEnvelope getEnvelope(SOAPElement element)", "full_signature": "public static SOAPEnvelope getEnvelope(SOAPElement element)", "class_method_signature": "SaajUtils.getEnvelope(SOAPElement element)", "testcase": false, "constructor": false}, {"identifier": "getFirstBodyElement", "parameters": "(SOAPBody body)", "modifiers": "public static", "return": "SOAPElement", "signature": "SOAPElement getFirstBodyElement(SOAPBody body)", "full_signature": "public static SOAPElement getFirstBodyElement(SOAPBody body)", "class_method_signature": "SaajUtils.getFirstBodyElement(SOAPBody body)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/saaj/support/SaajUtils.java"}, "focal_method": {"identifier": "toQName", "parameters": "(Name name)", "modifiers": "public static", "return": "QName", "body": "public static QName toQName(Name name) {\n\t\tif (StringUtils.hasLength(name.getURI()) && StringUtils.hasLength(name.getPrefix())) {\n\t\t\treturn new QName(name.getURI(), name.getLocalName(), name.getPrefix());\n\t\t} else if (StringUtils.hasLength(name.getURI())) {\n\t\t\treturn new QName(name.getURI(), name.getLocalName());\n\t\t} else {\n\t\t\treturn new QName(name.getLocalName());\n\t\t}\n\t}", "signature": "QName toQName(Name name)", "full_signature": "public static QName toQName(Name name)", "class_method_signature": "SaajUtils.toQName(Name name)", "testcase": false, "constructor": false, "invocations": ["hasLength", "getURI", "hasLength", "getPrefix", "getURI", "getLocalName", "getPrefix", "hasLength", "getURI", "getURI", "getLocalName", "getLocalName"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}