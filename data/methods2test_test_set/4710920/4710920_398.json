{"test_class": {"identifier": "URLBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java"}, "test_case": {"identifier": "testNoArgConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoArgConstructor() {\n        URL url = new URLBuilder().build();\n        assertThat(url.toString(), equalTo(\"\"));\n    }", "signature": "void testNoArgConstructor()", "full_signature": "@Test public void testNoArgConstructor()", "class_method_signature": "URLBuilderTest.testNoArgConstructor()", "testcase": true, "constructor": false, "invocations": ["build", "assertThat", "toString", "equalTo"]}, "focal_class": {"identifier": "URLBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String protocol;", "modifier": "private", "type": "String", "declarator": "protocol", "var_name": "protocol"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private int port;", "modifier": "private", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private Map<String, Map<String, String>> methodParameters;", "modifier": "private", "type": "Map<String, Map<String, String>>", "declarator": "methodParameters", "var_name": "methodParameters"}], "methods": [{"identifier": "URLBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " URLBuilder()", "full_signature": "public  URLBuilder()", "class_method_signature": "URLBuilder.URLBuilder()", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port)", "full_signature": "public  URLBuilder(String protocol, String host, int port)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port, String[] pairs)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port, String[] pairs)", "full_signature": "public  URLBuilder(String protocol, String host, int port, String[] pairs)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port, String[] pairs)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port, Map<String, String> parameters)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port, Map<String, String> parameters)", "full_signature": "public  URLBuilder(String protocol, String host, int port, Map<String, String> parameters)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port, Map<String, String> parameters)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port, String path)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port, String path)", "full_signature": "public  URLBuilder(String protocol, String host, int port, String path)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port, String path)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port, String path, String... pairs)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port, String path, String... pairs)", "full_signature": "public  URLBuilder(String protocol, String host, int port, String path, String... pairs)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port, String path, String... pairs)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol, String host, int port, String path, Map<String, String> parameters)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol, String host, int port, String path, Map<String, String> parameters)", "full_signature": "public  URLBuilder(String protocol, String host, int port, String path, Map<String, String> parameters)", "class_method_signature": "URLBuilder.URLBuilder(String protocol, String host, int port, String path, Map<String, String> parameters)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters)", "full_signature": "public  URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters)", "class_method_signature": "URLBuilder.URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters)", "testcase": false, "constructor": true}, {"identifier": "URLBuilder", "parameters": "(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters,\n                      Map<String, Map<String, String>> methodParameters)", "modifiers": "public", "return": "", "signature": " URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters,\n                      Map<String, Map<String, String>> methodParameters)", "full_signature": "public  URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters,\n                      Map<String, Map<String, String>> methodParameters)", "class_method_signature": "URLBuilder.URLBuilder(String protocol,\n                      String username,\n                      String password,\n                      String host,\n                      int port,\n                      String path, Map<String, String> parameters,\n                      Map<String, Map<String, String>> methodParameters)", "testcase": false, "constructor": true}, {"identifier": "from", "parameters": "(URL url)", "modifiers": "public static", "return": "URLBuilder", "signature": "URLBuilder from(URL url)", "full_signature": "public static URLBuilder from(URL url)", "class_method_signature": "URLBuilder.from(URL url)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL build()", "full_signature": "public URL build()", "class_method_signature": "URLBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "setProtocol", "parameters": "(String protocol)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setProtocol(String protocol)", "full_signature": "public URLBuilder setProtocol(String protocol)", "class_method_signature": "URLBuilder.setProtocol(String protocol)", "testcase": false, "constructor": false}, {"identifier": "setUsername", "parameters": "(String username)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setUsername(String username)", "full_signature": "public URLBuilder setUsername(String username)", "class_method_signature": "URLBuilder.setUsername(String username)", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(String password)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setPassword(String password)", "full_signature": "public URLBuilder setPassword(String password)", "class_method_signature": "URLBuilder.setPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(String host)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setHost(String host)", "full_signature": "public URLBuilder setHost(String host)", "class_method_signature": "URLBuilder.setHost(String host)", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(int port)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setPort(int port)", "full_signature": "public URLBuilder setPort(int port)", "class_method_signature": "URLBuilder.setPort(int port)", "testcase": false, "constructor": false}, {"identifier": "setAddress", "parameters": "(String address)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setAddress(String address)", "full_signature": "public URLBuilder setAddress(String address)", "class_method_signature": "URLBuilder.setAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder setPath(String path)", "full_signature": "public URLBuilder setPath(String path)", "class_method_signature": "URLBuilder.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "addParameterAndEncoded", "parameters": "(String key, String value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameterAndEncoded(String key, String value)", "full_signature": "public URLBuilder addParameterAndEncoded(String key, String value)", "class_method_signature": "URLBuilder.addParameterAndEncoded(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, boolean value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, boolean value)", "full_signature": "public URLBuilder addParameter(String key, boolean value)", "class_method_signature": "URLBuilder.addParameter(String key, boolean value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, char value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, char value)", "full_signature": "public URLBuilder addParameter(String key, char value)", "class_method_signature": "URLBuilder.addParameter(String key, char value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, byte value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, byte value)", "full_signature": "public URLBuilder addParameter(String key, byte value)", "class_method_signature": "URLBuilder.addParameter(String key, byte value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, short value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, short value)", "full_signature": "public URLBuilder addParameter(String key, short value)", "class_method_signature": "URLBuilder.addParameter(String key, short value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, int value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, int value)", "full_signature": "public URLBuilder addParameter(String key, int value)", "class_method_signature": "URLBuilder.addParameter(String key, int value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, long value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, long value)", "full_signature": "public URLBuilder addParameter(String key, long value)", "class_method_signature": "URLBuilder.addParameter(String key, long value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, float value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, float value)", "full_signature": "public URLBuilder addParameter(String key, float value)", "class_method_signature": "URLBuilder.addParameter(String key, float value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, double value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, double value)", "full_signature": "public URLBuilder addParameter(String key, double value)", "class_method_signature": "URLBuilder.addParameter(String key, double value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, Enum<?> value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, Enum<?> value)", "full_signature": "public URLBuilder addParameter(String key, Enum<?> value)", "class_method_signature": "URLBuilder.addParameter(String key, Enum<?> value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, Number value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, Number value)", "full_signature": "public URLBuilder addParameter(String key, Number value)", "class_method_signature": "URLBuilder.addParameter(String key, Number value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, CharSequence value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, CharSequence value)", "full_signature": "public URLBuilder addParameter(String key, CharSequence value)", "class_method_signature": "URLBuilder.addParameter(String key, CharSequence value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String key, String value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameter(String key, String value)", "full_signature": "public URLBuilder addParameter(String key, String value)", "class_method_signature": "URLBuilder.addParameter(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addMethodParameter", "parameters": "(String method, String key, String value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addMethodParameter(String method, String key, String value)", "full_signature": "public URLBuilder addMethodParameter(String method, String key, String value)", "class_method_signature": "URLBuilder.addMethodParameter(String method, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addParameterIfAbsent", "parameters": "(String key, String value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameterIfAbsent(String key, String value)", "full_signature": "public URLBuilder addParameterIfAbsent(String key, String value)", "class_method_signature": "URLBuilder.addParameterIfAbsent(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addMethodParameterIfAbsent", "parameters": "(String method, String key, String value)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addMethodParameterIfAbsent(String method, String key, String value)", "full_signature": "public URLBuilder addMethodParameterIfAbsent(String method, String key, String value)", "class_method_signature": "URLBuilder.addMethodParameterIfAbsent(String method, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addParameters", "parameters": "(Map<String, String> parameters)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameters(Map<String, String> parameters)", "full_signature": "public URLBuilder addParameters(Map<String, String> parameters)", "class_method_signature": "URLBuilder.addParameters(Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "addMethodParameters", "parameters": "(Map<String, Map<String, String>> methodParameters)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addMethodParameters(Map<String, Map<String, String>> methodParameters)", "full_signature": "public URLBuilder addMethodParameters(Map<String, Map<String, String>> methodParameters)", "class_method_signature": "URLBuilder.addMethodParameters(Map<String, Map<String, String>> methodParameters)", "testcase": false, "constructor": false}, {"identifier": "addParametersIfAbsent", "parameters": "(Map<String, String> parameters)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParametersIfAbsent(Map<String, String> parameters)", "full_signature": "public URLBuilder addParametersIfAbsent(Map<String, String> parameters)", "class_method_signature": "URLBuilder.addParametersIfAbsent(Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "addParameters", "parameters": "(String... pairs)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameters(String... pairs)", "full_signature": "public URLBuilder addParameters(String... pairs)", "class_method_signature": "URLBuilder.addParameters(String... pairs)", "testcase": false, "constructor": false}, {"identifier": "addParameterString", "parameters": "(String query)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder addParameterString(String query)", "full_signature": "public URLBuilder addParameterString(String query)", "class_method_signature": "URLBuilder.addParameterString(String query)", "testcase": false, "constructor": false}, {"identifier": "removeParameter", "parameters": "(String key)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder removeParameter(String key)", "full_signature": "public URLBuilder removeParameter(String key)", "class_method_signature": "URLBuilder.removeParameter(String key)", "testcase": false, "constructor": false}, {"identifier": "removeParameters", "parameters": "(Collection<String> keys)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder removeParameters(Collection<String> keys)", "full_signature": "public URLBuilder removeParameters(Collection<String> keys)", "class_method_signature": "URLBuilder.removeParameters(Collection<String> keys)", "testcase": false, "constructor": false}, {"identifier": "removeParameters", "parameters": "(String... keys)", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder removeParameters(String... keys)", "full_signature": "public URLBuilder removeParameters(String... keys)", "class_method_signature": "URLBuilder.removeParameters(String... keys)", "testcase": false, "constructor": false}, {"identifier": "clearParameters", "parameters": "()", "modifiers": "public", "return": "URLBuilder", "signature": "URLBuilder clearParameters()", "full_signature": "public URLBuilder clearParameters()", "class_method_signature": "URLBuilder.clearParameters()", "testcase": false, "constructor": false}, {"identifier": "hasParameter", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean hasParameter(String key)", "full_signature": "public boolean hasParameter(String key)", "class_method_signature": "URLBuilder.hasParameter(String key)", "testcase": false, "constructor": false}, {"identifier": "hasMethodParameter", "parameters": "(String method, String key)", "modifiers": "public", "return": "boolean", "signature": "boolean hasMethodParameter(String method, String key)", "full_signature": "public boolean hasMethodParameter(String method, String key)", "class_method_signature": "URLBuilder.hasMethodParameter(String method, String key)", "testcase": false, "constructor": false}, {"identifier": "getParameter", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getParameter(String key)", "full_signature": "public String getParameter(String key)", "class_method_signature": "URLBuilder.getParameter(String key)", "testcase": false, "constructor": false}, {"identifier": "getMethodParameter", "parameters": "(String method, String key)", "modifiers": "public", "return": "String", "signature": "String getMethodParameter(String method, String key)", "full_signature": "public String getMethodParameter(String method, String key)", "class_method_signature": "URLBuilder.getMethodParameter(String method, String key)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/URLBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "URL", "body": "public URL build() {\n        port = port < 0 ? 0 : port;\n        // trim the leading \"/\"\n        int firstNonSlash = 0;\n        if (path != null) {\n            while (firstNonSlash < path.length() && path.charAt(firstNonSlash) == '/') {\n                firstNonSlash++;\n            }\n            if (firstNonSlash >= path.length()) {\n                path = \"\";\n            } else if (firstNonSlash > 0) {\n                path = path.substring(firstNonSlash);\n            }\n        }\n        if (CollectionUtils.isEmptyMap(methodParameters)) {\n            return new URL(protocol, username, password, host, port, path, parameters);\n        } else {\n            return new URL(protocol, username, password, host, port, path, parameters, methodParameters);\n        }\n    }", "signature": "URL build()", "full_signature": "public URL build()", "class_method_signature": "URLBuilder.build()", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "length", "substring", "isEmptyMap"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}