{"test_class": {"identifier": "KeyRefresherExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/cert_refresher/src/test/java/com/oath/auth/KeyRefresherExceptionTest.java"}, "test_case": {"identifier": "testKeyRefresherException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testKeyRefresherException() {\n\n        KeyRefresherException keyRefresherException = new KeyRefresherException();\n        assertEquals(null, keyRefresherException.getMessage());\n        \n        keyRefresherException = new KeyRefresherException(\"exception\");\n        assertEquals(\"exception\", keyRefresherException.getMessage());\n        \n        keyRefresherException = new KeyRefresherException(new Throwable(\"new throwable\"));\n        assertEquals(\"java.lang.Throwable: new throwable\", keyRefresherException.getMessage());\n\n        keyRefresherException = new KeyRefresherException(\"exception\", new Throwable(\"new throwable\"));\n        assertEquals(\"exception\", keyRefresherException.getMessage());\n\n    }", "signature": "void testKeyRefresherException()", "full_signature": "@Test public void testKeyRefresherException()", "class_method_signature": "KeyRefresherExceptionTest.testKeyRefresherException()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMessage", "assertEquals", "getMessage", "assertEquals", "getMessage", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "KeyRefresherException", "superclass": "extends Exception", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "KeyRefresherException", "parameters": "()", "modifiers": "public", "return": "", "signature": " KeyRefresherException()", "full_signature": "public  KeyRefresherException()", "class_method_signature": "KeyRefresherException.KeyRefresherException()", "testcase": false, "constructor": true}, {"identifier": "KeyRefresherException", "parameters": "(String message, Throwable cause)", "modifiers": "public", "return": "", "signature": " KeyRefresherException(String message, Throwable cause)", "full_signature": "public  KeyRefresherException(String message, Throwable cause)", "class_method_signature": "KeyRefresherException.KeyRefresherException(String message, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "KeyRefresherException", "parameters": "(String message)", "modifiers": "public", "return": "", "signature": " KeyRefresherException(String message)", "full_signature": "public  KeyRefresherException(String message)", "class_method_signature": "KeyRefresherException.KeyRefresherException(String message)", "testcase": false, "constructor": true}, {"identifier": "KeyRefresherException", "parameters": "(Throwable cause)", "modifiers": "public", "return": "", "signature": " KeyRefresherException(Throwable cause)", "full_signature": "public  KeyRefresherException(Throwable cause)", "class_method_signature": "KeyRefresherException.KeyRefresherException(Throwable cause)", "testcase": false, "constructor": true}], "file": "libs/java/cert_refresher/src/main/java/com/oath/auth/KeyRefresherException.java"}, "focal_method": {"identifier": "KeyRefresherException", "parameters": "()", "modifiers": "public", "return": "", "body": "public KeyRefresherException() {\n        super();\n    }", "signature": " KeyRefresherException()", "full_signature": "public  KeyRefresherException()", "class_method_signature": "KeyRefresherException.KeyRefresherException()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}