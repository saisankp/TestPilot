{"test_class": {"identifier": "CompositeGenotypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-core/src/test/java/org/opt4j/core/genotype/CompositeGenotypeTest.java"}, "test_case": {"identifier": "get", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void get() {\n\t\tCompositeGenotype<String, Genotype> composite = new CompositeGenotype<String, Genotype>();\n\t\tGenotype one = new IntegerGenotype(0, 2);\n\t\tcomposite.put(\"one\", one);\n\t\tcomposite.put(\"two\", new IntegerGenotype(0, 2));\n\t\tAssert.assertEquals(one, composite.get(\"one\"));\n\t}", "signature": "void get()", "full_signature": "@Test public void get()", "class_method_signature": "CompositeGenotypeTest.get()", "testcase": true, "constructor": false, "invocations": ["put", "put", "assertEquals", "get"]}, "focal_class": {"identifier": "CompositeGenotype", "superclass": "", "interfaces": "implements Genotype, Iterable<Entry<K, V>>", "fields": [{"original_string": "protected final Map<K, V> map = new HashMap<>();", "modifier": "protected final", "type": "Map<K, V>", "declarator": "map = new HashMap<>()", "var_name": "map"}], "methods": [{"identifier": "CompositeGenotype", "parameters": "()", "modifiers": "public", "return": "", "signature": " CompositeGenotype()", "full_signature": "public  CompositeGenotype()", "class_method_signature": "CompositeGenotype.CompositeGenotype()", "testcase": false, "constructor": true}, {"identifier": "CompositeGenotype", "parameters": "(Map<K, V> map)", "modifiers": "public", "return": "", "signature": " CompositeGenotype(Map<K, V> map)", "full_signature": "public  CompositeGenotype(Map<K, V> map)", "class_method_signature": "CompositeGenotype.CompositeGenotype(Map<K, V> map)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "CompositeGenotype.size()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "G", "signature": "G get(Object key)", "full_signature": "@SuppressWarnings(\"unchecked\") public G get(Object key)", "class_method_signature": "CompositeGenotype.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(K key, V value)", "modifiers": "public", "return": "void", "signature": "void put(K key, V value)", "full_signature": "public void put(K key, V value)", "class_method_signature": "CompositeGenotype.put(K key, V value)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "CompositeGenotype.clear()", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "public", "return": "Set<K>", "signature": "Set<K> keySet()", "full_signature": "public Set<K> keySet()", "class_method_signature": "CompositeGenotype.keySet()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "public", "return": "Collection<V>", "signature": "Collection<V> values()", "full_signature": "public Collection<V> values()", "class_method_signature": "CompositeGenotype.values()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Entry<K, V>>", "signature": "Iterator<Entry<K, V>> iterator()", "full_signature": "@Override public Iterator<Entry<K, V>> iterator()", "class_method_signature": "CompositeGenotype.iterator()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "G", "signature": "G newInstance()", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public G newInstance()", "class_method_signature": "CompositeGenotype.newInstance()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CompositeGenotype.toString()", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/genotype/CompositeGenotype.java"}, "focal_method": {"identifier": "get", "parameters": "(Object key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "G", "body": "@SuppressWarnings(\"unchecked\")\n\tpublic <G> G get(Object key) {\n\t\tV value = map.get(key);\n\t\treturn (G) value;\n\t}", "signature": "G get(Object key)", "full_signature": "@SuppressWarnings(\"unchecked\") public G get(Object key)", "class_method_signature": "CompositeGenotype.get(Object key)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}