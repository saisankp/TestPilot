{"test_class": {"identifier": "StorageFileDaoHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Captor\n    private ArgumentCaptor<List<StorageFileEntity>> argumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<List<StorageFileEntity>>", "declarator": "argumentCaptor", "var_name": "argumentCaptor"}, {"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private StorageFileDao storageFileDao;", "modifier": "@Mock\n    private", "type": "StorageFileDao", "declarator": "storageFileDao", "var_name": "storageFileDao"}, {"original_string": "@InjectMocks\n    private StorageFileDaoHelper storageFileDaoHelper;", "modifier": "@InjectMocks\n    private", "type": "StorageFileDaoHelper", "declarator": "storageFileDaoHelper", "var_name": "storageFileDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageFileDaoHelperTest.java"}, "test_case": {"identifier": "testGetStorageFileEntityByStorageUnitEntityAndFilePathWithFileOnlyPrefix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStorageFileEntityByStorageUnitEntityAndFilePathWithFileOnlyPrefix()\n    {\n        // Create a new business object data key\n        BusinessObjectDataKey businessObjectDataKey =\n            new BusinessObjectDataKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE, SUBPARTITION_VALUES,\n                DATA_VERSION);\n\n        // Create a storage unit entity.\n        StorageEntity storageEntity = new StorageEntity();\n        storageEntity.setName(STORAGE_NAME);\n        StorageUnitEntity storageUnitEntity = new StorageUnitEntity();\n        storageUnitEntity.setStorage(storageEntity);\n        storageUnitEntity.setDirectoryPath(TEST_S3_KEY_PREFIX);\n\n        // Create a file path.\n        String filePath = TEST_S3_KEY_PREFIX + \"/\" + LOCAL_FILE;\n\n        // Create a storage file entity\n        StorageFileEntity storageFileEntity = new StorageFileEntity();\n        storageFileEntity.setPath(TEST_S3_KEY_PREFIX);\n        storageFileEntity.setRowCount(ROW_COUNT);\n        storageFileEntity.setFileSizeBytes(FILE_SIZE);\n\n        // Mock the external calls.\n        when(storageFileDao.getStorageFileByStorageUnitEntityAndFilePath(storageUnitEntity, filePath)).thenReturn(null);\n        when(storageFileDao.getStorageFileByStorageUnitEntityAndFilePath(storageUnitEntity, LOCAL_FILE)).thenReturn(storageFileEntity);\n\n        // Call the method under test.\n        StorageFileEntity result = storageFileDaoHelper.getStorageFileEntity(storageUnitEntity, filePath, businessObjectDataKey);\n\n        // Validate the results.\n        assertThat(\"Result not equal to storage file entity.\", result, is(storageFileEntity));\n\n        // Verify the external calls.\n        verify(storageFileDao).getStorageFileByStorageUnitEntityAndFilePath(storageUnitEntity, filePath);\n        verify(storageFileDao).getStorageFileByStorageUnitEntityAndFilePath(storageUnitEntity, LOCAL_FILE);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetStorageFileEntityByStorageUnitEntityAndFilePathWithFileOnlyPrefix()", "full_signature": "@Test public void testGetStorageFileEntityByStorageUnitEntityAndFilePathWithFileOnlyPrefix()", "class_method_signature": "StorageFileDaoHelperTest.testGetStorageFileEntityByStorageUnitEntityAndFilePathWithFileOnlyPrefix()", "testcase": true, "constructor": false, "invocations": ["setName", "setStorage", "setDirectoryPath", "setPath", "setRowCount", "setFileSizeBytes", "thenReturn", "when", "getStorageFileByStorageUnitEntityAndFilePath", "thenReturn", "when", "getStorageFileByStorageUnitEntityAndFilePath", "getStorageFileEntity", "assertThat", "is", "getStorageFileByStorageUnitEntityAndFilePath", "verify", "getStorageFileByStorageUnitEntityAndFilePath", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "StorageFileDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private StorageFileDao storageFileDao;", "modifier": "@Autowired\n    private", "type": "StorageFileDao", "declarator": "storageFileDao", "var_name": "storageFileDao"}], "methods": [{"identifier": "createStorageFileEntitiesFromStorageFiles", "parameters": "(StorageUnitEntity storageUnitEntity, List<StorageFile> storageFiles)", "modifiers": "public", "return": "List<StorageFileEntity>", "signature": "List<StorageFileEntity> createStorageFileEntitiesFromStorageFiles(StorageUnitEntity storageUnitEntity, List<StorageFile> storageFiles)", "full_signature": "public List<StorageFileEntity> createStorageFileEntitiesFromStorageFiles(StorageUnitEntity storageUnitEntity, List<StorageFile> storageFiles)", "class_method_signature": "StorageFileDaoHelper.createStorageFileEntitiesFromStorageFiles(StorageUnitEntity storageUnitEntity, List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "getStorageFileEntity", "parameters": "(String storageName, String filePath)", "modifiers": "public", "return": "StorageFileEntity", "signature": "StorageFileEntity getStorageFileEntity(String storageName, String filePath)", "full_signature": "public StorageFileEntity getStorageFileEntity(String storageName, String filePath)", "class_method_signature": "StorageFileDaoHelper.getStorageFileEntity(String storageName, String filePath)", "testcase": false, "constructor": false}, {"identifier": "getStorageFileEntity", "parameters": "(StorageUnitEntity storageUnitEntity, String filePath, BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "StorageFileEntity", "signature": "StorageFileEntity getStorageFileEntity(StorageUnitEntity storageUnitEntity, String filePath, BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public StorageFileEntity getStorageFileEntity(StorageUnitEntity storageUnitEntity, String filePath, BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileDaoHelper.getStorageFileEntity(StorageUnitEntity storageUnitEntity, String filePath, BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageFileDaoHelper.java"}, "focal_method": {"identifier": "getStorageFileEntity", "parameters": "(String storageName, String filePath)", "modifiers": "public", "return": "StorageFileEntity", "body": "public StorageFileEntity getStorageFileEntity(String storageName, String filePath) throws ObjectNotFoundException, IllegalArgumentException\n    {\n        StorageFileEntity storageFileEntity = storageFileDao.getStorageFileByStorageNameAndFilePath(storageName, filePath);\n\n        if (storageFileEntity == null)\n        {\n            throw new ObjectNotFoundException(String.format(\"Storage file \\\"%s\\\" doesn't exist in \\\"%s\\\" storage.\", filePath, storageName));\n        }\n\n        return storageFileEntity;\n    }", "signature": "StorageFileEntity getStorageFileEntity(String storageName, String filePath)", "full_signature": "public StorageFileEntity getStorageFileEntity(String storageName, String filePath)", "class_method_signature": "StorageFileDaoHelper.getStorageFileEntity(String storageName, String filePath)", "testcase": false, "constructor": false, "invocations": ["getStorageFileByStorageNameAndFilePath", "format"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}