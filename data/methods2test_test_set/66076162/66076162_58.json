{"test_class": {"identifier": "ServerSearchManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServerSearchManager serverSearchManager;", "modifier": "private", "type": "ServerSearchManager", "declarator": "serverSearchManager", "var_name": "serverSearchManager"}, {"original_string": "private ServerSearchSettings mockServerSearchSettings;", "modifier": "private", "type": "ServerSearchSettings", "declarator": "mockServerSearchSettings", "var_name": "mockServerSearchSettings"}, {"original_string": "@Mock private NetworkConnectionlessTransmitter mockNetworkConnectionlessTransmitter;", "modifier": "@Mock private", "type": "NetworkConnectionlessTransmitter", "declarator": "mockNetworkConnectionlessTransmitter", "var_name": "mockNetworkConnectionlessTransmitter"}, {"original_string": "@Mock private BroadcastAddressProvider mockBroadcastAddressProvider;", "modifier": "@Mock private", "type": "BroadcastAddressProvider", "declarator": "mockBroadcastAddressProvider", "var_name": "mockBroadcastAddressProvider"}, {"original_string": "@Mock private ProtocolMessageComposer mockProtocolMessageComposer;", "modifier": "@Mock private", "type": "ProtocolMessageComposer", "declarator": "mockProtocolMessageComposer", "var_name": "mockProtocolMessageComposer"}, {"original_string": "@Mock private MessageJsonMapper mockMessageJsonMapper;", "modifier": "@Mock private", "type": "MessageJsonMapper", "declarator": "mockMessageJsonMapper", "var_name": "mockMessageJsonMapper"}, {"original_string": "@Mock private ServerProtocolMapper mockServerProtocolMapper;", "modifier": "@Mock private", "type": "ServerProtocolMapper", "declarator": "mockServerProtocolMapper", "var_name": "mockServerProtocolMapper"}, {"original_string": "@Mock private ServerMessageValidator mockServerMessageValidator;", "modifier": "@Mock private", "type": "ServerMessageValidator", "declarator": "mockServerMessageValidator", "var_name": "mockServerMessageValidator"}], "file": "infrastructure/src/test/java/com/remotecraft/app/infrastructure/manager/ServerSearchManagerTest.java"}, "test_case": {"identifier": "shouldNotFindServerGivenAnUnsuccessfulResponse", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n  public void shouldNotFindServerGivenAnUnsuccessfulResponse() throws Exception {\n    final ServerProtocol mockServerProtocol = getMockServerProtocol();\n    final ServerEntity mockServerEntity = getMockServerEntity();\n\n    CommandMessage mockCommandMessage = mock(CommandMessage.class);\n    when(mockProtocolMessageComposer.composeGetServerInfoCommand()).thenReturn(mockCommandMessage);\n    when(mockMessageJsonMapper.transformMessage(mockCommandMessage)).thenReturn(\"whatever\");\n\n    Message mockMessage = mock(Message.class);\n    when(mockMessage.isSuccess()).thenReturn(false);\n    when(mockMessage.isServer()).thenReturn(true);\n    when(mockMessage.getServer()).thenReturn(mockServerProtocol);\n    when(mockMessageJsonMapper.transformMessage(anyString())).thenReturn(mockMessage);\n\n    when(mockServerMessageValidator.isValid(mockMessage)).thenReturn(true);\n    when(mockServerMessageValidator.cast(mockMessage)).thenReturn(mockServerProtocol);\n    when(mockServerProtocolMapper.transform(mockServerProtocol)).thenReturn(mockServerEntity);\n\n    Observable<ServerEntity> serverEntityObservable = serverSearchManager.searchServer();\n\n    ServerEntity serverEntity = serverEntityObservable.blockingFirst();\n  }", "signature": "void shouldNotFindServerGivenAnUnsuccessfulResponse()", "full_signature": "@Test(expected = RuntimeException.class) public void shouldNotFindServerGivenAnUnsuccessfulResponse()", "class_method_signature": "ServerSearchManagerTest.shouldNotFindServerGivenAnUnsuccessfulResponse()", "testcase": true, "constructor": false, "invocations": ["getMockServerProtocol", "getMockServerEntity", "mock", "thenReturn", "when", "composeGetServerInfoCommand", "thenReturn", "when", "transformMessage", "mock", "thenReturn", "when", "isSuccess", "thenReturn", "when", "isServer", "thenReturn", "when", "getServer", "thenReturn", "when", "transformMessage", "anyString", "thenReturn", "when", "isValid", "thenReturn", "when", "cast", "thenReturn", "when", "transform", "searchServer", "blockingFirst"]}, "focal_class": {"identifier": "ServerSearchManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ServerSearchSettings serverSearchSettings;", "modifier": "private final", "type": "ServerSearchSettings", "declarator": "serverSearchSettings", "var_name": "serverSearchSettings"}, {"original_string": "private final NetworkConnectionlessTransmitter networkConnectionlessTransmitter;", "modifier": "private final", "type": "NetworkConnectionlessTransmitter", "declarator": "networkConnectionlessTransmitter", "var_name": "networkConnectionlessTransmitter"}, {"original_string": "private final BroadcastAddressProvider broadcastAddressProvider;", "modifier": "private final", "type": "BroadcastAddressProvider", "declarator": "broadcastAddressProvider", "var_name": "broadcastAddressProvider"}, {"original_string": "private final ProtocolMessageComposer protocolMessageComposer;", "modifier": "private final", "type": "ProtocolMessageComposer", "declarator": "protocolMessageComposer", "var_name": "protocolMessageComposer"}, {"original_string": "private final MessageJsonMapper messageJsonMapper;", "modifier": "private final", "type": "MessageJsonMapper", "declarator": "messageJsonMapper", "var_name": "messageJsonMapper"}, {"original_string": "private final ServerProtocolMapper serverProtocolMapper;", "modifier": "private final", "type": "ServerProtocolMapper", "declarator": "serverProtocolMapper", "var_name": "serverProtocolMapper"}, {"original_string": "private final ServerMessageValidator serverValidator;", "modifier": "private final", "type": "ServerMessageValidator", "declarator": "serverValidator", "var_name": "serverValidator"}, {"original_string": "private NetworkAddressEntity networkAddressEntity;", "modifier": "private", "type": "NetworkAddressEntity", "declarator": "networkAddressEntity", "var_name": "networkAddressEntity"}, {"original_string": "private int subscribers = -1;", "modifier": "private", "type": "int", "declarator": "subscribers = -1", "var_name": "subscribers"}], "methods": [{"identifier": "ServerSearchManager", "parameters": "(ServerSearchSettings serverSearchSettings,\n      NetworkConnectionlessTransmitter networkConnectionlessTransmitter,\n      BroadcastAddressProvider broadcastAddressProvider,\n      ProtocolMessageComposer protocolMessageComposer, MessageJsonMapper messageJsonMapper,\n      ServerProtocolMapper serverProtocolMapper, ServerMessageValidator serverValidator)", "modifiers": "public", "return": "", "signature": " ServerSearchManager(ServerSearchSettings serverSearchSettings,\n      NetworkConnectionlessTransmitter networkConnectionlessTransmitter,\n      BroadcastAddressProvider broadcastAddressProvider,\n      ProtocolMessageComposer protocolMessageComposer, MessageJsonMapper messageJsonMapper,\n      ServerProtocolMapper serverProtocolMapper, ServerMessageValidator serverValidator)", "full_signature": "public  ServerSearchManager(ServerSearchSettings serverSearchSettings,\n      NetworkConnectionlessTransmitter networkConnectionlessTransmitter,\n      BroadcastAddressProvider broadcastAddressProvider,\n      ProtocolMessageComposer protocolMessageComposer, MessageJsonMapper messageJsonMapper,\n      ServerProtocolMapper serverProtocolMapper, ServerMessageValidator serverValidator)", "class_method_signature": "ServerSearchManager.ServerSearchManager(ServerSearchSettings serverSearchSettings,\n      NetworkConnectionlessTransmitter networkConnectionlessTransmitter,\n      BroadcastAddressProvider broadcastAddressProvider,\n      ProtocolMessageComposer protocolMessageComposer, MessageJsonMapper messageJsonMapper,\n      ServerProtocolMapper serverProtocolMapper, ServerMessageValidator serverValidator)", "testcase": false, "constructor": true}, {"identifier": "setSubscribers", "parameters": "(int subscribers)", "modifiers": "public", "return": "void", "signature": "void setSubscribers(int subscribers)", "full_signature": "public void setSubscribers(int subscribers)", "class_method_signature": "ServerSearchManager.setSubscribers(int subscribers)", "testcase": false, "constructor": false}, {"identifier": "searchServer", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "public", "return": "Observable<ServerEntity>", "signature": "Observable<ServerEntity> searchServer(NetworkAddressEntity networkAddressEntity)", "full_signature": "public Observable<ServerEntity> searchServer(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "ServerSearchManager.searchServer(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false}, {"identifier": "searchServer", "parameters": "()", "modifiers": "public", "return": "Observable<ServerEntity>", "signature": "Observable<ServerEntity> searchServer()", "full_signature": "public Observable<ServerEntity> searchServer()", "class_method_signature": "ServerSearchManager.searchServer()", "testcase": false, "constructor": false}, {"identifier": "performSearch", "parameters": "()", "modifiers": "private", "return": "ConnectableObservable<ServerProtocol>", "signature": "ConnectableObservable<ServerProtocol> performSearch()", "full_signature": "private ConnectableObservable<ServerProtocol> performSearch()", "class_method_signature": "ServerSearchManager.performSearch()", "testcase": false, "constructor": false}, {"identifier": "sendDiscoveryRequest", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendDiscoveryRequest()", "full_signature": "private void sendDiscoveryRequest()", "class_method_signature": "ServerSearchManager.sendDiscoveryRequest()", "testcase": false, "constructor": false}, {"identifier": "sendRequestTo", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "private", "return": "void", "signature": "void sendRequestTo(NetworkAddressEntity networkAddressEntity)", "full_signature": "private void sendRequestTo(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "ServerSearchManager.sendRequestTo(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false}, {"identifier": "enableBroadcastTransmission", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void enableBroadcastTransmission()", "full_signature": "private void enableBroadcastTransmission()", "class_method_signature": "ServerSearchManager.enableBroadcastTransmission()", "testcase": false, "constructor": false}, {"identifier": "sendRequestToEveryInterfaceBroadcastAddress", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendRequestToEveryInterfaceBroadcastAddress()", "full_signature": "private void sendRequestToEveryInterfaceBroadcastAddress()", "class_method_signature": "ServerSearchManager.sendRequestToEveryInterfaceBroadcastAddress()", "testcase": false, "constructor": false}, {"identifier": "getTransmissionPacket", "parameters": "(InetAddress inetAddress)", "modifiers": "private", "return": "NetworkPacket", "signature": "NetworkPacket getTransmissionPacket(InetAddress inetAddress)", "full_signature": "private NetworkPacket getTransmissionPacket(InetAddress inetAddress)", "class_method_signature": "ServerSearchManager.getTransmissionPacket(InetAddress inetAddress)", "testcase": false, "constructor": false}, {"identifier": "waitForServerResponse", "parameters": "()", "modifiers": "private", "return": "NetworkPacket", "signature": "NetworkPacket waitForServerResponse()", "full_signature": "private NetworkPacket waitForServerResponse()", "class_method_signature": "ServerSearchManager.waitForServerResponse()", "testcase": false, "constructor": false}, {"identifier": "parseResponse", "parameters": "(NetworkPacket incomingPacket)", "modifiers": "private", "return": "Message", "signature": "Message parseResponse(NetworkPacket incomingPacket)", "full_signature": "private Message parseResponse(NetworkPacket incomingPacket)", "class_method_signature": "ServerSearchManager.parseResponse(NetworkPacket incomingPacket)", "testcase": false, "constructor": false}], "file": "infrastructure/src/main/java/com/remotecraft/app/infrastructure/manager/ServerSearchManager.java"}, "focal_method": {"identifier": "searchServer", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "public", "return": "Observable<ServerEntity>", "body": "public Observable<ServerEntity> searchServer(NetworkAddressEntity networkAddressEntity) {\n    this.networkAddressEntity = networkAddressEntity;\n    return searchServer();\n  }", "signature": "Observable<ServerEntity> searchServer(NetworkAddressEntity networkAddressEntity)", "full_signature": "public Observable<ServerEntity> searchServer(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "ServerSearchManager.searchServer(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false, "invocations": ["searchServer"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}