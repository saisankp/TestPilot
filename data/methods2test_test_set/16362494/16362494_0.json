{"test_class": {"identifier": "FlowEntryMgrTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FlowEntryMgr flowEntryMgr = new FlowEntryMgr();", "modifier": "private", "type": "FlowEntryMgr", "declarator": "flowEntryMgr = new FlowEntryMgr()", "var_name": "flowEntryMgr"}, {"original_string": "private Connector connector;", "modifier": "private", "type": "Connector", "declarator": "connector", "var_name": "connector"}, {"original_string": "private String testNodeId;", "modifier": "private", "type": "String", "declarator": "testNodeId", "var_name": "testNodeId"}], "file": "defense4all.odl/src/test/java/org/opendaylight/defense4all/odl/controller/FlowEntryMgrTest.java"}, "test_case": {"identifier": "testAddOpenFlowEntry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddOpenFlowEntry() throws Exception {\n//        flowEntryMgr.addOpenFlowEntry(testNodeId, getFlow2());\n    }", "signature": "void testAddOpenFlowEntry()", "full_signature": "@Test public void testAddOpenFlowEntry()", "class_method_signature": "FlowEntryMgrTest.testAddOpenFlowEntry()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "FlowEntryMgr", "superclass": "", "interfaces": "", "fields": [{"original_string": "Logger log = LoggerFactory.getLogger(this.getClass());", "modifier": "", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(this.getClass())", "var_name": "log"}, {"original_string": "static protected String openFlowEntryType = NodeIDType.OPENFLOW;", "modifier": "static protected", "type": "String", "declarator": "openFlowEntryType = NodeIDType.OPENFLOW", "var_name": "openFlowEntryType"}, {"original_string": "public Connector connector = null;", "modifier": "public", "type": "Connector", "declarator": "connector = null", "var_name": "connector"}, {"original_string": "public Odl odl;", "modifier": "public", "type": "Odl", "declarator": "odl", "var_name": "odl"}], "methods": [{"identifier": "FlowEntryMgr", "parameters": "()", "modifiers": "public", "return": "", "signature": " FlowEntryMgr()", "full_signature": "public  FlowEntryMgr()", "class_method_signature": "FlowEntryMgr.FlowEntryMgr()", "testcase": false, "constructor": true}, {"identifier": "setOdl", "parameters": "(Odl odl)", "modifiers": "public", "return": "void", "signature": "void setOdl(Odl odl)", "full_signature": "public void setOdl(Odl odl)", "class_method_signature": "FlowEntryMgr.setOdl(Odl odl)", "testcase": false, "constructor": false}, {"identifier": "assertConnectorNotNull", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void assertConnectorNotNull()", "full_signature": "protected void assertConnectorNotNull()", "class_method_signature": "FlowEntryMgr.assertConnectorNotNull()", "testcase": false, "constructor": false}, {"identifier": "getOpenFlowEntry", "parameters": "(String nodeId, String flowEntryLabel)", "modifiers": "public", "return": "ReceivedFlowConfig", "signature": "ReceivedFlowConfig getOpenFlowEntry(String nodeId, String flowEntryLabel)", "full_signature": "public ReceivedFlowConfig getOpenFlowEntry(String nodeId, String flowEntryLabel)", "class_method_signature": "FlowEntryMgr.getOpenFlowEntry(String nodeId, String flowEntryLabel)", "testcase": false, "constructor": false}, {"identifier": "addOpenFlowEntry", "parameters": "(String nodeId, String flowEntryLabel, Object flowEntry)", "modifiers": "public", "return": "void", "signature": "void addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "full_signature": "public void addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "class_method_signature": "FlowEntryMgr.addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "testcase": false, "constructor": false}, {"identifier": "toggleOpenFlowEntry", "parameters": "(String nodeId, String flowEntryLabel)", "modifiers": "public", "return": "void", "signature": "void toggleOpenFlowEntry(String nodeId, String flowEntryLabel)", "full_signature": "public void toggleOpenFlowEntry(String nodeId, String flowEntryLabel)", "class_method_signature": "FlowEntryMgr.toggleOpenFlowEntry(String nodeId, String flowEntryLabel)", "testcase": false, "constructor": false}, {"identifier": "deleteOpenFlowEntry", "parameters": "(String nodeId, String flowEntryLabel)", "modifiers": "public", "return": "void", "signature": "void deleteOpenFlowEntry(String nodeId, String flowEntryLabel)", "full_signature": "public void deleteOpenFlowEntry(String nodeId, String flowEntryLabel)", "class_method_signature": "FlowEntryMgr.deleteOpenFlowEntry(String nodeId, String flowEntryLabel)", "testcase": false, "constructor": false}, {"identifier": "getOpenFlowStats", "parameters": "(String nodeId)", "modifiers": "public", "return": "FlowStatistics", "signature": "FlowStatistics getOpenFlowStats(String nodeId)", "full_signature": "public FlowStatistics getOpenFlowStats(String nodeId)", "class_method_signature": "FlowEntryMgr.getOpenFlowStats(String nodeId)", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "()", "modifiers": "public", "return": "Nodes", "signature": "Nodes getNodes()", "full_signature": "public Nodes getNodes()", "class_method_signature": "FlowEntryMgr.getNodes()", "testcase": false, "constructor": false}, {"identifier": "constructFlowUrlPrefix", "parameters": "(String nodeId, String flowEntryLabel)", "modifiers": "protected", "return": "StringBuilder", "signature": "StringBuilder constructFlowUrlPrefix(String nodeId, String flowEntryLabel)", "full_signature": "protected StringBuilder constructFlowUrlPrefix(String nodeId, String flowEntryLabel)", "class_method_signature": "FlowEntryMgr.constructFlowUrlPrefix(String nodeId, String flowEntryLabel)", "testcase": false, "constructor": false}, {"identifier": "constructAllFlowsUrlPrefix", "parameters": "()", "modifiers": "protected", "return": "StringBuilder", "signature": "StringBuilder constructAllFlowsUrlPrefix()", "full_signature": "protected StringBuilder constructAllFlowsUrlPrefix()", "class_method_signature": "FlowEntryMgr.constructAllFlowsUrlPrefix()", "testcase": false, "constructor": false}, {"identifier": "constructFlowStatsUrlPrefix", "parameters": "(String nodeId)", "modifiers": "protected", "return": "StringBuilder", "signature": "StringBuilder constructFlowStatsUrlPrefix(String nodeId)", "full_signature": "protected StringBuilder constructFlowStatsUrlPrefix(String nodeId)", "class_method_signature": "FlowEntryMgr.constructFlowStatsUrlPrefix(String nodeId)", "testcase": false, "constructor": false}, {"identifier": "constructFlowSwitchUrlPrefix", "parameters": "()", "modifiers": "protected", "return": "StringBuilder", "signature": "StringBuilder constructFlowSwitchUrlPrefix()", "full_signature": "protected StringBuilder constructFlowSwitchUrlPrefix()", "class_method_signature": "FlowEntryMgr.constructFlowSwitchUrlPrefix()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "FlowEntryMgr.reset()", "testcase": false, "constructor": false}], "file": "defense4all.odl/src/main/java/org/opendaylight/defense4all/odl/controller/FlowEntryMgr.java"}, "focal_method": {"identifier": "addOpenFlowEntry", "parameters": "(String nodeId, String flowEntryLabel, Object flowEntry)", "modifiers": "public", "return": "void", "body": "public void addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry) throws Exception {\n\n\t\ttry {\n\t\t\tassertConnectorNotNull();\n\t\t\tStringBuilder urlPrefix = constructFlowUrlPrefix(nodeId, flowEntryLabel);\n\t\t\tconnector.putToController(urlPrefix.toString(), flowEntry);\n\t\t} catch (Throwable e) {\n\t\t\tString msg = \"Excepted trying to addOpenFlowEntry for \" + nodeId + \" \" + flowEntryLabel + \" \" + flowEntry;\n\t\t\tlog.error(msg, e);\n\t\t\tthrow new Exception(msg, e);\n\t\t}\n\t}", "signature": "void addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "full_signature": "public void addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "class_method_signature": "FlowEntryMgr.addOpenFlowEntry(String nodeId, String flowEntryLabel, Object flowEntry)", "testcase": false, "constructor": false, "invocations": ["assertConnectorNotNull", "constructFlowUrlPrefix", "putToController", "toString", "error"]}, "repository": {"repo_id": 16362494, "url": "https://github.com/opendaylight/archived-defense4all", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 2189, "license": "licensed"}}