{"test_class": {"identifier": "TimeLimitMaintainerTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private TimeLimitMaintainerTask underTest;", "modifier": "@InjectMocks\n    private", "type": "TimeLimitMaintainerTask", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private FileFilter fileFilter;", "modifier": "@Mock\n    private", "type": "FileFilter", "declarator": "fileFilter", "var_name": "fileFilter"}, {"original_string": "@Mock\n    private LogFilePathProvider logFilePath;", "modifier": "@Mock\n    private", "type": "LogFilePathProvider", "declarator": "logFilePath", "var_name": "logFilePath"}, {"original_string": "@Mock\n    private Path path;", "modifier": "@Mock\n    private", "type": "Path", "declarator": "path", "var_name": "path"}, {"original_string": "@Mock\n    private File logFolder;", "modifier": "@Mock\n    private", "type": "File", "declarator": "logFolder", "var_name": "logFolder"}, {"original_string": "@Mock\n    private CurrentDateProvider currentDateProvider;", "modifier": "@Mock\n    private", "type": "CurrentDateProvider", "declarator": "currentDateProvider", "var_name": "currentDateProvider"}, {"original_string": "@Mock\n    private MaintainerConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "MaintainerConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private MaintainerProperties properties;", "modifier": "@Mock\n    private", "type": "MaintainerProperties", "declarator": "properties", "var_name": "properties"}, {"original_string": "@Mock\n    private JmsIndexDeletionProcessor indexDeletionProcessor;", "modifier": "@Mock\n    private", "type": "JmsIndexDeletionProcessor", "declarator": "indexDeletionProcessor", "var_name": "indexDeletionProcessor"}], "file": "wilma-application/modules/wilma-message-maintainer/src/test/java/com/epam/wilma/maintainer/task/timelimit/TimeLimitMaintainerTaskTest.java"}, "test_case": {"identifier": "testRunShouldSaveDeleteFilesCountWhenItDeleteFiles", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testRunShouldSaveDeleteFilesCountWhenItDeleteFiles() {\n        // GIVEN\n        Whitebox.setInternalState(underTest, \"timeLimitInSeconds\", 10);\n        Whitebox.setInternalState(underTest, \"simpleDateFormat\", new SimpleDateFormat(\"yyyyMMddHHmmss\"));\n        DeletedFileProvider deletedFileProvider = new DeletedFileProvider();\n        Whitebox.setInternalState(underTest, \"deletedFileProvider\", deletedFileProvider);\n        File file1 = Mockito.mock(File.class);\n        given(file1.getName()).willReturn(\"20130701151510.0000resp.txt\");\n        File file2 = Mockito.mock(File.class);\n        given(file2.getName()).willReturn(\"20130701151510.0000req.txt\");\n        File file3 = Mockito.mock(File.class);\n        given(file3.getName()).willReturn(\"20130701151513.0000req.txt\");\n        File file4 = Mockito.mock(File.class);\n        given(file4.getName()).willReturn(\"20130701151513.0000resp.txt\");\n        File[] messageFiles = new File[4];\n        messageFiles[0] = file1;\n        messageFiles[1] = file2;\n        messageFiles[2] = file3;\n        messageFiles[3] = file4;\n\n        given(logFilePath.getLogFilePath()).willReturn(path);\n        given(path.toFile()).willReturn(logFolder);\n        given(logFolder.listFiles(fileFilter)).willReturn(messageFiles);\n\n        Calendar cal = Calendar.getInstance();\n        cal.set(2013, 6, 1, 15, 15, 21);\n        Date date = cal.getTime();\n        given(currentDateProvider.getCurrentDate()).willReturn(date);\n        // WHEN\n        underTest.run();\n        // THEN\n        int actual = ((DeletedFileProvider) Whitebox.getInternalState(underTest, \"deletedFileProvider\")).getDeletedFilesCount();\n        Assert.assertEquals(actual, 2);\n    }", "signature": "void testRunShouldSaveDeleteFilesCountWhenItDeleteFiles()", "full_signature": "@Test public final void testRunShouldSaveDeleteFilesCountWhenItDeleteFiles()", "class_method_signature": "TimeLimitMaintainerTaskTest.testRunShouldSaveDeleteFilesCountWhenItDeleteFiles()", "testcase": true, "constructor": false, "invocations": ["setInternalState", "setInternalState", "setInternalState", "mock", "willReturn", "given", "getName", "mock", "willReturn", "given", "getName", "mock", "willReturn", "given", "getName", "mock", "willReturn", "given", "getName", "willReturn", "given", "getLogFilePath", "willReturn", "given", "toFile", "willReturn", "given", "listFiles", "getInstance", "set", "getTime", "willReturn", "given", "getCurrentDate", "run", "getDeletedFilesCount", "getInternalState", "assertEquals"]}, "focal_class": {"identifier": "TimeLimitMaintainerTask", "superclass": "", "interfaces": "implements MaintainerTask", "fields": [{"original_string": "private static final int SECONDS_IN_HOUR = 3600;", "modifier": "private static final", "type": "int", "declarator": "SECONDS_IN_HOUR = 3600", "var_name": "SECONDS_IN_HOUR"}, {"original_string": "private static final int SECONDS_IN_DAY = 86400;", "modifier": "private static final", "type": "int", "declarator": "SECONDS_IN_DAY = 86400", "var_name": "SECONDS_IN_DAY"}, {"original_string": "private static final int TIMESTAMP_SUBSTRING = 14;", "modifier": "private static final", "type": "int", "declarator": "TIMESTAMP_SUBSTRING = 14", "var_name": "TIMESTAMP_SUBSTRING"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(TimeLimitMaintainerTask.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TimeLimitMaintainerTask.class)", "var_name": "logger"}, {"original_string": "private final Map<Character, Integer> multipliers;", "modifier": "private final", "type": "Map<Character, Integer>", "declarator": "multipliers", "var_name": "multipliers"}, {"original_string": "private String timeLimit;", "modifier": "private", "type": "String", "declarator": "timeLimit", "var_name": "timeLimit"}, {"original_string": "private Integer timeLimitInSeconds;", "modifier": "private", "type": "Integer", "declarator": "timeLimitInSeconds", "var_name": "timeLimitInSeconds"}, {"original_string": "@Autowired\n    private LogFilePathProvider logFilePath;", "modifier": "@Autowired\n    private", "type": "LogFilePathProvider", "declarator": "logFilePath", "var_name": "logFilePath"}, {"original_string": "@Autowired\n    @Qualifier(\"message\")\n    private FileFilter messageFileFilter;", "modifier": "@Autowired\n    @Qualifier(\"message\")\n    private", "type": "FileFilter", "declarator": "messageFileFilter", "var_name": "messageFileFilter"}, {"original_string": "@Autowired\n    @Qualifier(\"simpleDateFormatterForFiles\")\n    private SimpleDateFormat simpleDateFormat;", "modifier": "@Autowired\n    @Qualifier(\"simpleDateFormatterForFiles\")\n    private", "type": "SimpleDateFormat", "declarator": "simpleDateFormat", "var_name": "simpleDateFormat"}, {"original_string": "@Autowired\n    private CurrentDateProvider currentDateProvider;", "modifier": "@Autowired\n    private", "type": "CurrentDateProvider", "declarator": "currentDateProvider", "var_name": "currentDateProvider"}, {"original_string": "@Autowired\n    private MaintainerConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "MaintainerConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Autowired\n    private JmsIndexDeletionProcessor indexDeletionProcessor;", "modifier": "@Autowired\n    private", "type": "JmsIndexDeletionProcessor", "declarator": "indexDeletionProcessor", "var_name": "indexDeletionProcessor"}, {"original_string": "@Autowired\n    private DeletedFileProvider deletedFileProvider;", "modifier": "@Autowired\n    private", "type": "DeletedFileProvider", "declarator": "deletedFileProvider", "var_name": "deletedFileProvider"}], "methods": [{"identifier": "TimeLimitMaintainerTask", "parameters": "()", "modifiers": "public", "return": "", "signature": " TimeLimitMaintainerTask()", "full_signature": "public  TimeLimitMaintainerTask()", "class_method_signature": "TimeLimitMaintainerTask.TimeLimitMaintainerTask()", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "TimeLimitMaintainerTask.run()", "testcase": false, "constructor": false}, {"identifier": "logParameters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void logParameters()", "full_signature": "@Override public void logParameters()", "class_method_signature": "TimeLimitMaintainerTask.logParameters()", "testcase": false, "constructor": false}, {"identifier": "deleteFilesAboveFileLimit", "parameters": "(final File messagesFolder)", "modifiers": "private", "return": "int", "signature": "int deleteFilesAboveFileLimit(final File messagesFolder)", "full_signature": "private int deleteFilesAboveFileLimit(final File messagesFolder)", "class_method_signature": "TimeLimitMaintainerTask.deleteFilesAboveFileLimit(final File messagesFolder)", "testcase": false, "constructor": false}, {"identifier": "deleteOldFiles", "parameters": "(final File[] messageFiles)", "modifiers": "private", "return": "int", "signature": "int deleteOldFiles(final File[] messageFiles)", "full_signature": "private int deleteOldFiles(final File[] messageFiles)", "class_method_signature": "TimeLimitMaintainerTask.deleteOldFiles(final File[] messageFiles)", "testcase": false, "constructor": false}, {"identifier": "deleteFileIfTooOld", "parameters": "(final File file)", "modifiers": "private", "return": "int", "signature": "int deleteFileIfTooOld(final File file)", "full_signature": "private int deleteFileIfTooOld(final File file)", "class_method_signature": "TimeLimitMaintainerTask.deleteFileIfTooOld(final File file)", "testcase": false, "constructor": false}, {"identifier": "deleteAndSendToIndex", "parameters": "(final File file)", "modifiers": "private", "return": "void", "signature": "void deleteAndSendToIndex(final File file)", "full_signature": "private void deleteAndSendToIndex(final File file)", "class_method_signature": "TimeLimitMaintainerTask.deleteAndSendToIndex(final File file)", "testcase": false, "constructor": false}, {"identifier": "readTimestampFromFilename", "parameters": "(final File file)", "modifiers": "private", "return": "String", "signature": "String readTimestampFromFilename(final File file)", "full_signature": "private String readTimestampFromFilename(final File file)", "class_method_signature": "TimeLimitMaintainerTask.readTimestampFromFilename(final File file)", "testcase": false, "constructor": false}, {"identifier": "retrieveLimitDate", "parameters": "()", "modifiers": "private", "return": "Date", "signature": "Date retrieveLimitDate()", "full_signature": "private Date retrieveLimitDate()", "class_method_signature": "TimeLimitMaintainerTask.retrieveLimitDate()", "testcase": false, "constructor": false}, {"identifier": "getTimeLimit", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getTimeLimit()", "full_signature": "private void getTimeLimit()", "class_method_signature": "TimeLimitMaintainerTask.getTimeLimit()", "testcase": false, "constructor": false}, {"identifier": "valueOfProperty", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int valueOfProperty()", "full_signature": "private int valueOfProperty()", "class_method_signature": "TimeLimitMaintainerTask.valueOfProperty()", "testcase": false, "constructor": false}, {"identifier": "typeOfProperty", "parameters": "()", "modifiers": "private", "return": "Character", "signature": "Character typeOfProperty()", "full_signature": "private Character typeOfProperty()", "class_method_signature": "TimeLimitMaintainerTask.typeOfProperty()", "testcase": false, "constructor": false}, {"identifier": "logMaintenanceResult", "parameters": "(final int noDeletedFiles)", "modifiers": "private", "return": "void", "signature": "void logMaintenanceResult(final int noDeletedFiles)", "full_signature": "private void logMaintenanceResult(final int noDeletedFiles)", "class_method_signature": "TimeLimitMaintainerTask.logMaintenanceResult(final int noDeletedFiles)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-maintainer/src/main/java/com/epam/wilma/maintainer/task/timelimit/TimeLimitMaintainerTask.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n        File messagesFolder = logFilePath.getLogFilePath().toFile();\n        int noDeletedFiles = deleteFilesAboveFileLimit(messagesFolder);\n        deletedFileProvider.setDeletedFilesCount(noDeletedFiles);\n        logMaintenanceResult(noDeletedFiles);\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "TimeLimitMaintainerTask.run()", "testcase": false, "constructor": false, "invocations": ["toFile", "getLogFilePath", "deleteFilesAboveFileLimit", "setDeletedFilesCount", "logMaintenanceResult"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}