{"test_class": {"identifier": "CpuTimeClockTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-jvm/src/test/java/com/codahale/metrics/jvm/CpuTimeClockTest.java"}, "test_case": {"identifier": "cpuTimeClock", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cpuTimeClock() {\n        final CpuTimeClock clock = new CpuTimeClock();\n\n        assertThat((double) clock.getTime())\n                .isEqualTo(System.currentTimeMillis(),\n                        offset(200.0));\n\n        assertThat((double) clock.getTick())\n                .isEqualTo(ManagementFactory.getThreadMXBean().getCurrentThreadCpuTime(),\n                        offset(1000000.0));\n    }", "signature": "void cpuTimeClock()", "full_signature": "@Test public void cpuTimeClock()", "class_method_signature": "CpuTimeClockTest.cpuTimeClock()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getTime", "currentTimeMillis", "offset", "isEqualTo", "assertThat", "getTick", "getCurrentThreadCpuTime", "getThreadMXBean", "offset"]}, "focal_class": {"identifier": "CpuTimeClock", "superclass": "extends Clock", "interfaces": "", "fields": [{"original_string": "private static final ThreadMXBean THREAD_MX_BEAN = ManagementFactory.getThreadMXBean();", "modifier": "private static final", "type": "ThreadMXBean", "declarator": "THREAD_MX_BEAN = ManagementFactory.getThreadMXBean()", "var_name": "THREAD_MX_BEAN"}], "methods": [{"identifier": "getTick", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getTick()", "full_signature": "@Override public long getTick()", "class_method_signature": "CpuTimeClock.getTick()", "testcase": false, "constructor": false}], "file": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/CpuTimeClock.java"}, "focal_method": {"identifier": "getTick", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getTick() {\n        return THREAD_MX_BEAN.getCurrentThreadCpuTime();\n    }", "signature": "long getTick()", "full_signature": "@Override public long getTick()", "class_method_signature": "CpuTimeClock.getTick()", "testcase": false, "constructor": false, "invocations": ["getCurrentThreadCpuTime"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}