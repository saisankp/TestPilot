{"test_class": {"identifier": "SpreadsheetMetadataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static UserGroupInformation ugi;", "modifier": "private static", "type": "UserGroupInformation", "declarator": "ugi", "var_name": "ugi"}, {"original_string": "private static final String SCHEMA_NAME = \"presto_example_xlsx\";", "modifier": "private static final", "type": "String", "declarator": "SCHEMA_NAME = \"presto_example_xlsx\"", "var_name": "SCHEMA_NAME"}, {"original_string": "public static final ConnectorSession SESSION = new TestingConnectorSession(ImmutableList.of());", "modifier": "public static final", "type": "ConnectorSession", "declarator": "SESSION = new TestingConnectorSession(ImmutableList.of())", "var_name": "SESSION"}, {"original_string": "private boolean useFileCache = true;", "modifier": "private", "type": "boolean", "declarator": "useFileCache = true", "var_name": "useFileCache"}, {"original_string": "private Configuration conf = new Configuration();", "modifier": "private", "type": "Configuration", "declarator": "conf = new Configuration()", "var_name": "conf"}], "file": "spreadsheet-storage-handler/src/test/java/com/fortitudetec/presto/spreadsheets/SpreadsheetMetadataTest.java"}, "test_case": {"identifier": "testListTables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testListTables() throws IOException {\n    Path basePath = setupTest(conf, SESSION.getUser(), SpreadsheetMetadataTest.class);\n    SpreadsheetMetadata spreadsheetMetadata = new SpreadsheetMetadata(ugi, conf, basePath, SPREADSHEETS, useFileCache,\n        true);\n    List<SchemaTableName> listTables = spreadsheetMetadata.listTables(SESSION, SCHEMA_NAME);\n    assertEquals(2, listTables.size());\n    List<String> tables = new ArrayList<String>();\n    for (SchemaTableName schemaTableName : listTables) {\n      assertEquals(SCHEMA_NAME, schemaTableName.getSchemaName());\n      tables.add(schemaTableName.getTableName());\n    }\n    Collections.sort(tables);\n    assertEquals(\"multiple_types_per_column\", tables.get(0));\n    assertEquals(\"simple_sheet\", tables.get(1));\n  }", "signature": "void testListTables()", "full_signature": "@Test public void testListTables()", "class_method_signature": "SpreadsheetMetadataTest.testListTables()", "testcase": true, "constructor": false, "invocations": ["setupTest", "getUser", "listTables", "assertEquals", "size", "assertEquals", "getSchemaName", "add", "getTableName", "sort", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "SpreadsheetMetadata", "superclass": "", "interfaces": "implements ConnectorMetadata", "fields": [{"original_string": "private final Path _basePath;", "modifier": "private final", "type": "Path", "declarator": "_basePath", "var_name": "_basePath"}, {"original_string": "private final Configuration _configuration;", "modifier": "private final", "type": "Configuration", "declarator": "_configuration", "var_name": "_configuration"}, {"original_string": "private final String _spreadsheetSubDir;", "modifier": "private final", "type": "String", "declarator": "_spreadsheetSubDir", "var_name": "_spreadsheetSubDir"}, {"original_string": "private final boolean _useFileCache;", "modifier": "private final", "type": "boolean", "declarator": "_useFileCache", "var_name": "_useFileCache"}, {"original_string": "private final UserGroupInformation _ugi;", "modifier": "private final", "type": "UserGroupInformation", "declarator": "_ugi", "var_name": "_ugi"}, {"original_string": "private final boolean _proxyUser;", "modifier": "private final", "type": "boolean", "declarator": "_proxyUser", "var_name": "_proxyUser"}, {"original_string": "private static final String DEFAULT_COMMENT = \"\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_COMMENT = \"\"", "var_name": "DEFAULT_COMMENT"}], "methods": [{"identifier": "SpreadsheetMetadata", "parameters": "(UserGroupInformation ugi, Configuration configuration, Path basePath,\n      String spreadsheetSubDir, boolean useFileCache, boolean proxyUser)", "modifiers": "public", "return": "", "signature": " SpreadsheetMetadata(UserGroupInformation ugi, Configuration configuration, Path basePath,\n      String spreadsheetSubDir, boolean useFileCache, boolean proxyUser)", "full_signature": "public  SpreadsheetMetadata(UserGroupInformation ugi, Configuration configuration, Path basePath,\n      String spreadsheetSubDir, boolean useFileCache, boolean proxyUser)", "class_method_signature": "SpreadsheetMetadata.SpreadsheetMetadata(UserGroupInformation ugi, Configuration configuration, Path basePath,\n      String spreadsheetSubDir, boolean useFileCache, boolean proxyUser)", "testcase": false, "constructor": true}, {"identifier": "getTableLayouts", "parameters": "(ConnectorSession session, ConnectorTableHandle table,\n      Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)", "modifiers": "@Override public", "return": "List<ConnectorTableLayoutResult>", "signature": "List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle table,\n      Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)", "full_signature": "@Override public List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle table,\n      Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)", "class_method_signature": "SpreadsheetMetadata.getTableLayouts(ConnectorSession session, ConnectorTableHandle table,\n      Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)", "testcase": false, "constructor": false}, {"identifier": "getTableLayout", "parameters": "(ConnectorSession session, ConnectorTableLayoutHandle handle)", "modifiers": "@Override public", "return": "ConnectorTableLayout", "signature": "ConnectorTableLayout getTableLayout(ConnectorSession session, ConnectorTableLayoutHandle handle)", "full_signature": "@Override public ConnectorTableLayout getTableLayout(ConnectorSession session, ConnectorTableLayoutHandle handle)", "class_method_signature": "SpreadsheetMetadata.getTableLayout(ConnectorSession session, ConnectorTableLayoutHandle handle)", "testcase": false, "constructor": false}, {"identifier": "getColumnMetadata", "parameters": "(ConnectorSession session, ConnectorTableHandle tableHandle,\n      ColumnHandle columnHandle)", "modifiers": "@Override public", "return": "ColumnMetadata", "signature": "ColumnMetadata getColumnMetadata(ConnectorSession session, ConnectorTableHandle tableHandle,\n      ColumnHandle columnHandle)", "full_signature": "@Override public ColumnMetadata getColumnMetadata(ConnectorSession session, ConnectorTableHandle tableHandle,\n      ColumnHandle columnHandle)", "class_method_signature": "SpreadsheetMetadata.getColumnMetadata(ConnectorSession session, ConnectorTableHandle tableHandle,\n      ColumnHandle columnHandle)", "testcase": false, "constructor": false}, {"identifier": "getTableMetadata", "parameters": "(ConnectorSession session, ConnectorTableHandle table)", "modifiers": "@Override public", "return": "ConnectorTableMetadata", "signature": "ConnectorTableMetadata getTableMetadata(ConnectorSession session, ConnectorTableHandle table)", "full_signature": "@Override public ConnectorTableMetadata getTableMetadata(ConnectorSession session, ConnectorTableHandle table)", "class_method_signature": "SpreadsheetMetadata.getTableMetadata(ConnectorSession session, ConnectorTableHandle table)", "testcase": false, "constructor": false}, {"identifier": "listTableColumns", "parameters": "(ConnectorSession session,\n      SchemaTablePrefix prefix)", "modifiers": "@Override public", "return": "Map<SchemaTableName, List<ColumnMetadata>>", "signature": "Map<SchemaTableName, List<ColumnMetadata>> listTableColumns(ConnectorSession session,\n      SchemaTablePrefix prefix)", "full_signature": "@Override public Map<SchemaTableName, List<ColumnMetadata>> listTableColumns(ConnectorSession session,\n      SchemaTablePrefix prefix)", "class_method_signature": "SpreadsheetMetadata.listTableColumns(ConnectorSession session,\n      SchemaTablePrefix prefix)", "testcase": false, "constructor": false}, {"identifier": "createTableLayoutHandle", "parameters": "(SpreadsheetTableHandle tableHandle)", "modifiers": "private", "return": "SpreadsheetTableLayoutHandle", "signature": "SpreadsheetTableLayoutHandle createTableLayoutHandle(SpreadsheetTableHandle tableHandle)", "full_signature": "private SpreadsheetTableLayoutHandle createTableLayoutHandle(SpreadsheetTableHandle tableHandle)", "class_method_signature": "SpreadsheetMetadata.createTableLayoutHandle(SpreadsheetTableHandle tableHandle)", "testcase": false, "constructor": false}, {"identifier": "listSchemaNames", "parameters": "(ConnectorSession session)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listSchemaNames(ConnectorSession session)", "full_signature": "@Override public List<String> listSchemaNames(ConnectorSession session)", "class_method_signature": "SpreadsheetMetadata.listSchemaNames(ConnectorSession session)", "testcase": false, "constructor": false}, {"identifier": "getTableHandle", "parameters": "(ConnectorSession session, SchemaTableName tableName)", "modifiers": "@Override public", "return": "ConnectorTableHandle", "signature": "ConnectorTableHandle getTableHandle(ConnectorSession session, SchemaTableName tableName)", "full_signature": "@Override public ConnectorTableHandle getTableHandle(ConnectorSession session, SchemaTableName tableName)", "class_method_signature": "SpreadsheetMetadata.getTableHandle(ConnectorSession session, SchemaTableName tableName)", "testcase": false, "constructor": false}, {"identifier": "listTables", "parameters": "(ConnectorSession session, String schemaNameOrNull)", "modifiers": "@Override public", "return": "List<SchemaTableName>", "signature": "List<SchemaTableName> listTables(ConnectorSession session, String schemaNameOrNull)", "full_signature": "@Override public List<SchemaTableName> listTables(ConnectorSession session, String schemaNameOrNull)", "class_method_signature": "SpreadsheetMetadata.listTables(ConnectorSession session, String schemaNameOrNull)", "testcase": false, "constructor": false}, {"identifier": "getColumnHandles", "parameters": "(ConnectorSession session, ConnectorTableHandle tableHandle)", "modifiers": "@Override public", "return": "Map<String, ColumnHandle>", "signature": "Map<String, ColumnHandle> getColumnHandles(ConnectorSession session, ConnectorTableHandle tableHandle)", "full_signature": "@Override public Map<String, ColumnHandle> getColumnHandles(ConnectorSession session, ConnectorTableHandle tableHandle)", "class_method_signature": "SpreadsheetMetadata.getColumnHandles(ConnectorSession session, ConnectorTableHandle tableHandle)", "testcase": false, "constructor": false}, {"identifier": "getSpreadsheetFilePath", "parameters": "(ConnectorSession session, Path spreadsheetPath, String schema)", "modifiers": "private", "return": "Path", "signature": "Path getSpreadsheetFilePath(ConnectorSession session, Path spreadsheetPath, String schema)", "full_signature": "private Path getSpreadsheetFilePath(ConnectorSession session, Path spreadsheetPath, String schema)", "class_method_signature": "SpreadsheetMetadata.getSpreadsheetFilePath(ConnectorSession session, Path spreadsheetPath, String schema)", "testcase": false, "constructor": false}, {"identifier": "getSpreadsheetBasePath", "parameters": "(String user)", "modifiers": "private", "return": "Path", "signature": "Path getSpreadsheetBasePath(String user)", "full_signature": "private Path getSpreadsheetBasePath(String user)", "class_method_signature": "SpreadsheetMetadata.getSpreadsheetBasePath(String user)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(TableType columnType)", "modifiers": "private", "return": "Type", "signature": "Type getType(TableType columnType)", "full_signature": "private Type getType(TableType columnType)", "class_method_signature": "SpreadsheetMetadata.getType(TableType columnType)", "testcase": false, "constructor": false}, {"identifier": "getSpreadSheetHelper", "parameters": "(UserGroupInformation ugi, ConnectorSession session,\n      SpreadsheetTableHandle spreadsheetTableHandle, Configuration configuration, boolean useFileCache)", "modifiers": "public static", "return": "SpreadsheetReader", "signature": "SpreadsheetReader getSpreadSheetHelper(UserGroupInformation ugi, ConnectorSession session,\n      SpreadsheetTableHandle spreadsheetTableHandle, Configuration configuration, boolean useFileCache)", "full_signature": "public static SpreadsheetReader getSpreadSheetHelper(UserGroupInformation ugi, ConnectorSession session,\n      SpreadsheetTableHandle spreadsheetTableHandle, Configuration configuration, boolean useFileCache)", "class_method_signature": "SpreadsheetMetadata.getSpreadSheetHelper(UserGroupInformation ugi, ConnectorSession session,\n      SpreadsheetTableHandle spreadsheetTableHandle, Configuration configuration, boolean useFileCache)", "testcase": false, "constructor": false}, {"identifier": "getUgi", "parameters": "(ConnectorSession session)", "modifiers": "private", "return": "UserGroupInformation", "signature": "UserGroupInformation getUgi(ConnectorSession session)", "full_signature": "private UserGroupInformation getUgi(ConnectorSession session)", "class_method_signature": "SpreadsheetMetadata.getUgi(ConnectorSession session)", "testcase": false, "constructor": false}, {"identifier": "getUgi", "parameters": "(ConnectorSession session, boolean proxyUser, UserGroupInformation ugi)", "modifiers": "public static", "return": "UserGroupInformation", "signature": "UserGroupInformation getUgi(ConnectorSession session, boolean proxyUser, UserGroupInformation ugi)", "full_signature": "public static UserGroupInformation getUgi(ConnectorSession session, boolean proxyUser, UserGroupInformation ugi)", "class_method_signature": "SpreadsheetMetadata.getUgi(ConnectorSession session, boolean proxyUser, UserGroupInformation ugi)", "testcase": false, "constructor": false}, {"identifier": "getProxyUserGroupInformation", "parameters": "(ConnectorSession session, UserGroupInformation ugi)", "modifiers": "public static", "return": "UserGroupInformation", "signature": "UserGroupInformation getProxyUserGroupInformation(ConnectorSession session, UserGroupInformation ugi)", "full_signature": "public static UserGroupInformation getProxyUserGroupInformation(ConnectorSession session, UserGroupInformation ugi)", "class_method_signature": "SpreadsheetMetadata.getProxyUserGroupInformation(ConnectorSession session, UserGroupInformation ugi)", "testcase": false, "constructor": false}], "file": "spreadsheet-storage-handler/src/main/java/com/fortitudetec/presto/spreadsheets/SpreadsheetMetadata.java"}, "focal_method": {"identifier": "listTables", "parameters": "(ConnectorSession session, String schemaNameOrNull)", "modifiers": "@Override public", "return": "List<SchemaTableName>", "body": "@Override\n  public List<SchemaTableName> listTables(ConnectorSession session, String schemaNameOrNull) {\n    if (schemaNameOrNull == null) {\n      Map<String, Path> schemaMap = getUgi(session).doAs(new MapSchemaNames(session.getUser()));\n      Set<String> schemaSet = new TreeSet<>(schemaMap.keySet());\n      Builder<SchemaTableName> builder = ImmutableList.builder();\n      for (String schemaName : schemaSet) {\n        builder.addAll(listTables(session, schemaName));\n      }\n      return builder.build();\n    } else {\n      Path spreadsheetBasePath = getSpreadsheetBasePath(session.getUser());\n      Path filePath = getSpreadsheetFilePath(session, spreadsheetBasePath, schemaNameOrNull);\n      SpreadsheetReader spreadSheetHelper = getUgi(session).doAs(\n          new GetSpreadsheetHelper(_useFileCache, filePath, _configuration));\n      List<String> tableNames = spreadSheetHelper.getTableNames();\n      Builder<SchemaTableName> builder = ImmutableList.builder();\n      for (String table : tableNames) {\n        builder.add(new SchemaTableName(schemaNameOrNull, table));\n      }\n      return builder.build();\n    }\n  }", "signature": "List<SchemaTableName> listTables(ConnectorSession session, String schemaNameOrNull)", "full_signature": "@Override public List<SchemaTableName> listTables(ConnectorSession session, String schemaNameOrNull)", "class_method_signature": "SpreadsheetMetadata.listTables(ConnectorSession session, String schemaNameOrNull)", "testcase": false, "constructor": false, "invocations": ["doAs", "getUgi", "getUser", "keySet", "builder", "addAll", "listTables", "build", "getSpreadsheetBasePath", "getUser", "getSpreadsheetFilePath", "doAs", "getUgi", "getTableNames", "builder", "add", "build"]}, "repository": {"repo_id": 41633567, "url": "https://github.com/fortitudetec/presto-plugins", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 137, "license": "licensed"}}