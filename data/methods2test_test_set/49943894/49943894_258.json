{"test_class": {"identifier": "QCOW2UtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "InputStream inputStream;", "modifier": "", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "final Long virtualSize = 21474836480L;", "modifier": "final", "type": "Long", "declarator": "virtualSize = 21474836480L", "var_name": "virtualSize"}], "file": "utils/src/test/java/com/cloud/utils/storage/QCOW2UtilsTest.java"}, "test_case": {"identifier": "getVirtualSizeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getVirtualSizeTest() throws IOException {\n        assertEquals(virtualSize.longValue(), QCOW2Utils.getVirtualSize(inputStream));\n    }", "signature": "void getVirtualSizeTest()", "full_signature": "@Test public void getVirtualSizeTest()", "class_method_signature": "QCOW2UtilsTest.getVirtualSizeTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "longValue", "getVirtualSize"]}, "focal_class": {"identifier": "QCOW2Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int VIRTUALSIZE_HEADER_LOCATION = 24;", "modifier": "private static final", "type": "int", "declarator": "VIRTUALSIZE_HEADER_LOCATION = 24", "var_name": "VIRTUALSIZE_HEADER_LOCATION"}, {"original_string": "private static final int VIRTUALSIZE_HEADER_LENGTH = 8;", "modifier": "private static final", "type": "int", "declarator": "VIRTUALSIZE_HEADER_LENGTH = 8", "var_name": "VIRTUALSIZE_HEADER_LENGTH"}], "methods": [{"identifier": "QCOW2Utils", "parameters": "()", "modifiers": "private", "return": "", "signature": " QCOW2Utils()", "full_signature": "private  QCOW2Utils()", "class_method_signature": "QCOW2Utils.QCOW2Utils()", "testcase": false, "constructor": true}, {"identifier": "getVirtualSizeHeaderLocation", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getVirtualSizeHeaderLocation()", "full_signature": "public static int getVirtualSizeHeaderLocation()", "class_method_signature": "QCOW2Utils.getVirtualSizeHeaderLocation()", "testcase": false, "constructor": false}, {"identifier": "getVirtualSize", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "long", "signature": "long getVirtualSize(InputStream inputStream)", "full_signature": "public static long getVirtualSize(InputStream inputStream)", "class_method_signature": "QCOW2Utils.getVirtualSize(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/storage/QCOW2Utils.java"}, "focal_method": {"identifier": "getVirtualSize", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "long", "body": "public static long getVirtualSize(InputStream inputStream) throws IOException {\n        byte[] bytes = new byte[VIRTUALSIZE_HEADER_LENGTH];\n\n        if (inputStream.skip(VIRTUALSIZE_HEADER_LOCATION) != VIRTUALSIZE_HEADER_LOCATION) {\n            throw new IOException(\"Unable to skip to the virtual size header\");\n        }\n\n        if (inputStream.read(bytes) != VIRTUALSIZE_HEADER_LENGTH) {\n            throw new IOException(\"Unable to properly read the size\");\n        }\n\n        return NumbersUtil.bytesToLong(bytes);\n    }", "signature": "long getVirtualSize(InputStream inputStream)", "full_signature": "public static long getVirtualSize(InputStream inputStream)", "class_method_signature": "QCOW2Utils.getVirtualSize(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["skip", "read", "bytesToLong"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}