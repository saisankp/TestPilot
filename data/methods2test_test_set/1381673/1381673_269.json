{"test_class": {"identifier": "NNAllFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NNAllFunction NNAllFunction;", "modifier": "private", "type": "NNAllFunction", "declarator": "NNAllFunction", "var_name": "NNAllFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/twovaluelogic/NNAllFunctionTest.java"}, "test_case": {"identifier": "invokeBooleanParamFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeBooleanParamFalse() {\n        FunctionTestUtil.assertResult(NNAllFunction.invoke(false), false);\n    }", "signature": "void invokeBooleanParamFalse()", "full_signature": "@Test public void invokeBooleanParamFalse()", "class_method_signature": "NNAllFunctionTest.invokeBooleanParamFalse()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke"]}, "focal_class": {"identifier": "NNAllFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [{"original_string": "public static final NNAllFunction INSTANCE = new NNAllFunction();", "modifier": "public static final", "type": "NNAllFunction", "declarator": "INSTANCE = new NNAllFunction()", "var_name": "INSTANCE"}], "methods": [{"identifier": "NNAllFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " NNAllFunction()", "full_signature": "public  NNAllFunction()", "class_method_signature": "NNAllFunction.NNAllFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) List list)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) List list)", "class_method_signature": "NNAllFunction.invoke(@ParameterName( \"list\" ) List list)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) Boolean single)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) Boolean single)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) Boolean single)", "class_method_signature": "NNAllFunction.invoke(@ParameterName( \"list\" ) Boolean single)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName( \"b\" ) Object[] list)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"b\" ) Object[] list)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"b\" ) Object[] list)", "class_method_signature": "NNAllFunction.invoke(@ParameterName( \"b\" ) Object[] list)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/twovaluelogic/NNAllFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list)", "modifiers": "public", "return": "FEELFnResult<Boolean>", "body": "public FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) List list) {\n        if ( list == null ) {\n            return FEELFnResult.ofResult( true );\n        }\n        boolean result = true;\n        for ( final Object element : list ) {\n            if (element != null && !(element instanceof Boolean)) {\n                return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"an element in the list is not a Boolean\"));\n            } else {\n                if (element != null) {\n                    result &= (Boolean) element;\n                }\n            }\n        }\n        return FEELFnResult.ofResult( result );\n    }", "signature": "FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) List list)", "full_signature": "public FEELFnResult<Boolean> invoke(@ParameterName( \"list\" ) List list)", "class_method_signature": "NNAllFunction.invoke(@ParameterName( \"list\" ) List list)", "testcase": false, "constructor": false, "invocations": ["ofResult", "ofError", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}