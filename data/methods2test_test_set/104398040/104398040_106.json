{"test_class": {"identifier": "EolHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE1 = \"blah\\n\";", "modifier": "private static final", "type": "String", "declarator": "LINE1 = \"blah\\n\"", "var_name": "LINE1"}, {"original_string": "private static final String LINE2 = \"\\r\\nblah\";", "modifier": "private static final", "type": "String", "declarator": "LINE2 = \"\\r\\nblah\"", "var_name": "LINE2"}, {"original_string": "private static final String LINE3 = \"blah\";", "modifier": "private static final", "type": "String", "declarator": "LINE3 = \"blah\"", "var_name": "LINE3"}], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/EolHelperTest.java"}, "test_case": {"identifier": "findEolTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findEolTest() throws IOException, URISyntaxException {\n        File file = new File(EolHelperTest.class.getResource(\"/billy.yaml\").toURI());\n        Assert.assertEquals(EolHelper.findEol(file), \"\\n\");\n    }", "signature": "void findEolTest()", "full_signature": "@Test public void findEolTest()", "class_method_signature": "EolHelperTest.findEolTest()", "testcase": true, "constructor": false, "invocations": ["toURI", "getResource", "assertEquals", "findEol"]}, "focal_class": {"identifier": "EolHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "findEol", "parameters": "(File textFile)", "modifiers": "@SuppressFBWarnings(\"DM_DEFAULT_ENCODING\") public static", "return": "String", "signature": "String findEol(File textFile)", "full_signature": "@SuppressFBWarnings(\"DM_DEFAULT_ENCODING\") public static String findEol(File textFile)", "class_method_signature": "EolHelper.findEol(File textFile)", "testcase": false, "constructor": false}, {"identifier": "findEolDefaultToOs", "parameters": "(File textFile)", "modifiers": "public static", "return": "String", "signature": "String findEolDefaultToOs(File textFile)", "full_signature": "public static String findEolDefaultToOs(File textFile)", "class_method_signature": "EolHelper.findEolDefaultToOs(File textFile)", "testcase": false, "constructor": false}, {"identifier": "removeEol", "parameters": "(String line)", "modifiers": "public static", "return": "String", "signature": "String removeEol(String line)", "full_signature": "public static String removeEol(String line)", "class_method_signature": "EolHelper.removeEol(String line)", "testcase": false, "constructor": false}, {"identifier": "startsWithEol", "parameters": "(String line)", "modifiers": "public static", "return": "boolean", "signature": "boolean startsWithEol(String line)", "full_signature": "public static boolean startsWithEol(String line)", "class_method_signature": "EolHelper.startsWithEol(String line)", "testcase": false, "constructor": false}, {"identifier": "endsWithEol", "parameters": "(String line)", "modifiers": "public static", "return": "boolean", "signature": "boolean endsWithEol(String line)", "full_signature": "public static boolean endsWithEol(String line)", "class_method_signature": "EolHelper.endsWithEol(String line)", "testcase": false, "constructor": false}, {"identifier": "getStartEol", "parameters": "(String line)", "modifiers": "public static", "return": "String", "signature": "String getStartEol(String line)", "full_signature": "public static String getStartEol(String line)", "class_method_signature": "EolHelper.getStartEol(String line)", "testcase": false, "constructor": false}, {"identifier": "getEndEol", "parameters": "(String line)", "modifiers": "public static", "return": "String", "signature": "String getEndEol(String line)", "full_signature": "public static String getEndEol(String line)", "class_method_signature": "EolHelper.getEndEol(String line)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/EolHelper.java"}, "focal_method": {"identifier": "findEol", "parameters": "(File textFile)", "modifiers": "@SuppressFBWarnings(\"DM_DEFAULT_ENCODING\") public static", "return": "String", "body": "@SuppressFBWarnings(\"DM_DEFAULT_ENCODING\")\n    public static String findEol(File textFile) throws IOException {\n        if (textFile == null) {\n            throw new IllegalArgumentException(\"Text file object cannot be null\");\n        }\n        if (!textFile.isFile()) {\n            throw new IllegalArgumentException(\"Text file is not a file\");\n        }\n        if (textFile.length() == 0) {\n            return null;\n        }\n        EolBufferedReader eolBufferedReader = null;\n        try {\n            eolBufferedReader = new EolBufferedReader(new BufferedReader(new FileReader(textFile)));\n            String line = eolBufferedReader.readLineKeepEol();\n            return getEndEol(line);\n        } finally {\n            if (eolBufferedReader != null) eolBufferedReader.close();\n        }\n    }", "signature": "String findEol(File textFile)", "full_signature": "@SuppressFBWarnings(\"DM_DEFAULT_ENCODING\") public static String findEol(File textFile)", "class_method_signature": "EolHelper.findEol(File textFile)", "testcase": false, "constructor": false, "invocations": ["isFile", "length", "readLineKeepEol", "getEndEol", "close"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}