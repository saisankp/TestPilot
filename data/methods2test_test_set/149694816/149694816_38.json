{"test_class": {"identifier": "BeforeAndAfterTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final String item1 = randomUUID().toString();", "modifier": "protected final", "type": "String", "declarator": "item1 = randomUUID().toString()", "var_name": "item1"}, {"original_string": "protected final String item2 = randomUUID().toString();", "modifier": "protected final", "type": "String", "declarator": "item2 = randomUUID().toString()", "var_name": "item2"}, {"original_string": "protected final String item3 = randomUUID().toString();", "modifier": "protected final", "type": "String", "declarator": "item3 = randomUUID().toString()", "var_name": "item3"}, {"original_string": "protected final String item4 = randomUUID().toString();", "modifier": "protected final", "type": "String", "declarator": "item4 = randomUUID().toString()", "var_name": "item4"}, {"original_string": "protected final Set<String> before = new HashSet<>(asList(item1, item2, item3));", "modifier": "protected final", "type": "Set<String>", "declarator": "before = new HashSet<>(asList(item1, item2, item3))", "var_name": "before"}, {"original_string": "protected final Set<String> after = new HashSet<>(asList(item2, item3, item4));", "modifier": "protected final", "type": "Set<String>", "declarator": "after = new HashSet<>(asList(item2, item3, item4))", "var_name": "after"}, {"original_string": "protected final BeforeAndAfter<String> beforeAndAfter = new BeforeAndAfter<>(before, after);", "modifier": "protected final", "type": "BeforeAndAfter<String>", "declarator": "beforeAndAfter = new BeforeAndAfter<>(before, after)", "var_name": "beforeAndAfter"}], "file": "core/src/test/java/ship/util/BeforeAndAfterTest.java"}, "test_case": {"identifier": "testGetAddedItems", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAddedItems() {\n    assertEquals(new HashSet<>(asList(item4)), beforeAndAfter.getAddedItems());\n  }", "signature": "void testGetAddedItems()", "full_signature": "@Test public void testGetAddedItems()", "class_method_signature": "BeforeAndAfterTest.testGetAddedItems()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "asList", "getAddedItems"]}, "focal_class": {"identifier": "BeforeAndAfter", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final Set<T> before;", "modifier": "protected final", "type": "Set<T>", "declarator": "before", "var_name": "before"}, {"original_string": "protected final Set<T> after;", "modifier": "protected final", "type": "Set<T>", "declarator": "after", "var_name": "after"}], "methods": [{"identifier": "getAddedItems", "parameters": "()", "modifiers": "public", "return": "Set<T>", "signature": "Set<T> getAddedItems()", "full_signature": "public Set<T> getAddedItems()", "class_method_signature": "BeforeAndAfter.getAddedItems()", "testcase": false, "constructor": false}, {"identifier": "getRemovedItems", "parameters": "()", "modifiers": "public", "return": "Set<T>", "signature": "Set<T> getRemovedItems()", "full_signature": "public Set<T> getRemovedItems()", "class_method_signature": "BeforeAndAfter.getRemovedItems()", "testcase": false, "constructor": false}, {"identifier": "getIntersectedItems", "parameters": "()", "modifiers": "public", "return": "Set<T>", "signature": "Set<T> getIntersectedItems()", "full_signature": "public Set<T> getIntersectedItems()", "class_method_signature": "BeforeAndAfter.getIntersectedItems()", "testcase": false, "constructor": false}, {"identifier": "getUnionedItems", "parameters": "()", "modifiers": "public", "return": "Set<T>", "signature": "Set<T> getUnionedItems()", "full_signature": "public Set<T> getUnionedItems()", "class_method_signature": "BeforeAndAfter.getUnionedItems()", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/util/BeforeAndAfter.java"}, "focal_method": {"identifier": "getAddedItems", "parameters": "()", "modifiers": "public", "return": "Set<T>", "body": "public Set<T> getAddedItems() {\n    final HashSet<T> added = new HashSet<>(after);\n    added.removeAll(before);\n    return added;\n  }", "signature": "Set<T> getAddedItems()", "full_signature": "public Set<T> getAddedItems()", "class_method_signature": "BeforeAndAfter.getAddedItems()", "testcase": false, "constructor": false, "invocations": ["removeAll"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}