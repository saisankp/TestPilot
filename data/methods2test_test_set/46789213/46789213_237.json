{"test_class": {"identifier": "SequentialProtocolProducerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/lib/helper/SequentialProtocolProducerTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    SequentialProtocolProducer sequentialProtocolProducer =\n        new SequentialProtocolProducer(\n            Collections.singletonList(\n                new SingleProtocolProducer<>(new DummyBooleanNotProtocol(null))));\n    String toString = sequentialProtocolProducer.toString();\n    Assert.assertThat(toString, StringContains.containsString(\"SequentialProtocolProducer\"));\n    Assert.assertThat(toString, StringContains.containsString(\"SingleProtocolProducer\"));\n    Assert.assertThat(toString, StringContains.containsString(\"DummyBooleanNotProtocol\"));\n    Assert.assertThat(sequentialProtocolProducer.toString(), Is.is(toString));\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "SequentialProtocolProducerTest.testToString()", "testcase": true, "constructor": false, "invocations": ["singletonList", "toString", "assertThat", "containsString", "assertThat", "containsString", "assertThat", "containsString", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "SequentialProtocolProducer", "superclass": "", "interfaces": "implements ProtocolProducer", "fields": [{"original_string": "private ProtocolProducer currentProducer;", "modifier": "private", "type": "ProtocolProducer", "declarator": "currentProducer", "var_name": "currentProducer"}, {"original_string": "private final Deque<ProtocolProducer> protocolProducers;", "modifier": "private final", "type": "Deque<ProtocolProducer>", "declarator": "protocolProducers", "var_name": "protocolProducers"}], "methods": [{"identifier": "SequentialProtocolProducer", "parameters": "(List<ProtocolProducer> protocols)", "modifiers": "public", "return": "", "signature": " SequentialProtocolProducer(List<ProtocolProducer> protocols)", "full_signature": "public  SequentialProtocolProducer(List<ProtocolProducer> protocols)", "class_method_signature": "SequentialProtocolProducer.SequentialProtocolProducer(List<ProtocolProducer> protocols)", "testcase": false, "constructor": true}, {"identifier": "getNextProtocols", "parameters": "(\n      ProtocolCollection<ResourcePoolT> protocolCollection)", "modifiers": "@Override public", "return": "void", "signature": "void getNextProtocols(\n      ProtocolCollection<ResourcePoolT> protocolCollection)", "full_signature": "@Override public void getNextProtocols(\n      ProtocolCollection<ResourcePoolT> protocolCollection)", "class_method_signature": "SequentialProtocolProducer.getNextProtocols(\n      ProtocolCollection<ResourcePoolT> protocolCollection)", "testcase": false, "constructor": false}, {"identifier": "inline", "parameters": "()", "modifiers": "private", "return": "ProtocolProducer", "signature": "ProtocolProducer inline()", "full_signature": "private ProtocolProducer inline()", "class_method_signature": "SequentialProtocolProducer.inline()", "testcase": false, "constructor": false}, {"identifier": "hasNextProtocols", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNextProtocols()", "full_signature": "@Override public boolean hasNextProtocols()", "class_method_signature": "SequentialProtocolProducer.hasNextProtocols()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SequentialProtocolProducer.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/lib/helper/SequentialProtocolProducer.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"SequentialProtocolProducer{\"\n        + \", protocolProducers=\" + protocolProducers\n        + '}';\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SequentialProtocolProducer.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}