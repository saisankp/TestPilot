{"test_class": {"identifier": "WrappedSubscriptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "implementation/src/test/java/io/smallrye/reactive/streams/utils/WrappedSubscriptionTest.java"}, "test_case": {"identifier": "testWrappedSubscription", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrappedSubscription() {\n        Subscription subscription = new Subscription() {\n            @Override\n            public void request(long n) {\n\n            }\n\n            @Override\n            public void cancel() {\n\n            }\n        };\n\n        WrappedSubscription wrapped = new WrappedSubscription(subscription, null);\n        assertThat(wrapped).isNotNull();\n        wrapped.request(10);\n        wrapped.cancel();\n    }", "signature": "void testWrappedSubscription()", "full_signature": "@Test public void testWrappedSubscription()", "class_method_signature": "WrappedSubscriptionTest.testWrappedSubscription()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "request", "cancel"]}, "focal_class": {"identifier": "WrappedSubscription", "superclass": "", "interfaces": "implements Subscription", "fields": [{"original_string": "private final Subscription subscription;", "modifier": "private final", "type": "Subscription", "declarator": "subscription", "var_name": "subscription"}, {"original_string": "private final Runnable cancellationHandler;", "modifier": "private final", "type": "Runnable", "declarator": "cancellationHandler", "var_name": "cancellationHandler"}], "methods": [{"identifier": "WrappedSubscription", "parameters": "(Subscription subscription, Runnable onCancellation)", "modifiers": "", "return": "", "signature": " WrappedSubscription(Subscription subscription, Runnable onCancellation)", "full_signature": "  WrappedSubscription(Subscription subscription, Runnable onCancellation)", "class_method_signature": "WrappedSubscription.WrappedSubscription(Subscription subscription, Runnable onCancellation)", "testcase": false, "constructor": true}, {"identifier": "request", "parameters": "(long n)", "modifiers": "@Override public", "return": "void", "signature": "void request(long n)", "full_signature": "@Override public void request(long n)", "class_method_signature": "WrappedSubscription.request(long n)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "WrappedSubscription.cancel()", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/utils/WrappedSubscription.java"}, "focal_method": {"identifier": "WrappedSubscription", "parameters": "(Subscription subscription, Runnable onCancellation)", "modifiers": "", "return": "", "body": "WrappedSubscription(Subscription subscription, Runnable onCancellation) {\n        this.subscription = Objects.requireNonNull(subscription);\n        this.cancellationHandler = onCancellation;\n    }", "signature": " WrappedSubscription(Subscription subscription, Runnable onCancellation)", "full_signature": "  WrappedSubscription(Subscription subscription, Runnable onCancellation)", "class_method_signature": "WrappedSubscription.WrappedSubscription(Subscription subscription, Runnable onCancellation)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}