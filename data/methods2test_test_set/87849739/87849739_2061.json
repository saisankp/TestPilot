{"test_class": {"identifier": "PurgeNamespaceReasonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ShutdownReasonType purgeNamespaceType;", "modifier": "private static", "type": "ShutdownReasonType", "declarator": "purgeNamespaceType", "var_name": "purgeNamespaceType"}, {"original_string": "private static String knownNamespace;", "modifier": "private static", "type": "String", "declarator": "knownNamespace", "var_name": "knownNamespace"}, {"original_string": "private static JsonObject knownJsonRepresentation;", "modifier": "private static", "type": "JsonObject", "declarator": "knownJsonRepresentation", "var_name": "knownJsonRepresentation"}, {"original_string": "private PurgeNamespaceReason underTest;", "modifier": "private", "type": "PurgeNamespaceReason", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/common/src/test/java/org/eclipse/ditto/signals/commands/common/PurgeNamespaceReasonTest.java"}, "test_case": {"identifier": "isRelevantForIsFalseIfNamespaceIsNotEqual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isRelevantForIsFalseIfNamespaceIsNotEqual() {\n        assertThat(underTest.isRelevantFor(knownNamespace + \"X\")).isFalse();\n    }", "signature": "void isRelevantForIsFalseIfNamespaceIsNotEqual()", "full_signature": "@Test public void isRelevantForIsFalseIfNamespaceIsNotEqual()", "class_method_signature": "PurgeNamespaceReasonTest.isRelevantForIsFalseIfNamespaceIsNotEqual()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isRelevantFor"]}, "focal_class": {"identifier": "PurgeNamespaceReason", "superclass": "", "interfaces": "implements ShutdownReason", "fields": [{"original_string": "private static final ShutdownReasonType type = ShutdownReasonType.Known.PURGE_NAMESPACE;", "modifier": "private static final", "type": "ShutdownReasonType", "declarator": "type = ShutdownReasonType.Known.PURGE_NAMESPACE", "var_name": "type"}, {"original_string": "private final String namespaceToPurge;", "modifier": "private final", "type": "String", "declarator": "namespaceToPurge", "var_name": "namespaceToPurge"}], "methods": [{"identifier": "PurgeNamespaceReason", "parameters": "(final String namespaceToPurge)", "modifiers": "private", "return": "", "signature": " PurgeNamespaceReason(final String namespaceToPurge)", "full_signature": "private  PurgeNamespaceReason(final String namespaceToPurge)", "class_method_signature": "PurgeNamespaceReason.PurgeNamespaceReason(final String namespaceToPurge)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence namespace)", "modifiers": "public static", "return": "PurgeNamespaceReason", "signature": "PurgeNamespaceReason of(final CharSequence namespace)", "full_signature": "public static PurgeNamespaceReason of(final CharSequence namespace)", "class_method_signature": "PurgeNamespaceReason.of(final CharSequence namespace)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "static", "return": "PurgeNamespaceReason", "signature": "PurgeNamespaceReason fromJson(final JsonObject jsonObject)", "full_signature": "static PurgeNamespaceReason fromJson(final JsonObject jsonObject)", "class_method_signature": "PurgeNamespaceReason.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "ShutdownReasonType", "signature": "ShutdownReasonType getType()", "full_signature": "@Override public ShutdownReasonType getType()", "class_method_signature": "PurgeNamespaceReason.getType()", "testcase": false, "constructor": false}, {"identifier": "isRelevantFor", "parameters": "(final Object value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRelevantFor(final Object value)", "full_signature": "@Override public boolean isRelevantFor(final Object value)", "class_method_signature": "PurgeNamespaceReason.isRelevantFor(final Object value)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson()", "full_signature": "@Override public JsonObject toJson()", "class_method_signature": "PurgeNamespaceReason.toJson()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "class_method_signature": "PurgeNamespaceReason.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "PurgeNamespaceReason.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PurgeNamespaceReason.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PurgeNamespaceReason.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/common/src/main/java/org/eclipse/ditto/signals/commands/common/PurgeNamespaceReason.java"}, "focal_method": {"identifier": "isRelevantFor", "parameters": "(final Object value)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isRelevantFor(final Object value) {\n        return namespaceToPurge.equals(value);\n    }", "signature": "boolean isRelevantFor(final Object value)", "full_signature": "@Override public boolean isRelevantFor(final Object value)", "class_method_signature": "PurgeNamespaceReason.isRelevantFor(final Object value)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}