{"test_class": {"identifier": "MACCSFingerprinterTest", "superclass": "extends AbstractFixedLengthFingerprinterTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(MACCSFingerprinterTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(MACCSFingerprinterTest.class)", "var_name": "logger"}], "file": "descriptor/fingerprint/src/test/java/org/openscience/cdk/fingerprint/MACCSFingerprinterTest.java"}, "test_case": {"identifier": "getsize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getsize() throws Exception {\n        IFingerprinter printer = new MACCSFingerprinter(SilentChemObjectBuilder.getInstance());\n        Assert.assertEquals(166, printer.getSize());\n    }", "signature": "void getsize()", "full_signature": "@Test public void getsize()", "class_method_signature": "MACCSFingerprinterTest.getsize()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertEquals", "getSize"]}, "focal_class": {"identifier": "MACCSFingerprinter", "superclass": "extends AbstractFingerprinter", "interfaces": "implements IFingerprinter", "fields": [{"original_string": "private static ILoggingTool logger          = LoggingToolFactory.createLoggingTool(MACCSFingerprinter.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger          = LoggingToolFactory.createLoggingTool(MACCSFingerprinter.class)", "var_name": "logger"}, {"original_string": "private static final String KEY_DEFINITIONS = \"data/maccs.txt\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DEFINITIONS = \"data/maccs.txt\"", "var_name": "KEY_DEFINITIONS"}, {"original_string": "private volatile MaccsKey[] keys            = null;", "modifier": "private volatile", "type": "MaccsKey[]", "declarator": "keys            = null", "var_name": "keys"}, {"original_string": "private final Object lock = new Object();", "modifier": "private final", "type": "Object", "declarator": "lock = new Object()", "var_name": "lock"}], "methods": [{"identifier": "MACCSFingerprinter", "parameters": "()", "modifiers": "public", "return": "", "signature": " MACCSFingerprinter()", "full_signature": "public  MACCSFingerprinter()", "class_method_signature": "MACCSFingerprinter.MACCSFingerprinter()", "testcase": false, "constructor": true}, {"identifier": "MACCSFingerprinter", "parameters": "(IChemObjectBuilder builder)", "modifiers": "public", "return": "", "signature": " MACCSFingerprinter(IChemObjectBuilder builder)", "full_signature": "public  MACCSFingerprinter(IChemObjectBuilder builder)", "class_method_signature": "MACCSFingerprinter.MACCSFingerprinter(IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "getBitFingerprint", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "IBitFingerprint", "signature": "IBitFingerprint getBitFingerprint(IAtomContainer container)", "full_signature": "@Override public IBitFingerprint getBitFingerprint(IAtomContainer container)", "class_method_signature": "MACCSFingerprinter.getBitFingerprint(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "visitPart", "parameters": "(boolean[] visit, int[][] g, int beg, int prev)", "modifiers": "private static", "return": "int", "signature": "int visitPart(boolean[] visit, int[][] g, int beg, int prev)", "full_signature": "private static int visitPart(boolean[] visit, int[][] g, int beg, int prev)", "class_method_signature": "MACCSFingerprinter.visitPart(boolean[] visit, int[][] g, int beg, int prev)", "testcase": false, "constructor": false}, {"identifier": "isAromPath", "parameters": "(int[] path, GraphUtil.EdgeToBondMap bmap)", "modifiers": "private static", "return": "boolean", "signature": "boolean isAromPath(int[] path, GraphUtil.EdgeToBondMap bmap)", "full_signature": "private static boolean isAromPath(int[] path, GraphUtil.EdgeToBondMap bmap)", "class_method_signature": "MACCSFingerprinter.isAromPath(int[] path, GraphUtil.EdgeToBondMap bmap)", "testcase": false, "constructor": false}, {"identifier": "getRawFingerprint", "parameters": "(IAtomContainer iAtomContainer)", "modifiers": "@Override public", "return": "Map<String, Integer>", "signature": "Map<String, Integer> getRawFingerprint(IAtomContainer iAtomContainer)", "full_signature": "@Override public Map<String, Integer> getRawFingerprint(IAtomContainer iAtomContainer)", "class_method_signature": "MACCSFingerprinter.getRawFingerprint(IAtomContainer iAtomContainer)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "MACCSFingerprinter.getSize()", "testcase": false, "constructor": false}, {"identifier": "readKeyDef", "parameters": "(final IChemObjectBuilder builder)", "modifiers": "private", "return": "MaccsKey[]", "signature": "MaccsKey[] readKeyDef(final IChemObjectBuilder builder)", "full_signature": "private MaccsKey[] readKeyDef(final IChemObjectBuilder builder)", "class_method_signature": "MACCSFingerprinter.readKeyDef(final IChemObjectBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "getCountFingerprint", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "ICountFingerprint", "signature": "ICountFingerprint getCountFingerprint(IAtomContainer container)", "full_signature": "@Override public ICountFingerprint getCountFingerprint(IAtomContainer container)", "class_method_signature": "MACCSFingerprinter.getCountFingerprint(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "keys", "parameters": "(final IChemObjectBuilder builder)", "modifiers": "private", "return": "MaccsKey[]", "signature": "MaccsKey[] keys(final IChemObjectBuilder builder)", "full_signature": "private MaccsKey[] keys(final IChemObjectBuilder builder)", "class_method_signature": "MACCSFingerprinter.keys(final IChemObjectBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "createPattern", "parameters": "(String smarts, IChemObjectBuilder builder)", "modifiers": "private", "return": "Pattern", "signature": "Pattern createPattern(String smarts, IChemObjectBuilder builder)", "full_signature": "private Pattern createPattern(String smarts, IChemObjectBuilder builder)", "class_method_signature": "MACCSFingerprinter.createPattern(String smarts, IChemObjectBuilder builder)", "testcase": false, "constructor": false}], "file": "descriptor/fingerprint/src/main/java/org/openscience/cdk/fingerprint/MACCSFingerprinter.java"}, "focal_method": {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getSize() {\n        return 166;\n    }", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "MACCSFingerprinter.getSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}