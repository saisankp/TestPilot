{"test_class": {"identifier": "FeedServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ElasticSearchService esUtil;", "modifier": "private", "type": "ElasticSearchService", "declarator": "esUtil", "var_name": "esUtil"}, {"original_string": "private static CassandraOperation cassandraOperation = null;", "modifier": "private static", "type": "CassandraOperation", "declarator": "cassandraOperation = null", "var_name": "cassandraOperation"}, {"original_string": "private static IFeedService feedService = FeedFactory.getInstance();", "modifier": "private static", "type": "IFeedService", "declarator": "feedService = FeedFactory.getInstance()", "var_name": "feedService"}, {"original_string": "private static SearchDTO search = new SearchDTO();", "modifier": "private static", "type": "SearchDTO", "declarator": "search = new SearchDTO()", "var_name": "search"}, {"original_string": "private static Map<String, Object> esResponse = new HashMap<>();", "modifier": "private static", "type": "Map<String, Object>", "declarator": "esResponse = new HashMap<>()", "var_name": "esResponse"}, {"original_string": "private static Promise<Map<String, Object>> promise;", "modifier": "private static", "type": "Promise<Map<String, Object>>", "declarator": "promise", "var_name": "promise"}], "file": "actors/common/src/test/java/org/sunbird/feed/impl/FeedServiceImplTest.java"}, "test_case": {"identifier": "testDelete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDelete() {\n        boolean response = false;\n        try {\n            feedService.delete(\"123-456-789\");\n            response = true;\n        } catch (Exception ex) {\n            Assert.assertTrue(response);\n        }\n        Assert.assertTrue(response);\n    }", "signature": "void testDelete()", "full_signature": "@Test public void testDelete()", "class_method_signature": "FeedServiceImplTest.testDelete()", "testcase": true, "constructor": false, "invocations": ["delete", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "FeedServiceImpl", "superclass": "", "interfaces": "implements IFeedService", "fields": [{"original_string": "private Util.DbInfo usrFeedDbInfo = Util.dbInfoMap.get(JsonKey.USER_FEED_DB);", "modifier": "private", "type": "Util.DbInfo", "declarator": "usrFeedDbInfo = Util.dbInfoMap.get(JsonKey.USER_FEED_DB)", "var_name": "usrFeedDbInfo"}, {"original_string": "private ObjectMapper mapper = new ObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}], "methods": [{"identifier": "getCassandraInstance", "parameters": "()", "modifiers": "public static", "return": "CassandraOperation", "signature": "CassandraOperation getCassandraInstance()", "full_signature": "public static CassandraOperation getCassandraInstance()", "class_method_signature": "FeedServiceImpl.getCassandraInstance()", "testcase": false, "constructor": false}, {"identifier": "getESInstance", "parameters": "()", "modifiers": "public static", "return": "ElasticSearchService", "signature": "ElasticSearchService getESInstance()", "full_signature": "public static ElasticSearchService getESInstance()", "class_method_signature": "FeedServiceImpl.getESInstance()", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Feed feed)", "modifiers": "@Override public", "return": "Response", "signature": "Response insert(Feed feed)", "full_signature": "@Override public Response insert(Feed feed)", "class_method_signature": "FeedServiceImpl.insert(Feed feed)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Feed feed)", "modifiers": "@Override public", "return": "Response", "signature": "Response update(Feed feed)", "full_signature": "@Override public Response update(Feed feed)", "class_method_signature": "FeedServiceImpl.update(Feed feed)", "testcase": false, "constructor": false}, {"identifier": "getRecordsByProperties", "parameters": "(Map<String, Object> properties)", "modifiers": "@Override public", "return": "List<Feed>", "signature": "List<Feed> getRecordsByProperties(Map<String, Object> properties)", "full_signature": "@Override public List<Feed> getRecordsByProperties(Map<String, Object> properties)", "class_method_signature": "FeedServiceImpl.getRecordsByProperties(Map<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(SearchDTO searchDTO)", "modifiers": "@Override public", "return": "Response", "signature": "Response search(SearchDTO searchDTO)", "full_signature": "@Override public Response search(SearchDTO searchDTO)", "class_method_signature": "FeedServiceImpl.search(SearchDTO searchDTO)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String id)", "modifiers": "@Override public", "return": "void", "signature": "void delete(String id)", "full_signature": "@Override public void delete(String id)", "class_method_signature": "FeedServiceImpl.delete(String id)", "testcase": false, "constructor": false}, {"identifier": "saveFeed", "parameters": "(Map<String, Object> feed)", "modifiers": "private", "return": "Response", "signature": "Response saveFeed(Map<String, Object> feed)", "full_signature": "private Response saveFeed(Map<String, Object> feed)", "class_method_signature": "FeedServiceImpl.saveFeed(Map<String, Object> feed)", "testcase": false, "constructor": false}], "file": "actors/common/src/main/java/org/sunbird/feed/impl/FeedServiceImpl.java"}, "focal_method": {"identifier": "delete", "parameters": "(String id)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void delete(String id) {\n    ProjectLogger.log(\n        \"FeedServiceImpl:delete method called for feedId : \" + id, LoggerEnum.INFO.name());\n    getCassandraInstance()\n        .deleteRecord(usrFeedDbInfo.getKeySpace(), usrFeedDbInfo.getTableName(), id);\n    getESInstance().delete(ProjectUtil.EsType.userfeed.getTypeName(), id);\n  }", "signature": "void delete(String id)", "full_signature": "@Override public void delete(String id)", "class_method_signature": "FeedServiceImpl.delete(String id)", "testcase": false, "constructor": false, "invocations": ["log", "name", "deleteRecord", "getCassandraInstance", "getKeySpace", "getTableName", "delete", "getESInstance", "getTypeName"]}, "repository": {"repo_id": 96122408, "url": "https://github.com/project-sunbird/sunbird-lms-mw", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 5, "size": 15380, "license": "licensed"}}