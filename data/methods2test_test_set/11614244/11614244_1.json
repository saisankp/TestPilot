{"test_class": {"identifier": "ParameterReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "photohawk-image-evaluator/src/test/java/at/ac/tuwien/photohawk/dcraw/ParameterReaderTest.java"}, "test_case": {"identifier": "readParameters_invalidBasekey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readParameters_invalidBasekey() {\n        ParameterReader pr = new ParameterReader();\n\n        List<String> expectedRaw = new ArrayList<String>();\n        List<String> paramsRaw = pr.readParameters(\"invalid.key\", true);\n        assertThat(paramsRaw, is(expectedRaw));\n\n        List<String> expectedNonRaw = new ArrayList<String>();\n        List<String> paramsNonRaw = pr.readParameters(\"invalid.key\", false);\n        assertThat(paramsNonRaw, is(expectedNonRaw));\n    }", "signature": "void readParameters_invalidBasekey()", "full_signature": "@Test public void readParameters_invalidBasekey()", "class_method_signature": "ParameterReaderTest.readParameters_invalidBasekey()", "testcase": true, "constructor": false, "invocations": ["readParameters", "assertThat", "is", "readParameters", "assertThat", "is"]}, "focal_class": {"identifier": "ParameterReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DCRAW_PROPERTIES = \"dcraw.properties\";", "modifier": "private static final", "type": "String", "declarator": "DCRAW_PROPERTIES = \"dcraw.properties\"", "var_name": "DCRAW_PROPERTIES"}, {"original_string": "private static final String RAW_KEY = \".raw\";", "modifier": "private static final", "type": "String", "declarator": "RAW_KEY = \".raw\"", "var_name": "RAW_KEY"}, {"original_string": "private static final String NON_RAW_KEY = \".non-raw\";", "modifier": "private static final", "type": "String", "declarator": "NON_RAW_KEY = \".non-raw\"", "var_name": "NON_RAW_KEY"}], "methods": [{"identifier": "readParameters", "parameters": "(final String baseKey, final boolean otherRaw)", "modifiers": "public", "return": "List<String>", "signature": "List<String> readParameters(final String baseKey, final boolean otherRaw)", "full_signature": "public List<String> readParameters(final String baseKey, final boolean otherRaw)", "class_method_signature": "ParameterReader.readParameters(final String baseKey, final boolean otherRaw)", "testcase": false, "constructor": false}, {"identifier": "readParameters", "parameters": "(final String key)", "modifiers": "private", "return": "List<String>", "signature": "List<String> readParameters(final String key)", "full_signature": "private List<String> readParameters(final String key)", "class_method_signature": "ParameterReader.readParameters(final String key)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "private", "return": "Properties", "signature": "Properties getProperties()", "full_signature": "private Properties getProperties()", "class_method_signature": "ParameterReader.getProperties()", "testcase": false, "constructor": false}], "file": "photohawk-image-evaluator/src/main/java/at/ac/tuwien/photohawk/dcraw/ParameterReader.java"}, "focal_method": {"identifier": "readParameters", "parameters": "(final String baseKey, final boolean otherRaw)", "modifiers": "public", "return": "List<String>", "body": "public List<String> readParameters(final String baseKey, final boolean otherRaw) {\n        if (otherRaw) {\n            return readParameters(baseKey + RAW_KEY);\n        } else {\n            return readParameters(baseKey + NON_RAW_KEY);\n        }\n    }", "signature": "List<String> readParameters(final String baseKey, final boolean otherRaw)", "full_signature": "public List<String> readParameters(final String baseKey, final boolean otherRaw)", "class_method_signature": "ParameterReader.readParameters(final String baseKey, final boolean otherRaw)", "testcase": false, "constructor": false, "invocations": ["readParameters", "readParameters"]}, "repository": {"repo_id": 11614244, "url": "https://github.com/datascience/photohawk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 6, "size": 4209, "license": "licensed"}}