{"test_class": {"identifier": "ServerTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private MockWebServer mockWebServer;", "modifier": "private", "type": "MockWebServer", "declarator": "mockWebServer", "var_name": "mockWebServer"}, {"original_string": "private final String successResponse =\n            \"{\\n\" +\n                    \"  \\\"_links\\\": {\\n\" +\n                    \"    \\\"transaction\\\": {\\n\" +\n                    \"      \\\"href\\\": \\\"/transactions/2634d2cf5adcbd3487d1df042166eef53830115844fdde1588828667bf93ff42\\\"\\n\" +\n                    \"    }\\n\" +\n                    \"  },\\n\" +\n                    \"  \\\"hash\\\": \\\"2634d2cf5adcbd3487d1df042166eef53830115844fdde1588828667bf93ff42\\\",\\n\" +\n                    \"  \\\"ledger\\\": 826150,\\n\" +\n                    \"  \\\"envelope_xdr\\\": \\\"AAAAAKu3N77S+cHLEDfVD2eW/CqRiN9yvAKH+qkeLjHQs1u+AAAAZAAMkoMAAAADAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAbYQq8ek1GitmNBUloGnetfWxSpxlsgK48Xi66dIL3MoAAAAAC+vCAAAAAAAAAAAB0LNbvgAAAEDadQ25SNHWTg0L+2wr/KNWd8/EwSNFkX/ncGmBGA3zkNGx7lAow78q8SQmnn2IsdkD9MwICirhsOYDNbaqShwO\\\",\\n\"\n                    +\n                    \"  \\\"result_xdr\\\": \\\"AAAAAAAAAGQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA=\\\",\\n\" +\n                    \"  \\\"result_meta_xdr\\\": \\\"AAAAAAAAAAEAAAACAAAAAAAMmyYAAAAAAAAAAG2EKvHpNRorZjQVJaBp3rX1sUqcZbICuPF4uunSC9zKAAAAAAvrwgAADJsmAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAQAMmyYAAAAAAAAAAKu3N77S+cHLEDfVD2eW/CqRiN9yvAKH+qkeLjHQs1u+AAAAFzCfYtQADJKDAAAAAwAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA\\\"\\n\"\n                    +\n                    \"}\";", "modifier": "private final", "type": "String", "declarator": "successResponse =\n            \"{\\n\" +\n                    \"  \\\"_links\\\": {\\n\" +\n                    \"    \\\"transaction\\\": {\\n\" +\n                    \"      \\\"href\\\": \\\"/transactions/2634d2cf5adcbd3487d1df042166eef53830115844fdde1588828667bf93ff42\\\"\\n\" +\n                    \"    }\\n\" +\n                    \"  },\\n\" +\n                    \"  \\\"hash\\\": \\\"2634d2cf5adcbd3487d1df042166eef53830115844fdde1588828667bf93ff42\\\",\\n\" +\n                    \"  \\\"ledger\\\": 826150,\\n\" +\n                    \"  \\\"envelope_xdr\\\": \\\"AAAAAKu3N77S+cHLEDfVD2eW/CqRiN9yvAKH+qkeLjHQs1u+AAAAZAAMkoMAAAADAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAbYQq8ek1GitmNBUloGnetfWxSpxlsgK48Xi66dIL3MoAAAAAC+vCAAAAAAAAAAAB0LNbvgAAAEDadQ25SNHWTg0L+2wr/KNWd8/EwSNFkX/ncGmBGA3zkNGx7lAow78q8SQmnn2IsdkD9MwICirhsOYDNbaqShwO\\\",\\n\"\n                    +\n                    \"  \\\"result_xdr\\\": \\\"AAAAAAAAAGQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA=\\\",\\n\" +\n                    \"  \\\"result_meta_xdr\\\": \\\"AAAAAAAAAAEAAAACAAAAAAAMmyYAAAAAAAAAAG2EKvHpNRorZjQVJaBp3rX1sUqcZbICuPF4uunSC9zKAAAAAAvrwgAADJsmAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAQAMmyYAAAAAAAAAAKu3N77S+cHLEDfVD2eW/CqRiN9yvAKH+qkeLjHQs1u+AAAAFzCfYtQADJKDAAAAAwAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA\\\"\\n\"\n                    +\n                    \"}\"", "var_name": "successResponse"}, {"original_string": "private final String failureResponse =\n            \"{\\n\" +\n                    \"  \\\"type\\\": \\\"https://stellar.org/horizon-errors/transaction_failed\\\",\\n\" +\n                    \"  \\\"title\\\": \\\"Transaction Failed\\\",\\n\" +\n                    \"  \\\"status\\\": 400,\\n\" +\n                    \"  \\\"detail\\\": \\\"TODO\\\",\\n\" +\n                    \"  \\\"instance\\\": \\\"horizon-testnet-001.prd.stellar001.internal.stellar-ops.com/IxhaI70Tqo-112305\\\",\\n\" +\n                    \"  \\\"extras\\\": {\\n\" +\n                    \"    \\\"envelope_xdr\\\": \\\"AAAAAK4Pg4OEkjGmSN0AN37K/dcKyKPT2DC90xvjjawKp136AAAAZAAKsZQAAAABAAAAAAAAAAEAAAAJSmF2YSBGVFchAAAAAAAAAQAAAAAAAAABAAAAAG9wfBI7rRYoBlX3qRa0KOnI75W5BaPU6NbyKmm2t71MAAAAAAAAAAABMS0AAAAAAAAAAAEKp136AAAAQOWEjL+Sm+WP2puE9dLIxWlOibIEOz8PsXyG77jOCVdHZfQvkgB49Mu5wqKCMWWIsDSLFekwUsLaunvmXrpyBwQ=\\\",\\n\"\n                    +\n                    \"    \\\"result_codes\\\": {\\n\" +\n                    \"      \\\"transaction\\\": \\\"tx_failed\\\",\\n\" +\n                    \"      \\\"operations\\\": [\\n\" +\n                    \"        \\\"op_no_destination\\\"\\n\" +\n                    \"      ]\\n\" +\n                    \"    },\\n\" +\n                    \"    \\\"result_xdr\\\": \\\"AAAAAAAAAGT/////AAAAAQAAAAAAAAAB////+wAAAAA=\\\"\\n\" +\n                    \"  }\\n\" +\n                    \"}\";", "modifier": "private final", "type": "String", "declarator": "failureResponse =\n            \"{\\n\" +\n                    \"  \\\"type\\\": \\\"https://stellar.org/horizon-errors/transaction_failed\\\",\\n\" +\n                    \"  \\\"title\\\": \\\"Transaction Failed\\\",\\n\" +\n                    \"  \\\"status\\\": 400,\\n\" +\n                    \"  \\\"detail\\\": \\\"TODO\\\",\\n\" +\n                    \"  \\\"instance\\\": \\\"horizon-testnet-001.prd.stellar001.internal.stellar-ops.com/IxhaI70Tqo-112305\\\",\\n\" +\n                    \"  \\\"extras\\\": {\\n\" +\n                    \"    \\\"envelope_xdr\\\": \\\"AAAAAK4Pg4OEkjGmSN0AN37K/dcKyKPT2DC90xvjjawKp136AAAAZAAKsZQAAAABAAAAAAAAAAEAAAAJSmF2YSBGVFchAAAAAAAAAQAAAAAAAAABAAAAAG9wfBI7rRYoBlX3qRa0KOnI75W5BaPU6NbyKmm2t71MAAAAAAAAAAABMS0AAAAAAAAAAAEKp136AAAAQOWEjL+Sm+WP2puE9dLIxWlOibIEOz8PsXyG77jOCVdHZfQvkgB49Mu5wqKCMWWIsDSLFekwUsLaunvmXrpyBwQ=\\\",\\n\"\n                    +\n                    \"    \\\"result_codes\\\": {\\n\" +\n                    \"      \\\"transaction\\\": \\\"tx_failed\\\",\\n\" +\n                    \"      \\\"operations\\\": [\\n\" +\n                    \"        \\\"op_no_destination\\\"\\n\" +\n                    \"      ]\\n\" +\n                    \"    },\\n\" +\n                    \"    \\\"result_xdr\\\": \\\"AAAAAAAAAGT/////AAAAAQAAAAAAAAAB////+wAAAAA=\\\"\\n\" +\n                    \"  }\\n\" +\n                    \"}\"", "var_name": "failureResponse"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}], "file": "kin-sdk/kin-base/src/test/java/kin/base/ServerTest.java"}, "test_case": {"identifier": "testSubmitTransactionSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSubmitTransactionSuccess() throws IOException {\n        mockWebServer.enqueue(\n                new MockResponse()\n                        .setResponseCode(200)\n                        .setBody(successResponse)\n        );\n\n        SubmitTransactionResponse response = server.submitTransaction(this.buildTransaction());\n        assertTrue(response.isSuccess());\n        assertEquals(response.getLedger(), new Long(826150L));\n        assertEquals(response.getHash(), \"2634d2cf5adcbd3487d1df042166eef53830115844fdde1588828667bf93ff42\");\n        assertNull(response.getExtras());\n    }", "signature": "void testSubmitTransactionSuccess()", "full_signature": "@Test public void testSubmitTransactionSuccess()", "class_method_signature": "ServerTest.testSubmitTransactionSuccess()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setBody", "setResponseCode", "submitTransaction", "buildTransaction", "assertTrue", "isSuccess", "assertEquals", "getLedger", "assertEquals", "getHash", "assertNull", "getExtras"]}, "focal_class": {"identifier": "Server", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int TEMPORARY_REDIRECT = 307;", "modifier": "private static final", "type": "int", "declarator": "TEMPORARY_REDIRECT = 307", "var_name": "TEMPORARY_REDIRECT"}, {"original_string": "private static final String LOCATION_HEADER = \"Location\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION_HEADER = \"Location\"", "var_name": "LOCATION_HEADER"}, {"original_string": "private URI serverURI;", "modifier": "private", "type": "URI", "declarator": "serverURI", "var_name": "serverURI"}, {"original_string": "private OkHttpClient httpClient;", "modifier": "private", "type": "OkHttpClient", "declarator": "httpClient", "var_name": "httpClient"}], "methods": [{"identifier": "Server", "parameters": "(String uri)", "modifiers": "public", "return": "", "signature": " Server(String uri)", "full_signature": "public  Server(String uri)", "class_method_signature": "Server.Server(String uri)", "testcase": false, "constructor": true}, {"identifier": "Server", "parameters": "(String uri, OkHttpClient client)", "modifiers": "public", "return": "", "signature": " Server(String uri, OkHttpClient client)", "full_signature": "public  Server(String uri, OkHttpClient client)", "class_method_signature": "Server.Server(String uri, OkHttpClient client)", "testcase": false, "constructor": true}, {"identifier": "createUri", "parameters": "(String uri)", "modifiers": "private", "return": "void", "signature": "void createUri(String uri)", "full_signature": "private void createUri(String uri)", "class_method_signature": "Server.createUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "accounts", "parameters": "()", "modifiers": "public", "return": "AccountsRequestBuilder", "signature": "AccountsRequestBuilder accounts()", "full_signature": "public AccountsRequestBuilder accounts()", "class_method_signature": "Server.accounts()", "testcase": false, "constructor": false}, {"identifier": "effects", "parameters": "()", "modifiers": "public", "return": "EffectsRequestBuilder", "signature": "EffectsRequestBuilder effects()", "full_signature": "public EffectsRequestBuilder effects()", "class_method_signature": "Server.effects()", "testcase": false, "constructor": false}, {"identifier": "ledgers", "parameters": "()", "modifiers": "public", "return": "LedgersRequestBuilder", "signature": "LedgersRequestBuilder ledgers()", "full_signature": "public LedgersRequestBuilder ledgers()", "class_method_signature": "Server.ledgers()", "testcase": false, "constructor": false}, {"identifier": "offers", "parameters": "()", "modifiers": "public", "return": "OffersRequestBuilder", "signature": "OffersRequestBuilder offers()", "full_signature": "public OffersRequestBuilder offers()", "class_method_signature": "Server.offers()", "testcase": false, "constructor": false}, {"identifier": "operations", "parameters": "()", "modifiers": "public", "return": "OperationsRequestBuilder", "signature": "OperationsRequestBuilder operations()", "full_signature": "public OperationsRequestBuilder operations()", "class_method_signature": "Server.operations()", "testcase": false, "constructor": false}, {"identifier": "orderBook", "parameters": "()", "modifiers": "public", "return": "OrderBookRequestBuilder", "signature": "OrderBookRequestBuilder orderBook()", "full_signature": "public OrderBookRequestBuilder orderBook()", "class_method_signature": "Server.orderBook()", "testcase": false, "constructor": false}, {"identifier": "trades", "parameters": "()", "modifiers": "public", "return": "TradesRequestBuilder", "signature": "TradesRequestBuilder trades()", "full_signature": "public TradesRequestBuilder trades()", "class_method_signature": "Server.trades()", "testcase": false, "constructor": false}, {"identifier": "paths", "parameters": "()", "modifiers": "public", "return": "PathsRequestBuilder", "signature": "PathsRequestBuilder paths()", "full_signature": "public PathsRequestBuilder paths()", "class_method_signature": "Server.paths()", "testcase": false, "constructor": false}, {"identifier": "payments", "parameters": "()", "modifiers": "public", "return": "PaymentsRequestBuilder", "signature": "PaymentsRequestBuilder payments()", "full_signature": "public PaymentsRequestBuilder payments()", "class_method_signature": "Server.payments()", "testcase": false, "constructor": false}, {"identifier": "transactions", "parameters": "()", "modifiers": "public", "return": "TransactionsRequestBuilder", "signature": "TransactionsRequestBuilder transactions()", "full_signature": "public TransactionsRequestBuilder transactions()", "class_method_signature": "Server.transactions()", "testcase": false, "constructor": false}, {"identifier": "submitTransaction", "parameters": "(Transaction transaction, String url)", "modifiers": "private", "return": "SubmitTransactionResponse", "signature": "SubmitTransactionResponse submitTransaction(Transaction transaction, String url)", "full_signature": "private SubmitTransactionResponse submitTransaction(Transaction transaction, String url)", "class_method_signature": "Server.submitTransaction(Transaction transaction, String url)", "testcase": false, "constructor": false}, {"identifier": "submitTransaction", "parameters": "(Transaction transaction)", "modifiers": "public", "return": "SubmitTransactionResponse", "signature": "SubmitTransactionResponse submitTransaction(Transaction transaction)", "full_signature": "public SubmitTransactionResponse submitTransaction(Transaction transaction)", "class_method_signature": "Server.submitTransaction(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(String url)", "modifiers": "private", "return": "URI", "signature": "URI getUri(String url)", "full_signature": "private URI getUri(String url)", "class_method_signature": "Server.getUri(String url)", "testcase": false, "constructor": false}, {"identifier": "setHttpClient", "parameters": "(OkHttpClient httpClient)", "modifiers": "", "return": "void", "signature": "void setHttpClient(OkHttpClient httpClient)", "full_signature": " void setHttpClient(OkHttpClient httpClient)", "class_method_signature": "Server.setHttpClient(OkHttpClient httpClient)", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-base/src/main/java/kin/base/Server.java"}, "focal_method": {"identifier": "submitTransaction", "parameters": "(Transaction transaction, String url)", "modifiers": "private", "return": "SubmitTransactionResponse", "body": "private SubmitTransactionResponse submitTransaction(Transaction transaction, String url) throws IOException {\n        URI transactionsUri = getUri(url);\n\n        RequestBody formBody = new FormBody.Builder()\n                .add(\"tx\", transaction.toEnvelopeXdrBase64())\n                .build();\n        Request request = new Request.Builder()\n                .url(transactionsUri.toString())\n                .post(formBody)\n                .build();\n\n        Response response = null;\n        try {\n            response = httpClient.newCall(request).execute();\n\n            if (response != null) {\n                String location = response.header(LOCATION_HEADER);\n                if (response.code() == TEMPORARY_REDIRECT && location != null) {\n                    return submitTransaction(transaction, location);\n                } else {\n                    ResponseBody body = response.body();\n                    if (body != null) {\n                        String responseString = body.string();\n                        return GsonSingleton.getInstance().fromJson(responseString, SubmitTransactionResponse.class);\n                    }\n                }\n            }\n        } finally {\n            if (response != null) {\n                response.close();\n            }\n        }\n        return null;\n    }", "signature": "SubmitTransactionResponse submitTransaction(Transaction transaction, String url)", "full_signature": "private SubmitTransactionResponse submitTransaction(Transaction transaction, String url)", "class_method_signature": "Server.submitTransaction(Transaction transaction, String url)", "testcase": false, "constructor": false, "invocations": ["getUri", "build", "add", "toEnvelopeXdrBase64", "build", "post", "url", "toString", "execute", "newCall", "header", "code", "submitTransaction", "body", "string", "fromJson", "getInstance", "close"]}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}