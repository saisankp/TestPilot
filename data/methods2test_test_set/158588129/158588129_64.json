{"test_class": {"identifier": "BookControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate MockMvc mockMvc;", "modifier": "@Autowired\n\tprivate", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@MockBean\n\tprivate BookService bookService;", "modifier": "@MockBean\n\tprivate", "type": "BookService", "declarator": "bookService", "var_name": "bookService"}], "file": "ch03/recipe_3_2/src/test/java/com/apress/springbootrecipes/library/rest/BookControllerTest.java"}, "test_case": {"identifier": "shouldReturn404WhenBookNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldReturn404WhenBookNotFound() throws Exception {\n\n\t\twhen(bookService.find(anyString())).thenReturn(Optional.empty());\n\n\t\tmockMvc.perform(get(\"/books/123\"))\n\t\t\t\t.andExpect(status().isNotFound());\n\t}", "signature": "void shouldReturn404WhenBookNotFound()", "full_signature": "@Test public void shouldReturn404WhenBookNotFound()", "class_method_signature": "BookControllerTest.shouldReturn404WhenBookNotFound()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "find", "anyString", "empty", "andExpect", "perform", "get", "isNotFound", "status"]}, "focal_class": {"identifier": "BookController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final BookService bookService;", "modifier": "private final", "type": "BookService", "declarator": "bookService", "var_name": "bookService"}], "methods": [{"identifier": "BookController", "parameters": "(BookService bookService)", "modifiers": "public", "return": "", "signature": " BookController(BookService bookService)", "full_signature": "public  BookController(BookService bookService)", "class_method_signature": "BookController.BookController(BookService bookService)", "testcase": false, "constructor": true}, {"identifier": "all", "parameters": "()", "modifiers": "@GetMapping public", "return": "Iterable<Book>", "signature": "Iterable<Book> all()", "full_signature": "@GetMapping public Iterable<Book> all()", "class_method_signature": "BookController.all()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathVariable(\"isbn\") String isbn)", "modifiers": "@GetMapping(\"/{isbn}\") public", "return": "ResponseEntity<Book>", "signature": "ResponseEntity<Book> get(@PathVariable(\"isbn\") String isbn)", "full_signature": "@GetMapping(\"/{isbn}\") public ResponseEntity<Book> get(@PathVariable(\"isbn\") String isbn)", "class_method_signature": "BookController.get(@PathVariable(\"isbn\") String isbn)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@RequestBody Book book,\n                                     UriComponentsBuilder uriBuilder)", "modifiers": "@PostMapping public", "return": "ResponseEntity<Book>", "signature": "ResponseEntity<Book> create(@RequestBody Book book,\n                                     UriComponentsBuilder uriBuilder)", "full_signature": "@PostMapping public ResponseEntity<Book> create(@RequestBody Book book,\n                                     UriComponentsBuilder uriBuilder)", "class_method_signature": "BookController.create(@RequestBody Book book,\n                                     UriComponentsBuilder uriBuilder)", "testcase": false, "constructor": false}], "file": "ch03/recipe_3_2/src/main/java/com/apress/springbootrecipes/library/rest/BookController.java"}, "focal_method": {"identifier": "get", "parameters": "(@PathVariable(\"isbn\") String isbn)", "modifiers": "@GetMapping(\"/{isbn}\") public", "return": "ResponseEntity<Book>", "body": "@GetMapping(\"/{isbn}\")\n\tpublic ResponseEntity<Book> get(@PathVariable(\"isbn\") String isbn) {\n\t\treturn bookService.find(isbn)\n\t\t\t\t.map(ResponseEntity::ok)\n\t\t\t\t.orElse(ResponseEntity.notFound().build());\n\n\t}", "signature": "ResponseEntity<Book> get(@PathVariable(\"isbn\") String isbn)", "full_signature": "@GetMapping(\"/{isbn}\") public ResponseEntity<Book> get(@PathVariable(\"isbn\") String isbn)", "class_method_signature": "BookController.get(@PathVariable(\"isbn\") String isbn)", "testcase": false, "constructor": false, "invocations": ["orElse", "map", "find", "build", "notFound"]}, "repository": {"repo_id": 158588129, "url": "https://github.com/Apress/spring-boot-2-recipes", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 24, "size": 202, "license": "licensed"}}