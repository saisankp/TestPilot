{"test_class": {"identifier": "ListLayoutTest", "superclass": "extends ApplicationTest", "interfaces": "", "fields": [{"original_string": "private ListLayout layout;", "modifier": "private", "type": "ListLayout", "declarator": "layout", "var_name": "layout"}], "file": "plugins/base/src/test/java/edu/wpi/first/shuffleboard/plugin/base/layout/ListLayoutTest.java"}, "test_case": {"identifier": "testChildrenAdded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testChildrenAdded() {\n    Platform.runLater(() -> {\n      layout.addChild(new MockWidget());\n      layout.addChild(new MockWidget());\n    });\n    waitForFxEvents();\n    assertEquals(2, ((VBox) layout.getView().lookup(\".layout-container\")).getChildren().size());\n  }", "signature": "void testChildrenAdded()", "full_signature": "@Test public void testChildrenAdded()", "class_method_signature": "ListLayoutTest.testChildrenAdded()", "testcase": true, "constructor": false, "invocations": ["runLater", "addChild", "addChild", "waitForFxEvents", "assertEquals", "size", "getChildren", "lookup", "getView"]}, "focal_class": {"identifier": "ListLayout", "superclass": "extends LayoutBase", "interfaces": "", "fields": [{"original_string": "@FXML\n  private StackPane root;", "modifier": "@FXML\n  private", "type": "StackPane", "declarator": "root", "var_name": "root"}, {"original_string": "@FXML\n  private VBox container;", "modifier": "@FXML\n  private", "type": "VBox", "declarator": "container", "var_name": "container"}, {"original_string": "private final WeakHashMap<Component, ChildContainer> panes = new WeakHashMap<>();", "modifier": "private final", "type": "WeakHashMap<Component, ChildContainer>", "declarator": "panes = new WeakHashMap<>()", "var_name": "panes"}], "methods": [{"identifier": "initialize", "parameters": "()", "modifiers": "@FXML protected", "return": "void", "signature": "void initialize()", "full_signature": "@FXML protected void initialize()", "class_method_signature": "ListLayout.initialize()", "testcase": false, "constructor": false}, {"identifier": "paneFor", "parameters": "(Component component)", "modifiers": "private", "return": "ChildContainer", "signature": "ChildContainer paneFor(Component component)", "full_signature": "private ChildContainer paneFor(Component component)", "class_method_signature": "ListLayout.paneFor(Component component)", "testcase": false, "constructor": false}, {"identifier": "actionsForComponent", "parameters": "(Component component)", "modifiers": "@Override protected", "return": "ActionList", "signature": "ActionList actionsForComponent(Component component)", "full_signature": "@Override protected ActionList actionsForComponent(Component component)", "class_method_signature": "ListLayout.actionsForComponent(Component component)", "testcase": false, "constructor": false}, {"identifier": "addComponentToView", "parameters": "(Component component)", "modifiers": "@Override protected", "return": "void", "signature": "void addComponentToView(Component component)", "full_signature": "@Override protected void addComponentToView(Component component)", "class_method_signature": "ListLayout.addComponentToView(Component component)", "testcase": false, "constructor": false}, {"identifier": "removeComponentFromView", "parameters": "(Component component)", "modifiers": "@Override protected", "return": "void", "signature": "void removeComponentFromView(Component component)", "full_signature": "@Override protected void removeComponentFromView(Component component)", "class_method_signature": "ListLayout.removeComponentFromView(Component component)", "testcase": false, "constructor": false}, {"identifier": "replaceInPlace", "parameters": "(Component existing, Component replacement)", "modifiers": "@Override protected", "return": "void", "signature": "void replaceInPlace(Component existing, Component replacement)", "full_signature": "@Override protected void replaceInPlace(Component existing, Component replacement)", "class_method_signature": "ListLayout.replaceInPlace(Component existing, Component replacement)", "testcase": false, "constructor": false}, {"identifier": "getSettings", "parameters": "()", "modifiers": "@Override public", "return": "List<Group>", "signature": "List<Group> getSettings()", "full_signature": "@Override public List<Group> getSettings()", "class_method_signature": "ListLayout.getSettings()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "Pane", "signature": "Pane getView()", "full_signature": "@Override public Pane getView()", "class_method_signature": "ListLayout.getView()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ListLayout.getName()", "testcase": false, "constructor": false}], "file": "plugins/base/src/main/java/edu/wpi/first/shuffleboard/plugin/base/layout/ListLayout.java"}, "focal_method": {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "Pane", "body": "@Override\n  public Pane getView() {\n    return root;\n  }", "signature": "Pane getView()", "full_signature": "@Override public Pane getView()", "class_method_signature": "ListLayout.getView()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}