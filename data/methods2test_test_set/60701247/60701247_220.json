{"test_class": {"identifier": "StudioSdkInstallerUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/sdk/install/StudioSdkInstallerUtilTest.java"}, "test_case": {"identifier": "testSdkPatchesDisablementAndCorrectInstallerFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSdkPatchesDisablementAndCorrectInstallerFactory() {\n    FakeSettingsController settingsController = new FakeSettingsController(true);\n    settingsController.setDisableSdkPatches(false);\n    StudioSdkInstallerUtil sdkInstallerUtil = new StudioSdkInstallerUtil(settingsController);\n\n    MockFileOp fop = new MockFileOp();\n    final AndroidSdkHandler sdkHandler = new AndroidSdkHandler(null, new File(\"/sdk\"), fop);\n    InstallerFactory factory = sdkInstallerUtil.doCreateInstallerFactory(sdkHandler);\n    assertThat(factory).isInstanceOf(PatchInstallerFactory.class);\n\n    settingsController.setDisableSdkPatches(true);\n    factory = sdkInstallerUtil.doCreateInstallerFactory(sdkHandler);\n    assertThat(factory).isInstanceOf(BasicInstallerFactory.class);\n  }", "signature": "void testSdkPatchesDisablementAndCorrectInstallerFactory()", "full_signature": "@Test public void testSdkPatchesDisablementAndCorrectInstallerFactory()", "class_method_signature": "StudioSdkInstallerUtilTest.testSdkPatchesDisablementAndCorrectInstallerFactory()", "testcase": true, "constructor": false, "invocations": ["setDisableSdkPatches", "doCreateInstallerFactory", "isInstanceOf", "assertThat", "setDisableSdkPatches", "doCreateInstallerFactory", "isInstanceOf", "assertThat"]}, "focal_class": {"identifier": "StudioSdkInstallerUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SettingsController mySettingsController;", "modifier": "private final", "type": "SettingsController", "declarator": "mySettingsController", "var_name": "mySettingsController"}], "methods": [{"identifier": "createInstallerFactory", "parameters": "(@NotNull AndroidSdkHandler sdkHandler)", "modifiers": "@NotNull public static", "return": "InstallerFactory", "signature": "InstallerFactory createInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "full_signature": "@NotNull public static InstallerFactory createInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "class_method_signature": "StudioSdkInstallerUtil.createInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "testcase": false, "constructor": false}, {"identifier": "doCreateInstallerFactory", "parameters": "(@NotNull AndroidSdkHandler sdkHandler)", "modifiers": "@VisibleForTesting @NotNull", "return": "InstallerFactory", "signature": "InstallerFactory doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "full_signature": "@VisibleForTesting @NotNull InstallerFactory doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "class_method_signature": "StudioSdkInstallerUtil.doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "testcase": false, "constructor": false}, {"identifier": "StudioSdkInstallerUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " StudioSdkInstallerUtil()", "full_signature": "private  StudioSdkInstallerUtil()", "class_method_signature": "StudioSdkInstallerUtil.StudioSdkInstallerUtil()", "testcase": false, "constructor": true}, {"identifier": "StudioSdkInstallerUtil", "parameters": "(@NotNull SettingsController settingsController)", "modifiers": "@VisibleForTesting", "return": "", "signature": " StudioSdkInstallerUtil(@NotNull SettingsController settingsController)", "full_signature": "@VisibleForTesting  StudioSdkInstallerUtil(@NotNull SettingsController settingsController)", "class_method_signature": "StudioSdkInstallerUtil.StudioSdkInstallerUtil(@NotNull SettingsController settingsController)", "testcase": false, "constructor": true}], "file": "android/src/com/android/tools/idea/sdk/install/StudioSdkInstallerUtil.java"}, "focal_method": {"identifier": "doCreateInstallerFactory", "parameters": "(@NotNull AndroidSdkHandler sdkHandler)", "modifiers": "@VisibleForTesting @NotNull", "return": "InstallerFactory", "body": "@VisibleForTesting\n  @NotNull\n  InstallerFactory doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler) {\n    InstallerFactory factory;\n    InstallerFactory basicFactory = new BasicInstallerFactory();\n    if (mySettingsController.getDisableSdkPatches()) {\n      factory = basicFactory;\n    }\n    else {\n      factory = new PatchInstallerFactory();\n      factory.setFallbackFactory(basicFactory);\n    }\n    factory.setListenerFactory(new StudioSdkInstallListenerFactory(sdkHandler));\n    return factory;\n  }", "signature": "InstallerFactory doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "full_signature": "@VisibleForTesting @NotNull InstallerFactory doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "class_method_signature": "StudioSdkInstallerUtil.doCreateInstallerFactory(@NotNull AndroidSdkHandler sdkHandler)", "testcase": false, "constructor": false, "invocations": ["getDisableSdkPatches", "setFallbackFactory", "setListenerFactory"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}