{"test_class": {"identifier": "PresentFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/springframework/ldap/filter/PresentFilterTest.java"}, "test_case": {"identifier": "testPresentFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPresentFilter() {\n\t\tPresentFilter filter = new PresentFilter(\"foo\");\n\t\tassertThat(filter.encode()).isEqualTo(\"(foo=*)\");\n\n\t\tNotFilter notFilter = new NotFilter(new PresentFilter(\"foo\"));\n\t\tassertThat(notFilter.encode()).isEqualTo(\"(!(foo=*))\");\n\n\t\tAndFilter andFilter = new AndFilter();\n\t\tandFilter.and(new PresentFilter(\"foo\"));\n\t\tandFilter.and(new PresentFilter(\"bar\"));\n\t\tassertThat(andFilter.encode()).isEqualTo(\"(&(foo=*)(bar=*))\");\n\n\t\tandFilter = new AndFilter();\n\t\tandFilter.and(new PresentFilter(\"foo\"));\n\t\tandFilter.and(new NotFilter(new PresentFilter(\"bar\")));\n\t\tassertThat(andFilter.encode()).isEqualTo(\"(&(foo=*)(!(bar=*)))\");\n\t}", "signature": "void testPresentFilter()", "full_signature": "@Test public void testPresentFilter()", "class_method_signature": "PresentFilterTest.testPresentFilter()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "encode", "isEqualTo", "assertThat", "encode", "and", "and", "isEqualTo", "assertThat", "encode", "and", "and", "isEqualTo", "assertThat", "encode"]}, "focal_class": {"identifier": "PresentFilter", "superclass": "extends AbstractFilter", "interfaces": "", "fields": [{"original_string": "private String attribute;", "modifier": "private", "type": "String", "declarator": "attribute", "var_name": "attribute"}], "methods": [{"identifier": "PresentFilter", "parameters": "(String attribute)", "modifiers": "public", "return": "", "signature": " PresentFilter(String attribute)", "full_signature": "public  PresentFilter(String attribute)", "class_method_signature": "PresentFilter.PresentFilter(String attribute)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(StringBuffer buff)", "modifiers": "public", "return": "StringBuffer", "signature": "StringBuffer encode(StringBuffer buff)", "full_signature": "public StringBuffer encode(StringBuffer buff)", "class_method_signature": "PresentFilter.encode(StringBuffer buff)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PresentFilter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PresentFilter.hashCode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/filter/PresentFilter.java"}, "focal_method": {"identifier": "PresentFilter", "parameters": "(String attribute)", "modifiers": "public", "return": "", "body": "public PresentFilter(String attribute) {\n\t\tthis.attribute = attribute;\n\t}", "signature": " PresentFilter(String attribute)", "full_signature": "public  PresentFilter(String attribute)", "class_method_signature": "PresentFilter.PresentFilter(String attribute)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}