{"test_class": {"identifier": "BitConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "java/core/src/test/java/com/expedia/tesla/utils/BitConverterTest.java"}, "test_case": {"identifier": "testGetBytesLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetBytesLong() {\n\t\tassertArrayEquals(new byte[] { (byte) 0x90, 0x78, 0x45, 0x23, 0x01,\n\t\t\t\t(byte) 0xEF, (byte) 0xCD, (byte) 0xAB },\n\t\t\t\tBitConverter.getBytes(0xABCDEF0123457890L));\n\t}", "signature": "void testGetBytesLong()", "full_signature": "@Test public void testGetBytesLong()", "class_method_signature": "BitConverterTest.testGetBytesLong()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "getBytes"]}, "focal_class": {"identifier": "BitConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getBytes", "parameters": "(short v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(short v)", "full_signature": "public static byte[] getBytes(short v)", "class_method_signature": "BitConverter.getBytes(short v)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(int v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(int v)", "full_signature": "public static byte[] getBytes(int v)", "class_method_signature": "BitConverter.getBytes(int v)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(long v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(long v)", "full_signature": "public static byte[] getBytes(long v)", "class_method_signature": "BitConverter.getBytes(long v)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(float v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(float v)", "full_signature": "public static byte[] getBytes(float v)", "class_method_signature": "BitConverter.getBytes(float v)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(double v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(double v)", "full_signature": "public static byte[] getBytes(double v)", "class_method_signature": "BitConverter.getBytes(double v)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(String v)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(String v)", "full_signature": "public static byte[] getBytes(String v)", "class_method_signature": "BitConverter.getBytes(String v)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "String", "signature": "String toString(byte[] data, int offset)", "full_signature": "public static String toString(byte[] data, int offset)", "class_method_signature": "BitConverter.toString(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "toFloat", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "float", "signature": "float toFloat(byte[] data, int offset)", "full_signature": "public static float toFloat(byte[] data, int offset)", "class_method_signature": "BitConverter.toFloat(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "toDouble", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "double", "signature": "double toDouble(byte[] data, int offset)", "full_signature": "public static double toDouble(byte[] data, int offset)", "class_method_signature": "BitConverter.toDouble(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "toInt16", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "short", "signature": "short toInt16(byte[] data, int offset)", "full_signature": "public static short toInt16(byte[] data, int offset)", "class_method_signature": "BitConverter.toInt16(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "toInt32", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "int", "signature": "int toInt32(byte[] data, int offset)", "full_signature": "public static int toInt32(byte[] data, int offset)", "class_method_signature": "BitConverter.toInt32(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "toInt64", "parameters": "(byte[] data, int offset)", "modifiers": "public static", "return": "long", "signature": "long toInt64(byte[] data, int offset)", "full_signature": "public static long toInt64(byte[] data, int offset)", "class_method_signature": "BitConverter.toInt64(byte[] data, int offset)", "testcase": false, "constructor": false}, {"identifier": "asByteArray", "parameters": "(UUID uuid)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] asByteArray(UUID uuid)", "full_signature": "public static byte[] asByteArray(UUID uuid)", "class_method_signature": "BitConverter.asByteArray(UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "toUUID", "parameters": "(byte[] byteArray)", "modifiers": "public static", "return": "UUID", "signature": "UUID toUUID(byte[] byteArray)", "full_signature": "public static UUID toUUID(byte[] byteArray)", "class_method_signature": "BitConverter.toUUID(byte[] byteArray)", "testcase": false, "constructor": false}, {"identifier": "toUUID", "parameters": "(byte[] byteArray, int offset)", "modifiers": "public static", "return": "UUID", "signature": "UUID toUUID(byte[] byteArray, int offset)", "full_signature": "public static UUID toUUID(byte[] byteArray, int offset)", "class_method_signature": "BitConverter.toUUID(byte[] byteArray, int offset)", "testcase": false, "constructor": false}], "file": "java/core/src/main/java/com/expedia/tesla/utils/BitConverter.java"}, "focal_method": {"identifier": "getBytes", "parameters": "(short v)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] getBytes(short v) {\n\t\tbyte[] writeBuffer = new byte[2];\n\t\twriteBuffer[0] = (byte) ((v >>> 0) & 0xFF);\n\t\twriteBuffer[1] = (byte) ((v >>> 8) & 0xFF);\n\t\treturn writeBuffer;\n\t}", "signature": "byte[] getBytes(short v)", "full_signature": "public static byte[] getBytes(short v)", "class_method_signature": "BitConverter.getBytes(short v)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29929519, "url": "https://github.com/ExpediaDotCom/tesla", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 15, "size": 819, "license": "licensed"}}