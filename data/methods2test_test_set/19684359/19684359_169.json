{"test_class": {"identifier": "BigQueryTableSchemaTest", "superclass": "", "interfaces": "", "fields": [], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/output/BigQueryTableSchemaTest.java"}, "test_case": {"identifier": "testBigQueryTableSchema", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBigQueryTableSchema() throws IOException {\n    ImmutableList<BigQueryTableFieldSchema> fields =\n        ImmutableList.of(\n            new BigQueryTableFieldSchema().setName(\"Field1\").setType(\"STRING\"),\n            new BigQueryTableFieldSchema().setName(\"Field2\").setType(\"INTEGER\"),\n            new BigQueryTableFieldSchema()\n                .setName(\"Field3\")\n                .setType(\"RECORD\")\n                .setFields(\n                    ImmutableList.of(\n                        new BigQueryTableFieldSchema().setName(\"NestedField1\").setType(\"STRING\"),\n                        new BigQueryTableFieldSchema()\n                            .setName(\"NestedField2\")\n                            .setType(\"INTEGER\"))));\n    BigQueryTableSchema tableSchema = new BigQueryTableSchema().setFields(fields);\n    String json = BigQueryTableHelper.getTableSchemaJson(tableSchema.get());\n    String expectedJson =\n        \"{\\\"fields\\\":[{\\\"name\\\":\\\"Field1\\\",\\\"type\\\":\\\"STRING\\\"},\"\n            + \"{\\\"name\\\":\\\"Field2\\\",\\\"type\\\":\\\"INTEGER\\\"},\"\n            + \"{\\\"fields\\\":[{\\\"name\\\":\\\"NestedField1\\\",\\\"type\\\":\\\"STRING\\\"},\"\n            + \"{\\\"name\\\":\\\"NestedField2\\\",\\\"type\\\":\\\"INTEGER\\\"}],\"\n            + \"\\\"name\\\":\\\"Field3\\\",\\\"type\\\":\\\"RECORD\\\"}]}\";\n    assertThat(json).isEqualTo(expectedJson);\n  }", "signature": "void testBigQueryTableSchema()", "full_signature": "@Test public void testBigQueryTableSchema()", "class_method_signature": "BigQueryTableSchemaTest.testBigQueryTableSchema()", "testcase": true, "constructor": false, "invocations": ["of", "setType", "setName", "setType", "setName", "setFields", "setType", "setName", "of", "setType", "setName", "setType", "setName", "setFields", "getTableSchemaJson", "get", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "BigQueryTableSchema", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TableSchema tableSchema;", "modifier": "private final", "type": "TableSchema", "declarator": "tableSchema", "var_name": "tableSchema"}], "methods": [{"identifier": "BigQueryTableSchema", "parameters": "()", "modifiers": "public", "return": "", "signature": " BigQueryTableSchema()", "full_signature": "public  BigQueryTableSchema()", "class_method_signature": "BigQueryTableSchema.BigQueryTableSchema()", "testcase": false, "constructor": true}, {"identifier": "BigQueryTableSchema", "parameters": "(TableSchema tableSchema)", "modifiers": "", "return": "", "signature": " BigQueryTableSchema(TableSchema tableSchema)", "full_signature": "  BigQueryTableSchema(TableSchema tableSchema)", "class_method_signature": "BigQueryTableSchema.BigQueryTableSchema(TableSchema tableSchema)", "testcase": false, "constructor": true}, {"identifier": "setFields", "parameters": "(List<BigQueryTableFieldSchema> bigQueryTableFields)", "modifiers": "public", "return": "BigQueryTableSchema", "signature": "BigQueryTableSchema setFields(List<BigQueryTableFieldSchema> bigQueryTableFields)", "full_signature": "public BigQueryTableSchema setFields(List<BigQueryTableFieldSchema> bigQueryTableFields)", "class_method_signature": "BigQueryTableSchema.setFields(List<BigQueryTableFieldSchema> bigQueryTableFields)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BigQueryTableSchema.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "BigQueryTableSchema.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "", "return": "TableSchema", "signature": "TableSchema get()", "full_signature": " TableSchema get()", "class_method_signature": "BigQueryTableSchema.get()", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(TableSchema tableSchema)", "modifiers": "static", "return": "BigQueryTableSchema", "signature": "BigQueryTableSchema wrap(TableSchema tableSchema)", "full_signature": "static BigQueryTableSchema wrap(TableSchema tableSchema)", "class_method_signature": "BigQueryTableSchema.wrap(TableSchema tableSchema)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/output/BigQueryTableSchema.java"}, "focal_method": {"identifier": "BigQueryTableSchema", "parameters": "()", "modifiers": "public", "return": "", "body": "public BigQueryTableSchema() {\n    this.tableSchema = new TableSchema();\n  }", "signature": " BigQueryTableSchema()", "full_signature": "public  BigQueryTableSchema()", "class_method_signature": "BigQueryTableSchema.BigQueryTableSchema()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}