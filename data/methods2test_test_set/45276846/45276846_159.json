{"test_class": {"identifier": "TestStatefulService", "superclass": "extends BasicReusableHostTestCase", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TestResults testResults = new TestResults();", "modifier": "@Rule\n    public", "type": "TestResults", "declarator": "testResults = new TestResults()", "var_name": "testResults"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestStatefulService.java"}, "test_case": {"identifier": "forwardWithNullBodyResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void forwardWithNullBodyResponse() throws Throwable {\n\n        int nodeCount = 2;\n\n        this.host.setPeerSynchronizationEnabled(true);\n        this.host.setUpPeerHosts(nodeCount);\n        this.host.joinNodesAndVerifyConvergence(nodeCount, true);\n        this.host.setNodeGroupQuorum(nodeCount);\n\n        VerificationHost targetHost = this.host.getPeerHost();\n        TestRequestSender sender = this.host.getTestRequestSender();\n\n        for (VerificationHost host : this.host.getInProcessHostMap().values()) {\n            host.startFactory(new NoBodyExampleService());\n        }\n        URI serviceUri = UriUtils.buildUri(targetHost.getUri(), NoBodyExampleService.FACTORY_LINK);\n        host.waitForReplicatedFactoryServiceAvailable(serviceUri);\n\n\n        String documentSelfLink = UriUtils.buildUriPath(NoBodyExampleService.FACTORY_LINK, \"foo\");\n\n        // create a doc\n        ExampleServiceState initState = new ExampleServiceState();\n        initState.name = \"foo\";\n        initState.counter = 0L;\n        initState.documentSelfLink = documentSelfLink;\n\n        Operation post = Operation.createPost(targetHost, NoBodyExampleService.FACTORY_LINK).setBody(initState);\n        sender.sendAndWait(post, ExampleServiceState.class);\n\n        VerificationHost ownerNode = this.host.getOwnerPeer(documentSelfLink);\n        VerificationHost nonOwnerNode = this.host.getNonOwnerPeer(documentSelfLink);\n\n        ExampleServiceState updateState;\n        Operation patch;\n        Operation response;\n\n        // update on owner node\n        updateState = new ExampleServiceState();\n        updateState.counter = 1L;\n        patch = Operation.createPatch(ownerNode, documentSelfLink).setBody(updateState);\n        response = ownerNode.getTestRequestSender().sendAndWait(patch);\n        assertNull(response.getBodyRaw());\n\n        // update on owner node with remote call\n        updateState = new ExampleServiceState();\n        updateState.counter = 2L;\n        patch = Operation.createPatch(ownerNode, documentSelfLink).setBody(updateState).forceRemote();\n        response = ownerNode.getTestRequestSender().sendAndWait(patch);\n        assertNull(response.getBodyRaw());\n\n        // update on non-owner node\n        updateState = new ExampleServiceState();\n        updateState.counter = 3L;\n        patch = Operation.createPatch(nonOwnerNode, documentSelfLink).setBody(updateState);\n        response = nonOwnerNode.getTestRequestSender().sendAndWait(patch);\n        assertNull(response.getBodyRaw());\n\n        // update on non-owner node with remote call\n        updateState = new ExampleServiceState();\n        updateState.counter = 4L;\n        patch = Operation.createPatch(nonOwnerNode, documentSelfLink).setBody(updateState).forceRemote();\n        response = nonOwnerNode.getTestRequestSender().sendAndWait(patch);\n        assertNull(response.getBodyRaw());\n\n    }", "signature": "void forwardWithNullBodyResponse()", "full_signature": "@Test public void forwardWithNullBodyResponse()", "class_method_signature": "TestStatefulService.forwardWithNullBodyResponse()", "testcase": true, "constructor": false, "invocations": ["setPeerSynchronizationEnabled", "setUpPeerHosts", "joinNodesAndVerifyConvergence", "setNodeGroupQuorum", "getPeerHost", "getTestRequestSender", "values", "getInProcessHostMap", "startFactory", "buildUri", "getUri", "waitForReplicatedFactoryServiceAvailable", "buildUriPath", "setBody", "createPost", "sendAndWait", "getOwnerPeer", "getNonOwnerPeer", "setBody", "createPatch", "sendAndWait", "getTestRequestSender", "assertNull", "getBodyRaw", "forceRemote", "setBody", "createPatch", "sendAndWait", "getTestRequestSender", "assertNull", "getBodyRaw", "setBody", "createPatch", "sendAndWait", "getTestRequestSender", "assertNull", "getBodyRaw", "forceRemote", "setBody", "createPatch", "sendAndWait", "getTestRequestSender", "assertNull", "getBodyRaw"]}, "focal_class": {"identifier": "StatefulService", "superclass": "", "interfaces": "implements Service", "fields": [{"original_string": "private final RuntimeContext context = new RuntimeContext();", "modifier": "private final", "type": "RuntimeContext", "declarator": "context = new RuntimeContext()", "var_name": "context"}, {"original_string": "private static final int STOP_FLAG = 0x00000002;", "modifier": "private static final", "type": "int", "declarator": "STOP_FLAG = 0x00000002", "var_name": "STOP_FLAG"}, {"original_string": "private static final int RETURN_TRUE_FLAG = 0x10000000;", "modifier": "private static final", "type": "int", "declarator": "RETURN_TRUE_FLAG = 0x10000000", "var_name": "RETURN_TRUE_FLAG"}], "methods": [{"identifier": "StatefulService", "parameters": "(Class<? extends ServiceDocument> stateType)", "modifiers": "public", "return": "", "signature": " StatefulService(Class<? extends ServiceDocument> stateType)", "full_signature": "public  StatefulService(Class<? extends ServiceDocument> stateType)", "class_method_signature": "StatefulService.StatefulService(Class<? extends ServiceDocument> stateType)", "testcase": false, "constructor": true}, {"identifier": "getOperationProcessingChain", "parameters": "()", "modifiers": "@Override public", "return": "OperationProcessingChain", "signature": "OperationProcessingChain getOperationProcessingChain()", "full_signature": "@Override public OperationProcessingChain getOperationProcessingChain()", "class_method_signature": "StatefulService.getOperationProcessingChain()", "testcase": false, "constructor": false}, {"identifier": "getProcessingStage", "parameters": "()", "modifiers": "@Override public", "return": "Service.ProcessingStage", "signature": "Service.ProcessingStage getProcessingStage()", "full_signature": "@Override public Service.ProcessingStage getProcessingStage()", "class_method_signature": "StatefulService.getProcessingStage()", "testcase": false, "constructor": false}, {"identifier": "handleCreate", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleCreate(Operation post)", "full_signature": "@Override public void handleCreate(Operation post)", "class_method_signature": "StatefulService.handleCreate(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handleStart", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleStart(Operation post)", "full_signature": "@Override public void handleStart(Operation post)", "class_method_signature": "StatefulService.handleStart(Operation post)", "testcase": false, "constructor": false}, {"identifier": "authorizeRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void authorizeRequest(Operation op)", "full_signature": "@Override public void authorizeRequest(Operation op)", "class_method_signature": "StatefulService.authorizeRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "queueRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean queueRequest(Operation op)", "full_signature": "@Override public boolean queueRequest(Operation op)", "class_method_signature": "StatefulService.queueRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "checkServiceStopped", "parameters": "(Operation op, boolean stop)", "modifiers": "private", "return": "boolean", "signature": "boolean checkServiceStopped(Operation op, boolean stop)", "full_signature": "private boolean checkServiceStopped(Operation op, boolean stop)", "class_method_signature": "StatefulService.checkServiceStopped(Operation op, boolean stop)", "testcase": false, "constructor": false}, {"identifier": "cancelPendingRequests", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void cancelPendingRequests(Operation op)", "full_signature": "private void cancelPendingRequests(Operation op)", "class_method_signature": "StatefulService.cancelPendingRequests(Operation op)", "testcase": false, "constructor": false}, {"identifier": "queueRequestInternal", "parameters": "(final Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean queueRequestInternal(final Operation op)", "full_signature": "private boolean queueRequestInternal(final Operation op)", "class_method_signature": "StatefulService.queueRequestInternal(final Operation op)", "testcase": false, "constructor": false}, {"identifier": "queueGetRequestInternal", "parameters": "(final Operation op, int stopped)", "modifiers": "private", "return": "int", "signature": "int queueGetRequestInternal(final Operation op, int stopped)", "full_signature": "private int queueGetRequestInternal(final Operation op, int stopped)", "class_method_signature": "StatefulService.queueGetRequestInternal(final Operation op, int stopped)", "testcase": false, "constructor": false}, {"identifier": "queueUpdateRequestInternal", "parameters": "(final Operation op, int stopped)", "modifiers": "private", "return": "int", "signature": "int queueUpdateRequestInternal(final Operation op, int stopped)", "full_signature": "private int queueUpdateRequestInternal(final Operation op, int stopped)", "class_method_signature": "StatefulService.queueUpdateRequestInternal(final Operation op, int stopped)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation request)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(Operation request)", "full_signature": "@Override public void handleRequest(Operation request)", "class_method_signature": "StatefulService.handleRequest(Operation request)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation request, OperationProcessingStage opProcessingStage)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(Operation request, OperationProcessingStage opProcessingStage)", "full_signature": "@Override public void handleRequest(Operation request, OperationProcessingStage opProcessingStage)", "class_method_signature": "StatefulService.handleRequest(Operation request, OperationProcessingStage opProcessingStage)", "testcase": false, "constructor": false}, {"identifier": "handleRequestUnhandledException", "parameters": "(Operation request, boolean isCompletionNested,\n            Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleRequestUnhandledException(Operation request, boolean isCompletionNested,\n            Throwable e)", "full_signature": "private void handleRequestUnhandledException(Operation request, boolean isCompletionNested,\n            Throwable e)", "class_method_signature": "StatefulService.handleRequestUnhandledException(Operation request, boolean isCompletionNested,\n            Throwable e)", "testcase": false, "constructor": false}, {"identifier": "handleRequestStageExecutingServiceHandler", "parameters": "(Operation request,\n            OperationProcessingStage opProcessingStage, boolean isCompletionNested)", "modifiers": "private", "return": "boolean", "signature": "boolean handleRequestStageExecutingServiceHandler(Operation request,\n            OperationProcessingStage opProcessingStage, boolean isCompletionNested)", "full_signature": "private boolean handleRequestStageExecutingServiceHandler(Operation request,\n            OperationProcessingStage opProcessingStage, boolean isCompletionNested)", "class_method_signature": "StatefulService.handleRequestStageExecutingServiceHandler(Operation request,\n            OperationProcessingStage opProcessingStage, boolean isCompletionNested)", "testcase": false, "constructor": false}, {"identifier": "handleRequestLoadingAndLinkingState", "parameters": "(Operation request)", "modifiers": "private", "return": "boolean", "signature": "boolean handleRequestLoadingAndLinkingState(Operation request)", "full_signature": "private boolean handleRequestLoadingAndLinkingState(Operation request)", "class_method_signature": "StatefulService.handleRequestLoadingAndLinkingState(Operation request)", "testcase": false, "constructor": false}, {"identifier": "validateOwnerSelectedUpdate", "parameters": "(Operation request)", "modifiers": "private", "return": "boolean", "signature": "boolean validateOwnerSelectedUpdate(Operation request)", "full_signature": "private boolean validateOwnerSelectedUpdate(Operation request)", "class_method_signature": "StatefulService.validateOwnerSelectedUpdate(Operation request)", "testcase": false, "constructor": false}, {"identifier": "synchWithPeersAndReProcess", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void synchWithPeersAndReProcess(Operation op)", "full_signature": "private void synchWithPeersAndReProcess(Operation op)", "class_method_signature": "StatefulService.synchWithPeersAndReProcess(Operation op)", "testcase": false, "constructor": false}, {"identifier": "validateUpdate", "parameters": "(Operation request)", "modifiers": "private", "return": "boolean", "signature": "boolean validateUpdate(Operation request)", "full_signature": "private boolean validateUpdate(Operation request)", "class_method_signature": "StatefulService.validateUpdate(Operation request)", "testcase": false, "constructor": false}, {"identifier": "handlePost", "parameters": "(Operation post)", "modifiers": "@RouteDocumentation(supportLevel = SupportLevel.NOT_SUPPORTED) public", "return": "void", "signature": "void handlePost(Operation post)", "full_signature": "@RouteDocumentation(supportLevel = SupportLevel.NOT_SUPPORTED) public void handlePost(Operation post)", "class_method_signature": "StatefulService.handlePost(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handleDelete", "parameters": "(Operation delete)", "modifiers": "@RouteDocumentation(description = \"Delete this service instance\") public", "return": "void", "signature": "void handleDelete(Operation delete)", "full_signature": "@RouteDocumentation(description = \"Delete this service instance\") public void handleDelete(Operation delete)", "class_method_signature": "StatefulService.handleDelete(Operation delete)", "testcase": false, "constructor": false}, {"identifier": "handleStop", "parameters": "(Operation delete)", "modifiers": "@Override public", "return": "void", "signature": "void handleStop(Operation delete)", "full_signature": "@Override public void handleStop(Operation delete)", "class_method_signature": "StatefulService.handleStop(Operation delete)", "testcase": false, "constructor": false}, {"identifier": "handlePatch", "parameters": "(Operation patch)", "modifiers": "@RouteDocumentation(supportLevel = SupportLevel.NOT_SUPPORTED) public", "return": "void", "signature": "void handlePatch(Operation patch)", "full_signature": "@RouteDocumentation(supportLevel = SupportLevel.NOT_SUPPORTED) public void handlePatch(Operation patch)", "class_method_signature": "StatefulService.handlePatch(Operation patch)", "testcase": false, "constructor": false}, {"identifier": "handleOptions", "parameters": "(Operation options)", "modifiers": "public", "return": "void", "signature": "void handleOptions(Operation options)", "full_signature": "public void handleOptions(Operation options)", "class_method_signature": "StatefulService.handleOptions(Operation options)", "testcase": false, "constructor": false}, {"identifier": "handlePut", "parameters": "(Operation put)", "modifiers": "@RouteDocumentation(description = \"Replace current state with the body of the request\") public", "return": "void", "signature": "void handlePut(Operation put)", "full_signature": "@RouteDocumentation(description = \"Replace current state with the body of the request\") public void handlePut(Operation put)", "class_method_signature": "StatefulService.handlePut(Operation put)", "testcase": false, "constructor": false}, {"identifier": "handleGet", "parameters": "(Operation get)", "modifiers": "@RouteDocumentation(description = \"Read the service document\") public", "return": "void", "signature": "void handleGet(Operation get)", "full_signature": "@RouteDocumentation(description = \"Read the service document\") public void handleGet(Operation get)", "class_method_signature": "StatefulService.handleGet(Operation get)", "testcase": false, "constructor": false}, {"identifier": "handleGetSimple", "parameters": "(Operation get)", "modifiers": "private", "return": "void", "signature": "void handleGetSimple(Operation get)", "full_signature": "private void handleGetSimple(Operation get)", "class_method_signature": "StatefulService.handleGetSimple(Operation get)", "testcase": false, "constructor": false}, {"identifier": "handleRequestCompletion", "parameters": "(Operation op, Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleRequestCompletion(Operation op, Throwable e)", "full_signature": "private void handleRequestCompletion(Operation op, Throwable e)", "class_method_signature": "StatefulService.handleRequestCompletion(Operation op, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "handleRequestCompletionSpecialCases", "parameters": "(Operation op, Throwable e)", "modifiers": "private", "return": "boolean", "signature": "boolean handleRequestCompletionSpecialCases(Operation op, Throwable e)", "full_signature": "private boolean handleRequestCompletionSpecialCases(Operation op, Throwable e)", "class_method_signature": "StatefulService.handleRequestCompletionSpecialCases(Operation op, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "handleOptionsCompletion", "parameters": "(Operation options)", "modifiers": "protected", "return": "void", "signature": "void handleOptionsCompletion(Operation options)", "full_signature": "protected void handleOptionsCompletion(Operation options)", "class_method_signature": "StatefulService.handleOptionsCompletion(Operation options)", "testcase": false, "constructor": false}, {"identifier": "isIndexed", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isIndexed()", "full_signature": "private boolean isIndexed()", "class_method_signature": "StatefulService.isIndexed()", "testcase": false, "constructor": false}, {"identifier": "handleDeleteCompletion", "parameters": "(Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean handleDeleteCompletion(Operation op)", "full_signature": "private boolean handleDeleteCompletion(Operation op)", "class_method_signature": "StatefulService.handleDeleteCompletion(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleStopCompletion", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleStopCompletion(Operation op)", "full_signature": "private void handleStopCompletion(Operation op)", "class_method_signature": "StatefulService.handleStopCompletion(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStageReplicationProposal", "parameters": "(Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean processCompletionStageReplicationProposal(Operation op)", "full_signature": "private boolean processCompletionStageReplicationProposal(Operation op)", "class_method_signature": "StatefulService.processCompletionStageReplicationProposal(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStageCommit", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void processCompletionStageCommit(Operation op)", "full_signature": "private void processCompletionStageCommit(Operation op)", "class_method_signature": "StatefulService.processCompletionStageCommit(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStageIndexing", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void processCompletionStageIndexing(Operation op)", "full_signature": "private void processCompletionStageIndexing(Operation op)", "class_method_signature": "StatefulService.processCompletionStageIndexing(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStageUpdateAuthzArtifacts", "parameters": "(Operation op)", "modifiers": "protected", "return": "void", "signature": "void processCompletionStageUpdateAuthzArtifacts(Operation op)", "full_signature": "protected void processCompletionStageUpdateAuthzArtifacts(Operation op)", "class_method_signature": "StatefulService.processCompletionStageUpdateAuthzArtifacts(Operation op)", "testcase": false, "constructor": false}, {"identifier": "checkAndNestAuthupdateCompletionStage", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void checkAndNestAuthupdateCompletionStage(Operation op)", "full_signature": "private void checkAndNestAuthupdateCompletionStage(Operation op)", "class_method_signature": "StatefulService.checkAndNestAuthupdateCompletionStage(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStageTransactionNotification", "parameters": "(Operation op, Throwable e)", "modifiers": "private", "return": "void", "signature": "void processCompletionStageTransactionNotification(Operation op, Throwable e)", "full_signature": "private void processCompletionStageTransactionNotification(Operation op, Throwable e)", "class_method_signature": "StatefulService.processCompletionStageTransactionNotification(Operation op, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "processCompletionStagePublishAndComplete", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void processCompletionStagePublishAndComplete(Operation op)", "full_signature": "private void processCompletionStagePublishAndComplete(Operation op)", "class_method_signature": "StatefulService.processCompletionStagePublishAndComplete(Operation op)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void publish(Operation op)", "full_signature": "private void publish(Operation op)", "class_method_signature": "StatefulService.publish(Operation op)", "testcase": false, "constructor": false}, {"identifier": "failRequest", "parameters": "(Operation op, Throwable e)", "modifiers": "private", "return": "void", "signature": "void failRequest(Operation op, Throwable e)", "full_signature": "private void failRequest(Operation op, Throwable e)", "class_method_signature": "StatefulService.failRequest(Operation op, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "failRequest", "parameters": "(Operation op, Throwable e, boolean shouldRetry)", "modifiers": "private", "return": "void", "signature": "void failRequest(Operation op, Throwable e, boolean shouldRetry)", "full_signature": "private void failRequest(Operation op, Throwable e, boolean shouldRetry)", "class_method_signature": "StatefulService.failRequest(Operation op, Throwable e, boolean shouldRetry)", "testcase": false, "constructor": false}, {"identifier": "failRequestLimitExceeded", "parameters": "(final Operation op, String queueDescription)", "modifiers": "private", "return": "void", "signature": "void failRequestLimitExceeded(final Operation op, String queueDescription)", "full_signature": "private void failRequestLimitExceeded(final Operation op, String queueDescription)", "class_method_signature": "StatefulService.failRequestLimitExceeded(final Operation op, String queueDescription)", "testcase": false, "constructor": false}, {"identifier": "updatePerOperationStats", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void updatePerOperationStats(Operation op)", "full_signature": "private void updatePerOperationStats(Operation op)", "class_method_signature": "StatefulService.updatePerOperationStats(Operation op)", "testcase": false, "constructor": false}, {"identifier": "loadAndLinkState", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void loadAndLinkState(Operation op)", "full_signature": "private void loadAndLinkState(Operation op)", "class_method_signature": "StatefulService.loadAndLinkState(Operation op)", "testcase": false, "constructor": false}, {"identifier": "processPending", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void processPending(Operation op)", "full_signature": "private void processPending(Operation op)", "class_method_signature": "StatefulService.processPending(Operation op)", "testcase": false, "constructor": false}, {"identifier": "dequeueRequest", "parameters": "()", "modifiers": "@Override public", "return": "Operation", "signature": "Operation dequeueRequest()", "full_signature": "@Override public Operation dequeueRequest()", "class_method_signature": "StatefulService.dequeueRequest()", "testcase": false, "constructor": false}, {"identifier": "applyUpdate", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void applyUpdate(Operation op)", "full_signature": "private void applyUpdate(Operation op)", "class_method_signature": "StatefulService.applyUpdate(Operation op)", "testcase": false, "constructor": false}, {"identifier": "synchronizeWithPeers", "parameters": "(Operation request, Throwable failure)", "modifiers": "private", "return": "void", "signature": "void synchronizeWithPeers(Operation request, Throwable failure)", "full_signature": "private void synchronizeWithPeers(Operation request, Throwable failure)", "class_method_signature": "StatefulService.synchronizeWithPeers(Operation request, Throwable failure)", "testcase": false, "constructor": false}, {"identifier": "handleSynchronizeWithPeersCompletion", "parameters": "(Operation request, Throwable failure,\n            boolean wasOwner, Operation synchRsp, Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleSynchronizeWithPeersCompletion(Operation request, Throwable failure,\n            boolean wasOwner, Operation synchRsp, Throwable e)", "full_signature": "private void handleSynchronizeWithPeersCompletion(Operation request, Throwable failure,\n            boolean wasOwner, Operation synchRsp, Throwable e)", "class_method_signature": "StatefulService.handleSynchronizeWithPeersCompletion(Operation request, Throwable failure,\n            boolean wasOwner, Operation synchRsp, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "handleSynchFailure", "parameters": "(Operation request, Operation synchRsp, Throwable e)", "modifiers": "private", "return": "void", "signature": "void handleSynchFailure(Operation request, Operation synchRsp, Throwable e)", "full_signature": "private void handleSynchFailure(Operation request, Operation synchRsp, Throwable e)", "class_method_signature": "StatefulService.handleSynchFailure(Operation request, Operation synchRsp, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "completeSynchronizationRequest", "parameters": "(Operation request, Throwable failure,\n            boolean isStateUpdated)", "modifiers": "private", "return": "void", "signature": "void completeSynchronizationRequest(Operation request, Throwable failure,\n            boolean isStateUpdated)", "full_signature": "private void completeSynchronizationRequest(Operation request, Throwable failure,\n            boolean isStateUpdated)", "class_method_signature": "StatefulService.completeSynchronizationRequest(Operation request, Throwable failure,\n            boolean isStateUpdated)", "testcase": false, "constructor": false}, {"identifier": "setStat", "parameters": "(String name, double newValue)", "modifiers": "@Override public", "return": "void", "signature": "void setStat(String name, double newValue)", "full_signature": "@Override public void setStat(String name, double newValue)", "class_method_signature": "StatefulService.setStat(String name, double newValue)", "testcase": false, "constructor": false}, {"identifier": "setStat", "parameters": "(ServiceStat s, double newValue)", "modifiers": "@Override public", "return": "void", "signature": "void setStat(ServiceStat s, double newValue)", "full_signature": "@Override public void setStat(ServiceStat s, double newValue)", "class_method_signature": "StatefulService.setStat(ServiceStat s, double newValue)", "testcase": false, "constructor": false}, {"identifier": "adjustStat", "parameters": "(ServiceStat s, double delta)", "modifiers": "@Override public", "return": "void", "signature": "void adjustStat(ServiceStat s, double delta)", "full_signature": "@Override public void adjustStat(ServiceStat s, double delta)", "class_method_signature": "StatefulService.adjustStat(ServiceStat s, double delta)", "testcase": false, "constructor": false}, {"identifier": "adjustStat", "parameters": "(String name, double delta)", "modifiers": "@Override public", "return": "void", "signature": "void adjustStat(String name, double delta)", "full_signature": "@Override public void adjustStat(String name, double delta)", "class_method_signature": "StatefulService.adjustStat(String name, double delta)", "testcase": false, "constructor": false}, {"identifier": "getStat", "parameters": "(String name)", "modifiers": "@Override public", "return": "ServiceStat", "signature": "ServiceStat getStat(String name)", "full_signature": "@Override public ServiceStat getStat(String name)", "class_method_signature": "StatefulService.getStat(String name)", "testcase": false, "constructor": false}, {"identifier": "getHistogramStat", "parameters": "(String name)", "modifiers": "private", "return": "ServiceStat", "signature": "ServiceStat getHistogramStat(String name)", "full_signature": "private ServiceStat getHistogramStat(String name)", "class_method_signature": "StatefulService.getHistogramStat(String name)", "testcase": false, "constructor": false}, {"identifier": "allocateUtilityService", "parameters": "(boolean forceAllocate)", "modifiers": "private", "return": "boolean", "signature": "boolean allocateUtilityService(boolean forceAllocate)", "full_signature": "private boolean allocateUtilityService(boolean forceAllocate)", "class_method_signature": "StatefulService.allocateUtilityService(boolean forceAllocate)", "testcase": false, "constructor": false}, {"identifier": "getSelfLink", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSelfLink()", "full_signature": "@Override public String getSelfLink()", "class_method_signature": "StatefulService.getSelfLink()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "StatefulService.getUri()", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "@Override public", "return": "ServiceHost", "signature": "ServiceHost getHost()", "full_signature": "@Override public ServiceHost getHost()", "class_method_signature": "StatefulService.getHost()", "testcase": false, "constructor": false}, {"identifier": "hasOption", "parameters": "(Service.ServiceOption cap)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasOption(Service.ServiceOption cap)", "full_signature": "@Override public boolean hasOption(Service.ServiceOption cap)", "class_method_signature": "StatefulService.hasOption(Service.ServiceOption cap)", "testcase": false, "constructor": false}, {"identifier": "toggleOption", "parameters": "(ServiceOption option, boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void toggleOption(ServiceOption option, boolean enable)", "full_signature": "@Override public void toggleOption(ServiceOption option, boolean enable)", "class_method_signature": "StatefulService.toggleOption(ServiceOption option, boolean enable)", "testcase": false, "constructor": false}, {"identifier": "setSelfLink", "parameters": "(String path)", "modifiers": "@Override public", "return": "void", "signature": "void setSelfLink(String path)", "full_signature": "@Override public void setSelfLink(String path)", "class_method_signature": "StatefulService.setSelfLink(String path)", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(ServiceHost serviceHost)", "modifiers": "@Override public", "return": "void", "signature": "void setHost(ServiceHost serviceHost)", "full_signature": "@Override public void setHost(ServiceHost serviceHost)", "class_method_signature": "StatefulService.setHost(ServiceHost serviceHost)", "testcase": false, "constructor": false}, {"identifier": "setOperationProcessingChain", "parameters": "(OperationProcessingChain opProcessingChain)", "modifiers": "@Override public", "return": "void", "signature": "void setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "full_signature": "@Override public void setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "class_method_signature": "StatefulService.setOperationProcessingChain(OperationProcessingChain opProcessingChain)", "testcase": false, "constructor": false}, {"identifier": "setOperationQueueLimit", "parameters": "(int limit)", "modifiers": "protected", "return": "void", "signature": "void setOperationQueueLimit(int limit)", "full_signature": "protected void setOperationQueueLimit(int limit)", "class_method_signature": "StatefulService.setOperationQueueLimit(int limit)", "testcase": false, "constructor": false}, {"identifier": "setProcessingStage", "parameters": "(ProcessingStage stage)", "modifiers": "@Override public", "return": "void", "signature": "void setProcessingStage(ProcessingStage stage)", "full_signature": "@Override public void setProcessingStage(ProcessingStage stage)", "class_method_signature": "StatefulService.setProcessingStage(ProcessingStage stage)", "testcase": false, "constructor": false}, {"identifier": "getUtilityService", "parameters": "(String uriPath)", "modifiers": "@Override public", "return": "Service", "signature": "Service getUtilityService(String uriPath)", "full_signature": "@Override public Service getUtilityService(String uriPath)", "class_method_signature": "StatefulService.getUtilityService(String uriPath)", "testcase": false, "constructor": false}, {"identifier": "sendRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void sendRequest(Operation op)", "full_signature": "@Override public void sendRequest(Operation op)", "class_method_signature": "StatefulService.sendRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "prepareRequest", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void prepareRequest(Operation op)", "full_signature": "private void prepareRequest(Operation op)", "class_method_signature": "StatefulService.prepareRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "getStateDescription", "parameters": "()", "modifiers": "public", "return": "ServiceDocumentDescription", "signature": "ServiceDocumentDescription getStateDescription()", "full_signature": "public ServiceDocumentDescription getStateDescription()", "class_method_signature": "StatefulService.getStateDescription()", "testcase": false, "constructor": false}, {"identifier": "getDocumentTemplate", "parameters": "()", "modifiers": "@Override public", "return": "ServiceDocument", "signature": "ServiceDocument getDocumentTemplate()", "full_signature": "@Override public ServiceDocument getDocumentTemplate()", "class_method_signature": "StatefulService.getDocumentTemplate()", "testcase": false, "constructor": false}, {"identifier": "logSevere", "parameters": "(Throwable e)", "modifiers": "public", "return": "void", "signature": "void logSevere(Throwable e)", "full_signature": "public void logSevere(Throwable e)", "class_method_signature": "StatefulService.logSevere(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "logSevere", "parameters": "(String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void logSevere(String fmt, Object... args)", "full_signature": "public void logSevere(String fmt, Object... args)", "class_method_signature": "StatefulService.logSevere(String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "logSevere", "parameters": "(Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void logSevere(Supplier<String> messageSupplier)", "full_signature": "public void logSevere(Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.logSevere(Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "logInfo", "parameters": "(String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void logInfo(String fmt, Object... args)", "full_signature": "public void logInfo(String fmt, Object... args)", "class_method_signature": "StatefulService.logInfo(String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "logInfo", "parameters": "(Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void logInfo(Supplier<String> messageSupplier)", "full_signature": "public void logInfo(Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.logInfo(Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "logFine", "parameters": "(String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void logFine(String fmt, Object... args)", "full_signature": "public void logFine(String fmt, Object... args)", "class_method_signature": "StatefulService.logFine(String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "logFine", "parameters": "(Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void logFine(Supplier<String> messageSupplier)", "full_signature": "public void logFine(Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.logFine(Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "logWarning", "parameters": "(String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void logWarning(String fmt, Object... args)", "full_signature": "public void logWarning(String fmt, Object... args)", "class_method_signature": "StatefulService.logWarning(String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "logWarning", "parameters": "(Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void logWarning(Supplier<String> messageSupplier)", "full_signature": "public void logWarning(Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.logWarning(Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, String fmt, Object... args)", "modifiers": "public", "return": "void", "signature": "void log(Level level, String fmt, Object... args)", "full_signature": "public void log(Level level, String fmt, Object... args)", "class_method_signature": "StatefulService.log(Level level, String fmt, Object... args)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Level level, Supplier<String> messageSupplier)", "modifiers": "public", "return": "void", "signature": "void log(Level level, Supplier<String> messageSupplier)", "full_signature": "public void log(Level level, Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.log(Level level, Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "doLogging", "parameters": "(Level level, Supplier<String> messageSupplier)", "modifiers": "protected", "return": "void", "signature": "void doLogging(Level level, Supplier<String> messageSupplier)", "full_signature": "protected void doLogging(Level level, Supplier<String> messageSupplier)", "class_method_signature": "StatefulService.doLogging(Level level, Supplier<String> messageSupplier)", "testcase": false, "constructor": false}, {"identifier": "handleMaintenance", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleMaintenance(Operation post)", "full_signature": "@Override public void handleMaintenance(Operation post)", "class_method_signature": "StatefulService.handleMaintenance(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handlePeriodicMaintenance", "parameters": "(Operation post)", "modifiers": "public", "return": "void", "signature": "void handlePeriodicMaintenance(Operation post)", "full_signature": "public void handlePeriodicMaintenance(Operation post)", "class_method_signature": "StatefulService.handlePeriodicMaintenance(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handleNodeGroupMaintenance", "parameters": "(Operation post)", "modifiers": "public", "return": "void", "signature": "void handleNodeGroupMaintenance(Operation post)", "full_signature": "public void handleNodeGroupMaintenance(Operation post)", "class_method_signature": "StatefulService.handleNodeGroupMaintenance(Operation post)", "testcase": false, "constructor": false}, {"identifier": "setInitialState", "parameters": "(Object state, Long version)", "modifiers": "@Override public", "return": "ServiceDocument", "signature": "ServiceDocument setInitialState(Object state, Long version)", "full_signature": "@Override public ServiceDocument setInitialState(Object state, Long version)", "class_method_signature": "StatefulService.setInitialState(Object state, Long version)", "testcase": false, "constructor": false}, {"identifier": "getPeerNodeSelectorPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPeerNodeSelectorPath()", "full_signature": "@Override public String getPeerNodeSelectorPath()", "class_method_signature": "StatefulService.getPeerNodeSelectorPath()", "testcase": false, "constructor": false}, {"identifier": "setPeerNodeSelectorPath", "parameters": "(String link)", "modifiers": "@Override public", "return": "void", "signature": "void setPeerNodeSelectorPath(String link)", "full_signature": "@Override public void setPeerNodeSelectorPath(String link)", "class_method_signature": "StatefulService.setPeerNodeSelectorPath(String link)", "testcase": false, "constructor": false}, {"identifier": "getDocumentIndexPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDocumentIndexPath()", "full_signature": "@Override public String getDocumentIndexPath()", "class_method_signature": "StatefulService.getDocumentIndexPath()", "testcase": false, "constructor": false}, {"identifier": "setDocumentIndexPath", "parameters": "(String link)", "modifiers": "@Override public", "return": "void", "signature": "void setDocumentIndexPath(String link)", "full_signature": "@Override public void setDocumentIndexPath(String link)", "class_method_signature": "StatefulService.setDocumentIndexPath(String link)", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "EnumSet<ServiceOption>", "signature": "EnumSet<ServiceOption> getOptions()", "full_signature": "@Override public EnumSet<ServiceOption> getOptions()", "class_method_signature": "StatefulService.getOptions()", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(Operation op, ServiceDocument newState)", "modifiers": "@Override public", "return": "void", "signature": "void setState(Operation op, ServiceDocument newState)", "full_signature": "@Override public void setState(Operation op, ServiceDocument newState)", "class_method_signature": "StatefulService.setState(Operation op, ServiceDocument newState)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(Operation op)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T getState(Operation op)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T getState(Operation op)", "class_method_signature": "StatefulService.getState(Operation op)", "testcase": false, "constructor": false}, {"identifier": "checkForBody", "parameters": "(Operation operation)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkForBody(Operation operation)", "full_signature": "protected boolean checkForBody(Operation operation)", "class_method_signature": "StatefulService.checkForBody(Operation operation)", "testcase": false, "constructor": false}, {"identifier": "getBody", "parameters": "(Operation op)", "modifiers": "protected", "return": "T", "signature": "T getBody(Operation op)", "full_signature": "protected T getBody(Operation op)", "class_method_signature": "StatefulService.getBody(Operation op)", "testcase": false, "constructor": false}, {"identifier": "getSelfId", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelfId()", "full_signature": "protected String getSelfId()", "class_method_signature": "StatefulService.getSelfId()", "testcase": false, "constructor": false}, {"identifier": "setAvailable", "parameters": "(boolean isAvailable)", "modifiers": "public", "return": "void", "signature": "void setAvailable(boolean isAvailable)", "full_signature": "public void setAvailable(boolean isAvailable)", "class_method_signature": "StatefulService.setAvailable(boolean isAvailable)", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAvailable()", "full_signature": "public boolean isAvailable()", "class_method_signature": "StatefulService.isAvailable()", "testcase": false, "constructor": false}, {"identifier": "setMaintenanceIntervalMicros", "parameters": "(long micros)", "modifiers": "@Override public", "return": "void", "signature": "void setMaintenanceIntervalMicros(long micros)", "full_signature": "@Override public void setMaintenanceIntervalMicros(long micros)", "class_method_signature": "StatefulService.setMaintenanceIntervalMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "setCacheClearDelayMicros", "parameters": "(long micros)", "modifiers": "@Override public", "return": "void", "signature": "void setCacheClearDelayMicros(long micros)", "full_signature": "@Override public void setCacheClearDelayMicros(long micros)", "class_method_signature": "StatefulService.setCacheClearDelayMicros(long micros)", "testcase": false, "constructor": false}, {"identifier": "getMaintenanceIntervalMicros", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaintenanceIntervalMicros()", "full_signature": "@Override public long getMaintenanceIntervalMicros()", "class_method_signature": "StatefulService.getMaintenanceIntervalMicros()", "testcase": false, "constructor": false}, {"identifier": "getCacheClearDelayMicros", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCacheClearDelayMicros()", "full_signature": "@Override public long getCacheClearDelayMicros()", "class_method_signature": "StatefulService.getCacheClearDelayMicros()", "testcase": false, "constructor": false}, {"identifier": "getStateType", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends ServiceDocument>", "signature": "Class<? extends ServiceDocument> getStateType()", "full_signature": "@Override public Class<? extends ServiceDocument> getStateType()", "class_method_signature": "StatefulService.getStateType()", "testcase": false, "constructor": false}, {"identifier": "handleConfigurationRequest", "parameters": "(Operation request)", "modifiers": "@Override public", "return": "void", "signature": "void handleConfigurationRequest(Operation request)", "full_signature": "@Override public void handleConfigurationRequest(Operation request)", "class_method_signature": "StatefulService.handleConfigurationRequest(Operation request)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationContext", "parameters": "(Operation op, AuthorizationContext ctx)", "modifiers": "@Override public final", "return": "void", "signature": "void setAuthorizationContext(Operation op, AuthorizationContext ctx)", "full_signature": "@Override public final void setAuthorizationContext(Operation op, AuthorizationContext ctx)", "class_method_signature": "StatefulService.setAuthorizationContext(Operation op, AuthorizationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getTokenSigner", "parameters": "()", "modifiers": "public final", "return": "Signer", "signature": "Signer getTokenSigner()", "full_signature": "public final Signer getTokenSigner()", "class_method_signature": "StatefulService.getTokenSigner()", "testcase": false, "constructor": false}, {"identifier": "getSystemAuthorizationContext", "parameters": "()", "modifiers": "@Override public final", "return": "AuthorizationContext", "signature": "AuthorizationContext getSystemAuthorizationContext()", "full_signature": "@Override public final AuthorizationContext getSystemAuthorizationContext()", "class_method_signature": "StatefulService.getSystemAuthorizationContext()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContextForSubject", "parameters": "(String subject)", "modifiers": "public final", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContextForSubject(String subject)", "full_signature": "public final AuthorizationContext getAuthorizationContextForSubject(String subject)", "class_method_signature": "StatefulService.getAuthorizationContextForSubject(String subject)", "testcase": false, "constructor": false}, {"identifier": "allocateExtraContext", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void allocateExtraContext()", "full_signature": "private void allocateExtraContext()", "class_method_signature": "StatefulService.allocateExtraContext()", "testcase": false, "constructor": false}, {"identifier": "addPendingTransaction", "parameters": "(String txCoordinatorLink)", "modifiers": "", "return": "void", "signature": "void addPendingTransaction(String txCoordinatorLink)", "full_signature": " void addPendingTransaction(String txCoordinatorLink)", "class_method_signature": "StatefulService.addPendingTransaction(String txCoordinatorLink)", "testcase": false, "constructor": false}, {"identifier": "removePendingTransaction", "parameters": "(String txCoordinatorLink)", "modifiers": "", "return": "void", "signature": "void removePendingTransaction(String txCoordinatorLink)", "full_signature": " void removePendingTransaction(String txCoordinatorLink)", "class_method_signature": "StatefulService.removePendingTransaction(String txCoordinatorLink)", "testcase": false, "constructor": false}, {"identifier": "setPendingTransactionsAsBody", "parameters": "(Operation op, Operation.TransactionContext opLogRecord)", "modifiers": "", "return": "Operation", "signature": "Operation setPendingTransactionsAsBody(Operation op, Operation.TransactionContext opLogRecord)", "full_signature": " Operation setPendingTransactionsAsBody(Operation op, Operation.TransactionContext opLogRecord)", "class_method_signature": "StatefulService.setPendingTransactionsAsBody(Operation op, Operation.TransactionContext opLogRecord)", "testcase": false, "constructor": false}, {"identifier": "hasPendingTransactions", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasPendingTransactions()", "full_signature": "private boolean hasPendingTransactions()", "class_method_signature": "StatefulService.hasPendingTransactions()", "testcase": false, "constructor": false}, {"identifier": "allocatePendingTransactions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void allocatePendingTransactions()", "full_signature": "private void allocatePendingTransactions()", "class_method_signature": "StatefulService.allocatePendingTransactions()", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/StatefulService.java"}, "focal_method": {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "body": "@Override\n    public URI getUri() {\n        if (this.context.host == null) {\n            return null;\n        }\n        return UriUtils.buildUri(this.context.host, this.context.selfLink);\n    }", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "StatefulService.getUri()", "testcase": false, "constructor": false, "invocations": ["buildUri"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}