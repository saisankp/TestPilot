{"test_class": {"identifier": "CategoryTest", "superclass": "extends BaseJWPLTest", "interfaces": "", "fields": [{"original_string": "private static final String A_FAMOUS_CATEGORY = \"People of UKP\";", "modifier": "private static final", "type": "String", "declarator": "A_FAMOUS_CATEGORY = \"People of UKP\"", "var_name": "A_FAMOUS_CATEGORY"}, {"original_string": "private static final int A_FAMOUS_PAGE_ID = 8;", "modifier": "private static final", "type": "int", "declarator": "A_FAMOUS_PAGE_ID = 8", "var_name": "A_FAMOUS_PAGE_ID"}, {"original_string": "private static final long A_FAMOUS_PAGE_OBJECT_ID = 4;", "modifier": "private static final", "type": "long", "declarator": "A_FAMOUS_PAGE_OBJECT_ID = 4", "var_name": "A_FAMOUS_PAGE_OBJECT_ID"}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/test/java/de/tudarmstadt/ukp/wikipedia/api/CategoryTest.java"}, "test_case": {"identifier": "testCategoryPageId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCategoryPageId(){\n\t\tCategory cat;\n\t\ttry {\n\t\t\tcat = wiki.getCategory(A_FAMOUS_CATEGORY);\n\t\t\tassertNotNull(cat);\n\t\t    assertEquals(\"testing the pageId\",8,cat.getPageId());\n\t\t} catch (WikiApiException e) {\n\t\t\tfail(\"A WikiApiException occurred while getting the category 'People of UKP': \" + e.getLocalizedMessage());\n\t\t}\n\t\t//test the pageId\n\t}", "signature": "void testCategoryPageId()", "full_signature": "@Test public void testCategoryPageId()", "class_method_signature": "CategoryTest.testCategoryPageId()", "testcase": true, "constructor": false, "invocations": ["getCategory", "assertNotNull", "assertEquals", "getPageId", "fail", "getLocalizedMessage"]}, "focal_class": {"identifier": "Category", "superclass": "", "interfaces": "implements WikiConstants", "fields": [{"original_string": "private CategoryDAO catDAO;", "modifier": "private", "type": "CategoryDAO", "declarator": "catDAO", "var_name": "catDAO"}, {"original_string": "private de.tudarmstadt.ukp.wikipedia.api.hibernate.Category hibernateCategory;", "modifier": "private", "type": "de.tudarmstadt.ukp.wikipedia.api.hibernate.Category", "declarator": "hibernateCategory", "var_name": "hibernateCategory"}, {"original_string": "private Wikipedia wiki;", "modifier": "private", "type": "Wikipedia", "declarator": "wiki", "var_name": "wiki"}], "methods": [{"identifier": "Category", "parameters": "(Wikipedia wiki, long id)", "modifiers": "protected", "return": "", "signature": " Category(Wikipedia wiki, long id)", "full_signature": "protected  Category(Wikipedia wiki, long id)", "class_method_signature": "Category.Category(Wikipedia wiki, long id)", "testcase": false, "constructor": true}, {"identifier": "Category", "parameters": "(Wikipedia wiki, int pageID)", "modifiers": "protected", "return": "", "signature": " Category(Wikipedia wiki, int pageID)", "full_signature": "protected  Category(Wikipedia wiki, int pageID)", "class_method_signature": "Category.Category(Wikipedia wiki, int pageID)", "testcase": false, "constructor": true}, {"identifier": "Category", "parameters": "(Wikipedia wiki, String pName)", "modifiers": "public", "return": "", "signature": " Category(Wikipedia wiki, String pName)", "full_signature": "public  Category(Wikipedia wiki, String pName)", "class_method_signature": "Category.Category(Wikipedia wiki, String pName)", "testcase": false, "constructor": true}, {"identifier": "createCategory", "parameters": "(long id)", "modifiers": "private", "return": "void", "signature": "void createCategory(long id)", "full_signature": "private void createCategory(long id)", "class_method_signature": "Category.createCategory(long id)", "testcase": false, "constructor": false}, {"identifier": "createCategory", "parameters": "(int pageID)", "modifiers": "private", "return": "void", "signature": "void createCategory(int pageID)", "full_signature": "private void createCategory(int pageID)", "class_method_signature": "Category.createCategory(int pageID)", "testcase": false, "constructor": false}, {"identifier": "createCategory", "parameters": "(Title title)", "modifiers": "private", "return": "void", "signature": "void createCategory(Title title)", "full_signature": "private void createCategory(Title title)", "class_method_signature": "Category.createCategory(Title title)", "testcase": false, "constructor": false}, {"identifier": "__getId", "parameters": "()", "modifiers": "", "return": "long", "signature": "long __getId()", "full_signature": " long __getId()", "class_method_signature": "Category.__getId()", "testcase": false, "constructor": false}, {"identifier": "getPageId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageId()", "full_signature": "public int getPageId()", "class_method_signature": "Category.getPageId()", "testcase": false, "constructor": false}, {"identifier": "getParents", "parameters": "()", "modifiers": "public", "return": "Set<Category>", "signature": "Set<Category> getParents()", "full_signature": "public Set<Category> getParents()", "class_method_signature": "Category.getParents()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfParents", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfParents()", "full_signature": "public int getNumberOfParents()", "class_method_signature": "Category.getNumberOfParents()", "testcase": false, "constructor": false}, {"identifier": "getParentIDs", "parameters": "()", "modifiers": "public", "return": "Set<Integer>", "signature": "Set<Integer> getParentIDs()", "full_signature": "public Set<Integer> getParentIDs()", "class_method_signature": "Category.getParentIDs()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "Set<Category>", "signature": "Set<Category> getChildren()", "full_signature": "public Set<Category> getChildren()", "class_method_signature": "Category.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfChildren", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfChildren()", "full_signature": "public int getNumberOfChildren()", "class_method_signature": "Category.getNumberOfChildren()", "testcase": false, "constructor": false}, {"identifier": "getChildrenIDs", "parameters": "()", "modifiers": "public", "return": "Set<Integer>", "signature": "Set<Integer> getChildrenIDs()", "full_signature": "public Set<Integer> getChildrenIDs()", "class_method_signature": "Category.getChildrenIDs()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "Title", "signature": "Title getTitle()", "full_signature": "public Title getTitle()", "class_method_signature": "Category.getTitle()", "testcase": false, "constructor": false}, {"identifier": "getArticles", "parameters": "()", "modifiers": "public", "return": "Set<Page>", "signature": "Set<Page> getArticles()", "full_signature": "public Set<Page> getArticles()", "class_method_signature": "Category.getArticles()", "testcase": false, "constructor": false}, {"identifier": "getArticleIds", "parameters": "()", "modifiers": "public", "return": "Set<Integer>", "signature": "Set<Integer> getArticleIds()", "full_signature": "public Set<Integer> getArticleIds()", "class_method_signature": "Category.getArticleIds()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfPages", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfPages()", "full_signature": "public int getNumberOfPages()", "class_method_signature": "Category.getNumberOfPages()", "testcase": false, "constructor": false}, {"identifier": "__getPages", "parameters": "()", "modifiers": "", "return": "Set<Integer>", "signature": "Set<Integer> __getPages()", "full_signature": " Set<Integer> __getPages()", "class_method_signature": "Category.__getPages()", "testcase": false, "constructor": false}, {"identifier": "getDescendants", "parameters": "()", "modifiers": "public", "return": "Iterable <Category>", "signature": "Iterable <Category> getDescendants()", "full_signature": "public Iterable <Category> getDescendants()", "class_method_signature": "Category.getDescendants()", "testcase": false, "constructor": false}, {"identifier": "getDescendants", "parameters": "(int bufferSize)", "modifiers": "protected", "return": "Iterable <Category>", "signature": "Iterable <Category> getDescendants(int bufferSize)", "full_signature": "protected Iterable <Category> getDescendants(int bufferSize)", "class_method_signature": "Category.getDescendants(int bufferSize)", "testcase": false, "constructor": false}, {"identifier": "getSiblings", "parameters": "()", "modifiers": "public", "return": "Set<Category>", "signature": "Set<Category> getSiblings()", "full_signature": "public Set<Category> getSiblings()", "class_method_signature": "Category.getSiblings()", "testcase": false, "constructor": false}, {"identifier": "getCategoryInfo", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getCategoryInfo()", "full_signature": "protected String getCategoryInfo()", "class_method_signature": "Category.getCategoryInfo()", "testcase": false, "constructor": false}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/main/java/de/tudarmstadt/ukp/wikipedia/api/Category.java"}, "focal_method": {"identifier": "getPageId", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getPageId() {\n        Session session = this.wiki.__getHibernateSession();\n        session.beginTransaction();\n        session.lock(hibernateCategory, LockMode.NONE);\n        int pageID = hibernateCategory.getPageId();\n        session.getTransaction().commit();\n        return pageID;\n    }", "signature": "int getPageId()", "full_signature": "public int getPageId()", "class_method_signature": "Category.getPageId()", "testcase": false, "constructor": false, "invocations": ["__getHibernateSession", "beginTransaction", "lock", "getPageId", "commit", "getTransaction"]}, "repository": {"repo_id": 40001904, "url": "https://github.com/dkpro/dkpro-jwpl", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 68, "size": 6884, "license": "licensed"}}