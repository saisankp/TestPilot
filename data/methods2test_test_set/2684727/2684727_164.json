{"test_class": {"identifier": "CategoryDatabaseAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAME = \"name_123\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"name_123\"", "var_name": "NAME"}, {"original_string": "private static final int PRIMARY_KEY_INT = 15;", "modifier": "private static final", "type": "int", "declarator": "PRIMARY_KEY_INT = 15", "var_name": "PRIMARY_KEY_INT"}, {"original_string": "private static final String CODE = \"code_123\";", "modifier": "private static final", "type": "String", "declarator": "CODE = \"code_123\"", "var_name": "CODE"}, {"original_string": "private static final long CUSTOM_ORDER_ID = 10;", "modifier": "private static final", "type": "long", "declarator": "CUSTOM_ORDER_ID = 10", "var_name": "CUSTOM_ORDER_ID"}, {"original_string": "private static final UUID CAT_UUID = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "CAT_UUID = UUID.randomUUID()", "var_name": "CAT_UUID"}, {"original_string": "private static final String CUSTOM_ORDER_ID_KEY = \"custom_order_id\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_ORDER_ID_KEY = \"custom_order_id\"", "var_name": "CUSTOM_ORDER_ID_KEY"}, {"original_string": "private static final String ID_KEY = \"id\";", "modifier": "private static final", "type": "String", "declarator": "ID_KEY = \"id\"", "var_name": "ID_KEY"}, {"original_string": "private static final String NAME_KEY = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME_KEY = \"name\"", "var_name": "NAME_KEY"}, {"original_string": "private static final String CODE_KEY = \"code\";", "modifier": "private static final", "type": "String", "declarator": "CODE_KEY = \"code\"", "var_name": "CODE_KEY"}, {"original_string": "private static final String UUID_KEY = \"entity_uuid\";", "modifier": "private static final", "type": "String", "declarator": "UUID_KEY = \"entity_uuid\"", "var_name": "UUID_KEY"}, {"original_string": "CategoryDatabaseAdapter mCategoryDatabaseAdapter;", "modifier": "", "type": "CategoryDatabaseAdapter", "declarator": "mCategoryDatabaseAdapter", "var_name": "mCategoryDatabaseAdapter"}, {"original_string": "@Mock\n    Cursor mCursor;", "modifier": "@Mock", "type": "Cursor", "declarator": "mCursor", "var_name": "mCursor"}, {"original_string": "@Mock\n    Category mCategory;", "modifier": "@Mock", "type": "Category", "declarator": "mCategory", "var_name": "mCategory"}, {"original_string": "@Mock\n    SyncStateAdapter mSyncStateAdapter;", "modifier": "@Mock", "type": "SyncStateAdapter", "declarator": "mSyncStateAdapter", "var_name": "mSyncStateAdapter"}, {"original_string": "@Mock\n    SyncState mSyncState, mGetSyncState;", "modifier": "@Mock", "type": "SyncState", "declarator": "mSyncState", "var_name": "mSyncState"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/tables/adapters/CategoryDatabaseAdapterTest.java"}, "test_case": {"identifier": "writeUnsynced", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeUnsynced() throws Exception {\n        final String sync = \"sync\";\n        final ContentValues syncValues = new ContentValues();\n        syncValues.put(sync, sync);\n        when(mSyncStateAdapter.writeUnsynced(mSyncState)).thenReturn(syncValues);\n\n        final ContentValues contentValues = mCategoryDatabaseAdapter.write(mCategory, new DatabaseOperationMetadata());\n        assertEquals(NAME, contentValues.getAsString(NAME_KEY));\n        assertEquals(CODE, contentValues.getAsString(CODE_KEY));\n        assertEquals(sync, contentValues.getAsString(sync));\n        assertEquals(CUSTOM_ORDER_ID, (int) contentValues.getAsInteger(CUSTOM_ORDER_ID_KEY));\n        assertEquals(CAT_UUID.toString(), contentValues.getAsString(UUID_KEY));\n    }", "signature": "void writeUnsynced()", "full_signature": "@Test public void writeUnsynced()", "class_method_signature": "CategoryDatabaseAdapterTest.writeUnsynced()", "testcase": true, "constructor": false, "invocations": ["put", "thenReturn", "when", "writeUnsynced", "write", "assertEquals", "getAsString", "assertEquals", "getAsString", "assertEquals", "getAsString", "assertEquals", "getAsInteger", "assertEquals", "toString", "getAsString"]}, "focal_class": {"identifier": "CategoryDatabaseAdapter", "superclass": "", "interfaces": "implements DatabaseAdapter<Category>", "fields": [{"original_string": "private final SyncStateAdapter mSyncStateAdapter;", "modifier": "private final", "type": "SyncStateAdapter", "declarator": "mSyncStateAdapter", "var_name": "mSyncStateAdapter"}], "methods": [{"identifier": "CategoryDatabaseAdapter", "parameters": "()", "modifiers": "public", "return": "", "signature": " CategoryDatabaseAdapter()", "full_signature": "public  CategoryDatabaseAdapter()", "class_method_signature": "CategoryDatabaseAdapter.CategoryDatabaseAdapter()", "testcase": false, "constructor": true}, {"identifier": "CategoryDatabaseAdapter", "parameters": "(@NonNull SyncStateAdapter syncStateAdapter)", "modifiers": "public", "return": "", "signature": " CategoryDatabaseAdapter(@NonNull SyncStateAdapter syncStateAdapter)", "full_signature": "public  CategoryDatabaseAdapter(@NonNull SyncStateAdapter syncStateAdapter)", "class_method_signature": "CategoryDatabaseAdapter.CategoryDatabaseAdapter(@NonNull SyncStateAdapter syncStateAdapter)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(@NonNull Cursor cursor)", "modifiers": "@Override @NonNull public", "return": "Category", "signature": "Category read(@NonNull Cursor cursor)", "full_signature": "@Override @NonNull public Category read(@NonNull Cursor cursor)", "class_method_signature": "CategoryDatabaseAdapter.read(@NonNull Cursor cursor)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override @NonNull public", "return": "ContentValues", "signature": "ContentValues write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override @NonNull public ContentValues write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "CategoryDatabaseAdapter.write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(@NonNull Category category, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override @NonNull public", "return": "Category", "signature": "Category build(@NonNull Category category, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override @NonNull public Category build(@NonNull Category category, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "CategoryDatabaseAdapter.build(@NonNull Category category, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/tables/adapters/CategoryDatabaseAdapter.java"}, "focal_method": {"identifier": "write", "parameters": "(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override @NonNull public", "return": "ContentValues", "body": "@Override\n    @NonNull\n    public ContentValues write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata) {\n        final ContentValues values = new ContentValues();\n        values.put(CategoriesTable.COLUMN_NAME, category.getName());\n        values.put(CategoriesTable.COLUMN_CODE, category.getCode());\n        values.put(CategoriesTable.COLUMN_CUSTOM_ORDER_ID, category.getCustomOrderId());\n        values.put(CategoriesTable.COLUMN_UUID, category.getUuid().toString());\n        if (databaseOperationMetadata.getOperationFamilyType() == OperationFamilyType.Sync) {\n            values.putAll(mSyncStateAdapter.write(category.getSyncState()));\n        } else {\n            values.putAll(mSyncStateAdapter.writeUnsynced(category.getSyncState()));\n        }\n        return values;\n    }", "signature": "ContentValues write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override @NonNull public ContentValues write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "CategoryDatabaseAdapter.write(@NonNull Category category, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false, "invocations": ["put", "getName", "put", "getCode", "put", "getCustomOrderId", "put", "toString", "getUuid", "getOperationFamilyType", "putAll", "write", "getSyncState", "putAll", "writeUnsynced", "getSyncState"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}