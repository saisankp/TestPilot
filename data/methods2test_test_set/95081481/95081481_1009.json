{"test_class": {"identifier": "OspfConfigUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectMapper mapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private JsonNode jsonNode;", "modifier": "private", "type": "JsonNode", "declarator": "jsonNode", "var_name": "jsonNode"}, {"original_string": "private List<OspfProcess> ospfProcessList = new ArrayList<>();", "modifier": "private", "type": "List<OspfProcess>", "declarator": "ospfProcessList = new ArrayList<>()", "var_name": "ospfProcessList"}, {"original_string": "private String jsonString = \"{\\n\" +\n            \"\\t\\\"processes\\\": {\\n\" +\n            \"\\t\\t\\\"areas\\\": [{\\n\" +\n            \"\\t\\t\\t\\\"interface\\\": [{\\n\" +\n            \"\\t\\t\\t\\t\\\"interfaceIndex\\\": \\\"2\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"helloIntervalTime\\\": \\\"10\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"routerDeadIntervalTime\\\": \\\"40\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"interfaceType\\\": \\\"2\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"reTransmitInterval\\\": \\\"5\\\"\\n\" +\n            \"\\t\\t\\t}],\\n\" +\n            \"\\t\\t\\t\\\"areaId\\\": \\\"5.5.5.5\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"routerId\\\": \\\"7.7.7.7\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"isOpaqueEnable\\\": \\\"false\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"externalRoutingCapability\\\": \\\"true\\\"\\n\" +\n            \"\\t\\t}]\\n\" +\n            \"\\t}\\n\" +\n            \"}\";", "modifier": "private", "type": "String", "declarator": "jsonString = \"{\\n\" +\n            \"\\t\\\"processes\\\": {\\n\" +\n            \"\\t\\t\\\"areas\\\": [{\\n\" +\n            \"\\t\\t\\t\\\"interface\\\": [{\\n\" +\n            \"\\t\\t\\t\\t\\\"interfaceIndex\\\": \\\"2\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"helloIntervalTime\\\": \\\"10\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"routerDeadIntervalTime\\\": \\\"40\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"interfaceType\\\": \\\"2\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\t\\\"reTransmitInterval\\\": \\\"5\\\"\\n\" +\n            \"\\t\\t\\t}],\\n\" +\n            \"\\t\\t\\t\\\"areaId\\\": \\\"5.5.5.5\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"routerId\\\": \\\"7.7.7.7\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"isOpaqueEnable\\\": \\\"false\\\",\\n\" +\n            \"\\n\" +\n            \"\\t\\t\\t\\\"externalRoutingCapability\\\": \\\"true\\\"\\n\" +\n            \"\\t\\t}]\\n\" +\n            \"\\t}\\n\" +\n            \"}\"", "var_name": "jsonString"}], "file": "protocols/ospf/ctl/src/test/java/org/onosproject/ospf/controller/impl/OspfConfigUtilTest.java"}, "test_case": {"identifier": "testProcesses", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcesses() throws Exception {\n        jsonNode.path(\"areas\");\n        ospfProcessList = OspfConfigUtil.processes(jsonNode);\n        assertThat(ospfProcessList, is(notNullValue()));\n    }", "signature": "void testProcesses()", "full_signature": "@Test public void testProcesses()", "class_method_signature": "OspfConfigUtilTest.testProcesses()", "testcase": true, "constructor": false, "invocations": ["path", "processes", "assertThat", "is", "notNullValue"]}, "focal_class": {"identifier": "OspfConfigUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String PROCESSID = \"processId\";", "modifier": "public static final", "type": "String", "declarator": "PROCESSID = \"processId\"", "var_name": "PROCESSID"}, {"original_string": "public static final String AREAS = \"areas\";", "modifier": "public static final", "type": "String", "declarator": "AREAS = \"areas\"", "var_name": "AREAS"}, {"original_string": "public static final String INTERFACEINDEX = \"interfaceIndex\";", "modifier": "public static final", "type": "String", "declarator": "INTERFACEINDEX = \"interfaceIndex\"", "var_name": "INTERFACEINDEX"}, {"original_string": "public static final String AREAID = \"areaId\";", "modifier": "public static final", "type": "String", "declarator": "AREAID = \"areaId\"", "var_name": "AREAID"}, {"original_string": "public static final String ROUTERID = \"routerId\";", "modifier": "public static final", "type": "String", "declarator": "ROUTERID = \"routerId\"", "var_name": "ROUTERID"}, {"original_string": "public static final String INTERFACE = \"interface\";", "modifier": "public static final", "type": "String", "declarator": "INTERFACE = \"interface\"", "var_name": "INTERFACE"}, {"original_string": "public static final String HELLOINTERVAL = \"helloIntervalTime\";", "modifier": "public static final", "type": "String", "declarator": "HELLOINTERVAL = \"helloIntervalTime\"", "var_name": "HELLOINTERVAL"}, {"original_string": "public static final String ROUTERDEADINTERVAL = \"routerDeadIntervalTime\";", "modifier": "public static final", "type": "String", "declarator": "ROUTERDEADINTERVAL = \"routerDeadIntervalTime\"", "var_name": "ROUTERDEADINTERVAL"}, {"original_string": "public static final String INTERFACETYPE = \"interfaceType\";", "modifier": "public static final", "type": "String", "declarator": "INTERFACETYPE = \"interfaceType\"", "var_name": "INTERFACETYPE"}, {"original_string": "public static final String EXTERNALROUTINGCAPABILITY = \"externalRoutingCapability\";", "modifier": "public static final", "type": "String", "declarator": "EXTERNALROUTINGCAPABILITY = \"externalRoutingCapability\"", "var_name": "EXTERNALROUTINGCAPABILITY"}, {"original_string": "protected static final Logger log = LoggerFactory.getLogger(OspfConfigUtil.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(OspfConfigUtil.class)", "var_name": "log"}, {"original_string": "private static final String ISOPAQUE = \"isOpaqueEnable\";", "modifier": "private static final", "type": "String", "declarator": "ISOPAQUE = \"isOpaqueEnable\"", "var_name": "ISOPAQUE"}], "methods": [{"identifier": "OspfConfigUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " OspfConfigUtil()", "full_signature": "private  OspfConfigUtil()", "class_method_signature": "OspfConfigUtil.OspfConfigUtil()", "testcase": false, "constructor": true}, {"identifier": "processes", "parameters": "(JsonNode jsonNodes)", "modifiers": "public static", "return": "List<OspfProcess>", "signature": "List<OspfProcess> processes(JsonNode jsonNodes)", "full_signature": "public static List<OspfProcess> processes(JsonNode jsonNodes)", "class_method_signature": "OspfConfigUtil.processes(JsonNode jsonNodes)", "testcase": false, "constructor": false}, {"identifier": "getInterfaceIp", "parameters": "(int interfaceIndex)", "modifiers": "private static", "return": "Ip4Address", "signature": "Ip4Address getInterfaceIp(int interfaceIndex)", "full_signature": "private static Ip4Address getInterfaceIp(int interfaceIndex)", "class_method_signature": "OspfConfigUtil.getInterfaceIp(int interfaceIndex)", "testcase": false, "constructor": false}, {"identifier": "getInterfaceMask", "parameters": "(int interfaceIndex)", "modifiers": "private static", "return": "String", "signature": "String getInterfaceMask(int interfaceIndex)", "full_signature": "private static String getInterfaceMask(int interfaceIndex)", "class_method_signature": "OspfConfigUtil.getInterfaceMask(int interfaceIndex)", "testcase": false, "constructor": false}, {"identifier": "isValidDigit", "parameters": "(String strInput)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidDigit(String strInput)", "full_signature": "private static boolean isValidDigit(String strInput)", "class_method_signature": "OspfConfigUtil.isValidDigit(String strInput)", "testcase": false, "constructor": false}, {"identifier": "isPrimitive", "parameters": "(String value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPrimitive(String value)", "full_signature": "private static boolean isPrimitive(String value)", "class_method_signature": "OspfConfigUtil.isPrimitive(String value)", "testcase": false, "constructor": false}, {"identifier": "isBoolean", "parameters": "(String value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isBoolean(String value)", "full_signature": "private static boolean isBoolean(String value)", "class_method_signature": "OspfConfigUtil.isBoolean(String value)", "testcase": false, "constructor": false}, {"identifier": "isValidIpAddress", "parameters": "(String value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidIpAddress(String value)", "full_signature": "private static boolean isValidIpAddress(String value)", "class_method_signature": "OspfConfigUtil.isValidIpAddress(String value)", "testcase": false, "constructor": false}, {"identifier": "areaDetails", "parameters": "(JsonNode areaNode)", "modifiers": "private static", "return": "OspfArea", "signature": "OspfArea areaDetails(JsonNode areaNode)", "full_signature": "private static OspfArea areaDetails(JsonNode areaNode)", "class_method_signature": "OspfConfigUtil.areaDetails(JsonNode areaNode)", "testcase": false, "constructor": false}, {"identifier": "interfaceDetails", "parameters": "(JsonNode interfaceNode)", "modifiers": "private static", "return": "OspfInterface", "signature": "OspfInterface interfaceDetails(JsonNode interfaceNode)", "full_signature": "private static OspfInterface interfaceDetails(JsonNode interfaceNode)", "class_method_signature": "OspfConfigUtil.interfaceDetails(JsonNode interfaceNode)", "testcase": false, "constructor": false}], "file": "protocols/ospf/ctl/src/main/java/org/onosproject/ospf/controller/impl/OspfConfigUtil.java"}, "focal_method": {"identifier": "processes", "parameters": "(JsonNode jsonNodes)", "modifiers": "public static", "return": "List<OspfProcess>", "body": "public static List<OspfProcess> processes(JsonNode jsonNodes) {\n        List<OspfProcess> ospfProcesses = new ArrayList<>();\n        if (jsonNodes == null) {\n            return ospfProcesses;\n        }\n        //From each Process nodes, get area and related interface details.\n        jsonNodes.forEach(jsonNode -> {\n            List<OspfArea> areas = new ArrayList<>();\n            //Get configured areas for the process.\n            for (JsonNode areaNode : jsonNode.path(AREAS)) {\n                List<OspfInterface> interfaceList = new ArrayList<>();\n                for (JsonNode interfaceNode : areaNode.path(INTERFACE)) {\n                    OspfInterface ospfInterface = interfaceDetails(interfaceNode);\n                    if (ospfInterface != null) {\n                        interfaceList.add(ospfInterface);\n                    }\n                }\n                //Get the area details\n                OspfArea area = areaDetails(areaNode);\n                if (area != null) {\n                    area.setOspfInterfaceList(interfaceList);\n                    areas.add(area);\n                }\n            }\n            OspfProcess process = new OspfProcessImpl();\n            process.setProcessId(jsonNode.path(PROCESSID).asText());\n            process.setAreas(areas);\n            ospfProcesses.add(process);\n        });\n\n        return ospfProcesses;\n    }", "signature": "List<OspfProcess> processes(JsonNode jsonNodes)", "full_signature": "public static List<OspfProcess> processes(JsonNode jsonNodes)", "class_method_signature": "OspfConfigUtil.processes(JsonNode jsonNodes)", "testcase": false, "constructor": false, "invocations": ["forEach", "path", "path", "interfaceDetails", "add", "areaDetails", "setOspfInterfaceList", "add", "setProcessId", "asText", "path", "setAreas", "add"]}, "repository": {"repo_id": 95081481, "url": "https://github.com/shlee89/athena", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 11, "size": 31719, "license": "licensed"}}