{"test_class": {"identifier": "BlockingOperatorNextTest", "superclass": "", "interfaces": "", "fields": [], "file": "zava/src/test/java/rx/internal/operators/BlockingOperatorNextTest.java"}, "test_case": {"identifier": "testNextWithError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNextWithError() {\n        Subject<String, String> obs = PublishSubject.create();\n        Iterator<String> it = next(obs).iterator();\n        fireOnNextInNewThread(obs, \"one\");\n        assertTrue(it.hasNext());\n        assertEquals(\"one\", it.next());\n\n        fireOnErrorInNewThread(obs);\n        try {\n            it.hasNext();\n            fail(\"Expected an TestException\");\n        } catch (TestException e) {\n        }\n\n        assertErrorAfterObservableFail(it);\n    }", "signature": "void testNextWithError()", "full_signature": "@Test public void testNextWithError()", "class_method_signature": "BlockingOperatorNextTest.testNextWithError()", "testcase": true, "constructor": false, "invocations": ["create", "iterator", "next", "fireOnNextInNewThread", "assertTrue", "hasNext", "assertEquals", "next", "fireOnErrorInNewThread", "hasNext", "fail", "assertErrorAfterObservableFail"]}, "focal_class": {"identifier": "BlockingOperatorNext", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "BlockingOperatorNext", "parameters": "()", "modifiers": "private", "return": "", "signature": " BlockingOperatorNext()", "full_signature": "private  BlockingOperatorNext()", "class_method_signature": "BlockingOperatorNext.BlockingOperatorNext()", "testcase": false, "constructor": true}, {"identifier": "next", "parameters": "(final Observable<? extends T> items)", "modifiers": "public static", "return": "Iterable<T>", "signature": "Iterable<T> next(final Observable<? extends T> items)", "full_signature": "public static Iterable<T> next(final Observable<? extends T> items)", "class_method_signature": "BlockingOperatorNext.next(final Observable<? extends T> items)", "testcase": false, "constructor": false}], "file": "zava/src/main/java/rx/internal/operators/BlockingOperatorNext.java"}, "focal_method": {"identifier": "next", "parameters": "(final Observable<? extends T> items)", "modifiers": "public static", "return": "Iterable<T>", "body": "public static <T> Iterable<T> next(final Observable<? extends T> items) {\n        return new Iterable<T>() {\n            @Override\n            public Iterator<T> iterator() {\n                NextObserver<T> nextObserver = new NextObserver<T>();\n                return new NextIterator<T>(items, nextObserver);\n            }\n        };\n\n    }", "signature": "Iterable<T> next(final Observable<? extends T> items)", "full_signature": "public static Iterable<T> next(final Observable<? extends T> items)", "class_method_signature": "BlockingOperatorNext.next(final Observable<? extends T> items)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}