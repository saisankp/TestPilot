{"test_class": {"identifier": "GuidanceSpeedViewTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private static final double VELOCITY = 60;", "modifier": "private static final", "type": "double", "declarator": "VELOCITY = 60", "var_name": "VELOCITY"}, {"original_string": "private static final double SPEED_LIMIT = 50;", "modifier": "private static final", "type": "double", "declarator": "SPEED_LIMIT = 50", "var_name": "SPEED_LIMIT"}, {"original_string": "private static final int RED_COLOR = 16711680;", "modifier": "private static final", "type": "int", "declarator": "RED_COLOR = 16711680", "var_name": "RED_COLOR"}, {"original_string": "private static final int BLUE_COLOR = 255;", "modifier": "private static final", "type": "int", "declarator": "BLUE_COLOR = 255", "var_name": "BLUE_COLOR"}, {"original_string": "private GuidanceSpeedView mCurrentGuidanceSpeedView = null;", "modifier": "private", "type": "GuidanceSpeedView", "declarator": "mCurrentGuidanceSpeedView = null", "var_name": "mCurrentGuidanceSpeedView"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/guidance/GuidanceSpeedViewTest.java"}, "test_case": {"identifier": "testUiInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUiInit() {\n        final View container = mCurrentGuidanceSpeedView.findViewById(R.id.guidance_current_speed_container);\n        final TextView speedValueView = mCurrentGuidanceSpeedView.findViewById(R.id.guidance_current_speed_value);\n        final TextView speedUnitView = mCurrentGuidanceSpeedView.findViewById(R.id.guidance_current_speed_unit);\n\n        assertThat(container.getVisibility(), is(View.VISIBLE));\n        assertThat(speedValueView.getText().toString(), is(getString(R.string.msdkui_value_not_available)));\n        assertThat(speedUnitView.getText().toString(), is(\"\"));\n        GuidanceSpeedData data = new GuidanceSpeedData(VELOCITY, SPEED_LIMIT);\n        mCurrentGuidanceSpeedView.setCurrentSpeedData(data);\n        assertThat(speedValueView.getText().toString(),\n                is(String.valueOf(SpeedFormatterUtil.format(VELOCITY, UnitSystem.METRIC))));\n    }", "signature": "void testUiInit()", "full_signature": "@Test public void testUiInit()", "class_method_signature": "GuidanceSpeedViewTest.testUiInit()", "testcase": true, "constructor": false, "invocations": ["findViewById", "findViewById", "findViewById", "assertThat", "getVisibility", "is", "assertThat", "toString", "getText", "is", "getString", "assertThat", "toString", "getText", "is", "setCurrentSpeedData", "assertThat", "toString", "getText", "is", "valueOf", "format"]}, "focal_class": {"identifier": "GuidanceSpeedView", "superclass": "extends BaseView", "interfaces": "", "fields": [{"original_string": "private static final int[] STATE_SPEEDING = {\n            R.attr.guidanceSpeedLimitExceeded\n    };", "modifier": "private static final", "type": "int[]", "declarator": "STATE_SPEEDING = {\n            R.attr.guidanceSpeedLimitExceeded\n    }", "var_name": "STATE_SPEEDING"}, {"original_string": "private GuidanceSpeedData mGuidanceSpeedData;", "modifier": "private", "type": "GuidanceSpeedData", "declarator": "mGuidanceSpeedData", "var_name": "mGuidanceSpeedData"}, {"original_string": "private int mValueTextColor  = 0;", "modifier": "private", "type": "int", "declarator": "mValueTextColor  = 0", "var_name": "mValueTextColor"}, {"original_string": "private int mUnitTextColor = 0;", "modifier": "private", "type": "int", "declarator": "mUnitTextColor = 0", "var_name": "mUnitTextColor"}], "methods": [{"identifier": "GuidanceSpeedView", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " GuidanceSpeedView(Context context)", "full_signature": "public  GuidanceSpeedView(Context context)", "class_method_signature": "GuidanceSpeedView.GuidanceSpeedView(Context context)", "testcase": false, "constructor": true}, {"identifier": "GuidanceSpeedView", "parameters": "(Context context, @Nullable AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " GuidanceSpeedView(Context context, @Nullable AttributeSet attrs)", "full_signature": "public  GuidanceSpeedView(Context context, @Nullable AttributeSet attrs)", "class_method_signature": "GuidanceSpeedView.GuidanceSpeedView(Context context, @Nullable AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "GuidanceSpeedView", "parameters": "(Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "modifiers": "public", "return": "", "signature": " GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "full_signature": "public  GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "class_method_signature": "GuidanceSpeedView.GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "GuidanceSpeedView", "parameters": "(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes)", "class_method_signature": "GuidanceSpeedView.GuidanceSpeedView(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "onCreateDrawableState", "parameters": "(int extraSpace)", "modifiers": "@Override protected", "return": "int[]", "signature": "int[] onCreateDrawableState(int extraSpace)", "full_signature": "@Override protected int[] onCreateDrawableState(int extraSpace)", "class_method_signature": "GuidanceSpeedView.onCreateDrawableState(int extraSpace)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(final Context context)", "modifiers": "private", "return": "void", "signature": "void init(final Context context)", "full_signature": "private void init(final Context context)", "class_method_signature": "GuidanceSpeedView.init(final Context context)", "testcase": false, "constructor": false}, {"identifier": "populateUi", "parameters": "(@Nullable GuidanceSpeedData data)", "modifiers": "private", "return": "void", "signature": "void populateUi(@Nullable GuidanceSpeedData data)", "full_signature": "private void populateUi(@Nullable GuidanceSpeedData data)", "class_method_signature": "GuidanceSpeedView.populateUi(@Nullable GuidanceSpeedData data)", "testcase": false, "constructor": false}, {"identifier": "setValueTextColor", "parameters": "(int color)", "modifiers": "public", "return": "void", "signature": "void setValueTextColor(int color)", "full_signature": "public void setValueTextColor(int color)", "class_method_signature": "GuidanceSpeedView.setValueTextColor(int color)", "testcase": false, "constructor": false}, {"identifier": "setUnitTextColor", "parameters": "(int color)", "modifiers": "public", "return": "void", "signature": "void setUnitTextColor(int color)", "full_signature": "public void setUnitTextColor(int color)", "class_method_signature": "GuidanceSpeedView.setUnitTextColor(int color)", "testcase": false, "constructor": false}, {"identifier": "setCurrentSpeedData", "parameters": "(@Nullable GuidanceSpeedData data)", "modifiers": "public", "return": "void", "signature": "void setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "full_signature": "public void setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "class_method_signature": "GuidanceSpeedView.setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "testcase": false, "constructor": false}, {"identifier": "getCurrentSpeedData", "parameters": "()", "modifiers": "public @NonNull", "return": "GuidanceSpeedData", "signature": "GuidanceSpeedData getCurrentSpeedData()", "full_signature": "public @NonNull GuidanceSpeedData getCurrentSpeedData()", "class_method_signature": "GuidanceSpeedView.getCurrentSpeedData()", "testcase": false, "constructor": false}, {"identifier": "getValueTextColor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getValueTextColor()", "full_signature": "public int getValueTextColor()", "class_method_signature": "GuidanceSpeedView.getValueTextColor()", "testcase": false, "constructor": false}, {"identifier": "getUnitTextColor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getUnitTextColor()", "full_signature": "public int getUnitTextColor()", "class_method_signature": "GuidanceSpeedView.getUnitTextColor()", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "()", "modifiers": "@Override protected", "return": "Parcelable", "signature": "Parcelable onSaveInstanceState()", "full_signature": "@Override protected Parcelable onSaveInstanceState()", "class_method_signature": "GuidanceSpeedView.onSaveInstanceState()", "testcase": false, "constructor": false}, {"identifier": "onRestoreInstanceState", "parameters": "(Parcelable state)", "modifiers": "@Override public", "return": "void", "signature": "void onRestoreInstanceState(Parcelable state)", "full_signature": "@Override public void onRestoreInstanceState(Parcelable state)", "class_method_signature": "GuidanceSpeedView.onRestoreInstanceState(Parcelable state)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/guidance/GuidanceSpeedView.java"}, "focal_method": {"identifier": "setCurrentSpeedData", "parameters": "(@Nullable GuidanceSpeedData data)", "modifiers": "public", "return": "void", "body": "public void setCurrentSpeedData(@Nullable GuidanceSpeedData data) {\n        populateUi(data);\n        if (data == null || !data.isValid()) {\n            mGuidanceSpeedData = data;\n            return;\n        }\n        boolean refreshBackground = false;\n        if (mGuidanceSpeedData == null || !mGuidanceSpeedData.isValid() ||\n                data.isSpeeding() != mGuidanceSpeedData.isSpeeding()) {\n            refreshBackground = true;\n        }\n        mGuidanceSpeedData = data;\n        if (refreshBackground) {\n            post(this::refreshDrawableState);\n        }\n    }", "signature": "void setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "full_signature": "public void setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "class_method_signature": "GuidanceSpeedView.setCurrentSpeedData(@Nullable GuidanceSpeedData data)", "testcase": false, "constructor": false, "invocations": ["populateUi", "isValid", "isValid", "isSpeeding", "isSpeeding", "post"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}