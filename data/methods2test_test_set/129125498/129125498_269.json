{"test_class": {"identifier": "IndexCreatorIfNotPresentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private IndexCreatorIfNotPresent creatorUnderTest;", "modifier": "@InjectMocks\n    private", "type": "IndexCreatorIfNotPresent", "declarator": "creatorUnderTest", "var_name": "creatorUnderTest"}, {"original_string": "@Mock\n    private ElasticSearchProperties esProperties;", "modifier": "@Mock\n    private", "type": "ElasticSearchProperties", "declarator": "esProperties", "var_name": "esProperties"}, {"original_string": "@Mock\n    private LegacyElasticSearchClient esClient;", "modifier": "@Mock\n    private", "type": "LegacyElasticSearchClient", "declarator": "esClient", "var_name": "esClient"}, {"original_string": "@Mock\n    private ApplicationReadyEvent appReadyEvent;", "modifier": "@Mock\n    private", "type": "ApplicationReadyEvent", "declarator": "appReadyEvent", "var_name": "appReadyEvent"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/util/IndexCreatorIfNotPresentTest.java"}, "test_case": {"identifier": "testOnApplicationEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnApplicationEvent() {\n//        creatorUnderTest.onApplicationEvent(appReadyEvent);\n        // TODO\n    }", "signature": "void testOnApplicationEvent()", "full_signature": "@Test public void testOnApplicationEvent()", "class_method_signature": "IndexCreatorIfNotPresentTest.testOnApplicationEvent()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "IndexCreatorIfNotPresent", "superclass": "", "interfaces": "implements ApplicationListener<ApplicationReadyEvent>", "fields": [{"original_string": "@Autowired\n    private ElasticSearchProperties properties;", "modifier": "@Autowired\n    private", "type": "ElasticSearchProperties", "declarator": "properties", "var_name": "properties"}, {"original_string": "@Autowired\n    private LegacyElasticSearchClient client;", "modifier": "@Autowired\n    private", "type": "LegacyElasticSearchClient", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "onApplicationEvent", "parameters": "(ApplicationReadyEvent applicationReadyEvent)", "modifiers": "@Override public", "return": "void", "signature": "void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "full_signature": "@Override public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "class_method_signature": "IndexCreatorIfNotPresent.onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "testcase": false, "constructor": false}, {"identifier": "getIndexRequest", "parameters": "()", "modifiers": "private", "return": "GetIndexRequest", "signature": "GetIndexRequest getIndexRequest()", "full_signature": "private GetIndexRequest getIndexRequest()", "class_method_signature": "IndexCreatorIfNotPresent.getIndexRequest()", "testcase": false, "constructor": false}, {"identifier": "createIndexRequest", "parameters": "()", "modifiers": "private", "return": "CreateIndexRequest", "signature": "CreateIndexRequest createIndexRequest()", "full_signature": "private CreateIndexRequest createIndexRequest()", "class_method_signature": "IndexCreatorIfNotPresent.createIndexRequest()", "testcase": false, "constructor": false}, {"identifier": "buildMappingsJson", "parameters": "()", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject buildMappingsJson()", "full_signature": "private JsonObject buildMappingsJson()", "class_method_signature": "IndexCreatorIfNotPresent.buildMappingsJson()", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/util/IndexCreatorIfNotPresent.java"}, "focal_method": {"identifier": "onApplicationEvent", "parameters": "(ApplicationReadyEvent applicationReadyEvent)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {\n        if (properties.isCreateIndexIfNotFound()) {\n            try {\n                boolean isPresent = client.indices().exists(getIndexRequest(), RequestOptions.DEFAULT);\n                if (!isPresent) {\n                    val response = client.indices().create(createIndexRequest(), RequestOptions.DEFAULT);\n                    if (!response.isAcknowledged()) {\n                        throw new RuntimeException(\"Index creation failed\");\n                    }\n                    log.info(\"Successfully created index: {}\", properties.getIndexName());\n                }\n            } catch (IOException e) {\n                log.error(\"Index creation failed\", e);\n                throw new RuntimeException(e);\n            }\n        }\n    }", "signature": "void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "full_signature": "@Override public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "class_method_signature": "IndexCreatorIfNotPresent.onApplicationEvent(ApplicationReadyEvent applicationReadyEvent)", "testcase": false, "constructor": false, "invocations": ["isCreateIndexIfNotFound", "exists", "indices", "getIndexRequest", "create", "indices", "createIndexRequest", "isAcknowledged", "info", "getIndexName", "error"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}