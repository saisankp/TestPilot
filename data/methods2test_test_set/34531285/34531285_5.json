{"test_class": {"identifier": "JavadocSupportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File resourcesRoot = getFile(\"src\", \"test\", \"resources\");", "modifier": "private static final", "type": "File", "declarator": "resourcesRoot = getFile(\"src\", \"test\", \"resources\")", "var_name": "resourcesRoot"}, {"original_string": "private static final File regularJavadoc = getFile(System.getProperty(\"j2d-sample-javadoc\"));", "modifier": "private static final", "type": "File", "declarator": "regularJavadoc = getFile(System.getProperty(\"j2d-sample-javadoc\"))", "var_name": "regularJavadoc"}, {"original_string": "private static final File splitJavadoc = getFile(System.getProperty(\"j2d-sample-javadoc-split\"));", "modifier": "private static final", "type": "File", "declarator": "splitJavadoc = getFile(System.getProperty(\"j2d-sample-javadoc-split\"))", "var_name": "splitJavadoc"}, {"original_string": "private static final String NOT_JAVADOC_DIR = \"not-javadoc\";", "modifier": "private static final", "type": "String", "declarator": "NOT_JAVADOC_DIR = \"not-javadoc\"", "var_name": "NOT_JAVADOC_DIR"}, {"original_string": "private static final String INDEX_ALL_BAD_TAG_HTML = \"index-all-bad-tag.html\";", "modifier": "private static final", "type": "String", "declarator": "INDEX_ALL_BAD_TAG_HTML = \"index-all-bad-tag.html\"", "var_name": "INDEX_ALL_BAD_TAG_HTML"}], "file": "javadoc2dash-api/src/test/java/com/megatome/j2d/support/JavadocSupportTest.java"}, "test_case": {"identifier": "testWarnsOfStrayTags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWarnsOfStrayTags() throws Exception {\n        final URI uri = this.getClass().getResource(INDEX_ALL_BAD_TAG_HTML).toURI();\n        final List<File> filesToIndex = Collections.singletonList(new File(uri));\n\n        final ByteArrayOutputStream errStream = new ByteArrayOutputStream();\n        System.setErr(new PrintStream(errStream));\n        try {\n            JavadocSupport.findSearchIndexValues(filesToIndex);\n        }\n        finally {\n            System.setErr(null);\n        }\n\n        final String err = errStream.toString();\n\n        assertThat(err, containsString(\"Something went wrong with parsing a link, possibly unescaped tags\" +\n                                       \" in Javadoc. (Name: , Type: CONSTRUCTOR, Link: )\"));\n        assertThat(err, containsString(\"Most recently parsed value was: (Name: SampleClass, Type: CLASS,\"\n                                       + \" Path: ./com/megatome/j2d/sample/clazz/SampleClass.html)\"));\n    }", "signature": "void testWarnsOfStrayTags()", "full_signature": "@Test public void testWarnsOfStrayTags()", "class_method_signature": "JavadocSupportTest.testWarnsOfStrayTags()", "testcase": true, "constructor": false, "invocations": ["toURI", "getResource", "getClass", "singletonList", "setErr", "findSearchIndexValues", "setErr", "toString", "assertThat", "containsString", "assertThat", "containsString"]}, "focal_class": {"identifier": "JavadocSupport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern parentPattern = Pattern.compile(\"span|code|i|b\", Pattern.CASE_INSENSITIVE);", "modifier": "private static final", "type": "Pattern", "declarator": "parentPattern = Pattern.compile(\"span|code|i|b\", Pattern.CASE_INSENSITIVE)", "var_name": "parentPattern"}, {"original_string": "private static final List<MatchType> extraIndexingTypes = Arrays.asList(MatchType.CLASS, MatchType.INTERFACE, MatchType.ENUM, MatchType.EXCEPTION, MatchType.ERROR);", "modifier": "private static final", "type": "List<MatchType>", "declarator": "extraIndexingTypes = Arrays.asList(MatchType.CLASS, MatchType.INTERFACE, MatchType.ENUM, MatchType.EXCEPTION, MatchType.ERROR)", "var_name": "extraIndexingTypes"}], "methods": [{"identifier": "JavadocSupport", "parameters": "()", "modifiers": "private", "return": "", "signature": " JavadocSupport()", "full_signature": "private  JavadocSupport()", "class_method_signature": "JavadocSupport.JavadocSupport()", "testcase": false, "constructor": true}, {"identifier": "findIndexFile", "parameters": "(File javadocDir)", "modifiers": "public static", "return": "IndexData", "signature": "IndexData findIndexFile(File javadocDir)", "full_signature": "public static IndexData findIndexFile(File javadocDir)", "class_method_signature": "JavadocSupport.findIndexFile(File javadocDir)", "testcase": false, "constructor": false}, {"identifier": "findSearchIndexValues", "parameters": "(List<File> filesToIndex)", "modifiers": "public static", "return": "List<SearchIndexValue>", "signature": "List<SearchIndexValue> findSearchIndexValues(List<File> filesToIndex)", "full_signature": "public static List<SearchIndexValue> findSearchIndexValues(List<File> filesToIndex)", "class_method_signature": "JavadocSupport.findSearchIndexValues(List<File> filesToIndex)", "testcase": false, "constructor": false}, {"identifier": "indexFile", "parameters": "(File f)", "modifiers": "private static", "return": "List<SearchIndexValue>", "signature": "List<SearchIndexValue> indexFile(File f)", "full_signature": "private static List<SearchIndexValue> indexFile(File f)", "class_method_signature": "JavadocSupport.indexFile(File f)", "testcase": false, "constructor": false}, {"identifier": "loadAndFindLinks", "parameters": "(final File f)", "modifiers": "private static", "return": "Elements", "signature": "Elements loadAndFindLinks(final File f)", "full_signature": "private static Elements loadAndFindLinks(final File f)", "class_method_signature": "JavadocSupport.loadAndFindLinks(final File f)", "testcase": false, "constructor": false}, {"identifier": "getMatchingType", "parameters": "(String text, String className)", "modifiers": "private static", "return": "MatchType", "signature": "MatchType getMatchingType(String text, String className)", "full_signature": "private static MatchType getMatchingType(String text, String className)", "class_method_signature": "JavadocSupport.getMatchingType(String text, String className)", "testcase": false, "constructor": false}], "file": "javadoc2dash-api/src/main/java/com/megatome/j2d/support/JavadocSupport.java"}, "focal_method": {"identifier": "findSearchIndexValues", "parameters": "(List<File> filesToIndex)", "modifiers": "public static", "return": "List<SearchIndexValue>", "body": "public static List<SearchIndexValue> findSearchIndexValues(List<File> filesToIndex) throws BuilderException {\n        final List<SearchIndexValue> values = new ArrayList<>();\n        for (final File f : filesToIndex) {\n            final List<SearchIndexValue> indexValues = indexFile(f);\n            values.addAll(indexValues);\n        }\n        return values;\n    }", "signature": "List<SearchIndexValue> findSearchIndexValues(List<File> filesToIndex)", "full_signature": "public static List<SearchIndexValue> findSearchIndexValues(List<File> filesToIndex)", "class_method_signature": "JavadocSupport.findSearchIndexValues(List<File> filesToIndex)", "testcase": false, "constructor": false, "invocations": ["indexFile", "addAll"]}, "repository": {"repo_id": 34531285, "url": "https://github.com/iamthechad/javadoc2dash", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 17, "size": 396, "license": "licensed"}}