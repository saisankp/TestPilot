{"test_class": {"identifier": "WKTReader2Test", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/main/src/test/java/org/geotools/geometry/jts/WKTReader2Test.java"}, "test_case": {"identifier": "compoundCurve", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compoundCurve() throws Exception {\n        String WKT = \"COMPOUNDCURVE((153.72942375 -27.21757040, 152.29285719 -29.23940482, 154.74034096 -30.51635287),CIRCULARSTRING(154.74034096 -30.51635287, 154.74034096 -30.51635287, 152.39926953 -32.16574411, 155.11278414 -34.08116619, 151.86720784 -35.62414508))\";\n        WKTReader reader = new WKTReader2();\n\n        Geometry geometry = reader.read(WKT);\n        assertNotNull(geometry);\n        \n        WKT = \"COMPOUNDCURVE((153.72942375 -27.21757040, 152.29285719 -29.23940482, 154.74034096 -30.51635287))\";\n        geometry = reader.read(WKT);\n        assertNotNull(geometry);\n        \n        WKT = \"COMPOUNDCURVE(CIRCULARSTRING(154.74034096 -30.51635287, 154.74034096 -30.51635287, 152.39926953 -32.16574411, 155.11278414 -34.08116619, 151.86720784 -35.62414508))\";\n        geometry = reader.read(WKT);\n        assertNotNull(geometry);\n        \n        WKT = \"COMPOUNDCURVE EMPTY\";\n        geometry = reader.read(WKT);\n        assertNotNull(geometry);\n        assertTrue( geometry.isEmpty() );        \n    }", "signature": "void compoundCurve()", "full_signature": "@Test public void compoundCurve()", "class_method_signature": "WKTReader2Test.compoundCurve()", "testcase": true, "constructor": false, "invocations": ["read", "assertNotNull", "read", "assertNotNull", "read", "assertNotNull", "read", "assertNotNull", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "WKTReader2", "superclass": "extends WKTReader", "interfaces": "", "fields": [{"original_string": "private static final String EMPTY = \"EMPTY\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY = \"EMPTY\"", "var_name": "EMPTY"}, {"original_string": "private static final String COMMA = \",\";", "modifier": "private static final", "type": "String", "declarator": "COMMA = \",\"", "var_name": "COMMA"}, {"original_string": "private static final String L_PAREN = \"(\";", "modifier": "private static final", "type": "String", "declarator": "L_PAREN = \"(\"", "var_name": "L_PAREN"}, {"original_string": "private static final String R_PAREN = \")\";", "modifier": "private static final", "type": "String", "declarator": "R_PAREN = \")\"", "var_name": "R_PAREN"}, {"original_string": "private static final String NAN_SYMBOL = \"NaN\";", "modifier": "private static final", "type": "String", "declarator": "NAN_SYMBOL = \"NaN\"", "var_name": "NAN_SYMBOL"}, {"original_string": "private CurvedGeometryFactory geometryFactory;", "modifier": "private", "type": "CurvedGeometryFactory", "declarator": "geometryFactory", "var_name": "geometryFactory"}, {"original_string": "private PrecisionModel precisionModel;", "modifier": "private", "type": "PrecisionModel", "declarator": "precisionModel", "var_name": "precisionModel"}, {"original_string": "private StreamTokenizer tokenizer;", "modifier": "private", "type": "StreamTokenizer", "declarator": "tokenizer", "var_name": "tokenizer"}], "methods": [{"identifier": "WKTReader2", "parameters": "()", "modifiers": "public", "return": "", "signature": " WKTReader2()", "full_signature": "public  WKTReader2()", "class_method_signature": "WKTReader2.WKTReader2()", "testcase": false, "constructor": true}, {"identifier": "WKTReader2", "parameters": "(double tolerance)", "modifiers": "public", "return": "", "signature": " WKTReader2(double tolerance)", "full_signature": "public  WKTReader2(double tolerance)", "class_method_signature": "WKTReader2.WKTReader2(double tolerance)", "testcase": false, "constructor": true}, {"identifier": "WKTReader2", "parameters": "(GeometryFactory geometryFactory)", "modifiers": "public", "return": "", "signature": " WKTReader2(GeometryFactory geometryFactory)", "full_signature": "public  WKTReader2(GeometryFactory geometryFactory)", "class_method_signature": "WKTReader2.WKTReader2(GeometryFactory geometryFactory)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(String wellKnownText)", "modifiers": "public", "return": "Geometry", "signature": "Geometry read(String wellKnownText)", "full_signature": "public Geometry read(String wellKnownText)", "class_method_signature": "WKTReader2.read(String wellKnownText)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Reader reader)", "modifiers": "public", "return": "Geometry", "signature": "Geometry read(Reader reader)", "full_signature": "public Geometry read(Reader reader)", "class_method_signature": "WKTReader2.read(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "getCoordinates", "parameters": "()", "modifiers": "private", "return": "Coordinate[]", "signature": "Coordinate[] getCoordinates()", "full_signature": "private Coordinate[] getCoordinates()", "class_method_signature": "WKTReader2.getCoordinates()", "testcase": false, "constructor": false}, {"identifier": "getCoordinateList", "parameters": "(boolean openExpected)", "modifiers": "private", "return": "List<Coordinate>", "signature": "List<Coordinate> getCoordinateList(boolean openExpected)", "full_signature": "private List<Coordinate> getCoordinateList(boolean openExpected)", "class_method_signature": "WKTReader2.getCoordinateList(boolean openExpected)", "testcase": false, "constructor": false}, {"identifier": "getPreciseCoordinate", "parameters": "()", "modifiers": "private", "return": "Coordinate", "signature": "Coordinate getPreciseCoordinate()", "full_signature": "private Coordinate getPreciseCoordinate()", "class_method_signature": "WKTReader2.getPreciseCoordinate()", "testcase": false, "constructor": false}, {"identifier": "isNumberNext", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isNumberNext()", "full_signature": "private boolean isNumberNext()", "class_method_signature": "WKTReader2.isNumberNext()", "testcase": false, "constructor": false}, {"identifier": "getNextNumber", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double getNextNumber()", "full_signature": "private double getNextNumber()", "class_method_signature": "WKTReader2.getNextNumber()", "testcase": false, "constructor": false}, {"identifier": "getNextEmptyOrOpener", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getNextEmptyOrOpener()", "full_signature": "private String getNextEmptyOrOpener()", "class_method_signature": "WKTReader2.getNextEmptyOrOpener()", "testcase": false, "constructor": false}, {"identifier": "getNextCloserOrComma", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getNextCloserOrComma()", "full_signature": "private String getNextCloserOrComma()", "class_method_signature": "WKTReader2.getNextCloserOrComma()", "testcase": false, "constructor": false}, {"identifier": "getNextCloser", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getNextCloser()", "full_signature": "private String getNextCloser()", "class_method_signature": "WKTReader2.getNextCloser()", "testcase": false, "constructor": false}, {"identifier": "getNextWord", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getNextWord()", "full_signature": "private String getNextWord()", "class_method_signature": "WKTReader2.getNextWord()", "testcase": false, "constructor": false}, {"identifier": "parseError", "parameters": "(String expected)", "modifiers": "private", "return": "void", "signature": "void parseError(String expected)", "full_signature": "private void parseError(String expected)", "class_method_signature": "WKTReader2.parseError(String expected)", "testcase": false, "constructor": false}, {"identifier": "tokenString", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String tokenString()", "full_signature": "private String tokenString()", "class_method_signature": "WKTReader2.tokenString()", "testcase": false, "constructor": false}, {"identifier": "readGeometryTaggedText", "parameters": "()", "modifiers": "private", "return": "Geometry", "signature": "Geometry readGeometryTaggedText()", "full_signature": "private Geometry readGeometryTaggedText()", "class_method_signature": "WKTReader2.readGeometryTaggedText()", "testcase": false, "constructor": false}, {"identifier": "readPointText", "parameters": "()", "modifiers": "private", "return": "Point", "signature": "Point readPointText()", "full_signature": "private Point readPointText()", "class_method_signature": "WKTReader2.readPointText()", "testcase": false, "constructor": false}, {"identifier": "readLineStringText", "parameters": "()", "modifiers": "private", "return": "LineString", "signature": "LineString readLineStringText()", "full_signature": "private LineString readLineStringText()", "class_method_signature": "WKTReader2.readLineStringText()", "testcase": false, "constructor": false}, {"identifier": "readCircularStringText", "parameters": "()", "modifiers": "private", "return": "LineString", "signature": "LineString readCircularStringText()", "full_signature": "private LineString readCircularStringText()", "class_method_signature": "WKTReader2.readCircularStringText()", "testcase": false, "constructor": false}, {"identifier": "toControlPoints", "parameters": "(List<Coordinate> coordinates)", "modifiers": "private", "return": "double[]", "signature": "double[] toControlPoints(List<Coordinate> coordinates)", "full_signature": "private double[] toControlPoints(List<Coordinate> coordinates)", "class_method_signature": "WKTReader2.toControlPoints(List<Coordinate> coordinates)", "testcase": false, "constructor": false}, {"identifier": "readCompoundCurveText", "parameters": "()", "modifiers": "private", "return": "LineString", "signature": "LineString readCompoundCurveText()", "full_signature": "private LineString readCompoundCurveText()", "class_method_signature": "WKTReader2.readCompoundCurveText()", "testcase": false, "constructor": false}, {"identifier": "getLineStrings", "parameters": "()", "modifiers": "", "return": "List<LineString>", "signature": "List<LineString> getLineStrings()", "full_signature": " List<LineString> getLineStrings()", "class_method_signature": "WKTReader2.getLineStrings()", "testcase": false, "constructor": false}, {"identifier": "readCurvedLinearRingText", "parameters": "()", "modifiers": "private", "return": "LinearRing", "signature": "LinearRing readCurvedLinearRingText()", "full_signature": "private LinearRing readCurvedLinearRingText()", "class_method_signature": "WKTReader2.readCurvedLinearRingText()", "testcase": false, "constructor": false}, {"identifier": "readLinearRingText", "parameters": "()", "modifiers": "private", "return": "LinearRing", "signature": "LinearRing readLinearRingText()", "full_signature": "private LinearRing readLinearRingText()", "class_method_signature": "WKTReader2.readLinearRingText()", "testcase": false, "constructor": false}, {"identifier": "readMultiPointText", "parameters": "()", "modifiers": "private", "return": "MultiPoint", "signature": "MultiPoint readMultiPointText()", "full_signature": "private MultiPoint readMultiPointText()", "class_method_signature": "WKTReader2.readMultiPointText()", "testcase": false, "constructor": false}, {"identifier": "getCoordinatesForMultiPoint", "parameters": "()", "modifiers": "private", "return": "Coordinate[]", "signature": "Coordinate[] getCoordinatesForMultiPoint()", "full_signature": "private Coordinate[] getCoordinatesForMultiPoint()", "class_method_signature": "WKTReader2.getCoordinatesForMultiPoint()", "testcase": false, "constructor": false}, {"identifier": "toPoints", "parameters": "(Coordinate[] coordinates)", "modifiers": "private", "return": "Point[]", "signature": "Point[] toPoints(Coordinate[] coordinates)", "full_signature": "private Point[] toPoints(Coordinate[] coordinates)", "class_method_signature": "WKTReader2.toPoints(Coordinate[] coordinates)", "testcase": false, "constructor": false}, {"identifier": "readPolygonText", "parameters": "()", "modifiers": "private", "return": "Polygon", "signature": "Polygon readPolygonText()", "full_signature": "private Polygon readPolygonText()", "class_method_signature": "WKTReader2.readPolygonText()", "testcase": false, "constructor": false}, {"identifier": "readMultiCurveText", "parameters": "()", "modifiers": "private", "return": "MultiLineString", "signature": "MultiLineString readMultiCurveText()", "full_signature": "private MultiLineString readMultiCurveText()", "class_method_signature": "WKTReader2.readMultiCurveText()", "testcase": false, "constructor": false}, {"identifier": "readCurvePolygonText", "parameters": "()", "modifiers": "private", "return": "Polygon", "signature": "Polygon readCurvePolygonText()", "full_signature": "private Polygon readCurvePolygonText()", "class_method_signature": "WKTReader2.readCurvePolygonText()", "testcase": false, "constructor": false}, {"identifier": "readMultiLineStringText", "parameters": "()", "modifiers": "private", "return": "com.vividsolutions.jts.geom.MultiLineString", "signature": "com.vividsolutions.jts.geom.MultiLineString readMultiLineStringText()", "full_signature": "private com.vividsolutions.jts.geom.MultiLineString readMultiLineStringText()", "class_method_signature": "WKTReader2.readMultiLineStringText()", "testcase": false, "constructor": false}, {"identifier": "readMultiPolygonText", "parameters": "()", "modifiers": "private", "return": "MultiPolygon", "signature": "MultiPolygon readMultiPolygonText()", "full_signature": "private MultiPolygon readMultiPolygonText()", "class_method_signature": "WKTReader2.readMultiPolygonText()", "testcase": false, "constructor": false}, {"identifier": "readGeometryCollectionText", "parameters": "()", "modifiers": "private", "return": "GeometryCollection", "signature": "GeometryCollection readGeometryCollectionText()", "full_signature": "private GeometryCollection readGeometryCollectionText()", "class_method_signature": "WKTReader2.readGeometryCollectionText()", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/geometry/jts/WKTReader2.java"}, "focal_method": {"identifier": "read", "parameters": "(String wellKnownText)", "modifiers": "public", "return": "Geometry", "body": "public Geometry read(String wellKnownText) throws ParseException {\n        StringReader reader = new StringReader(wellKnownText);\n        try {\n            return read(reader);\n        } finally {\n            reader.close();\n        }\n    }", "signature": "Geometry read(String wellKnownText)", "full_signature": "public Geometry read(String wellKnownText)", "class_method_signature": "WKTReader2.read(String wellKnownText)", "testcase": false, "constructor": false, "invocations": ["read", "close"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}