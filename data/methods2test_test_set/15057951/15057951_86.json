{"test_class": {"identifier": "PrinterTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-engine/src/test/java/org/smartparam/engine/util/PrinterTest.java"}, "test_case": {"identifier": "testFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormat() {\n\n        // formatowane obiekty\n        Object[] objects = {\n            new Integer(\"123\"),\n            new Integer(\"123\"),\n            new String[]{\"A\", \"B\", \"C\"},\n            new BigDecimal(\"1.23\")\n        };\n\n        // formattery\n        Formatter[] formatters = {\n            null,\n            new Formatter() {\n\n                @Override\n                public String format(Object obj) {\n                    return \"#\" + obj + \"#\";\n                }\n            },\n            null,\n            null\n        };\n\n        // oczekiwane wyniki\n        String[] expectedResults = {\n            \"123\",\n            \"#123#\",\n            \"[A, B, C]\",\n            \"1.23\"\n        };\n\n        // wykonanie testow\n        for (int i = 0; i < objects.length; i++) {\n            Object obj = objects[i];\n            Formatter formatter = formatters[i];\n            String expectedResult = expectedResults[i];\n\n            String result = Printer.format(obj, formatter);\n            assertEquals(expectedResult, result);\n        }\n    }", "signature": "void testFormat()", "full_signature": "@Test public void testFormat()", "class_method_signature": "PrinterTest.testFormat()", "testcase": true, "constructor": false, "invocations": ["format", "assertEquals"]}, "focal_class": {"identifier": "Printer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MIN_OUTPUT_LINES = 3;", "modifier": "private static final", "type": "int", "declarator": "MIN_OUTPUT_LINES = 3", "var_name": "MIN_OUTPUT_LINES"}, {"original_string": "private static final int EXPECTED_LINE_LENGTH = 32;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_LINE_LENGTH = 32", "var_name": "EXPECTED_LINE_LENGTH"}, {"original_string": "private static final int LINE_NUMBER_WIDTH = 3;", "modifier": "private static final", "type": "int", "declarator": "LINE_NUMBER_WIDTH = 3", "var_name": "LINE_NUMBER_WIDTH"}], "methods": [{"identifier": "Printer", "parameters": "()", "modifiers": "private", "return": "", "signature": " Printer()", "full_signature": "private  Printer()", "class_method_signature": "Printer.Printer()", "testcase": false, "constructor": true}, {"identifier": "print", "parameters": "(Collection<?> list, String title, int maxLines, Formatter formatter)", "modifiers": "public static", "return": "String", "signature": "String print(Collection<?> list, String title, int maxLines, Formatter formatter)", "full_signature": "public static String print(Collection<?> list, String title, int maxLines, Formatter formatter)", "class_method_signature": "Printer.print(Collection<?> list, String title, int maxLines, Formatter formatter)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(Collection<?> list, String title)", "modifiers": "public static", "return": "String", "signature": "String print(Collection<?> list, String title)", "full_signature": "public static String print(Collection<?> list, String title)", "class_method_signature": "Printer.print(Collection<?> list, String title)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(Object[] array, String title)", "modifiers": "public static", "return": "String", "signature": "String print(Object[] array, String title)", "full_signature": "public static String print(Object[] array, String title)", "class_method_signature": "Printer.print(Object[] array, String title)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Object e, Formatter formatter)", "modifiers": "static", "return": "String", "signature": "String format(Object e, Formatter formatter)", "full_signature": "static String format(Object e, Formatter formatter)", "class_method_signature": "Printer.format(Object e, Formatter formatter)", "testcase": false, "constructor": false}, {"identifier": "padNumber", "parameters": "(int n)", "modifiers": "private static", "return": "String", "signature": "String padNumber(int n)", "full_signature": "private static String padNumber(int n)", "class_method_signature": "Printer.padNumber(int n)", "testcase": false, "constructor": false}, {"identifier": "repeat", "parameters": "(char c, int count)", "modifiers": "public static", "return": "String", "signature": "String repeat(char c, int count)", "full_signature": "public static String repeat(char c, int count)", "class_method_signature": "Printer.repeat(char c, int count)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/util/Printer.java"}, "focal_method": {"identifier": "format", "parameters": "(Object e, Formatter formatter)", "modifiers": "static", "return": "String", "body": "static String format(Object e, Formatter formatter) {\n        if (formatter != null) {\n            return formatter.format(e);\n        }\n        if (e instanceof Object[]) {\n            return Arrays.toString((Object[]) e);\n        }\n        return String.valueOf(e);\n    }", "signature": "String format(Object e, Formatter formatter)", "full_signature": "static String format(Object e, Formatter formatter)", "class_method_signature": "Printer.format(Object e, Formatter formatter)", "testcase": false, "constructor": false, "invocations": ["format", "toString", "valueOf"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}