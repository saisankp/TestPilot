{"test_class": {"identifier": "SofaRegistryHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "registry/registry-sofa/src/test/java/com/alipay/sofa/rpc/registry/sofa/SofaRegistryHelperTest.java"}, "test_case": {"identifier": "parseMethodInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseMethodInfo() throws Exception {\n        // \u4e0d\u7528\u6d4b\u8bd5null\u7b49\u60c5\u51b5\uff0c\n        Map<String, Object> map = new HashMap<String, Object>();\n        SofaRegistryHelper.parseMethodInfo(map, \"xx\", \"[]\");\n        Assert.assertTrue(map.size() == 0);\n\n        map.clear();\n        SofaRegistryHelper.parseMethodInfo(map, \"xx\", \"[xxxx]\");\n        Assert.assertTrue(map.size() == 0);\n\n        map.clear();\n        SofaRegistryHelper.parseMethodInfo(map, \"xx\", \"[clientTimeout#5555]\");\n        Assert.assertTrue(map.size() == 1);\n        Assert.assertTrue(5555 == (Integer) map.get(\".xx.timeout\"));\n\n        map.clear();\n        SofaRegistryHelper.parseMethodInfo(map, \"xx\", \"[_AUTORECONNECT#false@_TIMEOUT#2000]\");\n        Assert.assertTrue(map.size() == 2);\n        Assert.assertTrue(2000 == (Integer) map.get(\".xx.timeout\"));\n        Assert.assertTrue(\"false\".equals(map.get(\".xx._AUTORECONNECT\")));\n\n        map.clear();\n        SofaRegistryHelper.parseMethodInfo(map, \"xx\", \"[clientTimeout#4444@retries#3]\");\n        Assert.assertTrue(map.size() == 2);\n        Assert.assertTrue(4444 == (Integer) map.get(\".xx.timeout\"));\n        Assert.assertTrue(\"3\".equals(map.get(\".xx.retries\")));\n    }", "signature": "void parseMethodInfo()", "full_signature": "@Test public void parseMethodInfo()", "class_method_signature": "SofaRegistryHelperTest.parseMethodInfo()", "testcase": true, "constructor": false, "invocations": ["parseMethodInfo", "assertTrue", "size", "clear", "parseMethodInfo", "assertTrue", "size", "clear", "parseMethodInfo", "assertTrue", "size", "assertTrue", "get", "clear", "parseMethodInfo", "assertTrue", "size", "assertTrue", "get", "assertTrue", "equals", "get", "clear", "parseMethodInfo", "assertTrue", "size", "assertTrue", "get", "assertTrue", "equals", "get"]}, "focal_class": {"identifier": "SofaRegistryHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER                     = LoggerFactory.getLogger(SofaRegistryHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER                     = LoggerFactory.getLogger(SofaRegistryHelper.class)", "var_name": "LOGGER"}, {"original_string": "public static final String  PUBLISHER_PREFIX           = \"SofaProvider-\";", "modifier": "public static final", "type": "String", "declarator": "PUBLISHER_PREFIX           = \"SofaProvider-\"", "var_name": "PUBLISHER_PREFIX"}, {"original_string": "public static final String  SUBSCRIBER_PREFIX          = \"SofaSubscriber-\";", "modifier": "public static final", "type": "String", "declarator": "SUBSCRIBER_PREFIX          = \"SofaSubscriber-\"", "var_name": "SUBSCRIBER_PREFIX"}, {"original_string": "public static final String  SUBSCRIBER_LIST_GROUP_ID   = \"SOFA\";", "modifier": "public static final", "type": "String", "declarator": "SUBSCRIBER_LIST_GROUP_ID   = \"SOFA\"", "var_name": "SUBSCRIBER_LIST_GROUP_ID"}, {"original_string": "public static final String  SUBSCRIBER_CONFIG_GROUP_ID = \"SOFA.CONFIG\";", "modifier": "public static final", "type": "String", "declarator": "SUBSCRIBER_CONFIG_GROUP_ID = \"SOFA.CONFIG\"", "var_name": "SUBSCRIBER_CONFIG_GROUP_ID"}, {"original_string": "public static final String  PROTOCOL_TYPE_OVERRIDE     = \"override\";", "modifier": "public static final", "type": "String", "declarator": "PROTOCOL_TYPE_OVERRIDE     = \"override\"", "var_name": "PROTOCOL_TYPE_OVERRIDE"}], "methods": [{"identifier": "buildListDataId", "parameters": "(AbstractInterfaceConfig config, String protocol)", "modifiers": "public static", "return": "String", "signature": "String buildListDataId(AbstractInterfaceConfig config, String protocol)", "full_signature": "public static String buildListDataId(AbstractInterfaceConfig config, String protocol)", "class_method_signature": "SofaRegistryHelper.buildListDataId(AbstractInterfaceConfig config, String protocol)", "testcase": false, "constructor": false}, {"identifier": "convertProviderToUrls", "parameters": "(ProviderConfig providerConfig, ServerConfig server)", "modifiers": "public static", "return": "String", "signature": "String convertProviderToUrls(ProviderConfig providerConfig, ServerConfig server)", "full_signature": "public static String convertProviderToUrls(ProviderConfig providerConfig, ServerConfig server)", "class_method_signature": "SofaRegistryHelper.convertProviderToUrls(ProviderConfig providerConfig, ServerConfig server)", "testcase": false, "constructor": false}, {"identifier": "convertMap2Pair", "parameters": "(Map<String, String> map)", "modifiers": "private static", "return": "String", "signature": "String convertMap2Pair(Map<String, String> map)", "full_signature": "private static String convertMap2Pair(Map<String, String> map)", "class_method_signature": "SofaRegistryHelper.convertMap2Pair(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "getKeyPairs", "parameters": "(String key, Object value)", "modifiers": "private static", "return": "String", "signature": "String getKeyPairs(String key, Object value)", "full_signature": "private static String getKeyPairs(String key, Object value)", "class_method_signature": "SofaRegistryHelper.getKeyPairs(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "addCommonAttrs", "parameters": "(StringBuilder sb)", "modifiers": "private static", "return": "void", "signature": "void addCommonAttrs(StringBuilder sb)", "full_signature": "private static void addCommonAttrs(StringBuilder sb)", "class_method_signature": "SofaRegistryHelper.addCommonAttrs(StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "parseProviderInfos", "parameters": "(List<String> urls)", "modifiers": "public static", "return": "List<ProviderInfo>", "signature": "List<ProviderInfo> parseProviderInfos(List<String> urls)", "full_signature": "public static List<ProviderInfo> parseProviderInfos(List<String> urls)", "class_method_signature": "SofaRegistryHelper.parseProviderInfos(List<String> urls)", "testcase": false, "constructor": false}, {"identifier": "parseProviderInfo", "parameters": "(String originUrl)", "modifiers": "public static", "return": "ProviderInfo", "signature": "ProviderInfo parseProviderInfo(String originUrl)", "full_signature": "public static ProviderInfo parseProviderInfo(String originUrl)", "class_method_signature": "SofaRegistryHelper.parseProviderInfo(String originUrl)", "testcase": false, "constructor": false}, {"identifier": "parseMethodInfo", "parameters": "(Map<String, Object> methodParameters, String method, String valueStr)", "modifiers": "static", "return": "void", "signature": "void parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "full_signature": "static void parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "class_method_signature": "SofaRegistryHelper.parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Map<String, String> map, String... keys)", "modifiers": "static", "return": "String", "signature": "String getValue(Map<String, String> map, String... keys)", "full_signature": "static String getValue(Map<String, String> map, String... keys)", "class_method_signature": "SofaRegistryHelper.getValue(Map<String, String> map, String... keys)", "testcase": false, "constructor": false}, {"identifier": "removeOldKeys", "parameters": "(Map<String, String> map, String... keys)", "modifiers": "static", "return": "void", "signature": "void removeOldKeys(Map<String, String> map, String... keys)", "full_signature": "static void removeOldKeys(Map<String, String> map, String... keys)", "class_method_signature": "SofaRegistryHelper.removeOldKeys(Map<String, String> map, String... keys)", "testcase": false, "constructor": false}], "file": "registry/registry-sofa/src/main/java/com/alipay/sofa/rpc/registry/sofa/SofaRegistryHelper.java"}, "focal_method": {"identifier": "parseMethodInfo", "parameters": "(Map<String, Object> methodParameters, String method, String valueStr)", "modifiers": "static", "return": "void", "body": "static void parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr) {\n        int idxSplit = valueStr.indexOf('#'); // \"#\"\u88ab\u8ba4\u4e3a\u662fMethodSpecial\u914d\u7f6e\u7684\u6807\u5fd7\n        if (idxSplit < 0) {\n            return;\n        }\n\n        int idxLeft = valueStr.indexOf('[');\n        int idxRight = valueStr.indexOf(']');\n\n        String parameters = valueStr.substring(idxLeft + 1, idxRight);\n        String[] kvs = parameters.split(\"@\");\n        if (kvs.length > 0) {\n            Map<String, String> tmp = new HashMap<String, String>();\n            for (String kvp : kvs) {\n                String[] kv = kvp.split(\"#\");\n                if (kv.length == 2) {\n                    tmp.put(kv[0], kv[1]);\n                }\n            }\n            // timeout\u7279\u6b8a\u5904\u7406\n            String timeout = getValue(tmp, ATTR_TIMEOUT, KEY_TIMEOUT,\n                TIMEOUT);\n            if (timeout != null) {\n                removeOldKeys(tmp, ATTR_TIMEOUT, KEY_TIMEOUT, TIMEOUT);\n                try {\n                    methodParameters.put(\".\" + method + \".\" + ATTR_TIMEOUT,\n                        Integer.parseInt(timeout));\n                } catch (Exception e) {\n                    LOGGER.error(\"method timeout is invalid : {}\", timeout);\n                }\n            }\n            // \u5176\u5b83\u5c31\u5b58\u8d77\u6765\n            for (Map.Entry<String, String> entry : tmp.entrySet()) {\n                methodParameters.put(\".\" + method + \".\" + entry.getKey(), entry.getValue());\n            }\n        }\n    }", "signature": "void parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "full_signature": "static void parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "class_method_signature": "SofaRegistryHelper.parseMethodInfo(Map<String, Object> methodParameters, String method, String valueStr)", "testcase": false, "constructor": false, "invocations": ["indexOf", "indexOf", "indexOf", "substring", "split", "split", "put", "getValue", "removeOldKeys", "put", "parseInt", "error", "entrySet", "put", "getKey", "getValue"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}