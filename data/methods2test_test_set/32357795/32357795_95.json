{"test_class": {"identifier": "ImportExportUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/utils/ImportExportUtilsTest.java"}, "test_case": {"identifier": "testGetTopicMapId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetTopicMapId() {\n    testId(\"1\", 1L);\n    testId(\"123\", 123L);\n    testId(\"M1\", 1L);\n    testId(\"M123\", 123L);\n    testId(\"x-ontopia:tm-rdbms:1\", 1L);\n    testId(\"x-ontopia:tm-rdbms:123\", 123L);\n    testId(\"x-ontopia:tm-rdbms:M1\", 1L);\n    testId(\"x-ontopia:tm-rdbms:M123\", 123L);\n  }", "signature": "void testGetTopicMapId()", "full_signature": "@Test public void testGetTopicMapId()", "class_method_signature": "ImportExportUtilsTest.testGetTopicMapId()", "testcase": true, "constructor": false, "invocations": ["testId", "testId", "testId", "testId", "testId", "testId", "testId", "testId"]}, "focal_class": {"identifier": "ImportExportUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ONTOPIA_RDBMS_URI_PREFIX = \"x-ontopia:tm-rdbms:\";", "modifier": "private static final", "type": "String", "declarator": "ONTOPIA_RDBMS_URI_PREFIX = \"x-ontopia:tm-rdbms:\"", "var_name": "ONTOPIA_RDBMS_URI_PREFIX"}, {"original_string": "private static final String XTM_EXTENSION = \".xtm\";", "modifier": "private static final", "type": "String", "declarator": "XTM_EXTENSION = \".xtm\"", "var_name": "XTM_EXTENSION"}, {"original_string": "private static final String TMX_EXTENSION = \".tmx\";", "modifier": "private static final", "type": "String", "declarator": "TMX_EXTENSION = \".tmx\"", "var_name": "TMX_EXTENSION"}, {"original_string": "private static final String LTM_EXTENSION = \".ltm\";", "modifier": "private static final", "type": "String", "declarator": "LTM_EXTENSION = \".ltm\"", "var_name": "LTM_EXTENSION"}, {"original_string": "private static final String CTM_EXTENSION = \".ctm\";", "modifier": "private static final", "type": "String", "declarator": "CTM_EXTENSION = \".ctm\"", "var_name": "CTM_EXTENSION"}, {"original_string": "private static Set<ImportExportServiceIF> services;", "modifier": "private static", "type": "Set<ImportExportServiceIF>", "declarator": "services", "var_name": "services"}], "methods": [{"identifier": "loadServices", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void loadServices()", "full_signature": "private static void loadServices()", "class_method_signature": "ImportExportUtils.loadServices()", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Set<ImportExportServiceIF>", "signature": "Set<ImportExportServiceIF> getServices()", "full_signature": "@SuppressWarnings(\"unchecked\") public static Set<ImportExportServiceIF> getServices()", "class_method_signature": "ImportExportUtils.getServices()", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "(File file)", "modifiers": "public static", "return": "TopicMapReaderIF", "signature": "TopicMapReaderIF getReader(File file)", "full_signature": "public static TopicMapReaderIF getReader(File file)", "class_method_signature": "ImportExportUtils.getReader(File file)", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "(String filename_or_url)", "modifiers": "public static", "return": "TopicMapReaderIF", "signature": "TopicMapReaderIF getReader(String filename_or_url)", "full_signature": "public static TopicMapReaderIF getReader(String filename_or_url)", "class_method_signature": "ImportExportUtils.getReader(String filename_or_url)", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "(URL url)", "modifiers": "public static", "return": "TopicMapReaderIF", "signature": "TopicMapReaderIF getReader(URL url)", "full_signature": "public static TopicMapReaderIF getReader(URL url)", "class_method_signature": "ImportExportUtils.getReader(URL url)", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "(File tmfile)", "modifiers": "public static", "return": "TopicMapWriterIF", "signature": "TopicMapWriterIF getWriter(File tmfile)", "full_signature": "public static TopicMapWriterIF getWriter(File tmfile)", "class_method_signature": "ImportExportUtils.getWriter(File tmfile)", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "(File tmfile, String encoding)", "modifiers": "public static", "return": "TopicMapWriterIF", "signature": "TopicMapWriterIF getWriter(File tmfile, String encoding)", "full_signature": "public static TopicMapWriterIF getWriter(File tmfile, String encoding)", "class_method_signature": "ImportExportUtils.getWriter(File tmfile, String encoding)", "testcase": false, "constructor": false}, {"identifier": "getTopicMapId", "parameters": "(String address)", "modifiers": "public static", "return": "long", "signature": "long getTopicMapId(String address)", "full_signature": "public static long getTopicMapId(String address)", "class_method_signature": "ImportExportUtils.getTopicMapId(String address)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/utils/ImportExportUtils.java"}, "focal_method": {"identifier": "getTopicMapId", "parameters": "(String address)", "modifiers": "public static", "return": "long", "body": "public static long getTopicMapId (String address) {\n    int offset = 0;\n    if (address.startsWith(\"M\"))\n      offset = 1;\n    else if (address.startsWith(ONTOPIA_RDBMS_URI_PREFIX)) {\n      // Syntax: x-ontopia:tm-rdbms:12345\n      offset = ONTOPIA_RDBMS_URI_PREFIX.length ();\n      \n      // Ignore M suffix on topic map id\n      if (address.charAt (offset) == 'M')\n        offset = offset + 1;\n    }\n    \n    try {\n      return Long.parseLong (address.substring (offset));\n    } catch (NumberFormatException e) {\n      throw new OntopiaRuntimeException (\"'\" + address\n          + \" is not a valid rdbms topic map URI.\");\n    }\n  }", "signature": "long getTopicMapId(String address)", "full_signature": "public static long getTopicMapId(String address)", "class_method_signature": "ImportExportUtils.getTopicMapId(String address)", "testcase": false, "constructor": false, "invocations": ["startsWith", "startsWith", "length", "charAt", "parseLong", "substring"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}