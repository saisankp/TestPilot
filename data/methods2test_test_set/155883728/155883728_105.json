{"test_class": {"identifier": "CliArgParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "webster/src/test/java/net/adamcin/oakpal/webster/CliArgParserTest.java"}, "test_case": {"identifier": "testComplexLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testComplexLine() {\n        final String[] parsed = CliArgParser\n                .parse(\"some \\\"command with\\\" -q\\\"uot\\\\\\\" e\\\\\\\"d\\\" args\\\\ and\\\\\\\\ stuff\");\n        assertArrayEquals(\"parsed is\",\n                new String[]{\"some\", \"command with\", \"-quot\\\" e\\\"d\", \"args and\\\\\", \"stuff\"},\n                parsed);\n    }", "signature": "void testComplexLine()", "full_signature": "@Test public void testComplexLine()", "class_method_signature": "CliArgParserTest.testComplexLine()", "testcase": true, "constructor": false, "invocations": ["parse", "assertArrayEquals"]}, "focal_class": {"identifier": "CliArgParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CliArgParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " CliArgParser()", "full_signature": "private  CliArgParser()", "class_method_signature": "CliArgParser.CliArgParser()", "testcase": false, "constructor": true}, {"identifier": "lex", "parameters": "(final String input)", "modifiers": "static", "return": "List<Token>", "signature": "List<Token> lex(final String input)", "full_signature": "static List<Token> lex(final String input)", "class_method_signature": "CliArgParser.lex(final String input)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String input)", "modifiers": "public static", "return": "String[]", "signature": "String[] parse(final String input)", "full_signature": "public static String[] parse(final String input)", "class_method_signature": "CliArgParser.parse(final String input)", "testcase": false, "constructor": false}], "file": "webster/src/main/java/net/adamcin/oakpal/webster/CliArgParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(final String input)", "modifiers": "public static", "return": "String[]", "body": "public static String[] parse(final String input) {\n        List<Token> tokens = lex(input);\n        Parser parser = new Parser();\n        for (Token token : tokens) {\n            parser.parseNext(token);\n        }\n        return parser.getArgs().toArray(new String[0]);\n    }", "signature": "String[] parse(final String input)", "full_signature": "public static String[] parse(final String input)", "class_method_signature": "CliArgParser.parse(final String input)", "testcase": false, "constructor": false, "invocations": ["lex", "parseNext", "toArray", "getArgs"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}