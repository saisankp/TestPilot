{"test_class": {"identifier": "PutAttributeModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PutAttributeModel model;", "modifier": "private", "type": "PutAttributeModel", "declarator": "model", "var_name": "model"}], "file": "tiles-template/src/test/java/org/apache/tiles/template/PutAttributeModelTest.java"}, "test_case": {"identifier": "testExecuteListAttribute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecuteListAttribute() throws IOException {\n        TilesContainer container = createMock(TilesContainer.class);\n        Request request = createMock(Request.class);\n        ModelBody modelBody = createMock(ModelBody.class);\n        AttributeContext attributeContext = createMock(AttributeContext.class);\n        Deque<Object> composeStack = new ArrayDeque<Object>();\n        ListAttribute listAttribute = new ListAttribute();\n        composeStack.push(listAttribute);\n        Map<String, Object> requestScope = new HashMap<String, Object>();\n        requestScope.put(ComposeStackUtil.COMPOSE_STACK_ATTRIBUTE_NAME, composeStack);\n        requestScope.put(TilesAccess.CURRENT_CONTAINER_ATTRIBUTE_NAME, container);\n        ApplicationContext applicationContext = createMock(ApplicationContext.class);\n\n        expect(request.getApplicationContext()).andReturn(applicationContext);\n        expect(request.getContext(\"request\")).andReturn(requestScope).anyTimes();\n        expect(container.getAttributeContext(request)).andReturn(attributeContext);\n        attributeContext.putAttribute(eq(\"myName\"), (Attribute) notNull(), eq(false));\n        expect(modelBody.evaluateAsString()).andReturn(null);\n\n        replay(container, attributeContext, request, applicationContext, modelBody);\n        model.execute(\"myName\", \"myValue\", \"myExpression\", \"myRole\",\n                \"myType\", false, request, modelBody);\n        verify(container, attributeContext, request, applicationContext, modelBody);\n    }", "signature": "void testExecuteListAttribute()", "full_signature": "@Test public void testExecuteListAttribute()", "class_method_signature": "PutAttributeModelTest.testExecuteListAttribute()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "createMock", "push", "put", "put", "createMock", "andReturn", "expect", "getApplicationContext", "anyTimes", "andReturn", "expect", "getContext", "andReturn", "expect", "getAttributeContext", "putAttribute", "eq", "notNull", "eq", "andReturn", "expect", "evaluateAsString", "replay", "execute", "verify"]}, "focal_class": {"identifier": "PutAttributeModel", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "execute", "parameters": "(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "signature": "void execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "full_signature": "public void execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "class_method_signature": "PutAttributeModel.execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "testcase": false, "constructor": false}, {"identifier": "putAttributeInParent", "parameters": "(Attribute attribute,\n            TilesContainer container, Deque<Object> composeStack, String name,\n            Object value, String expression, String body, String role,\n            String type, boolean cascade, Request request)", "modifiers": "private", "return": "void", "signature": "void putAttributeInParent(Attribute attribute,\n            TilesContainer container, Deque<Object> composeStack, String name,\n            Object value, String expression, String body, String role,\n            String type, boolean cascade, Request request)", "full_signature": "private void putAttributeInParent(Attribute attribute,\n            TilesContainer container, Deque<Object> composeStack, String name,\n            Object value, String expression, String body, String role,\n            String type, boolean cascade, Request request)", "class_method_signature": "PutAttributeModel.putAttributeInParent(Attribute attribute,\n            TilesContainer container, Deque<Object> composeStack, String name,\n            Object value, String expression, String body, String role,\n            String type, boolean cascade, Request request)", "testcase": false, "constructor": false}], "file": "tiles-template/src/main/java/org/apache/tiles/template/PutAttributeModel.java"}, "focal_method": {"identifier": "execute", "parameters": "(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "body": "public void execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody) throws IOException {\n        Deque<Object> composeStack = ComposeStackUtil.getComposeStack(request);\n        Attribute attribute = new Attribute();\n        composeStack.push(attribute);\n        String currentBody = modelBody.evaluateAsString();\n        TilesContainer container = TilesAccess.getCurrentContainer(request);\n        attribute = (Attribute) composeStack.pop();\n        putAttributeInParent(attribute, container, composeStack, name,\n                value, expression, currentBody, role, type, cascade, request);\n    }", "signature": "void execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "full_signature": "public void execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "class_method_signature": "PutAttributeModel.execute(@Parameter(required = true) String name, Object value,\n            String expression, String role, String type, boolean cascade,\n            Request request, ModelBody modelBody)", "testcase": false, "constructor": false, "invocations": ["getComposeStack", "push", "evaluateAsString", "getCurrentContainer", "pop", "putAttributeInParent"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}