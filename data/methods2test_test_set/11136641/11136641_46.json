{"test_class": {"identifier": "BindOperationExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LdapOperations ldapOperationsMock;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperationsMock", "var_name": "ldapOperationsMock"}], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/BindOperationExecutorTest.java"}, "test_case": {"identifier": "testRollback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRollback() {\n        LdapName expectedDn = LdapUtils.newLdapName(\"cn=john doe\");\n        BindOperationExecutor tested = new BindOperationExecutor(\n                ldapOperationsMock, expectedDn, null, null);\n\n        // perform teste\n        tested.rollback();\n\n        verify(ldapOperationsMock).unbind(expectedDn);\n    }", "signature": "void testRollback()", "full_signature": "@Test public void testRollback()", "class_method_signature": "BindOperationExecutorTest.testRollback()", "testcase": true, "constructor": false, "invocations": ["newLdapName", "rollback", "unbind", "verify"]}, "focal_class": {"identifier": "BindOperationExecutor", "superclass": "", "interfaces": "implements\n        CompensatingTransactionOperationExecutor", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(BindOperationExecutor.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BindOperationExecutor.class)", "var_name": "log"}, {"original_string": "private LdapOperations ldapOperations;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperations", "var_name": "ldapOperations"}, {"original_string": "private Name dn;", "modifier": "private", "type": "Name", "declarator": "dn", "var_name": "dn"}, {"original_string": "private Object originalObject;", "modifier": "private", "type": "Object", "declarator": "originalObject", "var_name": "originalObject"}, {"original_string": "private Attributes originalAttributes;", "modifier": "private", "type": "Attributes", "declarator": "originalAttributes", "var_name": "originalAttributes"}], "methods": [{"identifier": "BindOperationExecutor", "parameters": "(LdapOperations ldapOperations, Name dn,\n            Object originalObject, Attributes originalAttributes)", "modifiers": "public", "return": "", "signature": " BindOperationExecutor(LdapOperations ldapOperations, Name dn,\n            Object originalObject, Attributes originalAttributes)", "full_signature": "public  BindOperationExecutor(LdapOperations ldapOperations, Name dn,\n            Object originalObject, Attributes originalAttributes)", "class_method_signature": "BindOperationExecutor.BindOperationExecutor(LdapOperations ldapOperations, Name dn,\n            Object originalObject, Attributes originalAttributes)", "testcase": false, "constructor": true}, {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "BindOperationExecutor.rollback()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "BindOperationExecutor.commit()", "testcase": false, "constructor": false}, {"identifier": "performOperation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void performOperation()", "full_signature": "public void performOperation()", "class_method_signature": "BindOperationExecutor.performOperation()", "testcase": false, "constructor": false}, {"identifier": "getDn", "parameters": "()", "modifiers": "", "return": "Name", "signature": "Name getDn()", "full_signature": " Name getDn()", "class_method_signature": "BindOperationExecutor.getDn()", "testcase": false, "constructor": false}, {"identifier": "getLdapOperations", "parameters": "()", "modifiers": "", "return": "LdapOperations", "signature": "LdapOperations getLdapOperations()", "full_signature": " LdapOperations getLdapOperations()", "class_method_signature": "BindOperationExecutor.getLdapOperations()", "testcase": false, "constructor": false}, {"identifier": "getOriginalAttributes", "parameters": "()", "modifiers": "", "return": "Attributes", "signature": "Attributes getOriginalAttributes()", "full_signature": " Attributes getOriginalAttributes()", "class_method_signature": "BindOperationExecutor.getOriginalAttributes()", "testcase": false, "constructor": false}, {"identifier": "getOriginalObject", "parameters": "()", "modifiers": "", "return": "Object", "signature": "Object getOriginalObject()", "full_signature": " Object getOriginalObject()", "class_method_signature": "BindOperationExecutor.getOriginalObject()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/BindOperationExecutor.java"}, "focal_method": {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void rollback() {\n        try {\n            ldapOperations.unbind(dn);\n        } catch (Exception e) {\n            log.warn(\"Failed to rollback, dn:\" + dn.toString(), e);\n        }\n    }", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "BindOperationExecutor.rollback()", "testcase": false, "constructor": false, "invocations": ["unbind", "warn", "toString"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}