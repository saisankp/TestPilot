{"test_class": {"identifier": "BoundaryPointXlsParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "entsoe-util/src/test/java/com/powsybl/entsoe/util/BoundaryPointXlsParserTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws IOException {\n        HSSFWorkbook workbook = createWorkbook();\n\n        byte[] buffer;\n        try (ByteArrayOutputStream stream = new ByteArrayOutputStream(1024)) {\n            workbook.write(stream);\n            stream.flush();\n            buffer = stream.toByteArray();\n        }\n\n        Map<String, BoundaryPoint> boundaryPoints;\n        try (InputStream stream = new ByteArrayInputStream(buffer)) {\n            BoundaryPointXlsParser parser = new BoundaryPointXlsParser();\n            boundaryPoints = parser.parse(stream);\n        }\n\n        assertEquals(1, boundaryPoints.size());\n        BoundaryPoint point = boundaryPoints.get(\"BoundaryPoint FR-BE\");\n        assertNotNull(point);\n        assertEquals(\"BoundaryPoint FR-BE\", point.getName());\n        assertEquals(Country.FR, point.getBorderFrom());\n        assertEquals(Country.BE, point.getBorderTo());\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "BoundaryPointXlsParserTest.test()", "testcase": true, "constructor": false, "invocations": ["createWorkbook", "write", "flush", "toByteArray", "parse", "assertEquals", "size", "get", "assertNotNull", "assertEquals", "getName", "assertEquals", "getBorderFrom", "assertEquals", "getBorderTo"]}, "focal_class": {"identifier": "BoundaryPointXlsParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toCountry", "parameters": "(String border)", "modifiers": "private static", "return": "Country", "signature": "Country toCountry(String border)", "full_signature": "private static Country toCountry(String border)", "class_method_signature": "BoundaryPointXlsParser.toCountry(String border)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is)", "modifiers": "public", "return": "Map<String, BoundaryPoint>", "signature": "Map<String, BoundaryPoint> parse(InputStream is)", "full_signature": "public Map<String, BoundaryPoint> parse(InputStream is)", "class_method_signature": "BoundaryPointXlsParser.parse(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "parseDefault", "parameters": "()", "modifiers": "public", "return": "Map<String, BoundaryPoint>", "signature": "Map<String, BoundaryPoint> parseDefault()", "full_signature": "public Map<String, BoundaryPoint> parseDefault()", "class_method_signature": "BoundaryPointXlsParser.parseDefault()", "testcase": false, "constructor": false}], "file": "entsoe-util/src/main/java/com/powsybl/entsoe/util/BoundaryPointXlsParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(InputStream is)", "modifiers": "public", "return": "Map<String, BoundaryPoint>", "body": "public Map<String, BoundaryPoint> parse(InputStream is) throws IOException {\n        Map<String, BoundaryPoint> boundaryPoints = new HashMap<>();\n        HSSFWorkbook workbook = new HSSFWorkbook(is);\n        HSSFSheet sheet = workbook.getSheetAt(0);\n        Iterator<Row> rowIterator = sheet.iterator();\n        rowIterator.next();\n        rowIterator.next();\n        while (rowIterator.hasNext()) {\n            Row row = rowIterator.next();\n            Cell boundaryPointNameCell = row.getCell(13);\n            Cell borderFromCell = row.getCell(14);\n            Cell borderToCell = row.getCell(15);\n            String boundaryPointName = boundaryPointNameCell.getStringCellValue();\n            if (boundaryPointName.equals(\"-\")) {\n                continue;\n            }\n            Country borderFrom = toCountry(borderFromCell.getStringCellValue());\n            Country borderTo = toCountry(borderToCell.getStringCellValue());\n            boundaryPoints.put(boundaryPointName, new BoundaryPoint(boundaryPointName, borderFrom, borderTo));\n        }\n        return boundaryPoints;\n    }", "signature": "Map<String, BoundaryPoint> parse(InputStream is)", "full_signature": "public Map<String, BoundaryPoint> parse(InputStream is)", "class_method_signature": "BoundaryPointXlsParser.parse(InputStream is)", "testcase": false, "constructor": false, "invocations": ["getSheetAt", "iterator", "next", "next", "hasNext", "next", "getCell", "getCell", "getCell", "getStringCellValue", "equals", "toCountry", "getStringCellValue", "toCountry", "getStringCellValue", "put"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}