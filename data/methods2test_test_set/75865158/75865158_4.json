{"test_class": {"identifier": "SolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "puzzlesolver/src/test/java/uk/co/samuelpratt/sudoku/puzzlesolver/SolverTest.java"}, "test_case": {"identifier": "ValidPuzzle_Solve_NoDuplicateValuesInRows", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void ValidPuzzle_Solve_NoDuplicateValuesInRows() {\n\n        //Arrange & Act\n        Puzzle solvedPuzzle = solvePuzzle(getPuzzle());\n\n        for (int y = 0; y < 9; y++) {\n            List<Point> colPoints = new ArrayList<>();\n            for (int x = 0; x < Puzzle.SIZE; x++) {\n                colPoints.add(new Point(x, y));\n            }\n            AssertNoDuplicatesInLine(solvedPuzzle, colPoints);\n        }\n\n    }", "signature": "void ValidPuzzle_Solve_NoDuplicateValuesInRows()", "full_signature": "@Test public void ValidPuzzle_Solve_NoDuplicateValuesInRows()", "class_method_signature": "SolverTest.ValidPuzzle_Solve_NoDuplicateValuesInRows()", "testcase": true, "constructor": false, "invocations": ["solvePuzzle", "getPuzzle", "add", "AssertNoDuplicatesInLine"]}, "focal_class": {"identifier": "Solver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Puzzle originalPuzzle;", "modifier": "private", "type": "Puzzle", "declarator": "originalPuzzle", "var_name": "originalPuzzle"}], "methods": [{"identifier": "Solver", "parameters": "(Puzzle puzzle)", "modifiers": "public", "return": "", "signature": " Solver(Puzzle puzzle)", "full_signature": "public  Solver(Puzzle puzzle)", "class_method_signature": "Solver.Solver(Puzzle puzzle)", "testcase": false, "constructor": true}, {"identifier": "solvePuzzle", "parameters": "()", "modifiers": "public", "return": "Puzzle", "signature": "Puzzle solvePuzzle()", "full_signature": "public Puzzle solvePuzzle()", "class_method_signature": "Solver.solvePuzzle()", "testcase": false, "constructor": false}, {"identifier": "solve", "parameters": "(Puzzle workingPuzzle)", "modifiers": "private", "return": "Boolean", "signature": "Boolean solve(Puzzle workingPuzzle)", "full_signature": "private Boolean solve(Puzzle workingPuzzle)", "class_method_signature": "Solver.solve(Puzzle workingPuzzle)", "testcase": false, "constructor": false}], "file": "puzzlesolver/src/main/java/uk/co/samuelpratt/sudoku/puzzlesolver/Solver.java"}, "focal_method": {"identifier": "solvePuzzle", "parameters": "()", "modifiers": "public", "return": "Puzzle", "body": "public Puzzle solvePuzzle() {\n        Puzzle workingPuzzle = new Puzzle(originalPuzzle);\n        solve(workingPuzzle);\n        return workingPuzzle;\n    }", "signature": "Puzzle solvePuzzle()", "full_signature": "public Puzzle solvePuzzle()", "class_method_signature": "Solver.solvePuzzle()", "testcase": false, "constructor": false, "invocations": ["solve"]}, "repository": {"repo_id": 75865158, "url": "https://github.com/samuelpratt/Sudoku", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 96743, "license": "licensed"}}