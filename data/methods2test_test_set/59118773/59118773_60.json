{"test_class": {"identifier": "AverageNumberOfTenderersControllerTest", "superclass": "extends AbstractEndPointControllerTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AverageNumberOfTenderersController averageNumberOfTenderersController;", "modifier": "@Autowired\n    private", "type": "AverageNumberOfTenderersController", "declarator": "averageNumberOfTenderersController", "var_name": "averageNumberOfTenderersController"}], "file": "web/src/test/java/org/devgateway/ocds/web/rest/controller/AverageNumberOfTenderersControllerTest.java"}, "test_case": {"identifier": "averageNumberOfTenderers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void averageNumberOfTenderers() throws Exception {\n        final List<Document> averageNumberOfTenderers = averageNumberOfTenderersController\n                .averageNumberOfTenderersYearly(new YearFilterPagingRequest());\n\n        final Document sec = averageNumberOfTenderers.get(1);\n        int year = (int) sec.get(AverageNumberOfTenderersController.Keys.YEAR);\n        double averageNoTenderers = (double) sec.get(AverageNumberOfTenderersController.Keys.AVERAGE_NO_OF_TENDERERS);\n        Assert.assertEquals(2015, year);\n        Assert.assertEquals(5.5, averageNoTenderers, 0);\n\n        final Document first = averageNumberOfTenderers.get(0);\n        year = (int) first.get(AverageNumberOfTenderersController.Keys.YEAR);\n        averageNoTenderers = (double) first.get(AverageNumberOfTenderersController.Keys.AVERAGE_NO_OF_TENDERERS);\n        Assert.assertEquals(2014, year);\n        Assert.assertEquals(5.0, averageNoTenderers, 0);\n    }", "signature": "void averageNumberOfTenderers()", "full_signature": "@Test public void averageNumberOfTenderers()", "class_method_signature": "AverageNumberOfTenderersControllerTest.averageNumberOfTenderers()", "testcase": true, "constructor": false, "invocations": ["averageNumberOfTenderersYearly", "get", "get", "get", "assertEquals", "assertEquals", "get", "get", "get", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "AverageNumberOfTenderersController", "superclass": "extends GenericOCDSController", "interfaces": "", "fields": [], "methods": [{"identifier": "averageNumberOfTenderersYearly", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Calculate average number of tenderers, by year. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderersYearly\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> averageNumberOfTenderersYearly(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Calculate average number of tenderers, by year. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderersYearly\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public List<Document> averageNumberOfTenderersYearly(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "AverageNumberOfTenderersController.averageNumberOfTenderersYearly(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "averageNumberOfTenderers", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Calculate average number of tenderers. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderers\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Calculate average number of tenderers. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderers\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public List<Document> averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "AverageNumberOfTenderersController.averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}], "file": "web/src/main/java/org/devgateway/ocds/web/rest/controller/AverageNumberOfTenderersController.java"}, "focal_method": {"identifier": "averageNumberOfTenderers", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Calculate average number of tenderers. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderers\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public", "return": "List<Document>", "body": "@ApiOperation(value = \"Calculate average number of tenderers. The endpoint can be filtered\"\n            + \"by year read from tender.tenderPeriod.startDate. \"\n            + \"The number of tenderers are read from tender.numberOfTenderers\")\n\n    @RequestMapping(value = \"/api/averageNumberOfTenderers\",\n            method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\")\n    public List<Document> averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter) {\n\n        DBObject project = new BasicDBObject();\n        addYearlyMonthlyProjection(filter, project, ref(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE));\n        project.put(MongoConstants.FieldNames.TENDER_NO_TENDERERS, 1);\n\n        Aggregation agg = newAggregation(\n                match(where(MongoConstants.FieldNames.TENDER_NO_TENDERERS).gt(0)\n                        .and(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE).exists(true)\n                        .andOperator(getYearDefaultFilterCriteria(filter,\n                                MongoConstants.FieldNames.TENDER_PERIOD_START_DATE))),\n                new CustomProjectionOperation(project),\n                group().avg(MongoConstants.FieldNames.TENDER_NO_TENDERERS)\n                        .as(Keys.AVERAGE_NO_OF_TENDERERS));\n\n\n       return releaseAgg(agg);\n    }", "signature": "List<Document> averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Calculate average number of tenderers. The endpoint can be filtered\" + \"by year read from tender.tenderPeriod.startDate. \" + \"The number of tenderers are read from tender.numberOfTenderers\") @RequestMapping(value = \"/api/averageNumberOfTenderers\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public List<Document> averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "AverageNumberOfTenderersController.averageNumberOfTenderers(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false, "invocations": ["addYearlyMonthlyProjection", "ref", "put", "newAggregation", "match", "andOperator", "exists", "and", "gt", "where", "getYearDefaultFilterCriteria", "as", "avg", "group", "releaseAgg"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}