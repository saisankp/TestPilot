{"test_class": {"identifier": "MongoQueryBuilderFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static LimitsConfig limitsConfig;", "modifier": "private static", "type": "LimitsConfig", "declarator": "limitsConfig", "var_name": "limitsConfig"}, {"original_string": "private MongoQueryBuilderFactory underTest;", "modifier": "private", "type": "MongoQueryBuilderFactory", "declarator": "underTest", "var_name": "underTest"}], "file": "services/thingsearch/persistence/src/test/java/org/eclipse/ditto/services/thingsearch/persistence/read/query/MongoQueryBuilderFactoryTest.java"}, "test_case": {"identifier": "newBuilderWithValidCriteria", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newBuilderWithValidCriteria() {\n        final QueryBuilder builder = underTest.newBuilder(mock(Criteria.class));\n\n        assertThat(builder).isInstanceOf(MongoQueryBuilder.class);\n    }", "signature": "void newBuilderWithValidCriteria()", "full_signature": "@Test public void newBuilderWithValidCriteria()", "class_method_signature": "MongoQueryBuilderFactoryTest.newBuilderWithValidCriteria()", "testcase": true, "constructor": false, "invocations": ["newBuilder", "mock", "isInstanceOf", "assertThat"]}, "focal_class": {"identifier": "MongoQueryBuilderFactory", "superclass": "", "interfaces": "implements QueryBuilderFactory", "fields": [{"original_string": "private final LimitsConfig limitsConfig;", "modifier": "private final", "type": "LimitsConfig", "declarator": "limitsConfig", "var_name": "limitsConfig"}], "methods": [{"identifier": "MongoQueryBuilderFactory", "parameters": "(final LimitsConfig limitsConfig)", "modifiers": "public", "return": "", "signature": " MongoQueryBuilderFactory(final LimitsConfig limitsConfig)", "full_signature": "public  MongoQueryBuilderFactory(final LimitsConfig limitsConfig)", "class_method_signature": "MongoQueryBuilderFactory.MongoQueryBuilderFactory(final LimitsConfig limitsConfig)", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "(final Criteria criteria)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder newBuilder(final Criteria criteria)", "full_signature": "@Override public QueryBuilder newBuilder(final Criteria criteria)", "class_method_signature": "MongoQueryBuilderFactory.newBuilder(final Criteria criteria)", "testcase": false, "constructor": false}, {"identifier": "newUnlimitedBuilder", "parameters": "(final Criteria criteria)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder newUnlimitedBuilder(final Criteria criteria)", "full_signature": "@Override public QueryBuilder newUnlimitedBuilder(final Criteria criteria)", "class_method_signature": "MongoQueryBuilderFactory.newUnlimitedBuilder(final Criteria criteria)", "testcase": false, "constructor": false}, {"identifier": "checkCriteria", "parameters": "(final Criteria criteria)", "modifiers": "private static", "return": "void", "signature": "void checkCriteria(final Criteria criteria)", "full_signature": "private static void checkCriteria(final Criteria criteria)", "class_method_signature": "MongoQueryBuilderFactory.checkCriteria(final Criteria criteria)", "testcase": false, "constructor": false}], "file": "services/thingsearch/persistence/src/main/java/org/eclipse/ditto/services/thingsearch/persistence/read/query/MongoQueryBuilderFactory.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "(final Criteria criteria)", "modifiers": "@Override public", "return": "QueryBuilder", "body": "@Override\n    public QueryBuilder newBuilder(final Criteria criteria) {\n        checkCriteria(criteria);\n        return MongoQueryBuilder.limited(criteria,\n                limitsConfig.getThingsSearchMaxPageSize(), limitsConfig.getThingsSearchDefaultPageSize());\n    }", "signature": "QueryBuilder newBuilder(final Criteria criteria)", "full_signature": "@Override public QueryBuilder newBuilder(final Criteria criteria)", "class_method_signature": "MongoQueryBuilderFactory.newBuilder(final Criteria criteria)", "testcase": false, "constructor": false, "invocations": ["checkCriteria", "limited", "getThingsSearchMaxPageSize", "getThingsSearchDefaultPageSize"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}