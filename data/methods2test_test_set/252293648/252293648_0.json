{"test_class": {"identifier": "DistrictAlertUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "covid19-telegram-bot/src/test/java/org/covid19/district/DistrictAlertUtilsTest.java"}, "test_case": {"identifier": "testBuildDistrictwiseAlert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildDistrictwiseAlert() {\n        List<DistrictwiseData> deltas = asList(\n                new DistrictwiseData(\"Maharashtra\", \"Mumbai\", \"120\", \"90\", \"5\", \"9\", \"12\", \"3\", \"1\", \"\")\n        );\n        List<DistrictwiseData> dailies = asList(\n                new DistrictwiseData(\"Maharashtra\", \"Mumbai\", \"25\", \"40\", \"12\", \"3\", \"11\", \"23\", \"4\", \"\")\n        );\n        AtomicReference<String> alertText = new AtomicReference<>();\n\n        String expected = \"12 new cases, 1 death, 3 recoveries in Mumbai\\n\";\n        String actual = buildDistrictwiseAlert(deltas, dailies);\n\n        assertEquals(expected, actual);\n    }", "signature": "void testBuildDistrictwiseAlert()", "full_signature": "@Test public void testBuildDistrictwiseAlert()", "class_method_signature": "DistrictAlertUtilsTest.testBuildDistrictwiseAlert()", "testcase": true, "constructor": false, "invocations": ["asList", "asList", "buildDistrictwiseAlert", "assertEquals"]}, "focal_class": {"identifier": "DistrictAlertUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildDistrictwiseAlert", "parameters": "(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "modifiers": "public static", "return": "String", "signature": "String buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "full_signature": "public static String buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "class_method_signature": "DistrictAlertUtils.buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "testcase": false, "constructor": false}, {"identifier": "buildDistrictDeltaAlertLine", "parameters": "(AtomicReference<String> updateText, DistrictwiseData delta)", "modifiers": "public static", "return": "void", "signature": "void buildDistrictDeltaAlertLine(AtomicReference<String> updateText, DistrictwiseData delta)", "full_signature": "public static void buildDistrictDeltaAlertLine(AtomicReference<String> updateText, DistrictwiseData delta)", "class_method_signature": "DistrictAlertUtils.buildDistrictDeltaAlertLine(AtomicReference<String> updateText, DistrictwiseData delta)", "testcase": false, "constructor": false}], "file": "covid19-telegram-bot/src/main/java/org/covid19/district/DistrictAlertUtils.java"}, "focal_method": {"identifier": "buildDistrictwiseAlert", "parameters": "(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "modifiers": "public static", "return": "String", "body": "public static String buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies) {\n        AtomicReference<String> alertText = new AtomicReference<>(\"\");\n        deltas.forEach(delta -> buildDistrictDeltaAlertLine(alertText, delta));\n        if (alertText.get().isEmpty() || \"\\n\".equalsIgnoreCase(alertText.get())) {\n            LOG.info(\"No useful update to alert on. Skipping...\");\n            return \"\";\n        }\n//        buildDistrictSummaryAlertBlock(alertText, deltas, dailies);\n        LOG.info(\"Districtwise alert text generated:\\n{}\", alertText.get());\n        return alertText.get();\n    }", "signature": "String buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "full_signature": "public static String buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "class_method_signature": "DistrictAlertUtils.buildDistrictwiseAlert(List<DistrictwiseData> deltas, List<DistrictwiseData> dailies)", "testcase": false, "constructor": false, "invocations": ["forEach", "buildDistrictDeltaAlertLine", "isEmpty", "get", "equalsIgnoreCase", "get", "info", "info", "get", "get"]}, "repository": {"repo_id": 252293648, "url": "https://github.com/xsreality/covid19", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 13, "size": 165, "license": "licensed"}}