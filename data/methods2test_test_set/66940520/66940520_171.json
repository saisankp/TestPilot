{"test_class": {"identifier": "ProgramStageInstanceSupplierTest", "superclass": "extends AbstractSupplierTest<ProgramStageInstance>", "interfaces": "", "fields": [{"original_string": "private ProgramStageInstanceSupplier subject;", "modifier": "private", "type": "ProgramStageInstanceSupplier", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Mock\n    private ProgramSupplier programSupplier;", "modifier": "@Mock\n    private", "type": "ProgramSupplier", "declarator": "programSupplier", "var_name": "programSupplier"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/importer/context/ProgramStageInstanceSupplierTest.java"}, "test_case": {"identifier": "handleNullEvents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleNullEvents()\n    {\n        assertNotNull( subject.get( ImportOptions.getDefaultImportOptions(), null ) );\n    }", "signature": "void handleNullEvents()", "full_signature": "@Test public void handleNullEvents()", "class_method_signature": "ProgramStageInstanceSupplierTest.handleNullEvents()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "get", "getDefaultImportOptions"]}, "focal_class": {"identifier": "ProgramStageInstanceSupplier", "superclass": "extends AbstractSupplier<Map<String, ProgramStageInstance>>", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}, {"original_string": "private final ProgramSupplier programSupplier;", "modifier": "private final", "type": "ProgramSupplier", "declarator": "programSupplier", "var_name": "programSupplier"}], "methods": [{"identifier": "ProgramStageInstanceSupplier", "parameters": "( NamedParameterJdbcTemplate jdbcTemplate,\n        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, ProgramSupplier programSupplier )", "modifiers": "public", "return": "", "signature": " ProgramStageInstanceSupplier( NamedParameterJdbcTemplate jdbcTemplate,\n        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, ProgramSupplier programSupplier )", "full_signature": "public  ProgramStageInstanceSupplier( NamedParameterJdbcTemplate jdbcTemplate,\n        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, ProgramSupplier programSupplier )", "class_method_signature": "ProgramStageInstanceSupplier.ProgramStageInstanceSupplier( NamedParameterJdbcTemplate jdbcTemplate,\n        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, ProgramSupplier programSupplier )", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "( ImportOptions importOptions, List<Event> events )", "modifiers": "@Override public", "return": "Map<String, ProgramStageInstance>", "signature": "Map<String, ProgramStageInstance> get( ImportOptions importOptions, List<Event> events )", "full_signature": "@Override public Map<String, ProgramStageInstance> get( ImportOptions importOptions, List<Event> events )", "class_method_signature": "ProgramStageInstanceSupplier.get( ImportOptions importOptions, List<Event> events )", "testcase": false, "constructor": false}, {"identifier": "getCatOptionCombo", "parameters": "( ResultSet rs )", "modifiers": "private", "return": "CategoryOptionCombo", "signature": "CategoryOptionCombo getCatOptionCombo( ResultSet rs )", "full_signature": "private CategoryOptionCombo getCatOptionCombo( ResultSet rs )", "class_method_signature": "ProgramStageInstanceSupplier.getCatOptionCombo( ResultSet rs )", "testcase": false, "constructor": false}, {"identifier": "getOu", "parameters": "( ResultSet rs )", "modifiers": "private", "return": "OrganisationUnit", "signature": "OrganisationUnit getOu( ResultSet rs )", "full_signature": "private OrganisationUnit getOu( ResultSet rs )", "class_method_signature": "ProgramStageInstanceSupplier.getOu( ResultSet rs )", "testcase": false, "constructor": false}, {"identifier": "getProgramStage", "parameters": "( ImportOptions importOptions, Long programStageId )", "modifiers": "private", "return": "ProgramStage", "signature": "ProgramStage getProgramStage( ImportOptions importOptions, Long programStageId )", "full_signature": "private ProgramStage getProgramStage( ImportOptions importOptions, Long programStageId )", "class_method_signature": "ProgramStageInstanceSupplier.getProgramStage( ImportOptions importOptions, Long programStageId )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/context/ProgramStageInstanceSupplier.java"}, "focal_method": {"identifier": "get", "parameters": "( ImportOptions importOptions, List<Event> events )", "modifiers": "@Override public", "return": "Map<String, ProgramStageInstance>", "body": "@Override\n    public Map<String, ProgramStageInstance> get( ImportOptions importOptions, List<Event> events )\n    {\n        if ( events == null )\n        {\n            return new HashMap<>();\n        }\n\n        Set<String> psiUid = events.stream().map( Event::getUid ).collect( Collectors.toSet() );\n\n        if ( isEmpty( psiUid ) )\n        {\n            return new HashMap<>();\n        }\n\n        final String sql = \"select psi.programinstanceid, psi.programstageid, psi.programstageinstanceid, \" +\n            \"psi.uid, psi.status, psi.deleted, psi.eventdatavalues, psi.duedate, psi.executiondate, \" +\n            \"psi.completeddate, psi.attributeoptioncomboid, psi.geometry, \" +\n            \"ou.organisationunitid, ou.uid, ou.code, ou.name, psi.attributeoptioncomboid,  c.uid as coc_uid  \" +\n            \"from programstageinstance psi join organisationunit ou on psi.organisationunitid = ou.organisationunitid \"\n            +\n            \"join categoryoptioncombo c on psi.attributeoptioncomboid = c.categoryoptioncomboid \" +\n            \"where psi.uid in (:ids)\";\n\n        MapSqlParameterSource parameters = new MapSqlParameterSource();\n        parameters.addValue( \"ids\", psiUid );\n\n        return jdbcTemplate.query( sql, parameters, rs -> {\n            Map<String, ProgramStageInstance> results = new HashMap<>();\n\n            while ( rs.next() )\n            {\n                ProgramStageInstance psi = new ProgramStageInstance();\n\n                psi.setId( rs.getLong( \"programstageinstanceid\" ) );\n                psi.setUid( rs.getString( \"uid\" ) );\n                psi.setStatus( EventStatus.valueOf( rs.getString( \"status\" ) ) );\n                psi.setDeleted( rs.getBoolean( \"deleted\" ) );\n                psi.setProgramStage( getProgramStage( importOptions, rs.getLong( \"programstageid\" ) ) );\n                psi.setOrganisationUnit( getOu( rs ) );\n                psi.setDueDate( rs.getDate( \"duedate\" ) );\n                psi.setExecutionDate( rs.getDate( \"executiondate\" ) );\n                psi.setCompletedDate( rs.getDate( \"completeddate\" ) );\n                psi.setAttributeOptionCombo( getCatOptionCombo ( rs ));\n                try\n                {\n                    psi.setEventDataValues( EventUtils.jsonToEventDataValues( jsonMapper, rs.getObject(\n                        \"eventdatavalues\" ) ) );\n                }\n                catch ( JsonProcessingException e )\n                {\n                    log.error(\n                        \"Invalid Data Element Values payload, skipping Program Stage Instance with id: \" + psi.getId(),\n                        e );\n                }\n                results.put( psi.getUid(), psi );\n            }\n            return results;\n        } );\n    }", "signature": "Map<String, ProgramStageInstance> get( ImportOptions importOptions, List<Event> events )", "full_signature": "@Override public Map<String, ProgramStageInstance> get( ImportOptions importOptions, List<Event> events )", "class_method_signature": "ProgramStageInstanceSupplier.get( ImportOptions importOptions, List<Event> events )", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "toSet", "isEmpty", "addValue", "query", "next", "setId", "getLong", "setUid", "getString", "setStatus", "valueOf", "getString", "setDeleted", "getBoolean", "setProgramStage", "getProgramStage", "getLong", "setOrganisationUnit", "getOu", "setDueDate", "getDate", "setExecutionDate", "getDate", "setCompletedDate", "getDate", "setAttributeOptionCombo", "getCatOptionCombo", "setEventDataValues", "jsonToEventDataValues", "getObject", "error", "getId", "put", "getUid"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}