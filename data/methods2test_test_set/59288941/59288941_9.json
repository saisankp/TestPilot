{"test_class": {"identifier": "RouteServiceTest", "superclass": "", "interfaces": "implements SelectTestSql", "fields": [{"original_string": "private RouteService routeService = new RouteService();", "modifier": "private", "type": "RouteService", "declarator": "routeService = new RouteService()", "var_name": "routeService"}], "file": "baymax-core/src/test/java/com/tongbanjie/baymax/router/RouteServiceTest.java"}, "test_case": {"identifier": "testBuildParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildParameters() throws Exception {\n        Map<Integer, ParameterCommand> commonds = new HashMap<Integer, ParameterCommand>();\n        commonds.put(3, new ParameterCommand(ParameterMethod.setInt, new Object[]{3}, 3));\n        commonds.put(1, new ParameterCommand(ParameterMethod.setInt, new Object[]{1}, 1));\n        commonds.put(2, new ParameterCommand(ParameterMethod.setInt, new Object[]{2}, 2));\n        List<Object> result = routeService.buildParameters(commonds);\n        System.out.println(result);\n        Assert.assertEquals(3, result.size());\n\n        Assert.assertEquals(1, result.get(0));\n        Assert.assertEquals(2, result.get(1));\n        Assert.assertEquals(3, result.get(2));\n    }", "signature": "void testBuildParameters()", "full_signature": "@Test public void testBuildParameters()", "class_method_signature": "RouteServiceTest.testBuildParameters()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "buildParameters", "println", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "RouteService", "superclass": "", "interfaces": "implements IRouteService", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(RouteService.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RouteService.class)", "var_name": "logger"}], "methods": [{"identifier": "doRoute", "parameters": "(String sql, Map<Integer, ParameterCommand> parameterCommand)", "modifiers": "public", "return": "ExecutePlan", "signature": "ExecutePlan doRoute(String sql, Map<Integer, ParameterCommand> parameterCommand)", "full_signature": "public ExecutePlan doRoute(String sql, Map<Integer, ParameterCommand> parameterCommand)", "class_method_signature": "RouteService.doRoute(String sql, Map<Integer, ParameterCommand> parameterCommand)", "testcase": false, "constructor": false}, {"identifier": "route", "parameters": "(List<String> tables, List<CalculateUnit> units, String sql, SqlType sqlType)", "modifiers": "public", "return": "ExecutePlan", "signature": "ExecutePlan route(List<String> tables, List<CalculateUnit> units, String sql, SqlType sqlType)", "full_signature": "public ExecutePlan route(List<String> tables, List<CalculateUnit> units, String sql, SqlType sqlType)", "class_method_signature": "RouteService.route(List<String> tables, List<CalculateUnit> units, String sql, SqlType sqlType)", "testcase": false, "constructor": false}, {"identifier": "buildExecutePlanTypeNo", "parameters": "(String sql, String tableName, SqlType sqlType)", "modifiers": "private", "return": "ExecutePlan", "signature": "ExecutePlan buildExecutePlanTypeNo(String sql, String tableName, SqlType sqlType)", "full_signature": "private ExecutePlan buildExecutePlanTypeNo(String sql, String tableName, SqlType sqlType)", "class_method_signature": "RouteService.buildExecutePlanTypeNo(String sql, String tableName, SqlType sqlType)", "testcase": false, "constructor": false}, {"identifier": "buildExecutePlanTypeAll", "parameters": "(PartitionTable partitionTable, SqlType sqlType)", "modifiers": "private", "return": "ExecutePlan", "signature": "ExecutePlan buildExecutePlanTypeAll(PartitionTable partitionTable, SqlType sqlType)", "full_signature": "private ExecutePlan buildExecutePlanTypeAll(PartitionTable partitionTable, SqlType sqlType)", "class_method_signature": "RouteService.buildExecutePlanTypeAll(PartitionTable partitionTable, SqlType sqlType)", "testcase": false, "constructor": false}, {"identifier": "buildExecutePlanTypePartition", "parameters": "(PartitionTable partitionTable, SqlType sqlType, Set<TargetTableEntity> nodeSet)", "modifiers": "private", "return": "ExecutePlan", "signature": "ExecutePlan buildExecutePlanTypePartition(PartitionTable partitionTable, SqlType sqlType, Set<TargetTableEntity> nodeSet)", "full_signature": "private ExecutePlan buildExecutePlanTypePartition(PartitionTable partitionTable, SqlType sqlType, Set<TargetTableEntity> nodeSet)", "class_method_signature": "RouteService.buildExecutePlanTypePartition(PartitionTable partitionTable, SqlType sqlType, Set<TargetTableEntity> nodeSet)", "testcase": false, "constructor": false}, {"identifier": "buildParameters", "parameters": "(Map<Integer, ParameterCommand> commonds)", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> buildParameters(Map<Integer, ParameterCommand> commonds)", "full_signature": "public List<Object> buildParameters(Map<Integer, ParameterCommand> commonds)", "class_method_signature": "RouteService.buildParameters(Map<Integer, ParameterCommand> commonds)", "testcase": false, "constructor": false}], "file": "baymax-core/src/main/java/com/tongbanjie/baymax/router/RouteService.java"}, "focal_method": {"identifier": "buildParameters", "parameters": "(Map<Integer, ParameterCommand> commonds)", "modifiers": "public", "return": "List<Object>", "body": "public List<Object> buildParameters(Map<Integer, ParameterCommand> commonds){\n\n        if (commonds == null || commonds.size() == 0){\n            return null;\n        }\n\n        // \u6392\u5e8f\n        SortedSet<Map.Entry<Integer, ParameterCommand>> set = new TreeSet<Map.Entry<Integer, ParameterCommand>>(new Comparator<Map.Entry<Integer, ParameterCommand>>() {\n            @Override\n            public int compare(Map.Entry<Integer, ParameterCommand> e1, Map.Entry<Integer, ParameterCommand> e2) {\n                return e1.getKey().compareTo(e2.getKey());\n            }\n        });\n\n        for (Map.Entry entry : commonds.entrySet()){\n            set.add(entry);\n        }\n\n        List<Object> result = new ArrayList<Object>(commonds.size());\n        for (Map.Entry<Integer, ParameterCommand> entry : set){\n            result.add(entry.getValue().getParttionArg());\n        }\n\n        return result;\n    }", "signature": "List<Object> buildParameters(Map<Integer, ParameterCommand> commonds)", "full_signature": "public List<Object> buildParameters(Map<Integer, ParameterCommand> commonds)", "class_method_signature": "RouteService.buildParameters(Map<Integer, ParameterCommand> commonds)", "testcase": false, "constructor": false, "invocations": ["size", "compareTo", "getKey", "getKey", "entrySet", "add", "size", "add", "getParttionArg", "getValue"]}, "repository": {"repo_id": 59288941, "url": "https://github.com/tongbanjie/baymax", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 45, "size": 1578, "license": "licensed"}}