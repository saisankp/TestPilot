{"test_class": {"identifier": "TruncateTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/macrobase/analysis/stats/TruncateTest.java"}, "test_case": {"identifier": "testTruncate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTruncate() throws Exception {\n        int k = 5;\n        int index = 0;\n        MacroBaseConf conf = new MacroBaseConf().set(MacroBaseConf.TRUNCATE_K, k);\n        double[][] test_input = {\n                {9.61, 0.42, 8.89, 5.9, 6.05, -3.98, 3.74, 6.23, 5.15, -2.51, 7.74, 8.43, 7.82, 0.25, 5.82, -1.21, 3.29, 4.05, -5.72, 7.45},\n                {-2.97, 4.28, -7.08, 3.76, -2.59, 8.03, 6.91, 7.24, 0.81, 0.14, 4.06, -0.74, 5.23, 7.66, 7.35, -5.29, 8.79, 5.37, 1.41, 2.25},\n                {5.75, 7.75, 3.6, -5.07, 5.26, 2.42, 5.55, 3.66, 8.07, -8.08, 1.43, 7.99, 5.84, 8.64, 0.26, 2.38, 6.31, 0.02, -6.76, -9.28},\n                {2.83, 7.4, 1.71, -8.27, 3.85, 2.59, 3.73, 4.56, 7.62, 8.71, 5.81, 7.66, -1.73, 8.45, 6.41, 9.6, -1.18, 4.33, 4.79, 5.8},\n                {9.62, -5.53, 9.29, 8.2, 8.59, 9.24, -7.38, 0.51, 7.35, 6.45, 1.57, -4.01, 1.19, -7.25, 4.24, 8.2, 7.18, 1.69, 1.5, -6.21}\n        };\n        double[][] expected_return = {\n                {9.61, 0.42, 8.89, 5.9, 6.05},\n                {-2.97, 4.28, -7.08, 3.76, -2.59},\n                {5.75, 7.75, 3.6, -5.07, 5.26},\n                {2.83, 7.4, 1.71, -8.27, 3.85},\n                {9.62, -5.53, 9.29, 8.2, 8.59}\n        };\n\n        List<Datum> data = new ArrayList<>();\n        for (int i = 0; i < 5; i++){\n            Datum d = new Datum(new ArrayList<>(), new ArrayRealVector(test_input[i]));\n            data.add(d);\n        }\n\n        Truncate t = new Truncate(conf);\n        t.consume(data);\n        List<Datum> transformed = t.getStream().drain();\n        for (Datum td: transformed) {\n            double[] val = td.metrics().toArray();\n            assertArrayEquals(expected_return[index++], val,0);\n        }\n\n        //testing coverage weirdness\n        t.initialize();\n        t.shutdown();\n    }", "signature": "void testTruncate()", "full_signature": "@Test public void testTruncate()", "class_method_signature": "TruncateTest.testTruncate()", "testcase": true, "constructor": false, "invocations": ["set", "add", "consume", "drain", "getStream", "toArray", "metrics", "assertArrayEquals", "initialize", "shutdown"]}, "focal_class": {"identifier": "Truncate", "superclass": "extends FeatureTransform", "interfaces": "", "fields": [{"original_string": "private RealVector metricVector;", "modifier": "private", "type": "RealVector", "declarator": "metricVector", "var_name": "metricVector"}, {"original_string": "private RealVector transformedVector;", "modifier": "private", "type": "RealVector", "declarator": "transformedVector", "var_name": "transformedVector"}, {"original_string": "private int k;", "modifier": "private", "type": "int", "declarator": "k", "var_name": "k"}, {"original_string": "private final MBStream<Datum> output = new MBStream<>();", "modifier": "private final", "type": "MBStream<Datum>", "declarator": "output = new MBStream<>()", "var_name": "output"}], "methods": [{"identifier": "Truncate", "parameters": "(MacroBaseConf conf)", "modifiers": "public", "return": "", "signature": " Truncate(MacroBaseConf conf)", "full_signature": "public  Truncate(MacroBaseConf conf)", "class_method_signature": "Truncate.Truncate(MacroBaseConf conf)", "testcase": false, "constructor": true}, {"identifier": "consume", "parameters": "(List<Datum> records)", "modifiers": "@Override public", "return": "void", "signature": "void consume(List<Datum> records)", "full_signature": "@Override public void consume(List<Datum> records)", "class_method_signature": "Truncate.consume(List<Datum> records)", "testcase": false, "constructor": false}, {"identifier": "getStream", "parameters": "()", "modifiers": "@Override public", "return": "MBStream<Datum>", "signature": "MBStream<Datum> getStream()", "full_signature": "@Override public MBStream<Datum> getStream()", "class_method_signature": "Truncate.getStream()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "Truncate.initialize()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "Truncate.shutdown()", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/macrobase/analysis/stats/Truncate.java"}, "focal_method": {"identifier": "Truncate", "parameters": "(MacroBaseConf conf)", "modifiers": "public", "return": "", "body": "public Truncate(MacroBaseConf conf) {\n        this.k = conf.getInt(MacroBaseConf.TRUNCATE_K, MacroBaseDefaults.TRUNCATE_K);\n    }", "signature": " Truncate(MacroBaseConf conf)", "full_signature": "public  Truncate(MacroBaseConf conf)", "class_method_signature": "Truncate.Truncate(MacroBaseConf conf)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 48199522, "url": "https://github.com/stanford-futuredata/macrobase", "language": "Java", "is_fork": false, "fork_count": 116, "stargazer_count": 606, "size": 27614, "license": "licensed"}}