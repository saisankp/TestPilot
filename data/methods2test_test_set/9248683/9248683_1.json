{"test_class": {"identifier": "SimpleBoxMakerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SimpleBoxMaker boxMaker = new SimpleBoxMaker();", "modifier": "private final", "type": "SimpleBoxMaker", "declarator": "boxMaker = new SimpleBoxMaker()", "var_name": "boxMaker"}, {"original_string": "private final Point<Double> p = new Point<Double>(34.02886,-118.473988);", "modifier": "private final", "type": "Point<Double>", "declarator": "p = new Point<Double>(34.02886,-118.473988)", "var_name": "p"}, {"original_string": "private final Double radius = 3.1415926535897931;", "modifier": "private final", "type": "Double", "declarator": "radius = 3.1415926535897931", "var_name": "radius"}], "file": "seeking-core/src/test/java/com/eharmony/matching/seeking/query/geometry/SimpleBoxMakerTest.java"}, "test_case": {"identifier": "makeBox_negativeRadius", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void makeBox_negativeRadius() {\n        Box<Double> expected = new Box<Double>(\n            new Point<Double>(p.getX() - radius, p.getY() - radius),\n            new Point<Double>(p.getX() + radius, p.getY() + radius)\n        );\n        assertEquals(expected, boxMaker.make(p, -radius));\n    }", "signature": "void makeBox_negativeRadius()", "full_signature": "@Test public void makeBox_negativeRadius()", "class_method_signature": "SimpleBoxMakerTest.makeBox_negativeRadius()", "testcase": true, "constructor": false, "invocations": ["getX", "getY", "getX", "getY", "assertEquals", "make"]}, "focal_class": {"identifier": "SimpleBoxMaker", "superclass": "", "interfaces": "implements BoxMaker", "fields": [], "methods": [{"identifier": "make", "parameters": "(Point<N> center, N radius)", "modifiers": "@Override public", "return": "Box<N>", "signature": "Box<N> make(Point<N> center, N radius)", "full_signature": "@Override public Box<N> make(Point<N> center, N radius)", "class_method_signature": "SimpleBoxMaker.make(Point<N> center, N radius)", "testcase": false, "constructor": false}], "file": "seeking-core/src/main/java/com/eharmony/matching/seeking/query/geometry/SimpleBoxMaker.java"}, "focal_method": {"identifier": "make", "parameters": "(Point<N> center, N radius)", "modifiers": "@Override public", "return": "Box<N>", "body": "@Override\n    public <N extends Number & Comparable<N>> Box<N> make(Point<N> center, N radius) {\n        N x0 = subtract(center.getX(), radius);\n        N x1 = add(center.getX(), radius);\n        N y0 = subtract(center.getY(), radius);\n        N y1 = add(center.getY(), radius);\n        Point<N> a = new Point<N>(min(x0, x1), min(y0, y1));\n        Point<N> b = new Point<N>(max(x0, x1), max(y0, y1));\n        return new Box<N>(a, b);\n    }", "signature": "Box<N> make(Point<N> center, N radius)", "full_signature": "@Override public Box<N> make(Point<N> center, N radius)", "class_method_signature": "SimpleBoxMaker.make(Point<N> center, N radius)", "testcase": false, "constructor": false, "invocations": ["subtract", "getX", "add", "getX", "subtract", "getY", "add", "getY", "min", "min", "max", "max"]}, "repository": {"repo_id": 9248683, "url": "https://github.com/eHarmony/seeking", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 194, "license": "licensed"}}