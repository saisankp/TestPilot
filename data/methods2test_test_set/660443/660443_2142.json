{"test_class": {"identifier": "RGroupQueryReaderTest", "superclass": "extends SimpleChemObjectReaderTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(RGroupQueryReaderTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(RGroupQueryReaderTest.class)", "var_name": "logger"}], "file": "storage/ctab/src/test/java/org/openscience/cdk/io/RGroupQueryReaderTest.java"}, "test_case": {"identifier": "testAcceptsAtLeastOneChemObjectClass", "parameters": "()", "modifiers": "@Test @Override public", "return": "void", "body": "@Test\n    @Override\n    public void testAcceptsAtLeastOneChemObjectClass() {\n        RGroupQueryReader reader = new RGroupQueryReader();\n        Assert.assertTrue(reader.accepts(RGroupQuery.class));\n    }", "signature": "void testAcceptsAtLeastOneChemObjectClass()", "full_signature": "@Test @Override public void testAcceptsAtLeastOneChemObjectClass()", "class_method_signature": "RGroupQueryReaderTest.testAcceptsAtLeastOneChemObjectClass()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "RGroupQueryReader", "superclass": "extends DefaultChemObjectReader", "interfaces": "", "fields": [{"original_string": "BufferedReader              input  = null;", "modifier": "", "type": "BufferedReader", "declarator": "input  = null", "var_name": "input"}, {"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(RGroupQueryReader.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(RGroupQueryReader.class)", "var_name": "logger"}], "methods": [{"identifier": "RGroupQueryReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " RGroupQueryReader()", "full_signature": "public  RGroupQueryReader()", "class_method_signature": "RGroupQueryReader.RGroupQueryReader()", "testcase": false, "constructor": true}, {"identifier": "RGroupQueryReader", "parameters": "(InputStream in)", "modifiers": "public", "return": "", "signature": " RGroupQueryReader(InputStream in)", "full_signature": "public  RGroupQueryReader(InputStream in)", "class_method_signature": "RGroupQueryReader.RGroupQueryReader(InputStream in)", "testcase": false, "constructor": true}, {"identifier": "RGroupQueryReader", "parameters": "(Reader in)", "modifiers": "public", "return": "", "signature": " RGroupQueryReader(Reader in)", "full_signature": "public  RGroupQueryReader(Reader in)", "class_method_signature": "RGroupQueryReader.RGroupQueryReader(Reader in)", "testcase": false, "constructor": true}, {"identifier": "setReader", "parameters": "(Reader input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(Reader input)", "full_signature": "@Override public void setReader(Reader input)", "class_method_signature": "RGroupQueryReader.setReader(Reader input)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(InputStream input)", "full_signature": "@Override public void setReader(InputStream input)", "class_method_signature": "RGroupQueryReader.setReader(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "RGroupQueryReader.getFormat()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "RGroupQueryReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "RGroupQueryReader.close()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(T object)", "modifiers": "@Override public", "return": "T", "signature": "T read(T object)", "full_signature": "@Override public T read(T object)", "class_method_signature": "RGroupQueryReader.read(T object)", "testcase": false, "constructor": false}, {"identifier": "parseRGFile", "parameters": "(RGroupQuery rGroupQuery)", "modifiers": "private", "return": "RGroupQuery", "signature": "RGroupQuery parseRGFile(RGroupQuery rGroupQuery)", "full_signature": "private RGroupQuery parseRGFile(RGroupQuery rGroupQuery)", "class_method_signature": "RGroupQueryReader.parseRGFile(RGroupQuery rGroupQuery)", "testcase": false, "constructor": false}, {"identifier": "checkLineBeginsWith", "parameters": "(String line, String expect, int lineCount)", "modifiers": "private", "return": "void", "signature": "void checkLineBeginsWith(String line, String expect, int lineCount)", "full_signature": "private void checkLineBeginsWith(String line, String expect, int lineCount)", "class_method_signature": "RGroupQueryReader.checkLineBeginsWith(String line, String expect, int lineCount)", "testcase": false, "constructor": false}], "file": "storage/ctab/src/main/java/org/openscience/cdk/io/RGroupQueryReader.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (Class<?> anInterface : interfaces) {\n            if (IRGroupQuery.class.equals(anInterface)) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "RGroupQueryReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["getInterfaces", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}