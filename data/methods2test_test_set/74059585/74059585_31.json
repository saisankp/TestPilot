{"test_class": {"identifier": "AppEngineTraceServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final com.google.appengine.api.labs.trace.TraceService mockTraceService =\n      mock(com.google.appengine.api.labs.trace.TraceService.class);", "modifier": "private final", "type": "com.google.appengine.api.labs.trace.TraceService", "declarator": "mockTraceService =\n      mock(com.google.appengine.api.labs.trace.TraceService.class)", "var_name": "mockTraceService"}, {"original_string": "private final com.google.appengine.api.labs.trace.Span mockSpan =\n      mock(com.google.appengine.api.labs.trace.Span.class);", "modifier": "private final", "type": "com.google.appengine.api.labs.trace.Span", "declarator": "mockSpan =\n      mock(com.google.appengine.api.labs.trace.Span.class)", "var_name": "mockSpan"}], "file": "jdbc/driver-appengine-standard/src/test/java/com/google/cloud/trace/jdbc/AppEngineTraceServiceTest.java"}, "test_case": {"identifier": "exampleSpan", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void exampleSpan() {\n    when(mockTraceService.startSpan(any(String.class))).thenReturn(mockSpan);\n\n    TraceService traceService = new AppEngineTraceService(mockTraceService);\n\n    try (TraceService.Span span = traceService.open(\"JDBC.Driver#connect\")) {\n      span.annotate(Label.DATABASE_URL, Optional.of(\"jdbc:mockdriver\"));\n      span.annotate(Label.SQL_TEXT, Optional.<String>absent());\n    }\n\n    InOrder inOrder = inOrder(mockTraceService, mockSpan);\n    inOrder.verify(mockTraceService).startSpan(\"JDBC.Driver#connect\");\n    inOrder.verify(mockSpan).setLabel(\"g.co/jdbc/url\", \"jdbc:mockdriver\");\n    inOrder.verify(mockSpan).close();\n    verifyNoMoreInteractions(mockTraceService, mockSpan); // No annotation for SQL_TEXT created.\n  }", "signature": "void exampleSpan()", "full_signature": "@Test public void exampleSpan()", "class_method_signature": "AppEngineTraceServiceTest.exampleSpan()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "startSpan", "any", "open", "annotate", "of", "annotate", "absent", "inOrder", "startSpan", "verify", "setLabel", "verify", "close", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "AppEngineTraceService", "superclass": "extends TraceService", "interfaces": "", "fields": [{"original_string": "private final com.google.appengine.api.labs.trace.TraceService traceService;", "modifier": "private final", "type": "com.google.appengine.api.labs.trace.TraceService", "declarator": "traceService", "var_name": "traceService"}], "methods": [{"identifier": "AppEngineTraceService", "parameters": "()", "modifiers": "public", "return": "", "signature": " AppEngineTraceService()", "full_signature": "public  AppEngineTraceService()", "class_method_signature": "AppEngineTraceService.AppEngineTraceService()", "testcase": false, "constructor": true}, {"identifier": "AppEngineTraceService", "parameters": "(com.google.appengine.api.labs.trace.TraceService traceService)", "modifiers": "@VisibleForTesting", "return": "", "signature": " AppEngineTraceService(com.google.appengine.api.labs.trace.TraceService traceService)", "full_signature": "@VisibleForTesting  AppEngineTraceService(com.google.appengine.api.labs.trace.TraceService traceService)", "class_method_signature": "AppEngineTraceService.AppEngineTraceService(com.google.appengine.api.labs.trace.TraceService traceService)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "(String name)", "modifiers": "@Override public", "return": "Span", "signature": "Span open(String name)", "full_signature": "@Override public Span open(String name)", "class_method_signature": "AppEngineTraceService.open(String name)", "testcase": false, "constructor": false}], "file": "jdbc/driver-appengine-standard/src/main/java/com/google/cloud/trace/jdbc/AppEngineTraceService.java"}, "focal_method": {"identifier": "open", "parameters": "(String name)", "modifiers": "@Override public", "return": "Span", "body": "@Override\n  public Span open(String name) {\n    checkNotNull(name);\n\n    return new SpanImpl(traceService.startSpan(name));\n  }", "signature": "Span open(String name)", "full_signature": "@Override public Span open(String name)", "class_method_signature": "AppEngineTraceService.open(String name)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "startSpan"]}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}