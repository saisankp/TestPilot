{"test_class": {"identifier": "AddKeyCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final KeyTemplate EXISTING_TEMPLATE = MacKeyTemplates.HMAC_SHA256_128BITTAG;", "modifier": "private static final", "type": "KeyTemplate", "declarator": "EXISTING_TEMPLATE = MacKeyTemplates.HMAC_SHA256_128BITTAG", "var_name": "EXISTING_TEMPLATE"}, {"original_string": "private static final KeyTemplate NEW_TEMPLATE = MacKeyTemplates.HMAC_SHA256_256BITTAG;", "modifier": "private static final", "type": "KeyTemplate", "declarator": "NEW_TEMPLATE = MacKeyTemplates.HMAC_SHA256_256BITTAG", "var_name": "NEW_TEMPLATE"}, {"original_string": "private static final String OUTPUT_FORMAT = \"json\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_FORMAT = \"json\"", "var_name": "OUTPUT_FORMAT"}, {"original_string": "private static final String INPUT_FORMAT = \"json\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_FORMAT = \"json\"", "var_name": "INPUT_FORMAT"}], "file": "tools/tinkey/src/test/java/com/google/crypto/tink/tinkey/AddKeyCommandTest.java"}, "test_case": {"identifier": "testAddCleartext_shouldThrowExceptionIfExistingKeysetIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddCleartext_shouldThrowExceptionIfExistingKeysetIsEmpty() throws Exception {\n    InputStream emptyStream = new ByteArrayInputStream(new byte[0]);\n    String masterKeyUri = null; // This ensures that the keyset won't be encrypted.\n    String credentialPath = null;\n    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\n    try {\n      AddKeyCommand.add(\n          outputStream, OUTPUT_FORMAT,\n          emptyStream, INPUT_FORMAT,\n          masterKeyUri, credentialPath, NEW_TEMPLATE);\n      fail(\"Expected IOException\");\n    } catch (IOException e) {\n      // expected\n    }\n  }", "signature": "void testAddCleartext_shouldThrowExceptionIfExistingKeysetIsEmpty()", "full_signature": "@Test public void testAddCleartext_shouldThrowExceptionIfExistingKeysetIsEmpty()", "class_method_signature": "AddKeyCommandTest.testAddCleartext_shouldThrowExceptionIfExistingKeysetIsEmpty()", "testcase": true, "constructor": false, "invocations": ["add", "fail"]}, "focal_class": {"identifier": "AddKeyCommand", "superclass": "extends AddRotateOptions", "interfaces": "implements Command", "fields": [], "methods": [{"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "AddKeyCommand.run()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "modifiers": "public static", "return": "void", "signature": "void add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "full_signature": "public static void add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "class_method_signature": "AddKeyCommand.add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "testcase": false, "constructor": false}], "file": "tools/tinkey/src/main/java/com/google/crypto/tink/tinkey/AddKeyCommand.java"}, "focal_method": {"identifier": "add", "parameters": "(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "modifiers": "public static", "return": "void", "body": "public static void add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate) throws GeneralSecurityException, IOException {\n    TinkeyUtil.createKey(TinkeyUtil.CommandType.ADD_KEY, outputStream, outFormat,\n        inputStream, inFormat, masterKeyUri, credentialPath, keyTemplate);\n  }", "signature": "void add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "full_signature": "public static void add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "class_method_signature": "AddKeyCommand.add(OutputStream outputStream, String outFormat,\n      InputStream inputStream, String inFormat,\n      String masterKeyUri, String credentialPath,\n      KeyTemplate keyTemplate)", "testcase": false, "constructor": false, "invocations": ["createKey"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}