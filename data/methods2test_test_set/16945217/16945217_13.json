{"test_class": {"identifier": "TGroupStatementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TGroupDataSource tgds;", "modifier": "private static", "type": "TGroupDataSource", "declarator": "tgds", "var_name": "tgds"}, {"original_string": "private static MockDataSource   db1 = new MockDataSource(\"db\", \"db1\");", "modifier": "private static", "type": "MockDataSource", "declarator": "db1 = new MockDataSource(\"db\", \"db1\")", "var_name": "db1"}, {"original_string": "private static MockDataSource   db2 = new MockDataSource(\"db\", \"db2\");", "modifier": "private static", "type": "MockDataSource", "declarator": "db2 = new MockDataSource(\"db\", \"db2\")", "var_name": "db2"}], "file": "tddl-group/src/test/java/com/taobao/tddl/group/jdbc/TGroupStatementTest.java"}, "test_case": {"identifier": "testExecuteQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecuteQuery() throws SQLException {\n        TGroupConnection conn = null;\n        PreparedStatement stat = null;\n        try {\n            conn = tgds.getConnection();\n            stat = conn.prepareStatement(\"select * from xxx where id=?\");\n            stat.setByte(1, (byte) 5);\n            MockDataSource.addPreData(\"id:1,name:2\");\n            ResultSet result = stat.executeQuery();\n            Assert.assertEquals(result.next(), true);\n            Assert.assertEquals(result.getLong(1), 1L);\n            Assert.assertEquals(result.getLong(2), 2L);\n            MockDataSource.showTrace();\n        } finally {\n            if (conn != null) {\n                try {\n                    conn.close();\n                } catch (SQLException e) {\n                }\n                if (stat != null) {\n                    try {\n                        stat.close();\n                    } catch (SQLException e) {\n                    }\n                }\n            }\n        }\n    }", "signature": "void testExecuteQuery()", "full_signature": "@Test public void testExecuteQuery()", "class_method_signature": "TGroupStatementTest.testExecuteQuery()", "testcase": true, "constructor": false, "invocations": ["getConnection", "prepareStatement", "setByte", "addPreData", "executeQuery", "assertEquals", "next", "assertEquals", "getLong", "assertEquals", "getLong", "showTrace", "close", "close"]}, "focal_class": {"identifier": "TGroupStatement", "superclass": "", "interfaces": "implements TStatement", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(TGroupStatement.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TGroupStatement.class)", "var_name": "log"}, {"original_string": "protected TGroupConnection  tGroupConnection;", "modifier": "protected", "type": "TGroupConnection", "declarator": "tGroupConnection", "var_name": "tGroupConnection"}, {"original_string": "protected TGroupDataSource  tGroupDataSource;", "modifier": "protected", "type": "TGroupDataSource", "declarator": "tGroupDataSource", "var_name": "tGroupDataSource"}, {"original_string": "protected int               retryingTimes;", "modifier": "protected", "type": "int", "declarator": "retryingTimes", "var_name": "retryingTimes"}, {"original_string": "private Statement baseStatement;", "modifier": "private", "type": "Statement", "declarator": "baseStatement", "var_name": "baseStatement"}, {"original_string": "protected int         queryTimeout         = 0;", "modifier": "protected", "type": "int", "declarator": "queryTimeout         = 0", "var_name": "queryTimeout"}, {"original_string": "protected int         fetchSize;", "modifier": "protected", "type": "int", "declarator": "fetchSize", "var_name": "fetchSize"}, {"original_string": "protected int         maxRows;", "modifier": "protected", "type": "int", "declarator": "maxRows", "var_name": "maxRows"}, {"original_string": "protected ResultSet   currentResultSet;", "modifier": "protected", "type": "ResultSet", "declarator": "currentResultSet", "var_name": "currentResultSet"}, {"original_string": "protected int         updateCount;", "modifier": "protected", "type": "int", "declarator": "updateCount", "var_name": "updateCount"}, {"original_string": "protected int         resultSetType        = ResultSet.TYPE_FORWARD_ONLY;", "modifier": "protected", "type": "int", "declarator": "resultSetType        = ResultSet.TYPE_FORWARD_ONLY", "var_name": "resultSetType"}, {"original_string": "protected int         resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;", "modifier": "protected", "type": "int", "declarator": "resultSetConcurrency = ResultSet.CONCUR_READ_ONLY", "var_name": "resultSetConcurrency"}, {"original_string": "protected int         resultSetHoldability = -1;", "modifier": "protected", "type": "int", "declarator": "resultSetHoldability = -1", "var_name": "resultSetHoldability"}, {"original_string": "protected SqlMetaData sqlMetaData          = null;", "modifier": "protected", "type": "SqlMetaData", "declarator": "sqlMetaData          = null", "var_name": "sqlMetaData"}, {"original_string": "private DataSourceTryer<Integer> executeUpdateTryer = new AbstractDataSourceTryer<Integer>() {\n\n                                                            public Integer tryOnDataSource(DataSourceWrapper dsw,\n                                                                                           Object... args)\n                                                                                                          throws SQLException {\n                                                                Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                    false);\n                                                                return executeUpdateOnConnection(conn,\n                                                                    (String) args[0],\n                                                                    (Integer) args[1],\n                                                                    (int[]) args[2],\n                                                                    (String[]) args[3]);\n                                                            }\n                                                        };", "modifier": "private", "type": "DataSourceTryer<Integer>", "declarator": "executeUpdateTryer = new AbstractDataSourceTryer<Integer>() {\n\n                                                            public Integer tryOnDataSource(DataSourceWrapper dsw,\n                                                                                           Object... args)\n                                                                                                          throws SQLException {\n                                                                Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                    false);\n                                                                return executeUpdateOnConnection(conn,\n                                                                    (String) args[0],\n                                                                    (Integer) args[1],\n                                                                    (int[]) args[2],\n                                                                    (String[]) args[3]);\n                                                            }\n                                                        }", "var_name": "executeUpdateTryer"}, {"original_string": "protected List<String> batchedArgs;", "modifier": "protected", "type": "List<String>", "declarator": "batchedArgs", "var_name": "batchedArgs"}, {"original_string": "private DataSourceTryer<int[]> executeBatchTryer = new AbstractDataSourceTryer<int[]>() {\n\n                                                         public int[] tryOnDataSource(DataSourceWrapper dsw,\n                                                                                      Object... args)\n                                                                                                     throws SQLException {\n                                                             Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                 false);\n                                                             return executeBatchOnConnection(conn,\n                                                                 TGroupStatement.this.batchedArgs);\n                                                         }\n                                                     };", "modifier": "private", "type": "DataSourceTryer<int[]>", "declarator": "executeBatchTryer = new AbstractDataSourceTryer<int[]>() {\n\n                                                         public int[] tryOnDataSource(DataSourceWrapper dsw,\n                                                                                      Object... args)\n                                                                                                     throws SQLException {\n                                                             Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                 false);\n                                                             return executeBatchOnConnection(conn,\n                                                                 TGroupStatement.this.batchedArgs);\n                                                         }\n                                                     }", "var_name": "executeBatchTryer"}, {"original_string": "protected boolean closed;", "modifier": "protected", "type": "boolean", "declarator": "closed", "var_name": "closed"}, {"original_string": "protected DataSourceTryer<ResultSet> executeQueryTryer = new AbstractDataSourceTryer<ResultSet>() {\n\n                                                               public ResultSet tryOnDataSource(DataSourceWrapper dsw,\n                                                                                                Object... args)\n                                                                                                               throws SQLException {\n                                                                   String sql = (String) args[0];\n                                                                   Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                       true);\n                                                                   return executeQueryOnConnection(conn, sql);\n                                                               }\n                                                           };", "modifier": "protected", "type": "DataSourceTryer<ResultSet>", "declarator": "executeQueryTryer = new AbstractDataSourceTryer<ResultSet>() {\n\n                                                               public ResultSet tryOnDataSource(DataSourceWrapper dsw,\n                                                                                                Object... args)\n                                                                                                               throws SQLException {\n                                                                   String sql = (String) args[0];\n                                                                   Connection conn = TGroupStatement.this.tGroupConnection.createNewConnection(dsw,\n                                                                       true);\n                                                                   return executeQueryOnConnection(conn, sql);\n                                                               }\n                                                           }", "var_name": "executeQueryTryer"}, {"original_string": "protected boolean moreResults;", "modifier": "protected", "type": "boolean", "declarator": "moreResults", "var_name": "moreResults"}], "methods": [{"identifier": "TGroupStatement", "parameters": "(TGroupDataSource tGroupDataSource, TGroupConnection tGroupConnection)", "modifiers": "public", "return": "", "signature": " TGroupStatement(TGroupDataSource tGroupDataSource, TGroupConnection tGroupConnection)", "full_signature": "public  TGroupStatement(TGroupDataSource tGroupDataSource, TGroupConnection tGroupConnection)", "class_method_signature": "TGroupStatement.TGroupStatement(TGroupDataSource tGroupDataSource, TGroupConnection tGroupConnection)", "testcase": false, "constructor": true}, {"identifier": "setBaseStatement", "parameters": "(Statement baseStatement)", "modifiers": "", "return": "void", "signature": "void setBaseStatement(Statement baseStatement)", "full_signature": " void setBaseStatement(Statement baseStatement)", "class_method_signature": "TGroupStatement.setBaseStatement(Statement baseStatement)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql)", "modifiers": "public", "return": "boolean", "signature": "boolean execute(String sql)", "full_signature": "public boolean execute(String sql)", "class_method_signature": "TGroupStatement.execute(String sql)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, int autoGeneratedKeys)", "modifiers": "public", "return": "boolean", "signature": "boolean execute(String sql, int autoGeneratedKeys)", "full_signature": "public boolean execute(String sql, int autoGeneratedKeys)", "class_method_signature": "TGroupStatement.execute(String sql, int autoGeneratedKeys)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, int[] columnIndexes)", "modifiers": "public", "return": "boolean", "signature": "boolean execute(String sql, int[] columnIndexes)", "full_signature": "public boolean execute(String sql, int[] columnIndexes)", "class_method_signature": "TGroupStatement.execute(String sql, int[] columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, String[] columnNames)", "modifiers": "public", "return": "boolean", "signature": "boolean execute(String sql, String[] columnNames)", "full_signature": "public boolean execute(String sql, String[] columnNames)", "class_method_signature": "TGroupStatement.execute(String sql, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "executeInternal", "parameters": "(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "modifiers": "private", "return": "boolean", "signature": "boolean executeInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "full_signature": "private boolean executeInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "class_method_signature": "TGroupStatement.executeInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql)", "modifiers": "public", "return": "int", "signature": "int executeUpdate(String sql)", "full_signature": "public int executeUpdate(String sql)", "class_method_signature": "TGroupStatement.executeUpdate(String sql)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, int autoGeneratedKeys)", "modifiers": "public", "return": "int", "signature": "int executeUpdate(String sql, int autoGeneratedKeys)", "full_signature": "public int executeUpdate(String sql, int autoGeneratedKeys)", "class_method_signature": "TGroupStatement.executeUpdate(String sql, int autoGeneratedKeys)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, int[] columnIndexes)", "modifiers": "public", "return": "int", "signature": "int executeUpdate(String sql, int[] columnIndexes)", "full_signature": "public int executeUpdate(String sql, int[] columnIndexes)", "class_method_signature": "TGroupStatement.executeUpdate(String sql, int[] columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, String[] columnNames)", "modifiers": "public", "return": "int", "signature": "int executeUpdate(String sql, String[] columnNames)", "full_signature": "public int executeUpdate(String sql, String[] columnNames)", "class_method_signature": "TGroupStatement.executeUpdate(String sql, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "executeUpdateInternal", "parameters": "(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "modifiers": "private", "return": "int", "signature": "int executeUpdateInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "full_signature": "private int executeUpdateInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "class_method_signature": "TGroupStatement.executeUpdateInternal(String sql, int autoGeneratedKeys, int[] columnIndexes, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "executeUpdateOnConnection", "parameters": "(Connection conn, String sql, int autoGeneratedKeys, int[] columnIndexes,\n                                          String[] columnNames)", "modifiers": "private", "return": "int", "signature": "int executeUpdateOnConnection(Connection conn, String sql, int autoGeneratedKeys, int[] columnIndexes,\n                                          String[] columnNames)", "full_signature": "private int executeUpdateOnConnection(Connection conn, String sql, int autoGeneratedKeys, int[] columnIndexes,\n                                          String[] columnNames)", "class_method_signature": "TGroupStatement.executeUpdateOnConnection(Connection conn, String sql, int autoGeneratedKeys, int[] columnIndexes,\n                                          String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "createStatementInternal", "parameters": "(Connection conn, String sql, boolean isBatch)", "modifiers": "private", "return": "Statement", "signature": "Statement createStatementInternal(Connection conn, String sql, boolean isBatch)", "full_signature": "private Statement createStatementInternal(Connection conn, String sql, boolean isBatch)", "class_method_signature": "TGroupStatement.createStatementInternal(Connection conn, String sql, boolean isBatch)", "testcase": false, "constructor": false}, {"identifier": "addBatch", "parameters": "(String sql)", "modifiers": "public", "return": "void", "signature": "void addBatch(String sql)", "full_signature": "public void addBatch(String sql)", "class_method_signature": "TGroupStatement.addBatch(String sql)", "testcase": false, "constructor": false}, {"identifier": "clearBatch", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearBatch()", "full_signature": "public void clearBatch()", "class_method_signature": "TGroupStatement.clearBatch()", "testcase": false, "constructor": false}, {"identifier": "executeBatch", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] executeBatch()", "full_signature": "public int[] executeBatch()", "class_method_signature": "TGroupStatement.executeBatch()", "testcase": false, "constructor": false}, {"identifier": "executeBatchOnConnection", "parameters": "(Connection conn, List<String> batchedSqls)", "modifiers": "private", "return": "int[]", "signature": "int[] executeBatchOnConnection(Connection conn, List<String> batchedSqls)", "full_signature": "private int[] executeBatchOnConnection(Connection conn, List<String> batchedSqls)", "class_method_signature": "TGroupStatement.executeBatchOnConnection(Connection conn, List<String> batchedSqls)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "TGroupStatement.close()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(boolean removeThis)", "modifiers": "", "return": "void", "signature": "void close(boolean removeThis)", "full_signature": " void close(boolean removeThis)", "class_method_signature": "TGroupStatement.close(boolean removeThis)", "testcase": false, "constructor": false}, {"identifier": "checkClosed", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkClosed()", "full_signature": "protected void checkClosed()", "class_method_signature": "TGroupStatement.checkClosed()", "testcase": false, "constructor": false}, {"identifier": "ensureResultSetIsEmpty", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void ensureResultSetIsEmpty()", "full_signature": "protected void ensureResultSetIsEmpty()", "class_method_signature": "TGroupStatement.ensureResultSetIsEmpty()", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "(String sql)", "modifiers": "public", "return": "ResultSet", "signature": "ResultSet executeQuery(String sql)", "full_signature": "public ResultSet executeQuery(String sql)", "class_method_signature": "TGroupStatement.executeQuery(String sql)", "testcase": false, "constructor": false}, {"identifier": "executeQueryOnConnection", "parameters": "(Connection conn, String sql)", "modifiers": "protected", "return": "ResultSet", "signature": "ResultSet executeQueryOnConnection(Connection conn, String sql)", "full_signature": "protected ResultSet executeQueryOnConnection(Connection conn, String sql)", "class_method_signature": "TGroupStatement.executeQueryOnConnection(Connection conn, String sql)", "testcase": false, "constructor": false}, {"identifier": "getWarnings", "parameters": "()", "modifiers": "public", "return": "SQLWarning", "signature": "SQLWarning getWarnings()", "full_signature": "public SQLWarning getWarnings()", "class_method_signature": "TGroupStatement.getWarnings()", "testcase": false, "constructor": false}, {"identifier": "clearWarnings", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearWarnings()", "full_signature": "public void clearWarnings()", "class_method_signature": "TGroupStatement.clearWarnings()", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getMoreResults()", "full_signature": "public boolean getMoreResults()", "class_method_signature": "TGroupStatement.getMoreResults()", "testcase": false, "constructor": false}, {"identifier": "getQueryTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getQueryTimeout()", "full_signature": "public int getQueryTimeout()", "class_method_signature": "TGroupStatement.getQueryTimeout()", "testcase": false, "constructor": false}, {"identifier": "setQueryTimeout", "parameters": "(int queryTimeout)", "modifiers": "public", "return": "void", "signature": "void setQueryTimeout(int queryTimeout)", "full_signature": "public void setQueryTimeout(int queryTimeout)", "class_method_signature": "TGroupStatement.setQueryTimeout(int queryTimeout)", "testcase": false, "constructor": false}, {"identifier": "getResultSet", "parameters": "()", "modifiers": "public", "return": "ResultSet", "signature": "ResultSet getResultSet()", "full_signature": "public ResultSet getResultSet()", "class_method_signature": "TGroupStatement.getResultSet()", "testcase": false, "constructor": false}, {"identifier": "getUpdateCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getUpdateCount()", "full_signature": "public int getUpdateCount()", "class_method_signature": "TGroupStatement.getUpdateCount()", "testcase": false, "constructor": false}, {"identifier": "getResultSetConcurrency", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getResultSetConcurrency()", "full_signature": "public int getResultSetConcurrency()", "class_method_signature": "TGroupStatement.getResultSetConcurrency()", "testcase": false, "constructor": false}, {"identifier": "getResultSetHoldability", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getResultSetHoldability()", "full_signature": "public int getResultSetHoldability()", "class_method_signature": "TGroupStatement.getResultSetHoldability()", "testcase": false, "constructor": false}, {"identifier": "getResultSetType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getResultSetType()", "full_signature": "public int getResultSetType()", "class_method_signature": "TGroupStatement.getResultSetType()", "testcase": false, "constructor": false}, {"identifier": "setResultSetType", "parameters": "(int resultSetType)", "modifiers": "public", "return": "void", "signature": "void setResultSetType(int resultSetType)", "full_signature": "public void setResultSetType(int resultSetType)", "class_method_signature": "TGroupStatement.setResultSetType(int resultSetType)", "testcase": false, "constructor": false}, {"identifier": "setResultSetConcurrency", "parameters": "(int resultSetConcurrency)", "modifiers": "public", "return": "void", "signature": "void setResultSetConcurrency(int resultSetConcurrency)", "full_signature": "public void setResultSetConcurrency(int resultSetConcurrency)", "class_method_signature": "TGroupStatement.setResultSetConcurrency(int resultSetConcurrency)", "testcase": false, "constructor": false}, {"identifier": "setResultSetHoldability", "parameters": "(int resultSetHoldability)", "modifiers": "public", "return": "void", "signature": "void setResultSetHoldability(int resultSetHoldability)", "full_signature": "public void setResultSetHoldability(int resultSetHoldability)", "class_method_signature": "TGroupStatement.setResultSetHoldability(int resultSetHoldability)", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "public Connection getConnection()", "class_method_signature": "TGroupStatement.getConnection()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancel()", "full_signature": "public void cancel()", "class_method_signature": "TGroupStatement.cancel()", "testcase": false, "constructor": false}, {"identifier": "getFetchDirection", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFetchDirection()", "full_signature": "public int getFetchDirection()", "class_method_signature": "TGroupStatement.getFetchDirection()", "testcase": false, "constructor": false}, {"identifier": "getFetchSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFetchSize()", "full_signature": "public int getFetchSize()", "class_method_signature": "TGroupStatement.getFetchSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxFieldSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxFieldSize()", "full_signature": "public int getMaxFieldSize()", "class_method_signature": "TGroupStatement.getMaxFieldSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxRows", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxRows()", "full_signature": "public int getMaxRows()", "class_method_signature": "TGroupStatement.getMaxRows()", "testcase": false, "constructor": false}, {"identifier": "setCursorName", "parameters": "(String cursorName)", "modifiers": "public", "return": "void", "signature": "void setCursorName(String cursorName)", "full_signature": "public void setCursorName(String cursorName)", "class_method_signature": "TGroupStatement.setCursorName(String cursorName)", "testcase": false, "constructor": false}, {"identifier": "setEscapeProcessing", "parameters": "(boolean escapeProcessing)", "modifiers": "public", "return": "void", "signature": "void setEscapeProcessing(boolean escapeProcessing)", "full_signature": "public void setEscapeProcessing(boolean escapeProcessing)", "class_method_signature": "TGroupStatement.setEscapeProcessing(boolean escapeProcessing)", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "(int current)", "modifiers": "public", "return": "boolean", "signature": "boolean getMoreResults(int current)", "full_signature": "public boolean getMoreResults(int current)", "class_method_signature": "TGroupStatement.getMoreResults(int current)", "testcase": false, "constructor": false}, {"identifier": "setFetchDirection", "parameters": "(int fetchDirection)", "modifiers": "public", "return": "void", "signature": "void setFetchDirection(int fetchDirection)", "full_signature": "public void setFetchDirection(int fetchDirection)", "class_method_signature": "TGroupStatement.setFetchDirection(int fetchDirection)", "testcase": false, "constructor": false}, {"identifier": "setFetchSize", "parameters": "(int fetchSize)", "modifiers": "public", "return": "void", "signature": "void setFetchSize(int fetchSize)", "full_signature": "public void setFetchSize(int fetchSize)", "class_method_signature": "TGroupStatement.setFetchSize(int fetchSize)", "testcase": false, "constructor": false}, {"identifier": "setMaxFieldSize", "parameters": "(int maxFieldSize)", "modifiers": "public", "return": "void", "signature": "void setMaxFieldSize(int maxFieldSize)", "full_signature": "public void setMaxFieldSize(int maxFieldSize)", "class_method_signature": "TGroupStatement.setMaxFieldSize(int maxFieldSize)", "testcase": false, "constructor": false}, {"identifier": "setMaxRows", "parameters": "(int maxRows)", "modifiers": "public", "return": "void", "signature": "void setMaxRows(int maxRows)", "full_signature": "public void setMaxRows(int maxRows)", "class_method_signature": "TGroupStatement.setMaxRows(int maxRows)", "testcase": false, "constructor": false}, {"identifier": "getGeneratedKeys", "parameters": "()", "modifiers": "public", "return": "ResultSet", "signature": "ResultSet getGeneratedKeys()", "full_signature": "public ResultSet getGeneratedKeys()", "class_method_signature": "TGroupStatement.getGeneratedKeys()", "testcase": false, "constructor": false}, {"identifier": "isWrapperFor", "parameters": "(Class<?> iface)", "modifiers": "public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> iface)", "full_signature": "public boolean isWrapperFor(Class<?> iface)", "class_method_signature": "TGroupStatement.isWrapperFor(Class<?> iface)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> iface)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T unwrap(Class<T> iface)", "full_signature": "@SuppressWarnings(\"unchecked\") public T unwrap(Class<T> iface)", "class_method_signature": "TGroupStatement.unwrap(Class<T> iface)", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "public boolean isClosed()", "class_method_signature": "TGroupStatement.isClosed()", "testcase": false, "constructor": false}, {"identifier": "setPoolable", "parameters": "(boolean poolable)", "modifiers": "public", "return": "void", "signature": "void setPoolable(boolean poolable)", "full_signature": "public void setPoolable(boolean poolable)", "class_method_signature": "TGroupStatement.setPoolable(boolean poolable)", "testcase": false, "constructor": false}, {"identifier": "isPoolable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPoolable()", "full_signature": "public boolean isPoolable()", "class_method_signature": "TGroupStatement.isPoolable()", "testcase": false, "constructor": false}, {"identifier": "fillSqlMetaData", "parameters": "(Statement statement, String sql)", "modifiers": "protected", "return": "void", "signature": "void fillSqlMetaData(Statement statement, String sql)", "full_signature": "protected void fillSqlMetaData(Statement statement, String sql)", "class_method_signature": "TGroupStatement.fillSqlMetaData(Statement statement, String sql)", "testcase": false, "constructor": false}, {"identifier": "fillSqlMetaData", "parameters": "(TStatement statement, String sql)", "modifiers": "protected", "return": "void", "signature": "void fillSqlMetaData(TStatement statement, String sql)", "full_signature": "protected void fillSqlMetaData(TStatement statement, String sql)", "class_method_signature": "TGroupStatement.fillSqlMetaData(TStatement statement, String sql)", "testcase": false, "constructor": false}, {"identifier": "fillMetaData", "parameters": "(SqlMetaData sqlMetaData)", "modifiers": "@Override public", "return": "void", "signature": "void fillMetaData(SqlMetaData sqlMetaData)", "full_signature": "@Override public void fillMetaData(SqlMetaData sqlMetaData)", "class_method_signature": "TGroupStatement.fillMetaData(SqlMetaData sqlMetaData)", "testcase": false, "constructor": false}, {"identifier": "getSqlMetaData", "parameters": "()", "modifiers": "@Override public", "return": "SqlMetaData", "signature": "SqlMetaData getSqlMetaData()", "full_signature": "@Override public SqlMetaData getSqlMetaData()", "class_method_signature": "TGroupStatement.getSqlMetaData()", "testcase": false, "constructor": false}], "file": "tddl-group/src/main/java/com/taobao/tddl/group/jdbc/TGroupStatement.java"}, "focal_method": {"identifier": "executeQuery", "parameters": "(String sql)", "modifiers": "public", "return": "ResultSet", "body": "public ResultSet executeQuery(String sql) throws SQLException {\n        checkClosed();\n        ensureResultSetIsEmpty();\n\n        boolean gotoRead = SqlType.SELECT.equals(SqlTypeParser.getSqlType(sql)) && tGroupConnection.getAutoCommit();\n        Connection conn = tGroupConnection.getBaseConnection(sql, gotoRead);\n\n        if (conn != null) {\n            sql = GroupHintParser.removeTddlGroupHint(sql);\n            return executeQueryOnConnection(conn, sql);\n        } else {\n            // hint\u4f18\u5148\n            GroupIndex dataSourceIndex = GroupHintParser.convertHint2Index(sql);\n            sql = GroupHintParser.removeTddlGroupHint(sql);\n            if (dataSourceIndex == null) {\n                dataSourceIndex = ThreadLocalDataSourceIndex.getIndex();\n            }\n            return this.tGroupDataSource.getDBSelector(gotoRead).tryExecute(executeQueryTryer,\n                retryingTimes,\n                sql,\n                dataSourceIndex);\n        }\n    }", "signature": "ResultSet executeQuery(String sql)", "full_signature": "public ResultSet executeQuery(String sql)", "class_method_signature": "TGroupStatement.executeQuery(String sql)", "testcase": false, "constructor": false, "invocations": ["checkClosed", "ensureResultSetIsEmpty", "equals", "getSqlType", "getAutoCommit", "getBaseConnection", "removeTddlGroupHint", "executeQueryOnConnection", "convertHint2Index", "removeTddlGroupHint", "getIndex", "tryExecute", "getDBSelector"]}, "repository": {"repo_id": 16945217, "url": "https://github.com/cpsing/tddl", "language": "Java", "is_fork": false, "fork_count": 126, "stargazer_count": 31, "size": 3247, "license": "licensed"}}