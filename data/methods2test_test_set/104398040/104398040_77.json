{"test_class": {"identifier": "AddLineTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/text/AddLineTest.java"}, "test_case": {"identifier": "fileDoesNotExistTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fileDoesNotExistTest() {\n        AddLine addLine = new AddLine(\"zoo=zoov\").relative(\"/src/main/resources/application_zeta.properties\");\n        TOExecutionResult executionResult = addLine.execution(transformedAppFolder, transformationContext);\n        Assert.assertEquals(executionResult.getType(), TOExecutionResult.Type.ERROR);\n        Assert.assertEquals(executionResult.getException().getClass(), FileNotFoundException.class);\n    }", "signature": "void fileDoesNotExistTest()", "full_signature": "@Test public void fileDoesNotExistTest()", "class_method_signature": "AddLineTest.fileDoesNotExistTest()", "testcase": true, "constructor": false, "invocations": ["relative", "execution", "assertEquals", "getType", "assertEquals", "getClass", "getException"]}, "focal_class": {"identifier": "AddLine", "superclass": "extends TransformationOperation<AddLine>", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"Add line '%s' to file %s\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Add line '%s' to file %s\"", "var_name": "DESCRIPTION"}, {"original_string": "private String newLine;", "modifier": "private", "type": "String", "declarator": "newLine", "var_name": "newLine"}], "methods": [{"identifier": "AddLine", "parameters": "()", "modifiers": "public", "return": "", "signature": " AddLine()", "full_signature": "public  AddLine()", "class_method_signature": "AddLine.AddLine()", "testcase": false, "constructor": true}, {"identifier": "AddLine", "parameters": "(String newLine)", "modifiers": "public", "return": "", "signature": " AddLine(String newLine)", "full_signature": "public  AddLine(String newLine)", "class_method_signature": "AddLine.AddLine(String newLine)", "testcase": false, "constructor": true}, {"identifier": "setNewLine", "parameters": "(String newLine)", "modifiers": "public", "return": "AddLine", "signature": "AddLine setNewLine(String newLine)", "full_signature": "public AddLine setNewLine(String newLine)", "class_method_signature": "AddLine.setNewLine(String newLine)", "testcase": false, "constructor": false}, {"identifier": "getNewLine", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNewLine()", "full_signature": "public String getNewLine()", "class_method_signature": "AddLine.getNewLine()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "AddLine.getDescription()", "testcase": false, "constructor": false}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "AddLine.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/text/AddLine.java"}, "focal_method": {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "body": "@Override\n    protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext) {\n        File fileToBeModified = getAbsoluteFile(transformedAppFolder, transformationContext);\n\n        if (!fileToBeModified.exists()) {\n            // TODO Should this be done as pre-validation?\n            FileNotFoundException ex = new FileNotFoundException(\"File to be modified has not been found\");\n            return TOExecutionResult.error(this, ex);\n        }\n\n        TOExecutionResult result = null;\n\n        try {\n            FileUtils.fileAppend(fileToBeModified.getAbsolutePath(), EolHelper.findEolDefaultToOs(fileToBeModified));\n            FileUtils.fileAppend(fileToBeModified.getAbsolutePath(), newLine);\n            String details =  \"A new line has been added to file \" + getRelativePath(transformedAppFolder, fileToBeModified);\n            result = TOExecutionResult.success(this, details);\n        } catch (IOException e) {\n            result = TOExecutionResult.error(this, e);\n        }\n\n        return result;\n    }", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "AddLine.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["getAbsoluteFile", "exists", "error", "fileAppend", "getAbsolutePath", "findEolDefaultToOs", "fileAppend", "getAbsolutePath", "getRelativePath", "success", "error"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}