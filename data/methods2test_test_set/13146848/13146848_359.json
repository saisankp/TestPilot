{"test_class": {"identifier": "OutlineUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/OutlineUtilsTest.java"}, "test_case": {"identifier": "resolvePageDestination", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolvePageDestination() throws IOException {\n        PDPage page1 = new PDPage();\n        PDPage page2 = new PDPage();\n        PDDocument document = new PDDocument();\n        document.addPage(page1);\n        document.addPage(page2);\n        PDDocumentOutline outlines = new PDDocumentOutline();\n        PDOutlineItem root = new PDOutlineItem();\n        root.setTitle(\"title\");\n        PDOutlineItem child = new PDOutlineItem();\n        child.setTitle(\"child\");\n        child.setDestination(page2);\n        PDOutlineItem child2 = new PDOutlineItem();\n        child2.setTitle(\"child2\");\n        child2.setDestination(page1);\n        child2.getCOSObject().getDictionaryObject(COSName.DEST, COSArray.class).set(0, COSInteger.ONE);\n        root.addFirst(child);\n        root.addLast(child2);\n        outlines.addFirst(root);\n        document.getDocumentCatalog().setDocumentOutline(outlines);\n        assertNotNull(OutlineUtils.resolvePageDestination((PDPageDestination) child2.getDestination(), document));\n        assertNotNull(OutlineUtils.resolvePageDestination((PDPageDestination) child.getDestination(), document));\n        PDPageDestination negative = new PDPageXYZDestination();\n        negative.setPageNumber(-1);\n        assertNull(OutlineUtils.resolvePageDestination(negative, document));\n        PDPageDestination notFound = new PDPageXYZDestination();\n        notFound.setPageNumber(10);\n        assertNull(OutlineUtils.resolvePageDestination(notFound, document));\n    }", "signature": "void resolvePageDestination()", "full_signature": "@Test public void resolvePageDestination()", "class_method_signature": "OutlineUtilsTest.resolvePageDestination()", "testcase": true, "constructor": false, "invocations": ["addPage", "addPage", "setTitle", "setTitle", "setDestination", "setTitle", "setDestination", "set", "getDictionaryObject", "getCOSObject", "addFirst", "addLast", "addFirst", "setDocumentOutline", "getDocumentCatalog", "assertNotNull", "resolvePageDestination", "getDestination", "assertNotNull", "resolvePageDestination", "getDestination", "setPageNumber", "assertNull", "resolvePageDestination", "setPageNumber", "assertNull", "resolvePageDestination"]}, "focal_class": {"identifier": "OutlineUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(OutlineUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(OutlineUtils.class)", "var_name": "LOG"}], "methods": [{"identifier": "OutlineUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " OutlineUtils()", "full_signature": "private  OutlineUtils()", "class_method_signature": "OutlineUtils.OutlineUtils()", "testcase": false, "constructor": true}, {"identifier": "getOutlineLevelsWithPageDestination", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "Set<Integer>", "signature": "Set<Integer> getOutlineLevelsWithPageDestination(PDDocument document)", "full_signature": "public static Set<Integer> getOutlineLevelsWithPageDestination(PDDocument document)", "class_method_signature": "OutlineUtils.getOutlineLevelsWithPageDestination(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "toPageDestination", "parameters": "(PDOutlineItem current, PDDocumentCatalog catalog)", "modifiers": "public static", "return": "Optional<PDPageDestination>", "signature": "Optional<PDPageDestination> toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "full_signature": "public static Optional<PDPageDestination> toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "class_method_signature": "OutlineUtils.toPageDestination(PDOutlineItem current, PDDocumentCatalog catalog)", "testcase": false, "constructor": false}, {"identifier": "pageDestinationFor", "parameters": "(PDPage page)", "modifiers": "public static", "return": "PDPageXYZDestination", "signature": "PDPageXYZDestination pageDestinationFor(PDPage page)", "full_signature": "public static PDPageXYZDestination pageDestinationFor(PDPage page)", "class_method_signature": "OutlineUtils.pageDestinationFor(PDPage page)", "testcase": false, "constructor": false}, {"identifier": "clonePageDestination", "parameters": "(PDPageDestination dest, PDPage destPage)", "modifiers": "public static", "return": "PDPageDestination", "signature": "PDPageDestination clonePageDestination(PDPageDestination dest, PDPage destPage)", "full_signature": "public static PDPageDestination clonePageDestination(PDPageDestination dest, PDPage destPage)", "class_method_signature": "OutlineUtils.clonePageDestination(PDPageDestination dest, PDPage destPage)", "testcase": false, "constructor": false}, {"identifier": "resolvePageDestination", "parameters": "(PDPageDestination destination, PDDocument document)", "modifiers": "public static", "return": "PDPage", "signature": "PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "full_signature": "public static PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "class_method_signature": "OutlineUtils.resolvePageDestination(PDPageDestination destination, PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "copyOutlineDictionary", "parameters": "(PDOutlineItem from, PDOutlineItem to)", "modifiers": "public static", "return": "void", "signature": "void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "full_signature": "public static void copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "class_method_signature": "OutlineUtils.copyOutlineDictionary(PDOutlineItem from, PDOutlineItem to)", "testcase": false, "constructor": false}, {"identifier": "getFlatOutline", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "List<OutlineItem>", "signature": "List<OutlineItem> getFlatOutline(PDDocument document)", "full_signature": "public static List<OutlineItem> getFlatOutline(PDDocument document)", "class_method_signature": "OutlineUtils.getFlatOutline(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "recurseFlatOutline", "parameters": "(PDDocument document, Iterable<PDOutlineItem> items, int level)", "modifiers": "private static", "return": "List<OutlineItem>", "signature": "List<OutlineItem> recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "full_signature": "private static List<OutlineItem> recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "class_method_signature": "OutlineUtils.recurseFlatOutline(PDDocument document, Iterable<PDOutlineItem> items, int level)", "testcase": false, "constructor": false}, {"identifier": "printOutline", "parameters": "(PDDocument document)", "modifiers": "public static", "return": "void", "signature": "void printOutline(PDDocument document)", "full_signature": "public static void printOutline(PDDocument document)", "class_method_signature": "OutlineUtils.printOutline(PDDocument document)", "testcase": false, "constructor": false}, {"identifier": "printNode", "parameters": "(PDOutlineItem node, int level, int childCounter)", "modifiers": "private static", "return": "void", "signature": "void printNode(PDOutlineItem node, int level, int childCounter)", "full_signature": "private static void printNode(PDOutlineItem node, int level, int childCounter)", "class_method_signature": "OutlineUtils.printNode(PDOutlineItem node, int level, int childCounter)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/OutlineUtils.java"}, "focal_method": {"identifier": "resolvePageDestination", "parameters": "(PDPageDestination destination, PDDocument document)", "modifiers": "public static", "return": "PDPage", "body": "public static PDPage resolvePageDestination(PDPageDestination destination, PDDocument document) {\n        PDPage page = destination.getPage();\n        if (isNull(page) && destination.getPageNumber() >= 0) {\n            try {\n                LOG.debug(\"Found page number in page destination, expected a page reference\");\n                return document.getPage(destination.getPageNumber());\n            } catch (PageNotFoundException e) {\n                LOG.warn(\n                        \"Unable to resolve page destination pointing to page {} (a page reference was expected, a number was found)\",\n                        destination.getPageNumber());\n            }\n        }\n        return page;\n    }", "signature": "PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "full_signature": "public static PDPage resolvePageDestination(PDPageDestination destination, PDDocument document)", "class_method_signature": "OutlineUtils.resolvePageDestination(PDPageDestination destination, PDDocument document)", "testcase": false, "constructor": false, "invocations": ["getPage", "isNull", "getPageNumber", "debug", "getPage", "getPageNumber", "warn", "getPageNumber"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}