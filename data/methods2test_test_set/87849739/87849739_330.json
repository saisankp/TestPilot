{"test_class": {"identifier": "DefaultExceptionToAcknowledgementConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AcknowledgementLabel ACK_LABEL = AcknowledgementLabel.of(\"twin-persisted\");", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "ACK_LABEL = AcknowledgementLabel.of(\"twin-persisted\")", "var_name": "ACK_LABEL"}, {"original_string": "private static final EntityIdWithType ENTITY_ID = ThingId.generateRandom();", "modifier": "private static final", "type": "EntityIdWithType", "declarator": "ENTITY_ID = ThingId.generateRandom()", "var_name": "ENTITY_ID"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private DittoHeaders dittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}, {"original_string": "private DefaultExceptionToAcknowledgementConverter underTest;", "modifier": "private", "type": "DefaultExceptionToAcknowledgementConverter", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/DefaultExceptionToAcknowledgementConverterTest.java"}, "test_case": {"identifier": "getInstanceCreatesSingleton", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getInstanceCreatesSingleton() {\n        final DefaultExceptionToAcknowledgementConverter firstInstance =\n                DefaultExceptionToAcknowledgementConverter.getInstance();\n        final DefaultExceptionToAcknowledgementConverter secondInstance =\n                DefaultExceptionToAcknowledgementConverter.getInstance();\n\n        assertThat(firstInstance).isSameAs(secondInstance);\n    }", "signature": "void getInstanceCreatesSingleton()", "full_signature": "@Test public void getInstanceCreatesSingleton()", "class_method_signature": "DefaultExceptionToAcknowledgementConverterTest.getInstanceCreatesSingleton()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getInstance", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "DefaultExceptionToAcknowledgementConverter", "superclass": "extends ExceptionToAcknowledgementConverter", "interfaces": "", "fields": [{"original_string": "private static DefaultExceptionToAcknowledgementConverter instance = null;", "modifier": "private static", "type": "DefaultExceptionToAcknowledgementConverter", "declarator": "instance = null", "var_name": "instance"}], "methods": [{"identifier": "DefaultExceptionToAcknowledgementConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " DefaultExceptionToAcknowledgementConverter()", "full_signature": "private  DefaultExceptionToAcknowledgementConverter()", "class_method_signature": "DefaultExceptionToAcknowledgementConverter.DefaultExceptionToAcknowledgementConverter()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "static", "return": "DefaultExceptionToAcknowledgementConverter", "signature": "DefaultExceptionToAcknowledgementConverter getInstance()", "full_signature": "static DefaultExceptionToAcknowledgementConverter getInstance()", "class_method_signature": "DefaultExceptionToAcknowledgementConverter.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getStatusCodeForGenericException", "parameters": "(final Exception exception)", "modifiers": "@Override protected", "return": "HttpStatusCode", "signature": "HttpStatusCode getStatusCodeForGenericException(final Exception exception)", "full_signature": "@Override protected HttpStatusCode getStatusCodeForGenericException(final Exception exception)", "class_method_signature": "DefaultExceptionToAcknowledgementConverter.getStatusCodeForGenericException(final Exception exception)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/DefaultExceptionToAcknowledgementConverter.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "static", "return": "DefaultExceptionToAcknowledgementConverter", "body": "static DefaultExceptionToAcknowledgementConverter getInstance() {\n        DefaultExceptionToAcknowledgementConverter result = instance;\n        if (null == result) {\n            result = new DefaultExceptionToAcknowledgementConverter();\n            instance = result;\n        }\n        return result;\n    }", "signature": "DefaultExceptionToAcknowledgementConverter getInstance()", "full_signature": "static DefaultExceptionToAcknowledgementConverter getInstance()", "class_method_signature": "DefaultExceptionToAcknowledgementConverter.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}