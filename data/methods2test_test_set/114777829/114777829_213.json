{"test_class": {"identifier": "CookieTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/http/CookieTest.java"}, "test_case": {"identifier": "testGetSecure", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetSecure() {\n        Cookie cookie = new Cookie(\"name\", \"value\");\n        assertFalse(cookie.getSecure());\n        cookie.setSecure(true);\n        assertTrue(cookie.getSecure());\n    }", "signature": "void testGetSecure()", "full_signature": "@Test void testGetSecure()", "class_method_signature": "CookieTest.testGetSecure()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "getSecure", "setSecure", "assertTrue", "getSecure"]}, "focal_class": {"identifier": "Cookie", "superclass": "", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -4779842497728237253L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4779842497728237253L", "var_name": "serialVersionUID"}, {"original_string": "private String comment;", "modifier": "private", "type": "String", "declarator": "comment", "var_name": "comment"}, {"original_string": "private String domain;", "modifier": "private", "type": "String", "declarator": "domain", "var_name": "domain"}, {"original_string": "private boolean httpOnly;", "modifier": "private", "type": "boolean", "declarator": "httpOnly", "var_name": "httpOnly"}, {"original_string": "private int maxAge;", "modifier": "private", "type": "int", "declarator": "maxAge", "var_name": "maxAge"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private boolean secure;", "modifier": "private", "type": "boolean", "declarator": "secure", "var_name": "secure"}, {"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}, {"original_string": "private int version;", "modifier": "private", "type": "int", "declarator": "version", "var_name": "version"}], "methods": [{"identifier": "Cookie", "parameters": "(String name, String value)", "modifiers": "public", "return": "", "signature": " Cookie(String name, String value)", "full_signature": "public  Cookie(String name, String value)", "class_method_signature": "Cookie.Cookie(String name, String value)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "Cookie.clone()", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getComment()", "full_signature": "public String getComment()", "class_method_signature": "Cookie.getComment()", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomain()", "full_signature": "public String getDomain()", "class_method_signature": "Cookie.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getMaxAge", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxAge()", "full_signature": "public int getMaxAge()", "class_method_signature": "Cookie.getMaxAge()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Cookie.getName()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "Cookie.getPath()", "testcase": false, "constructor": false}, {"identifier": "getSecure", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getSecure()", "full_signature": "public boolean getSecure()", "class_method_signature": "Cookie.getSecure()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "Cookie.getValue()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVersion()", "full_signature": "public int getVersion()", "class_method_signature": "Cookie.getVersion()", "testcase": false, "constructor": false}, {"identifier": "isHttpOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHttpOnly()", "full_signature": "public boolean isHttpOnly()", "class_method_signature": "Cookie.isHttpOnly()", "testcase": false, "constructor": false}, {"identifier": "setComment", "parameters": "(String comment)", "modifiers": "public", "return": "void", "signature": "void setComment(String comment)", "full_signature": "public void setComment(String comment)", "class_method_signature": "Cookie.setComment(String comment)", "testcase": false, "constructor": false}, {"identifier": "setDomain", "parameters": "(String domain)", "modifiers": "public", "return": "void", "signature": "void setDomain(String domain)", "full_signature": "public void setDomain(String domain)", "class_method_signature": "Cookie.setDomain(String domain)", "testcase": false, "constructor": false}, {"identifier": "setHttpOnly", "parameters": "(boolean httpOnly)", "modifiers": "public", "return": "void", "signature": "void setHttpOnly(boolean httpOnly)", "full_signature": "public void setHttpOnly(boolean httpOnly)", "class_method_signature": "Cookie.setHttpOnly(boolean httpOnly)", "testcase": false, "constructor": false}, {"identifier": "setMaxAge", "parameters": "(int maxAge)", "modifiers": "public", "return": "void", "signature": "void setMaxAge(int maxAge)", "full_signature": "public void setMaxAge(int maxAge)", "class_method_signature": "Cookie.setMaxAge(int maxAge)", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "public", "return": "void", "signature": "void setPath(String path)", "full_signature": "public void setPath(String path)", "class_method_signature": "Cookie.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "setSecure", "parameters": "(boolean secure)", "modifiers": "public", "return": "void", "signature": "void setSecure(boolean secure)", "full_signature": "public void setSecure(boolean secure)", "class_method_signature": "Cookie.setSecure(boolean secure)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setValue(String value)", "full_signature": "public void setValue(String value)", "class_method_signature": "Cookie.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(int version)", "modifiers": "public", "return": "void", "signature": "void setVersion(int version)", "full_signature": "public void setVersion(int version)", "class_method_signature": "Cookie.setVersion(int version)", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/http/Cookie.java"}, "focal_method": {"identifier": "getSecure", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean getSecure() {\n        return secure;\n    }", "signature": "boolean getSecure()", "full_signature": "public boolean getSecure()", "class_method_signature": "Cookie.getSecure()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}