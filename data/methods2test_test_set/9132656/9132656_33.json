{"test_class": {"identifier": "DefaultColorizationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultColorization maven310;", "modifier": "private", "type": "DefaultColorization", "declarator": "maven310", "var_name": "maven310"}, {"original_string": "private DefaultColorization maven350;", "modifier": "private", "type": "DefaultColorization", "declarator": "maven350", "var_name": "maven350"}], "file": "maven-color-core/src/test/java/com/github/jcgay/maven/color/core/DefaultColorizationTest.java"}, "test_case": {"identifier": "with_recent_maven_version_messages_original_ansi_codes_should_be_stripped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void with_recent_maven_version_messages_original_ansi_codes_should_be_stripped() {\n        String message = \"\\u001B[1m--- \\u001B[0;32mmaven-enforcer-plugin:1.4.1:enforce\\u001B[0;1m (enforce-maven)\\u001B[m @ \\u001B[36mmaven-color-logback\\u001B[0;1m ---\\u001B[m\";\n        assertThat(maven350.colorize(message)).isEqualTo(\n            ansi()\n                .bold()\n                .a(\"--- maven-enforcer-plugin:1.4.1:enforce (enforce-maven) @ \")\n                .reset().toString()\n            + ansi()\n                .fgBright(CYAN)\n                .bold()\n                .a(\"maven-color-logback\")\n                .reset().toString()\n            + ansi()\n                .bold()\n                .a(\" ---\")\n                .reset()\n                .toString()\n        );\n\t}", "signature": "void with_recent_maven_version_messages_original_ansi_codes_should_be_stripped()", "full_signature": "@Test public void with_recent_maven_version_messages_original_ansi_codes_should_be_stripped()", "class_method_signature": "DefaultColorizationTest.with_recent_maven_version_messages_original_ansi_codes_should_be_stripped()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "colorize", "toString", "reset", "a", "bold", "ansi", "toString", "reset", "a", "bold", "fgBright", "ansi", "toString", "reset", "a", "bold", "ansi"]}, "focal_class": {"identifier": "DefaultColorization", "superclass": "", "interfaces": "implements Colorizer", "fields": [{"original_string": "private static final Logger LOGGER = getLogger(DefaultColorization.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = getLogger(DefaultColorization.class)", "var_name": "LOGGER"}, {"original_string": "private static final Pattern PLUGIN_EXECUTION = Pattern.compile(\"(--- .+ @ )(.+)( ---)\");", "modifier": "private static final", "type": "Pattern", "declarator": "PLUGIN_EXECUTION = Pattern.compile(\"(--- .+ @ )(.+)( ---)\")", "var_name": "PLUGIN_EXECUTION"}, {"original_string": "private final ConfigurableColor configuration;", "modifier": "private final", "type": "ConfigurableColor", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final boolean stripAnsiCodes;", "modifier": "private final", "type": "boolean", "declarator": "stripAnsiCodes", "var_name": "stripAnsiCodes"}], "methods": [{"identifier": "DefaultColorization", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultColorization()", "full_signature": "public  DefaultColorization()", "class_method_signature": "DefaultColorization.DefaultColorization()", "testcase": false, "constructor": true}, {"identifier": "DefaultColorization", "parameters": "(ConfigurableColor configuration)", "modifiers": "public", "return": "", "signature": " DefaultColorization(ConfigurableColor configuration)", "full_signature": "public  DefaultColorization(ConfigurableColor configuration)", "class_method_signature": "DefaultColorization.DefaultColorization(ConfigurableColor configuration)", "testcase": false, "constructor": true}, {"identifier": "DefaultColorization", "parameters": "(ConfigurableColor configuration, CurrentMavenVersion currentVersion)", "modifiers": "public", "return": "", "signature": " DefaultColorization(ConfigurableColor configuration, CurrentMavenVersion currentVersion)", "full_signature": "public  DefaultColorization(ConfigurableColor configuration, CurrentMavenVersion currentVersion)", "class_method_signature": "DefaultColorization.DefaultColorization(ConfigurableColor configuration, CurrentMavenVersion currentVersion)", "testcase": false, "constructor": true}, {"identifier": "colorize", "parameters": "(String message)", "modifiers": "@Override public", "return": "String", "signature": "String colorize(String message)", "full_signature": "@Override public String colorize(String message)", "class_method_signature": "DefaultColorization.colorize(String message)", "testcase": false, "constructor": false}, {"identifier": "stripAnsiCodes", "parameters": "(String message)", "modifiers": "private", "return": "String", "signature": "String stripAnsiCodes(String message)", "full_signature": "private String stripAnsiCodes(String message)", "class_method_signature": "DefaultColorization.stripAnsiCodes(String message)", "testcase": false, "constructor": false}, {"identifier": "isModuleHeader", "parameters": "(String message)", "modifiers": "private static", "return": "boolean", "signature": "boolean isModuleHeader(String message)", "full_signature": "private static boolean isModuleHeader(String message)", "class_method_signature": "DefaultColorization.isModuleHeader(String message)", "testcase": false, "constructor": false}, {"identifier": "lastChar", "parameters": "(String message)", "modifiers": "private static", "return": "char", "signature": "char lastChar(String message)", "full_signature": "private static char lastChar(String message)", "class_method_signature": "DefaultColorization.lastChar(String message)", "testcase": false, "constructor": false}], "file": "maven-color-core/src/main/java/com/github/jcgay/maven/color/core/DefaultColorization.java"}, "focal_method": {"identifier": "colorize", "parameters": "(String message)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String colorize(String message) {\n        if (message == null || \"\".equals(message)) {\n            return message;\n        }\n\n        String cleanMessage = stripAnsiCodes(message);\n        if (cleanMessage.contains(BUILD_SUCCESS)) {\n            return cleanMessage.replace(BUILD_SUCCESS, configuration.onBuildSuccess().a(BUILD_SUCCESS).reset().toString());\n        }\n        if (cleanMessage.contains(BUILD_FAILURE)) {\n            return cleanMessage.replace(BUILD_FAILURE, configuration.onBuildFailure().a(BUILD_FAILURE).reset().toString());\n        }\n        if (cleanMessage.contains(SUCCESS)) {\n            return cleanMessage.replace(SUCCESS, configuration.onSuccess().a(SUCCESS).reset().toString());\n        }\n        if (cleanMessage.contains(FAILURE)) {\n            return cleanMessage.replace(FAILURE, configuration.onFailure().a(FAILURE).reset().toString());\n        }\n        if (cleanMessage.contains(SKIPPED)) {\n            return cleanMessage.replace(SKIPPED, configuration.onSkipped().a(SKIPPED).reset().toString());\n        }\n        Matcher matcher = PLUGIN_EXECUTION.matcher(cleanMessage);\n        if (matcher.matches()) {\n            return configuration.onPluginExecution().a(matcher.group(1)).reset().toString()\n                + configuration.onPluginExecutionModuleName().a(matcher.group(2)).reset().toString()\n                + configuration.onPluginExecution().a(matcher.group(3)).reset().toString();\n        }\n        if (isModuleHeader(cleanMessage)) {\n            return configuration.onModuleHeader().a(cleanMessage).reset().toString();\n        }\n\n        return cleanMessage;\n    }", "signature": "String colorize(String message)", "full_signature": "@Override public String colorize(String message)", "class_method_signature": "DefaultColorization.colorize(String message)", "testcase": false, "constructor": false, "invocations": ["equals", "stripAnsiCodes", "contains", "replace", "toString", "reset", "a", "onBuildSuccess", "contains", "replace", "toString", "reset", "a", "onBuildFailure", "contains", "replace", "toString", "reset", "a", "onSuccess", "contains", "replace", "toString", "reset", "a", "onFailure", "contains", "replace", "toString", "reset", "a", "onSkipped", "matcher", "matches", "toString", "reset", "a", "onPluginExecution", "group", "toString", "reset", "a", "onPluginExecutionModuleName", "group", "toString", "reset", "a", "onPluginExecution", "group", "isModuleHeader", "toString", "reset", "a", "onModuleHeader"]}, "repository": {"repo_id": 9132656, "url": "https://github.com/jcgay/maven-color", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 177, "size": 264, "license": "licensed"}}