{"test_class": {"identifier": "TimeOperationTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/nextdoor/bender/time/TimeOperationTest.java"}, "test_case": {"identifier": "testValidISO8601Ms", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testValidISO8601Ms() throws FieldNotFoundException {\n    InternalEvent ievent = new InternalEvent(\"foo\", null, 1);\n    DummyStringEvent devent = spy(new DummyStringEvent(\"\"));\n    ievent.setEventObj(devent);\n    doReturn(\"2020-05-04T10:45:01.480Z\").when(devent).getFieldAsString(\"foo\");\n\n    TimeOperation op = new TimeOperation(\"foo\", TimeFieldType.ISO8601);\n    op.perform(ievent);\n\n    assertEquals(1588589101480l, ievent.getEventTime());\n  }", "signature": "void testValidISO8601Ms()", "full_signature": "@Test public void testValidISO8601Ms()", "class_method_signature": "TimeOperationTest.testValidISO8601Ms()", "testcase": true, "constructor": false, "invocations": ["spy", "setEventObj", "getFieldAsString", "when", "doReturn", "perform", "assertEquals", "getEventTime"]}, "focal_class": {"identifier": "TimeOperation", "superclass": "", "interfaces": "implements EventOperation", "fields": [{"original_string": "private final String timeField;", "modifier": "private final", "type": "String", "declarator": "timeField", "var_name": "timeField"}, {"original_string": "private final TimeFieldType timeFieldType;", "modifier": "private final", "type": "TimeFieldType", "declarator": "timeFieldType", "var_name": "timeFieldType"}, {"original_string": "private final static DateTimeFormatter iso8601Parser = ISODateTimeFormat.dateTimeParser();", "modifier": "private final static", "type": "DateTimeFormatter", "declarator": "iso8601Parser = ISODateTimeFormat.dateTimeParser()", "var_name": "iso8601Parser"}], "methods": [{"identifier": "TimeOperation", "parameters": "(String timeField, TimeFieldType timeFieldType)", "modifiers": "public", "return": "", "signature": " TimeOperation(String timeField, TimeFieldType timeFieldType)", "full_signature": "public  TimeOperation(String timeField, TimeFieldType timeFieldType)", "class_method_signature": "TimeOperation.TimeOperation(String timeField, TimeFieldType timeFieldType)", "testcase": false, "constructor": true}, {"identifier": "getTimestamp", "parameters": "(String dvalue, TimeFieldType type)", "modifiers": "protected static", "return": "long", "signature": "long getTimestamp(String dvalue, TimeFieldType type)", "full_signature": "protected static long getTimestamp(String dvalue, TimeFieldType type)", "class_method_signature": "TimeOperation.getTimestamp(String dvalue, TimeFieldType type)", "testcase": false, "constructor": false}, {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "@Override public", "return": "InternalEvent", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "@Override public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "TimeOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/nextdoor/bender/time/TimeOperation.java"}, "focal_method": {"identifier": "perform", "parameters": "(InternalEvent ievent)", "modifiers": "@Override public", "return": "InternalEvent", "body": "@Override\n  public InternalEvent perform(InternalEvent ievent) {\n    String field;\n    try {\n      field = ievent.getEventObj().getFieldAsString(timeField);\n    } catch (FieldNotFoundException e) {\n      throw new OperationException(\n          \"time field \" + timeField + \" does not exist in \" + ievent.getEventString());\n    }\n\n    ievent.setEventTime(getTimestamp(field, timeFieldType));\n\n    return ievent;\n  }", "signature": "InternalEvent perform(InternalEvent ievent)", "full_signature": "@Override public InternalEvent perform(InternalEvent ievent)", "class_method_signature": "TimeOperation.perform(InternalEvent ievent)", "testcase": false, "constructor": false, "invocations": ["getFieldAsString", "getEventObj", "getEventString", "setEventTime", "getTimestamp"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}