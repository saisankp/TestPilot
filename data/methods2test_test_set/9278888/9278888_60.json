{"test_class": {"identifier": "HttpTagsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock SpanCustomizer span;", "modifier": "@Mock", "type": "SpanCustomizer", "declarator": "span", "var_name": "span"}, {"original_string": "@Mock HttpRequest request;", "modifier": "@Mock", "type": "HttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock HttpResponse response;", "modifier": "@Mock", "type": "HttpResponse", "declarator": "response", "var_name": "response"}], "file": "instrumentation/http/src/test/java/brave/http/HttpTagsTest.java"}, "test_case": {"identifier": "requestHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void requestHeader() {\n    when(request.header(\"User-Agent\")).thenReturn(\"Mozilla/5.0\");\n    HttpTags.requestHeader(\"User-Agent\").tag(request, span);\n\n    verify(span).tag(\"User-Agent\", \"Mozilla/5.0\");\n  }", "signature": "void requestHeader()", "full_signature": "@Test public void requestHeader()", "class_method_signature": "HttpTagsTest.requestHeader()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "header", "tag", "requestHeader", "tag", "verify"]}, "focal_class": {"identifier": "HttpTags", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Map<Integer, String> CACHED_STATUS_CODES = new ConcurrentHashMap<>();", "modifier": "static final", "type": "Map<Integer, String>", "declarator": "CACHED_STATUS_CODES = new ConcurrentHashMap<>()", "var_name": "CACHED_STATUS_CODES"}, {"original_string": "public static final Tag<HttpRequest> METHOD = new Tag<HttpRequest>(\"http.method\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.method();\n    }\n  };", "modifier": "public static final", "type": "Tag<HttpRequest>", "declarator": "METHOD = new Tag<HttpRequest>(\"http.method\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.method();\n    }\n  }", "var_name": "METHOD"}, {"original_string": "public static final Tag<HttpRequest> PATH = new Tag<HttpRequest>(\"http.path\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.path();\n    }\n  };", "modifier": "public static final", "type": "Tag<HttpRequest>", "declarator": "PATH = new Tag<HttpRequest>(\"http.path\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.path();\n    }\n  }", "var_name": "PATH"}, {"original_string": "public static final Tag<HttpRequest> ROUTE = new Tag<HttpRequest>(\"http.route\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.route();\n    }\n  };", "modifier": "public static final", "type": "Tag<HttpRequest>", "declarator": "ROUTE = new Tag<HttpRequest>(\"http.route\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.route();\n    }\n  }", "var_name": "ROUTE"}, {"original_string": "public static final Tag<HttpRequest> URL = new Tag<HttpRequest>(\"http.url\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.url();\n    }\n  };", "modifier": "public static final", "type": "Tag<HttpRequest>", "declarator": "URL = new Tag<HttpRequest>(\"http.url\") {\n    @Override protected String parseValue(HttpRequest input, TraceContext context) {\n      return input.url();\n    }\n  }", "var_name": "URL"}, {"original_string": "public static final Tag<HttpResponse> STATUS_CODE = new Tag<HttpResponse>(\"http.status_code\") {\n    @Override protected String parseValue(HttpResponse input, TraceContext context) {\n      int statusCode = input.statusCode();\n      return statusCodeString(statusCode);\n    }\n  };", "modifier": "public static final", "type": "Tag<HttpResponse>", "declarator": "STATUS_CODE = new Tag<HttpResponse>(\"http.status_code\") {\n    @Override protected String parseValue(HttpResponse input, TraceContext context) {\n      int statusCode = input.statusCode();\n      return statusCodeString(statusCode);\n    }\n  }", "var_name": "STATUS_CODE"}], "methods": [{"identifier": "requestHeader", "parameters": "(String headerName)", "modifiers": "public static", "return": "Tag<HttpRequest>", "signature": "Tag<HttpRequest> requestHeader(String headerName)", "full_signature": "public static Tag<HttpRequest> requestHeader(String headerName)", "class_method_signature": "HttpTags.requestHeader(String headerName)", "testcase": false, "constructor": false}, {"identifier": "requestHeader", "parameters": "(String key, String headerName)", "modifiers": "public static", "return": "Tag<HttpRequest>", "signature": "Tag<HttpRequest> requestHeader(String key, String headerName)", "full_signature": "public static Tag<HttpRequest> requestHeader(String key, String headerName)", "class_method_signature": "HttpTags.requestHeader(String key, String headerName)", "testcase": false, "constructor": false}, {"identifier": "statusCodeString", "parameters": "(int statusCode)", "modifiers": "static", "return": "String", "signature": "String statusCodeString(int statusCode)", "full_signature": "static String statusCodeString(int statusCode)", "class_method_signature": "HttpTags.statusCodeString(int statusCode)", "testcase": false, "constructor": false}, {"identifier": "HttpTags", "parameters": "()", "modifiers": "", "return": "", "signature": " HttpTags()", "full_signature": "  HttpTags()", "class_method_signature": "HttpTags.HttpTags()", "testcase": false, "constructor": true}], "file": "instrumentation/http/src/main/java/brave/http/HttpTags.java"}, "focal_method": {"identifier": "requestHeader", "parameters": "(String headerName)", "modifiers": "public static", "return": "Tag<HttpRequest>", "body": "public static Tag<HttpRequest> requestHeader(String headerName) {\n    return requestHeader(headerName, headerName);\n  }", "signature": "Tag<HttpRequest> requestHeader(String headerName)", "full_signature": "public static Tag<HttpRequest> requestHeader(String headerName)", "class_method_signature": "HttpTags.requestHeader(String headerName)", "testcase": false, "constructor": false, "invocations": ["requestHeader"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}