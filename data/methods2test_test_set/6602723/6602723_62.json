{"test_class": {"identifier": "ClassifierSimpleRetryPolicyTest", "superclass": "", "interfaces": "", "fields": [], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/retry/ClassifierSimpleRetryPolicyTest.java"}, "test_case": {"identifier": "test_classify_nullClassifier2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_classify_nullClassifier2() {\n        RetryContext context = Mockito.mock(RetryContext.class);\n        ClassifierSimpleRetryPolicy policy = new ClassifierSimpleRetryPolicy();\n        Mockito.when(context.getLastThrowable()).thenReturn(new RuntimeException());\n        Assert.assertFalse(policy.canRetry(context));\n    }", "signature": "void test_classify_nullClassifier2()", "full_signature": "@Test public void test_classify_nullClassifier2()", "class_method_signature": "ClassifierSimpleRetryPolicyTest.test_classify_nullClassifier2()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getLastThrowable", "assertFalse", "canRetry"]}, "focal_class": {"identifier": "ClassifierSimpleRetryPolicy", "superclass": "extends SimpleRetryPolicy", "interfaces": "", "fields": [{"original_string": "private static final Predicate<Throwable> DEFAULT_PREDICATE = Predicates.alwaysFalse();", "modifier": "private static final", "type": "Predicate<Throwable>", "declarator": "DEFAULT_PREDICATE = Predicates.alwaysFalse()", "var_name": "DEFAULT_PREDICATE"}, {"original_string": "private static final Classifier<Throwable, Boolean> DEFAULT_CLASSIFIER = new PredicateBinaryExceptionClassifier(DEFAULT_PREDICATE);", "modifier": "private static final", "type": "Classifier<Throwable, Boolean>", "declarator": "DEFAULT_CLASSIFIER = new PredicateBinaryExceptionClassifier(DEFAULT_PREDICATE)", "var_name": "DEFAULT_CLASSIFIER"}, {"original_string": "private volatile Classifier<Throwable, Boolean> classifier;", "modifier": "private volatile", "type": "Classifier<Throwable, Boolean>", "declarator": "classifier", "var_name": "classifier"}], "methods": [{"identifier": "ClassifierSimpleRetryPolicy", "parameters": "()", "modifiers": "public", "return": "", "signature": " ClassifierSimpleRetryPolicy()", "full_signature": "public  ClassifierSimpleRetryPolicy()", "class_method_signature": "ClassifierSimpleRetryPolicy.ClassifierSimpleRetryPolicy()", "testcase": false, "constructor": true}, {"identifier": "ClassifierSimpleRetryPolicy", "parameters": "(int maxAttempts)", "modifiers": "public", "return": "", "signature": " ClassifierSimpleRetryPolicy(int maxAttempts)", "full_signature": "public  ClassifierSimpleRetryPolicy(int maxAttempts)", "class_method_signature": "ClassifierSimpleRetryPolicy.ClassifierSimpleRetryPolicy(int maxAttempts)", "testcase": false, "constructor": true}, {"identifier": "ClassifierSimpleRetryPolicy", "parameters": "(Classifier<Throwable, Boolean> classifier)", "modifiers": "public", "return": "", "signature": " ClassifierSimpleRetryPolicy(Classifier<Throwable, Boolean> classifier)", "full_signature": "public  ClassifierSimpleRetryPolicy(Classifier<Throwable, Boolean> classifier)", "class_method_signature": "ClassifierSimpleRetryPolicy.ClassifierSimpleRetryPolicy(Classifier<Throwable, Boolean> classifier)", "testcase": false, "constructor": true}, {"identifier": "ClassifierSimpleRetryPolicy", "parameters": "(int maxAttempts, Classifier<Throwable, Boolean> classifier)", "modifiers": "public", "return": "", "signature": " ClassifierSimpleRetryPolicy(int maxAttempts, Classifier<Throwable, Boolean> classifier)", "full_signature": "public  ClassifierSimpleRetryPolicy(int maxAttempts, Classifier<Throwable, Boolean> classifier)", "class_method_signature": "ClassifierSimpleRetryPolicy.ClassifierSimpleRetryPolicy(int maxAttempts, Classifier<Throwable, Boolean> classifier)", "testcase": false, "constructor": true}, {"identifier": "getClassifier", "parameters": "()", "modifiers": "public", "return": "Classifier<Throwable, Boolean>", "signature": "Classifier<Throwable, Boolean> getClassifier()", "full_signature": "public Classifier<Throwable, Boolean> getClassifier()", "class_method_signature": "ClassifierSimpleRetryPolicy.getClassifier()", "testcase": false, "constructor": false}, {"identifier": "classify", "parameters": "(Throwable throwable)", "modifiers": "private", "return": "boolean", "signature": "boolean classify(Throwable throwable)", "full_signature": "private boolean classify(Throwable throwable)", "class_method_signature": "ClassifierSimpleRetryPolicy.classify(Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "canRetry", "parameters": "(RetryContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canRetry(RetryContext context)", "full_signature": "@Override public boolean canRetry(RetryContext context)", "class_method_signature": "ClassifierSimpleRetryPolicy.canRetry(RetryContext context)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/retry/ClassifierSimpleRetryPolicy.java"}, "focal_method": {"identifier": "canRetry", "parameters": "(RetryContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canRetry(RetryContext context) {\n        Throwable t = context.getLastThrowable();\n        return (t == null || classify(t)) && context.getRetryCount() < getMaxAttempts();\n    }", "signature": "boolean canRetry(RetryContext context)", "full_signature": "@Override public boolean canRetry(RetryContext context)", "class_method_signature": "ClassifierSimpleRetryPolicy.canRetry(RetryContext context)", "testcase": false, "constructor": false, "invocations": ["getLastThrowable", "classify", "getRetryCount", "getMaxAttempts"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}