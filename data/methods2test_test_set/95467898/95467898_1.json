{"test_class": {"identifier": "TypeUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gson gson = new GsonBuilder().setLenient().create();", "modifier": "private final", "type": "Gson", "declarator": "gson = new GsonBuilder().setLenient().create()", "var_name": "gson"}], "file": "com.effectiveosgi.rt.config/src/test/java/com/effectiveosgi/rt/config/impl/json/TypeUtilsTest.java"}, "test_case": {"identifier": "testInvalidType2", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testInvalidType2() throws Exception {\n        String label = \"foo:\";\n        JsonObject root = gson.fromJson(String.format(\"{ '%s' : 123 }\", label), JsonObject.class);\n        TypeUtils.parse(label, root.get(label));\n    }", "signature": "void testInvalidType2()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testInvalidType2()", "class_method_signature": "TypeUtilsTest.testInvalidType2()", "testcase": true, "constructor": false, "invocations": ["fromJson", "format", "parse", "get"]}, "focal_class": {"identifier": "TypeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Function<JsonElement,JsonElement> ID = Function.identity();", "modifier": "static final", "type": "Function<JsonElement,JsonElement>", "declarator": "ID = Function.identity()", "var_name": "ID"}], "methods": [{"identifier": "parseEntry", "parameters": "(Map.Entry<String, JsonElement> entry)", "modifiers": "static", "return": "Map.Entry<String, Object>", "signature": "Map.Entry<String, Object> parseEntry(Map.Entry<String, JsonElement> entry)", "full_signature": "static Map.Entry<String, Object> parseEntry(Map.Entry<String, JsonElement> entry)", "class_method_signature": "TypeUtils.parseEntry(Map.Entry<String, JsonElement> entry)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String label, JsonElement element)", "modifiers": "static", "return": "Map.Entry<String,Object>", "signature": "Map.Entry<String,Object> parse(String label, JsonElement element)", "full_signature": "static Map.Entry<String,Object> parse(String label, JsonElement element)", "class_method_signature": "TypeUtils.parse(String label, JsonElement element)", "testcase": false, "constructor": false}, {"identifier": "findType", "parameters": "(String typeName)", "modifiers": "static", "return": "Type<?>", "signature": "Type<?> findType(String typeName)", "full_signature": "static Type<?> findType(String typeName)", "class_method_signature": "TypeUtils.findType(String typeName)", "testcase": false, "constructor": false}, {"identifier": "toPrimitive", "parameters": "(JsonElement element)", "modifiers": "static final", "return": "JsonPrimitive", "signature": "JsonPrimitive toPrimitive(JsonElement element)", "full_signature": "static final JsonPrimitive toPrimitive(JsonElement element)", "class_method_signature": "TypeUtils.toPrimitive(JsonElement element)", "testcase": false, "constructor": false}, {"identifier": "toPrimitiveArray", "parameters": "(JsonElement element)", "modifiers": "static final", "return": "JsonPrimitive[]", "signature": "JsonPrimitive[] toPrimitiveArray(JsonElement element)", "full_signature": "static final JsonPrimitive[] toPrimitiveArray(JsonElement element)", "class_method_signature": "TypeUtils.toPrimitiveArray(JsonElement element)", "testcase": false, "constructor": false}, {"identifier": "arrayParser", "parameters": "(Class<?> componentClass, Function<JsonElement, T> componentParser)", "modifiers": "static final", "return": "Function<JsonElement, Object>", "signature": "Function<JsonElement, Object> arrayParser(Class<?> componentClass, Function<JsonElement, T> componentParser)", "full_signature": "static final Function<JsonElement, Object> arrayParser(Class<?> componentClass, Function<JsonElement, T> componentParser)", "class_method_signature": "TypeUtils.arrayParser(Class<?> componentClass, Function<JsonElement, T> componentParser)", "testcase": false, "constructor": false}, {"identifier": "collectionParser", "parameters": "(Function<JsonElement, T> componentParser)", "modifiers": "static final", "return": "Function<JsonElement, Object>", "signature": "Function<JsonElement, Object> collectionParser(Function<JsonElement, T> componentParser)", "full_signature": "static final Function<JsonElement, Object> collectionParser(Function<JsonElement, T> componentParser)", "class_method_signature": "TypeUtils.collectionParser(Function<JsonElement, T> componentParser)", "testcase": false, "constructor": false}, {"identifier": "parseDefault", "parameters": "(JsonPrimitive primitive)", "modifiers": "static final", "return": "Object", "signature": "Object parseDefault(JsonPrimitive primitive)", "full_signature": "static final Object parseDefault(JsonPrimitive primitive)", "class_method_signature": "TypeUtils.parseDefault(JsonPrimitive primitive)", "testcase": false, "constructor": false}, {"identifier": "parseCharacter", "parameters": "(JsonPrimitive primitive)", "modifiers": "static final", "return": "Character", "signature": "Character parseCharacter(JsonPrimitive primitive)", "full_signature": "static final Character parseCharacter(JsonPrimitive primitive)", "class_method_signature": "TypeUtils.parseCharacter(JsonPrimitive primitive)", "testcase": false, "constructor": false}, {"identifier": "parseBoolean", "parameters": "(JsonPrimitive primitive)", "modifiers": "static final", "return": "Boolean", "signature": "Boolean parseBoolean(JsonPrimitive primitive)", "full_signature": "static final Boolean parseBoolean(JsonPrimitive primitive)", "class_method_signature": "TypeUtils.parseBoolean(JsonPrimitive primitive)", "testcase": false, "constructor": false}], "file": "com.effectiveosgi.rt.config/src/main/java/com/effectiveosgi/rt/config/impl/json/TypeUtils.java"}, "focal_method": {"identifier": "parse", "parameters": "(String label, JsonElement element)", "modifiers": "static", "return": "Map.Entry<String,Object>", "body": "static Map.Entry<String,Object> parse(String label, JsonElement element) {\n        final String name;\n        final String typeName;\n        int colonIndex = label.indexOf(\":\");\n        if (colonIndex < 0) {\n            name = label;\n            typeName = null;\n        } else {\n            name = label.substring(0, colonIndex);\n            typeName = label.substring(colonIndex + 1);\n        }\n        Type<?> type = findType(typeName);\n        return new MapEntry<String, Object>(name, type.parse(element));\n    }", "signature": "Map.Entry<String,Object> parse(String label, JsonElement element)", "full_signature": "static Map.Entry<String,Object> parse(String label, JsonElement element)", "class_method_signature": "TypeUtils.parse(String label, JsonElement element)", "testcase": false, "constructor": false, "invocations": ["indexOf", "substring", "substring", "findType", "parse"]}, "repository": {"repo_id": 95467898, "url": "https://github.com/effectiveosgi/eosgi-runtime", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 5656, "license": "licensed"}}