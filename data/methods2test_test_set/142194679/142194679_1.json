{"test_class": {"identifier": "SharedUtilitiesTest", "superclass": "", "interfaces": "", "fields": [], "file": "resources/src/test/java/org/hl7/davinci/SharedUtilitiesTest.java"}, "test_case": {"identifier": "testCalculateAge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCalculateAge() {\n    LocalDate birthDate = LocalDate.now().minus(40, ChronoUnit.YEARS);\n    int age = SharedUtilities\n        .calculateAge(Date.from(birthDate.atStartOfDay(ZoneId.systemDefault()).toInstant()));\n    assertEquals(40, age);\n  }", "signature": "void testCalculateAge()", "full_signature": "@Test public void testCalculateAge()", "class_method_signature": "SharedUtilitiesTest.testCalculateAge()", "testcase": true, "constructor": false, "invocations": ["minus", "now", "calculateAge", "from", "toInstant", "atStartOfDay", "systemDefault", "assertEquals"]}, "focal_class": {"identifier": "SharedUtilities", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "compareReferenceToId", "parameters": "(String reference, String id)", "modifiers": "static", "return": "boolean", "signature": "boolean compareReferenceToId(String reference, String id)", "full_signature": "static boolean compareReferenceToId(String reference, String id)", "class_method_signature": "SharedUtilities.compareReferenceToId(String reference, String id)", "testcase": false, "constructor": false}, {"identifier": "calculateAge", "parameters": "(Date birthDate)", "modifiers": "public static", "return": "int", "signature": "int calculateAge(Date birthDate)", "full_signature": "public static int calculateAge(Date birthDate)", "class_method_signature": "SharedUtilities.calculateAge(Date birthDate)", "testcase": false, "constructor": false}], "file": "resources/src/main/java/org/hl7/davinci/SharedUtilities.java"}, "focal_method": {"identifier": "calculateAge", "parameters": "(Date birthDate)", "modifiers": "public static", "return": "int", "body": "public static int calculateAge(Date birthDate) {\n    if (birthDate == null) {\n      throw new NullPointerException(\"birthDate cannot be null\");\n    }\n    LocalDate localBirthDate = birthDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();\n    return Period.between(localBirthDate, LocalDate.now()).getYears();\n  }", "signature": "int calculateAge(Date birthDate)", "full_signature": "public static int calculateAge(Date birthDate)", "class_method_signature": "SharedUtilities.calculateAge(Date birthDate)", "testcase": false, "constructor": false, "invocations": ["toLocalDate", "atZone", "toInstant", "systemDefault", "getYears", "between", "now"]}, "repository": {"repo_id": 142194679, "url": "https://github.com/HL7-DaVinci/CRD", "stars": 16, "created": "7/24/2018 5:58:57 PM +00:00", "updates": "2020-01-21T19:10:31+00:00", "fork": "False", "license": "licensed"}}