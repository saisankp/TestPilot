{"test_class": {"identifier": "ValidationHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Vertx vertx;", "modifier": "private", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private HttpClient httpClient;", "modifier": "private", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private ValidationResourceManager validationResourceManager;", "modifier": "private", "type": "ValidationResourceManager", "declarator": "validationResourceManager", "var_name": "validationResourceManager"}, {"original_string": "private MockResourceStorage storage;", "modifier": "private", "type": "MockResourceStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private final String VALIDATION_URI = \"/gateleen/server/validation\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_URI = \"/gateleen/server/validation\"", "var_name": "VALIDATION_URI"}, {"original_string": "private final String SCHEMA_ROOT = \"/gateleen/schemas/apis/\";", "modifier": "private final", "type": "String", "declarator": "SCHEMA_ROOT = \"/gateleen/schemas/apis/\"", "var_name": "SCHEMA_ROOT"}, {"original_string": "private final String RESOURCE_GET_PUT = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "RESOURCE_GET_PUT = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "RESOURCE_GET_PUT"}, {"original_string": "private final String RESOURCE_GET = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "RESOURCE_GET = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "RESOURCE_GET"}, {"original_string": "private final String OTHER_RESOURCES_GET_PUT = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/otherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "OTHER_RESOURCES_GET_PUT = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/otherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "OTHER_RESOURCES_GET_PUT"}, {"original_string": "private final String RESOURCE_GET_PUT_GENERIC = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/trip/v1/destinations(.*)\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "RESOURCE_GET_PUT_GENERIC = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/trip/v1/destinations(.*)\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "RESOURCE_GET_PUT_GENERIC"}], "file": "gateleen-validation/src/test/java/org/swisspush/gateleen/validation/ValidationHandlerTest.java"}, "test_case": {"identifier": "testIsToValidate", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsToValidate(TestContext context){\n        storage.putMockData(VALIDATION_URI, RESOURCE_GET_PUT);\n        ValidationHandler validationHandler = new ValidationHandler(validationResourceManager, storage, httpClient, SCHEMA_ROOT);\n\n        sendValidationResourcesUpdate(RESOURCE_GET_PUT);\n\n        class PUTToUnmanagedResourceRequest extends HttpServerRequestMock{\n            @Override public HttpMethod method() {\n                return HttpMethod.PUT;\n            }\n\n            @Override public String uri() {\n                return \"/some/other/resource\";\n            }\n\n            @Override public String path() {\n                return \"/some/other/resource\";\n            }\n        }\n        context.assertFalse(validationHandler.isToValidate(new PUTToUnmanagedResourceRequest()), \"PUT Requests to not managed resources should not be validated\");\n\n        class PUTToGateleenSomeResourceRequest extends HttpServerRequestMock{\n            @Override public HttpMethod method() {\n                return HttpMethod.PUT;\n            }\n\n            @Override public String uri() {\n                return \"/gateleen/resources/someResource\";\n            }\n\n            @Override public String path() {\n                return \"/gateleen/resources/someResource\";\n            }\n        }\n        context.assertTrue(validationHandler.isToValidate(new PUTToGateleenSomeResourceRequest()), \"PUT Requests to some resource should be validated\");\n\n        sendValidationResourcesUpdate(RESOURCE_GET);\n        context.assertFalse(validationHandler.isToValidate(new PUTToGateleenSomeResourceRequest()), \"Now, PUT Requests to some resource should not be validated anymore (only GET Requests)\");\n        context.assertFalse(validationHandler.isToValidate(new PUTToUnmanagedResourceRequest()), \"PUT Requests to not managed resources should not be validated\");\n\n        class GETToGateleenSomeResourceRequest extends PUTToGateleenSomeResourceRequest {\n            @Override public HttpMethod method() {\n                return HttpMethod.GET;\n            }\n        }\n        context.assertTrue(validationHandler.isToValidate(new GETToGateleenSomeResourceRequest()), \"GET Requests to some resource should be validated\");\n\n        sendValidationResourcesUpdate(OTHER_RESOURCES_GET_PUT);\n        context.assertFalse(validationHandler.isToValidate(new GETToGateleenSomeResourceRequest()), \"GET Requests to some resource should not be validated\");\n        context.assertTrue(validationHandler.isToValidate(new PUTToGateleenSomeResourceRequest()), \"PUT Requests to some resource should be validated\");\n\n        context.assertFalse(validationHandler.isToValidate(new PUTToUnmanagedResourceRequest()), \"PUT Requests to not managed resources should not be validated\");\n\n        class PUTToGateleenOtherResourceRequest extends HttpServerRequestMock{\n            @Override public HttpMethod method() {\n                return HttpMethod.PUT;\n            }\n\n            @Override public String uri() {\n                return \"/gateleen/resources/otherResource\";\n            }\n\n            @Override public String path() {\n                return \"/gateleen/resources/otherResource\";\n            }\n        }\n        class GETToGateleenOtherResourceRequest extends PUTToGateleenOtherResourceRequest {\n            @Override public HttpMethod method() {\n                return HttpMethod.GET;\n            }\n        }\n\n        context.assertTrue(validationHandler.isToValidate(new GETToGateleenOtherResourceRequest()), \"GET Requests to other resource should be validated\");\n        context.assertFalse(validationHandler.isToValidate(new PUTToGateleenOtherResourceRequest()), \"PUT Requests to other resource should not be validated\");\n    }", "signature": "void testIsToValidate(TestContext context)", "full_signature": "@Test public void testIsToValidate(TestContext context)", "class_method_signature": "ValidationHandlerTest.testIsToValidate(TestContext context)", "testcase": true, "constructor": false, "invocations": ["putMockData", "sendValidationResourcesUpdate", "assertFalse", "isToValidate", "assertTrue", "isToValidate", "sendValidationResourcesUpdate", "assertFalse", "isToValidate", "assertFalse", "isToValidate", "assertTrue", "isToValidate", "sendValidationResourcesUpdate", "assertFalse", "isToValidate", "assertTrue", "isToValidate", "assertFalse", "isToValidate", "assertTrue", "isToValidate", "assertFalse", "isToValidate"]}, "focal_class": {"identifier": "ValidationHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String HOOKS_LISTENERS_URI_PART = \"/_hooks/listeners/\";", "modifier": "public static final", "type": "String", "declarator": "HOOKS_LISTENERS_URI_PART = \"/_hooks/listeners/\"", "var_name": "HOOKS_LISTENERS_URI_PART"}, {"original_string": "public static final String HOOKS_ROUTE_URI_PART = \"/_hooks/route\";", "modifier": "public static final", "type": "String", "declarator": "HOOKS_ROUTE_URI_PART = \"/_hooks/route\"", "var_name": "HOOKS_ROUTE_URI_PART"}, {"original_string": "public static final String ACCEPT = \"accept\";", "modifier": "public static final", "type": "String", "declarator": "ACCEPT = \"accept\"", "var_name": "ACCEPT"}, {"original_string": "private HttpClient httpClient;", "modifier": "private", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private List<String> supportedMethods = Arrays.asList(\"PUT\", \"GET\", \"POST\");", "modifier": "private", "type": "List<String>", "declarator": "supportedMethods = Arrays.asList(\"PUT\", \"GET\", \"POST\")", "var_name": "supportedMethods"}, {"original_string": "private List<String> outMethods = Arrays.asList(\"GET\", \"POST\");", "modifier": "private", "type": "List<String>", "declarator": "outMethods = Arrays.asList(\"GET\", \"POST\")", "var_name": "outMethods"}, {"original_string": "private List<String> inMethods = Arrays.asList(\"PUT\", \"POST\");", "modifier": "private", "type": "List<String>", "declarator": "inMethods = Arrays.asList(\"PUT\", \"POST\")", "var_name": "inMethods"}, {"original_string": "private static final String VALID_HEADER = \"X-Valid\";", "modifier": "private static final", "type": "String", "declarator": "VALID_HEADER = \"X-Valid\"", "var_name": "VALID_HEADER"}, {"original_string": "private static final String EXPAND_PARAM = \"expand\";", "modifier": "private static final", "type": "String", "declarator": "EXPAND_PARAM = \"expand\"", "var_name": "EXPAND_PARAM"}, {"original_string": "private static final int TIMEOUT = 120000;", "modifier": "private static final", "type": "int", "declarator": "TIMEOUT = 120000", "var_name": "TIMEOUT"}, {"original_string": "private static final Pattern noExtension = Pattern.compile(\".*/[^/\\\\.]*$\");", "modifier": "private static final", "type": "Pattern", "declarator": "noExtension = Pattern.compile(\".*/[^/\\\\.]*$\")", "var_name": "noExtension"}, {"original_string": "private Validator validator;", "modifier": "private", "type": "Validator", "declarator": "validator", "var_name": "validator"}, {"original_string": "private ValidationResourceManager validationResourceManager;", "modifier": "private", "type": "ValidationResourceManager", "declarator": "validationResourceManager", "var_name": "validationResourceManager"}, {"original_string": "private boolean failOnError = true;", "modifier": "private", "type": "boolean", "declarator": "failOnError = true", "var_name": "failOnError"}], "methods": [{"identifier": "ValidationHandler", "parameters": "(ValidationResourceManager validationResourceManager, ResourceStorage storage, HttpClient httpClient, String schemaRoot)", "modifiers": "public", "return": "", "signature": " ValidationHandler(ValidationResourceManager validationResourceManager, ResourceStorage storage, HttpClient httpClient, String schemaRoot)", "full_signature": "public  ValidationHandler(ValidationResourceManager validationResourceManager, ResourceStorage storage, HttpClient httpClient, String schemaRoot)", "class_method_signature": "ValidationHandler.ValidationHandler(ValidationResourceManager validationResourceManager, ResourceStorage storage, HttpClient httpClient, String schemaRoot)", "testcase": false, "constructor": true}, {"identifier": "isToValidate", "parameters": "(HttpServerRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean isToValidate(HttpServerRequest request)", "full_signature": "public boolean isToValidate(HttpServerRequest request)", "class_method_signature": "ValidationHandler.isToValidate(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "doesRequestValueMatch", "parameters": "(String value, String valuePattern)", "modifiers": "private", "return": "boolean", "signature": "boolean doesRequestValueMatch(String value, String valuePattern)", "full_signature": "private boolean doesRequestValueMatch(String value, String valuePattern)", "class_method_signature": "ValidationHandler.doesRequestValueMatch(String value, String valuePattern)", "testcase": false, "constructor": false}, {"identifier": "isJsonRequest", "parameters": "(HttpServerRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean isJsonRequest(HttpServerRequest request)", "full_signature": "private boolean isJsonRequest(HttpServerRequest request)", "class_method_signature": "ValidationHandler.isJsonRequest(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleValidation", "parameters": "(final HttpServerRequest req)", "modifiers": "private", "return": "void", "signature": "void handleValidation(final HttpServerRequest req)", "full_signature": "private void handleValidation(final HttpServerRequest req)", "class_method_signature": "ValidationHandler.handleValidation(final HttpServerRequest req)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(final HttpServerRequest request)", "modifiers": "public", "return": "void", "signature": "void handle(final HttpServerRequest request)", "full_signature": "public void handle(final HttpServerRequest request)", "class_method_signature": "ValidationHandler.handle(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "isFailOnError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFailOnError()", "full_signature": "public boolean isFailOnError()", "class_method_signature": "ValidationHandler.isFailOnError()", "testcase": false, "constructor": false}, {"identifier": "setFailOnError", "parameters": "(boolean failOnError)", "modifiers": "public", "return": "void", "signature": "void setFailOnError(boolean failOnError)", "full_signature": "public void setFailOnError(boolean failOnError)", "class_method_signature": "ValidationHandler.setFailOnError(boolean failOnError)", "testcase": false, "constructor": false}], "file": "gateleen-validation/src/main/java/org/swisspush/gateleen/validation/ValidationHandler.java"}, "focal_method": {"identifier": "isToValidate", "parameters": "(HttpServerRequest request)", "modifiers": "public", "return": "boolean", "body": "public boolean isToValidate(HttpServerRequest request) {\n        final Logger log = RequestLoggerFactory.getLogger(ValidationHandler.class, request);\n\n        boolean doValidate = supportedMethods.contains(request.method().name()) &&\n                isJsonRequest(request) &&\n                !(request.headers().names().contains(VALID_HEADER)) &&\n                !(request.params().names().contains(EXPAND_PARAM));\n        if (!doValidate) {\n            return false;\n        }\n\n        // Exclude Hooks from validation\n        if(request.uri().contains(HOOKS_ROUTE_URI_PART) || request.uri().contains(HOOKS_LISTENERS_URI_PART)){\n            return false; // do not validate\n        }\n\n        List<Map<String, String>> validationResources = validationResourceManager.getValidationResource().getResources();\n        try {\n            for (Map<String, String> validationResource : validationResources) {\n                if (doesRequestValueMatch(request.method().name(), validationResource.get(ValidationResource.METHOD_PROPERTY))\n                        && doesRequestValueMatch(request.uri(), validationResource.get(ValidationResource.URL_PROPERTY))) {\n                    return true;\n                }\n            }\n        } catch (PatternSyntaxException patternException) {\n            log.error(patternException.getMessage() + \" \" + patternException.getPattern());\n        }\n        return false;\n    }", "signature": "boolean isToValidate(HttpServerRequest request)", "full_signature": "public boolean isToValidate(HttpServerRequest request)", "class_method_signature": "ValidationHandler.isToValidate(HttpServerRequest request)", "testcase": false, "constructor": false, "invocations": ["getLogger", "contains", "name", "method", "isJsonRequest", "contains", "names", "headers", "contains", "names", "params", "contains", "uri", "contains", "uri", "getResources", "getValidationResource", "doesRequestValueMatch", "name", "method", "get", "doesRequestValueMatch", "uri", "get", "error", "getMessage", "getPattern"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}