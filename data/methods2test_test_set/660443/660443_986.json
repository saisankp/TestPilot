{"test_class": {"identifier": "MMFF94PartialChargesTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "tool/forcefield/src/test/java/org/openscience/cdk/charges/MMFF94PartialChargesTest.java"}, "test_case": {"identifier": "testMMFF94PartialCharges", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMMFF94PartialCharges() throws Exception {\n        double[] testResult = {-0.99, 0.314, 0.66, -0.57, -0.65, 0.36, 0.36, 0, 0, 0.5};\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer ac = sp.parseSmiles(\"NCC(=O)O\");\n        addExplicitHydrogens(ac);\n        MMFF94PartialCharges mmff = new MMFF94PartialCharges();\n        mmff.assignMMFF94PartialCharges(ac);\n        for (int i = 0; i < ac.getAtomCount(); i++) {\n            Assert.assertEquals(testResult[i], ((Double) ac.getAtom(i).getProperty(\"MMFF94charge\")).doubleValue(), 0.05);\n            //logger.debug(\"CHARGE AT \" + ac.getAtomAt(i).getSymbol() + \" \" + ac.getAtomAt(i).getProperty(\"MMFF94charge\"));\n        }\n    }", "signature": "void testMMFF94PartialCharges()", "full_signature": "@Test public void testMMFF94PartialCharges()", "class_method_signature": "MMFF94PartialChargesTest.testMMFF94PartialCharges()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "addExplicitHydrogens", "assignMMFF94PartialCharges", "getAtomCount", "assertEquals", "doubleValue", "getProperty", "getAtom"]}, "focal_class": {"identifier": "MMFF94PartialCharges", "superclass": "", "interfaces": "implements IChargeCalculator", "fields": [{"original_string": "public static final String MMFF_94_CHARGE = \"MMFF94charge\";", "modifier": "public static final", "type": "String", "declarator": "MMFF_94_CHARGE = \"MMFF94charge\"", "var_name": "MMFF_94_CHARGE"}, {"original_string": "private final ILoggingTool LOG = LoggingToolFactory.createLoggingTool(MMFF94BasedParameterSetReader.class);", "modifier": "private final", "type": "ILoggingTool", "declarator": "LOG = LoggingToolFactory.createLoggingTool(MMFF94BasedParameterSetReader.class)", "var_name": "LOG"}, {"original_string": "private final Mmff mmff = new Mmff();", "modifier": "private final", "type": "Mmff", "declarator": "mmff = new Mmff()", "var_name": "mmff"}], "methods": [{"identifier": "MMFF94PartialCharges", "parameters": "()", "modifiers": "public", "return": "", "signature": " MMFF94PartialCharges()", "full_signature": "public  MMFF94PartialCharges()", "class_method_signature": "MMFF94PartialCharges.MMFF94PartialCharges()", "testcase": false, "constructor": true}, {"identifier": "assignMMFF94PartialCharges", "parameters": "(IAtomContainer ac)", "modifiers": "public", "return": "IAtomContainer", "signature": "IAtomContainer assignMMFF94PartialCharges(IAtomContainer ac)", "full_signature": "public IAtomContainer assignMMFF94PartialCharges(IAtomContainer ac)", "class_method_signature": "MMFF94PartialCharges.assignMMFF94PartialCharges(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "calculateCharges", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "void", "signature": "void calculateCharges(IAtomContainer container)", "full_signature": "@Override public void calculateCharges(IAtomContainer container)", "class_method_signature": "MMFF94PartialCharges.calculateCharges(IAtomContainer container)", "testcase": false, "constructor": false}], "file": "tool/forcefield/src/main/java/org/openscience/cdk/charges/MMFF94PartialCharges.java"}, "focal_method": {"identifier": "MMFF94PartialCharges", "parameters": "()", "modifiers": "public", "return": "", "body": "public MMFF94PartialCharges() {\n    }", "signature": " MMFF94PartialCharges()", "full_signature": "public  MMFF94PartialCharges()", "class_method_signature": "MMFF94PartialCharges.MMFF94PartialCharges()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}