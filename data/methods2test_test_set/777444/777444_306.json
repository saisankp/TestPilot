{"test_class": {"identifier": "BasicAuthenticationHttpContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected HttpServletRequest request;", "modifier": "protected", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "protected HttpServletResponse response;", "modifier": "protected", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "BasicAuthenticationHttpContext context;", "modifier": "", "type": "BasicAuthenticationHttpContext", "declarator": "context", "var_name": "context"}], "file": "agent/osgi/src/test/java/org/jolokia/osgi/security/BasicAuthenticationHttpContextTest.java"}, "test_case": {"identifier": "correctAlternateAuth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void correctAlternateAuth() throws IOException {\n        expect(request.getHeader(\"Authorization\")).andReturn(null);\n        expect(request.getHeader(AuthorizationHeaderParser.JOLOKIA_ALTERNATE_AUTHORIZATION_HEADER)).andReturn(\"Basic cm9sYW5kOnMhY3IhdA==\");\n        request.setAttribute(HttpContext.AUTHENTICATION_TYPE,HttpServletRequest.BASIC_AUTH);\n        request.setAttribute(HttpContext.REMOTE_USER, \"roland\");\n        replay(request,response);\n\n        assertTrue(context.handleSecurity(request,response));\n    }", "signature": "void correctAlternateAuth()", "full_signature": "@Test public void correctAlternateAuth()", "class_method_signature": "BasicAuthenticationHttpContextTest.correctAlternateAuth()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "getHeader", "andReturn", "expect", "getHeader", "setAttribute", "setAttribute", "replay", "assertTrue", "handleSecurity"]}, "focal_class": {"identifier": "BasicAuthenticationHttpContext", "superclass": "extends DefaultHttpContext", "interfaces": "", "fields": [{"original_string": "private final String realm;", "modifier": "private final", "type": "String", "declarator": "realm", "var_name": "realm"}, {"original_string": "private final Authenticator authenticator;", "modifier": "private final", "type": "Authenticator", "declarator": "authenticator", "var_name": "authenticator"}], "methods": [{"identifier": "BasicAuthenticationHttpContext", "parameters": "(String pRealm, Authenticator pAuthenticator)", "modifiers": "public", "return": "", "signature": " BasicAuthenticationHttpContext(String pRealm, Authenticator pAuthenticator)", "full_signature": "public  BasicAuthenticationHttpContext(String pRealm, Authenticator pAuthenticator)", "class_method_signature": "BasicAuthenticationHttpContext.BasicAuthenticationHttpContext(String pRealm, Authenticator pAuthenticator)", "testcase": false, "constructor": true}, {"identifier": "handleSecurity", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "public", "return": "boolean", "signature": "boolean handleSecurity(HttpServletRequest request, HttpServletResponse response)", "full_signature": "public boolean handleSecurity(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "BasicAuthenticationHttpContext.handleSecurity(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "agent/osgi/src/main/java/org/jolokia/osgi/security/BasicAuthenticationHttpContext.java"}, "focal_method": {"identifier": "handleSecurity", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "public", "return": "boolean", "body": "public boolean handleSecurity(HttpServletRequest request, HttpServletResponse response) throws IOException {\n        if (!authenticator.authenticate(request)) {\n            response.setHeader(\"WWW-Authenticate\",HttpServletRequest.BASIC_AUTH + \" realm=\\\"\"+realm+\"\\\"\");\n            response.sendError(HttpServletResponse.SC_UNAUTHORIZED);\n            return false;\n        } else {\n            return true;\n        }\n    }", "signature": "boolean handleSecurity(HttpServletRequest request, HttpServletResponse response)", "full_signature": "public boolean handleSecurity(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "BasicAuthenticationHttpContext.handleSecurity(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["authenticate", "setHeader", "sendError"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}