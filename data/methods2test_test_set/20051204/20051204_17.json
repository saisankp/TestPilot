{"test_class": {"identifier": "TestSliderUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger log =\n      LoggerFactory.getLogger(TestSliderUtils.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log =\n      LoggerFactory.getLogger(TestSliderUtils.class)", "var_name": "log"}, {"original_string": "@Rule\n  public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "slider-core/src/test/java/org/apache/slider/common/tools/TestSliderUtils.java"}, "test_case": {"identifier": "testExtractFirstLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testExtractFirstLine() {\n    String firstLine = \"hello\";\n    String msg = firstLine + \"\\n2nd line\\n3rd line\";\n    Assert.assertEquals(\"Should be first line only\", firstLine,\n        SliderUtils.extractFirstLine(msg));\n    msg = \"\";\n    Assert.assertEquals(\"Should be empty\", msg,\n        SliderUtils.extractFirstLine(msg));\n    msg = \"   \";\n    Assert.assertEquals(\"Should contain spaces only\", msg,\n        SliderUtils.extractFirstLine(msg));\n    msg = null;\n    Assert.assertEquals(\"Should be null\", msg,\n        SliderUtils.extractFirstLine(msg));\n  }", "signature": "void testExtractFirstLine()", "full_signature": "@Test public void testExtractFirstLine()", "class_method_signature": "TestSliderUtils.testExtractFirstLine()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "extractFirstLine", "assertEquals", "extractFirstLine", "assertEquals", "extractFirstLine", "assertEquals", "extractFirstLine"]}, "focal_class": {"identifier": "SliderUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SliderUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SliderUtils.class)", "var_name": "log"}, {"original_string": "private static final AtomicBoolean processSecurityAlreadyInitialized =\n      new AtomicBoolean(false);", "modifier": "private static final", "type": "AtomicBoolean", "declarator": "processSecurityAlreadyInitialized =\n      new AtomicBoolean(false)", "var_name": "processSecurityAlreadyInitialized"}, {"original_string": "public static final String JAVA_SECURITY_KRB5_REALM =\n      \"java.security.krb5.realm\";", "modifier": "public static final", "type": "String", "declarator": "JAVA_SECURITY_KRB5_REALM =\n      \"java.security.krb5.realm\"", "var_name": "JAVA_SECURITY_KRB5_REALM"}, {"original_string": "public static final String JAVA_SECURITY_KRB5_KDC = \"java.security.krb5.kdc\";", "modifier": "public static final", "type": "String", "declarator": "JAVA_SECURITY_KRB5_KDC = \"java.security.krb5.kdc\"", "var_name": "JAVA_SECURITY_KRB5_KDC"}, {"original_string": "public static final String WINUTILS = \"WINUTILS.EXE\";", "modifier": "public static final", "type": "String", "declarator": "WINUTILS = \"WINUTILS.EXE\"", "var_name": "WINUTILS"}, {"original_string": "public static final String OPENSSL = \"openssl\";", "modifier": "public static final", "type": "String", "declarator": "OPENSSL = \"openssl\"", "var_name": "OPENSSL"}, {"original_string": "public static final String PYTHON = \"python\";", "modifier": "public static final", "type": "String", "declarator": "PYTHON = \"python\"", "var_name": "PYTHON"}, {"original_string": "public static final String DOCKER = \"docker\";", "modifier": "public static final", "type": "String", "declarator": "DOCKER = \"docker\"", "var_name": "DOCKER"}, {"original_string": "public static final String DOCKER_YARN = \"yarn_docker\";", "modifier": "public static final", "type": "String", "declarator": "DOCKER_YARN = \"yarn_docker\"", "var_name": "DOCKER_YARN"}, {"original_string": "public static final int NODE_LIST_LIMIT = 10;", "modifier": "public static final", "type": "int", "declarator": "NODE_LIST_LIMIT = 10", "var_name": "NODE_LIST_LIMIT"}, {"original_string": "private static final PatternValidator clusternamePattern\n      = new PatternValidator(\"[a-z][a-z0-9_-]*\");", "modifier": "private static final", "type": "PatternValidator", "declarator": "clusternamePattern\n      = new PatternValidator(\"[a-z][a-z0-9_-]*\")", "var_name": "clusternamePattern"}], "methods": [{"identifier": "SliderUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SliderUtils()", "full_signature": "private  SliderUtils()", "class_method_signature": "SliderUtils.SliderUtils()", "testcase": false, "constructor": true}, {"identifier": "isUnset", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isUnset(String s)", "full_signature": "public static boolean isUnset(String s)", "class_method_signature": "SliderUtils.isUnset(String s)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSet(String s)", "full_signature": "public static boolean isSet(String s)", "class_method_signature": "SliderUtils.isSet(String s)", "testcase": false, "constructor": false}, {"identifier": "isNotEmpty", "parameters": "(List l)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNotEmpty(List l)", "full_signature": "public static boolean isNotEmpty(List l)", "class_method_signature": "SliderUtils.isNotEmpty(List l)", "testcase": false, "constructor": false}, {"identifier": "isNotEmpty", "parameters": "(Map m)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNotEmpty(Map m)", "full_signature": "public static boolean isNotEmpty(Map m)", "class_method_signature": "SliderUtils.isNotEmpty(Map m)", "testcase": false, "constructor": false}, {"identifier": "validateNumber", "parameters": "(String num, String msg)", "modifiers": "@SuppressWarnings(\"ResultOfMethodCallIgnored\") private static", "return": "void", "signature": "void validateNumber(String num, String msg)", "full_signature": "@SuppressWarnings(\"ResultOfMethodCallIgnored\") private static void validateNumber(String num, String msg)", "class_method_signature": "SliderUtils.validateNumber(String num, String msg)", "testcase": false, "constructor": false}, {"identifier": "translateTrailingHeapUnit", "parameters": "(String heapsize)", "modifiers": "public static", "return": "String", "signature": "String translateTrailingHeapUnit(String heapsize)", "full_signature": "public static String translateTrailingHeapUnit(String heapsize)", "class_method_signature": "SliderUtils.translateTrailingHeapUnit(String heapsize)", "testcase": false, "constructor": false}, {"identifier": "deleteDirectoryTree", "parameters": "(File dir)", "modifiers": "public static", "return": "void", "signature": "void deleteDirectoryTree(File dir)", "full_signature": "public static void deleteDirectoryTree(File dir)", "class_method_signature": "SliderUtils.deleteDirectoryTree(File dir)", "testcase": false, "constructor": false}, {"identifier": "findContainingJarOrFail", "parameters": "(Class clazz)", "modifiers": "public static", "return": "File", "signature": "File findContainingJarOrFail(Class clazz)", "full_signature": "public static File findContainingJarOrFail(Class clazz)", "class_method_signature": "SliderUtils.findContainingJarOrFail(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "findContainingJar", "parameters": "(Class my_class)", "modifiers": "public static", "return": "File", "signature": "File findContainingJar(Class my_class)", "full_signature": "public static File findContainingJar(Class my_class)", "class_method_signature": "SliderUtils.findContainingJar(Class my_class)", "testcase": false, "constructor": false}, {"identifier": "checkPort", "parameters": "(String hostname, int port, int connectTimeout)", "modifiers": "public static", "return": "void", "signature": "void checkPort(String hostname, int port, int connectTimeout)", "full_signature": "public static void checkPort(String hostname, int port, int connectTimeout)", "class_method_signature": "SliderUtils.checkPort(String hostname, int port, int connectTimeout)", "testcase": false, "constructor": false}, {"identifier": "checkPort", "parameters": "(String name,\n      InetSocketAddress address,\n      int connectTimeout)", "modifiers": "@SuppressWarnings(\"SocketOpenedButNotSafelyClosed\") public static", "return": "void", "signature": "void checkPort(String name,\n      InetSocketAddress address,\n      int connectTimeout)", "full_signature": "@SuppressWarnings(\"SocketOpenedButNotSafelyClosed\") public static void checkPort(String name,\n      InetSocketAddress address,\n      int connectTimeout)", "class_method_signature": "SliderUtils.checkPort(String name,\n      InetSocketAddress address,\n      int connectTimeout)", "testcase": false, "constructor": false}, {"identifier": "checkURL", "parameters": "(String name, String url, int timeout)", "modifiers": "public static", "return": "void", "signature": "void checkURL(String name, String url, int timeout)", "full_signature": "public static void checkURL(String name, String url, int timeout)", "class_method_signature": "SliderUtils.checkURL(String name, String url, int timeout)", "testcase": false, "constructor": false}, {"identifier": "requiredFile", "parameters": "(String filename, String role)", "modifiers": "public static", "return": "File", "signature": "File requiredFile(String filename, String role)", "full_signature": "public static File requiredFile(String filename, String role)", "class_method_signature": "SliderUtils.requiredFile(String filename, String role)", "testcase": false, "constructor": false}, {"identifier": "isClusternameValid", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isClusternameValid(String name)", "full_signature": "public static boolean isClusternameValid(String name)", "class_method_signature": "SliderUtils.isClusternameValid(String name)", "testcase": false, "constructor": false}, {"identifier": "oldIsClusternameValid", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean oldIsClusternameValid(String name)", "full_signature": "public static boolean oldIsClusternameValid(String name)", "class_method_signature": "SliderUtils.oldIsClusternameValid(String name)", "testcase": false, "constructor": false}, {"identifier": "copyDirectory", "parameters": "(Configuration conf,\n      Path srcDirPath,\n      Path destDirPath,\n      FsPermission permission)", "modifiers": "public static", "return": "int", "signature": "int copyDirectory(Configuration conf,\n      Path srcDirPath,\n      Path destDirPath,\n      FsPermission permission)", "full_signature": "public static int copyDirectory(Configuration conf,\n      Path srcDirPath,\n      Path destDirPath,\n      FsPermission permission)", "class_method_signature": "SliderUtils.copyDirectory(Configuration conf,\n      Path srcDirPath,\n      Path destDirPath,\n      FsPermission permission)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Configuration conf,\n      Path srcFile,\n      Path destFile)", "modifiers": "public static", "return": "void", "signature": "void copy(Configuration conf,\n      Path srcFile,\n      Path destFile)", "full_signature": "public static void copy(Configuration conf,\n      Path srcFile,\n      Path destFile)", "class_method_signature": "SliderUtils.copy(Configuration conf,\n      Path srcFile,\n      Path destFile)", "testcase": false, "constructor": false}, {"identifier": "stringify", "parameters": "(Throwable t)", "modifiers": "public static", "return": "String", "signature": "String stringify(Throwable t)", "full_signature": "public static String stringify(Throwable t)", "class_method_signature": "SliderUtils.stringify(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "extractFirstLine", "parameters": "(String msg)", "modifiers": "public static", "return": "String", "signature": "String extractFirstLine(String msg)", "full_signature": "public static String extractFirstLine(String msg)", "class_method_signature": "SliderUtils.extractFirstLine(String msg)", "testcase": false, "constructor": false}, {"identifier": "createConfiguration", "parameters": "()", "modifiers": "public static", "return": "YarnConfiguration", "signature": "YarnConfiguration createConfiguration()", "full_signature": "public static YarnConfiguration createConfiguration()", "class_method_signature": "SliderUtils.createConfiguration()", "testcase": false, "constructor": false}, {"identifier": "patchConfiguration", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "Configuration", "signature": "Configuration patchConfiguration(Configuration conf)", "full_signature": "public static Configuration patchConfiguration(Configuration conf)", "class_method_signature": "SliderUtils.patchConfiguration(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "collectionToStringList", "parameters": "(Collection c)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> collectionToStringList(Collection c)", "full_signature": "public static List<String> collectionToStringList(Collection c)", "class_method_signature": "SliderUtils.collectionToStringList(Collection c)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Collection collection, String separator)", "modifiers": "public static", "return": "String", "signature": "String join(Collection collection, String separator)", "full_signature": "public static String join(Collection collection, String separator)", "class_method_signature": "SliderUtils.join(Collection collection, String separator)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Collection collection,\n      String separator,\n      boolean trailing)", "modifiers": "public static", "return": "String", "signature": "String join(Collection collection,\n      String separator,\n      boolean trailing)", "full_signature": "public static String join(Collection collection,\n      String separator,\n      boolean trailing)", "class_method_signature": "SliderUtils.join(Collection collection,\n      String separator,\n      boolean trailing)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String[] collection, String separator)", "modifiers": "public static", "return": "String", "signature": "String join(String[] collection, String separator)", "full_signature": "public static String join(String[] collection, String separator)", "class_method_signature": "SliderUtils.join(String[] collection, String separator)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String[] collection, String separator,\n      boolean trailing)", "modifiers": "public static", "return": "String", "signature": "String join(String[] collection, String separator,\n      boolean trailing)", "full_signature": "public static String join(String[] collection, String separator,\n      boolean trailing)", "class_method_signature": "SliderUtils.join(String[] collection, String separator,\n      boolean trailing)", "testcase": false, "constructor": false}, {"identifier": "joinWithInnerSeparator", "parameters": "(String separator,\n      Object... collection)", "modifiers": "public static", "return": "String", "signature": "String joinWithInnerSeparator(String separator,\n      Object... collection)", "full_signature": "public static String joinWithInnerSeparator(String separator,\n      Object... collection)", "class_method_signature": "SliderUtils.joinWithInnerSeparator(String separator,\n      Object... collection)", "testcase": false, "constructor": false}, {"identifier": "mandatoryEnvVariable", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String mandatoryEnvVariable(String key)", "full_signature": "public static String mandatoryEnvVariable(String key)", "class_method_signature": "SliderUtils.mandatoryEnvVariable(String key)", "testcase": false, "constructor": false}, {"identifier": "appReportToString", "parameters": "(ApplicationReport r,\n      String separator)", "modifiers": "public static", "return": "String", "signature": "String appReportToString(ApplicationReport r,\n      String separator)", "full_signature": "public static String appReportToString(ApplicationReport r,\n      String separator)", "class_method_signature": "SliderUtils.appReportToString(ApplicationReport r,\n      String separator)", "testcase": false, "constructor": false}, {"identifier": "instanceDetailsToString", "parameters": "(String name,\n      ApplicationReport report,\n      List<ContainerInformation> containers,\n      String version,\n      Set<String> components,\n      boolean verbose)", "modifiers": "public static", "return": "String", "signature": "String instanceDetailsToString(String name,\n      ApplicationReport report,\n      List<ContainerInformation> containers,\n      String version,\n      Set<String> components,\n      boolean verbose)", "full_signature": "public static String instanceDetailsToString(String name,\n      ApplicationReport report,\n      List<ContainerInformation> containers,\n      String version,\n      Set<String> components,\n      boolean verbose)", "class_method_signature": "SliderUtils.instanceDetailsToString(String name,\n      ApplicationReport report,\n      List<ContainerInformation> containers,\n      String version,\n      Set<String> components,\n      boolean verbose)", "testcase": false, "constructor": false}, {"identifier": "containersToString", "parameters": "(\n      List<ContainerInformation> containers, String version,\n      Set<String> components)", "modifiers": "public static", "return": "String", "signature": "String containersToString(\n      List<ContainerInformation> containers, String version,\n      Set<String> components)", "full_signature": "public static String containersToString(\n      List<ContainerInformation> containers, String version,\n      Set<String> components)", "class_method_signature": "SliderUtils.containersToString(\n      List<ContainerInformation> containers, String version,\n      Set<String> components)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(String value, String filter)", "modifiers": "public static", "return": "boolean", "signature": "boolean filter(String value, String filter)", "full_signature": "public static boolean filter(String value, String filter)", "class_method_signature": "SliderUtils.filter(String value, String filter)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(String value, Set<String> filters)", "modifiers": "public static", "return": "boolean", "signature": "boolean filter(String value, Set<String> filters)", "full_signature": "public static boolean filter(String value, Set<String> filters)", "class_method_signature": "SliderUtils.filter(String value, Set<String> filters)", "testcase": false, "constructor": false}, {"identifier": "sortApplicationsByMostRecent", "parameters": "(List<ApplicationReport> instances)", "modifiers": "public static", "return": "void", "signature": "void sortApplicationsByMostRecent(List<ApplicationReport> instances)", "full_signature": "public static void sortApplicationsByMostRecent(List<ApplicationReport> instances)", "class_method_signature": "SliderUtils.sortApplicationsByMostRecent(List<ApplicationReport> instances)", "testcase": false, "constructor": false}, {"identifier": "sortApplicationReport", "parameters": "(List<ApplicationReport> instances)", "modifiers": "public static", "return": "void", "signature": "void sortApplicationReport(List<ApplicationReport> instances)", "full_signature": "public static void sortApplicationReport(List<ApplicationReport> instances)", "class_method_signature": "SliderUtils.sortApplicationReport(List<ApplicationReport> instances)", "testcase": false, "constructor": false}, {"identifier": "buildApplicationReportMap", "parameters": "(\n      List<ApplicationReport> instances,\n      YarnApplicationState minState, YarnApplicationState maxState)", "modifiers": "public static", "return": "Map<String, ApplicationReport>", "signature": "Map<String, ApplicationReport> buildApplicationReportMap(\n      List<ApplicationReport> instances,\n      YarnApplicationState minState, YarnApplicationState maxState)", "full_signature": "public static Map<String, ApplicationReport> buildApplicationReportMap(\n      List<ApplicationReport> instances,\n      YarnApplicationState minState, YarnApplicationState maxState)", "class_method_signature": "SliderUtils.buildApplicationReportMap(\n      List<ApplicationReport> instances,\n      YarnApplicationState minState, YarnApplicationState maxState)", "testcase": false, "constructor": false}, {"identifier": "sortedMap", "parameters": "(Map<String, String> source)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> sortedMap(Map<String, String> source)", "full_signature": "public static Map<String, String> sortedMap(Map<String, String> source)", "class_method_signature": "SliderUtils.sortedMap(Map<String, String> source)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(Properties properties)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> toMap(Properties properties)", "full_signature": "public static Map<String, String> toMap(Properties properties)", "class_method_signature": "SliderUtils.toMap(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "mergeMap", "parameters": "(Map<String, String> first,\n      Map<String, String> second)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> mergeMap(Map<String, String> first,\n      Map<String, String> second)", "full_signature": "public static Map<String, String> mergeMap(Map<String, String> first,\n      Map<String, String> second)", "class_method_signature": "SliderUtils.mergeMap(Map<String, String> first,\n      Map<String, String> second)", "testcase": false, "constructor": false}, {"identifier": "mergeEntries", "parameters": "(Map<String, String> dest,\n      Iterable<Map.Entry<String, String>> entries)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> mergeEntries(Map<String, String> dest,\n      Iterable<Map.Entry<String, String>> entries)", "full_signature": "public static Map<String, String> mergeEntries(Map<String, String> dest,\n      Iterable<Map.Entry<String, String>> entries)", "class_method_signature": "SliderUtils.mergeEntries(Map<String, String> dest,\n      Iterable<Map.Entry<String, String>> entries)", "testcase": false, "constructor": false}, {"identifier": "mergeMaps", "parameters": "(Map<T1, T2> first,\n      Map<T1, T2> second)", "modifiers": "public static", "return": "Map<T1, T2>", "signature": "Map<T1, T2> mergeMaps(Map<T1, T2> first,\n      Map<T1, T2> second)", "full_signature": "public static Map<T1, T2> mergeMaps(Map<T1, T2> first,\n      Map<T1, T2> second)", "class_method_signature": "SliderUtils.mergeMaps(Map<T1, T2> first,\n      Map<T1, T2> second)", "testcase": false, "constructor": false}, {"identifier": "mergeMapsIgnoreDuplicateKeys", "parameters": "(Map<T1, T2> first,\n      Map<T1, T2> second)", "modifiers": "public static", "return": "Map<T1, T2>", "signature": "Map<T1, T2> mergeMapsIgnoreDuplicateKeys(Map<T1, T2> first,\n      Map<T1, T2> second)", "full_signature": "public static Map<T1, T2> mergeMapsIgnoreDuplicateKeys(Map<T1, T2> first,\n      Map<T1, T2> second)", "class_method_signature": "SliderUtils.mergeMapsIgnoreDuplicateKeys(Map<T1, T2> first,\n      Map<T1, T2> second)", "testcase": false, "constructor": false}, {"identifier": "mergeMapsIgnoreDuplicateKeysAndPrefixes", "parameters": "(\n      Map<String, String> first, Map<String, String> second,\n      String... prefixes)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> mergeMapsIgnoreDuplicateKeysAndPrefixes(\n      Map<String, String> first, Map<String, String> second,\n      String... prefixes)", "full_signature": "public static Map<String, String> mergeMapsIgnoreDuplicateKeysAndPrefixes(\n      Map<String, String> first, Map<String, String> second,\n      String... prefixes)", "class_method_signature": "SliderUtils.mergeMapsIgnoreDuplicateKeysAndPrefixes(\n      Map<String, String> first, Map<String, String> second,\n      String... prefixes)", "testcase": false, "constructor": false}, {"identifier": "stringifyMap", "parameters": "(Map<String, String> map)", "modifiers": "public static", "return": "String", "signature": "String stringifyMap(Map<String, String> map)", "full_signature": "public static String stringifyMap(Map<String, String> map)", "class_method_signature": "SliderUtils.stringifyMap(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "getIntValue", "parameters": "(Map<String, String> roleMap,\n      String key,\n      int defVal,\n      int min,\n      int max\n  )", "modifiers": "public static", "return": "int", "signature": "int getIntValue(Map<String, String> roleMap,\n      String key,\n      int defVal,\n      int min,\n      int max\n  )", "full_signature": "public static int getIntValue(Map<String, String> roleMap,\n      String key,\n      int defVal,\n      int min,\n      int max\n  )", "class_method_signature": "SliderUtils.getIntValue(Map<String, String> roleMap,\n      String key,\n      int defVal,\n      int min,\n      int max\n  )", "testcase": false, "constructor": false}, {"identifier": "parseAndValidate", "parameters": "(String errorKey,\n      String valS,\n      int defVal,\n      int min, int max)", "modifiers": "public static", "return": "int", "signature": "int parseAndValidate(String errorKey,\n      String valS,\n      int defVal,\n      int min, int max)", "full_signature": "public static int parseAndValidate(String errorKey,\n      String valS,\n      int defVal,\n      int min, int max)", "class_method_signature": "SliderUtils.parseAndValidate(String errorKey,\n      String valS,\n      int defVal,\n      int min, int max)", "testcase": false, "constructor": false}, {"identifier": "getRmAddress", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "InetSocketAddress", "signature": "InetSocketAddress getRmAddress(Configuration conf)", "full_signature": "public static InetSocketAddress getRmAddress(Configuration conf)", "class_method_signature": "SliderUtils.getRmAddress(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getRmSchedulerAddress", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "InetSocketAddress", "signature": "InetSocketAddress getRmSchedulerAddress(Configuration conf)", "full_signature": "public static InetSocketAddress getRmSchedulerAddress(Configuration conf)", "class_method_signature": "SliderUtils.getRmSchedulerAddress(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "isRmSchedulerAddressDefined", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRmSchedulerAddressDefined(Configuration conf)", "full_signature": "public static boolean isRmSchedulerAddressDefined(Configuration conf)", "class_method_signature": "SliderUtils.isRmSchedulerAddressDefined(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "isAddressDefined", "parameters": "(InetSocketAddress address)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAddressDefined(InetSocketAddress address)", "full_signature": "public static boolean isAddressDefined(InetSocketAddress address)", "class_method_signature": "SliderUtils.isAddressDefined(InetSocketAddress address)", "testcase": false, "constructor": false}, {"identifier": "setRmAddress", "parameters": "(Configuration conf, String rmAddr)", "modifiers": "public static", "return": "void", "signature": "void setRmAddress(Configuration conf, String rmAddr)", "full_signature": "public static void setRmAddress(Configuration conf, String rmAddr)", "class_method_signature": "SliderUtils.setRmAddress(Configuration conf, String rmAddr)", "testcase": false, "constructor": false}, {"identifier": "setRmSchedulerAddress", "parameters": "(Configuration conf, String rmAddr)", "modifiers": "public static", "return": "void", "signature": "void setRmSchedulerAddress(Configuration conf, String rmAddr)", "full_signature": "public static void setRmSchedulerAddress(Configuration conf, String rmAddr)", "class_method_signature": "SliderUtils.setRmSchedulerAddress(Configuration conf, String rmAddr)", "testcase": false, "constructor": false}, {"identifier": "hasAppFinished", "parameters": "(ApplicationReport report)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasAppFinished(ApplicationReport report)", "full_signature": "public static boolean hasAppFinished(ApplicationReport report)", "class_method_signature": "SliderUtils.hasAppFinished(ApplicationReport report)", "testcase": false, "constructor": false}, {"identifier": "containerToString", "parameters": "(Container container)", "modifiers": "public static", "return": "String", "signature": "String containerToString(Container container)", "full_signature": "public static String containerToString(Container container)", "class_method_signature": "SliderUtils.containerToString(Container container)", "testcase": false, "constructor": false}, {"identifier": "reportToString", "parameters": "(ApplicationReport report)", "modifiers": "public static", "return": "String", "signature": "String reportToString(ApplicationReport report)", "full_signature": "public static String reportToString(ApplicationReport report)", "class_method_signature": "SliderUtils.reportToString(ApplicationReport report)", "testcase": false, "constructor": false}, {"identifier": "stringify", "parameters": "(org.apache.hadoop.yarn.api.records.URL url)", "modifiers": "public static", "return": "String", "signature": "String stringify(org.apache.hadoop.yarn.api.records.URL url)", "full_signature": "public static String stringify(org.apache.hadoop.yarn.api.records.URL url)", "class_method_signature": "SliderUtils.stringify(org.apache.hadoop.yarn.api.records.URL url)", "testcase": false, "constructor": false}, {"identifier": "findFreePort", "parameters": "(int start, int limit)", "modifiers": "public static", "return": "int", "signature": "int findFreePort(int start, int limit)", "full_signature": "public static int findFreePort(int start, int limit)", "class_method_signature": "SliderUtils.findFreePort(int start, int limit)", "testcase": false, "constructor": false}, {"identifier": "getOpenPort", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getOpenPort()", "full_signature": "public static int getOpenPort()", "class_method_signature": "SliderUtils.getOpenPort()", "testcase": false, "constructor": false}, {"identifier": "isPortAvailable", "parameters": "(int port)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPortAvailable(int port)", "full_signature": "public static boolean isPortAvailable(int port)", "class_method_signature": "SliderUtils.isPortAvailable(int port)", "testcase": false, "constructor": false}, {"identifier": "buildEnvMap", "parameters": "(Map<String, String> roleOpts)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> buildEnvMap(Map<String, String> roleOpts)", "full_signature": "public static Map<String, String> buildEnvMap(Map<String, String> roleOpts)", "class_method_signature": "SliderUtils.buildEnvMap(Map<String, String> roleOpts)", "testcase": false, "constructor": false}, {"identifier": "buildEnvMap", "parameters": "(Map<String, String> roleOpts,\n      Map<String,String> tokenMap)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> buildEnvMap(Map<String, String> roleOpts,\n      Map<String,String> tokenMap)", "full_signature": "public static Map<String, String> buildEnvMap(Map<String, String> roleOpts,\n      Map<String,String> tokenMap)", "class_method_signature": "SliderUtils.buildEnvMap(Map<String, String> roleOpts,\n      Map<String,String> tokenMap)", "testcase": false, "constructor": false}, {"identifier": "applyCommandLineRoleOptsToRoleMap", "parameters": "(\n      Map<String, Map<String, String>> clusterRoleMap,\n      Map<String, Map<String, String>> commandOptions)", "modifiers": "public static", "return": "void", "signature": "void applyCommandLineRoleOptsToRoleMap(\n      Map<String, Map<String, String>> clusterRoleMap,\n      Map<String, Map<String, String>> commandOptions)", "full_signature": "public static void applyCommandLineRoleOptsToRoleMap(\n      Map<String, Map<String, String>> clusterRoleMap,\n      Map<String, Map<String, String>> commandOptions)", "class_method_signature": "SliderUtils.applyCommandLineRoleOptsToRoleMap(\n      Map<String, Map<String, String>> clusterRoleMap,\n      Map<String, Map<String, String>> commandOptions)", "testcase": false, "constructor": false}, {"identifier": "validateClusterName", "parameters": "(String clustername)", "modifiers": "public static", "return": "void", "signature": "void validateClusterName(String clustername)", "full_signature": "public static void validateClusterName(String clustername)", "class_method_signature": "SliderUtils.validateClusterName(String clustername)", "testcase": false, "constructor": false}, {"identifier": "verifyPrincipalSet", "parameters": "(Configuration conf,\n      String principal)", "modifiers": "public static", "return": "void", "signature": "void verifyPrincipalSet(Configuration conf,\n      String principal)", "full_signature": "public static void verifyPrincipalSet(Configuration conf,\n      String principal)", "class_method_signature": "SliderUtils.verifyPrincipalSet(Configuration conf,\n      String principal)", "testcase": false, "constructor": false}, {"identifier": "isHadoopClusterSecure", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHadoopClusterSecure(Configuration conf)", "full_signature": "public static boolean isHadoopClusterSecure(Configuration conf)", "class_method_signature": "SliderUtils.isHadoopClusterSecure(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "maybeInitSecurity", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "boolean", "signature": "boolean maybeInitSecurity(Configuration conf)", "full_signature": "public static boolean maybeInitSecurity(Configuration conf)", "class_method_signature": "SliderUtils.maybeInitSecurity(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "initProcessSecurity", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "boolean", "signature": "boolean initProcessSecurity(Configuration conf)", "full_signature": "public static boolean initProcessSecurity(Configuration conf)", "class_method_signature": "SliderUtils.initProcessSecurity(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "forceLogin", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void forceLogin()", "full_signature": "public static void forceLogin()", "class_method_signature": "SliderUtils.forceLogin()", "testcase": false, "constructor": false}, {"identifier": "putJar", "parameters": "(Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem,\n      Class clazz,\n      Path tempPath,\n      String libdir,\n      String jarName\n  )", "modifiers": "public static", "return": "LocalResource", "signature": "LocalResource putJar(Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem,\n      Class clazz,\n      Path tempPath,\n      String libdir,\n      String jarName\n  )", "full_signature": "public static LocalResource putJar(Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem,\n      Class clazz,\n      Path tempPath,\n      String libdir,\n      String jarName\n  )", "class_method_signature": "SliderUtils.putJar(Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem,\n      Class clazz,\n      Path tempPath,\n      String libdir,\n      String jarName\n  )", "testcase": false, "constructor": false}, {"identifier": "putAllJars", "parameters": "(Map<String, LocalResource> providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath)", "modifiers": "public static", "return": "void", "signature": "void putAllJars(Map<String, LocalResource> providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath)", "full_signature": "public static void putAllJars(Map<String, LocalResource> providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath)", "class_method_signature": "SliderUtils.putAllJars(Map<String, LocalResource> providerResources,\n                                SliderFileSystem sliderFileSystem,\n                                Path tempPath,\n                                String libDir,\n                                String srcPath)", "testcase": false, "constructor": false}, {"identifier": "createJarFilter", "parameters": "()", "modifiers": "public static", "return": "FilenameFilter", "signature": "FilenameFilter createJarFilter()", "full_signature": "public static FilenameFilter createJarFilter()", "class_method_signature": "SliderUtils.createJarFilter()", "testcase": false, "constructor": false}, {"identifier": "putAmTarGzipAndUpdate", "parameters": "(\n      Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem\n  )", "modifiers": "public static", "return": "void", "signature": "void putAmTarGzipAndUpdate(\n      Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem\n  )", "full_signature": "public static void putAmTarGzipAndUpdate(\n      Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem\n  )", "class_method_signature": "SliderUtils.putAmTarGzipAndUpdate(\n      Map<String, LocalResource> providerResources,\n      SliderFileSystem sliderFileSystem\n  )", "testcase": false, "constructor": false}, {"identifier": "deepClone", "parameters": "(Map<String, Map<String, String>> src)", "modifiers": "public static", "return": "Map<String, Map<String, String>>", "signature": "Map<String, Map<String, String>> deepClone(Map<String, Map<String, String>> src)", "full_signature": "public static Map<String, Map<String, String>> deepClone(Map<String, Map<String, String>> src)", "class_method_signature": "SliderUtils.deepClone(Map<String, Map<String, String>> src)", "testcase": false, "constructor": false}, {"identifier": "stringMapClone", "parameters": "(Map<String, String> src)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> stringMapClone(Map<String, String> src)", "full_signature": "public static Map<String, String> stringMapClone(Map<String, String> src)", "class_method_signature": "SliderUtils.stringMapClone(Map<String, String> src)", "testcase": false, "constructor": false}, {"identifier": "listDir", "parameters": "(File dir)", "modifiers": "public static", "return": "String", "signature": "String listDir(File dir)", "full_signature": "public static String listDir(File dir)", "class_method_signature": "SliderUtils.listDir(File dir)", "testcase": false, "constructor": false}, {"identifier": "createLocalPath", "parameters": "(File file)", "modifiers": "public static", "return": "Path", "signature": "Path createLocalPath(File file)", "full_signature": "public static Path createLocalPath(File file)", "class_method_signature": "SliderUtils.createLocalPath(File file)", "testcase": false, "constructor": false}, {"identifier": "getCurrentUser", "parameters": "()", "modifiers": "public static", "return": "UserGroupInformation", "signature": "UserGroupInformation getCurrentUser()", "full_signature": "public static UserGroupInformation getCurrentUser()", "class_method_signature": "SliderUtils.getCurrentUser()", "testcase": false, "constructor": false}, {"identifier": "getKerberosRealm", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getKerberosRealm()", "full_signature": "public static String getKerberosRealm()", "class_method_signature": "SliderUtils.getKerberosRealm()", "testcase": false, "constructor": false}, {"identifier": "registerClientResource", "parameters": "()", "modifiers": "public static", "return": "URL", "signature": "URL registerClientResource()", "full_signature": "public static URL registerClientResource()", "class_method_signature": "SliderUtils.registerClientResource()", "testcase": false, "constructor": false}, {"identifier": "loadSliderClientXML", "parameters": "()", "modifiers": "public static", "return": "Configuration", "signature": "Configuration loadSliderClientXML()", "full_signature": "public static Configuration loadSliderClientXML()", "class_method_signature": "SliderUtils.loadSliderClientXML()", "testcase": false, "constructor": false}, {"identifier": "sequenceToString", "parameters": "(CharSequence charSequence)", "modifiers": "public static", "return": "String", "signature": "String sequenceToString(CharSequence charSequence)", "full_signature": "public static String sequenceToString(CharSequence charSequence)", "class_method_signature": "SliderUtils.sequenceToString(CharSequence charSequence)", "testcase": false, "constructor": false}, {"identifier": "buildClasspath", "parameters": "(String sliderConfDir,\n      String libdir,\n      Configuration config,\n      SliderFileSystem sliderFileSystem,\n      boolean usingMiniMRCluster)", "modifiers": "public static", "return": "ClasspathConstructor", "signature": "ClasspathConstructor buildClasspath(String sliderConfDir,\n      String libdir,\n      Configuration config,\n      SliderFileSystem sliderFileSystem,\n      boolean usingMiniMRCluster)", "full_signature": "public static ClasspathConstructor buildClasspath(String sliderConfDir,\n      String libdir,\n      Configuration config,\n      SliderFileSystem sliderFileSystem,\n      boolean usingMiniMRCluster)", "class_method_signature": "SliderUtils.buildClasspath(String sliderConfDir,\n      String libdir,\n      Configuration config,\n      SliderFileSystem sliderFileSystem,\n      boolean usingMiniMRCluster)", "testcase": false, "constructor": false}], "file": "slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java"}, "focal_method": {"identifier": "extractFirstLine", "parameters": "(String msg)", "modifiers": "public static", "return": "String", "body": "public static String extractFirstLine(String msg) {\n    if (StringUtils.isNotBlank(msg)) {\n      int newlineIndex = msg.indexOf(System.lineSeparator());\n      if (newlineIndex != -1) {\n        msg = msg.substring(0, newlineIndex);\n      }\n    }\n    return msg;\n  }", "signature": "String extractFirstLine(String msg)", "full_signature": "public static String extractFirstLine(String msg)", "class_method_signature": "SliderUtils.extractFirstLine(String msg)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "indexOf", "lineSeparator", "substring"]}, "repository": {"repo_id": 20051204, "url": "https://github.com/apache/incubator-retired-slider", "language": "Java", "is_fork": false, "fork_count": 73, "stargazer_count": 74, "size": 16472, "license": "licensed"}}