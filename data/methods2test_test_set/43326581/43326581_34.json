{"test_class": {"identifier": "FossologyScriptsHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FossologyScriptsHandler fossologyScriptsHandler;", "modifier": "", "type": "FossologyScriptsHandler", "declarator": "fossologyScriptsHandler", "var_name": "fossologyScriptsHandler"}, {"original_string": "@Mock\n    FossologyUploader fossologyUploader;", "modifier": "@Mock", "type": "FossologyUploader", "declarator": "fossologyUploader", "var_name": "fossologyUploader"}], "file": "backend/src/src-fossology/src/test/java/org/eclipse/sw360/fossology/handler/FossologyScriptsHandlerTest.java"}, "test_case": {"identifier": "testDeployScriptsCanOpenAllResourceFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeployScriptsCanOpenAllResourceFiles() throws Exception {\n        when(fossologyUploader.copyToFossology(anyString(), any(InputStream.class), anyBoolean())).thenReturn(true);\n        assertThat(fossologyScriptsHandler.deployScripts(), is(RequestStatus.SUCCESS));\n\n        verify(fossologyUploader, times(5)).copyToFossology(anyString(), any(InputStream.class), anyBoolean());\n\n    }", "signature": "void testDeployScriptsCanOpenAllResourceFiles()", "full_signature": "@Test public void testDeployScriptsCanOpenAllResourceFiles()", "class_method_signature": "FossologyScriptsHandlerTest.testDeployScriptsCanOpenAllResourceFiles()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "copyToFossology", "anyString", "any", "anyBoolean", "assertThat", "deployScripts", "is", "copyToFossology", "verify", "times", "anyString", "any", "anyBoolean"]}, "focal_class": {"identifier": "FossologyScriptsHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = getLogger(FossologyScriptsHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = getLogger(FossologyScriptsHandler.class)", "var_name": "log"}, {"original_string": "private static final String SCRIPTS_FOLDER = \"/scripts/\";", "modifier": "private static final", "type": "String", "declarator": "SCRIPTS_FOLDER = \"/scripts/\"", "var_name": "SCRIPTS_FOLDER"}, {"original_string": "private static final List<String> SCRIPT_FILE_NAMES = ImmutableList.<String>builder()\n            .add(\"duplicateUpload\")\n            .add(\"getStatusOfUpload\")\n            .add(\"folderManager\")\n            .add(\"uploadFromSW360\")\n            .add(\"utilsSW360\")\n            .build();", "modifier": "private static final", "type": "List<String>", "declarator": "SCRIPT_FILE_NAMES = ImmutableList.<String>builder()\n            .add(\"duplicateUpload\")\n            .add(\"getStatusOfUpload\")\n            .add(\"folderManager\")\n            .add(\"uploadFromSW360\")\n            .add(\"utilsSW360\")\n            .build()", "var_name": "SCRIPT_FILE_NAMES"}, {"original_string": "private final FossologyUploader fossologyUploader;", "modifier": "private final", "type": "FossologyUploader", "declarator": "fossologyUploader", "var_name": "fossologyUploader"}], "methods": [{"identifier": "FossologyScriptsHandler", "parameters": "(FossologyUploader fossologyUploader)", "modifiers": "@Autowired public", "return": "", "signature": " FossologyScriptsHandler(FossologyUploader fossologyUploader)", "full_signature": "@Autowired public  FossologyScriptsHandler(FossologyUploader fossologyUploader)", "class_method_signature": "FossologyScriptsHandler.FossologyScriptsHandler(FossologyUploader fossologyUploader)", "testcase": false, "constructor": true}, {"identifier": "deployScripts", "parameters": "()", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus deployScripts()", "full_signature": "public RequestStatus deployScripts()", "class_method_signature": "FossologyScriptsHandler.deployScripts()", "testcase": false, "constructor": false}], "file": "backend/src/src-fossology/src/main/java/org/eclipse/sw360/fossology/handler/FossologyScriptsHandler.java"}, "focal_method": {"identifier": "deployScripts", "parameters": "()", "modifiers": "public", "return": "RequestStatus", "body": "public RequestStatus deployScripts() throws SW360Exception {\n        RequestStatus status = RequestStatus.SUCCESS;\n\n        for (String scriptFileName : SCRIPT_FILE_NAMES) {\n            final InputStream inputStream = FossologyScriptsHandler.class.getResourceAsStream(SCRIPTS_FOLDER + scriptFileName);\n            if (inputStream == null) {\n                log.error(\"cannot get content of script \" + scriptFileName);\n                status = RequestStatus.FAILURE;\n                continue;\n            }\n            try {\n                if (!fossologyUploader.copyToFossology(scriptFileName, inputStream, true)) {\n                    status = RequestStatus.FAILURE;\n                }\n            } finally {\n                closeQuietly(inputStream, log);\n            }\n        }\n\n        return status;\n    }", "signature": "RequestStatus deployScripts()", "full_signature": "public RequestStatus deployScripts()", "class_method_signature": "FossologyScriptsHandler.deployScripts()", "testcase": false, "constructor": false, "invocations": ["getResourceAsStream", "error", "copyToFossology", "closeQuietly"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}