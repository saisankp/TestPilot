{"test_class": {"identifier": "StringPartTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String name = \"stringpart\";", "modifier": "", "type": "String", "declarator": "name = \"stringpart\"", "var_name": "name"}, {"original_string": "String content = \"content is here.\";", "modifier": "", "type": "String", "declarator": "content = \"content is here.\"", "var_name": "content"}, {"original_string": "String charset = \"utf-8\";", "modifier": "", "type": "String", "declarator": "charset = \"utf-8\"", "var_name": "charset"}], "file": "volleyer/src/test/java/com/navercorp/volleyextensions/volleyer/multipart/StringPartTest.java"}, "test_case": {"identifier": "shouldThrowIOExceptionWhenInvalidCharset", "parameters": "()", "modifiers": "@Test(expected = IOException.class) public", "return": "void", "body": "@Test(expected = IOException.class)\n\tpublic void shouldThrowIOExceptionWhenInvalidCharset() throws IOException {\n\t\t// Given\n\t\tString invalidCharset = \"@MSADG\";\n\t\tPart part = new StringPart(name, content, invalidCharset, ContentType.CONTENT_TYPE_TEXT_PLAIN);\n\t\t// When\n\t\tpart.getContent();\n\t}", "signature": "void shouldThrowIOExceptionWhenInvalidCharset()", "full_signature": "@Test(expected = IOException.class) public void shouldThrowIOExceptionWhenInvalidCharset()", "class_method_signature": "StringPartTest.shouldThrowIOExceptionWhenInvalidCharset()", "testcase": true, "constructor": false, "invocations": ["getContent"]}, "focal_class": {"identifier": "StringPart", "superclass": "extends AbstractPart", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_CHARSET = \"utf-8\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_CHARSET = \"utf-8\"", "var_name": "DEFAULT_CHARSET"}, {"original_string": "private static final ContentType PLAIN_TEXT = ContentType.CONTENT_TYPE_TEXT_PLAIN;", "modifier": "private static final", "type": "ContentType", "declarator": "PLAIN_TEXT = ContentType.CONTENT_TYPE_TEXT_PLAIN", "var_name": "PLAIN_TEXT"}, {"original_string": "private final String content;", "modifier": "private final", "type": "String", "declarator": "content", "var_name": "content"}, {"original_string": "private final String charset;", "modifier": "private final", "type": "String", "declarator": "charset", "var_name": "charset"}, {"original_string": "private ContentType contentType;", "modifier": "private", "type": "ContentType", "declarator": "contentType", "var_name": "contentType"}], "methods": [{"identifier": "StringPart", "parameters": "(String name, String content)", "modifiers": "public", "return": "", "signature": " StringPart(String name, String content)", "full_signature": "public  StringPart(String name, String content)", "class_method_signature": "StringPart.StringPart(String name, String content)", "testcase": false, "constructor": true}, {"identifier": "StringPart", "parameters": "(String name, String content, String charset)", "modifiers": "public", "return": "", "signature": " StringPart(String name, String content, String charset)", "full_signature": "public  StringPart(String name, String content, String charset)", "class_method_signature": "StringPart.StringPart(String name, String content, String charset)", "testcase": false, "constructor": true}, {"identifier": "StringPart", "parameters": "(String name, String content, String charset, ContentType contentType)", "modifiers": "public", "return": "", "signature": " StringPart(String name, String content, String charset, ContentType contentType)", "full_signature": "public  StringPart(String name, String content, String charset, ContentType contentType)", "class_method_signature": "StringPart.StringPart(String name, String content, String charset, ContentType contentType)", "testcase": false, "constructor": true}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override public", "return": "ContentType", "signature": "ContentType getContentType()", "full_signature": "@Override public ContentType getContentType()", "class_method_signature": "StringPart.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getExtraHeader", "parameters": "()", "modifiers": "@Override protected", "return": "byte[]", "signature": "byte[] getExtraHeader()", "full_signature": "@Override protected byte[] getExtraHeader()", "class_method_signature": "StringPart.getExtraHeader()", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getContent()", "full_signature": "@Override public InputStream getContent()", "class_method_signature": "StringPart.getContent()", "testcase": false, "constructor": false}, {"identifier": "getBytesFromContent", "parameters": "()", "modifiers": "private", "return": "byte[]", "signature": "byte[] getBytesFromContent()", "full_signature": "private byte[] getBytesFromContent()", "class_method_signature": "StringPart.getBytesFromContent()", "testcase": false, "constructor": false}], "file": "volleyer/src/main/java/com/navercorp/volleyextensions/volleyer/multipart/StringPart.java"}, "focal_method": {"identifier": "getContent", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n\tpublic InputStream getContent() throws IOException {\n\t\tbyte[] bytes = getBytesFromContent();\n\t\tif (bytes == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tInputStream is = new ByteArrayInputStream(bytes);\n\t\treturn is;\n\t}", "signature": "InputStream getContent()", "full_signature": "@Override public InputStream getContent()", "class_method_signature": "StringPart.getContent()", "testcase": false, "constructor": false, "invocations": ["getBytesFromContent"]}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}