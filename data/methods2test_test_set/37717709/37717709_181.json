{"test_class": {"identifier": "TestAbstractFormItem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VoiceXmlInterpreterContext context;", "modifier": "private", "type": "VoiceXmlInterpreterContext", "declarator": "context", "var_name": "context"}, {"original_string": "private VoiceXmlDocument document;", "modifier": "private", "type": "VoiceXmlDocument", "declarator": "document", "var_name": "document"}, {"original_string": "private Field field;", "modifier": "private", "type": "Field", "declarator": "field", "var_name": "field"}, {"original_string": "private AbstractFormItem item;", "modifier": "private", "type": "AbstractFormItem", "declarator": "item", "var_name": "item"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/formitem/TestAbstractFormItem.java"}, "test_case": {"identifier": "testGetConditionNoCondition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConditionNoCondition() throws JVoiceXMLEvent {\n        Assert.assertTrue(item.evaluateCondition());\n    }", "signature": "void testGetConditionNoCondition()", "full_signature": "@Test public void testGetConditionNoCondition()", "class_method_signature": "TestAbstractFormItem.testGetConditionNoCondition()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "evaluateCondition"]}, "focal_class": {"identifier": "AbstractFormItem", "superclass": "", "interfaces": "implements FormItem, FormItemLocalExecutableTagContainer", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(AbstractFormItem.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(AbstractFormItem.class)", "var_name": "LOGGER"}, {"original_string": "private final VoiceXmlInterpreterContext context;", "modifier": "private final", "type": "VoiceXmlInterpreterContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final VoiceXmlNode node;", "modifier": "private final", "type": "VoiceXmlNode", "declarator": "node", "var_name": "node"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "AbstractFormItem", "parameters": "()", "modifiers": "", "return": "", "signature": " AbstractFormItem()", "full_signature": "  AbstractFormItem()", "class_method_signature": "AbstractFormItem.AbstractFormItem()", "testcase": false, "constructor": true}, {"identifier": "AbstractFormItem", "parameters": "(final VoiceXmlInterpreterContext ctx,\n            final VoiceXmlNode voiceNode)", "modifiers": "", "return": "", "signature": " AbstractFormItem(final VoiceXmlInterpreterContext ctx,\n            final VoiceXmlNode voiceNode)", "full_signature": "  AbstractFormItem(final VoiceXmlInterpreterContext ctx,\n            final VoiceXmlNode voiceNode)", "class_method_signature": "AbstractFormItem.AbstractFormItem(final VoiceXmlInterpreterContext ctx,\n            final VoiceXmlNode voiceNode)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(\n            final VoiceXmlInterpreterContext ctx, final VoiceXmlNode voiceNode)", "modifiers": "public abstract", "return": "AbstractFormItem", "signature": "AbstractFormItem newInstance(\n            final VoiceXmlInterpreterContext ctx, final VoiceXmlNode voiceNode)", "full_signature": "public abstract AbstractFormItem newInstance(\n            final VoiceXmlInterpreterContext ctx, final VoiceXmlNode voiceNode)", "class_method_signature": "AbstractFormItem.newInstance(\n            final VoiceXmlInterpreterContext ctx, final VoiceXmlNode voiceNode)", "testcase": false, "constructor": false}, {"identifier": "getFormItemVariable", "parameters": "()", "modifiers": "@Override public final", "return": "Object", "signature": "Object getFormItemVariable()", "full_signature": "@Override public final Object getFormItemVariable()", "class_method_signature": "AbstractFormItem.getFormItemVariable()", "testcase": false, "constructor": false}, {"identifier": "setFormItemVariable", "parameters": "(final Object value)", "modifiers": "@Override public", "return": "int", "signature": "int setFormItemVariable(final Object value)", "full_signature": "@Override public int setFormItemVariable(final Object value)", "class_method_signature": "AbstractFormItem.setFormItemVariable(final Object value)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getName()", "full_signature": "@Override public final String getName()", "class_method_signature": "AbstractFormItem.getName()", "testcase": false, "constructor": false}, {"identifier": "evaluateExpression", "parameters": "(final DataModel model)", "modifiers": "@Override public final", "return": "Object", "signature": "Object evaluateExpression(final DataModel model)", "full_signature": "@Override public final Object evaluateExpression(final DataModel model)", "class_method_signature": "AbstractFormItem.evaluateExpression(final DataModel model)", "testcase": false, "constructor": false}, {"identifier": "evaluateCondition", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean evaluateCondition()", "full_signature": "@Override public boolean evaluateCondition()", "class_method_signature": "AbstractFormItem.evaluateCondition()", "testcase": false, "constructor": false}, {"identifier": "isSelectable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSelectable()", "full_signature": "@Override public boolean isSelectable()", "class_method_signature": "AbstractFormItem.isSelectable()", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "()", "modifiers": "@Override public final", "return": "VoiceXmlNode", "signature": "VoiceXmlNode getNode()", "full_signature": "@Override public final VoiceXmlNode getNode()", "class_method_signature": "AbstractFormItem.getNode()", "testcase": false, "constructor": false}, {"identifier": "getNodeTagName", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getNodeTagName()", "full_signature": "@Override public final String getNodeTagName()", "class_method_signature": "AbstractFormItem.getNodeTagName()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "protected final", "return": "VoiceXmlInterpreterContext", "signature": "VoiceXmlInterpreterContext getContext()", "full_signature": "protected final VoiceXmlInterpreterContext getContext()", "class_method_signature": "AbstractFormItem.getContext()", "testcase": false, "constructor": false}, {"identifier": "getCatchElements", "parameters": "()", "modifiers": "public", "return": "Collection<AbstractCatchElement>", "signature": "Collection<AbstractCatchElement> getCatchElements()", "full_signature": "public Collection<AbstractCatchElement> getCatchElements()", "class_method_signature": "AbstractFormItem.getCatchElements()", "testcase": false, "constructor": false}, {"identifier": "getLocalExecutableTags", "parameters": "()", "modifiers": "public", "return": "Collection<VoiceXmlNode>", "signature": "Collection<VoiceXmlNode> getLocalExecutableTags()", "full_signature": "public Collection<VoiceXmlNode> getLocalExecutableTags()", "class_method_signature": "AbstractFormItem.getLocalExecutableTags()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/formitem/AbstractFormItem.java"}, "focal_method": {"identifier": "evaluateCondition", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean evaluateCondition() throws SemanticError {\n        final String condAttribute = node.getAttribute(\"cond\");\n        if (condAttribute == null) {\n            return true;\n        }\n        final String unescapedCond = StringEscapeUtils\n                .unescapeXml(condAttribute);\n        final DataModel model = context.getDataModel();\n        return model.evaluateExpression(unescapedCond, Boolean.class);\n    }", "signature": "boolean evaluateCondition()", "full_signature": "@Override public boolean evaluateCondition()", "class_method_signature": "AbstractFormItem.evaluateCondition()", "testcase": false, "constructor": false, "invocations": ["getAttribute", "unescapeXml", "getDataModel", "evaluateExpression"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}