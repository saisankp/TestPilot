{"test_class": {"identifier": "TimeWindowsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String anyName = \"window\";", "modifier": "private static", "type": "String", "declarator": "anyName = \"window\"", "var_name": "anyName"}, {"original_string": "private static long anySize = 123L;", "modifier": "private static", "type": "long", "declarator": "anySize = 123L", "var_name": "anySize"}], "file": "streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowsTest.java"}, "test_case": {"identifier": "windowSizeMustNotBeNegative", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void windowSizeMustNotBeNegative() {\n        TimeWindows.of(anyName, -1);\n    }", "signature": "void windowSizeMustNotBeNegative()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void windowSizeMustNotBeNegative()", "class_method_signature": "TimeWindowsTest.windowSizeMustNotBeNegative()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "TimeWindows", "superclass": "extends Windows<TimeWindow>", "interfaces": "", "fields": [{"original_string": "public final long size;", "modifier": "public final", "type": "long", "declarator": "size", "var_name": "size"}, {"original_string": "public final long advance;", "modifier": "public final", "type": "long", "declarator": "advance", "var_name": "advance"}], "methods": [{"identifier": "TimeWindows", "parameters": "(String name, long size, long advance)", "modifiers": "private", "return": "", "signature": " TimeWindows(String name, long size, long advance)", "full_signature": "private  TimeWindows(String name, long size, long advance)", "class_method_signature": "TimeWindows.TimeWindows(String name, long size, long advance)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(String name, long size)", "modifiers": "public static", "return": "TimeWindows", "signature": "TimeWindows of(String name, long size)", "full_signature": "public static TimeWindows of(String name, long size)", "class_method_signature": "TimeWindows.of(String name, long size)", "testcase": false, "constructor": false}, {"identifier": "advanceBy", "parameters": "(long interval)", "modifiers": "public", "return": "TimeWindows", "signature": "TimeWindows advanceBy(long interval)", "full_signature": "public TimeWindows advanceBy(long interval)", "class_method_signature": "TimeWindows.advanceBy(long interval)", "testcase": false, "constructor": false}, {"identifier": "windowsFor", "parameters": "(long timestamp)", "modifiers": "@Override public", "return": "Map<Long, TimeWindow>", "signature": "Map<Long, TimeWindow> windowsFor(long timestamp)", "full_signature": "@Override public Map<Long, TimeWindow> windowsFor(long timestamp)", "class_method_signature": "TimeWindows.windowsFor(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public final boolean equals(Object o)", "class_method_signature": "TimeWindows.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TimeWindows.hashCode()", "testcase": false, "constructor": false}], "file": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindows.java"}, "focal_method": {"identifier": "of", "parameters": "(String name, long size)", "modifiers": "public static", "return": "TimeWindows", "body": "public static TimeWindows of(String name, long size) {\n        return new TimeWindows(name, size, size);\n    }", "signature": "TimeWindows of(String name, long size)", "full_signature": "public static TimeWindows of(String name, long size)", "class_method_signature": "TimeWindows.of(String name, long size)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}