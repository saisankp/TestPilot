{"test_class": {"identifier": "TracerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_FORMAT = \"%.10f\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FORMAT = \"%.10f\"", "var_name": "DEFAULT_FORMAT"}, {"original_string": "private static final double DEFAULT_DELTA = 0.000000001d;", "modifier": "private static final", "type": "double", "declarator": "DEFAULT_DELTA = 0.000000001d", "var_name": "DEFAULT_DELTA"}, {"original_string": "private static final Tracer.ColorMapper COLOR_MAPPER = new Tracer.ColorMapper() {\n        /** {@inheritDoc} */\n        @Override public Color apply(Double d) {\n            if (d <= 0.33)\n                return Color.RED;\n            else if (d <= 0.66)\n                return Color.GREEN;\n            else\n                return Color.BLUE;\n        }\n    };", "modifier": "private static final", "type": "Tracer.ColorMapper", "declarator": "COLOR_MAPPER = new Tracer.ColorMapper() {\n        /** {@inheritDoc} */\n        @Override public Color apply(Double d) {\n            if (d <= 0.33)\n                return Color.RED;\n            else if (d <= 0.66)\n                return Color.GREEN;\n            else\n                return Color.BLUE;\n        }\n    }", "var_name": "COLOR_MAPPER"}], "file": "modules/ml/src/test/java/org/apache/ignite/ml/math/TracerTest.java"}, "test_case": {"identifier": "testHtmlVectorTracerWithAsciiFallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHtmlVectorTracerWithAsciiFallback() throws IOException {\n        Vector vec1 = makeRandomVector(1000);\n\n        // Default color mapping.\n        Tracer.showHtml(vec1, true);\n\n        // Custom color mapping.\n        Tracer.showHtml(vec1, COLOR_MAPPER, true);\n\n        // Default color mapping with sorted vector.\n        Tracer.showHtml(vec1.copy().sort(), true);\n    }", "signature": "void testHtmlVectorTracerWithAsciiFallback()", "full_signature": "@Test public void testHtmlVectorTracerWithAsciiFallback()", "class_method_signature": "TracerTest.testHtmlVectorTracerWithAsciiFallback()", "testcase": true, "constructor": false, "invocations": ["makeRandomVector", "showHtml", "showHtml", "showHtml", "sort", "copy"]}, "focal_class": {"identifier": "Tracer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Locale LOCALE = Locale.US;", "modifier": "private static final", "type": "Locale", "declarator": "LOCALE = Locale.US", "var_name": "LOCALE"}], "methods": [{"identifier": "defaultColorMapper", "parameters": "(double min, double max)", "modifiers": "private static", "return": "ColorMapper", "signature": "ColorMapper defaultColorMapper(double min, double max)", "full_signature": "private static ColorMapper defaultColorMapper(double min, double max)", "class_method_signature": "Tracer.defaultColorMapper(double min, double max)", "testcase": false, "constructor": false}, {"identifier": "mkVectorColorMapper", "parameters": "(Vector vec)", "modifiers": "private static", "return": "ColorMapper", "signature": "ColorMapper mkVectorColorMapper(Vector vec)", "full_signature": "private static ColorMapper mkVectorColorMapper(Vector vec)", "class_method_signature": "Tracer.mkVectorColorMapper(Vector vec)", "testcase": false, "constructor": false}, {"identifier": "mkMatrixColorMapper", "parameters": "(Matrix mtx)", "modifiers": "private static", "return": "ColorMapper", "signature": "ColorMapper mkMatrixColorMapper(Matrix mtx)", "full_signature": "private static ColorMapper mkMatrixColorMapper(Matrix mtx)", "class_method_signature": "Tracer.mkMatrixColorMapper(Matrix mtx)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Vector vec, IgniteLogger log, String fmt)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Vector vec, IgniteLogger log, String fmt)", "full_signature": "public static void showAscii(Vector vec, IgniteLogger log, String fmt)", "class_method_signature": "Tracer.showAscii(Vector vec, IgniteLogger log, String fmt)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Vector vec, IgniteLogger log)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Vector vec, IgniteLogger log)", "full_signature": "public static void showAscii(Vector vec, IgniteLogger log)", "class_method_signature": "Tracer.showAscii(Vector vec, IgniteLogger log)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Vector vec, String fmt)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Vector vec, String fmt)", "full_signature": "public static void showAscii(Vector vec, String fmt)", "class_method_signature": "Tracer.showAscii(Vector vec, String fmt)", "testcase": false, "constructor": false}, {"identifier": "asAscii", "parameters": "(Vector vec, String fmt, boolean showMeta)", "modifiers": "public static", "return": "String", "signature": "String asAscii(Vector vec, String fmt, boolean showMeta)", "full_signature": "public static String asAscii(Vector vec, String fmt, boolean showMeta)", "class_method_signature": "Tracer.asAscii(Vector vec, String fmt, boolean showMeta)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Matrix mtx)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Matrix mtx)", "full_signature": "public static void showAscii(Matrix mtx)", "class_method_signature": "Tracer.showAscii(Matrix mtx)", "testcase": false, "constructor": false}, {"identifier": "rowStr", "parameters": "(Matrix mtx, int row, String fmt)", "modifiers": "private static", "return": "String", "signature": "String rowStr(Matrix mtx, int row, String fmt)", "full_signature": "private static String rowStr(Matrix mtx, int row, String fmt)", "class_method_signature": "Tracer.rowStr(Matrix mtx, int row, String fmt)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Matrix mtx, String fmt)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Matrix mtx, String fmt)", "full_signature": "public static void showAscii(Matrix mtx, String fmt)", "class_method_signature": "Tracer.showAscii(Matrix mtx, String fmt)", "testcase": false, "constructor": false}, {"identifier": "asAscii", "parameters": "(Matrix mtx, String fmt)", "modifiers": "public static", "return": "String", "signature": "String asAscii(Matrix mtx, String fmt)", "full_signature": "public static String asAscii(Matrix mtx, String fmt)", "class_method_signature": "Tracer.asAscii(Matrix mtx, String fmt)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Matrix mtx, IgniteLogger log, String fmt)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Matrix mtx, IgniteLogger log, String fmt)", "full_signature": "public static void showAscii(Matrix mtx, IgniteLogger log, String fmt)", "class_method_signature": "Tracer.showAscii(Matrix mtx, IgniteLogger log, String fmt)", "testcase": false, "constructor": false}, {"identifier": "showAscii", "parameters": "(Vector vec)", "modifiers": "public static", "return": "void", "signature": "void showAscii(Vector vec)", "full_signature": "public static void showAscii(Vector vec)", "class_method_signature": "Tracer.showAscii(Vector vec)", "testcase": false, "constructor": false}, {"identifier": "saveAsCsv", "parameters": "(Vector vec, String fmt, String filePath)", "modifiers": "public static", "return": "void", "signature": "void saveAsCsv(Vector vec, String fmt, String filePath)", "full_signature": "public static void saveAsCsv(Vector vec, String fmt, String filePath)", "class_method_signature": "Tracer.saveAsCsv(Vector vec, String fmt, String filePath)", "testcase": false, "constructor": false}, {"identifier": "saveAsCsv", "parameters": "(Matrix mtx, String fmt, String filePath)", "modifiers": "public static", "return": "void", "signature": "void saveAsCsv(Matrix mtx, String fmt, String filePath)", "full_signature": "public static void saveAsCsv(Matrix mtx, String fmt, String filePath)", "class_method_signature": "Tracer.saveAsCsv(Matrix mtx, String fmt, String filePath)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Matrix mtx)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Matrix mtx)", "full_signature": "public static void showHtml(Matrix mtx)", "class_method_signature": "Tracer.showHtml(Matrix mtx)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Matrix mtx, boolean useAsciiFallback)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Matrix mtx, boolean useAsciiFallback)", "full_signature": "public static void showHtml(Matrix mtx, boolean useAsciiFallback)", "class_method_signature": "Tracer.showHtml(Matrix mtx, boolean useAsciiFallback)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Matrix mtx, ColorMapper cm)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Matrix mtx, ColorMapper cm)", "full_signature": "public static void showHtml(Matrix mtx, ColorMapper cm)", "class_method_signature": "Tracer.showHtml(Matrix mtx, ColorMapper cm)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Matrix mtx, ColorMapper cm, boolean useAsciiFallback)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Matrix mtx, ColorMapper cm, boolean useAsciiFallback)", "full_signature": "public static void showHtml(Matrix mtx, ColorMapper cm, boolean useAsciiFallback)", "class_method_signature": "Tracer.showHtml(Matrix mtx, ColorMapper cm, boolean useAsciiFallback)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Vector vec)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Vector vec)", "full_signature": "public static void showHtml(Vector vec)", "class_method_signature": "Tracer.showHtml(Vector vec)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Vector vec, boolean useAsciiFallback)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Vector vec, boolean useAsciiFallback)", "full_signature": "public static void showHtml(Vector vec, boolean useAsciiFallback)", "class_method_signature": "Tracer.showHtml(Vector vec, boolean useAsciiFallback)", "testcase": false, "constructor": false}, {"identifier": "showRegressionDatasetInHtml", "parameters": "(String name, DataStreamGenerator generator, int limit,\n        int xIdx)", "modifiers": "public static", "return": "void", "signature": "void showRegressionDatasetInHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx)", "full_signature": "public static void showRegressionDatasetInHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx)", "class_method_signature": "Tracer.showRegressionDatasetInHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx)", "testcase": false, "constructor": false}, {"identifier": "showRegressionDatasetInHtml", "parameters": "(DataStreamGenerator generator, int limit,\n        int xIdx)", "modifiers": "public static", "return": "void", "signature": "void showRegressionDatasetInHtml(DataStreamGenerator generator, int limit,\n        int xIdx)", "full_signature": "public static void showRegressionDatasetInHtml(DataStreamGenerator generator, int limit,\n        int xIdx)", "class_method_signature": "Tracer.showRegressionDatasetInHtml(DataStreamGenerator generator, int limit,\n        int xIdx)", "testcase": false, "constructor": false}, {"identifier": "showClassificationDatasetHtml", "parameters": "(DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "modifiers": "public static", "return": "void", "signature": "void showClassificationDatasetHtml(DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "full_signature": "public static void showClassificationDatasetHtml(DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "class_method_signature": "Tracer.showClassificationDatasetHtml(DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "testcase": false, "constructor": false}, {"identifier": "showClassificationDatasetHtml", "parameters": "(String name, DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "modifiers": "public static", "return": "void", "signature": "void showClassificationDatasetHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "full_signature": "public static void showClassificationDatasetHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "class_method_signature": "Tracer.showClassificationDatasetHtml(String name, DataStreamGenerator generator, int limit,\n        int xIdx, int yIdx, boolean isLabeled)", "testcase": false, "constructor": false}, {"identifier": "showVectorsHtml", "parameters": "(String name, List<LabeledVector<Double>> values,\n        int xIndex, Function<LabeledVector<Double>, Double> yGetter,\n        Function<LabeledVector<Double>, Color> colorGetter)", "modifiers": "private static", "return": "void", "signature": "void showVectorsHtml(String name, List<LabeledVector<Double>> values,\n        int xIndex, Function<LabeledVector<Double>, Double> yGetter,\n        Function<LabeledVector<Double>, Color> colorGetter)", "full_signature": "private static void showVectorsHtml(String name, List<LabeledVector<Double>> values,\n        int xIndex, Function<LabeledVector<Double>, Double> yGetter,\n        Function<LabeledVector<Double>, Color> colorGetter)", "class_method_signature": "Tracer.showVectorsHtml(String name, List<LabeledVector<Double>> values,\n        int xIndex, Function<LabeledVector<Double>, Double> yGetter,\n        Function<LabeledVector<Double>, Color> colorGetter)", "testcase": false, "constructor": false}, {"identifier": "dataColorJson", "parameters": "(double x, double y, Color clr)", "modifiers": "private static", "return": "String", "signature": "String dataColorJson(double x, double y, Color clr)", "full_signature": "private static String dataColorJson(double x, double y, Color clr)", "class_method_signature": "Tracer.dataColorJson(double x, double y, Color clr)", "testcase": false, "constructor": false}, {"identifier": "dataColorJson", "parameters": "(double d, Color clr)", "modifiers": "private static", "return": "String", "signature": "String dataColorJson(double d, Color clr)", "full_signature": "private static String dataColorJson(double d, Color clr)", "class_method_signature": "Tracer.dataColorJson(double d, Color clr)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Vector vec, ColorMapper cm)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Vector vec, ColorMapper cm)", "full_signature": "public static void showHtml(Vector vec, ColorMapper cm)", "class_method_signature": "Tracer.showHtml(Vector vec, ColorMapper cm)", "testcase": false, "constructor": false}, {"identifier": "showHtml", "parameters": "(Vector vec, ColorMapper cm, boolean useAsciiFallback)", "modifiers": "public static", "return": "void", "signature": "void showHtml(Vector vec, ColorMapper cm, boolean useAsciiFallback)", "full_signature": "public static void showHtml(Vector vec, ColorMapper cm, boolean useAsciiFallback)", "class_method_signature": "Tracer.showHtml(Vector vec, ColorMapper cm, boolean useAsciiFallback)", "testcase": false, "constructor": false}, {"identifier": "isBrowseSupported", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean isBrowseSupported()", "full_signature": "private static boolean isBrowseSupported()", "class_method_signature": "Tracer.isBrowseSupported()", "testcase": false, "constructor": false}, {"identifier": "fileToString", "parameters": "(String fileName)", "modifiers": "private static", "return": "String", "signature": "String fileToString(String fileName)", "full_signature": "private static String fileToString(String fileName)", "class_method_signature": "Tracer.fileToString(String fileName)", "testcase": false, "constructor": false}, {"identifier": "openHtmlFile", "parameters": "(String html)", "modifiers": "private static", "return": "void", "signature": "void openHtmlFile(String html)", "full_signature": "private static void openHtmlFile(String html)", "class_method_signature": "Tracer.openHtmlFile(String html)", "testcase": false, "constructor": false}, {"identifier": "mkString", "parameters": "(Vector vec, String fmt)", "modifiers": "private static", "return": "String", "signature": "String mkString(Vector vec, String fmt)", "full_signature": "private static String mkString(Vector vec, String fmt)", "class_method_signature": "Tracer.mkString(Vector vec, String fmt)", "testcase": false, "constructor": false}, {"identifier": "mkJsArrayString", "parameters": "(Vector vec, ColorMapper cm)", "modifiers": "private static", "return": "String", "signature": "String mkJsArrayString(Vector vec, ColorMapper cm)", "full_signature": "private static String mkJsArrayString(Vector vec, ColorMapper cm)", "class_method_signature": "Tracer.mkJsArrayString(Vector vec, ColorMapper cm)", "testcase": false, "constructor": false}, {"identifier": "mkJsArrayString", "parameters": "(Matrix mtx, ColorMapper cm)", "modifiers": "private static", "return": "String", "signature": "String mkJsArrayString(Matrix mtx, ColorMapper cm)", "full_signature": "private static String mkJsArrayString(Matrix mtx, ColorMapper cm)", "class_method_signature": "Tracer.mkJsArrayString(Matrix mtx, ColorMapper cm)", "testcase": false, "constructor": false}, {"identifier": "mkString", "parameters": "(Matrix mtx, String fmt)", "modifiers": "private static", "return": "String", "signature": "String mkString(Matrix mtx, String fmt)", "full_signature": "private static String mkString(Matrix mtx, String fmt)", "class_method_signature": "Tracer.mkString(Matrix mtx, String fmt)", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/math/Tracer.java"}, "focal_method": {"identifier": "showHtml", "parameters": "(Matrix mtx)", "modifiers": "public static", "return": "void", "body": "public static void showHtml(Matrix mtx) throws IOException {\n        showHtml(mtx, false);\n    }", "signature": "void showHtml(Matrix mtx)", "full_signature": "public static void showHtml(Matrix mtx)", "class_method_signature": "Tracer.showHtml(Matrix mtx)", "testcase": false, "constructor": false, "invocations": ["showHtml"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}