{"test_class": {"identifier": "EncryptorProviderServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final EncryptorProviderService service = new EncryptorProviderService();", "modifier": "private final", "type": "EncryptorProviderService", "declarator": "service = new EncryptorProviderService()", "var_name": "service"}], "file": "services/src/test/java/com/greensopinion/finance/services/encryption/EncryptorProviderServiceTest.java"}, "test_case": {"identifier": "getEncryptorNotInitialized", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getEncryptorNotInitialized() {\n\t\tthrown.expect(NullPointerException.class);\n\t\tthrown.expectMessage(\"Encryptor is not initialized\");\n\t\tservice.getEncryptor();\n\t}", "signature": "void getEncryptorNotInitialized()", "full_signature": "@Test public void getEncryptorNotInitialized()", "class_method_signature": "EncryptorProviderServiceTest.getEncryptorNotInitialized()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "getEncryptor"]}, "focal_class": {"identifier": "EncryptorProviderService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AtomicReference<Encryptor> encryptorReference = new AtomicReference<>();", "modifier": "private final", "type": "AtomicReference<Encryptor>", "declarator": "encryptorReference = new AtomicReference<>()", "var_name": "encryptorReference"}], "methods": [{"identifier": "isInitialized", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public boolean isInitialized()", "class_method_signature": "EncryptorProviderService.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "getEncryptor", "parameters": "()", "modifiers": "public", "return": "Encryptor", "signature": "Encryptor getEncryptor()", "full_signature": "public Encryptor getEncryptor()", "class_method_signature": "EncryptorProviderService.getEncryptor()", "testcase": false, "constructor": false}, {"identifier": "setEncryptor", "parameters": "(Encryptor encryptor)", "modifiers": "public", "return": "void", "signature": "void setEncryptor(Encryptor encryptor)", "full_signature": "public void setEncryptor(Encryptor encryptor)", "class_method_signature": "EncryptorProviderService.setEncryptor(Encryptor encryptor)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/encryption/EncryptorProviderService.java"}, "focal_method": {"identifier": "getEncryptor", "parameters": "()", "modifiers": "public", "return": "Encryptor", "body": "public Encryptor getEncryptor() {\n\t\treturn checkNotNull(encryptorReference.get(), \"Encryptor is not initialized\");\n\t}", "signature": "Encryptor getEncryptor()", "full_signature": "public Encryptor getEncryptor()", "class_method_signature": "EncryptorProviderService.getEncryptor()", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "get"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}