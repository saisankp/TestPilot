{"test_class": {"identifier": "CaseServiceImplTest", "superclass": "extends AbstractCaseServicesBaseTest", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CaseServiceImplTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CaseServiceImplTest.class)", "var_name": "logger"}, {"original_string": "private static final String NEW_RESTRICTED_VALUE = \"new restricted value\";", "modifier": "private static final", "type": "String", "declarator": "NEW_RESTRICTED_VALUE = \"new restricted value\"", "var_name": "NEW_RESTRICTED_VALUE"}, {"original_string": "private static final List<String> RESTRICTED_TESTS = Arrays.asList(\n            \"testCaseWithRestrictedCaseFileItem\", \n            \"testCaseWithRequiredRestrictedCaseFileItem\");", "modifier": "private static final", "type": "List<String>", "declarator": "RESTRICTED_TESTS = Arrays.asList(\n            \"testCaseWithRestrictedCaseFileItem\", \n            \"testCaseWithRequiredRestrictedCaseFileItem\")", "var_name": "RESTRICTED_TESTS"}, {"original_string": "private static final List<String> VIOLATING_RESTRICTED_TESTS = Arrays.asList(\n            \"testCaseWithViolatingRestrictedCaseFileItem\", \n            \"testCaseReopenWithViolatingRestrictedCaseFileItem\",\n            \"testAddDataCaseWithViolatingRestrictedCaseFileItem\");", "modifier": "private static final", "type": "List<String>", "declarator": "VIOLATING_RESTRICTED_TESTS = Arrays.asList(\n            \"testCaseWithViolatingRestrictedCaseFileItem\", \n            \"testCaseReopenWithViolatingRestrictedCaseFileItem\",\n            \"testAddDataCaseWithViolatingRestrictedCaseFileItem\")", "var_name": "VIOLATING_RESTRICTED_TESTS"}, {"original_string": "@Rule\n    public TestName name = new TestName();", "modifier": "@Rule\n    public", "type": "TestName", "declarator": "name = new TestName()", "var_name": "name"}], "file": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java"}, "test_case": {"identifier": "testGetCaseFileInstanceForNotExistingCase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCaseFileInstanceForNotExistingCase() {\n        assertThatExceptionOfType(CaseNotFoundException.class)\n                .isThrownBy(() -> caseService.getCaseFileInstance(\"nonexisting\"));\n    }", "signature": "void testGetCaseFileInstanceForNotExistingCase()", "full_signature": "@Test public void testGetCaseFileInstanceForNotExistingCase()", "class_method_signature": "CaseServiceImplTest.testGetCaseFileInstanceForNotExistingCase()", "testcase": true, "constructor": false, "invocations": ["isThrownBy", "assertThatExceptionOfType", "getCaseFileInstance"]}, "focal_class": {"identifier": "CaseServiceImpl", "superclass": "", "interfaces": "implements CaseService", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CaseServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CaseServiceImpl.class)", "var_name": "logger"}, {"original_string": "private CorrelationKeyFactory correlationKeyFactory = KieInternalServices.Factory.get().newCorrelationKeyFactory();", "modifier": "private", "type": "CorrelationKeyFactory", "declarator": "correlationKeyFactory = KieInternalServices.Factory.get().newCorrelationKeyFactory()", "var_name": "correlationKeyFactory"}, {"original_string": "private KieCommands commandsFactory = KieServices.Factory.get().getCommands();", "modifier": "private", "type": "KieCommands", "declarator": "commandsFactory = KieServices.Factory.get().getCommands()", "var_name": "commandsFactory"}, {"original_string": "private TaskModelFactory factory = TaskModelProvider.getFactory();", "modifier": "private", "type": "TaskModelFactory", "declarator": "factory = TaskModelProvider.getFactory()", "var_name": "factory"}, {"original_string": "private CaseIdGenerator caseIdGenerator;", "modifier": "private", "type": "CaseIdGenerator", "declarator": "caseIdGenerator", "var_name": "caseIdGenerator"}, {"original_string": "private ProcessService processService;", "modifier": "private", "type": "ProcessService", "declarator": "processService", "var_name": "processService"}, {"original_string": "private RuntimeDataService runtimeDataService;", "modifier": "private", "type": "RuntimeDataService", "declarator": "runtimeDataService", "var_name": "runtimeDataService"}, {"original_string": "private DeploymentService deploymentService;", "modifier": "private", "type": "DeploymentService", "declarator": "deploymentService", "var_name": "deploymentService"}, {"original_string": "private CaseRuntimeDataService caseRuntimeDataService;", "modifier": "private", "type": "CaseRuntimeDataService", "declarator": "caseRuntimeDataService", "var_name": "caseRuntimeDataService"}, {"original_string": "private TransactionalCommandService commandService;", "modifier": "private", "type": "TransactionalCommandService", "declarator": "commandService", "var_name": "commandService"}, {"original_string": "private AuthorizationManager authorizationManager;", "modifier": "private", "type": "AuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}, {"original_string": "private IdentityProvider identityProvider;", "modifier": "private", "type": "IdentityProvider", "declarator": "identityProvider", "var_name": "identityProvider"}, {"original_string": "private CaseEventSupport emptyCaseEventSupport = new CaseEventSupport(null, Collections.emptyList());", "modifier": "private", "type": "CaseEventSupport", "declarator": "emptyCaseEventSupport = new CaseEventSupport(null, Collections.emptyList())", "var_name": "emptyCaseEventSupport"}], "methods": [{"identifier": "CaseServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " CaseServiceImpl()", "full_signature": "public  CaseServiceImpl()", "class_method_signature": "CaseServiceImpl.CaseServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "setProcessService", "parameters": "(ProcessService processService)", "modifiers": "public", "return": "void", "signature": "void setProcessService(ProcessService processService)", "full_signature": "public void setProcessService(ProcessService processService)", "class_method_signature": "CaseServiceImpl.setProcessService(ProcessService processService)", "testcase": false, "constructor": false}, {"identifier": "setRuntimeDataService", "parameters": "(RuntimeDataService runtimeDataService)", "modifiers": "public", "return": "void", "signature": "void setRuntimeDataService(RuntimeDataService runtimeDataService)", "full_signature": "public void setRuntimeDataService(RuntimeDataService runtimeDataService)", "class_method_signature": "CaseServiceImpl.setRuntimeDataService(RuntimeDataService runtimeDataService)", "testcase": false, "constructor": false}, {"identifier": "setDeploymentService", "parameters": "(DeploymentService deploymentService)", "modifiers": "public", "return": "void", "signature": "void setDeploymentService(DeploymentService deploymentService)", "full_signature": "public void setDeploymentService(DeploymentService deploymentService)", "class_method_signature": "CaseServiceImpl.setDeploymentService(DeploymentService deploymentService)", "testcase": false, "constructor": false}, {"identifier": "setCaseRuntimeDataService", "parameters": "(CaseRuntimeDataService caseRuntimeDataService)", "modifiers": "public", "return": "void", "signature": "void setCaseRuntimeDataService(CaseRuntimeDataService caseRuntimeDataService)", "full_signature": "public void setCaseRuntimeDataService(CaseRuntimeDataService caseRuntimeDataService)", "class_method_signature": "CaseServiceImpl.setCaseRuntimeDataService(CaseRuntimeDataService caseRuntimeDataService)", "testcase": false, "constructor": false}, {"identifier": "setCaseIdGenerator", "parameters": "(CaseIdGenerator caseIdGenerator)", "modifiers": "public", "return": "void", "signature": "void setCaseIdGenerator(CaseIdGenerator caseIdGenerator)", "full_signature": "public void setCaseIdGenerator(CaseIdGenerator caseIdGenerator)", "class_method_signature": "CaseServiceImpl.setCaseIdGenerator(CaseIdGenerator caseIdGenerator)", "testcase": false, "constructor": false}, {"identifier": "setCommandService", "parameters": "(TransactionalCommandService commandService)", "modifiers": "public", "return": "void", "signature": "void setCommandService(TransactionalCommandService commandService)", "full_signature": "public void setCommandService(TransactionalCommandService commandService)", "class_method_signature": "CaseServiceImpl.setCommandService(TransactionalCommandService commandService)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationManager", "parameters": "(AuthorizationManager authorizationManager)", "modifiers": "public", "return": "void", "signature": "void setAuthorizationManager(AuthorizationManager authorizationManager)", "full_signature": "public void setAuthorizationManager(AuthorizationManager authorizationManager)", "class_method_signature": "CaseServiceImpl.setAuthorizationManager(AuthorizationManager authorizationManager)", "testcase": false, "constructor": false}, {"identifier": "setIdentityProvider", "parameters": "(IdentityProvider identityProvider)", "modifiers": "public", "return": "void", "signature": "void setIdentityProvider(IdentityProvider identityProvider)", "full_signature": "public void setIdentityProvider(IdentityProvider identityProvider)", "class_method_signature": "CaseServiceImpl.setIdentityProvider(IdentityProvider identityProvider)", "testcase": false, "constructor": false}, {"identifier": "startCase", "parameters": "(String deploymentId, String caseDefinitionId)", "modifiers": "@Override public", "return": "String", "signature": "String startCase(String deploymentId, String caseDefinitionId)", "full_signature": "@Override public String startCase(String deploymentId, String caseDefinitionId)", "class_method_signature": "CaseServiceImpl.startCase(String deploymentId, String caseDefinitionId)", "testcase": false, "constructor": false}, {"identifier": "startCase", "parameters": "(String deploymentId, String caseDefinitionId, CaseFileInstance caseFile)", "modifiers": "@Override public", "return": "String", "signature": "String startCase(String deploymentId, String caseDefinitionId, CaseFileInstance caseFile)", "full_signature": "@Override public String startCase(String deploymentId, String caseDefinitionId, CaseFileInstance caseFile)", "class_method_signature": "CaseServiceImpl.startCase(String deploymentId, String caseDefinitionId, CaseFileInstance caseFile)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(Object value, Boolean defaultValue)", "modifiers": "private", "return": "Boolean", "signature": "Boolean getBoolean(Object value, Boolean defaultValue)", "full_signature": "private Boolean getBoolean(Object value, Boolean defaultValue)", "class_method_signature": "CaseServiceImpl.getBoolean(Object value, Boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getCaseFileInstance", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "CaseFileInstance", "signature": "CaseFileInstance getCaseFileInstance(String caseId)", "full_signature": "@Override public CaseFileInstance getCaseFileInstance(String caseId)", "class_method_signature": "CaseServiceImpl.getCaseFileInstance(String caseId)", "testcase": false, "constructor": false}, {"identifier": "getCaseInstance", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "CaseInstance", "signature": "CaseInstance getCaseInstance(String caseId)", "full_signature": "@Override public CaseInstance getCaseInstance(String caseId)", "class_method_signature": "CaseServiceImpl.getCaseInstance(String caseId)", "testcase": false, "constructor": false}, {"identifier": "getCaseInstance", "parameters": "(String caseId, boolean withData, boolean withRoles, boolean withMilestones, boolean withStages)", "modifiers": "@Override public", "return": "CaseInstance", "signature": "CaseInstance getCaseInstance(String caseId, boolean withData, boolean withRoles, boolean withMilestones, boolean withStages)", "full_signature": "@Override public CaseInstance getCaseInstance(String caseId, boolean withData, boolean withRoles, boolean withMilestones, boolean withStages)", "class_method_signature": "CaseServiceImpl.getCaseInstance(String caseId, boolean withData, boolean withRoles, boolean withMilestones, boolean withStages)", "testcase": false, "constructor": false}, {"identifier": "closeCase", "parameters": "(String caseId, String comment)", "modifiers": "@Override public", "return": "void", "signature": "void closeCase(String caseId, String comment)", "full_signature": "@Override public void closeCase(String caseId, String comment)", "class_method_signature": "CaseServiceImpl.closeCase(String caseId, String comment)", "testcase": false, "constructor": false}, {"identifier": "cancelCase", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "void", "signature": "void cancelCase(String caseId)", "full_signature": "@Override public void cancelCase(String caseId)", "class_method_signature": "CaseServiceImpl.cancelCase(String caseId)", "testcase": false, "constructor": false}, {"identifier": "destroyCase", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "void", "signature": "void destroyCase(String caseId)", "full_signature": "@Override public void destroyCase(String caseId)", "class_method_signature": "CaseServiceImpl.destroyCase(String caseId)", "testcase": false, "constructor": false}, {"identifier": "reopenCase", "parameters": "(String caseId, String deploymentId, String caseDefinitionId)", "modifiers": "@Override public", "return": "void", "signature": "void reopenCase(String caseId, String deploymentId, String caseDefinitionId)", "full_signature": "@Override public void reopenCase(String caseId, String deploymentId, String caseDefinitionId)", "class_method_signature": "CaseServiceImpl.reopenCase(String caseId, String deploymentId, String caseDefinitionId)", "testcase": false, "constructor": false}, {"identifier": "reopenCase", "parameters": "(String caseId, String deploymentId, String caseDefinitionId, Map<String, Object> data)", "modifiers": "@Override public", "return": "void", "signature": "void reopenCase(String caseId, String deploymentId, String caseDefinitionId, Map<String, Object> data)", "full_signature": "@Override public void reopenCase(String caseId, String deploymentId, String caseDefinitionId, Map<String, Object> data)", "class_method_signature": "CaseServiceImpl.reopenCase(String caseId, String deploymentId, String caseDefinitionId, Map<String, Object> data)", "testcase": false, "constructor": false}, {"identifier": "addDynamicTask", "parameters": "(String caseId, TaskSpecification taskSpecification)", "modifiers": "@Override public", "return": "void", "signature": "void addDynamicTask(String caseId, TaskSpecification taskSpecification)", "full_signature": "@Override public void addDynamicTask(String caseId, TaskSpecification taskSpecification)", "class_method_signature": "CaseServiceImpl.addDynamicTask(String caseId, TaskSpecification taskSpecification)", "testcase": false, "constructor": false}, {"identifier": "addDynamicTask", "parameters": "(Long processInstanceId, TaskSpecification taskSpecification)", "modifiers": "@Override public", "return": "void", "signature": "void addDynamicTask(Long processInstanceId, TaskSpecification taskSpecification)", "full_signature": "@Override public void addDynamicTask(Long processInstanceId, TaskSpecification taskSpecification)", "class_method_signature": "CaseServiceImpl.addDynamicTask(Long processInstanceId, TaskSpecification taskSpecification)", "testcase": false, "constructor": false}, {"identifier": "addDynamicTaskToStage", "parameters": "(String caseId, String stage, TaskSpecification taskSpecification)", "modifiers": "@Override public", "return": "void", "signature": "void addDynamicTaskToStage(String caseId, String stage, TaskSpecification taskSpecification)", "full_signature": "@Override public void addDynamicTaskToStage(String caseId, String stage, TaskSpecification taskSpecification)", "class_method_signature": "CaseServiceImpl.addDynamicTaskToStage(String caseId, String stage, TaskSpecification taskSpecification)", "testcase": false, "constructor": false}, {"identifier": "addDynamicTaskToStage", "parameters": "(Long processInstanceId, String stage, TaskSpecification taskSpecification)", "modifiers": "@Override public", "return": "void", "signature": "void addDynamicTaskToStage(Long processInstanceId, String stage, TaskSpecification taskSpecification)", "full_signature": "@Override public void addDynamicTaskToStage(Long processInstanceId, String stage, TaskSpecification taskSpecification)", "class_method_signature": "CaseServiceImpl.addDynamicTaskToStage(Long processInstanceId, String stage, TaskSpecification taskSpecification)", "testcase": false, "constructor": false}, {"identifier": "addDynamicSubprocess", "parameters": "(String caseId, String processId, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "Long", "signature": "Long addDynamicSubprocess(String caseId, String processId, Map<String, Object> parameters)", "full_signature": "@Override public Long addDynamicSubprocess(String caseId, String processId, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.addDynamicSubprocess(String caseId, String processId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "addDynamicSubprocess", "parameters": "(Long processInstanceId, String processId, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "Long", "signature": "Long addDynamicSubprocess(Long processInstanceId, String processId, Map<String, Object> parameters)", "full_signature": "@Override public Long addDynamicSubprocess(Long processInstanceId, String processId, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.addDynamicSubprocess(Long processInstanceId, String processId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "addDynamicSubprocessToStage", "parameters": "(String caseId, String stage, String processId, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "Long", "signature": "Long addDynamicSubprocessToStage(String caseId, String stage, String processId, Map<String, Object> parameters)", "full_signature": "@Override public Long addDynamicSubprocessToStage(String caseId, String stage, String processId, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.addDynamicSubprocessToStage(String caseId, String stage, String processId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "addDynamicSubprocessToStage", "parameters": "(Long processInstanceId, String stage, String processId, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "Long", "signature": "Long addDynamicSubprocessToStage(Long processInstanceId, String stage, String processId, Map<String, Object> parameters)", "full_signature": "@Override public Long addDynamicSubprocessToStage(Long processInstanceId, String stage, String processId, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.addDynamicSubprocessToStage(Long processInstanceId, String stage, String processId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "triggerAdHocFragment", "parameters": "(String caseId, String fragmentName, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void triggerAdHocFragment(String caseId, String fragmentName, Object data)", "full_signature": "@Override public void triggerAdHocFragment(String caseId, String fragmentName, Object data)", "class_method_signature": "CaseServiceImpl.triggerAdHocFragment(String caseId, String fragmentName, Object data)", "testcase": false, "constructor": false}, {"identifier": "triggerAdHocFragment", "parameters": "(Long processInstanceId, String fragmentName, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void triggerAdHocFragment(Long processInstanceId, String fragmentName, Object data)", "full_signature": "@Override public void triggerAdHocFragment(Long processInstanceId, String fragmentName, Object data)", "class_method_signature": "CaseServiceImpl.triggerAdHocFragment(Long processInstanceId, String fragmentName, Object data)", "testcase": false, "constructor": false}, {"identifier": "triggerAdHocFragment", "parameters": "(String caseId, String stage, String fragmentName, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void triggerAdHocFragment(String caseId, String stage, String fragmentName, Object data)", "full_signature": "@Override public void triggerAdHocFragment(String caseId, String stage, String fragmentName, Object data)", "class_method_signature": "CaseServiceImpl.triggerAdHocFragment(String caseId, String stage, String fragmentName, Object data)", "testcase": false, "constructor": false}, {"identifier": "triggerAdHocFragment", "parameters": "(Long processInstanceId, String stage, String fragmentName, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void triggerAdHocFragment(Long processInstanceId, String stage, String fragmentName, Object data)", "full_signature": "@Override public void triggerAdHocFragment(Long processInstanceId, String stage, String fragmentName, Object data)", "class_method_signature": "CaseServiceImpl.triggerAdHocFragment(Long processInstanceId, String stage, String fragmentName, Object data)", "testcase": false, "constructor": false}, {"identifier": "addDataToCaseFile", "parameters": "(String caseId, String name, Object value, String... restrictedTo)", "modifiers": "@Override public", "return": "void", "signature": "void addDataToCaseFile(String caseId, String name, Object value, String... restrictedTo)", "full_signature": "@Override public void addDataToCaseFile(String caseId, String name, Object value, String... restrictedTo)", "class_method_signature": "CaseServiceImpl.addDataToCaseFile(String caseId, String name, Object value, String... restrictedTo)", "testcase": false, "constructor": false}, {"identifier": "addDataToCaseFile", "parameters": "(String caseId, Map<String, Object> data, String... restrictedTo)", "modifiers": "@Override public", "return": "void", "signature": "void addDataToCaseFile(String caseId, Map<String, Object> data, String... restrictedTo)", "full_signature": "@Override public void addDataToCaseFile(String caseId, Map<String, Object> data, String... restrictedTo)", "class_method_signature": "CaseServiceImpl.addDataToCaseFile(String caseId, Map<String, Object> data, String... restrictedTo)", "testcase": false, "constructor": false}, {"identifier": "removeDataFromCaseFile", "parameters": "(String caseId, String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeDataFromCaseFile(String caseId, String name)", "full_signature": "@Override public void removeDataFromCaseFile(String caseId, String name)", "class_method_signature": "CaseServiceImpl.removeDataFromCaseFile(String caseId, String name)", "testcase": false, "constructor": false}, {"identifier": "removeDataFromCaseFile", "parameters": "(String caseId, List<String> variableNames)", "modifiers": "@Override public", "return": "void", "signature": "void removeDataFromCaseFile(String caseId, List<String> variableNames)", "full_signature": "@Override public void removeDataFromCaseFile(String caseId, List<String> variableNames)", "class_method_signature": "CaseServiceImpl.removeDataFromCaseFile(String caseId, List<String> variableNames)", "testcase": false, "constructor": false}, {"identifier": "assignToCaseRole", "parameters": "(String caseId, String role, OrganizationalEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void assignToCaseRole(String caseId, String role, OrganizationalEntity entity)", "full_signature": "@Override public void assignToCaseRole(String caseId, String role, OrganizationalEntity entity)", "class_method_signature": "CaseServiceImpl.assignToCaseRole(String caseId, String role, OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "removeFromCaseRole", "parameters": "(String caseId, String role, OrganizationalEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void removeFromCaseRole(String caseId, String role, OrganizationalEntity entity)", "full_signature": "@Override public void removeFromCaseRole(String caseId, String role, OrganizationalEntity entity)", "class_method_signature": "CaseServiceImpl.removeFromCaseRole(String caseId, String role, OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "getCaseRoleAssignments", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "Collection<CaseRoleInstance>", "signature": "Collection<CaseRoleInstance> getCaseRoleAssignments(String caseId)", "full_signature": "@Override public Collection<CaseRoleInstance> getCaseRoleAssignments(String caseId)", "class_method_signature": "CaseServiceImpl.getCaseRoleAssignments(String caseId)", "testcase": false, "constructor": false}, {"identifier": "getCaseComments", "parameters": "(String caseId, QueryContext queryContext)", "modifiers": "@Override public", "return": "Collection<CommentInstance>", "signature": "Collection<CommentInstance> getCaseComments(String caseId, QueryContext queryContext)", "full_signature": "@Override public Collection<CommentInstance> getCaseComments(String caseId, QueryContext queryContext)", "class_method_signature": "CaseServiceImpl.getCaseComments(String caseId, QueryContext queryContext)", "testcase": false, "constructor": false}, {"identifier": "getCaseComments", "parameters": "(String caseId, CommentSortBy sortBy, QueryContext queryContext)", "modifiers": "@Override public", "return": "Collection<CommentInstance>", "signature": "Collection<CommentInstance> getCaseComments(String caseId, CommentSortBy sortBy, QueryContext queryContext)", "full_signature": "@Override public Collection<CommentInstance> getCaseComments(String caseId, CommentSortBy sortBy, QueryContext queryContext)", "class_method_signature": "CaseServiceImpl.getCaseComments(String caseId, CommentSortBy sortBy, QueryContext queryContext)", "testcase": false, "constructor": false}, {"identifier": "addCaseComment", "parameters": "(String caseId, String author, String comment, String... restrictedTo)", "modifiers": "@Override public", "return": "String", "signature": "String addCaseComment(String caseId, String author, String comment, String... restrictedTo)", "full_signature": "@Override public String addCaseComment(String caseId, String author, String comment, String... restrictedTo)", "class_method_signature": "CaseServiceImpl.addCaseComment(String caseId, String author, String comment, String... restrictedTo)", "testcase": false, "constructor": false}, {"identifier": "updateCaseComment", "parameters": "(String caseId, String commentId, String author, String text, String... restrictedTo)", "modifiers": "@Override public", "return": "void", "signature": "void updateCaseComment(String caseId, String commentId, String author, String text, String... restrictedTo)", "full_signature": "@Override public void updateCaseComment(String caseId, String commentId, String author, String text, String... restrictedTo)", "class_method_signature": "CaseServiceImpl.updateCaseComment(String caseId, String commentId, String author, String text, String... restrictedTo)", "testcase": false, "constructor": false}, {"identifier": "removeCaseComment", "parameters": "(String caseId, String commentId)", "modifiers": "@Override public", "return": "void", "signature": "void removeCaseComment(String caseId, String commentId)", "full_signature": "@Override public void removeCaseComment(String caseId, String commentId)", "class_method_signature": "CaseServiceImpl.removeCaseComment(String caseId, String commentId)", "testcase": false, "constructor": false}, {"identifier": "newCaseFileInstance", "parameters": "(String deploymentId, String caseDefinition, Map<String, Object> data)", "modifiers": "@Override public", "return": "CaseFileInstance", "signature": "CaseFileInstance newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data)", "full_signature": "@Override public CaseFileInstance newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data)", "class_method_signature": "CaseServiceImpl.newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data)", "testcase": false, "constructor": false}, {"identifier": "newCaseFileInstanceWithRestrictions", "parameters": "(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, List<String>> accessRestrictions)", "modifiers": "@Override public", "return": "CaseFileInstance", "signature": "CaseFileInstance newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, List<String>> accessRestrictions)", "full_signature": "@Override public CaseFileInstance newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, List<String>> accessRestrictions)", "class_method_signature": "CaseServiceImpl.newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, List<String>> accessRestrictions)", "testcase": false, "constructor": false}, {"identifier": "newCaseFileInstance", "parameters": "(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment)", "modifiers": "@Override public", "return": "CaseFileInstance", "signature": "CaseFileInstance newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment)", "full_signature": "@Override public CaseFileInstance newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment)", "class_method_signature": "CaseServiceImpl.newCaseFileInstance(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment)", "testcase": false, "constructor": false}, {"identifier": "newCaseFileInstanceWithRestrictions", "parameters": "(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment, Map<String, List<String>> accessRestrictions)", "modifiers": "@Override public", "return": "CaseFileInstance", "signature": "CaseFileInstance newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment, Map<String, List<String>> accessRestrictions)", "full_signature": "@Override public CaseFileInstance newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment, Map<String, List<String>> accessRestrictions)", "class_method_signature": "CaseServiceImpl.newCaseFileInstanceWithRestrictions(String deploymentId, String caseDefinition, Map<String, Object> data, Map<String, OrganizationalEntity> rolesAssignment, Map<String, List<String>> accessRestrictions)", "testcase": false, "constructor": false}, {"identifier": "newHumanTaskSpec", "parameters": "(String taskName, String description, String actorIds, String groupIds, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "TaskSpecification", "signature": "TaskSpecification newHumanTaskSpec(String taskName, String description, String actorIds, String groupIds, Map<String, Object> parameters)", "full_signature": "@Override public TaskSpecification newHumanTaskSpec(String taskName, String description, String actorIds, String groupIds, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.newHumanTaskSpec(String taskName, String description, String actorIds, String groupIds, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "newTaskSpec", "parameters": "(String nodeType, String nodeName, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "TaskSpecification", "signature": "TaskSpecification newTaskSpec(String nodeType, String nodeName, Map<String, Object> parameters)", "full_signature": "@Override public TaskSpecification newTaskSpec(String nodeType, String nodeName, Map<String, Object> parameters)", "class_method_signature": "CaseServiceImpl.newTaskSpec(String nodeType, String nodeName, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "newUser", "parameters": "(String userId)", "modifiers": "@Override public", "return": "User", "signature": "User newUser(String userId)", "full_signature": "@Override public User newUser(String userId)", "class_method_signature": "CaseServiceImpl.newUser(String userId)", "testcase": false, "constructor": false}, {"identifier": "newGroup", "parameters": "(String groupId)", "modifiers": "@Override public", "return": "Group", "signature": "Group newGroup(String groupId)", "full_signature": "@Override public Group newGroup(String groupId)", "class_method_signature": "CaseServiceImpl.newGroup(String groupId)", "testcase": false, "constructor": false}, {"identifier": "internalGetCaseFileInstance", "parameters": "(String caseId, String deploymentId)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "CaseFileInstance", "signature": "CaseFileInstance internalGetCaseFileInstance(String caseId, String deploymentId)", "full_signature": "@SuppressWarnings(\"unchecked\") protected CaseFileInstance internalGetCaseFileInstance(String caseId, String deploymentId)", "class_method_signature": "CaseServiceImpl.internalGetCaseFileInstance(String caseId, String deploymentId)", "testcase": false, "constructor": false}, {"identifier": "internalTriggerAdHocFragment", "parameters": "(ProcessInstanceDesc pi, String fragmentName, Object data)", "modifiers": "protected", "return": "void", "signature": "void internalTriggerAdHocFragment(ProcessInstanceDesc pi, String fragmentName, Object data)", "full_signature": "protected void internalTriggerAdHocFragment(ProcessInstanceDesc pi, String fragmentName, Object data)", "class_method_signature": "CaseServiceImpl.internalTriggerAdHocFragment(ProcessInstanceDesc pi, String fragmentName, Object data)", "testcase": false, "constructor": false}, {"identifier": "verifyCaseIdExists", "parameters": "(String caseId)", "modifiers": "protected", "return": "ProcessInstanceDesc", "signature": "ProcessInstanceDesc verifyCaseIdExists(String caseId)", "full_signature": "protected ProcessInstanceDesc verifyCaseIdExists(String caseId)", "class_method_signature": "CaseServiceImpl.verifyCaseIdExists(String caseId)", "testcase": false, "constructor": false}, {"identifier": "verifyCaseIdExisted", "parameters": "(String caseId)", "modifiers": "protected", "return": "ProcessInstanceDesc", "signature": "ProcessInstanceDesc verifyCaseIdExisted(String caseId)", "full_signature": "protected ProcessInstanceDesc verifyCaseIdExisted(String caseId)", "class_method_signature": "CaseServiceImpl.verifyCaseIdExisted(String caseId)", "testcase": false, "constructor": false}, {"identifier": "getCaseEventSupport", "parameters": "(String deploymentId)", "modifiers": "protected", "return": "CaseEventSupport", "signature": "CaseEventSupport getCaseEventSupport(String deploymentId)", "full_signature": "protected CaseEventSupport getCaseEventSupport(String deploymentId)", "class_method_signature": "CaseServiceImpl.getCaseEventSupport(String deploymentId)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(Collection<?> data)", "modifiers": "protected", "return": "boolean", "signature": "boolean isEmpty(Collection<?> data)", "full_signature": "protected boolean isEmpty(Collection<?> data)", "class_method_signature": "CaseServiceImpl.isEmpty(Collection<?> data)", "testcase": false, "constructor": false}], "file": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseServiceImpl.java"}, "focal_method": {"identifier": "getCaseFileInstance", "parameters": "(String caseId)", "modifiers": "@Override public", "return": "CaseFileInstance", "body": "@Override\n    public CaseFileInstance getCaseFileInstance(String caseId) throws CaseNotFoundException {\n        authorizationManager.checkAuthorization(caseId);\n        ProcessInstanceDesc pi = verifyCaseIdExisted(caseId);\n\n        return internalGetCaseFileInstance(caseId, pi.getDeploymentId());\n    }", "signature": "CaseFileInstance getCaseFileInstance(String caseId)", "full_signature": "@Override public CaseFileInstance getCaseFileInstance(String caseId)", "class_method_signature": "CaseServiceImpl.getCaseFileInstance(String caseId)", "testcase": false, "constructor": false, "invocations": ["checkAuthorization", "verifyCaseIdExisted", "internalGetCaseFileInstance", "getDeploymentId"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}