{"test_class": {"identifier": "CleansingOperatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OperatorTestEnvironment environment = new OperatorTestEnvironment();", "modifier": "private", "type": "OperatorTestEnvironment", "declarator": "environment = new OperatorTestEnvironment()", "var_name": "environment"}, {"original_string": "private Receipt receipt = new Receipt();", "modifier": "private", "type": "Receipt", "declarator": "receipt = new Receipt()", "var_name": "receipt"}, {"original_string": "private CleansingOperatorImpl operator = new CleansingOperatorImpl();", "modifier": "private", "type": "CleansingOperatorImpl", "declarator": "operator = new CleansingOperatorImpl()", "var_name": "operator"}, {"original_string": "private CleansingResultType actual;", "modifier": "private", "type": "CleansingResultType", "declarator": "actual", "var_name": "actual"}], "file": "example-summarize-sales/src/test/java/com/asakusafw/example/summarization/operator/CleansingOperatorTest.java"}, "test_case": {"identifier": "testResultTypeIsValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testResultTypeIsValid() {\n\t\treceipt.setIssueDate(DateTime.valueOf(\"20111101000000\", Format.SIMPLE));\n\t\tactual = operator.dataCleansing(receipt);\n\t\tassertThat(\"\u5bfe\u8c61\u30c7\u30fc\u30bf(2011/11/01)\u306a\u3089VALID\", actual, is(CleansingResultType.VALID));\n\n\t\treceipt.setIssueDate(DateTime.valueOf(\"20111130000000\", Format.SIMPLE));\n\t\tactual = operator.dataCleansing(receipt);\n\t\tassertThat(\"\u5bfe\u8c61\u30c7\u30fc\u30bf(2011/11/30)\u306a\u3089VALID\", actual, is(CleansingResultType.VALID));\n\t}", "signature": "void testResultTypeIsValid()", "full_signature": "@Test public void testResultTypeIsValid()", "class_method_signature": "CleansingOperatorTest.testResultTypeIsValid()", "testcase": true, "constructor": false, "invocations": ["setIssueDate", "valueOf", "dataCleansing", "assertThat", "su", "setIssueDate", "valueOf", "dataCleansing", "assertThat", "su"]}, "focal_class": {"identifier": "CleansingOperator", "superclass": "", "interfaces": "", "fields": [{"original_string": "BatchContextParameters parameters = new BatchContextParameters();", "modifier": "", "type": "BatchContextParameters", "declarator": "parameters = new BatchContextParameters()", "var_name": "parameters"}], "methods": [{"identifier": "dataCleansing", "parameters": "(final Receipt receipt)", "modifiers": "@Branch public", "return": "CleansingResultType", "signature": "CleansingResultType dataCleansing(final Receipt receipt)", "full_signature": "@Branch public CleansingResultType dataCleansing(final Receipt receipt)", "class_method_signature": "CleansingOperator.dataCleansing(final Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(@Key(group = \"shopCode\") Shop shop,\n\t\t\t@Key(group = \"shopCode\") Receipt receipt)", "modifiers": "@MasterCheck public abstract", "return": "boolean", "signature": "boolean exists(@Key(group = \"shopCode\") Shop shop,\n\t\t\t@Key(group = \"shopCode\") Receipt receipt)", "full_signature": "@MasterCheck public abstract boolean exists(@Key(group = \"shopCode\") Shop shop,\n\t\t\t@Key(group = \"shopCode\") Receipt receipt)", "class_method_signature": "CleansingOperator.exists(@Key(group = \"shopCode\") Shop shop,\n\t\t\t@Key(group = \"shopCode\") Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(ErrorReceipt error, String message)", "modifiers": "@Update public", "return": "void", "signature": "void setErrorMessage(ErrorReceipt error, String message)", "full_signature": "@Update public void setErrorMessage(ErrorReceipt error, String message)", "class_method_signature": "CleansingOperator.setErrorMessage(ErrorReceipt error, String message)", "testcase": false, "constructor": false}], "file": "example-summarize-sales/src/main/java/com/asakusafw/example/summarization/operator/CleansingOperator.java"}, "focal_method": {"identifier": "dataCleansing", "parameters": "(final Receipt receipt)", "modifiers": "@Branch public", "return": "CleansingResultType", "body": "@Branch\n\tpublic CleansingResultType dataCleansing(final Receipt receipt) {\n\n\t\tif (receipt.getReceiptIdOption().isNull()\n\t\t\t\t|| receipt.getUnitSalesOption().isNull()\n\t\t\t\t|| receipt.getUnitSales() < 0\n\t\t\t\t|| receipt.getSellingPriceOption().isNull()\n\t\t\t\t|| receipt.getSellingPrice() < 0) {\n\t\t\treturn CleansingResultType.INVALID;\n\t\t}\n\t\tif (receipt.getIssueDate().getElapsedSeconds() >= parameters\n\t\t\t\t.getFromIssueDate().getElapsedSeconds()\n\t\t\t\t&& receipt.getIssueDate().getElapsedSeconds() <= parameters\n\t\t\t\t\t\t.getToIssueDate().getElapsedSeconds()) {\n\t\t\treturn CleansingResultType.VALID;\n\t\t} else {\n\t\t\treturn CleansingResultType.EXCLUDE;\n\t\t}\n\n\t}", "signature": "CleansingResultType dataCleansing(final Receipt receipt)", "full_signature": "@Branch public CleansingResultType dataCleansing(final Receipt receipt)", "class_method_signature": "CleansingOperator.dataCleansing(final Receipt receipt)", "testcase": false, "constructor": false, "invocations": ["isNull", "getReceiptIdOption", "isNull", "getUnitSalesOption", "getUnitSales", "isNull", "getSellingPriceOption", "getSellingPrice", "getElapsedSeconds", "getIssueDate", "getElapsedSeconds", "getFromIssueDate", "getElapsedSeconds", "getIssueDate", "getElapsedSeconds", "getToIssueDate"]}, "repository": {"repo_id": 1547148, "url": "https://github.com/asakusafw/asakusafw-examples", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 25, "size": 1520, "license": "licensed"}}