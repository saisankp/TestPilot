{"test_class": {"identifier": "TestPrivateKeyReader", "superclass": "", "interfaces": "", "fields": [], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestPrivateKeyReader.java"}, "test_case": {"identifier": "readEncryptedPemPrivateKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readEncryptedPemPrivateKey() throws Exception {\n        // encrypted private key\n        Path path = Paths.get(getClass().getResource(\"/ssl/server-with-pass.p8\").toURI());\n        PrivateKey privateKey = PrivateKeyReader.fromPem(path, \"password\");\n        assertNotNull(privateKey);\n        assertEquals(\"PKCS#8\", privateKey.getFormat());\n\n        try {\n            PrivateKeyReader.fromPem(path, null);\n            fail(\"Should fail with null password\");\n        } catch (Exception ex) {\n        }\n\n        try {\n            PrivateKeyReader.fromPem(path, \"\");\n            fail(\"Should fail with empty password\");\n        } catch (Exception ex) {\n        }\n\n        try {\n            PrivateKeyReader.fromPem(path, \"wrong-password\");\n            fail(\"Should fail with wrong password\");\n        } catch (Exception ex) {\n        }\n    }", "signature": "void readEncryptedPemPrivateKey()", "full_signature": "@Test public void readEncryptedPemPrivateKey()", "class_method_signature": "TestPrivateKeyReader.readEncryptedPemPrivateKey()", "testcase": true, "constructor": false, "invocations": ["get", "toURI", "getResource", "getClass", "fromPem", "assertNotNull", "assertEquals", "getFormat", "fromPem", "fail", "fromPem", "fail", "fromPem", "fail"]}, "focal_class": {"identifier": "PrivateKeyReader", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PrivateKeyReader", "parameters": "()", "modifiers": "private", "return": "", "signature": " PrivateKeyReader()", "full_signature": "private  PrivateKeyReader()", "class_method_signature": "PrivateKeyReader.PrivateKeyReader()", "testcase": false, "constructor": true}, {"identifier": "fromPem", "parameters": "(Path path, String password)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey fromPem(Path path, String password)", "full_signature": "public static PrivateKey fromPem(Path path, String password)", "class_method_signature": "PrivateKeyReader.fromPem(Path path, String password)", "testcase": false, "constructor": false}, {"identifier": "getDer", "parameters": "(Path path)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] getDer(Path path)", "full_signature": "private static byte[] getDer(Path path)", "class_method_signature": "PrivateKeyReader.getDer(Path path)", "testcase": false, "constructor": false}, {"identifier": "getKeySpec", "parameters": "(byte[] encodedKey, String password)", "modifiers": "private static", "return": "KeySpec", "signature": "KeySpec getKeySpec(byte[] encodedKey, String password)", "full_signature": "private static KeySpec getKeySpec(byte[] encodedKey, String password)", "class_method_signature": "PrivateKeyReader.getKeySpec(byte[] encodedKey, String password)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/PrivateKeyReader.java"}, "focal_method": {"identifier": "fromPem", "parameters": "(Path path, String password)", "modifiers": "public static", "return": "PrivateKey", "body": "public static PrivateKey fromPem(Path path, String password) {\n        PrivateKey privateKey;\n        try {\n            byte[] der = getDer(path);\n            KeySpec keySpec = getKeySpec(der, password);\n            KeyFactory kf = KeyFactory.getInstance(\"RSA\");\n            privateKey = kf.generatePrivate(keySpec);\n        } catch (Exception e) {\n            String msg = String.format(\"Failed to read PKCS#8 PEM file. file=%s\", path);\n            Utils.logWarning(msg);\n            throw new RuntimeException(msg, e);\n        }\n        return privateKey;\n    }", "signature": "PrivateKey fromPem(Path path, String password)", "full_signature": "public static PrivateKey fromPem(Path path, String password)", "class_method_signature": "PrivateKeyReader.fromPem(Path path, String password)", "testcase": false, "constructor": false, "invocations": ["getDer", "getKeySpec", "getInstance", "generatePrivate", "format", "logWarning"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}