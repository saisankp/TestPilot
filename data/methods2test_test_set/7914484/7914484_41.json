{"test_class": {"identifier": "WsdlDefinitionHandlerAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WsdlDefinitionHandlerAdapter adapter;", "modifier": "private", "type": "WsdlDefinitionHandlerAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private WsdlDefinition definitionMock;", "modifier": "private", "type": "WsdlDefinition", "declarator": "definitionMock", "var_name": "definitionMock"}, {"original_string": "private MockHttpServletRequest request;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private MockHttpServletResponse response;", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "response", "var_name": "response"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/transport/http/WsdlDefinitionHandlerAdapterTest.java"}, "test_case": {"identifier": "handleNonGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void handleNonGet() throws Exception {\n\t\trequest.setMethod(HttpTransportConstants.METHOD_POST);\n\n\t\treplay(definitionMock);\n\n\t\tadapter.handle(request, response, definitionMock);\n\t\tAssert.assertEquals(\"METHOD_NOT_ALLOWED expected\", HttpServletResponse.SC_METHOD_NOT_ALLOWED, response.getStatus());\n\n\t\tverify(definitionMock);\n\t}", "signature": "void handleNonGet()", "full_signature": "@Test public void handleNonGet()", "class_method_signature": "WsdlDefinitionHandlerAdapterTest.handleNonGet()", "testcase": true, "constructor": false, "invocations": ["setMethod", "replay", "handle", "assertEquals", "getStatus", "verify"]}, "focal_class": {"identifier": "WsdlDefinitionHandlerAdapter", "superclass": "extends LocationTransformerObjectSupport", "interfaces": "implements HandlerAdapter, InitializingBean", "fields": [{"original_string": "public static final String DEFAULT_LOCATION_EXPRESSION = \"//@location\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_LOCATION_EXPRESSION = \"//@location\"", "var_name": "DEFAULT_LOCATION_EXPRESSION"}, {"original_string": "public static final String DEFAULT_SCHEMA_LOCATION_EXPRESSION = \"//@schemaLocation\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_SCHEMA_LOCATION_EXPRESSION = \"//@schemaLocation\"", "var_name": "DEFAULT_SCHEMA_LOCATION_EXPRESSION"}, {"original_string": "private static final String CONTENT_TYPE = \"text/xml\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"text/xml\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private Map<String, String> expressionNamespaces = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "expressionNamespaces = new HashMap<String, String>()", "var_name": "expressionNamespaces"}, {"original_string": "private String locationExpression = DEFAULT_LOCATION_EXPRESSION;", "modifier": "private", "type": "String", "declarator": "locationExpression = DEFAULT_LOCATION_EXPRESSION", "var_name": "locationExpression"}, {"original_string": "private String schemaLocationExpression = DEFAULT_SCHEMA_LOCATION_EXPRESSION;", "modifier": "private", "type": "String", "declarator": "schemaLocationExpression = DEFAULT_SCHEMA_LOCATION_EXPRESSION", "var_name": "schemaLocationExpression"}, {"original_string": "private XPathExpression locationXPathExpression;", "modifier": "private", "type": "XPathExpression", "declarator": "locationXPathExpression", "var_name": "locationXPathExpression"}, {"original_string": "private XPathExpression schemaLocationXPathExpression;", "modifier": "private", "type": "XPathExpression", "declarator": "schemaLocationXPathExpression", "var_name": "schemaLocationXPathExpression"}, {"original_string": "private boolean transformLocations = false;", "modifier": "private", "type": "boolean", "declarator": "transformLocations = false", "var_name": "transformLocations"}, {"original_string": "private boolean transformSchemaLocations = false;", "modifier": "private", "type": "boolean", "declarator": "transformSchemaLocations = false", "var_name": "transformSchemaLocations"}], "methods": [{"identifier": "setLocationExpression", "parameters": "(String locationExpression)", "modifiers": "public", "return": "void", "signature": "void setLocationExpression(String locationExpression)", "full_signature": "public void setLocationExpression(String locationExpression)", "class_method_signature": "WsdlDefinitionHandlerAdapter.setLocationExpression(String locationExpression)", "testcase": false, "constructor": false}, {"identifier": "setSchemaLocationExpression", "parameters": "(String schemaLocationExpression)", "modifiers": "public", "return": "void", "signature": "void setSchemaLocationExpression(String schemaLocationExpression)", "full_signature": "public void setSchemaLocationExpression(String schemaLocationExpression)", "class_method_signature": "WsdlDefinitionHandlerAdapter.setSchemaLocationExpression(String schemaLocationExpression)", "testcase": false, "constructor": false}, {"identifier": "setTransformLocations", "parameters": "(boolean transformLocations)", "modifiers": "public", "return": "void", "signature": "void setTransformLocations(boolean transformLocations)", "full_signature": "public void setTransformLocations(boolean transformLocations)", "class_method_signature": "WsdlDefinitionHandlerAdapter.setTransformLocations(boolean transformLocations)", "testcase": false, "constructor": false}, {"identifier": "setTransformSchemaLocations", "parameters": "(boolean transformSchemaLocations)", "modifiers": "public", "return": "void", "signature": "void setTransformSchemaLocations(boolean transformSchemaLocations)", "full_signature": "public void setTransformSchemaLocations(boolean transformSchemaLocations)", "class_method_signature": "WsdlDefinitionHandlerAdapter.setTransformSchemaLocations(boolean transformSchemaLocations)", "testcase": false, "constructor": false}, {"identifier": "getLastModified", "parameters": "(HttpServletRequest request, Object handler)", "modifiers": "@Override public", "return": "long", "signature": "long getLastModified(HttpServletRequest request, Object handler)", "full_signature": "@Override public long getLastModified(HttpServletRequest request, Object handler)", "class_method_signature": "WsdlDefinitionHandlerAdapter.getLastModified(HttpServletRequest request, Object handler)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(HttpServletRequest request, HttpServletResponse response, Object handler)", "modifiers": "@Override public", "return": "ModelAndView", "signature": "ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "full_signature": "@Override public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "class_method_signature": "WsdlDefinitionHandlerAdapter.handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "testcase": false, "constructor": false}, {"identifier": "supports", "parameters": "(Object handler)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supports(Object handler)", "full_signature": "@Override public boolean supports(Object handler)", "class_method_signature": "WsdlDefinitionHandlerAdapter.supports(Object handler)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "WsdlDefinitionHandlerAdapter.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "transformLocations", "parameters": "(Document definitionDocument, HttpServletRequest request)", "modifiers": "protected", "return": "void", "signature": "void transformLocations(Document definitionDocument, HttpServletRequest request)", "full_signature": "protected void transformLocations(Document definitionDocument, HttpServletRequest request)", "class_method_signature": "WsdlDefinitionHandlerAdapter.transformLocations(Document definitionDocument, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "transformSchemaLocations", "parameters": "(Document definitionDocument, HttpServletRequest request)", "modifiers": "protected", "return": "void", "signature": "void transformSchemaLocations(Document definitionDocument, HttpServletRequest request)", "full_signature": "protected void transformSchemaLocations(Document definitionDocument, HttpServletRequest request)", "class_method_signature": "WsdlDefinitionHandlerAdapter.transformSchemaLocations(Document definitionDocument, HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/transport/http/WsdlDefinitionHandlerAdapter.java"}, "focal_method": {"identifier": "handle", "parameters": "(HttpServletRequest request, HttpServletResponse response, Object handler)", "modifiers": "@Override public", "return": "ModelAndView", "body": "@Override\n\tpublic ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\t\t\tthrows Exception {\n\t\tif (HttpTransportConstants.METHOD_GET.equals(request.getMethod())) {\n\t\t\tWsdlDefinition definition = (WsdlDefinition) handler;\n\n\t\t\tTransformer transformer = createTransformer();\n\t\t\tSource definitionSource = definition.getSource();\n\n\t\t\tif (transformLocations || transformSchemaLocations) {\n\t\t\t\tDOMResult domResult = new DOMResult();\n\t\t\t\ttransformer.transform(definitionSource, domResult);\n\t\t\t\tDocument definitionDocument = (Document) domResult.getNode();\n\t\t\t\tif (transformLocations) {\n\t\t\t\t\ttransformLocations(definitionDocument, request);\n\t\t\t\t}\n\t\t\t\tif (transformSchemaLocations) {\n\t\t\t\t\ttransformSchemaLocations(definitionDocument, request);\n\t\t\t\t}\n\t\t\t\tdefinitionSource = new DOMSource(definitionDocument);\n\t\t\t}\n\n\t\t\tresponse.setContentType(CONTENT_TYPE);\n\t\t\tStreamResult responseResult = new StreamResult(response.getOutputStream());\n\t\t\ttransformer.transform(definitionSource, responseResult);\n\t\t} else {\n\t\t\tresponse.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);\n\t\t}\n\t\treturn null;\n\t}", "signature": "ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "full_signature": "@Override public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "class_method_signature": "WsdlDefinitionHandlerAdapter.handle(HttpServletRequest request, HttpServletResponse response, Object handler)", "testcase": false, "constructor": false, "invocations": ["equals", "getMethod", "createTransformer", "getSource", "transform", "getNode", "transformLocations", "transformSchemaLocations", "setContentType", "getOutputStream", "transform", "setStatus"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}