{"test_class": {"identifier": "StubConfigPathProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private FileUtils fileUtils;", "modifier": "@Mock\n    private", "type": "FileUtils", "declarator": "fileUtils", "var_name": "fileUtils"}, {"original_string": "private Collection<File> files;", "modifier": "private", "type": "Collection<File>", "declarator": "files", "var_name": "files"}, {"original_string": "private List<String> expectedFilePaths;", "modifier": "private", "type": "List<String>", "declarator": "expectedFilePaths", "var_name": "expectedFilePaths"}, {"original_string": "@InjectMocks\n    private StubConfigPathProvider underTest;", "modifier": "@InjectMocks\n    private", "type": "StubConfigPathProvider", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/cache/cleaner/helper/StubConfigPathProviderTest.java"}, "test_case": {"identifier": "testGetConfigPathsFromSpecificFolder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConfigPathsFromSpecificFolder() {\n        //GIVEN\n        //WHEN\n        List<String> result = underTest.getConfigPathsFromSpecificFolder(\"test/path\", \"*TestPattern\");\n        //THEN\n        verify(fileUtils).listFilesWithFilter(Mockito.any(File.class), Mockito.anyString());\n        Assert.assertEquals(result, expectedFilePaths);\n    }", "signature": "void testGetConfigPathsFromSpecificFolder()", "full_signature": "@Test public void testGetConfigPathsFromSpecificFolder()", "class_method_signature": "StubConfigPathProviderTest.testGetConfigPathsFromSpecificFolder()", "testcase": true, "constructor": false, "invocations": ["getConfigPathsFromSpecificFolder", "listFilesWithFilter", "verify", "any", "anyString", "assertEquals"]}, "focal_class": {"identifier": "StubConfigPathProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileUtils fileUtils;", "modifier": "@Autowired\n    private", "type": "FileUtils", "declarator": "fileUtils", "var_name": "fileUtils"}], "methods": [{"identifier": "getConfigPathsFromCache", "parameters": "(final String cachePath)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getConfigPathsFromCache(final String cachePath)", "full_signature": "public List<String> getConfigPathsFromCache(final String cachePath)", "class_method_signature": "StubConfigPathProvider.getConfigPathsFromCache(final String cachePath)", "testcase": false, "constructor": false}, {"identifier": "getConfigPathsFromSpecificFolder", "parameters": "(final String sourceFolderPath, final String pattern)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "full_signature": "public List<String> getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "class_method_signature": "StubConfigPathProvider.getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/cache/cleaner/helper/StubConfigPathProvider.java"}, "focal_method": {"identifier": "getConfigPathsFromSpecificFolder", "parameters": "(final String sourceFolderPath, final String pattern)", "modifiers": "public", "return": "List<String>", "body": "public List<String> getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern) {\n        List<String> resultPaths = new ArrayList<>();\n        if (!pattern.contains(\"*\")) {\n            String specificFilePath;\n            if (\"\".equals(sourceFolderPath)) {\n                specificFilePath = pattern;\n            } else {\n                specificFilePath = FilenameUtils.separatorsToSystem(sourceFolderPath + \"/\" + pattern);\n            }\n            resultPaths.add(specificFilePath);\n        } else {\n            File folder = new File(sourceFolderPath);\n            folder = folder.getAbsoluteFile();\n            int cutFromHere = pattern.indexOf(\"*\") + 1;\n            String endOfFiles = pattern.substring(cutFromHere);\n            for (File file : fileUtils.listFilesWithFilter(folder, \"^(.+)\" + endOfFiles + \"$\")) {\n                resultPaths.add(file.getPath());\n            }\n        }\n        return resultPaths;\n    }", "signature": "List<String> getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "full_signature": "public List<String> getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "class_method_signature": "StubConfigPathProvider.getConfigPathsFromSpecificFolder(final String sourceFolderPath, final String pattern)", "testcase": false, "constructor": false, "invocations": ["contains", "equals", "separatorsToSystem", "add", "getAbsoluteFile", "indexOf", "substring", "listFilesWithFilter", "add", "getPath"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}