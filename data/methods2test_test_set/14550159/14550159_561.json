{"test_class": {"identifier": "CookieHeaderDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CookieHeaderDelegate cookieHeaderDelegate;", "modifier": "private", "type": "CookieHeaderDelegate", "declarator": "cookieHeaderDelegate", "var_name": "cookieHeaderDelegate"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/CookieHeaderDelegateTest.java"}, "test_case": {"identifier": "throwsExceptionWhenCookieIsNull", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void throwsExceptionWhenCookieIsNull() throws Exception {\n        cookieHeaderDelegate.toString(null);\n    }", "signature": "void throwsExceptionWhenCookieIsNull()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void throwsExceptionWhenCookieIsNull()", "class_method_signature": "CookieHeaderDelegateTest.throwsExceptionWhenCookieIsNull()", "testcase": true, "constructor": false, "invocations": ["toString"]}, "focal_class": {"identifier": "CookieHeaderDelegate", "superclass": "", "interfaces": "implements RuntimeDelegate.HeaderDelegate<Cookie>", "fields": [], "methods": [{"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "Cookie", "signature": "Cookie fromString(String header)", "full_signature": "@Override public Cookie fromString(String header)", "class_method_signature": "CookieHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Cookie cookie)", "modifiers": "@Override public", "return": "String", "signature": "String toString(Cookie cookie)", "full_signature": "@Override public String toString(Cookie cookie)", "class_method_signature": "CookieHeaderDelegate.toString(Cookie cookie)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/CookieHeaderDelegate.java"}, "focal_method": {"identifier": "toString", "parameters": "(Cookie cookie)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString(Cookie cookie) {\n        if (cookie == null) {\n            throw new IllegalArgumentException();\n        }\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(\"$Version=\").append(cookie.getVersion()).append(';');\n\n        sb.append(cookie.getName()).append('=').append(addQuotesIfHasWhitespace(cookie.getValue()));\n\n        if (cookie.getDomain() != null) {\n            sb.append(';').append(\"$Domain=\").append(addQuotesIfHasWhitespace(cookie.getDomain()));\n        }\n\n        if (cookie.getPath() != null) {\n            sb.append(';').append(\"$Path=\").append(addQuotesIfHasWhitespace(cookie.getPath()));\n        }\n\n        return sb.toString();\n    }", "signature": "String toString(Cookie cookie)", "full_signature": "@Override public String toString(Cookie cookie)", "class_method_signature": "CookieHeaderDelegate.toString(Cookie cookie)", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "getVersion", "append", "append", "append", "getName", "addQuotesIfHasWhitespace", "getValue", "getDomain", "append", "append", "append", "addQuotesIfHasWhitespace", "getDomain", "getPath", "append", "append", "append", "addQuotesIfHasWhitespace", "getPath", "toString"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}