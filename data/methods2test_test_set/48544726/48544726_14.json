{"test_class": {"identifier": "RepoListMapperTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected RepoListMapper repoListMapper;", "modifier": "@Inject\n    protected", "type": "RepoListMapper", "declarator": "repoListMapper", "var_name": "repoListMapper"}, {"original_string": "private List<RepositoryDTO> repositoryDTOs;", "modifier": "private", "type": "List<RepositoryDTO>", "declarator": "repositoryDTOs", "var_name": "repositoryDTOs"}], "file": "app/src/test/java/com/andrey7mel/stepbystep/presenter/mappers/RepoListMapperTest.java"}, "test_case": {"identifier": "testCall", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCall() throws Exception {\n        List<Repository> repositoryList = repoListMapper.call(repositoryDTOs);\n\n        assertEquals(7, repositoryList.size());\n\n        assertEquals(\"Android-Rate\", repositoryList.get(0).getRepoName());\n        assertEquals(\"andrey7mel\", repositoryList.get(0).getOwnerName());\n\n        assertEquals(\"utils\", repositoryList.get(6).getRepoName());\n        assertEquals(\"andrey7mel\", repositoryList.get(6).getOwnerName());\n    }", "signature": "void testCall()", "full_signature": "@Test public void testCall()", "class_method_signature": "RepoListMapperTest.testCall()", "testcase": true, "constructor": false, "invocations": ["call", "assertEquals", "size", "assertEquals", "getRepoName", "get", "assertEquals", "getOwnerName", "get", "assertEquals", "getRepoName", "get", "assertEquals", "getOwnerName", "get"]}, "focal_class": {"identifier": "RepoListMapper", "superclass": "", "interfaces": "implements Func1<List<RepositoryDTO>, List<Repository>>", "fields": [], "methods": [{"identifier": "RepoListMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " RepoListMapper()", "full_signature": "@Inject public  RepoListMapper()", "class_method_signature": "RepoListMapper.RepoListMapper()", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "(List<RepositoryDTO> repositoryDTOs)", "modifiers": "@Override public", "return": "List<Repository>", "signature": "List<Repository> call(List<RepositoryDTO> repositoryDTOs)", "full_signature": "@Override public List<Repository> call(List<RepositoryDTO> repositoryDTOs)", "class_method_signature": "RepoListMapper.call(List<RepositoryDTO> repositoryDTOs)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/andrey7mel/stepbystep/presenter/mappers/RepoListMapper.java"}, "focal_method": {"identifier": "call", "parameters": "(List<RepositoryDTO> repositoryDTOs)", "modifiers": "@Override public", "return": "List<Repository>", "body": "@Override\n    public List<Repository> call(List<RepositoryDTO> repositoryDTOs) {\n        if (repositoryDTOs == null) {\n            return null;\n        }\n        List<Repository> repoList = Observable.from(repositoryDTOs)\n                .map(repoDTO -> new Repository(repoDTO.getName(), repoDTO.getOwner().getLogin()))\n                .toList()\n                .toBlocking()\n                .first();\n        return repoList;\n    }", "signature": "List<Repository> call(List<RepositoryDTO> repositoryDTOs)", "full_signature": "@Override public List<Repository> call(List<RepositoryDTO> repositoryDTOs)", "class_method_signature": "RepoListMapper.call(List<RepositoryDTO> repositoryDTOs)", "testcase": false, "constructor": false, "invocations": ["first", "toBlocking", "toList", "map", "from", "getName", "getLogin", "getOwner"]}, "repository": {"repo_id": 48544726, "url": "https://github.com/andrey7mel/android-step-by-step", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 130, "size": 313, "license": "licensed"}}