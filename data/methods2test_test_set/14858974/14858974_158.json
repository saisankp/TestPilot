{"test_class": {"identifier": "ArtifactResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private RepositoryHandler repositoryHandler;", "modifier": "private", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}, {"original_string": "private final String templatePath = GrapesTestUtils.class.getResource(\"all-messages-pretty-print.txt\").getPath();", "modifier": "private final", "type": "String", "declarator": "templatePath = GrapesTestUtils.class.getResource(\"all-messages-pretty-print.txt\").getPath()", "var_name": "templatePath"}], "file": "server/src/test/java/org/axway/grapes/server/webapp/resources/ArtifactResourceTest.java"}, "test_case": {"identifier": "isPromoted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isPromoted(){\n    \tfinal DbArtifact artifact = new DbArtifact();\n        artifact.setGroupId(\"groupId\");\n        artifact.setArtifactId(\"artifactId\");\n        artifact.setVersion(\"version\");\n        artifact.setClassifier(\"classifier\");\n        artifact.setPromoted(true);\n        when(repositoryHandler.getArtifactUsingSHA256(\"6554ed3d1ab007bd81d3d57ee27027510753d905277d5b5b8813e5bd516e821c\")).thenReturn(artifact);\n        \n    \tArtifactQuery artifactQuery = new ArtifactQuery(\"User\", 1, \"File1\", \"6554ed3d1ab007bd81d3d57ee27027510753d905277d5b5b8813e5bd516e821c\", \"filetype1\", \"\");\n\n        MultivaluedMap<String, String> params = makeParams(artifactQuery);\n\n        Messages.init(templatePath);\n\n    \tWebResource resource = client().resource(\"/\" + ServerAPI.ARTIFACT_RESOURCE + \"/isPromoted\");\n        ClientResponse response = resource.queryParams(params).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);\n\n        final ArtifactPromotionStatus promotionStatus = response.getEntity(ArtifactPromotionStatus.class);\n        \n        assertNotNull(response);\n        assertEquals(HttpStatus.OK_200, response.getStatus());\n        assertTrue(promotionStatus.isPromoted());\n        assertEquals(\"Artifact is promoted\", promotionStatus.getMessage());\n    }", "signature": "void isPromoted()", "full_signature": "@Test public void isPromoted()", "class_method_signature": "ArtifactResourceTest.isPromoted()", "testcase": true, "constructor": false, "invocations": ["setGroupId", "setArtifactId", "setVersion", "setClassifier", "setPromoted", "thenReturn", "when", "getArtifactUsingSHA256", "makeParams", "init", "resource", "client", "get", "type", "queryParams", "getEntity", "assertNotNull", "assertEquals", "getStatus", "assertTrue", "isPromoted", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "ArtifactResource", "superclass": "extends AbstractResource", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ArtifactResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ArtifactResource.class)", "var_name": "LOG"}, {"original_string": "private GrapesEmailSender sender;", "modifier": "private", "type": "GrapesEmailSender", "declarator": "sender", "var_name": "sender"}, {"original_string": "private CacheUtils cacheUtils = new CacheUtils();", "modifier": "private", "type": "CacheUtils", "declarator": "cacheUtils = new CacheUtils()", "var_name": "cacheUtils"}], "methods": [{"identifier": "ArtifactResource", "parameters": "(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "modifiers": "public", "return": "", "signature": " ArtifactResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "full_signature": "public  ArtifactResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "class_method_signature": "ArtifactResource.ArtifactResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "testcase": false, "constructor": true}, {"identifier": "postArtifact", "parameters": "(@Auth final DbCredential credential, final Artifact artifact)", "modifiers": "@POST public", "return": "Response", "signature": "Response postArtifact(@Auth final DbCredential credential, final Artifact artifact)", "full_signature": "@POST public Response postArtifact(@Auth final DbCredential credential, final Artifact artifact)", "class_method_signature": "ArtifactResource.postArtifact(@Auth final DbCredential credential, final Artifact artifact)", "testcase": false, "constructor": false}, {"identifier": "getGavcs", "parameters": "(@Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_GAVCS) public", "return": "Response", "signature": "Response getGavcs(@Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_GAVCS) public Response getGavcs(@Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getGavcs(@Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getGroupIds", "parameters": "(@Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_GROUPIDS) public", "return": "Response", "signature": "Response getGroupIds(@Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_GROUPIDS) public Response getGroupIds(@Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getGroupIds(@Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getVersions", "parameters": "(@PathParam(\"gavc\") final String gavc)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_VERSIONS) public", "return": "Response", "signature": "Response getVersions(@PathParam(\"gavc\") final String gavc)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_VERSIONS) public Response getVersions(@PathParam(\"gavc\") final String gavc)", "class_method_signature": "ArtifactResource.getVersions(@PathParam(\"gavc\") final String gavc)", "testcase": false, "constructor": false}, {"identifier": "getLastVersion", "parameters": "(@PathParam(\"gavc\") final String gavc)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/{gavc}\" + ServerAPI.GET_LAST_VERSION) public", "return": "Response", "signature": "Response getLastVersion(@PathParam(\"gavc\") final String gavc)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/{gavc}\" + ServerAPI.GET_LAST_VERSION) public Response getLastVersion(@PathParam(\"gavc\") final String gavc)", "class_method_signature": "ArtifactResource.getLastVersion(@PathParam(\"gavc\") final String gavc)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"gavc\") final String gavc)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\") public", "return": "Response", "signature": "Response get(@PathParam(\"gavc\") final String gavc)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\") public Response get(@PathParam(\"gavc\") final String gavc)", "class_method_signature": "ArtifactResource.get(@PathParam(\"gavc\") final String gavc)", "testcase": false, "constructor": false}, {"identifier": "isPromoted", "parameters": "(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/isPromoted\") public", "return": "Response", "signature": "Response isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/isPromoted\") public Response isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "class_method_signature": "ArtifactResource.isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "testcase": false, "constructor": false}, {"identifier": "updateDownloadUrl", "parameters": "(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.URL_PARAM) final String downLoadUrl)", "modifiers": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_DOWNLOAD_URL) public", "return": "Response", "signature": "Response updateDownloadUrl(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.URL_PARAM) final String downLoadUrl)", "full_signature": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_DOWNLOAD_URL) public Response updateDownloadUrl(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.URL_PARAM) final String downLoadUrl)", "class_method_signature": "ArtifactResource.updateDownloadUrl(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.URL_PARAM) final String downLoadUrl)", "testcase": false, "constructor": false}, {"identifier": "updateProvider", "parameters": "(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.PROVIDER_PARAM) final String provider)", "modifiers": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_PROVIDER) public", "return": "Response", "signature": "Response updateProvider(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.PROVIDER_PARAM) final String provider)", "full_signature": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_PROVIDER) public Response updateProvider(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.PROVIDER_PARAM) final String provider)", "class_method_signature": "ArtifactResource.updateProvider(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc, @QueryParam(ServerAPI.PROVIDER_PARAM) final String provider)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc)", "modifiers": "@DELETE @Path(\"/{gavc}\") public", "return": "Response", "signature": "Response delete(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc)", "full_signature": "@DELETE @Path(\"/{gavc}\") public Response delete(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc)", "class_method_signature": "ArtifactResource.delete(@Auth final DbCredential credential, @PathParam(\"gavc\") final String gavc)", "testcase": false, "constructor": false}, {"identifier": "postDoNotUse", "parameters": "(@Auth final DbCredential credential,\n                                 @PathParam(\"gavc\") final String gavc,\n                                 @QueryParam(ServerAPI.DO_NOT_USE) final BooleanParam doNotUse,\n                                 final String commentText)", "modifiers": "@POST @Path(\"/{gavc}\" + ServerAPI.SET_DO_NOT_USE) public", "return": "Response", "signature": "Response postDoNotUse(@Auth final DbCredential credential,\n                                 @PathParam(\"gavc\") final String gavc,\n                                 @QueryParam(ServerAPI.DO_NOT_USE) final BooleanParam doNotUse,\n                                 final String commentText)", "full_signature": "@POST @Path(\"/{gavc}\" + ServerAPI.SET_DO_NOT_USE) public Response postDoNotUse(@Auth final DbCredential credential,\n                                 @PathParam(\"gavc\") final String gavc,\n                                 @QueryParam(ServerAPI.DO_NOT_USE) final BooleanParam doNotUse,\n                                 final String commentText)", "class_method_signature": "ArtifactResource.postDoNotUse(@Auth final DbCredential credential,\n                                 @PathParam(\"gavc\") final String gavc,\n                                 @QueryParam(ServerAPI.DO_NOT_USE) final BooleanParam doNotUse,\n                                 final String commentText)", "testcase": false, "constructor": false}, {"identifier": "getDoNotUse", "parameters": "(@PathParam(\"gavc\") final String gavc)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/{gavc}\" + ServerAPI.SET_DO_NOT_USE) public", "return": "Response", "signature": "Response getDoNotUse(@PathParam(\"gavc\") final String gavc)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/{gavc}\" + ServerAPI.SET_DO_NOT_USE) public Response getDoNotUse(@PathParam(\"gavc\") final String gavc)", "class_method_signature": "ArtifactResource.getDoNotUse(@PathParam(\"gavc\") final String gavc)", "testcase": false, "constructor": false}, {"identifier": "getAncestors", "parameters": "(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_ANCESTORS) public", "return": "Response", "signature": "Response getAncestors(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_ANCESTORS) public Response getAncestors(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getAncestors(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getLicenses", "parameters": "(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public", "return": "Response", "signature": "Response getLicenses(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public Response getLicenses(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getLicenses(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "addLicense", "parameters": "(@Auth final DbCredential credential,\n                               @PathParam(\"gavc\") final String gavc,\n                               @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseId)", "modifiers": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public", "return": "Response", "signature": "Response addLicense(@Auth final DbCredential credential,\n                               @PathParam(\"gavc\") final String gavc,\n                               @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseId)", "full_signature": "@POST @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public Response addLicense(@Auth final DbCredential credential,\n                               @PathParam(\"gavc\") final String gavc,\n                               @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseId)", "class_method_signature": "ArtifactResource.addLicense(@Auth final DbCredential credential,\n                               @PathParam(\"gavc\") final String gavc,\n                               @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseId)", "testcase": false, "constructor": false}, {"identifier": "deleteLicense", "parameters": "(@Auth final DbCredential credential,\n                                  @PathParam(\"gavc\") final String gavc,\n                                  @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseString)", "modifiers": "@DELETE @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public", "return": "Response", "signature": "Response deleteLicense(@Auth final DbCredential credential,\n                                  @PathParam(\"gavc\") final String gavc,\n                                  @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseString)", "full_signature": "@DELETE @Path(\"/{gavc}\" + ServerAPI.GET_LICENSES) public Response deleteLicense(@Auth final DbCredential credential,\n                                  @PathParam(\"gavc\") final String gavc,\n                                  @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseString)", "class_method_signature": "ArtifactResource.deleteLicense(@Auth final DbCredential credential,\n                                  @PathParam(\"gavc\") final String gavc,\n                                  @QueryParam(ServerAPI.LICENSE_ID_PARAM) final String licenseString)", "testcase": false, "constructor": false}, {"identifier": "getModule", "parameters": "(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_MODULE) public", "return": "Response", "signature": "Response getModule(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_MODULE) public Response getModule(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getModule(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_ORGANIZATION) public", "return": "Response", "signature": "Response getOrganization(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{gavc}\" + ServerAPI.GET_ORGANIZATION) public Response getOrganization(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getOrganization(@PathParam(\"gavc\") final String gavc, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(@Context final UriInfo uriInfo)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(ServerAPI.GET_ALL) public", "return": "Response", "signature": "Response getAll(@Context final UriInfo uriInfo)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(ServerAPI.GET_ALL) public Response getAll(@Context final UriInfo uriInfo)", "class_method_signature": "ArtifactResource.getAll(@Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "initGrapesSender", "parameters": "(Properties properties)", "modifiers": "private", "return": "void", "signature": "void initGrapesSender(Properties properties)", "full_signature": "private void initGrapesSender(Properties properties)", "class_method_signature": "ArtifactResource.initGrapesSender(Properties properties)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/resources/ArtifactResource.java"}, "focal_method": {"identifier": "isPromoted", "parameters": "(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/isPromoted\") public", "return": "Response", "body": "@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Path(\"/isPromoted\")\n    public Response isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location) {\n\n        LOG.info(\"Got a get artifact promotion request\");\n    \t\n    \t// Validating request\n        final ArtifactQuery query = new ArtifactQuery(user, stage, filename, sha256, type, location);\n        DataValidator.validate(query);\n\n        if(LOG.isInfoEnabled()) {\n            LOG.info(String.format(\"Artifact validation request. Details [%s]\", query.toString()));\n        }\n        \n        // Validating type of request file\n        final GrapesServerConfig cfg = getConfig();\n        final List<String> validatedTypes = cfg.getExternalValidatedTypes();\n\n        if(!validatedTypes.contains(type)) {\n            return Response.ok(buildArtifactNotSupportedResponse(validatedTypes)).status(HttpStatus.UNPROCESSABLE_ENTITY_422).build();\n        }\n\n        final DbArtifact dbArtifact = getArtifactHandler().getArtifactUsingSHA256(sha256);\n\n        //\n        // No such artifact was identified in the underlying data structure\n        //\n        if(dbArtifact == null) {\n            final String jiraLink = buildArtifactNotificationJiraLink(query);\n\n            sender.send(cfg.getArtifactNotificationRecipients(),\n                    buildArtifactValidationSubject(filename),\n                    buildArtifactValidationBody(query, \"N/A\"));  // No Jenkins job if not artifact\n\n            return Response.ok(buildArtifactNotKnown(query, jiraLink)).status(HttpStatus.NOT_FOUND_404).build();\n        }\n\n        final ArtifactPromotionStatus promotionStatus = new ArtifactPromotionStatus();\n        promotionStatus.setPromoted(dbArtifact.isPromoted());\n\n        // If artifact is promoted\n        if(dbArtifact.isPromoted()){\n            promotionStatus.setMessage(Messages.get(ARTIFACT_VALIDATION_IS_PROMOTED));\n            return Response.ok(promotionStatus).build();\n        } else {\n\n            final String jenkinsJobInfo = getArtifactHandler().getModuleJenkinsJobInfo(dbArtifact);\n            \n            promotionStatus.setMessage(buildArtifactNotPromotedYetResponse(query, jenkinsJobInfo.isEmpty() ? \"<i>(Link to Jenkins job not found)</i>\" : jenkinsJobInfo));\n\n            // If someone just did not promote the artifact, don't spam the support with more emails\n        }\n\n        return Response.ok(promotionStatus).build();\n    }", "signature": "Response isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @Path(\"/isPromoted\") public Response isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "class_method_signature": "ArtifactResource.isPromoted(@QueryParam(\"user\") final String user,\n                               @QueryParam(\"stage\") final int stage,\n                               @QueryParam(\"name\") final String filename,\n                               @QueryParam(\"sha256\") final String sha256,\n                               @QueryParam(\"type\") final String type,\n                               @QueryParam(\"location\") final String location)", "testcase": false, "constructor": false, "invocations": ["info", "validate", "isInfoEnabled", "info", "format", "toString", "getConfig", "getExternalValidatedTypes", "contains", "build", "status", "ok", "buildArtifactNotSupportedResponse", "getArtifactUsingSHA256", "getArtifactHandler", "buildArtifactNotificationJiraLink", "send", "getArtifactNotificationRecipients", "buildArtifactValidationSubject", "buildArtifactValidationBody", "build", "status", "ok", "buildArtifactNotKnown", "setPromoted", "isPromoted", "isPromoted", "setMessage", "get", "build", "ok", "getModuleJenkinsJobInfo", "getArtifactHandler", "setMessage", "buildArtifactNotPromotedYetResponse", "isEmpty", "build", "ok"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}