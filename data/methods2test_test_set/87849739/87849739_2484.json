{"test_class": {"identifier": "RetrieveThingsLiveCommandImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<ThingId> thingIds;", "modifier": "private static", "type": "List<ThingId>", "declarator": "thingIds", "var_name": "thingIds"}, {"original_string": "private RetrieveThings retrieveThingTwinCommand;", "modifier": "private", "type": "RetrieveThings", "declarator": "retrieveThingTwinCommand", "var_name": "retrieveThingTwinCommand"}, {"original_string": "private RetrieveThingsLiveCommand underTest;", "modifier": "private", "type": "RetrieveThingsLiveCommand", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/live/src/test/java/org/eclipse/ditto/signals/commands/live/query/RetrieveThingsLiveCommandImplTest.java"}, "test_case": {"identifier": "tryToGetRetrieveThingsLiveCommandForNull", "parameters": "()", "modifiers": "@SuppressWarnings(\"ConstantConditions\") @Test public", "return": "void", "body": "@SuppressWarnings(\"ConstantConditions\")\n    @Test\n    public void tryToGetRetrieveThingsLiveCommandForNull() {\n        assertThatExceptionOfType(NullPointerException.class)\n                .isThrownBy(() -> RetrieveThingsLiveCommandImpl.of(null))\n                .withMessage(MessageFormat.format(\"The {0} must not be null!\", \"command\"))\n                .withNoCause();\n    }", "signature": "void tryToGetRetrieveThingsLiveCommandForNull()", "full_signature": "@SuppressWarnings(\"ConstantConditions\") @Test public void tryToGetRetrieveThingsLiveCommandForNull()", "class_method_signature": "RetrieveThingsLiveCommandImplTest.tryToGetRetrieveThingsLiveCommandForNull()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatExceptionOfType", "of", "format"]}, "focal_class": {"identifier": "RetrieveThingsLiveCommandImpl", "superclass": "extends AbstractQueryLiveCommand<RetrieveThingsLiveCommand,\n        RetrieveThingsLiveCommandAnswerBuilder>", "interfaces": "implements RetrieveThingsLiveCommand", "fields": [{"original_string": "private final List<ThingId> thingIds;", "modifier": "private final", "type": "List<ThingId>", "declarator": "thingIds", "var_name": "thingIds"}, {"original_string": "@Nullable private final String namespace;", "modifier": "@Nullable private final", "type": "String", "declarator": "namespace", "var_name": "namespace"}], "methods": [{"identifier": "RetrieveThingsLiveCommandImpl", "parameters": "(final RetrieveThings command)", "modifiers": "private", "return": "", "signature": " RetrieveThingsLiveCommandImpl(final RetrieveThings command)", "full_signature": "private  RetrieveThingsLiveCommandImpl(final RetrieveThings command)", "class_method_signature": "RetrieveThingsLiveCommandImpl.RetrieveThingsLiveCommandImpl(final RetrieveThings command)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Command<?> command)", "modifiers": "@Nonnull public static", "return": "RetrieveThingsLiveCommandImpl", "signature": "RetrieveThingsLiveCommandImpl of(final Command<?> command)", "full_signature": "@Nonnull public static RetrieveThingsLiveCommandImpl of(final Command<?> command)", "class_method_signature": "RetrieveThingsLiveCommandImpl.of(final Command<?> command)", "testcase": false, "constructor": false}, {"identifier": "getThingEntityIds", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "List<ThingId>", "signature": "List<ThingId> getThingEntityIds()", "full_signature": "@Nonnull @Override public List<ThingId> getThingEntityIds()", "class_method_signature": "RetrieveThingsLiveCommandImpl.getThingEntityIds()", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Optional<String>", "signature": "Optional<String> getNamespace()", "full_signature": "@Nonnull @Override public Optional<String> getNamespace()", "class_method_signature": "RetrieveThingsLiveCommandImpl.getNamespace()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "RetrieveThingsLiveCommand", "signature": "RetrieveThingsLiveCommand setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public RetrieveThingsLiveCommand setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "RetrieveThingsLiveCommandImpl.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "answer", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "RetrieveThingsLiveCommandAnswerBuilder", "signature": "RetrieveThingsLiveCommandAnswerBuilder answer()", "full_signature": "@Nonnull @Override public RetrieveThingsLiveCommandAnswerBuilder answer()", "class_method_signature": "RetrieveThingsLiveCommandImpl.answer()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@Nonnull @Override public String toString()", "class_method_signature": "RetrieveThingsLiveCommandImpl.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/live/src/main/java/org/eclipse/ditto/signals/commands/live/query/RetrieveThingsLiveCommandImpl.java"}, "focal_method": {"identifier": "of", "parameters": "(final Command<?> command)", "modifiers": "@Nonnull public static", "return": "RetrieveThingsLiveCommandImpl", "body": "@Nonnull\n    public static RetrieveThingsLiveCommandImpl of(final Command<?> command) {\n        return new RetrieveThingsLiveCommandImpl((RetrieveThings) command);\n    }", "signature": "RetrieveThingsLiveCommandImpl of(final Command<?> command)", "full_signature": "@Nonnull public static RetrieveThingsLiveCommandImpl of(final Command<?> command)", "class_method_signature": "RetrieveThingsLiveCommandImpl.of(final Command<?> command)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}