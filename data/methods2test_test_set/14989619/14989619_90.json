{"test_class": {"identifier": "TotalSolarRadiationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double DELTA = 0.001;", "modifier": "private static final", "type": "double", "declarator": "DELTA = 0.001", "var_name": "DELTA"}], "file": "server/src/test/java/org/jvalue/ods/processor/adapter/domain/weather/models/extended/TotalSolarRadiationTest.java"}, "test_case": {"identifier": "testToWattPerHourPerSquareMeter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testToWattPerHourPerSquareMeter() {\n\t\tdouble joulePerCm2 = 70.8;\n\t\tTotalSolarRadiation solar = new TotalSolarRadiation(joulePerCm2, RadiationType.JOULE_PER_SQUARE_CENTIMETER);\n\n\t\tAssert.assertEquals(196.66, solar.toWattPerHourPerSquareMeter(), DELTA);\n\t}", "signature": "void testToWattPerHourPerSquareMeter()", "full_signature": "@Test public void testToWattPerHourPerSquareMeter()", "class_method_signature": "TotalSolarRadiationTest.testToWattPerHourPerSquareMeter()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toWattPerHourPerSquareMeter"]}, "focal_class": {"identifier": "TotalSolarRadiation", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double value;", "modifier": "private final", "type": "double", "declarator": "value", "var_name": "value"}, {"original_string": "private final RadiationType type;", "modifier": "private final", "type": "RadiationType", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "TotalSolarRadiation", "parameters": "(\n\t\t@JsonProperty(\"value\") double value,\n\t\t@JsonProperty(\"type\") RadiationType type)", "modifiers": "@JsonCreator public", "return": "", "signature": " TotalSolarRadiation(\n\t\t@JsonProperty(\"value\") double value,\n\t\t@JsonProperty(\"type\") RadiationType type)", "full_signature": "@JsonCreator public  TotalSolarRadiation(\n\t\t@JsonProperty(\"value\") double value,\n\t\t@JsonProperty(\"type\") RadiationType type)", "class_method_signature": "TotalSolarRadiation.TotalSolarRadiation(\n\t\t@JsonProperty(\"value\") double value,\n\t\t@JsonProperty(\"type\") RadiationType type)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getValue()", "full_signature": "public double getValue()", "class_method_signature": "TotalSolarRadiation.getValue()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "RadiationType", "signature": "RadiationType getType()", "full_signature": "public RadiationType getType()", "class_method_signature": "TotalSolarRadiation.getType()", "testcase": false, "constructor": false}, {"identifier": "toWattPerHourPerSquareMeter", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double toWattPerHourPerSquareMeter()", "full_signature": "public double toWattPerHourPerSquareMeter()", "class_method_signature": "TotalSolarRadiation.toWattPerHourPerSquareMeter()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TotalSolarRadiation.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TotalSolarRadiation.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/adapter/domain/weather/models/extended/TotalSolarRadiation.java"}, "focal_method": {"identifier": "toWattPerHourPerSquareMeter", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double toWattPerHourPerSquareMeter() {\n\t\tdouble value = getType().toWattPerSquareMeter(getValue(), 3600);\n\t\treturn Math.floor(value * 100) / 100;\n\t}", "signature": "double toWattPerHourPerSquareMeter()", "full_signature": "public double toWattPerHourPerSquareMeter()", "class_method_signature": "TotalSolarRadiation.toWattPerHourPerSquareMeter()", "testcase": false, "constructor": false, "invocations": ["toWattPerSquareMeter", "getType", "getValue", "floor"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}