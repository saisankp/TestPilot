{"test_class": {"identifier": "AccessTokenServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private IAccessTokenService accessTokenService;", "modifier": "@Autowired\n    private", "type": "IAccessTokenService", "declarator": "accessTokenService", "var_name": "accessTokenService"}], "file": "storage-service/src/test/java/com/stnetix/ariaddna/persistence/services/AccessTokenServiceImplTest.java"}, "test_case": {"identifier": "saveAccessTokenTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveAccessTokenTest() {\n        AccessTokenDTO accessTokenDTO = new AccessTokenDTO();\n        UUID uuid = UUID.randomUUID();\n        accessTokenDTO.setUuid(uuid.toString());\n\n        AccessTokenDTO savedAccessToken = accessTokenService.saveToken(accessTokenDTO);\n        Assert.assertNotNull(savedAccessToken);\n        Assert.assertEquals(accessTokenDTO.getUuid(), savedAccessToken.getUuid());\n    }", "signature": "void saveAccessTokenTest()", "full_signature": "@Test public void saveAccessTokenTest()", "class_method_signature": "AccessTokenServiceImplTest.saveAccessTokenTest()", "testcase": true, "constructor": false, "invocations": ["randomUUID", "setUuid", "toString", "saveToken", "assertNotNull", "assertEquals", "getUuid", "getUuid"]}, "focal_class": {"identifier": "AccessTokenServiceImpl", "superclass": "", "interfaces": "implements IAccessTokenService", "fields": [{"original_string": "private AccessTokenTransformer transformer;", "modifier": "private", "type": "AccessTokenTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Autowired\n    private AccessTokenRepository repository;", "modifier": "@Autowired\n    private", "type": "AccessTokenRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "AccessTokenServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " AccessTokenServiceImpl()", "full_signature": "public  AccessTokenServiceImpl()", "class_method_signature": "AccessTokenServiceImpl.AccessTokenServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "saveToken", "parameters": "(AccessTokenDTO accessTokenDTO)", "modifiers": "@Override public", "return": "AccessTokenDTO", "signature": "AccessTokenDTO saveToken(AccessTokenDTO accessTokenDTO)", "full_signature": "@Override public AccessTokenDTO saveToken(AccessTokenDTO accessTokenDTO)", "class_method_signature": "AccessTokenServiceImpl.saveToken(AccessTokenDTO accessTokenDTO)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "@Override public", "return": "AccessTokenDTO", "signature": "AccessTokenDTO getToken()", "full_signature": "@Override public AccessTokenDTO getToken()", "class_method_signature": "AccessTokenServiceImpl.getToken()", "testcase": false, "constructor": false}, {"identifier": "getAllAccessTokens", "parameters": "()", "modifiers": "private", "return": "List<AccessTokenDTO>", "signature": "List<AccessTokenDTO> getAllAccessTokens()", "full_signature": "private List<AccessTokenDTO> getAllAccessTokens()", "class_method_signature": "AccessTokenServiceImpl.getAllAccessTokens()", "testcase": false, "constructor": false}], "file": "storage-service/src/main/java/com/stnetix/ariaddna/persistence/services/AccessTokenServiceImpl.java"}, "focal_method": {"identifier": "saveToken", "parameters": "(AccessTokenDTO accessTokenDTO)", "modifiers": "@Override public", "return": "AccessTokenDTO", "body": "@Override\n    public AccessTokenDTO saveToken(AccessTokenDTO accessTokenDTO) {\n        AccessToken accessToken = transformer.accessTokenDTOToEntity(accessTokenDTO);\n        return transformer.accessTokenEntityToDTO(repository.save(accessToken));\n    }", "signature": "AccessTokenDTO saveToken(AccessTokenDTO accessTokenDTO)", "full_signature": "@Override public AccessTokenDTO saveToken(AccessTokenDTO accessTokenDTO)", "class_method_signature": "AccessTokenServiceImpl.saveToken(AccessTokenDTO accessTokenDTO)", "testcase": false, "constructor": false, "invocations": ["accessTokenDTOToEntity", "accessTokenEntityToDTO", "save"]}, "repository": {"repo_id": 73354878, "url": "https://github.com/StnetixDevTeam/ariADDna", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 11, "size": 971, "license": "licensed"}}