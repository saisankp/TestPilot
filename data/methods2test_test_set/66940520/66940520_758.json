{"test_class": {"identifier": "PageRangeTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-support/dhis-support-commons/src/test/java/org/hisp/dhis/commons/util/PageRangeTest.java"}, "test_case": {"identifier": "testGetPages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPages()\n    {\n        PageRange range = new PageRange( 12 ).setPageSize( 5 );\n        \n        List<int[]> pages = range.getPages();\n        \n        assertEquals( 3, pages.size() );\n        assertEquals( 0, pages.get( 0 )[0] );\n        assertEquals( 5, pages.get( 0 )[1] );\n        assertEquals( 5, pages.get( 1 )[0] );\n        assertEquals( 10, pages.get( 1 )[1] );\n        assertEquals( 10, pages.get( 2 )[0] );\n        assertEquals( 12, pages.get( 2 )[1] );\n    }", "signature": "void testGetPages()", "full_signature": "@Test public void testGetPages()", "class_method_signature": "PageRangeTest.testGetPages()", "testcase": true, "constructor": false, "invocations": ["setPageSize", "getPages", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "PageRange", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int fromIndex = 0;", "modifier": "private", "type": "int", "declarator": "fromIndex = 0", "var_name": "fromIndex"}, {"original_string": "private int toIndex = 0;", "modifier": "private", "type": "int", "declarator": "toIndex = 0", "var_name": "toIndex"}, {"original_string": "private int values;", "modifier": "private", "type": "int", "declarator": "values", "var_name": "values"}, {"original_string": "private int pageSize;", "modifier": "private", "type": "int", "declarator": "pageSize", "var_name": "pageSize"}], "methods": [{"identifier": "PageRange", "parameters": "()", "modifiers": "protected", "return": "", "signature": " PageRange()", "full_signature": "protected  PageRange()", "class_method_signature": "PageRange.PageRange()", "testcase": false, "constructor": true}, {"identifier": "PageRange", "parameters": "( int values )", "modifiers": "public", "return": "", "signature": " PageRange( int values )", "full_signature": "public  PageRange( int values )", "class_method_signature": "PageRange.PageRange( int values )", "testcase": false, "constructor": true}, {"identifier": "setPageSize", "parameters": "( int pageSize )", "modifiers": "public", "return": "PageRange", "signature": "PageRange setPageSize( int pageSize )", "full_signature": "public PageRange setPageSize( int pageSize )", "class_method_signature": "PageRange.setPageSize( int pageSize )", "testcase": false, "constructor": false}, {"identifier": "setPages", "parameters": "( int pages )", "modifiers": "public", "return": "PageRange", "signature": "PageRange setPages( int pages )", "full_signature": "public PageRange setPages( int pages )", "class_method_signature": "PageRange.setPages( int pages )", "testcase": false, "constructor": false}, {"identifier": "nextPage", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean nextPage()", "full_signature": "public boolean nextPage()", "class_method_signature": "PageRange.nextPage()", "testcase": false, "constructor": false}, {"identifier": "pageCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int pageCount()", "full_signature": "public int pageCount()", "class_method_signature": "PageRange.pageCount()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "PageRange.reset()", "testcase": false, "constructor": false}, {"identifier": "getFromIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFromIndex()", "full_signature": "public int getFromIndex()", "class_method_signature": "PageRange.getFromIndex()", "testcase": false, "constructor": false}, {"identifier": "getToIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getToIndex()", "full_signature": "public int getToIndex()", "class_method_signature": "PageRange.getToIndex()", "testcase": false, "constructor": false}, {"identifier": "getPageSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageSize()", "full_signature": "public int getPageSize()", "class_method_signature": "PageRange.getPageSize()", "testcase": false, "constructor": false}, {"identifier": "getPages", "parameters": "()", "modifiers": "public", "return": "List<int[]>", "signature": "List<int[]> getPages()", "full_signature": "public List<int[]> getPages()", "class_method_signature": "PageRange.getPages()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-support/dhis-support-commons/src/main/java/org/hisp/dhis/commons/util/PageRange.java"}, "focal_method": {"identifier": "getPages", "parameters": "()", "modifiers": "public", "return": "List<int[]>", "body": "public List<int[]> getPages()\n    {\n        List<int[]> pages = new ArrayList<>();\n\n        while ( nextPage() )\n        {\n            int[] range = { getFromIndex(), getToIndex() };\n            pages.add( range );\n        }\n\n        reset();\n\n        return pages;\n    }", "signature": "List<int[]> getPages()", "full_signature": "public List<int[]> getPages()", "class_method_signature": "PageRange.getPages()", "testcase": false, "constructor": false, "invocations": ["nextPage", "getFromIndex", "getToIndex", "add", "reset"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}