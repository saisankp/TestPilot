{"test_class": {"identifier": "GlobalAttributeDefinitionDaoHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private GlobalAttributeDefinitionDaoHelper globalAttributeDefinitionDaoHelper;", "modifier": "@InjectMocks\n    private", "type": "GlobalAttributeDefinitionDaoHelper", "declarator": "globalAttributeDefinitionDaoHelper", "var_name": "globalAttributeDefinitionDaoHelper"}, {"original_string": "@Mock\n    private GlobalAttributeDefinitionDao globalAttributeDefinitionDao;", "modifier": "@Mock\n    private", "type": "GlobalAttributeDefinitionDao", "declarator": "globalAttributeDefinitionDao", "var_name": "globalAttributeDefinitionDao"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/GlobalAttributeDefinitionDaoHelperTest.java"}, "test_case": {"identifier": "testValidateGlobalAttributeDefinitionNoExistsEntityExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateGlobalAttributeDefinitionNoExistsEntityExists()\n    {\n        // Create a global attribute definition key.\n        GlobalAttributeDefinitionKey globalAttributeDefinitionKey =\n            new GlobalAttributeDefinitionKey(GLOBAL_ATTRIBUTE_DEFINITON_LEVEL, GLOBAL_ATTRIBUTE_DEFINITON_NAME);\n\n        // Create a global attribute definition entity.\n        GlobalAttributeDefinitionEntity globalAttributeDefinitionEntity = new GlobalAttributeDefinitionEntity();\n\n        // Mock calls to external methods.\n        when(globalAttributeDefinitionDao.getGlobalAttributeDefinitionByKey(globalAttributeDefinitionKey)).thenReturn(globalAttributeDefinitionEntity);\n\n        // Try to call the method under test.\n        try\n        {\n            globalAttributeDefinitionDaoHelper.validateGlobalAttributeDefinitionNoExists(globalAttributeDefinitionKey);\n            fail();\n        }\n        catch (AlreadyExistsException e)\n        {\n            assertEquals(String.format(\"Unable to create global attribute definition with global attribute definition level \\\"%s\\\" \" +\n                \"and global attribute definition name \\\"%s\\\" because it already exists.\", globalAttributeDefinitionKey.getGlobalAttributeDefinitionLevel(),\n                globalAttributeDefinitionKey.getGlobalAttributeDefinitionName()), e.getMessage());\n        }\n\n        // Verify the external calls.\n        verify(globalAttributeDefinitionDao).getGlobalAttributeDefinitionByKey(globalAttributeDefinitionKey);\n        verifyNoMoreInteractions(globalAttributeDefinitionDao);\n    }", "signature": "void testValidateGlobalAttributeDefinitionNoExistsEntityExists()", "full_signature": "@Test public void testValidateGlobalAttributeDefinitionNoExistsEntityExists()", "class_method_signature": "GlobalAttributeDefinitionDaoHelperTest.testValidateGlobalAttributeDefinitionNoExistsEntityExists()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getGlobalAttributeDefinitionByKey", "validateGlobalAttributeDefinitionNoExists", "fail", "assertEquals", "format", "getGlobalAttributeDefinitionLevel", "getGlobalAttributeDefinitionName", "getMessage", "getGlobalAttributeDefinitionByKey", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "GlobalAttributeDefinitionDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private GlobalAttributeDefinitionDao globalAttributeDefinitionDao;", "modifier": "@Autowired\n    private", "type": "GlobalAttributeDefinitionDao", "declarator": "globalAttributeDefinitionDao", "var_name": "globalAttributeDefinitionDao"}], "methods": [{"identifier": "getGlobalAttributeDefinitionEntity", "parameters": "(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "modifiers": "public", "return": "GlobalAttributeDefinitionEntity", "signature": "GlobalAttributeDefinitionEntity getGlobalAttributeDefinitionEntity(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "full_signature": "public GlobalAttributeDefinitionEntity getGlobalAttributeDefinitionEntity(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "class_method_signature": "GlobalAttributeDefinitionDaoHelper.getGlobalAttributeDefinitionEntity(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "testcase": false, "constructor": false}, {"identifier": "validateGlobalAttributeDefinitionNoExists", "parameters": "(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "modifiers": "public", "return": "void", "signature": "void validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "full_signature": "public void validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "class_method_signature": "GlobalAttributeDefinitionDaoHelper.validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "testcase": false, "constructor": false}, {"identifier": "getAllowedAttributeValues", "parameters": "(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAllowedAttributeValues(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "full_signature": "public List<String> getAllowedAttributeValues(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "class_method_signature": "GlobalAttributeDefinitionDaoHelper.getAllowedAttributeValues(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/GlobalAttributeDefinitionDaoHelper.java"}, "focal_method": {"identifier": "validateGlobalAttributeDefinitionNoExists", "parameters": "(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "modifiers": "public", "return": "void", "body": "public void validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey) throws AlreadyExistsException\n    {\n        // Validate that the global attribute definition entity does not already exist.\n        if (globalAttributeDefinitionDao.getGlobalAttributeDefinitionByKey(globalAttributeDefinitionKey) != null)\n        {\n            throw new AlreadyExistsException(String.format(\"Unable to create global attribute definition with global attribute definition level \\\"%s\\\" and \" +\n                    \"global attribute definition name \\\"%s\\\" because it already exists.\",\n                globalAttributeDefinitionKey.getGlobalAttributeDefinitionLevel(), globalAttributeDefinitionKey.getGlobalAttributeDefinitionName()));\n        }\n    }", "signature": "void validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "full_signature": "public void validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "class_method_signature": "GlobalAttributeDefinitionDaoHelper.validateGlobalAttributeDefinitionNoExists(GlobalAttributeDefinitionKey globalAttributeDefinitionKey)", "testcase": false, "constructor": false, "invocations": ["getGlobalAttributeDefinitionByKey", "format", "getGlobalAttributeDefinitionLevel", "getGlobalAttributeDefinitionName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}