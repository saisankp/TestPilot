{"test_class": {"identifier": "SpringDigestPasswordValidationCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpringDigestPasswordValidationCallbackHandler callbackHandler;", "modifier": "private", "type": "SpringDigestPasswordValidationCallbackHandler", "declarator": "callbackHandler", "var_name": "callbackHandler"}, {"original_string": "private UserDetailsService userDetailsService;", "modifier": "private", "type": "UserDetailsService", "declarator": "userDetailsService", "var_name": "userDetailsService"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private PasswordValidationCallback callback;", "modifier": "private", "type": "PasswordValidationCallback", "declarator": "callback", "var_name": "callback"}], "file": "spring-ws-security/src/test/java/org/springframework/ws/soap/security/xwss/callback/SpringDigestPasswordValidationCallbackHandlerTest.java"}, "test_case": {"identifier": "testAuthenticateUserDigestValidInvalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAuthenticateUserDigestValidInvalid() throws Exception {\n\t\tUser user = new User(username, \"Big bird\", true, true, true, true, Collections.<GrantedAuthority> emptyList());\n\t\texpect(userDetailsService.loadUserByUsername(username)).andReturn(user);\n\n\t\treplay(userDetailsService);\n\n\t\tcallbackHandler.handleInternal(callback);\n\t\tboolean authenticated = callback.getResult();\n\t\tAssert.assertFalse(\"Authenticated\", authenticated);\n\t\tAssert.assertNull(\"Authentication created\", SecurityContextHolder.getContext().getAuthentication());\n\n\t\tverify(userDetailsService);\n\t}", "signature": "void testAuthenticateUserDigestValidInvalid()", "full_signature": "@Test public void testAuthenticateUserDigestValidInvalid()", "class_method_signature": "SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid()", "testcase": true, "constructor": false, "invocations": ["emptyList", "andReturn", "expect", "loadUserByUsername", "replay", "handleInternal", "getResult", "assertFalse", "assertNull", "getAuthentication", "getContext", "verify"]}, "focal_class": {"identifier": "SpringDigestPasswordValidationCallbackHandler", "superclass": "extends AbstractCallbackHandler", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private UserCache userCache = new NullUserCache();", "modifier": "private", "type": "UserCache", "declarator": "userCache = new NullUserCache()", "var_name": "userCache"}, {"original_string": "private UserDetailsService userDetailsService;", "modifier": "private", "type": "UserDetailsService", "declarator": "userDetailsService", "var_name": "userDetailsService"}], "methods": [{"identifier": "setUserCache", "parameters": "(UserCache userCache)", "modifiers": "public", "return": "void", "signature": "void setUserCache(UserCache userCache)", "full_signature": "public void setUserCache(UserCache userCache)", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.setUserCache(UserCache userCache)", "testcase": false, "constructor": false}, {"identifier": "setUserDetailsService", "parameters": "(UserDetailsService userDetailsService)", "modifiers": "public", "return": "void", "signature": "void setUserDetailsService(UserDetailsService userDetailsService)", "full_signature": "public void setUserDetailsService(UserDetailsService userDetailsService)", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.setUserDetailsService(UserDetailsService userDetailsService)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false}, {"identifier": "loadUserDetails", "parameters": "(String username)", "modifiers": "private", "return": "UserDetails", "signature": "UserDetails loadUserDetails(String username)", "full_signature": "private UserDetails loadUserDetails(String username)", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.loadUserDetails(String username)", "testcase": false, "constructor": false}], "file": "spring-ws-security/src/main/java/org/springframework/ws/soap/security/xwss/callback/SpringDigestPasswordValidationCallbackHandler.java"}, "focal_method": {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void handleInternal(Callback callback) throws IOException, UnsupportedCallbackException {\n\t\tif (callback instanceof PasswordValidationCallback) {\n\t\t\tPasswordValidationCallback passwordCallback = (PasswordValidationCallback) callback;\n\t\t\tif (passwordCallback.getRequest() instanceof PasswordValidationCallback.DigestPasswordRequest) {\n\t\t\t\tPasswordValidationCallback.DigestPasswordRequest request = (PasswordValidationCallback.DigestPasswordRequest) passwordCallback\n\t\t\t\t\t\t.getRequest();\n\t\t\t\tString username = request.getUsername();\n\t\t\t\tUserDetails user = loadUserDetails(username);\n\t\t\t\tif (user != null) {\n\t\t\t\t\tSpringSecurityUtils.checkUserValidity(user);\n\t\t\t\t\trequest.setPassword(user.getPassword());\n\t\t\t\t}\n\t\t\t\tSpringSecurityDigestPasswordValidator validator = new SpringSecurityDigestPasswordValidator(user);\n\t\t\t\tpasswordCallback.setValidator(validator);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (callback instanceof TimestampValidationCallback) {\n\t\t\tTimestampValidationCallback timestampCallback = (TimestampValidationCallback) callback;\n\t\t\ttimestampCallback.setValidator(new DefaultTimestampValidator());\n\n\t\t} else if (callback instanceof CleanupCallback) {\n\t\t\tSecurityContextHolder.clearContext();\n\t\t\treturn;\n\t\t}\n\t\tthrow new UnsupportedCallbackException(callback);\n\t}", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringDigestPasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false, "invocations": ["getRequest", "getRequest", "getUsername", "loadUserDetails", "checkUserValidity", "setPassword", "getPassword", "setValidator", "setValidator", "clearContext"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}