{"test_class": {"identifier": "QueryAtomContainerCreatorTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "base/isomorphism/src/test/java/org/openscience/cdk/isomorphism/matchers/QueryAtomContainerCreatorTest.java"}, "test_case": {"identifier": "test12DimethylBenzene", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test12DimethylBenzene() throws Exception {\n        IChemObjectBuilder builder = SilentChemObjectBuilder.getInstance();\n        IAtomContainer molecule = builder.newInstance(IAtomContainer.class);\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        molecule.addBond(0, 1, IBond.Order.SINGLE);\n        molecule.addBond(1, 2, IBond.Order.DOUBLE);\n        molecule.addBond(2, 3, IBond.Order.SINGLE);\n        molecule.addBond(3, 4, IBond.Order.DOUBLE);\n        molecule.addBond(4, 5, IBond.Order.SINGLE);\n        molecule.addBond(5, 0, IBond.Order.DOUBLE);\n        molecule.addBond(0, 6, IBond.Order.SINGLE);\n        molecule.addBond(1, 7, IBond.Order.SINGLE);\n\n        // 2,3-dimethyl-1,3-butadiene matches\n        IAtomContainer query1 = builder.newInstance(IAtomContainer.class);\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query1.addBond(0, 1, IBond.Order.SINGLE);\n        query1.addBond(1, 2, IBond.Order.DOUBLE);\n        query1.addBond(3, 0, IBond.Order.DOUBLE);\n        query1.addBond(0, 4, IBond.Order.SINGLE);\n        query1.addBond(1, 5, IBond.Order.SINGLE);\n        QueryAtomContainer queryContainer1 = QueryAtomContainerCreator.createSymbolAndBondOrderQueryContainer(query1);\n        Assert.assertTrue(new UniversalIsomorphismTester().isSubgraph(molecule, queryContainer1));\n\n        // 2,3-dimethyl-2-butene does not match\n        IAtomContainer query2 = builder.newInstance(IAtomContainer.class);\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        query2.addBond(0, 1, IBond.Order.DOUBLE);\n        query2.addBond(1, 2, IBond.Order.SINGLE);\n        query2.addBond(3, 0, IBond.Order.SINGLE);\n        query2.addBond(0, 4, IBond.Order.SINGLE);\n        query2.addBond(1, 5, IBond.Order.SINGLE);\n        QueryAtomContainer queryContainer2 = QueryAtomContainerCreator.createSymbolAndBondOrderQueryContainer(query2);\n        Assert.assertFalse(new UniversalIsomorphismTester().isSubgraph(molecule, queryContainer2));\n    }", "signature": "void test12DimethylBenzene()", "full_signature": "@Test public void test12DimethylBenzene()", "class_method_signature": "QueryAtomContainerCreatorTest.test12DimethylBenzene()", "testcase": true, "constructor": false, "invocations": ["getInstance", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addBond", "addBond", "addBond", "addBond", "addBond", "addBond", "addBond", "addBond", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addBond", "addBond", "addBond", "addBond", "addBond", "createSymbolAndBondOrderQueryContainer", "assertTrue", "isSubgraph", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addBond", "addBond", "addBond", "addBond", "addBond", "createSymbolAndBondOrderQueryContainer", "assertFalse", "isSubgraph"]}, "focal_class": {"identifier": "QueryAtomContainerCreator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createBasicQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createBasicQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createBasicQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createBasicQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "createSymbolAndBondOrderQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "createSymbolAndChargeQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createSymbolAndChargeQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createSymbolAndChargeQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createSymbolAndChargeQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "createSymbolChargeIDQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createSymbolChargeIDQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createSymbolChargeIDQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createSymbolChargeIDQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "createAnyAtomContainer", "parameters": "(IAtomContainer container, boolean aromaticity)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createAnyAtomContainer(IAtomContainer container, boolean aromaticity)", "full_signature": "public static QueryAtomContainer createAnyAtomContainer(IAtomContainer container, boolean aromaticity)", "class_method_signature": "QueryAtomContainerCreator.createAnyAtomContainer(IAtomContainer container, boolean aromaticity)", "testcase": false, "constructor": false}, {"identifier": "createAnyAtomAnyBondContainer", "parameters": "(IAtomContainer container, boolean aromaticity)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createAnyAtomAnyBondContainer(IAtomContainer container, boolean aromaticity)", "full_signature": "public static QueryAtomContainer createAnyAtomAnyBondContainer(IAtomContainer container, boolean aromaticity)", "class_method_signature": "QueryAtomContainerCreator.createAnyAtomAnyBondContainer(IAtomContainer container, boolean aromaticity)", "testcase": false, "constructor": false}, {"identifier": "createAnyAtomForPseudoAtomQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "signature": "QueryAtomContainer createAnyAtomForPseudoAtomQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createAnyAtomForPseudoAtomQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createAnyAtomForPseudoAtomQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "isSimpleHydrogen", "parameters": "(Expr expr)", "modifiers": "static", "return": "boolean", "signature": "boolean isSimpleHydrogen(Expr expr)", "full_signature": "static boolean isSimpleHydrogen(Expr expr)", "class_method_signature": "QueryAtomContainerCreator.isSimpleHydrogen(Expr expr)", "testcase": false, "constructor": false}, {"identifier": "suppressQueryHydrogens", "parameters": "(IAtomContainer mol)", "modifiers": "public static", "return": "IAtomContainer", "signature": "IAtomContainer suppressQueryHydrogens(IAtomContainer mol)", "full_signature": "public static IAtomContainer suppressQueryHydrogens(IAtomContainer mol)", "class_method_signature": "QueryAtomContainerCreator.suppressQueryHydrogens(IAtomContainer mol)", "testcase": false, "constructor": false}], "file": "base/isomorphism/src/main/java/org/openscience/cdk/isomorphism/matchers/QueryAtomContainerCreator.java"}, "focal_method": {"identifier": "createSymbolAndBondOrderQueryContainer", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "QueryAtomContainer", "body": "public static QueryAtomContainer createSymbolAndBondOrderQueryContainer(IAtomContainer container) {\n        return QueryAtomContainer.create(container,\n                                         Expr.Type.ELEMENT,\n                                         Expr.Type.ORDER);\n    }", "signature": "QueryAtomContainer createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "full_signature": "public static QueryAtomContainer createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "class_method_signature": "QueryAtomContainerCreator.createSymbolAndBondOrderQueryContainer(IAtomContainer container)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}