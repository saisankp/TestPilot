{"test_class": {"identifier": "TestExpirationTimer", "superclass": "", "interfaces": "", "fields": [], "file": "http/src/test/java/com/ning/metrics/eventtracker/TestExpirationTimer.java"}, "test_case": {"identifier": "testCheckExpirationTimer", "parameters": "()", "modifiers": "@Test(groups = \"fast\") public", "return": "void", "body": "@Test(groups = \"fast\")\n    public void testCheckExpirationTimer() throws Exception\n    {\n        final int expirationInMillis = 100000;\n        final ExpirationTimer timer = new ExpirationTimer(expirationInMillis);\n\n        Assert.assertFalse(timer.isExpired());\n        Assert.assertTrue(timer.isExpired(System.currentTimeMillis() + expirationInMillis));\n        // Check the timer is reset\n        Assert.assertFalse(timer.isExpired());\n    }", "signature": "void testCheckExpirationTimer()", "full_signature": "@Test(groups = \"fast\") public void testCheckExpirationTimer()", "class_method_signature": "TestExpirationTimer.testCheckExpirationTimer()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isExpired", "assertTrue", "isExpired", "currentTimeMillis", "assertFalse", "isExpired"]}, "focal_class": {"identifier": "ExpirationTimer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long maxKeepAliveMsecs;", "modifier": "private final", "type": "long", "declarator": "maxKeepAliveMsecs", "var_name": "maxKeepAliveMsecs"}, {"original_string": "private long expirationTime = 0L;", "modifier": "private", "type": "long", "declarator": "expirationTime = 0L", "var_name": "expirationTime"}], "methods": [{"identifier": "ExpirationTimer", "parameters": "(final long max)", "modifiers": "public", "return": "", "signature": " ExpirationTimer(final long max)", "full_signature": "public  ExpirationTimer(final long max)", "class_method_signature": "ExpirationTimer.ExpirationTimer(final long max)", "testcase": false, "constructor": true}, {"identifier": "isExpired", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isExpired()", "full_signature": "public final boolean isExpired()", "class_method_signature": "ExpirationTimer.isExpired()", "testcase": false, "constructor": false}, {"identifier": "isExpired", "parameters": "(final long now)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean isExpired(final long now)", "full_signature": "public synchronized boolean isExpired(final long now)", "class_method_signature": "ExpirationTimer.isExpired(final long now)", "testcase": false, "constructor": false}], "file": "http/src/main/java/com/ning/metrics/eventtracker/ExpirationTimer.java"}, "focal_method": {"identifier": "isExpired", "parameters": "()", "modifiers": "public final", "return": "boolean", "body": "public final boolean isExpired()\n    {\n        return isExpired(System.currentTimeMillis());\n    }", "signature": "boolean isExpired()", "full_signature": "public final boolean isExpired()", "class_method_signature": "ExpirationTimer.isExpired()", "testcase": false, "constructor": false, "invocations": ["isExpired", "currentTimeMillis"]}, "repository": {"repo_id": 1027501, "url": "https://github.com/pierre/eventtracker", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 10, "size": 509, "license": "licensed"}}