{"test_class": {"identifier": "Tuple3ifxTest", "superclass": "extends AbstractTuple3DTest<Tuple3ifx>", "interfaces": "", "fields": [], "file": "advanced/mathfx/src/test/java/org/arakhne/afc/math/geometry/d3/ifx/Tuple3ifxTest.java"}, "test_case": {"identifier": "xProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void xProperty() {\n\t\tIntegerProperty property = this.t.xProperty();\n\t\tassertNotNull(property);\n\t\tIntegerProperty property2 = this.t.xProperty();\n\t\tassertSame(property, property2);\n\t\tassertEquals(1, property.get());\n\t}", "signature": "void xProperty()", "full_signature": "@Test public void xProperty()", "class_method_signature": "Tuple3ifxTest.xProperty()", "testcase": true, "constructor": false, "invocations": ["xProperty", "assertNotNull", "xProperty", "assertSame", "assertEquals", "get"]}, "focal_class": {"identifier": "Tuple3ifx", "superclass": "", "interfaces": "implements Tuple3D<RT>", "fields": [{"original_string": "private static final long serialVersionUID = 3136314939750740492L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3136314939750740492L", "var_name": "serialVersionUID"}, {"original_string": "IntegerProperty x;", "modifier": "", "type": "IntegerProperty", "declarator": "x", "var_name": "x"}, {"original_string": "IntegerProperty y;", "modifier": "", "type": "IntegerProperty", "declarator": "y", "var_name": "y"}, {"original_string": "IntegerProperty z;", "modifier": "", "type": "IntegerProperty", "declarator": "z", "var_name": "z"}], "methods": [{"identifier": "Tuple3ifx", "parameters": "()", "modifiers": "public", "return": "", "signature": " Tuple3ifx()", "full_signature": "public  Tuple3ifx()", "class_method_signature": "Tuple3ifx.Tuple3ifx()", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(IntegerProperty xProperty, IntegerProperty yProperty, IntegerProperty zProperty)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(IntegerProperty xProperty, IntegerProperty yProperty, IntegerProperty zProperty)", "full_signature": "public  Tuple3ifx(IntegerProperty xProperty, IntegerProperty yProperty, IntegerProperty zProperty)", "class_method_signature": "Tuple3ifx.Tuple3ifx(IntegerProperty xProperty, IntegerProperty yProperty, IntegerProperty zProperty)", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(Tuple3D<?> tuple)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(Tuple3D<?> tuple)", "full_signature": "public  Tuple3ifx(Tuple3D<?> tuple)", "class_method_signature": "Tuple3ifx.Tuple3ifx(Tuple3D<?> tuple)", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(int[] tuple)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(int[] tuple)", "full_signature": "public  Tuple3ifx(int[] tuple)", "class_method_signature": "Tuple3ifx.Tuple3ifx(int[] tuple)", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(double[] tuple)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(double[] tuple)", "full_signature": "public  Tuple3ifx(double[] tuple)", "class_method_signature": "Tuple3ifx.Tuple3ifx(double[] tuple)", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(double x, double y, double z)", "full_signature": "public  Tuple3ifx(double x, double y, double z)", "class_method_signature": "Tuple3ifx.Tuple3ifx(double x, double y, double z)", "testcase": false, "constructor": true}, {"identifier": "Tuple3ifx", "parameters": "(int x, int y, int z)", "modifiers": "public", "return": "", "signature": " Tuple3ifx(int x, int y, int z)", "full_signature": "public  Tuple3ifx(int x, int y, int z)", "class_method_signature": "Tuple3ifx.Tuple3ifx(int x, int y, int z)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Pure @Override public", "return": "RT", "signature": "RT clone()", "full_signature": "@SuppressWarnings(\"unchecked\") @Pure @Override public RT clone()", "class_method_signature": "Tuple3ifx.clone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@SuppressWarnings(\"unchecked\") @Pure @Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@SuppressWarnings(\"unchecked\") @Pure @Override public boolean equals(Object object)", "class_method_signature": "Tuple3ifx.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Pure @Override public int hashCode()", "class_method_signature": "Tuple3ifx.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Pure @Override public", "return": "String", "signature": "String toString()", "full_signature": "@Pure @Override public String toString()", "class_method_signature": "Tuple3ifx.toString()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(JsonBuffer buffer)", "modifiers": "@Override public", "return": "void", "signature": "void toJson(JsonBuffer buffer)", "full_signature": "@Override public void toJson(JsonBuffer buffer)", "class_method_signature": "Tuple3ifx.toJson(JsonBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "xProperty", "parameters": "()", "modifiers": "@Pure public", "return": "IntegerProperty", "signature": "IntegerProperty xProperty()", "full_signature": "@Pure public IntegerProperty xProperty()", "class_method_signature": "Tuple3ifx.xProperty()", "testcase": false, "constructor": false}, {"identifier": "yProperty", "parameters": "()", "modifiers": "@Pure public", "return": "IntegerProperty", "signature": "IntegerProperty yProperty()", "full_signature": "@Pure public IntegerProperty yProperty()", "class_method_signature": "Tuple3ifx.yProperty()", "testcase": false, "constructor": false}, {"identifier": "zProperty", "parameters": "()", "modifiers": "@Pure public", "return": "IntegerProperty", "signature": "IntegerProperty zProperty()", "full_signature": "@Pure public IntegerProperty zProperty()", "class_method_signature": "Tuple3ifx.zProperty()", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getX()", "full_signature": "@Override public double getX()", "class_method_signature": "Tuple3ifx.getX()", "testcase": false, "constructor": false}, {"identifier": "ix", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int ix()", "full_signature": "@Override public int ix()", "class_method_signature": "Tuple3ifx.ix()", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(int x)", "modifiers": "@Override public", "return": "void", "signature": "void setX(int x)", "full_signature": "@Override public void setX(int x)", "class_method_signature": "Tuple3ifx.setX(int x)", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(double x)", "modifiers": "@Override public", "return": "void", "signature": "void setX(double x)", "full_signature": "@Override public void setX(double x)", "class_method_signature": "Tuple3ifx.setX(double x)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getY()", "full_signature": "@Override public double getY()", "class_method_signature": "Tuple3ifx.getY()", "testcase": false, "constructor": false}, {"identifier": "iy", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int iy()", "full_signature": "@Override public int iy()", "class_method_signature": "Tuple3ifx.iy()", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(int y)", "modifiers": "@Override public", "return": "void", "signature": "void setY(int y)", "full_signature": "@Override public void setY(int y)", "class_method_signature": "Tuple3ifx.setY(int y)", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(double y)", "modifiers": "@Override public", "return": "void", "signature": "void setY(double y)", "full_signature": "@Override public void setY(double y)", "class_method_signature": "Tuple3ifx.setY(double y)", "testcase": false, "constructor": false}, {"identifier": "getZ", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getZ()", "full_signature": "@Override public double getZ()", "class_method_signature": "Tuple3ifx.getZ()", "testcase": false, "constructor": false}, {"identifier": "iz", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int iz()", "full_signature": "@Override public int iz()", "class_method_signature": "Tuple3ifx.iz()", "testcase": false, "constructor": false}, {"identifier": "setZ", "parameters": "(int z)", "modifiers": "@Override public", "return": "void", "signature": "void setZ(int z)", "full_signature": "@Override public void setZ(int z)", "class_method_signature": "Tuple3ifx.setZ(int z)", "testcase": false, "constructor": false}, {"identifier": "setZ", "parameters": "(double z)", "modifiers": "@Override public", "return": "void", "signature": "void setZ(double z)", "full_signature": "@Override public void setZ(double z)", "class_method_signature": "Tuple3ifx.setZ(double z)", "testcase": false, "constructor": false}], "file": "advanced/mathfx/src/main/java/org/arakhne/afc/math/geometry/d3/ifx/Tuple3ifx.java"}, "focal_method": {"identifier": "xProperty", "parameters": "()", "modifiers": "@Pure public", "return": "IntegerProperty", "body": "@Pure\n\tpublic IntegerProperty xProperty() {\n\t\tif (this.x == null) {\n\t\t\tthis.x = new SimpleIntegerProperty(this, MathFXAttributeNames.X);\n\t\t}\n\t\treturn this.x;\n\t}", "signature": "IntegerProperty xProperty()", "full_signature": "@Pure public IntegerProperty xProperty()", "class_method_signature": "Tuple3ifx.xProperty()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}