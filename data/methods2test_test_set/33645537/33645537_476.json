{"test_class": {"identifier": "BitsToTransformTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BitsToTransform bitsToTransform;", "modifier": "private", "type": "BitsToTransform", "declarator": "bitsToTransform", "var_name": "bitsToTransform"}], "file": "algs/src/test/java/com/github/pedrovgs/problem69/BitsToTransformTest.java"}, "test_case": {"identifier": "shouldReturnZeroIfBothNumbersAreEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnZeroIfBothNumbersAreEquals() {\n    int numA = 7;\n    int numB = 7;\n\n    int numberOfDifferentBits = bitsToTransform.calculate(numA, numB);\n\n    assertEquals(0, numberOfDifferentBits);\n  }", "signature": "void shouldReturnZeroIfBothNumbersAreEquals()", "full_signature": "@Test public void shouldReturnZeroIfBothNumbersAreEquals()", "class_method_signature": "BitsToTransformTest.shouldReturnZeroIfBothNumbersAreEquals()", "testcase": true, "constructor": false, "invocations": ["calculate", "assertEquals"]}, "focal_class": {"identifier": "BitsToTransform", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculate", "parameters": "(int numA, int numB)", "modifiers": "public", "return": "int", "signature": "int calculate(int numA, int numB)", "full_signature": "public int calculate(int numA, int numB)", "class_method_signature": "BitsToTransform.calculate(int numA, int numB)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem69/BitsToTransform.java"}, "focal_method": {"identifier": "calculate", "parameters": "(int numA, int numB)", "modifiers": "public", "return": "int", "body": "public int calculate(int numA, int numB) {\n    int differentBits = 0;\n    for (int XOR = numA ^ numB; XOR != 0; XOR = XOR & (XOR - 1)) {\n      differentBits++;\n    }\n    return differentBits;\n  }", "signature": "int calculate(int numA, int numB)", "full_signature": "public int calculate(int numA, int numB)", "class_method_signature": "BitsToTransform.calculate(int numA, int numB)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}