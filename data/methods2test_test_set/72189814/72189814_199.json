{"test_class": {"identifier": "HaloDataLiteTest", "superclass": "extends HaloRobolectricTest", "interfaces": "", "fields": [{"original_string": "private HaloDataLite mHaloDatabase;", "modifier": "private", "type": "HaloDataLite", "declarator": "mHaloDatabase", "var_name": "mHaloDatabase"}, {"original_string": "private CallbackFlag mCallbackFlag;", "modifier": "private", "type": "CallbackFlag", "declarator": "mCallbackFlag", "var_name": "mCallbackFlag"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "file": "sdk/halo-framework/src/test/java/com/mobgen/halo/android/framework/storage/database/HaloDataLiteTest.java"}, "test_case": {"identifier": "thatCanGetDatabaseSQL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatCanGetDatabaseSQL(){\n        assertThat(mHaloDatabase.getDatabase().getVersion()).isEqualTo(3);\n        assertThat(mHaloDatabase.getReadableDatabase().getVersion()).isEqualTo(3);\n        assertThat(mHaloDatabase.getWritableDatabase().getVersion()).isEqualTo(3);\n    }", "signature": "void thatCanGetDatabaseSQL()", "full_signature": "@Test public void thatCanGetDatabaseSQL()", "class_method_signature": "HaloDataLiteTest.thatCanGetDatabaseSQL()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getVersion", "getDatabase", "isEqualTo", "assertThat", "getVersion", "getReadableDatabase", "isEqualTo", "assertThat", "getVersion", "getWritableDatabase"]}, "focal_class": {"identifier": "HaloDataLite", "superclass": "extends SQLiteOpenHelper", "interfaces": "implements Corruptible", "fields": [{"original_string": "private HaloDatabaseVersionManager mDatabaseVersionManager;", "modifier": "private", "type": "HaloDatabaseVersionManager", "declarator": "mDatabaseVersionManager", "var_name": "mDatabaseVersionManager"}, {"original_string": "private SQLiteDatabase mDatabase;", "modifier": "private", "type": "SQLiteDatabase", "declarator": "mDatabase", "var_name": "mDatabase"}, {"original_string": "private final Context mContext;", "modifier": "private final", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "HaloDataLite", "parameters": "(@NonNull Context context, @NonNull String name, int version, @NonNull HaloDatabaseVersionManager manager, @NonNull HaloDatabaseErrorHandler handler)", "modifiers": "private", "return": "", "signature": " HaloDataLite(@NonNull Context context, @NonNull String name, int version, @NonNull HaloDatabaseVersionManager manager, @NonNull HaloDatabaseErrorHandler handler)", "full_signature": "private  HaloDataLite(@NonNull Context context, @NonNull String name, int version, @NonNull HaloDatabaseVersionManager manager, @NonNull HaloDatabaseErrorHandler handler)", "class_method_signature": "HaloDataLite.HaloDataLite(@NonNull Context context, @NonNull String name, int version, @NonNull HaloDatabaseVersionManager manager, @NonNull HaloDatabaseErrorHandler handler)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "(Context context)", "modifiers": "@Api(2.0) public static", "return": "Builder", "signature": "Builder builder(Context context)", "full_signature": "@Api(2.0) public static Builder builder(Context context)", "class_method_signature": "HaloDataLite.builder(Context context)", "testcase": false, "constructor": false}, {"identifier": "onCreate", "parameters": "(@NonNull SQLiteDatabase db)", "modifiers": "@Override public", "return": "void", "signature": "void onCreate(@NonNull SQLiteDatabase db)", "full_signature": "@Override public void onCreate(@NonNull SQLiteDatabase db)", "class_method_signature": "HaloDataLite.onCreate(@NonNull SQLiteDatabase db)", "testcase": false, "constructor": false}, {"identifier": "onUpgrade", "parameters": "(@NonNull SQLiteDatabase db, int oldVersion, int newVersion)", "modifiers": "@Override public", "return": "void", "signature": "void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion)", "full_signature": "@Override public void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion)", "class_method_signature": "HaloDataLite.onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion)", "testcase": false, "constructor": false}, {"identifier": "getDatabase", "parameters": "()", "modifiers": "@Api(2.0) public synchronized", "return": "SQLiteDatabase", "signature": "SQLiteDatabase getDatabase()", "full_signature": "@Api(2.0) public synchronized SQLiteDatabase getDatabase()", "class_method_signature": "HaloDataLite.getDatabase()", "testcase": false, "constructor": false}, {"identifier": "ensureInitialized", "parameters": "()", "modifiers": "@Api(2.0) public", "return": "void", "signature": "void ensureInitialized()", "full_signature": "@Api(2.0) public void ensureInitialized()", "class_method_signature": "HaloDataLite.ensureInitialized()", "testcase": false, "constructor": false}, {"identifier": "onCorrupted", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onCorrupted()", "full_signature": "@Override public void onCorrupted()", "class_method_signature": "HaloDataLite.onCorrupted()", "testcase": false, "constructor": false}, {"identifier": "deleteDatabase", "parameters": "()", "modifiers": "@Api(1.0) public", "return": "void", "signature": "void deleteDatabase()", "full_signature": "@Api(1.0) public void deleteDatabase()", "class_method_signature": "HaloDataLite.deleteDatabase()", "testcase": false, "constructor": false}, {"identifier": "attachDatabase", "parameters": "(@NonNull String databaseName, @NonNull String aliasName)", "modifiers": "@Api(1.3) public", "return": "void", "signature": "void attachDatabase(@NonNull String databaseName, @NonNull String aliasName)", "full_signature": "@Api(1.3) public void attachDatabase(@NonNull String databaseName, @NonNull String aliasName)", "class_method_signature": "HaloDataLite.attachDatabase(@NonNull String databaseName, @NonNull String aliasName)", "testcase": false, "constructor": false}, {"identifier": "detachDatabase", "parameters": "(@NonNull String aliasName)", "modifiers": "@Api(1.3) public", "return": "void", "signature": "void detachDatabase(@NonNull String aliasName)", "full_signature": "@Api(1.3) public void detachDatabase(@NonNull String aliasName)", "class_method_signature": "HaloDataLite.detachDatabase(@NonNull String aliasName)", "testcase": false, "constructor": false}, {"identifier": "transaction", "parameters": "(@NonNull HaloDataLiteTransaction transaction)", "modifiers": "@Api(2.0) public", "return": "void", "signature": "void transaction(@NonNull HaloDataLiteTransaction transaction)", "full_signature": "@Api(2.0) public void transaction(@NonNull HaloDataLiteTransaction transaction)", "class_method_signature": "HaloDataLite.transaction(@NonNull HaloDataLiteTransaction transaction)", "testcase": false, "constructor": false}], "file": "sdk/halo-framework/src/main/java/com/mobgen/halo/android/framework/storage/database/HaloDataLite.java"}, "focal_method": {"identifier": "getDatabase", "parameters": "()", "modifiers": "@Api(2.0) public synchronized", "return": "SQLiteDatabase", "body": "@Api(2.0)\n    public synchronized SQLiteDatabase getDatabase() {\n        //Singleton instance for the database.\n        if (mDatabase == null) {\n            mDatabase = getWritableDatabase();\n        }\n        return mDatabase;\n    }", "signature": "SQLiteDatabase getDatabase()", "full_signature": "@Api(2.0) public synchronized SQLiteDatabase getDatabase()", "class_method_signature": "HaloDataLite.getDatabase()", "testcase": false, "constructor": false, "invocations": ["getWritableDatabase"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}