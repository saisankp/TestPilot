{"test_class": {"identifier": "StreamDiscovererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NetworkTableInstance ntInstance = NetworkTableInstance.create();", "modifier": "private final", "type": "NetworkTableInstance", "declarator": "ntInstance = NetworkTableInstance.create()", "var_name": "ntInstance"}, {"original_string": "private final NetworkTable rootTable = ntInstance.getTable(\"CameraPublisher\");", "modifier": "private final", "type": "NetworkTable", "declarator": "rootTable = ntInstance.getTable(\"CameraPublisher\")", "var_name": "rootTable"}], "file": "plugins/cameraserver/src/test/java/edu/wpi/first/shuffleboard/plugin/cameraserver/source/StreamDiscovererTest.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClose() {\n    final StreamDiscoverer discoverer = new StreamDiscoverer(rootTable, \"Camera\");\n    String[] urls = {\"foo\", \"bar\"};\n    rootTable.getEntry(\"Camera/streams\").setStringArray(urls);\n    waitForNtEvents();\n\n    discoverer.close();\n\n    rootTable.getEntry(\"Camera/streams\").setStringArray(new String[]{\"bar\", \"foo\"});\n    waitForNtEvents();\n\n    assertArrayEquals(new String[0], discoverer.getUrls());\n  }", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "StreamDiscovererTest.testClose()", "testcase": true, "constructor": false, "invocations": ["setStringArray", "getEntry", "waitForNtEvents", "close", "setStringArray", "getEntry", "waitForNtEvents", "assertArrayEquals", "getUrls"]}, "focal_class": {"identifier": "StreamDiscoverer", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private final NetworkTableEntry streams;", "modifier": "private final", "type": "NetworkTableEntry", "declarator": "streams", "var_name": "streams"}, {"original_string": "private static final String STREAMS_KEY = \"streams\";", "modifier": "private static final", "type": "String", "declarator": "STREAMS_KEY = \"streams\"", "var_name": "STREAMS_KEY"}, {"original_string": "private static final String[] emptyStringArray = new String[0];", "modifier": "private static final", "type": "String[]", "declarator": "emptyStringArray = new String[0]", "var_name": "emptyStringArray"}, {"original_string": "private final AtomicProperty<String[]> urls = new AsyncProperty<>(this, \"urls\", emptyStringArray);", "modifier": "private final", "type": "AtomicProperty<String[]>", "declarator": "urls = new AsyncProperty<>(this, \"urls\", emptyStringArray)", "var_name": "urls"}, {"original_string": "private final int listenerHandle;", "modifier": "private final", "type": "int", "declarator": "listenerHandle", "var_name": "listenerHandle"}], "methods": [{"identifier": "StreamDiscoverer", "parameters": "(NetworkTable publisherTable, String cameraName)", "modifiers": "public", "return": "", "signature": " StreamDiscoverer(NetworkTable publisherTable, String cameraName)", "full_signature": "public  StreamDiscoverer(NetworkTable publisherTable, String cameraName)", "class_method_signature": "StreamDiscoverer.StreamDiscoverer(NetworkTable publisherTable, String cameraName)", "testcase": false, "constructor": true}, {"identifier": "removeCameraProtocols", "parameters": "(String... streams)", "modifiers": "@VisibleForTesting static", "return": "String[]", "signature": "String[] removeCameraProtocols(String... streams)", "full_signature": "@VisibleForTesting static String[] removeCameraProtocols(String... streams)", "class_method_signature": "StreamDiscoverer.removeCameraProtocols(String... streams)", "testcase": false, "constructor": false}, {"identifier": "getUrls", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getUrls()", "full_signature": "public String[] getUrls()", "class_method_signature": "StreamDiscoverer.getUrls()", "testcase": false, "constructor": false}, {"identifier": "urlsProperty", "parameters": "()", "modifiers": "public", "return": "ReadOnlyProperty<String[]>", "signature": "ReadOnlyProperty<String[]> urlsProperty()", "full_signature": "public ReadOnlyProperty<String[]> urlsProperty()", "class_method_signature": "StreamDiscoverer.urlsProperty()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "StreamDiscoverer.close()", "testcase": false, "constructor": false}, {"identifier": "updateUrls", "parameters": "(EntryNotification notification)", "modifiers": "private", "return": "void", "signature": "void updateUrls(EntryNotification notification)", "full_signature": "private void updateUrls(EntryNotification notification)", "class_method_signature": "StreamDiscoverer.updateUrls(EntryNotification notification)", "testcase": false, "constructor": false}], "file": "plugins/cameraserver/src/main/java/edu/wpi/first/shuffleboard/plugin/cameraserver/source/StreamDiscoverer.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void close() {\n    streams.removeListener(listenerHandle);\n    urls.setValue(emptyStringArray);\n  }", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "StreamDiscoverer.close()", "testcase": false, "constructor": false, "invocations": ["removeListener", "setValue"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}