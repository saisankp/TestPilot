{"test_class": {"identifier": "ResultProcessingDispatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ResultProcessingDispatcherTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ResultProcessingDispatcherTest.class)", "var_name": "LOG"}, {"original_string": "private static final String CACHE_FILE_PATH = \"src/test/resources/cache.txt\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_FILE_PATH = \"src/test/resources/cache.txt\"", "var_name": "CACHE_FILE_PATH"}], "file": "adaptors/pronom-adaptor/src/test/java/eu/scape_project/watch/adaptor/pronom/common/ResultProcessingDispatcherTest.java"}, "test_case": {"identifier": "shouldTestDispatching", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldTestDispatching() {\n    final ResultProcessingDispatcher dispatcher = new ResultProcessingDispatcher(CACHE_FILE_PATH);\n    final String test = \"42\";\n\n    boolean process = dispatcher.process(test);\n    Assert.assertTrue(process);\n\n    process = dispatcher.process(test);\n    Assert.assertFalse(process);\n\n    deleteFile();\n  }", "signature": "void shouldTestDispatching()", "full_signature": "@Test public void shouldTestDispatching()", "class_method_signature": "ResultProcessingDispatcherTest.shouldTestDispatching()", "testcase": true, "constructor": false, "invocations": ["process", "assertTrue", "process", "assertFalse", "deleteFile"]}, "focal_class": {"identifier": "ResultProcessingDispatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ResultProcessingDispatcher.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ResultProcessingDispatcher.class)", "var_name": "LOG"}, {"original_string": "private List<String> hashes;", "modifier": "private", "type": "List<String>", "declarator": "hashes", "var_name": "hashes"}, {"original_string": "private String cacheFilePath;", "modifier": "private", "type": "String", "declarator": "cacheFilePath", "var_name": "cacheFilePath"}], "methods": [{"identifier": "ResultProcessingDispatcher", "parameters": "(final String cacheFilePath)", "modifiers": "public", "return": "", "signature": " ResultProcessingDispatcher(final String cacheFilePath)", "full_signature": "public  ResultProcessingDispatcher(final String cacheFilePath)", "class_method_signature": "ResultProcessingDispatcher.ResultProcessingDispatcher(final String cacheFilePath)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(String result)", "modifiers": "public", "return": "boolean", "signature": "boolean process(String result)", "full_signature": "public boolean process(String result)", "class_method_signature": "ResultProcessingDispatcher.process(String result)", "testcase": false, "constructor": false}, {"identifier": "getMD5Checksum", "parameters": "(final String text)", "modifiers": "private", "return": "String", "signature": "String getMD5Checksum(final String text)", "full_signature": "private String getMD5Checksum(final String text)", "class_method_signature": "ResultProcessingDispatcher.getMD5Checksum(final String text)", "testcase": false, "constructor": false}, {"identifier": "getDigester", "parameters": "(String alg)", "modifiers": "private", "return": "MessageDigest", "signature": "MessageDigest getDigester(String alg)", "full_signature": "private MessageDigest getDigester(String alg)", "class_method_signature": "ResultProcessingDispatcher.getDigester(String alg)", "testcase": false, "constructor": false}, {"identifier": "doesHashExist", "parameters": "(String hash)", "modifiers": "private", "return": "boolean", "signature": "boolean doesHashExist(String hash)", "full_signature": "private boolean doesHashExist(String hash)", "class_method_signature": "ResultProcessingDispatcher.doesHashExist(String hash)", "testcase": false, "constructor": false}, {"identifier": "appendHash", "parameters": "(final String hash)", "modifiers": "private", "return": "void", "signature": "void appendHash(final String hash)", "full_signature": "private void appendHash(final String hash)", "class_method_signature": "ResultProcessingDispatcher.appendHash(final String hash)", "testcase": false, "constructor": false}, {"identifier": "readHashes", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void readHashes()", "full_signature": "private synchronized void readHashes()", "class_method_signature": "ResultProcessingDispatcher.readHashes()", "testcase": false, "constructor": false}], "file": "adaptors/pronom-adaptor/src/main/java/eu/scape_project/watch/adaptor/pronom/common/ResultProcessingDispatcher.java"}, "focal_method": {"identifier": "process", "parameters": "(String result)", "modifiers": "public", "return": "boolean", "body": "public boolean process(String result) {\n    LOG.trace(\"Checking if partial result is known\");\n\n    final String checksum = this.getMD5Checksum(result);\n    return !this.doesHashExist(checksum);\n  }", "signature": "boolean process(String result)", "full_signature": "public boolean process(String result)", "class_method_signature": "ResultProcessingDispatcher.process(String result)", "testcase": false, "constructor": false, "invocations": ["trace", "getMD5Checksum", "doesHashExist"]}, "repository": {"repo_id": 3145735, "url": "https://github.com/openpreserve/scout", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 74687, "license": "licensed"}}