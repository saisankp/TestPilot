{"test_class": {"identifier": "SofaHessianSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SofaHessianSerializer serializer = new SofaHessianSerializer();", "modifier": "private", "type": "SofaHessianSerializer", "declarator": "serializer = new SofaHessianSerializer()", "var_name": "serializer"}], "file": "codec/codec-sofa-hessian/src/test/java/com/alipay/sofa/rpc/codec/sofahessian/SofaHessianSerializerTest.java"}, "test_case": {"identifier": "getSerializerFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSerializerFactory() {\n        Assert.assertEquals(SingleClassLoaderSofaSerializerFactory.class,\n            serializer.getSerializerFactory(false, false).getClass());\n        Assert.assertEquals(MultipleClassLoaderSofaSerializerFactory.class,\n            serializer.getSerializerFactory(true, false).getClass());\n        Assert.assertEquals(GenericSingleClassLoaderSofaSerializerFactory.class,\n            serializer.getSerializerFactory(false, true).getClass());\n        Assert.assertEquals(GenericMultipleClassLoaderSofaSerializerFactory.class,\n            serializer.getSerializerFactory(true, true).getClass());\n    }", "signature": "void getSerializerFactory()", "full_signature": "@Test public void getSerializerFactory()", "class_method_signature": "SofaHessianSerializerTest.getSerializerFactory()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "getSerializerFactory", "assertEquals", "getClass", "getSerializerFactory", "assertEquals", "getClass", "getSerializerFactory", "assertEquals", "getClass", "getSerializerFactory"]}, "focal_class": {"identifier": "SofaHessianSerializer", "superclass": "extends AbstractSerializer", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SofaHessianSerializer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SofaHessianSerializer.class)", "var_name": "LOGGER"}, {"original_string": "protected SerializerFactory serializerFactory;", "modifier": "protected", "type": "SerializerFactory", "declarator": "serializerFactory", "var_name": "serializerFactory"}, {"original_string": "protected SerializerFactory genericSerializerFactory;", "modifier": "protected", "type": "SerializerFactory", "declarator": "genericSerializerFactory", "var_name": "genericSerializerFactory"}], "methods": [{"identifier": "SofaHessianSerializer", "parameters": "()", "modifiers": "public", "return": "", "signature": " SofaHessianSerializer()", "full_signature": "public  SofaHessianSerializer()", "class_method_signature": "SofaHessianSerializer.SofaHessianSerializer()", "testcase": false, "constructor": true}, {"identifier": "getSerializerFactory", "parameters": "(boolean multipleClassLoader, boolean generic)", "modifiers": "protected", "return": "SerializerFactory", "signature": "SerializerFactory getSerializerFactory(boolean multipleClassLoader, boolean generic)", "full_signature": "protected SerializerFactory getSerializerFactory(boolean multipleClassLoader, boolean generic)", "class_method_signature": "SofaHessianSerializer.getSerializerFactory(boolean multipleClassLoader, boolean generic)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(Object object, Map<String, String> context)", "modifiers": "@Override public", "return": "AbstractByteBuf", "signature": "AbstractByteBuf encode(Object object, Map<String, String> context)", "full_signature": "@Override public AbstractByteBuf encode(Object object, Map<String, String> context)", "class_method_signature": "SofaHessianSerializer.encode(Object object, Map<String, String> context)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(AbstractByteBuf data, Class clazz, Map<String, String> context)", "modifiers": "@Override public", "return": "Object", "signature": "Object decode(AbstractByteBuf data, Class clazz, Map<String, String> context)", "full_signature": "@Override public Object decode(AbstractByteBuf data, Class clazz, Map<String, String> context)", "class_method_signature": "SofaHessianSerializer.decode(AbstractByteBuf data, Class clazz, Map<String, String> context)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(AbstractByteBuf data, Object template, Map<String, String> context)", "modifiers": "@Override public", "return": "void", "signature": "void decode(AbstractByteBuf data, Object template, Map<String, String> context)", "full_signature": "@Override public void decode(AbstractByteBuf data, Object template, Map<String, String> context)", "class_method_signature": "SofaHessianSerializer.decode(AbstractByteBuf data, Object template, Map<String, String> context)", "testcase": false, "constructor": false}, {"identifier": "getCustomSerializer", "parameters": "(Object obj)", "modifiers": "private static", "return": "CustomHessianSerializer", "signature": "CustomHessianSerializer getCustomSerializer(Object obj)", "full_signature": "private static CustomHessianSerializer getCustomSerializer(Object obj)", "class_method_signature": "SofaHessianSerializer.getCustomSerializer(Object obj)", "testcase": false, "constructor": false}], "file": "codec/codec-sofa-hessian/src/main/java/com/alipay/sofa/rpc/codec/sofahessian/SofaHessianSerializer.java"}, "focal_method": {"identifier": "getSerializerFactory", "parameters": "(boolean multipleClassLoader, boolean generic)", "modifiers": "protected", "return": "SerializerFactory", "body": "protected SerializerFactory getSerializerFactory(boolean multipleClassLoader, boolean generic) {\n        if (generic) {\n            return multipleClassLoader ? new GenericMultipleClassLoaderSofaSerializerFactory() :\n                new GenericSingleClassLoaderSofaSerializerFactory();\n        } else {\n            return multipleClassLoader ? new MultipleClassLoaderSofaSerializerFactory() :\n                new SingleClassLoaderSofaSerializerFactory();\n        }\n    }", "signature": "SerializerFactory getSerializerFactory(boolean multipleClassLoader, boolean generic)", "full_signature": "protected SerializerFactory getSerializerFactory(boolean multipleClassLoader, boolean generic)", "class_method_signature": "SofaHessianSerializer.getSerializerFactory(boolean multipleClassLoader, boolean generic)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}