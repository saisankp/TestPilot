{"test_class": {"identifier": "LdapRdnComponentTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/springframework/ldap/core/LdapRdnComponentTest.java"}, "test_case": {"identifier": "testCompareTo_Greater", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompareTo_Greater() {\n        LdapRdnComponent component1 = new LdapRdnComponent(\"sn\", \"doe\");\n        LdapRdnComponent component2 = new LdapRdnComponent(\"cn\", \"john doe\");\n        int result = component1.compareTo(component2);\n        assertThat(result > 0).isTrue();\n    }", "signature": "void testCompareTo_Greater()", "full_signature": "@Test public void testCompareTo_Greater()", "class_method_signature": "LdapRdnComponentTest.testCompareTo_Greater()", "testcase": true, "constructor": false, "invocations": ["compareTo", "isTrue", "assertThat"]}, "focal_class": {"identifier": "LdapRdnComponent", "superclass": "", "interfaces": "implements Comparable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3296747972616243038L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3296747972616243038L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(LdapRdnComponent.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(LdapRdnComponent.class)", "var_name": "LOG"}, {"original_string": "public static final boolean DONT_DECODE_VALUE = false;", "modifier": "public static final", "type": "boolean", "declarator": "DONT_DECODE_VALUE = false", "var_name": "DONT_DECODE_VALUE"}, {"original_string": "private String key;", "modifier": "private", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "LdapRdnComponent", "parameters": "(String key, String value)", "modifiers": "public", "return": "", "signature": " LdapRdnComponent(String key, String value)", "full_signature": "public  LdapRdnComponent(String key, String value)", "class_method_signature": "LdapRdnComponent.LdapRdnComponent(String key, String value)", "testcase": false, "constructor": true}, {"identifier": "LdapRdnComponent", "parameters": "(String key, String value, boolean decodeValue)", "modifiers": "public", "return": "", "signature": " LdapRdnComponent(String key, String value, boolean decodeValue)", "full_signature": "public  LdapRdnComponent(String key, String value, boolean decodeValue)", "class_method_signature": "LdapRdnComponent.LdapRdnComponent(String key, String value, boolean decodeValue)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "LdapRdnComponent.getKey()", "testcase": false, "constructor": false}, {"identifier": "setKey", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void setKey(String key)", "full_signature": "public void setKey(String key)", "class_method_signature": "LdapRdnComponent.setKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "LdapRdnComponent.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setValue(String value)", "full_signature": "public void setValue(String value)", "class_method_signature": "LdapRdnComponent.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "encodeLdap", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String encodeLdap()", "full_signature": "protected String encodeLdap()", "class_method_signature": "LdapRdnComponent.encodeLdap()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "LdapRdnComponent.toString()", "testcase": false, "constructor": false}, {"identifier": "getLdapEncoded", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLdapEncoded()", "full_signature": "public String getLdapEncoded()", "class_method_signature": "LdapRdnComponent.getLdapEncoded()", "testcase": false, "constructor": false}, {"identifier": "encodeUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String encodeUrl()", "full_signature": "public String encodeUrl()", "class_method_signature": "LdapRdnComponent.encodeUrl()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "LdapRdnComponent.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "LdapRdnComponent.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "LdapRdnComponent.compareTo(Object obj)", "testcase": false, "constructor": false}, {"identifier": "immutableLdapRdnComponent", "parameters": "()", "modifiers": "public", "return": "LdapRdnComponent", "signature": "LdapRdnComponent immutableLdapRdnComponent()", "full_signature": "public LdapRdnComponent immutableLdapRdnComponent()", "class_method_signature": "LdapRdnComponent.immutableLdapRdnComponent()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/LdapRdnComponent.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "body": "public int compareTo(Object obj) {\n\t\tLdapRdnComponent that = (LdapRdnComponent) obj;\n\n        // It's safe to compare directly against key and value,\n        // because they are validated not to be null on instance creation.\n        int keyCompare = this.key.toLowerCase().compareTo(that.key.toLowerCase());\n        if(keyCompare == 0) {\n            return this.value.toLowerCase().compareTo(that.value.toLowerCase());\n        } else {\n            return keyCompare;\n        }\n\t}", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "LdapRdnComponent.compareTo(Object obj)", "testcase": false, "constructor": false, "invocations": ["compareTo", "toLowerCase", "toLowerCase", "compareTo", "toLowerCase", "toLowerCase"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}