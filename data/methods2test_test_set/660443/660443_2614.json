{"test_class": {"identifier": "RGroupListTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "base/isomorphism/src/test/java/org/openscience/cdk/isomorphism/matchers/RGroupListTest.java"}, "test_case": {"identifier": "testOccurrenceNotSmallerThanZero", "parameters": "()", "modifiers": "@Test(expected = CDKException.class) public", "return": "void", "body": "@Test(expected = CDKException.class)\n    public void testOccurrenceNotSmallerThanZero() throws CDKException {\n        RGroupList rgrLst = new RGroupList(1);\n        rgrLst.setOccurrence(\"<0\");\n    }", "signature": "void testOccurrenceNotSmallerThanZero()", "full_signature": "@Test(expected = CDKException.class) public void testOccurrenceNotSmallerThanZero()", "class_method_signature": "RGroupListTest.testOccurrenceNotSmallerThanZero()", "testcase": true, "constructor": false, "invocations": ["setOccurrence"]}, "focal_class": {"identifier": "RGroupList", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String DEFAULT_OCCURRENCE = \">0\";", "modifier": "public final static", "type": "String", "declarator": "DEFAULT_OCCURRENCE = \">0\"", "var_name": "DEFAULT_OCCURRENCE"}, {"original_string": "private int                rGroupNumber;", "modifier": "private", "type": "int", "declarator": "rGroupNumber", "var_name": "rGroupNumber"}, {"original_string": "private boolean            restH;", "modifier": "private", "type": "boolean", "declarator": "restH", "var_name": "restH"}, {"original_string": "private String             occurrence;", "modifier": "private", "type": "String", "declarator": "occurrence", "var_name": "occurrence"}, {"original_string": "private List<RGroup>       rGroups;", "modifier": "private", "type": "List<RGroup>", "declarator": "rGroups", "var_name": "rGroups"}, {"original_string": "private int                requiredRGroupNumber;", "modifier": "private", "type": "int", "declarator": "requiredRGroupNumber", "var_name": "requiredRGroupNumber"}], "methods": [{"identifier": "RGroupList", "parameters": "(int rGroupNumber)", "modifiers": "public", "return": "", "signature": " RGroupList(int rGroupNumber)", "full_signature": "public  RGroupList(int rGroupNumber)", "class_method_signature": "RGroupList.RGroupList(int rGroupNumber)", "testcase": false, "constructor": true}, {"identifier": "RGroupList", "parameters": "(int rGroupNumber, boolean restH, String occurrence, int requiredRGroupNumber)", "modifiers": "public", "return": "", "signature": " RGroupList(int rGroupNumber, boolean restH, String occurrence, int requiredRGroupNumber)", "full_signature": "public  RGroupList(int rGroupNumber, boolean restH, String occurrence, int requiredRGroupNumber)", "class_method_signature": "RGroupList.RGroupList(int rGroupNumber, boolean restH, String occurrence, int requiredRGroupNumber)", "testcase": false, "constructor": true}, {"identifier": "setRGroupNumber", "parameters": "(int rGroupNumber)", "modifiers": "public", "return": "void", "signature": "void setRGroupNumber(int rGroupNumber)", "full_signature": "public void setRGroupNumber(int rGroupNumber)", "class_method_signature": "RGroupList.setRGroupNumber(int rGroupNumber)", "testcase": false, "constructor": false}, {"identifier": "getRGroupNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRGroupNumber()", "full_signature": "public int getRGroupNumber()", "class_method_signature": "RGroupList.getRGroupNumber()", "testcase": false, "constructor": false}, {"identifier": "setRestH", "parameters": "(boolean restH)", "modifiers": "public", "return": "void", "signature": "void setRestH(boolean restH)", "full_signature": "public void setRestH(boolean restH)", "class_method_signature": "RGroupList.setRestH(boolean restH)", "testcase": false, "constructor": false}, {"identifier": "isRestH", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRestH()", "full_signature": "public boolean isRestH()", "class_method_signature": "RGroupList.isRestH()", "testcase": false, "constructor": false}, {"identifier": "setRequiredRGroupNumber", "parameters": "(int rGroupNumberImplicated)", "modifiers": "public", "return": "void", "signature": "void setRequiredRGroupNumber(int rGroupNumberImplicated)", "full_signature": "public void setRequiredRGroupNumber(int rGroupNumberImplicated)", "class_method_signature": "RGroupList.setRequiredRGroupNumber(int rGroupNumberImplicated)", "testcase": false, "constructor": false}, {"identifier": "getRequiredRGroupNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRequiredRGroupNumber()", "full_signature": "public int getRequiredRGroupNumber()", "class_method_signature": "RGroupList.getRequiredRGroupNumber()", "testcase": false, "constructor": false}, {"identifier": "setRGroups", "parameters": "(List<RGroup> rGroups)", "modifiers": "public", "return": "void", "signature": "void setRGroups(List<RGroup> rGroups)", "full_signature": "public void setRGroups(List<RGroup> rGroups)", "class_method_signature": "RGroupList.setRGroups(List<RGroup> rGroups)", "testcase": false, "constructor": false}, {"identifier": "getRGroups", "parameters": "()", "modifiers": "public", "return": "List<RGroup>", "signature": "List<RGroup> getRGroups()", "full_signature": "public List<RGroup> getRGroups()", "class_method_signature": "RGroupList.getRGroups()", "testcase": false, "constructor": false}, {"identifier": "getOccurrence", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOccurrence()", "full_signature": "public String getOccurrence()", "class_method_signature": "RGroupList.getOccurrence()", "testcase": false, "constructor": false}, {"identifier": "setOccurrence", "parameters": "(String occurrence)", "modifiers": "public", "return": "void", "signature": "void setOccurrence(String occurrence)", "full_signature": "public void setOccurrence(String occurrence)", "class_method_signature": "RGroupList.setOccurrence(String occurrence)", "testcase": false, "constructor": false}, {"identifier": "isValidOccurrenceSyntax", "parameters": "(String occ)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidOccurrenceSyntax(String occ)", "full_signature": "public static boolean isValidOccurrenceSyntax(String occ)", "class_method_signature": "RGroupList.isValidOccurrenceSyntax(String occ)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(String regExp, String userInput)", "modifiers": "private static", "return": "boolean", "signature": "boolean match(String regExp, String userInput)", "full_signature": "private static boolean match(String regExp, String userInput)", "class_method_signature": "RGroupList.match(String regExp, String userInput)", "testcase": false, "constructor": false}, {"identifier": "matchOccurence", "parameters": "(int maxAttachments)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> matchOccurence(int maxAttachments)", "full_signature": "public List<Integer> matchOccurence(int maxAttachments)", "class_method_signature": "RGroupList.matchOccurence(int maxAttachments)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "RGroupList.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RGroupList.hashCode()", "testcase": false, "constructor": false}], "file": "base/isomorphism/src/main/java/org/openscience/cdk/isomorphism/matchers/RGroupList.java"}, "focal_method": {"identifier": "setOccurrence", "parameters": "(String occurrence)", "modifiers": "public", "return": "void", "body": "public void setOccurrence(String occurrence) throws CDKException {\n        if (occurrence == null || occurrence.equals(\"\")) {\n            occurrence = \">0\"; //revert to default\n        } else {\n            occurrence = occurrence.trim().replaceAll(\" \", \"\");\n            if (isValidOccurrenceSyntax(occurrence)) {\n                this.occurrence = occurrence;\n            } else\n                throw new CDKException(\"Invalid occurence line: \" + occurrence);\n        }\n    }", "signature": "void setOccurrence(String occurrence)", "full_signature": "public void setOccurrence(String occurrence)", "class_method_signature": "RGroupList.setOccurrence(String occurrence)", "testcase": false, "constructor": false, "invocations": ["equals", "replaceAll", "trim", "isValidOccurrenceSyntax"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}