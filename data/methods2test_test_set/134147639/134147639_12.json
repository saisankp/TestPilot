{"test_class": {"identifier": "CertificateUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-util/src/test/java/com/webauthn4j/util/CertificateUtilTest.java"}, "test_case": {"identifier": "createPKIXParameters_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void createPKIXParameters_test() {\n        HashSet<TrustAnchor> trustAnchors = new HashSet<>();\n        trustAnchors.add(new TrustAnchor(mock(X509Certificate.class), null));\n        PKIXParameters pkixParameters = CertificateUtil.createPKIXParameters(trustAnchors);\n        assertThat(pkixParameters).isNotNull();\n    }", "signature": "void createPKIXParameters_test()", "full_signature": "@Test void createPKIXParameters_test()", "class_method_signature": "CertificateUtilTest.createPKIXParameters_test()", "testcase": true, "constructor": false, "invocations": ["add", "mock", "createPKIXParameters", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "CertificateUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final CertificateFactory certificateFactory;", "modifier": "private static final", "type": "CertificateFactory", "declarator": "certificateFactory", "var_name": "certificateFactory"}], "methods": [{"identifier": "CertificateUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " CertificateUtil()", "full_signature": "private  CertificateUtil()", "class_method_signature": "CertificateUtil.CertificateUtil()", "testcase": false, "constructor": true}, {"identifier": "createCertPathValidator", "parameters": "()", "modifiers": "public static", "return": "CertPathValidator", "signature": "CertPathValidator createCertPathValidator()", "full_signature": "public static CertPathValidator createCertPathValidator()", "class_method_signature": "CertificateUtil.createCertPathValidator()", "testcase": false, "constructor": false}, {"identifier": "createPKIXParameters", "parameters": "(Set<TrustAnchor> trustAnchors)", "modifiers": "public static", "return": "PKIXParameters", "signature": "PKIXParameters createPKIXParameters(Set<TrustAnchor> trustAnchors)", "full_signature": "public static PKIXParameters createPKIXParameters(Set<TrustAnchor> trustAnchors)", "class_method_signature": "CertificateUtil.createPKIXParameters(Set<TrustAnchor> trustAnchors)", "testcase": false, "constructor": false}, {"identifier": "createKeyStore", "parameters": "()", "modifiers": "public static", "return": "KeyStore", "signature": "KeyStore createKeyStore()", "full_signature": "public static KeyStore createKeyStore()", "class_method_signature": "CertificateUtil.createKeyStore()", "testcase": false, "constructor": false}, {"identifier": "generateTrustAnchors", "parameters": "(List<C> certificates)", "modifiers": "public static", "return": "Set<TrustAnchor>", "signature": "Set<TrustAnchor> generateTrustAnchors(List<C> certificates)", "full_signature": "public static Set<TrustAnchor> generateTrustAnchors(List<C> certificates)", "class_method_signature": "CertificateUtil.generateTrustAnchors(List<C> certificates)", "testcase": false, "constructor": false}, {"identifier": "generateCertPath", "parameters": "(List<C> certificates)", "modifiers": "public static", "return": "CertPath", "signature": "CertPath generateCertPath(List<C> certificates)", "full_signature": "public static CertPath generateCertPath(List<C> certificates)", "class_method_signature": "CertificateUtil.generateCertPath(List<C> certificates)", "testcase": false, "constructor": false}, {"identifier": "generateX509Certificate", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "X509Certificate", "signature": "X509Certificate generateX509Certificate(byte[] bytes)", "full_signature": "public static X509Certificate generateX509Certificate(byte[] bytes)", "class_method_signature": "CertificateUtil.generateX509Certificate(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "generateX509Certificate", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "X509Certificate", "signature": "X509Certificate generateX509Certificate(InputStream inputStream)", "full_signature": "public static X509Certificate generateX509Certificate(InputStream inputStream)", "class_method_signature": "CertificateUtil.generateX509Certificate(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "webauthn4j-util/src/main/java/com/webauthn4j/util/CertificateUtil.java"}, "focal_method": {"identifier": "createPKIXParameters", "parameters": "(Set<TrustAnchor> trustAnchors)", "modifiers": "public static", "return": "PKIXParameters", "body": "public static PKIXParameters createPKIXParameters(Set<TrustAnchor> trustAnchors) {\n        AssertUtil.notEmpty(trustAnchors, \"trustAnchors is required; it must not be empty\");\n        try {\n            return new PKIXParameters(trustAnchors);\n        } catch (InvalidAlgorithmParameterException e) {\n            throw new UnexpectedCheckedException(e);\n        }\n    }", "signature": "PKIXParameters createPKIXParameters(Set<TrustAnchor> trustAnchors)", "full_signature": "public static PKIXParameters createPKIXParameters(Set<TrustAnchor> trustAnchors)", "class_method_signature": "CertificateUtil.createPKIXParameters(Set<TrustAnchor> trustAnchors)", "testcase": false, "constructor": false, "invocations": ["notEmpty"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}