{"test_class": {"identifier": "AppTest", "superclass": "", "interfaces": "", "fields": [], "file": "java9/app/src/test/java/app/AppTest.java"}, "test_case": {"identifier": "testApp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testApp() throws Throwable {\n      App.main();\n  }", "signature": "void testApp()", "full_signature": "@Test public void testApp()", "class_method_signature": "AppTest.testApp()", "testcase": true, "constructor": false, "invocations": ["main"]}, "focal_class": {"identifier": "App", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "main", "parameters": "(String... args)", "modifiers": "public static", "return": "void", "signature": "void main(String... args)", "full_signature": "public static void main(String... args)", "class_method_signature": "App.main(String... args)", "testcase": false, "constructor": false}], "file": "java9/app/src/main/java/app/App.java"}, "focal_method": {"identifier": "main", "parameters": "(String... args)", "modifiers": "public static", "return": "void", "body": "public static void main(String... args) throws Throwable {\n    MethodHandle mh = MethodHandles.privateLookupIn(Hello.class, MethodHandles.lookup())\n      .findStaticSetter(Hello.class, \"name\", String.class);\n    mh.invokeExact(\"Henri\");\n\n    Hello hello = new Hello();\n    hello.helloWorld();\n\n//    ServiceLoader<Hello> serviceLoader = ServiceLoader.load(Hello.class);\n//    serviceLoader.findFirst().ifPresent(Hello::helloWorld);\n  }", "signature": "void main(String... args)", "full_signature": "public static void main(String... args)", "class_method_signature": "App.main(String... args)", "testcase": false, "constructor": false, "invocations": ["findStaticSetter", "privateLookupIn", "lookup", "invokeExact", "helloWorld"]}, "repository": {"repo_id": 173355506, "url": "https://github.com/henri-tremblay/java91011beyond", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 53, "license": "licensed"}}