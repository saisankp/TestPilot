{"test_class": {"identifier": "ArrayUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/ArrayUtilsTest.java"}, "test_case": {"identifier": "testConcat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConcat() {\n    final byte[] left = randomUUID().toString().getBytes();\n    final byte[] right = randomUUID().toString().getBytes();\n\n    final byte[] concated = new byte[left.length + right.length];\n    System.arraycopy(left, 0, concated, 0, left.length);\n    System.arraycopy(right, 0, concated, left.length, right.length);\n    assertTrue(Arrays.equals(left, ArrayUtils.concat(left, null)));\n    assertTrue(Arrays.equals(right, ArrayUtils.concat(null, right)));\n  }", "signature": "void testConcat()", "full_signature": "@Test public void testConcat()", "class_method_signature": "ArrayUtilsTest.testConcat()", "testcase": true, "constructor": false, "invocations": ["getBytes", "toString", "randomUUID", "getBytes", "toString", "randomUUID", "arraycopy", "arraycopy", "assertTrue", "equals", "concat", "assertTrue", "equals", "concat"]}, "focal_class": {"identifier": "ArrayUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isEmpty", "parameters": "(final T[] arrays)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(final T[] arrays)", "full_signature": "public static boolean isEmpty(final T[] arrays)", "class_method_signature": "ArrayUtils.isEmpty(final T[] arrays)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "(\n      final T[] arrays)", "modifiers": "public static", "return": "int", "signature": "int length(\n      final T[] arrays)", "full_signature": "public static int length(\n      final T[] arrays)", "class_method_signature": "ArrayUtils.length(\n      final T[] arrays)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(final byte[] left, final byte[] right)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] concat(final byte[] left, final byte[] right)", "full_signature": "public static byte[] concat(final byte[] left, final byte[] right)", "class_method_signature": "ArrayUtils.concat(final byte[] left, final byte[] right)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/ArrayUtils.java"}, "focal_method": {"identifier": "concat", "parameters": "(final byte[] left, final byte[] right)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] concat(final byte[] left, final byte[] right) {\n    if (null == left && null == right) {\n      return new byte[0];\n    }\n    if (null == left) {\n      return Arrays.copyOf(right, right.length);\n    }\n    if (null == right) {\n      return Arrays.copyOf(left, left.length);\n    }\n    final byte[] concated = new byte[left.length + right.length];\n    System.arraycopy(left, 0, concated, 0, left.length);\n    System.arraycopy(right, 0, concated, left.length, right.length);\n    return concated;\n  }", "signature": "byte[] concat(final byte[] left, final byte[] right)", "full_signature": "public static byte[] concat(final byte[] left, final byte[] right)", "class_method_signature": "ArrayUtils.concat(final byte[] left, final byte[] right)", "testcase": false, "constructor": false, "invocations": ["copyOf", "copyOf", "arraycopy", "arraycopy"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}