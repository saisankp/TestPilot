{"test_class": {"identifier": "ConfigMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File directory = new File(\"target/test/dir-\" + UUID.randomUUID());", "modifier": "private final", "type": "File", "declarator": "directory = new File(\"target/test/dir-\" + UUID.randomUUID())", "var_name": "directory"}], "file": "action-controller/src/test/java/org/actioncontroller/config/ConfigMapTest.java"}, "test_case": {"identifier": "shouldHideSecretsInToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHideSecretsInToString() {\n        ConfigMap configMap = new ConfigMap(\"apps.appOne\", Map.of(\n                \"apps.appOne.clientId\", \"abc\",\n                \"apps.appOne.clientSecret\", \"my-secret\",\n                \"apps.appTwo.clientId\", \"xyz\"\n        ));\n\n        assertThat(configMap.toString())\n                .contains(\"clientId=abc\")\n                .contains(\"clientSecret=****\")\n                .doesNotContain(\"my-secret\")\n                .doesNotContain(\"xyz\");\n    }", "signature": "void shouldHideSecretsInToString()", "full_signature": "@Test public void shouldHideSecretsInToString()", "class_method_signature": "ConfigMapTest.shouldHideSecretsInToString()", "testcase": true, "constructor": false, "invocations": ["of", "doesNotContain", "doesNotContain", "contains", "contains", "assertThat", "toString"]}, "focal_class": {"identifier": "ConfigMap", "superclass": "extends AbstractMap<String, String>", "interfaces": "", "fields": [{"original_string": "private final String prefix;", "modifier": "private final", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private final Map<String, String> innerMap;", "modifier": "private final", "type": "Map<String, String>", "declarator": "innerMap", "var_name": "innerMap"}], "methods": [{"identifier": "read", "parameters": "(File file)", "modifiers": "public static", "return": "ConfigMap", "signature": "ConfigMap read(File file)", "full_signature": "public static ConfigMap read(File file)", "class_method_signature": "ConfigMap.read(File file)", "testcase": false, "constructor": false}, {"identifier": "ConfigMap", "parameters": "(String prefix, Map<String, String> innerMap)", "modifiers": "public", "return": "", "signature": " ConfigMap(String prefix, Map<String, String> innerMap)", "full_signature": "public  ConfigMap(String prefix, Map<String, String> innerMap)", "class_method_signature": "ConfigMap.ConfigMap(String prefix, Map<String, String> innerMap)", "testcase": false, "constructor": true}, {"identifier": "ConfigMap", "parameters": "(Map<String, String> innerMap)", "modifiers": "public", "return": "", "signature": " ConfigMap(Map<String, String> innerMap)", "full_signature": "public  ConfigMap(Map<String, String> innerMap)", "class_method_signature": "ConfigMap.ConfigMap(Map<String, String> innerMap)", "testcase": false, "constructor": true}, {"identifier": "ConfigMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConfigMap()", "full_signature": "public  ConfigMap()", "class_method_signature": "ConfigMap.ConfigMap()", "testcase": false, "constructor": true}, {"identifier": "ConfigMap", "parameters": "(Properties properties)", "modifiers": "public", "return": "", "signature": " ConfigMap(Properties properties)", "full_signature": "public  ConfigMap(Properties properties)", "class_method_signature": "ConfigMap.ConfigMap(Properties properties)", "testcase": false, "constructor": true}, {"identifier": "optional", "parameters": "(Object key)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> optional(Object key)", "full_signature": "public Optional<String> optional(Object key)", "class_method_signature": "ConfigMap.optional(Object key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "@Override public", "return": "String", "signature": "String get(Object key)", "full_signature": "@Override public String get(Object key)", "class_method_signature": "ConfigMap.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Object key, String defaultValue)", "modifiers": "@Override public", "return": "String", "signature": "String getOrDefault(Object key, String defaultValue)", "full_signature": "@Override public String getOrDefault(Object key, String defaultValue)", "class_method_signature": "ConfigMap.getOrDefault(Object key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String key)", "full_signature": "public boolean getBoolean(String key)", "class_method_signature": "ConfigMap.getBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "entrySet", "parameters": "()", "modifiers": "@Override @NonNull public", "return": "Set<Entry<String, String>>", "signature": "Set<Entry<String, String>> entrySet()", "full_signature": "@Override @NonNull public Set<Entry<String, String>> entrySet()", "class_method_signature": "ConfigMap.entrySet()", "testcase": false, "constructor": false}, {"identifier": "listSubMaps", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> listSubMaps()", "full_signature": "public Collection<String> listSubMaps()", "class_method_signature": "ConfigMap.listSubMaps()", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "public", "return": "ConfigMap", "signature": "ConfigMap getRoot()", "full_signature": "public ConfigMap getRoot()", "class_method_signature": "ConfigMap.getRoot()", "testcase": false, "constructor": false}, {"identifier": "subMap", "parameters": "(String prefix)", "modifiers": "public", "return": "Optional<ConfigMap>", "signature": "Optional<ConfigMap> subMap(String prefix)", "full_signature": "public Optional<ConfigMap> subMap(String prefix)", "class_method_signature": "ConfigMap.subMap(String prefix)", "testcase": false, "constructor": false}, {"identifier": "hasEnvironmentPrefix", "parameters": "(String prefix)", "modifiers": "private", "return": "boolean", "signature": "boolean hasEnvironmentPrefix(String prefix)", "full_signature": "private boolean hasEnvironmentPrefix(String prefix)", "class_method_signature": "ConfigMap.hasEnvironmentPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getInnerKey", "parameters": "(Object key)", "modifiers": "protected", "return": "String", "signature": "String getInnerKey(Object key)", "full_signature": "protected String getInnerKey(Object key)", "class_method_signature": "ConfigMap.getInnerKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigMap.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Entry<String, String> entry)", "modifiers": "private", "return": "String", "signature": "String toString(Entry<String, String> entry)", "full_signature": "private String toString(Entry<String, String> entry)", "class_method_signature": "ConfigMap.toString(Entry<String, String> entry)", "testcase": false, "constructor": false}], "file": "action-controller/src/main/java/org/actioncontroller/config/ConfigMap.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        String values = entrySet().stream().map(this::toString).collect(Collectors.joining(\", \"));\n        return \"ConfigMap{prefix=\" + prefix + \", values={\" + values + \"}}\";\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigMap.toString()", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "entrySet", "joining"]}, "repository": {"repo_id": 170412315, "url": "https://github.com/jhannes/action-controller", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 1800, "license": "licensed"}}