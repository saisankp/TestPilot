{"test_class": {"identifier": "ReadOnlyVariableResolverFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private ReadOnlyVariableResolverFactory factory;", "modifier": "private", "type": "ReadOnlyVariableResolverFactory", "declarator": "factory", "var_name": "factory"}], "file": "tiles-mvel/src/test/java/org/apache/tiles/mvel/ReadOnlyVariableResolverFactoryTest.java"}, "test_case": {"identifier": "testIsResolveable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsResolveable() {\n        expect(factory.isTarget(\"whatever\")).andReturn(true);\n\n        replay(factory, request, applicationContext);\n        assertTrue(factory.isResolveable(\"whatever\"));\n        verify(factory, request, applicationContext);\n    }", "signature": "void testIsResolveable()", "full_signature": "@Test public void testIsResolveable()", "class_method_signature": "ReadOnlyVariableResolverFactoryTest.testIsResolveable()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "isTarget", "replay", "assertTrue", "isResolveable", "verify"]}, "focal_class": {"identifier": "ReadOnlyVariableResolverFactory", "superclass": "extends\n        BaseVariableResolverFactory", "interfaces": "", "fields": [{"original_string": "protected TilesRequestContextHolder requestHolder;", "modifier": "protected", "type": "TilesRequestContextHolder", "declarator": "requestHolder", "var_name": "requestHolder"}], "methods": [{"identifier": "ReadOnlyVariableResolverFactory", "parameters": "(TilesRequestContextHolder requestHolder)", "modifiers": "public", "return": "", "signature": " ReadOnlyVariableResolverFactory(TilesRequestContextHolder requestHolder)", "full_signature": "public  ReadOnlyVariableResolverFactory(TilesRequestContextHolder requestHolder)", "class_method_signature": "ReadOnlyVariableResolverFactory.ReadOnlyVariableResolverFactory(TilesRequestContextHolder requestHolder)", "testcase": false, "constructor": true}, {"identifier": "createVariable", "parameters": "(String name, Object value)", "modifiers": "public", "return": "VariableResolver", "signature": "VariableResolver createVariable(String name, Object value)", "full_signature": "public VariableResolver createVariable(String name, Object value)", "class_method_signature": "ReadOnlyVariableResolverFactory.createVariable(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "createVariable", "parameters": "(String name, Object value,\n            Class<?> type)", "modifiers": "public", "return": "VariableResolver", "signature": "VariableResolver createVariable(String name, Object value,\n            Class<?> type)", "full_signature": "public VariableResolver createVariable(String name, Object value,\n            Class<?> type)", "class_method_signature": "ReadOnlyVariableResolverFactory.createVariable(String name, Object value,\n            Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "isResolveable", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isResolveable(String name)", "full_signature": "public boolean isResolveable(String name)", "class_method_signature": "ReadOnlyVariableResolverFactory.isResolveable(String name)", "testcase": false, "constructor": false}, {"identifier": "getVariableResolver", "parameters": "(String name)", "modifiers": "@Override public", "return": "VariableResolver", "signature": "VariableResolver getVariableResolver(String name)", "full_signature": "@Override public VariableResolver getVariableResolver(String name)", "class_method_signature": "ReadOnlyVariableResolverFactory.getVariableResolver(String name)", "testcase": false, "constructor": false}, {"identifier": "createVariableResolver", "parameters": "(String name)", "modifiers": "public abstract", "return": "VariableResolver", "signature": "VariableResolver createVariableResolver(String name)", "full_signature": "public abstract VariableResolver createVariableResolver(String name)", "class_method_signature": "ReadOnlyVariableResolverFactory.createVariableResolver(String name)", "testcase": false, "constructor": false}], "file": "tiles-mvel/src/main/java/org/apache/tiles/mvel/ReadOnlyVariableResolverFactory.java"}, "focal_method": {"identifier": "isResolveable", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "body": "public boolean isResolveable(String name) {\n        return isTarget(name) || isNextResolveable(name);\n    }", "signature": "boolean isResolveable(String name)", "full_signature": "public boolean isResolveable(String name)", "class_method_signature": "ReadOnlyVariableResolverFactory.isResolveable(String name)", "testcase": false, "constructor": false, "invocations": ["isTarget", "isNextResolveable"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}