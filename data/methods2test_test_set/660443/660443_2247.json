{"test_class": {"identifier": "FragmentAtomTest", "superclass": "extends AbstractFragmentAtomTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/FragmentAtomTest.java"}, "test_case": {"identifier": "testFragmentAtom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFragmentAtom() {\n        IFragmentAtom a = new FragmentAtom();\n        Assert.assertNotNull(a);\n    }", "signature": "void testFragmentAtom()", "full_signature": "@Test public void testFragmentAtom()", "class_method_signature": "FragmentAtomTest.testFragmentAtom()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "FragmentAtom", "superclass": "extends PseudoAtom", "interfaces": "implements IFragmentAtom", "fields": [{"original_string": "private static final long serialVersionUID = -6144605920605752463L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6144605920605752463L", "var_name": "serialVersionUID"}, {"original_string": "private IAtomContainer    fragment;", "modifier": "private", "type": "IAtomContainer", "declarator": "fragment", "var_name": "fragment"}, {"original_string": "private boolean           isExpanded;", "modifier": "private", "type": "boolean", "declarator": "isExpanded", "var_name": "isExpanded"}], "methods": [{"identifier": "FragmentAtom", "parameters": "()", "modifiers": "public", "return": "", "signature": " FragmentAtom()", "full_signature": "public  FragmentAtom()", "class_method_signature": "FragmentAtom.FragmentAtom()", "testcase": false, "constructor": true}, {"identifier": "isExpanded", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExpanded()", "full_signature": "@Override public boolean isExpanded()", "class_method_signature": "FragmentAtom.isExpanded()", "testcase": false, "constructor": false}, {"identifier": "setExpanded", "parameters": "(boolean bool)", "modifiers": "@Override public", "return": "void", "signature": "void setExpanded(boolean bool)", "full_signature": "@Override public void setExpanded(boolean bool)", "class_method_signature": "FragmentAtom.setExpanded(boolean bool)", "testcase": false, "constructor": false}, {"identifier": "getFragment", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer getFragment()", "full_signature": "@Override public IAtomContainer getFragment()", "class_method_signature": "FragmentAtom.getFragment()", "testcase": false, "constructor": false}, {"identifier": "setFragment", "parameters": "(IAtomContainer fragment)", "modifiers": "@Override public", "return": "void", "signature": "void setFragment(IAtomContainer fragment)", "full_signature": "@Override public void setFragment(IAtomContainer fragment)", "class_method_signature": "FragmentAtom.setFragment(IAtomContainer fragment)", "testcase": false, "constructor": false}, {"identifier": "setExactMass", "parameters": "(Double mass)", "modifiers": "@Override public", "return": "void", "signature": "void setExactMass(Double mass)", "full_signature": "@Override public void setExactMass(Double mass)", "class_method_signature": "FragmentAtom.setExactMass(Double mass)", "testcase": false, "constructor": false}, {"identifier": "getExactMass", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getExactMass()", "full_signature": "@Override public Double getExactMass()", "class_method_signature": "FragmentAtom.getExactMass()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FragmentAtom.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IFragmentAtom", "signature": "IFragmentAtom clone()", "full_signature": "@Override public IFragmentAtom clone()", "class_method_signature": "FragmentAtom.clone()", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/FragmentAtom.java"}, "focal_method": {"identifier": "FragmentAtom", "parameters": "()", "modifiers": "public", "return": "", "body": "public FragmentAtom() {\n        fragment = this.getBuilder().newInstance(IAtomContainer.class);\n        isExpanded = false;\n    }", "signature": " FragmentAtom()", "full_signature": "public  FragmentAtom()", "class_method_signature": "FragmentAtom.FragmentAtom()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}