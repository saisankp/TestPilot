{"test_class": {"identifier": "UtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Context contextMock;", "modifier": "@Mock", "type": "Context", "declarator": "contextMock", "var_name": "contextMock"}, {"original_string": "@Mock\n    private ConnectivityManager conManagerMock;", "modifier": "@Mock\n    private", "type": "ConnectivityManager", "declarator": "conManagerMock", "var_name": "conManagerMock"}, {"original_string": "@Mock\n    private android.net.NetworkInfo networkInfoMock;", "modifier": "@Mock\n    private", "type": "android.net.NetworkInfo", "declarator": "networkInfoMock", "var_name": "networkInfoMock"}, {"original_string": "@Mock\n    private View viewMock;", "modifier": "@Mock\n    private", "type": "View", "declarator": "viewMock", "var_name": "viewMock"}, {"original_string": "@Mock\n    private InputMethodManager inputMethodMock;", "modifier": "@Mock\n    private", "type": "InputMethodManager", "declarator": "inputMethodMock", "var_name": "inputMethodMock"}, {"original_string": "@Mock\n    private IBinder binderMock;", "modifier": "@Mock\n    private", "type": "IBinder", "declarator": "binderMock", "var_name": "binderMock"}, {"original_string": "private String ccNumberSample = \"4811111111111114\";", "modifier": "private", "type": "String", "declarator": "ccNumberSample = \"4811111111111114\"", "var_name": "ccNumberSample"}, {"original_string": "private String ccFormatedCCNumberSample = \"4811 1111 1111 1114 \";", "modifier": "private", "type": "String", "declarator": "ccFormatedCCNumberSample = \"4811 1111 1111 1114 \"", "var_name": "ccFormatedCCNumberSample"}], "file": "corekit/src/test/java/com/midtrans/sdk/corekit/utilities/UtilsTest.java"}, "test_case": {"identifier": "hideKeyboard", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hideKeyboard() {\n        Mockito.when(contextMock.getSystemService(Context.INPUT_METHOD_SERVICE)).thenReturn(inputMethodMock);\n        Mockito.when(viewMock.getWindowToken()).thenReturn(binderMock);\n        Mockito.when(inputMethodMock.hideSoftInputFromWindow(binderMock, 0)).thenReturn(true);\n        Utils.hideKeyboard(contextMock, viewMock);\n\n        Mockito.verify(inputMethodMock).hideSoftInputFromWindow(binderMock, 0);\n    }", "signature": "void hideKeyboard()", "full_signature": "@Test public void hideKeyboard()", "class_method_signature": "UtilsTest.hideKeyboard()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSystemService", "thenReturn", "when", "getWindowToken", "thenReturn", "when", "hideSoftInputFromWindow", "hideKeyboard", "hideSoftInputFromWindow", "verify"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CARD_TYPE_VISA = \"VISA\";", "modifier": "public static final", "type": "String", "declarator": "CARD_TYPE_VISA = \"VISA\"", "var_name": "CARD_TYPE_VISA"}, {"original_string": "public static final String CARD_TYPE_MASTERCARD = \"MASTERCARD\";", "modifier": "public static final", "type": "String", "declarator": "CARD_TYPE_MASTERCARD = \"MASTERCARD\"", "var_name": "CARD_TYPE_MASTERCARD"}, {"original_string": "public static final String CARD_TYPE_AMEX = \"AMEX\";", "modifier": "public static final", "type": "String", "declarator": "CARD_TYPE_AMEX = \"AMEX\"", "var_name": "CARD_TYPE_AMEX"}, {"original_string": "public static final String CARD_TYPE_JCB = \"JCB\";", "modifier": "public static final", "type": "String", "declarator": "CARD_TYPE_JCB = \"JCB\"", "var_name": "CARD_TYPE_JCB"}, {"original_string": "private static final long SECOND = 1000;", "modifier": "private static final", "type": "long", "declarator": "SECOND = 1000", "var_name": "SECOND"}, {"original_string": "private static final long MINUTE = 60 * SECOND;", "modifier": "private static final", "type": "long", "declarator": "MINUTE = 60 * SECOND", "var_name": "MINUTE"}, {"original_string": "private static final long HOUR = 60 * MINUTE;", "modifier": "private static final", "type": "long", "declarator": "HOUR = 60 * MINUTE", "var_name": "HOUR"}, {"original_string": "private static final long DAY = 24 * HOUR;", "modifier": "private static final", "type": "long", "declarator": "DAY = 24 * HOUR", "var_name": "DAY"}], "methods": [{"identifier": "mappingToCreditCardAuthentication", "parameters": "(String type, boolean secure)", "modifiers": "public static", "return": "String", "signature": "String mappingToCreditCardAuthentication(String type, boolean secure)", "full_signature": "public static String mappingToCreditCardAuthentication(String type, boolean secure)", "class_method_signature": "Utils.mappingToCreditCardAuthentication(String type, boolean secure)", "testcase": false, "constructor": false}, {"identifier": "isNetworkAvailable", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNetworkAvailable(Context context)", "full_signature": "public static boolean isNetworkAvailable(Context context)", "class_method_signature": "Utils.isNetworkAvailable(Context context)", "testcase": false, "constructor": false}, {"identifier": "hideKeyboard", "parameters": "(Context context, View editText)", "modifiers": "public static", "return": "void", "signature": "void hideKeyboard(Context context, View editText)", "full_signature": "public static void hideKeyboard(Context context, View editText)", "class_method_signature": "Utils.hideKeyboard(Context context, View editText)", "testcase": false, "constructor": false}, {"identifier": "getFormattedAmount", "parameters": "(double amount)", "modifiers": "public static", "return": "String", "signature": "String getFormattedAmount(double amount)", "full_signature": "public static String getFormattedAmount(double amount)", "class_method_signature": "Utils.getFormattedAmount(double amount)", "testcase": false, "constructor": false}, {"identifier": "getValidityTime", "parameters": "(String transactionTime)", "modifiers": "public static", "return": "String", "signature": "String getValidityTime(String transactionTime)", "full_signature": "public static String getValidityTime(String transactionTime)", "class_method_signature": "Utils.getValidityTime(String transactionTime)", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "(int monthValue)", "modifiers": "public static", "return": "String", "signature": "String getMonth(int monthValue)", "full_signature": "public static String getMonth(int monthValue)", "class_method_signature": "Utils.getMonth(int monthValue)", "testcase": false, "constructor": false}, {"identifier": "dpToPx", "parameters": "(int dp)", "modifiers": "public static", "return": "int", "signature": "int dpToPx(int dp)", "full_signature": "public static int dpToPx(int dp)", "class_method_signature": "Utils.dpToPx(int dp)", "testcase": false, "constructor": false}, {"identifier": "getFormattedCreditCardNumber", "parameters": "(String unformattedCardNumber)", "modifiers": "public static", "return": "String", "signature": "String getFormattedCreditCardNumber(String unformattedCardNumber)", "full_signature": "public static String getFormattedCreditCardNumber(String unformattedCardNumber)", "class_method_signature": "Utils.getFormattedCreditCardNumber(String unformattedCardNumber)", "testcase": false, "constructor": false}, {"identifier": "getCardType", "parameters": "(@NonNull String cardNo)", "modifiers": "public static", "return": "String", "signature": "String getCardType(@NonNull String cardNo)", "full_signature": "public static String getCardType(@NonNull String cardNo)", "class_method_signature": "Utils.getCardType(@NonNull String cardNo)", "testcase": false, "constructor": false}, {"identifier": "getFormattedTime", "parameters": "(long time)", "modifiers": "public static", "return": "String", "signature": "String getFormattedTime(long time)", "full_signature": "public static String getFormattedTime(long time)", "class_method_signature": "Utils.getFormattedTime(long time)", "testcase": false, "constructor": false}, {"identifier": "formatDouble", "parameters": "(double d)", "modifiers": "public static", "return": "String", "signature": "String formatDouble(double d)", "full_signature": "public static String formatDouble(double d)", "class_method_signature": "Utils.formatDouble(double d)", "testcase": false, "constructor": false}, {"identifier": "getDeviceType", "parameters": "(Activity activity)", "modifiers": "public static", "return": "String", "signature": "String getDeviceType(Activity activity)", "full_signature": "public static String getDeviceType(Activity activity)", "class_method_signature": "Utils.getDeviceType(Activity activity)", "testcase": false, "constructor": false}], "file": "corekit/src/main/java/com/midtrans/sdk/corekit/utilities/Utils.java"}, "focal_method": {"identifier": "hideKeyboard", "parameters": "(Context context, View editText)", "modifiers": "public static", "return": "void", "body": "public static void hideKeyboard(Context context, View editText) {\n        try {\n            InputMethodManager imm = (InputMethodManager) context.getSystemService(Context\n                    .INPUT_METHOD_SERVICE);\n            if (editText != null) {\n                imm.hideSoftInputFromWindow(editText.getWindowToken(), 0);\n                editText.clearFocus();\n            }\n        } catch (Exception e) {\n            Logger.e(e.getMessage());\n        }\n    }", "signature": "void hideKeyboard(Context context, View editText)", "full_signature": "public static void hideKeyboard(Context context, View editText)", "class_method_signature": "Utils.hideKeyboard(Context context, View editText)", "testcase": false, "constructor": false, "invocations": ["getSystemService", "hideSoftInputFromWindow", "getWindowToken", "clearFocus", "e", "getMessage"]}, "repository": {"repo_id": 59952554, "url": "https://github.com/veritrans/veritrans-android", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 49, "size": 60382, "license": "licensed"}}