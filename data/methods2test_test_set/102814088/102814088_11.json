{"test_class": {"identifier": "ListsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Integer> list;", "modifier": "private", "type": "List<Integer>", "declarator": "list", "var_name": "list"}], "file": "app/src/test/java/vn/tiki/sample/util/ListsTest.java"}, "test_case": {"identifier": "testMerged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMerged() throws Exception {\n    final List<Integer> mergedList = Lists.merged(list, Arrays.asList(4, 5, 6));\n    assertThat(mergedList).isEqualTo(Arrays.asList(1, 2, 3, 4, 5, 6));\n  }", "signature": "void testMerged()", "full_signature": "@Test public void testMerged()", "class_method_signature": "ListsTest.testMerged()", "testcase": true, "constructor": false, "invocations": ["merged", "asList", "isEqualTo", "assertThat", "asList"]}, "focal_class": {"identifier": "Lists", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Lists", "parameters": "()", "modifiers": "private", "return": "", "signature": " Lists()", "full_signature": "private  Lists()", "class_method_signature": "Lists.Lists()", "testcase": false, "constructor": true}, {"identifier": "merged", "parameters": "(@NonNull List<T> list1, @NonNull List<T> list2)", "modifiers": "@NonNull public static", "return": "List<T>", "signature": "List<T> merged(@NonNull List<T> list1, @NonNull List<T> list2)", "full_signature": "@NonNull public static List<T> merged(@NonNull List<T> list1, @NonNull List<T> list2)", "class_method_signature": "Lists.merged(@NonNull List<T> list1, @NonNull List<T> list2)", "testcase": false, "constructor": false}, {"identifier": "appended", "parameters": "(@NonNull List<T> list, @NonNull T t)", "modifiers": "@NonNull public static", "return": "List<T>", "signature": "List<T> appended(@NonNull List<T> list, @NonNull T t)", "full_signature": "@NonNull public static List<T> appended(@NonNull List<T> list, @NonNull T t)", "class_method_signature": "Lists.appended(@NonNull List<T> list, @NonNull T t)", "testcase": false, "constructor": false}], "file": "app/src/main/java/vn/tiki/sample/util/Lists.java"}, "focal_method": {"identifier": "merged", "parameters": "(@NonNull List<T> list1, @NonNull List<T> list2)", "modifiers": "@NonNull public static", "return": "List<T>", "body": "@NonNull public static <T> List<T> merged(@NonNull List<T> list1, @NonNull List<T> list2) {\n    if (list1.isEmpty()) {\n      return list2;\n    } else if (list2.isEmpty()) {\n      return list1;\n    } else {\n      final ArrayList<T> mergedList = new ArrayList<>(list1.size() + list2.size());\n      mergedList.addAll(list1);\n      mergedList.addAll(list2);\n      return mergedList;\n    }\n  }", "signature": "List<T> merged(@NonNull List<T> list1, @NonNull List<T> list2)", "full_signature": "@NonNull public static List<T> merged(@NonNull List<T> list1, @NonNull List<T> list2)", "class_method_signature": "Lists.merged(@NonNull List<T> list1, @NonNull List<T> list2)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "isEmpty", "size", "size", "addAll", "addAll"]}, "repository": {"repo_id": 102814088, "url": "https://github.com/tikivn/android-template", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 16, "size": 7557, "license": "licensed"}}