{"test_class": {"identifier": "ImageInteractionPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Context context;", "modifier": "", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "AccentColorIconButton scoreButton;", "modifier": "", "type": "AccentColorIconButton", "declarator": "scoreButton", "var_name": "scoreButton"}, {"original_string": "AccentColorIconButton faveButton;", "modifier": "", "type": "AccentColorIconButton", "declarator": "faveButton", "var_name": "faveButton"}, {"original_string": "AccentColorIconButton upvoteButton;", "modifier": "", "type": "AccentColorIconButton", "declarator": "upvoteButton", "var_name": "upvoteButton"}, {"original_string": "AccentColorIconButton downvoteButton;", "modifier": "", "type": "AccentColorIconButton", "declarator": "downvoteButton", "var_name": "downvoteButton"}, {"original_string": "ImageInteractionPresenter presenter;", "modifier": "", "type": "ImageInteractionPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "MockImageInteractionRequester requesterMock;", "modifier": "", "type": "MockImageInteractionRequester", "declarator": "requesterMock", "var_name": "requesterMock"}, {"original_string": "EnumSet<DerpibooruImageInteraction.InteractionType> interactions;", "modifier": "", "type": "EnumSet<DerpibooruImageInteraction.InteractionType>", "declarator": "interactions", "var_name": "interactions"}], "file": "app/src/test/java/derpibooru/derpy/ui/presenters/ImageInteractionPresenterTest.java"}, "test_case": {"identifier": "testInteractions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInteractions() {\n        presenter.enableInteractions(context);\n        testInteraction(DerpibooruImageInteraction.InteractionType.Fave, new Runnable() {\n            @Override\n            public void run() {\n                assertThat(faveButton.isActive(), is(true));\n                assertThat(upvoteButton.isActive(), is(true));\n                assertThat(downvoteButton.isActive(), is(false));\n            }\n        });\n        faveButton.performClick();\n        testInteraction(DerpibooruImageInteraction.InteractionType.ClearFave, new Runnable() {\n            @Override\n            public void run() {\n                assertThat(faveButton.isActive(), is(false));\n                assertThat(upvoteButton.isActive(), is(true));\n                assertThat(downvoteButton.isActive(), is(false));\n            }\n        });\n        faveButton.performClick();\n        testInteraction(DerpibooruImageInteraction.InteractionType.Downvote, new Runnable() {\n            @Override\n            public void run() {\n                assertThat(faveButton.isActive(), is(false));\n                assertThat(upvoteButton.isActive(), is(false));\n                assertThat(downvoteButton.isActive(), is(true));\n            }\n        });\n        downvoteButton.performClick();\n        testInteraction(DerpibooruImageInteraction.InteractionType.Upvote, new Runnable() {\n            @Override\n            public void run() {\n                assertThat(faveButton.isActive(), is(false));\n                assertThat(upvoteButton.isActive(), is(true));\n                assertThat(downvoteButton.isActive(), is(false));\n            }\n        });\n        upvoteButton.performClick();\n        testInteraction(DerpibooruImageInteraction.InteractionType.ClearVote, new Runnable() {\n            @Override\n            public void run() {\n                assertThat(faveButton.isActive(), is(false));\n                assertThat(upvoteButton.isActive(), is(false));\n                assertThat(downvoteButton.isActive(), is(false));\n            }\n        });\n        upvoteButton.performClick();\n    }", "signature": "void testInteractions()", "full_signature": "@Test public void testInteractions()", "class_method_signature": "ImageInteractionPresenterTest.testInteractions()", "testcase": true, "constructor": false, "invocations": ["enableInteractions", "testInteraction", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "performClick", "testInteraction", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "performClick", "testInteraction", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "performClick", "testInteraction", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "performClick", "testInteraction", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "assertThat", "isActive", "is", "performClick"]}, "focal_class": {"identifier": "ImageInteractionPresenter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ImageInteractionRequester mInteractionRequester;", "modifier": "private", "type": "ImageInteractionRequester", "declarator": "mInteractionRequester", "var_name": "mInteractionRequester"}, {"original_string": "private int mId;", "modifier": "private", "type": "int", "declarator": "mId", "var_name": "mId"}, {"original_string": "private AccentColorIconButton mScoreButton;", "modifier": "private", "type": "AccentColorIconButton", "declarator": "mScoreButton", "var_name": "mScoreButton"}, {"original_string": "private AccentColorIconButton mFaveButton;", "modifier": "private", "type": "AccentColorIconButton", "declarator": "mFaveButton", "var_name": "mFaveButton"}, {"original_string": "private AccentColorIconButton mUpvoteButton;", "modifier": "private", "type": "AccentColorIconButton", "declarator": "mUpvoteButton", "var_name": "mUpvoteButton"}, {"original_string": "private AccentColorIconButton mDownvoteButton;", "modifier": "private", "type": "AccentColorIconButton", "declarator": "mDownvoteButton", "var_name": "mDownvoteButton"}], "methods": [{"identifier": "ImageInteractionPresenter", "parameters": "(int imageId,\n                                        @Nullable AccentColorIconButton scoreButton,\n                                        @Nullable AccentColorIconButton faveButton,\n                                        @Nullable AccentColorIconButton upvoteButton,\n                                        @Nullable AccentColorIconButton downvoteButton)", "modifiers": "protected", "return": "", "signature": " ImageInteractionPresenter(int imageId,\n                                        @Nullable AccentColorIconButton scoreButton,\n                                        @Nullable AccentColorIconButton faveButton,\n                                        @Nullable AccentColorIconButton upvoteButton,\n                                        @Nullable AccentColorIconButton downvoteButton)", "full_signature": "protected  ImageInteractionPresenter(int imageId,\n                                        @Nullable AccentColorIconButton scoreButton,\n                                        @Nullable AccentColorIconButton faveButton,\n                                        @Nullable AccentColorIconButton upvoteButton,\n                                        @Nullable AccentColorIconButton downvoteButton)", "class_method_signature": "ImageInteractionPresenter.ImageInteractionPresenter(int imageId,\n                                        @Nullable AccentColorIconButton scoreButton,\n                                        @Nullable AccentColorIconButton faveButton,\n                                        @Nullable AccentColorIconButton upvoteButton,\n                                        @Nullable AccentColorIconButton downvoteButton)", "testcase": false, "constructor": true}, {"identifier": "enableInteractions", "parameters": "(Context context)", "modifiers": "public final", "return": "void", "signature": "void enableInteractions(Context context)", "full_signature": "public final void enableInteractions(Context context)", "class_method_signature": "ImageInteractionPresenter.enableInteractions(Context context)", "testcase": false, "constructor": false}, {"identifier": "getNewInstanceOfRequester", "parameters": "(Context context, InteractionRequestHandler handler)", "modifiers": "protected", "return": "ImageInteractionRequester", "signature": "ImageInteractionRequester getNewInstanceOfRequester(Context context, InteractionRequestHandler handler)", "full_signature": "protected ImageInteractionRequester getNewInstanceOfRequester(Context context, InteractionRequestHandler handler)", "class_method_signature": "ImageInteractionPresenter.getNewInstanceOfRequester(Context context, InteractionRequestHandler handler)", "testcase": false, "constructor": false}, {"identifier": "toggleInteractionButtons", "parameters": "(boolean enabled)", "modifiers": "private", "return": "void", "signature": "void toggleInteractionButtons(boolean enabled)", "full_signature": "private void toggleInteractionButtons(boolean enabled)", "class_method_signature": "ImageInteractionPresenter.toggleInteractionButtons(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "onInteractionFailed", "parameters": "()", "modifiers": "protected abstract", "return": "void", "signature": "void onInteractionFailed()", "full_signature": "protected abstract void onInteractionFailed()", "class_method_signature": "ImageInteractionPresenter.onInteractionFailed()", "testcase": false, "constructor": false}, {"identifier": "getInteractionsSet", "parameters": "()", "modifiers": "@NonNull protected abstract", "return": "EnumSet<DerpibooruImageInteraction.InteractionType>", "signature": "EnumSet<DerpibooruImageInteraction.InteractionType> getInteractionsSet()", "full_signature": "@NonNull protected abstract EnumSet<DerpibooruImageInteraction.InteractionType> getInteractionsSet()", "class_method_signature": "ImageInteractionPresenter.getInteractionsSet()", "testcase": false, "constructor": false}, {"identifier": "onInteractionCompleted", "parameters": "(DerpibooruImageInteraction result)", "modifiers": "protected", "return": "void", "signature": "void onInteractionCompleted(DerpibooruImageInteraction result)", "full_signature": "protected void onInteractionCompleted(DerpibooruImageInteraction result)", "class_method_signature": "ImageInteractionPresenter.onInteractionCompleted(DerpibooruImageInteraction result)", "testcase": false, "constructor": false}, {"identifier": "refreshInfo", "parameters": "(int faves, int upvotes, int downvotes)", "modifiers": "public", "return": "void", "signature": "void refreshInfo(int faves, int upvotes, int downvotes)", "full_signature": "public void refreshInfo(int faves, int upvotes, int downvotes)", "class_method_signature": "ImageInteractionPresenter.refreshInfo(int faves, int upvotes, int downvotes)", "testcase": false, "constructor": false}, {"identifier": "initializeInteractionListeners", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeInteractionListeners()", "full_signature": "private void initializeInteractionListeners()", "class_method_signature": "ImageInteractionPresenter.initializeInteractionListeners()", "testcase": false, "constructor": false}], "file": "app/src/main/java/derpibooru/derpy/ui/presenters/ImageInteractionPresenter.java"}, "focal_method": {"identifier": "enableInteractions", "parameters": "(Context context)", "modifiers": "public final", "return": "void", "body": "public final void enableInteractions(Context context) {\n        mInteractionRequester = getNewInstanceOfRequester(context, new InteractionRequestHandler());\n        initializeInteractionListeners();\n        toggleInteractionButtons(true);\n    }", "signature": "void enableInteractions(Context context)", "full_signature": "public final void enableInteractions(Context context)", "class_method_signature": "ImageInteractionPresenter.enableInteractions(Context context)", "testcase": false, "constructor": false, "invocations": ["getNewInstanceOfRequester", "initializeInteractionListeners", "toggleInteractionButtons"]}, "repository": {"repo_id": 51344857, "url": "https://github.com/deliciousblackink/Derpibooru", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 13, "size": 2552, "license": "licensed"}}