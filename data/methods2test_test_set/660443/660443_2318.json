{"test_class": {"identifier": "ChemObjectTest", "superclass": "extends AbstractChemObjectTest", "interfaces": "", "fields": [], "file": "base/data/src/test/java/org/openscience/cdk/ChemObjectTest.java"}, "test_case": {"identifier": "testChemObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChemObject() {\n        IChemObject chemObject = new ChemObject();\n        Assert.assertNotNull(chemObject);\n    }", "signature": "void testChemObject()", "full_signature": "@Test public void testChemObject()", "class_method_signature": "ChemObjectTest.testChemObject()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "ChemObject", "superclass": "", "interfaces": "implements Serializable, IChemObject, Cloneable", "fields": [{"original_string": "private static final long         serialVersionUID = 2798134548764323328L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2798134548764323328L", "var_name": "serialVersionUID"}, {"original_string": "private List<IChemObjectListener> chemObjectListeners;", "modifier": "private", "type": "List<IChemObjectListener>", "declarator": "chemObjectListeners", "var_name": "chemObjectListeners"}, {"original_string": "private Map<Object, Object>       properties;", "modifier": "private", "type": "Map<Object, Object>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private short                     flags;", "modifier": "private", "type": "short", "declarator": "flags", "var_name": "flags"}, {"original_string": "private String                    identifier;", "modifier": "private", "type": "String", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private boolean doNotification = true;", "modifier": "private", "type": "boolean", "declarator": "doNotification = true", "var_name": "doNotification"}], "methods": [{"identifier": "ChemObject", "parameters": "()", "modifiers": "public", "return": "", "signature": " ChemObject()", "full_signature": "public  ChemObject()", "class_method_signature": "ChemObject.ChemObject()", "testcase": false, "constructor": true}, {"identifier": "ChemObject", "parameters": "(IChemObject chemObject)", "modifiers": "public", "return": "", "signature": " ChemObject(IChemObject chemObject)", "full_signature": "public  ChemObject(IChemObject chemObject)", "class_method_signature": "ChemObject.ChemObject(IChemObject chemObject)", "testcase": false, "constructor": true}, {"identifier": "lazyChemObjectListeners", "parameters": "()", "modifiers": "private", "return": "List<IChemObjectListener>", "signature": "List<IChemObjectListener> lazyChemObjectListeners()", "full_signature": "private List<IChemObjectListener> lazyChemObjectListeners()", "class_method_signature": "ChemObject.lazyChemObjectListeners()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "ChemObject.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "ChemObject.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "ChemObject.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "ChemObject.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "ChemObject.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "lazyProperties", "parameters": "()", "modifiers": "private", "return": "Map<Object, Object>", "signature": "Map<Object, Object> lazyProperties()", "full_signature": "private Map<Object, Object> lazyProperties()", "class_method_signature": "ChemObject.lazyProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "ChemObject.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "ChemObject.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "ChemObject.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description, Class<T> c)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description, Class<T> c)", "full_signature": "@Override public T getProperty(Object description, Class<T> c)", "class_method_signature": "ChemObject.getProperty(Object description, Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "ChemObject.getProperties()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "ChemObject.clone()", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(Object object)", "modifiers": "public", "return": "boolean", "signature": "boolean compare(Object object)", "full_signature": "public boolean compare(Object object)", "class_method_signature": "ChemObject.compare(Object object)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "ChemObject.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "ChemObject.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "isPowerOfTwo", "parameters": "(int num)", "modifiers": "private", "return": "boolean", "signature": "boolean isPowerOfTwo(int num)", "full_signature": "private boolean isPowerOfTwo(int num)", "class_method_signature": "ChemObject.isPowerOfTwo(int num)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int mask, boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int mask, boolean value)", "full_signature": "@Override public void setFlag(int mask, boolean value)", "class_method_signature": "ChemObject.setFlag(int mask, boolean value)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int mask)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int mask)", "full_signature": "@Override public boolean getFlag(int mask)", "class_method_signature": "ChemObject.getFlag(int mask)", "testcase": false, "constructor": false}, {"identifier": "getFlagValue", "parameters": "()", "modifiers": "@Override public", "return": "Short", "signature": "Short getFlagValue()", "full_signature": "@Override public Short getFlagValue()", "class_method_signature": "ChemObject.getFlagValue()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void setProperties(Map<Object, Object> properties)", "full_signature": "@Override public void setProperties(Map<Object, Object> properties)", "class_method_signature": "ChemObject.setProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "ChemObject.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "ChemObject.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "ChemObject.getFlags()", "testcase": false, "constructor": false}, {"identifier": "shallowCopy", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object shallowCopy()", "full_signature": "public Object shallowCopy()", "class_method_signature": "ChemObject.shallowCopy()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "ChemObject.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "setNotification", "parameters": "(boolean bool)", "modifiers": "@Override public", "return": "void", "signature": "void setNotification(boolean bool)", "full_signature": "@Override public void setNotification(boolean bool)", "class_method_signature": "ChemObject.setNotification(boolean bool)", "testcase": false, "constructor": false}, {"identifier": "getNotification", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getNotification()", "full_signature": "@Override public boolean getNotification()", "class_method_signature": "ChemObject.getNotification()", "testcase": false, "constructor": false}], "file": "base/data/src/main/java/org/openscience/cdk/ChemObject.java"}, "focal_method": {"identifier": "ChemObject", "parameters": "()", "modifiers": "public", "return": "", "body": "public ChemObject() {\n        chemObjectListeners = null;\n        properties = null;\n        identifier = null;\n    }", "signature": " ChemObject()", "full_signature": "public  ChemObject()", "class_method_signature": "ChemObject.ChemObject()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}