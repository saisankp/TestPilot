{"test_class": {"identifier": "ImmutableAuthorizationSubjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_ID = \"antman\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_ID = \"antman\"", "var_name": "KNOWN_ID"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationSubjectTest.java"}, "test_case": {"identifier": "tryToCreateAuthorizationSubjectWithEmptyId", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void tryToCreateAuthorizationSubjectWithEmptyId() {\n        ImmutableAuthorizationSubject.of(\"\");\n    }", "signature": "void tryToCreateAuthorizationSubjectWithEmptyId()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void tryToCreateAuthorizationSubjectWithEmptyId()", "class_method_signature": "ImmutableAuthorizationSubjectTest.tryToCreateAuthorizationSubjectWithEmptyId()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "ImmutableAuthorizationSubject", "superclass": "", "interfaces": "implements AuthorizationSubject", "fields": [{"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}], "methods": [{"identifier": "ImmutableAuthorizationSubject", "parameters": "(final CharSequence theId)", "modifiers": "private", "return": "", "signature": " ImmutableAuthorizationSubject(final CharSequence theId)", "full_signature": "private  ImmutableAuthorizationSubject(final CharSequence theId)", "class_method_signature": "ImmutableAuthorizationSubject.ImmutableAuthorizationSubject(final CharSequence theId)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence id)", "modifiers": "public static", "return": "ImmutableAuthorizationSubject", "signature": "ImmutableAuthorizationSubject of(final CharSequence id)", "full_signature": "public static ImmutableAuthorizationSubject of(final CharSequence id)", "class_method_signature": "ImmutableAuthorizationSubject.of(final CharSequence id)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "ImmutableAuthorizationSubject.getId()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableAuthorizationSubject.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableAuthorizationSubject.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableAuthorizationSubject.toString()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationSubject.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence id)", "modifiers": "public static", "return": "ImmutableAuthorizationSubject", "body": "public static ImmutableAuthorizationSubject of(final CharSequence id) {\n        final String argumentName = \"identifier of the new authorization subject\";\n        checkNotNull(id, argumentName);\n        checkNotEmpty(id, argumentName);\n\n        return new ImmutableAuthorizationSubject(id);\n    }", "signature": "ImmutableAuthorizationSubject of(final CharSequence id)", "full_signature": "public static ImmutableAuthorizationSubject of(final CharSequence id)", "class_method_signature": "ImmutableAuthorizationSubject.of(final CharSequence id)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotEmpty"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}