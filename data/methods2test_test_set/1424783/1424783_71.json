{"test_class": {"identifier": "BubbleRendererTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "XYPlot xyPlot;", "modifier": "", "type": "XYPlot", "declarator": "xyPlot", "var_name": "xyPlot"}, {"original_string": "Canvas canvas;", "modifier": "", "type": "Canvas", "declarator": "canvas", "var_name": "canvas"}, {"original_string": "RectF plotArea = new RectF(0, 0, 100, 100);", "modifier": "", "type": "RectF", "declarator": "plotArea = new RectF(0, 0, 100, 100)", "var_name": "plotArea"}, {"original_string": "@Mock\n    RenderStack renderStack;", "modifier": "@Mock", "type": "RenderStack", "declarator": "renderStack", "var_name": "renderStack"}], "file": "androidplot-core/src/test/java/com/androidplot/xy/BubbleRendererTest.java"}, "test_case": {"identifier": "testOnRender_withPointLabeler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnRender_withPointLabeler() throws Exception {\n        BubbleFormatter formatter = spy(new BubbleFormatter());\n        PointLabelFormatter plf = new PointLabelFormatter(Color.MAGENTA);\n        formatter.setPointLabelFormatter(plf);\n        BubbleRenderer br = formatter.getRendererInstance(xyPlot);\n        BubbleRenderer renderer = spy(br);\n\n        doReturn(renderer.getClass()).when(formatter).getRendererClass();\n        doReturn(renderer).when(formatter).getRendererInstance(any(XYPlot.class));\n\n        BubbleSeries bs = new BubbleSeries(2, 2, 22);\n\n        xyPlot.addSeries(bs, formatter);\n\n        renderer.onRender(canvas, plotArea, bs, formatter, renderStack);\n\n        // verify the z-val is the one labeled:\n        verify(canvas).drawText(eq(\"22\"), anyFloat(), anyFloat(), eq(plf.getTextPaint()));\n    }", "signature": "void testOnRender_withPointLabeler()", "full_signature": "@Test public void testOnRender_withPointLabeler()", "class_method_signature": "BubbleRendererTest.testOnRender_withPointLabeler()", "testcase": true, "constructor": false, "invocations": ["spy", "setPointLabelFormatter", "getRendererInstance", "spy", "getRendererClass", "when", "doReturn", "getClass", "getRendererInstance", "when", "doReturn", "any", "addSeries", "onRender", "drawText", "verify", "eq", "anyFloat", "anyFloat", "eq", "getTextPaint"]}, "focal_class": {"identifier": "BubbleRenderer", "superclass": "extends XYSeriesRenderer<BubbleSeries, FormatterType>", "interfaces": "", "fields": [{"original_string": "protected static final float MIN_BUBBLE_RADIUS_DEFAULT_DP = 9;", "modifier": "protected static final", "type": "float", "declarator": "MIN_BUBBLE_RADIUS_DEFAULT_DP = 9", "var_name": "MIN_BUBBLE_RADIUS_DEFAULT_DP"}, {"original_string": "protected static final float MAX_BUBBLE_RADIUS_DEFAULT_DP = 25;", "modifier": "protected static final", "type": "float", "declarator": "MAX_BUBBLE_RADIUS_DEFAULT_DP = 25", "var_name": "MAX_BUBBLE_RADIUS_DEFAULT_DP"}, {"original_string": "private Region bubbleBounds;", "modifier": "private", "type": "Region", "declarator": "bubbleBounds", "var_name": "bubbleBounds"}, {"original_string": "private BubbleScaleMode bubbleScaleMode = BubbleScaleMode.SQUARE_ROOT;", "modifier": "private", "type": "BubbleScaleMode", "declarator": "bubbleScaleMode = BubbleScaleMode.SQUARE_ROOT", "var_name": "bubbleScaleMode"}], "methods": [{"identifier": "BubbleRenderer", "parameters": "(XYPlot plot)", "modifiers": "public", "return": "", "signature": " BubbleRenderer(XYPlot plot)", "full_signature": "public  BubbleRenderer(XYPlot plot)", "class_method_signature": "BubbleRenderer.BubbleRenderer(XYPlot plot)", "testcase": false, "constructor": true}, {"identifier": "onRender", "parameters": "(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "modifiers": "@Override protected", "return": "void", "signature": "void onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "full_signature": "@Override protected void onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "class_method_signature": "BubbleRenderer.onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "testcase": false, "constructor": false}, {"identifier": "drawBubble", "parameters": "(Canvas canvas, FormatterType formatter, BubbleSeries series,\n            int index, PointF centerPoint, float radius)", "modifiers": "protected", "return": "void", "signature": "void drawBubble(Canvas canvas, FormatterType formatter, BubbleSeries series,\n            int index, PointF centerPoint, float radius)", "full_signature": "protected void drawBubble(Canvas canvas, FormatterType formatter, BubbleSeries series,\n            int index, PointF centerPoint, float radius)", "class_method_signature": "BubbleRenderer.drawBubble(Canvas canvas, FormatterType formatter, BubbleSeries series,\n            int index, PointF centerPoint, float radius)", "testcase": false, "constructor": false}, {"identifier": "doDrawLegendIcon", "parameters": "(Canvas canvas, RectF rect, FormatterType formatter)", "modifiers": "@Override protected", "return": "void", "signature": "void doDrawLegendIcon(Canvas canvas, RectF rect, FormatterType formatter)", "full_signature": "@Override protected void doDrawLegendIcon(Canvas canvas, RectF rect, FormatterType formatter)", "class_method_signature": "BubbleRenderer.doDrawLegendIcon(Canvas canvas, RectF rect, FormatterType formatter)", "testcase": false, "constructor": false}, {"identifier": "getMinBubbleRadius", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getMinBubbleRadius()", "full_signature": "public float getMinBubbleRadius()", "class_method_signature": "BubbleRenderer.getMinBubbleRadius()", "testcase": false, "constructor": false}, {"identifier": "setMinBubbleRadius", "parameters": "(float minBubbleRadius)", "modifiers": "public", "return": "void", "signature": "void setMinBubbleRadius(float minBubbleRadius)", "full_signature": "public void setMinBubbleRadius(float minBubbleRadius)", "class_method_signature": "BubbleRenderer.setMinBubbleRadius(float minBubbleRadius)", "testcase": false, "constructor": false}, {"identifier": "getMaxBubbleRadius", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getMaxBubbleRadius()", "full_signature": "public float getMaxBubbleRadius()", "class_method_signature": "BubbleRenderer.getMaxBubbleRadius()", "testcase": false, "constructor": false}, {"identifier": "setMaxBubbleRadius", "parameters": "(float maxBubbleRadius)", "modifiers": "public", "return": "void", "signature": "void setMaxBubbleRadius(float maxBubbleRadius)", "full_signature": "public void setMaxBubbleRadius(float maxBubbleRadius)", "class_method_signature": "BubbleRenderer.setMaxBubbleRadius(float maxBubbleRadius)", "testcase": false, "constructor": false}, {"identifier": "getBubbleScaleMode", "parameters": "()", "modifiers": "public", "return": "BubbleScaleMode", "signature": "BubbleScaleMode getBubbleScaleMode()", "full_signature": "public BubbleScaleMode getBubbleScaleMode()", "class_method_signature": "BubbleRenderer.getBubbleScaleMode()", "testcase": false, "constructor": false}, {"identifier": "setBubbleScaleMode", "parameters": "(BubbleScaleMode bubbleScaleMode)", "modifiers": "public", "return": "void", "signature": "void setBubbleScaleMode(BubbleScaleMode bubbleScaleMode)", "full_signature": "public void setBubbleScaleMode(BubbleScaleMode bubbleScaleMode)", "class_method_signature": "BubbleRenderer.setBubbleScaleMode(BubbleScaleMode bubbleScaleMode)", "testcase": false, "constructor": false}, {"identifier": "calculateBounds", "parameters": "()", "modifiers": "protected", "return": "Region", "signature": "Region calculateBounds()", "full_signature": "protected Region calculateBounds()", "class_method_signature": "BubbleRenderer.calculateBounds()", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/BubbleRenderer.java"}, "focal_method": {"identifier": "onRender", "parameters": "(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack) {\n\n        Region magnitudeBounds = calculateBounds();\n        for(int i = 0; i < series.size(); i++) {\n\n            // only render non-null values greater than zero:\n            if(series.getY(i) != null && series.getZ(i).doubleValue() > 0) {\n\n                final PointF centerPoint = getPlot().getBounds().\n                        transform(series.getX(i), series.getY(i), plotArea, false, true);\n\n                // calculate bubble radius:\n                float bubbleRadius = magnitudeBounds.\n                        transform(bubbleScaleMode == BubbleScaleMode.SQUARE_ROOT ?\n                                  Math.sqrt(series.getZ(i).doubleValue()) :\n                                  series.getZ(i).doubleValue(), bubbleBounds).floatValue();\n                drawBubble(canvas, formatter, series, i, centerPoint, bubbleRadius);\n            }\n        }\n    }", "signature": "void onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "full_signature": "@Override protected void onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "class_method_signature": "BubbleRenderer.onRender(Canvas canvas, RectF plotArea, BubbleSeries series,\n            FormatterType formatter, RenderStack stack)", "testcase": false, "constructor": false, "invocations": ["calculateBounds", "size", "getY", "doubleValue", "getZ", "transform", "getBounds", "getPlot", "getX", "getY", "floatValue", "transform", "sqrt", "doubleValue", "getZ", "doubleValue", "getZ", "drawBubble"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}