{"test_class": {"identifier": "TestDataServiceManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "DataServiceManagerTest serviceManager;", "modifier": "", "type": "DataServiceManagerTest", "declarator": "serviceManager", "var_name": "serviceManager"}, {"original_string": "SimpleDateFormat auditDateFormatter = new SimpleDateFormat\n      (\"dd-MM-yyyy-HH:mm\");", "modifier": "", "type": "SimpleDateFormat", "declarator": "auditDateFormatter = new SimpleDateFormat\n      (\"dd-MM-yyyy-HH:mm\")", "var_name": "auditDateFormatter"}], "file": "conduit-visualization/src/test/java/com/inmobi/conduit/visualization/server/TestDataServiceManager.java"}, "test_case": {"identifier": "testPercentileProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPercentileProperty() {\n    Exception exception = null;\n    try {\n    serviceManager = DataServiceManagerTest.get(\"\" +\n        \"./src/test/resources/xmlfolder1\",\n        \"./src/test/resources/visualization-percentile-wrong.properties\",\n        \"./src/test/resources/audit-feeder.properties\");\n    } catch (Exception e) {\n      exception = e;\n    }\n    Assert.assertTrue(exception instanceof RuntimeException);\n  }", "signature": "void testPercentileProperty()", "full_signature": "@Test public void testPercentileProperty()", "class_method_signature": "TestDataServiceManager.testPercentileProperty()", "testcase": true, "constructor": false, "invocations": ["get", "assertTrue"]}, "focal_class": {"identifier": "DataServiceManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = Logger.getLogger(DataServiceManager.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = Logger.getLogger(DataServiceManager.class)", "var_name": "LOG"}, {"original_string": "private static DataServiceManager instance = null;", "modifier": "private static", "type": "DataServiceManager", "declarator": "instance = null", "var_name": "instance"}, {"original_string": "private List<ConduitConfig> conduitConfig;", "modifier": "private", "type": "List<ConduitConfig>", "declarator": "conduitConfig", "var_name": "conduitConfig"}, {"original_string": "private VisualizationProperties properties;", "modifier": "private", "type": "VisualizationProperties", "declarator": "properties", "var_name": "properties"}, {"original_string": "private final ClientConfig feederConfig;", "modifier": "private final", "type": "ClientConfig", "declarator": "feederConfig", "var_name": "feederConfig"}], "methods": [{"identifier": "DataServiceManager", "parameters": "(boolean init)", "modifiers": "protected", "return": "", "signature": " DataServiceManager(boolean init)", "full_signature": "protected  DataServiceManager(boolean init)", "class_method_signature": "DataServiceManager.DataServiceManager(boolean init)", "testcase": false, "constructor": true}, {"identifier": "DataServiceManager", "parameters": "(boolean init,\n                               String visualizationPropertiesPath,\n                               String feederPropertiesPath)", "modifiers": "protected", "return": "", "signature": " DataServiceManager(boolean init,\n                               String visualizationPropertiesPath,\n                               String feederPropertiesPath)", "full_signature": "protected  DataServiceManager(boolean init,\n                               String visualizationPropertiesPath,\n                               String feederPropertiesPath)", "class_method_signature": "DataServiceManager.DataServiceManager(boolean init,\n                               String visualizationPropertiesPath,\n                               String feederPropertiesPath)", "testcase": false, "constructor": true}, {"identifier": "validateRollUpProperties", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateRollUpProperties()", "full_signature": "private void validateRollUpProperties()", "class_method_signature": "DataServiceManager.validateRollUpProperties()", "testcase": false, "constructor": false}, {"identifier": "initConfig", "parameters": "(String folderPath)", "modifiers": "protected", "return": "void", "signature": "void initConfig(String folderPath)", "full_signature": "protected void initConfig(String folderPath)", "class_method_signature": "DataServiceManager.initConfig(String folderPath)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(boolean init)", "modifiers": "public static", "return": "DataServiceManager", "signature": "DataServiceManager get(boolean init)", "full_signature": "public static DataServiceManager get(boolean init)", "class_method_signature": "DataServiceManager.get(boolean init)", "testcase": false, "constructor": false}, {"identifier": "getStreamAndClusterList", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStreamAndClusterList()", "full_signature": "public String getStreamAndClusterList()", "class_method_signature": "DataServiceManager.getStreamAndClusterList()", "testcase": false, "constructor": false}, {"identifier": "getTopologyData", "parameters": "(String filterValues)", "modifiers": "public", "return": "String", "signature": "String getTopologyData(String filterValues)", "full_signature": "public String getTopologyData(String filterValues)", "class_method_signature": "DataServiceManager.getTopologyData(String filterValues)", "testcase": false, "constructor": false}, {"identifier": "getFilterMap", "parameters": "(String filterValues)", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> getFilterMap(String filterValues)", "full_signature": "protected Map<String, String> getFilterMap(String filterValues)", "class_method_signature": "DataServiceManager.getFilterMap(String filterValues)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(Tuple tuple, Map<NodeKey, Node> nodeMap,\n                          Set<Float> percentileSet,\n                          Map<Float, Integer> tuplePercentileMap)", "modifiers": "protected", "return": "void", "signature": "void createNode(Tuple tuple, Map<NodeKey, Node> nodeMap,\n                          Set<Float> percentileSet,\n                          Map<Float, Integer> tuplePercentileMap)", "full_signature": "protected void createNode(Tuple tuple, Map<NodeKey, Node> nodeMap,\n                          Set<Float> percentileSet,\n                          Map<Float, Integer> tuplePercentileMap)", "class_method_signature": "DataServiceManager.createNode(Tuple tuple, Map<NodeKey, Node> nodeMap,\n                          Set<Float> percentileSet,\n                          Map<Float, Integer> tuplePercentileMap)", "testcase": false, "constructor": false}, {"identifier": "getSourceListForTuple", "parameters": "(Tuple tuple)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getSourceListForTuple(Tuple tuple)", "full_signature": "private Set<String> getSourceListForTuple(Tuple tuple)", "class_method_signature": "DataServiceManager.getSourceListForTuple(Tuple tuple)", "testcase": false, "constructor": false}, {"identifier": "setFilterString", "parameters": "(Map<String, String> filterMap)", "modifiers": "protected", "return": "String", "signature": "String setFilterString(Map<String, String> filterMap)", "full_signature": "protected String setFilterString(Map<String, String> filterMap)", "class_method_signature": "DataServiceManager.setFilterString(Map<String, String> filterMap)", "testcase": false, "constructor": false}, {"identifier": "buildPercentileMapOfAllNodes", "parameters": "(Map<NodeKey, Node> nodeMap)", "modifiers": "private", "return": "void", "signature": "void buildPercentileMapOfAllNodes(Map<NodeKey, Node> nodeMap)", "full_signature": "private void buildPercentileMapOfAllNodes(Map<NodeKey, Node> nodeMap)", "class_method_signature": "DataServiceManager.buildPercentileMapOfAllNodes(Map<NodeKey, Node> nodeMap)", "testcase": false, "constructor": false}, {"identifier": "addVIPNodesToNodesList", "parameters": "(Map<NodeKey, Node> nodeMap,\n                                      Set<Float> percentileSet)", "modifiers": "protected", "return": "void", "signature": "void addVIPNodesToNodesList(Map<NodeKey, Node> nodeMap,\n                                      Set<Float> percentileSet)", "full_signature": "protected void addVIPNodesToNodesList(Map<NodeKey, Node> nodeMap,\n                                      Set<Float> percentileSet)", "class_method_signature": "DataServiceManager.addVIPNodesToNodesList(Map<NodeKey, Node> nodeMap,\n                                      Set<Float> percentileSet)", "testcase": false, "constructor": false}, {"identifier": "mergeLists", "parameters": "(List<MessageStats> list1,\n                                        List<MessageStats> list2)", "modifiers": "private", "return": "List<MessageStats>", "signature": "List<MessageStats> mergeLists(List<MessageStats> list1,\n                                        List<MessageStats> list2)", "full_signature": "private List<MessageStats> mergeLists(List<MessageStats> list1,\n                                        List<MessageStats> list2)", "class_method_signature": "DataServiceManager.mergeLists(List<MessageStats> list1,\n                                        List<MessageStats> list2)", "testcase": false, "constructor": false}, {"identifier": "getConduitConfig", "parameters": "()", "modifiers": "public", "return": "List<ConduitConfig>", "signature": "List<ConduitConfig> getConduitConfig()", "full_signature": "public List<ConduitConfig> getConduitConfig()", "class_method_signature": "DataServiceManager.getConduitConfig()", "testcase": false, "constructor": false}, {"identifier": "getTierLatencyData", "parameters": "(String filterValues)", "modifiers": "public", "return": "String", "signature": "String getTierLatencyData(String filterValues)", "full_signature": "public String getTierLatencyData(String filterValues)", "class_method_signature": "DataServiceManager.getTierLatencyData(String filterValues)", "testcase": false, "constructor": false}, {"identifier": "getTierLatencyMap", "parameters": "(String endTime,\n                                                            String startTime,\n                                                            String\n                                                                filterString)", "modifiers": "private", "return": "Map<Tuple, Map<Float, Integer>>", "signature": "Map<Tuple, Map<Float, Integer>> getTierLatencyMap(String endTime,\n                                                            String startTime,\n                                                            String\n                                                                filterString)", "full_signature": "private Map<Tuple, Map<Float, Integer>> getTierLatencyMap(String endTime,\n                                                            String startTime,\n                                                            String\n                                                                filterString)", "class_method_signature": "DataServiceManager.getTierLatencyMap(String endTime,\n                                                            String startTime,\n                                                            String\n                                                                filterString)", "testcase": false, "constructor": false}, {"identifier": "getTimeLineData", "parameters": "(String filterValues)", "modifiers": "public", "return": "String", "signature": "String getTimeLineData(String filterValues)", "full_signature": "public String getTimeLineData(String filterValues)", "class_method_signature": "DataServiceManager.getTimeLineData(String filterValues)", "testcase": false, "constructor": false}], "file": "conduit-visualization/src/main/java/com/inmobi/conduit/visualization/server/DataServiceManager.java"}, "focal_method": {"identifier": "get", "parameters": "(boolean init)", "modifiers": "public static", "return": "DataServiceManager", "body": "public static DataServiceManager get(boolean init) {\n    if (instance == null) {\n      instance = new DataServiceManager(init);\n    }\n    return instance;\n  }", "signature": "DataServiceManager get(boolean init)", "full_signature": "public static DataServiceManager get(boolean init)", "class_method_signature": "DataServiceManager.get(boolean init)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}