{"test_class": {"identifier": "VABCDescriptorTest", "superclass": "extends MolecularDescriptorTest", "interfaces": "", "fields": [], "file": "descriptor/qsarmolecular/src/test/java/org/openscience/cdk/qsar/descriptors/molecular/VABCDescriptorTest.java"}, "test_case": {"identifier": "testIronChloride", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIronChloride() throws InvalidSmilesException, CDKException {\n        IAtomContainer ironChloride = new SmilesParser(SilentChemObjectBuilder.getInstance()).parseSmiles(\"Cl[Fe]Cl\");\n        Assert.assertEquals(Double.NaN, ((DoubleResult) descriptor.calculate(ironChloride).getValue()).doubleValue(),\n                0.01);\n    }", "signature": "void testIronChloride()", "full_signature": "@Test public void testIronChloride()", "class_method_signature": "VABCDescriptorTest.testIronChloride()", "testcase": true, "constructor": false, "invocations": ["parseSmiles", "getInstance", "assertEquals", "doubleValue", "getValue", "calculate"]}, "focal_class": {"identifier": "VABCDescriptor", "superclass": "extends AbstractMolecularDescriptor", "interfaces": "implements IMolecularDescriptor", "fields": [], "methods": [{"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "VABCDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "VABCDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "VABCDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "VABCDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "getDummyDescriptorValue", "parameters": "(Exception e)", "modifiers": "private", "return": "DescriptorValue", "signature": "DescriptorValue getDummyDescriptorValue(Exception e)", "full_signature": "private DescriptorValue getDummyDescriptorValue(Exception e)", "class_method_signature": "VABCDescriptor.getDummyDescriptorValue(Exception e)", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtomContainer atomContainer)", "full_signature": "@Override public DescriptorValue calculate(IAtomContainer atomContainer)", "class_method_signature": "VABCDescriptor.calculate(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorResultType", "parameters": "()", "modifiers": "@Override public", "return": "IDescriptorResult", "signature": "IDescriptorResult getDescriptorResultType()", "full_signature": "@Override public IDescriptorResult getDescriptorResultType()", "class_method_signature": "VABCDescriptor.getDescriptorResultType()", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "VABCDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "VABCDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "descriptor/qsarmolecular/src/main/java/org/openscience/cdk/qsar/descriptors/molecular/VABCDescriptor.java"}, "focal_method": {"identifier": "calculate", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "DescriptorValue", "body": "@Override\n    public DescriptorValue calculate(IAtomContainer atomContainer) {\n        double volume;\n        try {\n            // clone: don't mod original\n            volume = VABCVolume.calculate(clone(atomContainer));\n        } catch (CDKException exception) {\n            return getDummyDescriptorValue(exception);\n        }\n\n        return new DescriptorValue(getSpecification(), getParameterNames(), getParameters(), new DoubleResult(volume),\n                getDescriptorNames());\n    }", "signature": "DescriptorValue calculate(IAtomContainer atomContainer)", "full_signature": "@Override public DescriptorValue calculate(IAtomContainer atomContainer)", "class_method_signature": "VABCDescriptor.calculate(IAtomContainer atomContainer)", "testcase": false, "constructor": false, "invocations": ["calculate", "clone", "getDummyDescriptorValue", "getSpecification", "getParameterNames", "getParameters", "getDescriptorNames"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}