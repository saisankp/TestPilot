{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "stagemonitor-configuration/src/test/java/org/stagemonitor/util/StringUtilsTest.java"}, "test_case": {"identifier": "testSha1Hash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSha1Hash() throws Exception {\n\t\t// result from org.apache.commons.codec.digest.DigestUtils.sha1Hex\n\t\tassertEquals(\"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\", StringUtils.sha1Hash(\"test\"));\n\t}", "signature": "void testSha1Hash()", "full_signature": "@Test public void testSha1Hash()", "class_method_signature": "StringUtilsTest.testSha1Hash()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "sha1Hash"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern CAMEL_CASE = Pattern.compile(\"(?<=[A-Z])(?=[A-Z][a-z])|(?<=[^A-Z])(?=[A-Z])|(?<=[A-Za-z])(?=[^A-Za-z])\");", "modifier": "private static final", "type": "Pattern", "declarator": "CAMEL_CASE = Pattern.compile(\"(?<=[A-Z])(?=[A-Z][a-z])|(?<=[^A-Z])(?=[A-Z])|(?<=[A-Za-z])(?=[^A-Za-z])\")", "var_name": "CAMEL_CASE"}, {"original_string": "private static final char[] hexArray = \"0123456789abcdef\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "hexArray = \"0123456789abcdef\".toCharArray()", "var_name": "hexArray"}], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "removeStart", "parameters": "(final String str, final String remove)", "modifiers": "public static", "return": "String", "signature": "String removeStart(final String str, final String remove)", "full_signature": "public static String removeStart(final String str, final String remove)", "class_method_signature": "StringUtils.removeStart(final String str, final String remove)", "testcase": false, "constructor": false}, {"identifier": "capitalize", "parameters": "(String self)", "modifiers": "public static", "return": "String", "signature": "String capitalize(String self)", "full_signature": "public static String capitalize(String self)", "class_method_signature": "StringUtils.capitalize(String self)", "testcase": false, "constructor": false}, {"identifier": "splitCamelCase", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String splitCamelCase(String s)", "full_signature": "public static String splitCamelCase(String s)", "class_method_signature": "StringUtils.splitCamelCase(String s)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String str, final char separatorChar)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String str, final char separatorChar)", "full_signature": "public static String[] split(final String str, final char separatorChar)", "class_method_signature": "StringUtils.split(final String str, final char separatorChar)", "testcase": false, "constructor": false}, {"identifier": "dateAsIsoString", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String dateAsIsoString(Date date)", "full_signature": "public static String dateAsIsoString(Date date)", "class_method_signature": "StringUtils.dateAsIsoString(Date date)", "testcase": false, "constructor": false}, {"identifier": "timestampAsIsoString", "parameters": "(long timestamp)", "modifiers": "public static", "return": "String", "signature": "String timestampAsIsoString(long timestamp)", "full_signature": "public static String timestampAsIsoString(long timestamp)", "class_method_signature": "StringUtils.timestampAsIsoString(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "slugify", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String slugify(String s)", "full_signature": "public static String slugify(String s)", "class_method_signature": "StringUtils.slugify(String s)", "testcase": false, "constructor": false}, {"identifier": "isNotEmpty", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNotEmpty(String s)", "full_signature": "public static boolean isNotEmpty(String s)", "class_method_signature": "StringUtils.isNotEmpty(String s)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(String s)", "full_signature": "public static boolean isEmpty(String s)", "class_method_signature": "StringUtils.isEmpty(String s)", "testcase": false, "constructor": false}, {"identifier": "asCsv", "parameters": "(String[] strings)", "modifiers": "public static", "return": "String", "signature": "String asCsv(String[] strings)", "full_signature": "public static String asCsv(String[] strings)", "class_method_signature": "StringUtils.asCsv(String[] strings)", "testcase": false, "constructor": false}, {"identifier": "asCsv", "parameters": "(Collection<?> values)", "modifiers": "public static", "return": "String", "signature": "String asCsv(Collection<?> values)", "full_signature": "public static String asCsv(Collection<?> values)", "class_method_signature": "StringUtils.asCsv(Collection<?> values)", "testcase": false, "constructor": false}, {"identifier": "getLogstashStyleDate", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getLogstashStyleDate()", "full_signature": "public static String getLogstashStyleDate()", "class_method_signature": "StringUtils.getLogstashStyleDate()", "testcase": false, "constructor": false}, {"identifier": "getLogstashStyleDate", "parameters": "(long time)", "modifiers": "public static", "return": "String", "signature": "String getLogstashStyleDate(long time)", "full_signature": "public static String getLogstashStyleDate(long time)", "class_method_signature": "StringUtils.getLogstashStyleDate(long time)", "testcase": false, "constructor": false}, {"identifier": "replaceWhitespacesWithDash", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String replaceWhitespacesWithDash(String s)", "full_signature": "public static String replaceWhitespacesWithDash(String s)", "class_method_signature": "StringUtils.replaceWhitespacesWithDash(String s)", "testcase": false, "constructor": false}, {"identifier": "toCommaSeparatedString", "parameters": "(String... strings)", "modifiers": "public static", "return": "String", "signature": "String toCommaSeparatedString(String... strings)", "full_signature": "public static String toCommaSeparatedString(String... strings)", "class_method_signature": "StringUtils.toCommaSeparatedString(String... strings)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSlash", "parameters": "(String url)", "modifiers": "public static", "return": "String", "signature": "String removeTrailingSlash(String url)", "full_signature": "public static String removeTrailingSlash(String url)", "class_method_signature": "StringUtils.removeTrailingSlash(String url)", "testcase": false, "constructor": false}, {"identifier": "sha1Hash", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String sha1Hash(String s)", "full_signature": "public static String sha1Hash(String s)", "class_method_signature": "StringUtils.sha1Hash(String s)", "testcase": false, "constructor": false}, {"identifier": "bytesToHex", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHex(byte[] bytes)", "full_signature": "public static String bytesToHex(byte[] bytes)", "class_method_signature": "StringUtils.bytesToHex(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long l)", "modifiers": "public static", "return": "String", "signature": "String toHexString(long l)", "full_signature": "public static String toHexString(long l)", "class_method_signature": "StringUtils.toHexString(long l)", "testcase": false, "constructor": false}, {"identifier": "deDot", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String deDot(String s)", "full_signature": "public static String deDot(String s)", "class_method_signature": "StringUtils.deDot(String s)", "testcase": false, "constructor": false}, {"identifier": "reDot", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String reDot(String s)", "full_signature": "public static String reDot(String s)", "class_method_signature": "StringUtils.reDot(String s)", "testcase": false, "constructor": false}], "file": "stagemonitor-configuration/src/main/java/org/stagemonitor/util/StringUtils.java"}, "focal_method": {"identifier": "sha1Hash", "parameters": "(String s)", "modifiers": "public static", "return": "String", "body": "public static String sha1Hash(String s) {\n\t\tif (s == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfinal MessageDigest messageDigest;\n\t\ttry {\n\t\t\tmessageDigest = MessageDigest.getInstance(\"SHA-1\");\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t\tfinal byte[] digest = messageDigest.digest(s.getBytes(Charset.forName(\"UTF-8\")));\n\t\treturn bytesToHex(digest);\n\t}", "signature": "String sha1Hash(String s)", "full_signature": "public static String sha1Hash(String s)", "class_method_signature": "StringUtils.sha1Hash(String s)", "testcase": false, "constructor": false, "invocations": ["getInstance", "digest", "getBytes", "forName", "bytesToHex"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}