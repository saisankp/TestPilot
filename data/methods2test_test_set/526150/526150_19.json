{"test_class": {"identifier": "IgbpGlccProductReaderPlugInTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IgbpGlccProductReaderPlugIn plugin;", "modifier": "private", "type": "IgbpGlccProductReaderPlugIn", "declarator": "plugin", "var_name": "plugin"}], "file": "beam-glob-due-reader/src/test/java/org/esa/beam/dataio/igbp/glcc/IgbpGlccProductReaderPlugInTest.java"}, "test_case": {"identifier": "testGetDecodeQualification", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDecodeQualification() throws Exception {\n        assertEquals(DecodeQualification.UNABLE, plugin.getDecodeQualification( \"horst\" ) );\n        assertEquals(DecodeQualification.UNABLE, plugin.getDecodeQualification( \"gbats1_2.img\" ) );\n\n        assertEquals(DecodeQualification.INTENDED, plugin.getDecodeQualification( \"gbats2_0ll.img\" ) );\n        assertEquals(DecodeQualification.INTENDED, plugin.getDecodeQualification( \"gigbp2_0ll.img\" ) );\n    }", "signature": "void testGetDecodeQualification()", "full_signature": "@Test public void testGetDecodeQualification()", "class_method_signature": "IgbpGlccProductReaderPlugInTest.testGetDecodeQualification()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDecodeQualification", "assertEquals", "getDecodeQualification", "assertEquals", "getDecodeQualification", "assertEquals", "getDecodeQualification"]}, "focal_class": {"identifier": "IgbpGlccProductReaderPlugIn", "superclass": "", "interfaces": "implements ProductReaderPlugIn", "fields": [], "methods": [{"identifier": "getDecodeQualification", "parameters": "(Object input)", "modifiers": "@Override public", "return": "DecodeQualification", "signature": "DecodeQualification getDecodeQualification(Object input)", "full_signature": "@Override public DecodeQualification getDecodeQualification(Object input)", "class_method_signature": "IgbpGlccProductReaderPlugIn.getDecodeQualification(Object input)", "testcase": false, "constructor": false}, {"identifier": "getInputTypes", "parameters": "()", "modifiers": "@Override public", "return": "Class[]", "signature": "Class[] getInputTypes()", "full_signature": "@Override public Class[] getInputTypes()", "class_method_signature": "IgbpGlccProductReaderPlugIn.getInputTypes()", "testcase": false, "constructor": false}, {"identifier": "createReaderInstance", "parameters": "()", "modifiers": "@Override public", "return": "ProductReader", "signature": "ProductReader createReaderInstance()", "full_signature": "@Override public ProductReader createReaderInstance()", "class_method_signature": "IgbpGlccProductReaderPlugIn.createReaderInstance()", "testcase": false, "constructor": false}, {"identifier": "getFormatNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getFormatNames()", "full_signature": "@Override public String[] getFormatNames()", "class_method_signature": "IgbpGlccProductReaderPlugIn.getFormatNames()", "testcase": false, "constructor": false}, {"identifier": "getDefaultFileExtensions", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDefaultFileExtensions()", "full_signature": "@Override public String[] getDefaultFileExtensions()", "class_method_signature": "IgbpGlccProductReaderPlugIn.getDefaultFileExtensions()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(Locale locale)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(Locale locale)", "full_signature": "@Override public String getDescription(Locale locale)", "class_method_signature": "IgbpGlccProductReaderPlugIn.getDescription(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getProductFileFilter", "parameters": "()", "modifiers": "@Override public", "return": "BeamFileFilter", "signature": "BeamFileFilter getProductFileFilter()", "full_signature": "@Override public BeamFileFilter getProductFileFilter()", "class_method_signature": "IgbpGlccProductReaderPlugIn.getProductFileFilter()", "testcase": false, "constructor": false}], "file": "beam-glob-due-reader/src/main/java/org/esa/beam/dataio/igbp/glcc/IgbpGlccProductReaderPlugIn.java"}, "focal_method": {"identifier": "getDecodeQualification", "parameters": "(Object input)", "modifiers": "@Override public", "return": "DecodeQualification", "body": "@Override\n    public DecodeQualification getDecodeQualification(Object input) {\n        if (input != null) {\n            File inputFile = new File( input.toString() );\n            final String inputFileName = inputFile.getName().toLowerCase();\n            if( inputFileName.matches(\"g(.*)2_0ll\\\\.img\") ) {\n                return DecodeQualification.INTENDED;\n            }\n        }\n        return DecodeQualification.UNABLE;\n    }", "signature": "DecodeQualification getDecodeQualification(Object input)", "full_signature": "@Override public DecodeQualification getDecodeQualification(Object input)", "class_method_signature": "IgbpGlccProductReaderPlugIn.getDecodeQualification(Object input)", "testcase": false, "constructor": false, "invocations": ["toString", "toLowerCase", "getName", "matches"]}, "repository": {"repo_id": 526150, "url": "https://github.com/bcdev/glob-box", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 6440, "license": "licensed"}}