{"test_class": {"identifier": "ModifyFeatureLiveCommandImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ModifyFeature twinCommand;", "modifier": "private", "type": "ModifyFeature", "declarator": "twinCommand", "var_name": "twinCommand"}, {"original_string": "private ModifyFeatureLiveCommand underTest;", "modifier": "private", "type": "ModifyFeatureLiveCommand", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/live/src/test/java/org/eclipse/ditto/signals/commands/live/modify/ModifyFeatureLiveCommandImplTest.java"}, "test_case": {"identifier": "tryToGetModifyFeatureLiveCommandForNull", "parameters": "()", "modifiers": "@SuppressWarnings(\"ConstantConditions\") @Test public", "return": "void", "body": "@SuppressWarnings(\"ConstantConditions\")\n    @Test\n    public void tryToGetModifyFeatureLiveCommandForNull() {\n        assertThatExceptionOfType(NullPointerException.class)\n                .isThrownBy(() -> ModifyFeatureLiveCommandImpl.of(null))\n                .withMessage(MessageFormat.format(\"The {0} must not be null!\", \"command\"))\n                .withNoCause();\n    }", "signature": "void tryToGetModifyFeatureLiveCommandForNull()", "full_signature": "@SuppressWarnings(\"ConstantConditions\") @Test public void tryToGetModifyFeatureLiveCommandForNull()", "class_method_signature": "ModifyFeatureLiveCommandImplTest.tryToGetModifyFeatureLiveCommandForNull()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatExceptionOfType", "of", "format"]}, "focal_class": {"identifier": "ModifyFeatureLiveCommandImpl", "superclass": "extends AbstractModifyLiveCommand<ModifyFeatureLiveCommand,\n        ModifyFeatureLiveCommandAnswerBuilder>", "interfaces": "implements ModifyFeatureLiveCommand", "fields": [{"original_string": "private final Feature feature;", "modifier": "private final", "type": "Feature", "declarator": "feature", "var_name": "feature"}], "methods": [{"identifier": "ModifyFeatureLiveCommandImpl", "parameters": "(final ModifyFeature command)", "modifiers": "private", "return": "", "signature": " ModifyFeatureLiveCommandImpl(final ModifyFeature command)", "full_signature": "private  ModifyFeatureLiveCommandImpl(final ModifyFeature command)", "class_method_signature": "ModifyFeatureLiveCommandImpl.ModifyFeatureLiveCommandImpl(final ModifyFeature command)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Command<?> command)", "modifiers": "@Nonnull public static", "return": "ModifyFeatureLiveCommandImpl", "signature": "ModifyFeatureLiveCommandImpl of(final Command<?> command)", "full_signature": "@Nonnull public static ModifyFeatureLiveCommandImpl of(final Command<?> command)", "class_method_signature": "ModifyFeatureLiveCommandImpl.of(final Command<?> command)", "testcase": false, "constructor": false}, {"identifier": "getFeatureId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFeatureId()", "full_signature": "@Override public String getFeatureId()", "class_method_signature": "ModifyFeatureLiveCommandImpl.getFeatureId()", "testcase": false, "constructor": false}, {"identifier": "getFeature", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Feature", "signature": "Feature getFeature()", "full_signature": "@Nonnull @Override public Feature getFeature()", "class_method_signature": "ModifyFeatureLiveCommandImpl.getFeature()", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "()", "modifiers": "@Override public", "return": "Category", "signature": "Category getCategory()", "full_signature": "@Override public Category getCategory()", "class_method_signature": "ModifyFeatureLiveCommandImpl.getCategory()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "ModifyFeatureLiveCommand", "signature": "ModifyFeatureLiveCommand setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public ModifyFeatureLiveCommand setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyFeatureLiveCommandImpl.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "changesAuthorization", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean changesAuthorization()", "full_signature": "@Override public boolean changesAuthorization()", "class_method_signature": "ModifyFeatureLiveCommandImpl.changesAuthorization()", "testcase": false, "constructor": false}, {"identifier": "answer", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "ModifyFeatureLiveCommandAnswerBuilder", "signature": "ModifyFeatureLiveCommandAnswerBuilder answer()", "full_signature": "@Nonnull @Override public ModifyFeatureLiveCommandAnswerBuilder answer()", "class_method_signature": "ModifyFeatureLiveCommandImpl.answer()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@Nonnull @Override public String toString()", "class_method_signature": "ModifyFeatureLiveCommandImpl.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/live/src/main/java/org/eclipse/ditto/signals/commands/live/modify/ModifyFeatureLiveCommandImpl.java"}, "focal_method": {"identifier": "of", "parameters": "(final Command<?> command)", "modifiers": "@Nonnull public static", "return": "ModifyFeatureLiveCommandImpl", "body": "@Nonnull\n    public static ModifyFeatureLiveCommandImpl of(final Command<?> command) {\n        return new ModifyFeatureLiveCommandImpl((ModifyFeature) command);\n    }", "signature": "ModifyFeatureLiveCommandImpl of(final Command<?> command)", "full_signature": "@Nonnull public static ModifyFeatureLiveCommandImpl of(final Command<?> command)", "class_method_signature": "ModifyFeatureLiveCommandImpl.of(final Command<?> command)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}