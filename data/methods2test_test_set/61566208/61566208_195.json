{"test_class": {"identifier": "GetSystemBootOptionsTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger(GetSystemBootOptionsTaskTest.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(GetSystemBootOptionsTaskTest.class)", "var_name": "logger"}], "file": "modules/hms-core/src/test/java/com/vmware/vrack/hms/task/oob/ipmi/GetSystemBootOptionsTaskTest.java"}, "test_case": {"identifier": "test_executeTask_ValidHost_ValidBoardMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_executeTask_ValidHost_ValidBoardMapping() throws Exception\n\t{\n\t\tlogger.info(\"TS: GetSystemBootOptionsTaskTest: test_executeTask_ValidHost_ValidBoardMapping\");\n\t\tTaskResponse taskResponse = new TaskResponse(new ServerNode(\"N1\", \"10.28.197.202\", \"root\", \"root123\"));\n\t\t\n\t\tGetSystemBootOptionsTask getSystemBootOptionsTask = new GetSystemBootOptionsTask(taskResponse);\n\t\t\n\t\tIBoardService boardService = new BoardService_S2600GZ();\n\t\tBoardServiceProvider.addBoardService(taskResponse.getNode().getServiceObject(), boardService, true);\n\t\tgetSystemBootOptionsTask.executeTask();\n\t\t\t\t\n\t\tServerNode node = (ServerNode) taskResponse.getNode();\n\t\tassertNotNull(node.getSytemBootOptions());\n\t\tassertNotNull(node.getSytemBootOptions().getBiosBootType());\n\t\tassertNotNull(node.getSytemBootOptions().getBootDeviceInstanceNumber());\n\t\tassertNotNull(node.getSytemBootOptions().getBootDeviceSelector());\n\t\tassertNotNull(node.getSytemBootOptions().getBootDeviceType());\n\t\tassertNotNull(node.getSytemBootOptions().getBootOptionsValidity());\n\t\t\n\t}", "signature": "void test_executeTask_ValidHost_ValidBoardMapping()", "full_signature": "@Test public void test_executeTask_ValidHost_ValidBoardMapping()", "class_method_signature": "GetSystemBootOptionsTaskTest.test_executeTask_ValidHost_ValidBoardMapping()", "testcase": true, "constructor": false, "invocations": ["info", "addBoardService", "getServiceObject", "getNode", "executeTask", "getNode", "assertNotNull", "getSytemBootOptions", "assertNotNull", "getBiosBootType", "getSytemBootOptions", "assertNotNull", "getBootDeviceInstanceNumber", "getSytemBootOptions", "assertNotNull", "getBootDeviceSelector", "getSytemBootOptions", "assertNotNull", "getBootDeviceType", "getSytemBootOptions", "assertNotNull", "getBootOptionsValidity", "getSytemBootOptions"]}, "focal_class": {"identifier": "GetSystemBootOptionsTask", "superclass": "extends IpmiTask", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger( GetSystemBootOptionsTask.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( GetSystemBootOptionsTask.class )", "var_name": "logger"}, {"original_string": "public ServerNode node;", "modifier": "public", "type": "ServerNode", "declarator": "node", "var_name": "node"}, {"original_string": "public TaskResponse response;", "modifier": "public", "type": "TaskResponse", "declarator": "response", "var_name": "response"}], "methods": [{"identifier": "GetSystemBootOptionsTask", "parameters": "( TaskResponse response )", "modifiers": "public", "return": "", "signature": " GetSystemBootOptionsTask( TaskResponse response )", "full_signature": "public  GetSystemBootOptionsTask( TaskResponse response )", "class_method_signature": "GetSystemBootOptionsTask.GetSystemBootOptionsTask( TaskResponse response )", "testcase": false, "constructor": true}, {"identifier": "executeTask", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void executeTask()", "full_signature": "@Override public void executeTask()", "class_method_signature": "GetSystemBootOptionsTask.executeTask()", "testcase": false, "constructor": false}], "file": "modules/hms-core/src/main/java/com/vmware/vrack/hms/task/oob/ipmi/GetSystemBootOptionsTask.java"}, "focal_method": {"identifier": "executeTask", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void executeTask()\n        throws Exception\n    {\n        try\n        {\n            ServiceServerNode serviceServerNode = (ServiceServerNode) node.getServiceObject();\n            IBoardService boardService = BoardServiceProvider.getBoardService( serviceServerNode );\n            if ( boardService != null )\n            {\n                // Object[] paramsArray = new Object[] { serviceServerNode };\n                SystemBootOptions bootOptions = boardService.getBootOptions( serviceServerNode );\n                // SystemBootOptions bootOptions =\n                // HmsPluginServiceCallWrapper.invokeHmsPluginService(boardService,\n                // serviceServerNode, \"getBootOptions\",paramsArray);\n                this.node.setSytemBootOptions( bootOptions );\n            }\n            else\n            {\n                throw new Exception( \"Board Service is NULL for node:\" + node.getNodeID() );\n            }\n\n        }\n        catch ( HmsResourceBusyException e )\n        {\n            String error =\n                String.format( \"HMS Resource is Busy for the node [%s]. Please try after some time\", node.getNodeID() );\n            logger.debug( error, e );\n            throw e;\n        }\n        catch ( Exception e )\n        {\n            throw new HmsException( \"Error while getting System Boot Options for Node:\" + node.getNodeID(), e );\n        }\n    }", "signature": "void executeTask()", "full_signature": "@Override public void executeTask()", "class_method_signature": "GetSystemBootOptionsTask.executeTask()", "testcase": false, "constructor": false, "invocations": ["getServiceObject", "getBoardService", "getBootOptions", "setSytemBootOptions", "getNodeID", "format", "getNodeID", "debug", "getNodeID"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}