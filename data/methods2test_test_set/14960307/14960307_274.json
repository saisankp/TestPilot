{"test_class": {"identifier": "HasherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(HasherTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HasherTest.class)", "var_name": "logger"}, {"original_string": "private static final String MD5_SAMPLE1 = \"test\";", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE1 = \"test\"", "var_name": "MD5_SAMPLE1"}, {"original_string": "private static final String MD5_SAMPLE1_HASH = \"098f6bcd4621d373cade4e832627b4f6\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE1_HASH = \"098f6bcd4621d373cade4e832627b4f6\".toUpperCase()", "var_name": "MD5_SAMPLE1_HASH"}, {"original_string": "private static final String MD5_SAMPLE2 = \"hello world\";", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE2 = \"hello world\"", "var_name": "MD5_SAMPLE2"}, {"original_string": "private static final String MD5_SAMPLE2_HASH = \"5eb63bbbe01eeed093cb22bb8f5acdc3\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE2_HASH = \"5eb63bbbe01eeed093cb22bb8f5acdc3\".toUpperCase()", "var_name": "MD5_SAMPLE2_HASH"}, {"original_string": "private static final String MD5_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\";", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\"", "var_name": "MD5_SAMPLE3"}, {"original_string": "private static final String MD5_SAMPLE3_HASH = \"6c18b1eb40a59dc9ce43f62f4962219c\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "MD5_SAMPLE3_HASH = \"6c18b1eb40a59dc9ce43f62f4962219c\".toUpperCase()", "var_name": "MD5_SAMPLE3_HASH"}, {"original_string": "private static final String SHA1_SAMPLE1 = \"test\";", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE1 = \"test\"", "var_name": "SHA1_SAMPLE1"}, {"original_string": "private static final String SHA1_SAMPLE1_HASH = \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE1_HASH = \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\".toUpperCase()", "var_name": "SHA1_SAMPLE1_HASH"}, {"original_string": "private static final String SHA1_SAMPLE2 = \"th1s!typic@lpassWd\";", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE2 = \"th1s!typic@lpassWd\"", "var_name": "SHA1_SAMPLE2"}, {"original_string": "private static final String SHA1_SAMPLE2_HASH = \"605fea3566504158c869ab98fb36858d68c490a6\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE2_HASH = \"605fea3566504158c869ab98fb36858d68c490a6\".toUpperCase()", "var_name": "SHA1_SAMPLE2_HASH"}, {"original_string": "private static final String SHA1_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\";", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\"", "var_name": "SHA1_SAMPLE3"}, {"original_string": "private static final String SHA1_SAMPLE3_HASH = \"4a728cea6aec64cc6d7f022389019f1ecca85ed0\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA1_SAMPLE3_HASH = \"4a728cea6aec64cc6d7f022389019f1ecca85ed0\".toUpperCase()", "var_name": "SHA1_SAMPLE3_HASH"}, {"original_string": "private static final String SHA256_SAMPLE1 = \"test\";", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE1 = \"test\"", "var_name": "SHA256_SAMPLE1"}, {"original_string": "private static final String SHA256_SAMPLE1_HASH = \"9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE1_HASH = \"9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\".toUpperCase()", "var_name": "SHA256_SAMPLE1_HASH"}, {"original_string": "private static final String SHA256_SAMPLE2 = \"th1s!typic@lpassWd\";", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE2 = \"th1s!typic@lpassWd\"", "var_name": "SHA256_SAMPLE2"}, {"original_string": "private static final String SHA256_SAMPLE2_HASH = \"5178d956703d8a15c2d5516771f8398d446f56f40d1651a9278a178cb883dbeb\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE2_HASH = \"5178d956703d8a15c2d5516771f8398d446f56f40d1651a9278a178cb883dbeb\".toUpperCase()", "var_name": "SHA256_SAMPLE2_HASH"}, {"original_string": "private static final String SHA256_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\";", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\"", "var_name": "SHA256_SAMPLE3"}, {"original_string": "private static final String SHA256_SAMPLE3_HASH = \"614cf1ee45df9ce592fa1bfc3d9a9f9bc6ad887a882987e467f9a3002d779151\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA256_SAMPLE3_HASH = \"614cf1ee45df9ce592fa1bfc3d9a9f9bc6ad887a882987e467f9a3002d779151\".toUpperCase()", "var_name": "SHA256_SAMPLE3_HASH"}, {"original_string": "private static final String SHA512_SAMPLE1 = \"test\";", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE1 = \"test\"", "var_name": "SHA512_SAMPLE1"}, {"original_string": "private static final String SHA512_SAMPLE1_HASH = \"ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE1_HASH = \"ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff\".toUpperCase()", "var_name": "SHA512_SAMPLE1_HASH"}, {"original_string": "private static final String SHA512_SAMPLE2 = \"th1s!typic@lpassWd\";", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE2 = \"th1s!typic@lpassWd\"", "var_name": "SHA512_SAMPLE2"}, {"original_string": "private static final String SHA512_SAMPLE2_HASH = \"8085dbc8919e03ee7c093670e7bd86683b8fee8e0397998f4f74efe4ad6eae323af0bdaa3f3df0558c71f63b27057e1120d962e9c6fa7f86274347334f47b63f\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE2_HASH = \"8085dbc8919e03ee7c093670e7bd86683b8fee8e0397998f4f74efe4ad6eae323af0bdaa3f3df0558c71f63b27057e1120d962e9c6fa7f86274347334f47b63f\".toUpperCase()", "var_name": "SHA512_SAMPLE2_HASH"}, {"original_string": "private static final String SHA512_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\";", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE3 = \"this is going to be a super long string that has spaces, etc. and ! I'm really happy that I'll be testing the MD5 hash to its fullest!!!!\"", "var_name": "SHA512_SAMPLE3"}, {"original_string": "private static final String SHA512_SAMPLE3_HASH = \"14a47a42148abd5a12a0cea35ada405025eff87fe713c7664afc62332f8d852ed9b6f61accd1e3782512a1447851412efea094c81ec61268704d3f2b198b65be\".toUpperCase();", "modifier": "private static final", "type": "String", "declarator": "SHA512_SAMPLE3_HASH = \"14a47a42148abd5a12a0cea35ada405025eff87fe713c7664afc62332f8d852ed9b6f61accd1e3782512a1447851412efea094c81ec61268704d3f2b198b65be\".toUpperCase()", "var_name": "SHA512_SAMPLE3_HASH"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/HasherTest.java"}, "test_case": {"identifier": "toHashedHexStringSHA256", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toHashedHexStringSHA256() throws Exception {\n        // MD5 is default, this will make sure we don't break that\n        Hasher hasher = new Hasher(Hasher.Algorithm.SHA256);\n        String sample1 = hasher.toHashedHexString(SHA256_SAMPLE1);\n        Assert.assertEquals(SHA256_SAMPLE1_HASH, sample1);\n        String sample2 = hasher.toHashedHexString(SHA256_SAMPLE2);\n        Assert.assertEquals(SHA256_SAMPLE2_HASH, sample2);\n        String sample3 = hasher.toHashedHexString(SHA256_SAMPLE3);\n        Assert.assertEquals(SHA256_SAMPLE3_HASH, sample3);\n        Assert.assertEquals(64, sample3.length());\n    }", "signature": "void toHashedHexStringSHA256()", "full_signature": "@Test public void toHashedHexStringSHA256()", "class_method_signature": "HasherTest.toHashedHexStringSHA256()", "testcase": true, "constructor": false, "invocations": ["toHashedHexString", "assertEquals", "toHashedHexString", "assertEquals", "toHashedHexString", "assertEquals", "assertEquals", "length"]}, "focal_class": {"identifier": "Hasher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ALGORITHM_MD5 = \"MD5\";", "modifier": "private static final", "type": "String", "declarator": "ALGORITHM_MD5 = \"MD5\"", "var_name": "ALGORITHM_MD5"}, {"original_string": "private static final String ALGORITHM_SHA1 = \"SHA-1\";", "modifier": "private static final", "type": "String", "declarator": "ALGORITHM_SHA1 = \"SHA-1\"", "var_name": "ALGORITHM_SHA1"}, {"original_string": "private static final String ALGORITHM_SHA256 = \"SHA-256\";", "modifier": "private static final", "type": "String", "declarator": "ALGORITHM_SHA256 = \"SHA-256\"", "var_name": "ALGORITHM_SHA256"}, {"original_string": "private static final String ALGORITHM_SHA512 = \"SHA-512\";", "modifier": "private static final", "type": "String", "declarator": "ALGORITHM_SHA512 = \"SHA-512\"", "var_name": "ALGORITHM_SHA512"}, {"original_string": "private Algorithm algorithm;", "modifier": "private", "type": "Algorithm", "declarator": "algorithm", "var_name": "algorithm"}], "methods": [{"identifier": "Hasher", "parameters": "()", "modifiers": "public", "return": "", "signature": " Hasher()", "full_signature": "public  Hasher()", "class_method_signature": "Hasher.Hasher()", "testcase": false, "constructor": true}, {"identifier": "Hasher", "parameters": "(Algorithm algorithm)", "modifiers": "public", "return": "", "signature": " Hasher(Algorithm algorithm)", "full_signature": "public  Hasher(Algorithm algorithm)", "class_method_signature": "Hasher.Hasher(Algorithm algorithm)", "testcase": false, "constructor": true}, {"identifier": "toHashedHexString", "parameters": "(String string0)", "modifiers": "public", "return": "String", "signature": "String toHashedHexString(String string0)", "full_signature": "public String toHashedHexString(String string0)", "class_method_signature": "Hasher.toHashedHexString(String string0)", "testcase": false, "constructor": false}, {"identifier": "toHashedHexString", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "String", "signature": "String toHashedHexString(byte[] bytes)", "full_signature": "public String toHashedHexString(byte[] bytes)", "class_method_signature": "Hasher.toHashedHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHashedBase64String", "parameters": "(String string0)", "modifiers": "public", "return": "String", "signature": "String toHashedBase64String(String string0)", "full_signature": "public String toHashedBase64String(String string0)", "class_method_signature": "Hasher.toHashedBase64String(String string0)", "testcase": false, "constructor": false}, {"identifier": "toHashedBase64String", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "String", "signature": "String toHashedBase64String(byte[] bytes)", "full_signature": "public String toHashedBase64String(byte[] bytes)", "class_method_signature": "Hasher.toHashedBase64String(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHashedBytes", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "byte[]", "signature": "byte[] toHashedBytes(byte[] bytes)", "full_signature": "public byte[] toHashedBytes(byte[] bytes)", "class_method_signature": "Hasher.toHashedBytes(byte[] bytes)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/Hasher.java"}, "focal_method": {"identifier": "toHashedHexString", "parameters": "(String string0)", "modifiers": "public", "return": "String", "body": "public String toHashedHexString(String string0) throws NoSuchAlgorithmException {\n        return this.toHashedHexString(StringUtil.getAsciiBytes(string0));\n    }", "signature": "String toHashedHexString(String string0)", "full_signature": "public String toHashedHexString(String string0)", "class_method_signature": "Hasher.toHashedHexString(String string0)", "testcase": false, "constructor": false, "invocations": ["toHashedHexString", "getAsciiBytes"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}