{"test_class": {"identifier": "GoogleCloudStorageFileSystemTest", "superclass": "extends GoogleCloudStorageFileSystemIntegrationTest", "interfaces": "", "fields": [{"original_string": "@ClassRule\n  public static NotInheritableExternalResource storageResource =\n      new NotInheritableExternalResource(GoogleCloudStorageFileSystemTest.class) {\n        @Override\n        public void before() throws IOException {\n          // Disable logging.\n          // Normally you would need to keep a strong reference to any logger used for\n          // configuration, but the \"root\" logger is always present.\n          Logger.getLogger(\"\").setLevel(Level.OFF);\n\n          if (gcsfs == null) {\n            gcsfs =\n                new GoogleCloudStorageFileSystem(\n                    new InMemoryGoogleCloudStorage(),\n                    GoogleCloudStorageFileSystemOptions.builder()\n                        .setMarkerFilePattern(\"_(FAILURE|SUCCESS)\")\n                        .build());\n            gcs = gcsfs.getGcs();\n            GoogleCloudStorageFileSystemIntegrationTest.postCreateInit();\n          }\n        }\n\n        @Override\n        public void after() {\n          GoogleCloudStorageFileSystemIntegrationTest.storageResource.after();\n        }\n      };", "modifier": "@ClassRule\n  public static", "type": "NotInheritableExternalResource", "declarator": "storageResource =\n      new NotInheritableExternalResource(GoogleCloudStorageFileSystemTest.class) {\n        @Override\n        public void before() throws IOException {\n          // Disable logging.\n          // Normally you would need to keep a strong reference to any logger used for\n          // configuration, but the \"root\" logger is always present.\n          Logger.getLogger(\"\").setLevel(Level.OFF);\n\n          if (gcsfs == null) {\n            gcsfs =\n                new GoogleCloudStorageFileSystem(\n                    new InMemoryGoogleCloudStorage(),\n                    GoogleCloudStorageFileSystemOptions.builder()\n                        .setMarkerFilePattern(\"_(FAILURE|SUCCESS)\")\n                        .build());\n            gcs = gcsfs.getGcs();\n            GoogleCloudStorageFileSystemIntegrationTest.postCreateInit();\n          }\n        }\n\n        @Override\n        public void after() {\n          GoogleCloudStorageFileSystemIntegrationTest.storageResource.after();\n        }\n      }", "var_name": "storageResource"}], "file": "gcsio/src/test/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageFileSystemTest.java"}, "test_case": {"identifier": "testGetItemName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetItemName()\n      throws URISyntaxException {\n    // Trailing slashes are effectively stripped for returned bucket names, but not for object\n    // names.\n    String[] inputPaths = {\n      \"gs:/\",\n      \"gs://my-bucket\",\n      \"gs://my-bucket/\",\n      \"gs://my-bucket/foo\",\n      \"gs://my-bucket/foo/\",\n      \"gs://my-bucket/foo/bar\",\n      \"gs://my-bucket/foo/bar/\",\n    };\n\n    String[] expectedNames = {\n      null,\n      \"my-bucket\",\n      \"my-bucket\",\n      \"foo\",\n      \"foo/\",\n      \"bar\",\n      \"bar/\",\n    };\n\n    List<String> actualNames = new ArrayList<>();\n    for (String inputPath : inputPaths) {\n      actualNames.add(gcsfs.getItemName(new URI(inputPath)));\n    }\n    assertThat(actualNames.toArray(new String[0])).isEqualTo(expectedNames);\n  }", "signature": "void testGetItemName()", "full_signature": "@Test public void testGetItemName()", "class_method_signature": "GoogleCloudStorageFileSystemTest.testGetItemName()", "testcase": true, "constructor": false, "invocations": ["add", "getItemName", "isEqualTo", "assertThat", "toArray"]}, "focal_class": {"identifier": "GoogleCloudStorageFileSystem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}, {"original_string": "private static final ThreadFactory DAEMON_THREAD_FACTORY =\n      new ThreadFactoryBuilder().setNameFormat(\"gcsfs-thread-%d\").setDaemon(true).build();", "modifier": "private static final", "type": "ThreadFactory", "declarator": "DAEMON_THREAD_FACTORY =\n      new ThreadFactoryBuilder().setNameFormat(\"gcsfs-thread-%d\").setDaemon(true).build()", "var_name": "DAEMON_THREAD_FACTORY"}, {"original_string": "public static final String SCHEME = \"gs\";", "modifier": "public static final", "type": "String", "declarator": "SCHEME = \"gs\"", "var_name": "SCHEME"}, {"original_string": "public static final URI GCS_ROOT = URI.create(SCHEME + \":/\");", "modifier": "public static final", "type": "URI", "declarator": "GCS_ROOT = URI.create(SCHEME + \":/\")", "var_name": "GCS_ROOT"}, {"original_string": "public static final ListObjectOptions LIST_SINGLE_OBJECT_OPTIONS =\n      ListObjectOptions.DEFAULT.toBuilder().setMaxResults(1).build();", "modifier": "public static final", "type": "ListObjectOptions", "declarator": "LIST_SINGLE_OBJECT_OPTIONS =\n      ListObjectOptions.DEFAULT.toBuilder().setMaxResults(1).build()", "var_name": "LIST_SINGLE_OBJECT_OPTIONS"}, {"original_string": "private GoogleCloudStorage gcs;", "modifier": "private", "type": "GoogleCloudStorage", "declarator": "gcs", "var_name": "gcs"}, {"original_string": "private final GoogleCloudStorageFileSystemOptions options;", "modifier": "private final", "type": "GoogleCloudStorageFileSystemOptions", "declarator": "options", "var_name": "options"}, {"original_string": "private ExecutorService cachedExecutor = createCachedExecutor();", "modifier": "private", "type": "ExecutorService", "declarator": "cachedExecutor = createCachedExecutor()", "var_name": "cachedExecutor"}, {"original_string": "@VisibleForTesting\n  static final Comparator<URI> PATH_COMPARATOR =\n      comparing(\n          URI::toString,\n          (as, bs) ->\n              (as.length() == bs.length())\n                  ? as.compareTo(bs)\n                  : Integer.compare(as.length(), bs.length()));", "modifier": "@VisibleForTesting\n  static final", "type": "Comparator<URI>", "declarator": "PATH_COMPARATOR =\n      comparing(\n          URI::toString,\n          (as, bs) ->\n              (as.length() == bs.length())\n                  ? as.compareTo(bs)\n                  : Integer.compare(as.length(), bs.length()))", "var_name": "PATH_COMPARATOR"}, {"original_string": "@VisibleForTesting\n  static final Comparator<FileInfo> FILE_INFO_PATH_COMPARATOR =\n      comparing(FileInfo::getPath, PATH_COMPARATOR);", "modifier": "@VisibleForTesting\n  static final", "type": "Comparator<FileInfo>", "declarator": "FILE_INFO_PATH_COMPARATOR =\n      comparing(FileInfo::getPath, PATH_COMPARATOR)", "var_name": "FILE_INFO_PATH_COMPARATOR"}], "methods": [{"identifier": "GoogleCloudStorageFileSystem", "parameters": "(\n      Credential credential, GoogleCloudStorageFileSystemOptions options)", "modifiers": "public", "return": "", "signature": " GoogleCloudStorageFileSystem(\n      Credential credential, GoogleCloudStorageFileSystemOptions options)", "full_signature": "public  GoogleCloudStorageFileSystem(\n      Credential credential, GoogleCloudStorageFileSystemOptions options)", "class_method_signature": "GoogleCloudStorageFileSystem.GoogleCloudStorageFileSystem(\n      Credential credential, GoogleCloudStorageFileSystemOptions options)", "testcase": false, "constructor": true}, {"identifier": "GoogleCloudStorageFileSystem", "parameters": "(GoogleCloudStorage gcs)", "modifiers": "@VisibleForTesting public", "return": "", "signature": " GoogleCloudStorageFileSystem(GoogleCloudStorage gcs)", "full_signature": "@VisibleForTesting public  GoogleCloudStorageFileSystem(GoogleCloudStorage gcs)", "class_method_signature": "GoogleCloudStorageFileSystem.GoogleCloudStorageFileSystem(GoogleCloudStorage gcs)", "testcase": false, "constructor": true}, {"identifier": "GoogleCloudStorageFileSystem", "parameters": "(\n      GoogleCloudStorage gcs, GoogleCloudStorageFileSystemOptions options)", "modifiers": "@VisibleForTesting public", "return": "", "signature": " GoogleCloudStorageFileSystem(\n      GoogleCloudStorage gcs, GoogleCloudStorageFileSystemOptions options)", "full_signature": "@VisibleForTesting public  GoogleCloudStorageFileSystem(\n      GoogleCloudStorage gcs, GoogleCloudStorageFileSystemOptions options)", "class_method_signature": "GoogleCloudStorageFileSystem.GoogleCloudStorageFileSystem(\n      GoogleCloudStorage gcs, GoogleCloudStorageFileSystemOptions options)", "testcase": false, "constructor": true}, {"identifier": "createCachedExecutor", "parameters": "()", "modifiers": "private static", "return": "ExecutorService", "signature": "ExecutorService createCachedExecutor()", "full_signature": "private static ExecutorService createCachedExecutor()", "class_method_signature": "GoogleCloudStorageFileSystem.createCachedExecutor()", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "public", "return": "GoogleCloudStorageFileSystemOptions", "signature": "GoogleCloudStorageFileSystemOptions getOptions()", "full_signature": "public GoogleCloudStorageFileSystemOptions getOptions()", "class_method_signature": "GoogleCloudStorageFileSystem.getOptions()", "testcase": false, "constructor": false}, {"identifier": "objectOptionsFromFileOptions", "parameters": "(CreateFileOptions options)", "modifiers": "public static", "return": "CreateObjectOptions", "signature": "CreateObjectOptions objectOptionsFromFileOptions(CreateFileOptions options)", "full_signature": "public static CreateObjectOptions objectOptionsFromFileOptions(CreateFileOptions options)", "class_method_signature": "GoogleCloudStorageFileSystem.objectOptionsFromFileOptions(CreateFileOptions options)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(URI path)", "modifiers": "public", "return": "WritableByteChannel", "signature": "WritableByteChannel create(URI path)", "full_signature": "public WritableByteChannel create(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.create(URI path)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(URI path, CreateFileOptions options)", "modifiers": "public", "return": "WritableByteChannel", "signature": "WritableByteChannel create(URI path, CreateFileOptions options)", "full_signature": "public WritableByteChannel create(URI path, CreateFileOptions options)", "class_method_signature": "GoogleCloudStorageFileSystem.create(URI path, CreateFileOptions options)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(URI path)", "modifiers": "public", "return": "SeekableByteChannel", "signature": "SeekableByteChannel open(URI path)", "full_signature": "public SeekableByteChannel open(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.open(URI path)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(URI path, GoogleCloudStorageReadOptions readOptions)", "modifiers": "public", "return": "SeekableByteChannel", "signature": "SeekableByteChannel open(URI path, GoogleCloudStorageReadOptions readOptions)", "full_signature": "public SeekableByteChannel open(URI path, GoogleCloudStorageReadOptions readOptions)", "class_method_signature": "GoogleCloudStorageFileSystem.open(URI path, GoogleCloudStorageReadOptions readOptions)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(URI path, boolean recursive)", "modifiers": "public", "return": "void", "signature": "void delete(URI path, boolean recursive)", "full_signature": "public void delete(URI path, boolean recursive)", "class_method_signature": "GoogleCloudStorageFileSystem.delete(URI path, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "deleteInternal", "parameters": "(List<FileInfo> itemsToDelete, List<FileInfo> bucketsToDelete)", "modifiers": "private", "return": "void", "signature": "void deleteInternal(List<FileInfo> itemsToDelete, List<FileInfo> bucketsToDelete)", "full_signature": "private void deleteInternal(List<FileInfo> itemsToDelete, List<FileInfo> bucketsToDelete)", "class_method_signature": "GoogleCloudStorageFileSystem.deleteInternal(List<FileInfo> itemsToDelete, List<FileInfo> bucketsToDelete)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(URI path)", "modifiers": "public", "return": "boolean", "signature": "boolean exists(URI path)", "full_signature": "public boolean exists(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.exists(URI path)", "testcase": false, "constructor": false}, {"identifier": "mkdirs", "parameters": "(URI path)", "modifiers": "public", "return": "void", "signature": "void mkdirs(URI path)", "full_signature": "public void mkdirs(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.mkdirs(URI path)", "testcase": false, "constructor": false}, {"identifier": "mkdirsInternal", "parameters": "(StorageResourceId resourceId)", "modifiers": "public", "return": "void", "signature": "void mkdirsInternal(StorageResourceId resourceId)", "full_signature": "public void mkdirsInternal(StorageResourceId resourceId)", "class_method_signature": "GoogleCloudStorageFileSystem.mkdirsInternal(StorageResourceId resourceId)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(URI src, URI dst)", "modifiers": "public", "return": "void", "signature": "void rename(URI src, URI dst)", "full_signature": "public void rename(URI src, URI dst)", "class_method_signature": "GoogleCloudStorageFileSystem.rename(URI src, URI dst)", "testcase": false, "constructor": false}, {"identifier": "getDstUri", "parameters": "(FileInfo srcInfo, FileInfo dstInfo, @Nullable FileInfo dstParentInfo)", "modifiers": "private", "return": "URI", "signature": "URI getDstUri(FileInfo srcInfo, FileInfo dstInfo, @Nullable FileInfo dstParentInfo)", "full_signature": "private URI getDstUri(FileInfo srcInfo, FileInfo dstInfo, @Nullable FileInfo dstParentInfo)", "class_method_signature": "GoogleCloudStorageFileSystem.getDstUri(FileInfo srcInfo, FileInfo dstInfo, @Nullable FileInfo dstParentInfo)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(List<URI> sources, URI destination, String contentType)", "modifiers": "public", "return": "void", "signature": "void compose(List<URI> sources, URI destination, String contentType)", "full_signature": "public void compose(List<URI> sources, URI destination, String contentType)", "class_method_signature": "GoogleCloudStorageFileSystem.compose(List<URI> sources, URI destination, String contentType)", "testcase": false, "constructor": false}, {"identifier": "renameDirectoryInternal", "parameters": "(\n      FileInfo srcInfo, URI dst, Optional<CoopLockOperationRename> coopLockOp)", "modifiers": "private", "return": "void", "signature": "void renameDirectoryInternal(\n      FileInfo srcInfo, URI dst, Optional<CoopLockOperationRename> coopLockOp)", "full_signature": "private void renameDirectoryInternal(\n      FileInfo srcInfo, URI dst, Optional<CoopLockOperationRename> coopLockOp)", "class_method_signature": "GoogleCloudStorageFileSystem.renameDirectoryInternal(\n      FileInfo srcInfo, URI dst, Optional<CoopLockOperationRename> coopLockOp)", "testcase": false, "constructor": false}, {"identifier": "copyInternal", "parameters": "(Map<FileInfo, URI> srcToDstItemNames)", "modifiers": "private", "return": "void", "signature": "void copyInternal(Map<FileInfo, URI> srcToDstItemNames)", "full_signature": "private void copyInternal(Map<FileInfo, URI> srcToDstItemNames)", "class_method_signature": "GoogleCloudStorageFileSystem.copyInternal(Map<FileInfo, URI> srcToDstItemNames)", "testcase": false, "constructor": false}, {"identifier": "listFileNames", "parameters": "(FileInfo fileInfo)", "modifiers": "public", "return": "List<URI>", "signature": "List<URI> listFileNames(FileInfo fileInfo)", "full_signature": "public List<URI> listFileNames(FileInfo fileInfo)", "class_method_signature": "GoogleCloudStorageFileSystem.listFileNames(FileInfo fileInfo)", "testcase": false, "constructor": false}, {"identifier": "listFileNames", "parameters": "(FileInfo fileInfo, boolean recursive)", "modifiers": "public", "return": "List<URI>", "signature": "List<URI> listFileNames(FileInfo fileInfo, boolean recursive)", "full_signature": "public List<URI> listFileNames(FileInfo fileInfo, boolean recursive)", "class_method_signature": "GoogleCloudStorageFileSystem.listFileNames(FileInfo fileInfo, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "repairImplicitDirectory", "parameters": "(Future<GoogleCloudStorageItemInfo> infoFuture)", "modifiers": "private", "return": "void", "signature": "void repairImplicitDirectory(Future<GoogleCloudStorageItemInfo> infoFuture)", "full_signature": "private void repairImplicitDirectory(Future<GoogleCloudStorageItemInfo> infoFuture)", "class_method_signature": "GoogleCloudStorageFileSystem.repairImplicitDirectory(Future<GoogleCloudStorageItemInfo> infoFuture)", "testcase": false, "constructor": false}, {"identifier": "getFromFuture", "parameters": "(Future<T> future)", "modifiers": "private static", "return": "T", "signature": "T getFromFuture(Future<T> future)", "full_signature": "private static T getFromFuture(Future<T> future)", "class_method_signature": "GoogleCloudStorageFileSystem.getFromFuture(Future<T> future)", "testcase": false, "constructor": false}, {"identifier": "listAllFileInfoForPrefix", "parameters": "(URI prefix)", "modifiers": "public", "return": "List<FileInfo>", "signature": "List<FileInfo> listAllFileInfoForPrefix(URI prefix)", "full_signature": "public List<FileInfo> listAllFileInfoForPrefix(URI prefix)", "class_method_signature": "GoogleCloudStorageFileSystem.listAllFileInfoForPrefix(URI prefix)", "testcase": false, "constructor": false}, {"identifier": "listAllFileInfoForPrefixPage", "parameters": "(URI prefix, String pageToken)", "modifiers": "public", "return": "ListPage<FileInfo>", "signature": "ListPage<FileInfo> listAllFileInfoForPrefixPage(URI prefix, String pageToken)", "full_signature": "public ListPage<FileInfo> listAllFileInfoForPrefixPage(URI prefix, String pageToken)", "class_method_signature": "GoogleCloudStorageFileSystem.listAllFileInfoForPrefixPage(URI prefix, String pageToken)", "testcase": false, "constructor": false}, {"identifier": "getPrefixId", "parameters": "(URI prefix)", "modifiers": "private", "return": "StorageResourceId", "signature": "StorageResourceId getPrefixId(URI prefix)", "full_signature": "private StorageResourceId getPrefixId(URI prefix)", "class_method_signature": "GoogleCloudStorageFileSystem.getPrefixId(URI prefix)", "testcase": false, "constructor": false}, {"identifier": "listFileInfo", "parameters": "(URI path)", "modifiers": "public", "return": "List<FileInfo>", "signature": "List<FileInfo> listFileInfo(URI path)", "full_signature": "public List<FileInfo> listFileInfo(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.listFileInfo(URI path)", "testcase": false, "constructor": false}, {"identifier": "getFileInfo", "parameters": "(URI path)", "modifiers": "public", "return": "FileInfo", "signature": "FileInfo getFileInfo(URI path)", "full_signature": "public FileInfo getFileInfo(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.getFileInfo(URI path)", "testcase": false, "constructor": false}, {"identifier": "getFileInfoInternal", "parameters": "(\n      StorageResourceId resourceId, boolean inferImplicitDirectories)", "modifiers": "private", "return": "GoogleCloudStorageItemInfo", "signature": "GoogleCloudStorageItemInfo getFileInfoInternal(\n      StorageResourceId resourceId, boolean inferImplicitDirectories)", "full_signature": "private GoogleCloudStorageItemInfo getFileInfoInternal(\n      StorageResourceId resourceId, boolean inferImplicitDirectories)", "class_method_signature": "GoogleCloudStorageFileSystem.getFileInfoInternal(\n      StorageResourceId resourceId, boolean inferImplicitDirectories)", "testcase": false, "constructor": false}, {"identifier": "getFileInfos", "parameters": "(List<URI> paths)", "modifiers": "public", "return": "List<FileInfo>", "signature": "List<FileInfo> getFileInfos(List<URI> paths)", "full_signature": "public List<FileInfo> getFileInfos(List<URI> paths)", "class_method_signature": "GoogleCloudStorageFileSystem.getFileInfos(List<URI> paths)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "GoogleCloudStorageFileSystem.close()", "testcase": false, "constructor": false}, {"identifier": "mkdir", "parameters": "(URI path)", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void mkdir(URI path)", "full_signature": "@VisibleForTesting public void mkdir(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.mkdir(URI path)", "testcase": false, "constructor": false}, {"identifier": "getSubDirs", "parameters": "(String objectName)", "modifiers": "static", "return": "List<String>", "signature": "List<String> getSubDirs(String objectName)", "full_signature": "static List<String> getSubDirs(String objectName)", "class_method_signature": "GoogleCloudStorageFileSystem.getSubDirs(String objectName)", "testcase": false, "constructor": false}, {"identifier": "getItemName", "parameters": "(URI path)", "modifiers": "", "return": "String", "signature": "String getItemName(URI path)", "full_signature": " String getItemName(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.getItemName(URI path)", "testcase": false, "constructor": false}, {"identifier": "getGcs", "parameters": "()", "modifiers": "public", "return": "GoogleCloudStorage", "signature": "GoogleCloudStorage getGcs()", "full_signature": "public GoogleCloudStorage getGcs()", "class_method_signature": "GoogleCloudStorageFileSystem.getGcs()", "testcase": false, "constructor": false}], "file": "gcsio/src/main/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageFileSystem.java"}, "focal_method": {"identifier": "getItemName", "parameters": "(URI path)", "modifiers": "", "return": "String", "body": "String getItemName(URI path) {\n    Preconditions.checkNotNull(path);\n\n    // There is no leaf item for the root path.\n    if (path.equals(GCS_ROOT)) {\n      return null;\n    }\n\n    StorageResourceId resourceId = StorageResourceId.fromUriPath(path, true);\n\n    if (resourceId.isBucket()) {\n      return resourceId.getBucketName();\n    }\n\n    String objectName = resourceId.getObjectName();\n    int index =\n        StringPaths.isDirectoryPath(objectName)\n            ? objectName.lastIndexOf(PATH_DELIMITER, objectName.length() - 2)\n            : objectName.lastIndexOf(PATH_DELIMITER);\n    return index < 0 ? objectName : objectName.substring(index + 1);\n  }", "signature": "String getItemName(URI path)", "full_signature": " String getItemName(URI path)", "class_method_signature": "GoogleCloudStorageFileSystem.getItemName(URI path)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "equals", "fromUriPath", "isBucket", "getBucketName", "getObjectName", "isDirectoryPath", "lastIndexOf", "length", "lastIndexOf", "substring"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}