{"test_class": {"identifier": "UtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String TOKEN = \"8656-8277-2787-7652-8964-7502-4045-14059-8949-8949-3145-7363-14579-2057-7401-2971-7401-8687-14579-711-12844-14579-8687-14579-8890-4847-7401-13335-1440-7363-2852-2852-2852-2852-7363-2852-2852-2852-2852\";", "modifier": "static final", "type": "String", "declarator": "TOKEN = \"8656-8277-2787-7652-8964-7502-4045-14059-8949-8949-3145-7363-14579-2057-7401-2971-7401-8687-14579-711-12844-14579-8687-14579-8890-4847-7401-13335-1440-7363-2852-2852-2852-2852-7363-2852-2852-2852-2852\"", "var_name": "TOKEN"}, {"original_string": "static final String TOKEN_TO_JSON=\"{\\\"uuid\\\":\\\"12345678990\\\",\\\"service\\\":\\\"edifice.reception\\\",\\\"login\\\":\\\"aaaa\\\",\\\"password\\\":\\\"aaaa\\\"}\";", "modifier": "static final", "type": "String", "declarator": "TOKEN_TO_JSON=\"{\\\"uuid\\\":\\\"12345678990\\\",\\\"service\\\":\\\"edifice.reception\\\",\\\"login\\\":\\\"aaaa\\\",\\\"password\\\":\\\"aaaa\\\"}\"", "var_name": "TOKEN_TO_JSON"}], "file": "common/src/test/java/com/ebiznext/sbt/sample/utils/UtilsTest.java"}, "test_case": {"identifier": "testJsonOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testJsonOutput() {\n\t\ttry {\n\t\t\tString asJSON = Utils.jsonOutput(Utils.decrypt(TOKEN));\n\t\t\tassertNotNull(asJSON);\n\t\t\tassertEquals(TOKEN_TO_JSON, asJSON);\n\t\t} catch (JsonGenerationException e) {\n\t\t\tfail(e.getMessage());\n\t\t} catch (JsonMappingException e) {\n\t\t\tfail(e.getMessage());\n\t\t} catch (IOException e) {\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}", "signature": "void testJsonOutput()", "full_signature": "@Test public void testJsonOutput()", "class_method_signature": "UtilsTest.testJsonOutput()", "testcase": true, "constructor": false, "invocations": ["jsonOutput", "decrypt", "assertNotNull", "assertEquals", "fail", "getMessage", "fail", "getMessage", "fail", "getMessage"]}, "focal_class": {"identifier": "Utils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_DESC_LEN = 24;", "modifier": "private static final", "type": "int", "declarator": "MAX_DESC_LEN = 24", "var_name": "MAX_DESC_LEN"}, {"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(Utils.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(Utils.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "Utils", "parameters": "()", "modifiers": "private", "return": "", "signature": " Utils()", "full_signature": "private  Utils()", "class_method_signature": "Utils.Utils()", "testcase": false, "constructor": true}, {"identifier": "soapCall", "parameters": "(URL url, String soapData, String soapAction,\n            String xPathResult)", "modifiers": "public static", "return": "String", "signature": "String soapCall(URL url, String soapData, String soapAction,\n            String xPathResult)", "full_signature": "public static String soapCall(URL url, String soapData, String soapAction,\n            String xPathResult)", "class_method_signature": "Utils.soapCall(URL url, String soapData, String soapAction,\n            String xPathResult)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(String message)", "modifiers": "public static", "return": "UserToken", "signature": "UserToken decrypt(String message)", "full_signature": "public static UserToken decrypt(String message)", "class_method_signature": "Utils.decrypt(String message)", "testcase": false, "constructor": false}, {"identifier": "decryptRSA", "parameters": "(List<BigInteger> c)", "modifiers": "private static", "return": "List<BigInteger>", "signature": "List<BigInteger> decryptRSA(List<BigInteger> c)", "full_signature": "private static List<BigInteger> decryptRSA(List<BigInteger> c)", "class_method_signature": "Utils.decryptRSA(List<BigInteger> c)", "testcase": false, "constructor": false}, {"identifier": "jsonOutput", "parameters": "(Object data)", "modifiers": "public static", "return": "String", "signature": "String jsonOutput(Object data)", "full_signature": "public static String jsonOutput(Object data)", "class_method_signature": "Utils.jsonOutput(Object data)", "testcase": false, "constructor": false}, {"identifier": "formatMontant", "parameters": "(String montant)", "modifiers": "public static", "return": "String", "signature": "String formatMontant(String montant)", "full_signature": "public static String formatMontant(String montant)", "class_method_signature": "Utils.formatMontant(String montant)", "testcase": false, "constructor": false}, {"identifier": "formatDescription", "parameters": "(String desc)", "modifiers": "public static", "return": "String", "signature": "String formatDescription(String desc)", "full_signature": "public static String formatDescription(String desc)", "class_method_signature": "Utils.formatDescription(String desc)", "testcase": false, "constructor": false}, {"identifier": "readFile", "parameters": "(File inputFile)", "modifiers": "public static", "return": "String", "signature": "String readFile(File inputFile)", "full_signature": "public static String readFile(File inputFile)", "class_method_signature": "Utils.readFile(File inputFile)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/ebiznext/sbt/sample/utils/Utils.java"}, "focal_method": {"identifier": "jsonOutput", "parameters": "(Object data)", "modifiers": "public static", "return": "String", "body": "public static String jsonOutput(Object data)\n            throws JsonGenerationException, JsonMappingException, IOException {\n        ObjectMapper mapper = new ObjectMapper();\n        final ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        mapper.writeValue(bos, data);\n        return bos.toString();\n    }", "signature": "String jsonOutput(Object data)", "full_signature": "public static String jsonOutput(Object data)", "class_method_signature": "Utils.jsonOutput(Object data)", "testcase": false, "constructor": false, "invocations": ["writeValue", "toString"]}, "repository": {"repo_id": 13770184, "url": "https://github.com/ebiznext/maven2sbt", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 530, "license": "licensed"}}