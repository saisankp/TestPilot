{"test_class": {"identifier": "ServiceInvocationHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, Method> OBJECT_METHODS = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Method>", "declarator": "OBJECT_METHODS = new HashMap<>()", "var_name": "OBJECT_METHODS"}], "file": "common/src/test/java/org/apache/cxf/dosgi/common/proxy/ServiceInvocationHandlerTest.java"}, "test_case": {"identifier": "testInvoke", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvoke() throws Throwable {\n        ServiceInvocationHandler sih = new ServiceInvocationHandler(\"hello\", String.class);\n        Method m = String.class.getMethod(\"length\");\n        assertEquals(5, sih.invoke(null, m, new Object[] {}));\n    }", "signature": "void testInvoke()", "full_signature": "@Test public void testInvoke()", "class_method_signature": "ServiceInvocationHandlerTest.testInvoke()", "testcase": true, "constructor": false, "invocations": ["getMethod", "assertEquals", "invoke"]}, "focal_class": {"identifier": "ServiceInvocationHandler", "superclass": "", "interfaces": "implements InvocationHandler", "fields": [{"original_string": "private static final Collection<Method> OBJECT_METHODS = Arrays.asList(Object.class.getMethods());", "modifier": "private static final", "type": "Collection<Method>", "declarator": "OBJECT_METHODS = Arrays.asList(Object.class.getMethods())", "var_name": "OBJECT_METHODS"}, {"original_string": "private Object serviceObject;", "modifier": "private", "type": "Object", "declarator": "serviceObject", "var_name": "serviceObject"}, {"original_string": "private ExceptionMapper exceptionMapper;", "modifier": "private", "type": "ExceptionMapper", "declarator": "exceptionMapper", "var_name": "exceptionMapper"}], "methods": [{"identifier": "ServiceInvocationHandler", "parameters": "(Object serviceObject, Class<?> iType)", "modifiers": "", "return": "", "signature": " ServiceInvocationHandler(Object serviceObject, Class<?> iType)", "full_signature": "  ServiceInvocationHandler(Object serviceObject, Class<?> iType)", "class_method_signature": "ServiceInvocationHandler.ServiceInvocationHandler(Object serviceObject, Class<?> iType)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(Object proxy, final Method m, Object[] params)", "modifiers": "@Override public", "return": "Object", "signature": "Object invoke(Object proxy, final Method m, Object[] params)", "full_signature": "@Override public Object invoke(Object proxy, final Method m, Object[] params)", "class_method_signature": "ServiceInvocationHandler.invoke(Object proxy, final Method m, Object[] params)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/apache/cxf/dosgi/common/proxy/ServiceInvocationHandler.java"}, "focal_method": {"identifier": "invoke", "parameters": "(Object proxy, final Method m, Object[] params)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object invoke(Object proxy, final Method m, Object[] params) throws Throwable {\n        if (OBJECT_METHODS.contains(m)) {\n            if (m.getName().equals(\"equals\")) {\n                params = new Object[] {Proxy.getInvocationHandler(params[0])};\n            }\n            return m.invoke(this, params);\n        }\n\n        ClassLoader oldCl = Thread.currentThread().getContextClassLoader();\n        try {\n            Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n            final Object[] paramsFinal = params;\n            return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n                @Override\n                public Object run() throws Exception {\n                    return m.invoke(serviceObject, paramsFinal);\n                }\n            });\n        } catch (Throwable ex) {\n            Throwable theCause = ex.getCause() == null ? ex : ex.getCause();\n            throw exceptionMapper.mapException(m, theCause);\n        } finally {\n            Thread.currentThread().setContextClassLoader(oldCl);\n        }\n    }", "signature": "Object invoke(Object proxy, final Method m, Object[] params)", "full_signature": "@Override public Object invoke(Object proxy, final Method m, Object[] params)", "class_method_signature": "ServiceInvocationHandler.invoke(Object proxy, final Method m, Object[] params)", "testcase": false, "constructor": false, "invocations": ["contains", "equals", "getName", "getInvocationHandler", "invoke", "getContextClassLoader", "currentThread", "setContextClassLoader", "currentThread", "getClassLoader", "getClass", "doPrivileged", "invoke", "getCause", "getCause", "mapException", "setContextClassLoader", "currentThread"]}, "repository": {"repo_id": 17537835, "url": "https://github.com/apache/cxf-dosgi", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 26, "size": 3444, "license": "licensed"}}