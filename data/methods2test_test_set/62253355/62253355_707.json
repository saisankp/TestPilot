{"test_class": {"identifier": "StateRestTest", "superclass": "extends MobiRestTestNg", "interfaces": "", "fields": [{"original_string": "private StateRest rest;", "modifier": "private", "type": "StateRest", "declarator": "rest", "var_name": "rest"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private static Map<Resource, Model> results = new HashMap<>();", "modifier": "private static", "type": "Map<Resource, Model>", "declarator": "results = new HashMap<>()", "var_name": "results"}, {"original_string": "private static Resource stateId;", "modifier": "private static", "type": "Resource", "declarator": "stateId", "var_name": "stateId"}, {"original_string": "private static Model stateModel;", "modifier": "private static", "type": "Model", "declarator": "stateModel", "var_name": "stateModel"}, {"original_string": "@Mock\n    StateManager stateManager;", "modifier": "@Mock", "type": "StateManager", "declarator": "stateManager", "var_name": "stateManager"}, {"original_string": "@Mock\n    SesameTransformer transformer;", "modifier": "@Mock", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}], "file": "com.mobi.platform.config.rest/src/test/java/com/mobi/platform/config/rest/StateRestTest.java"}, "test_case": {"identifier": "deleteStateThatDoesNotExistTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteStateThatDoesNotExistTest() {\n        // Setup:\n        doThrow(new IllegalArgumentException()).when(stateManager).deleteState(any(Resource.class));\n\n        Response response = target().path(\"states/\" + encode(stateId.stringValue()))\n                .request().delete();\n        assertEquals(response.getStatus(), 404);\n    }", "signature": "void deleteStateThatDoesNotExistTest()", "full_signature": "@Test public void deleteStateThatDoesNotExistTest()", "class_method_signature": "StateRestTest.deleteStateThatDoesNotExistTest()", "testcase": true, "constructor": false, "invocations": ["deleteState", "when", "doThrow", "any", "delete", "request", "path", "target", "encode", "stringValue", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "StateRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected StateManager stateManager;", "modifier": "protected", "type": "StateManager", "declarator": "stateManager", "var_name": "stateManager"}, {"original_string": "protected ValueFactory factory;", "modifier": "protected", "type": "ValueFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "protected ModelFactory modelFactory;", "modifier": "protected", "type": "ModelFactory", "declarator": "modelFactory", "var_name": "modelFactory"}, {"original_string": "protected SesameTransformer transformer;", "modifier": "protected", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}], "methods": [{"identifier": "setStateManager", "parameters": "(StateManager stateManager)", "modifiers": "@Reference protected", "return": "void", "signature": "void setStateManager(StateManager stateManager)", "full_signature": "@Reference protected void setStateManager(StateManager stateManager)", "class_method_signature": "StateRest.setStateManager(StateManager stateManager)", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(final ValueFactory vf)", "modifiers": "@Reference protected", "return": "void", "signature": "void setValueFactory(final ValueFactory vf)", "full_signature": "@Reference protected void setValueFactory(final ValueFactory vf)", "class_method_signature": "StateRest.setValueFactory(final ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setModelFactory", "parameters": "(final ModelFactory mf)", "modifiers": "@Reference protected", "return": "void", "signature": "void setModelFactory(final ModelFactory mf)", "full_signature": "@Reference protected void setModelFactory(final ModelFactory mf)", "class_method_signature": "StateRest.setModelFactory(final ModelFactory mf)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(SesameTransformer transformer)", "modifiers": "@Reference protected", "return": "void", "signature": "void setTransformer(SesameTransformer transformer)", "full_signature": "@Reference protected void setTransformer(SesameTransformer transformer)", "class_method_signature": "StateRest.setTransformer(SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "getStates", "parameters": "(@Context ContainerRequestContext context,\n                       @QueryParam(\"application\") String applicationId,\n                       @QueryParam(\"subjects\") List<String> subjectIds)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves State for the User making the request based on filter criteria\") public", "return": "Response", "signature": "Response getStates(@Context ContainerRequestContext context,\n                       @QueryParam(\"application\") String applicationId,\n                       @QueryParam(\"subjects\") List<String> subjectIds)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves State for the User making the request based on filter criteria\") public Response getStates(@Context ContainerRequestContext context,\n                       @QueryParam(\"application\") String applicationId,\n                       @QueryParam(\"subjects\") List<String> subjectIds)", "class_method_signature": "StateRest.getStates(@Context ContainerRequestContext context,\n                       @QueryParam(\"application\") String applicationId,\n                       @QueryParam(\"subjects\") List<String> subjectIds)", "testcase": false, "constructor": false}, {"identifier": "createState", "parameters": "(@Context ContainerRequestContext context,\n                         @QueryParam(\"application\") String applicationId,\n                         String stateJson)", "modifiers": "@POST @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new State for the User making the request\") public", "return": "Response", "signature": "Response createState(@Context ContainerRequestContext context,\n                         @QueryParam(\"application\") String applicationId,\n                         String stateJson)", "full_signature": "@POST @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new State for the User making the request\") public Response createState(@Context ContainerRequestContext context,\n                         @QueryParam(\"application\") String applicationId,\n                         String stateJson)", "class_method_signature": "StateRest.createState(@Context ContainerRequestContext context,\n                         @QueryParam(\"application\") String applicationId,\n                         String stateJson)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "modifiers": "@GET @Path(\"{stateId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves State by ID as long it belongs to the User making the request\") public", "return": "Response", "signature": "Response getState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "full_signature": "@GET @Path(\"{stateId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves State by ID as long it belongs to the User making the request\") public Response getState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "class_method_signature": "StateRest.getState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "testcase": false, "constructor": false}, {"identifier": "updateState", "parameters": "(@Context ContainerRequestContext context,\n                         @PathParam(\"stateId\") String stateId,\n                         String newStateJson)", "modifiers": "@PUT @Path(\"{stateId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates State as long as it belongs to the User making the request\") public", "return": "Response", "signature": "Response updateState(@Context ContainerRequestContext context,\n                         @PathParam(\"stateId\") String stateId,\n                         String newStateJson)", "full_signature": "@PUT @Path(\"{stateId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates State as long as it belongs to the User making the request\") public Response updateState(@Context ContainerRequestContext context,\n                         @PathParam(\"stateId\") String stateId,\n                         String newStateJson)", "class_method_signature": "StateRest.updateState(@Context ContainerRequestContext context,\n                         @PathParam(\"stateId\") String stateId,\n                         String newStateJson)", "testcase": false, "constructor": false}, {"identifier": "deleteState", "parameters": "(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "modifiers": "@DELETE @Path(\"{stateId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes State as long as it belongs to the User making the request\") public", "return": "Response", "signature": "Response deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "full_signature": "@DELETE @Path(\"{stateId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes State as long as it belongs to the User making the request\") public Response deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "class_method_signature": "StateRest.deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "testcase": false, "constructor": false}, {"identifier": "convertModel", "parameters": "(Model model)", "modifiers": "private", "return": "String", "signature": "String convertModel(Model model)", "full_signature": "private String convertModel(Model model)", "class_method_signature": "StateRest.convertModel(Model model)", "testcase": false, "constructor": false}], "file": "com.mobi.platform.config.rest/src/main/java/com/mobi/platform/config/rest/StateRest.java"}, "focal_method": {"identifier": "deleteState", "parameters": "(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "modifiers": "@DELETE @Path(\"{stateId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes State as long as it belongs to the User making the request\") public", "return": "Response", "body": "@DELETE\n    @Path(\"{stateId}\")\n    @RolesAllowed(\"user\")\n    @ApiOperation(\"Deletes State as long as it belongs to the User making the request\")\n    public Response deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId) {\n        String username = RestUtils.getActiveUsername(context);\n        try {\n            if (!stateManager.stateExistsForUser(factory.createIRI(stateId), username)) {\n                throw ErrorUtils.sendError(\"Not allowed\", Response.Status.UNAUTHORIZED);\n            }\n            stateManager.deleteState(factory.createIRI(stateId));\n        } catch (IllegalArgumentException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.NOT_FOUND);\n        } catch (MobiException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n        }\n        return Response.ok().build();\n    }", "signature": "Response deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "full_signature": "@DELETE @Path(\"{stateId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes State as long as it belongs to the User making the request\") public Response deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "class_method_signature": "StateRest.deleteState(@Context ContainerRequestContext context, @PathParam(\"stateId\") String stateId)", "testcase": false, "constructor": false, "invocations": ["getActiveUsername", "stateExistsForUser", "createIRI", "sendError", "deleteState", "createIRI", "sendError", "getMessage", "sendError", "getMessage", "build", "ok"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}