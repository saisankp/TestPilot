{"test_class": {"identifier": "DataSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/dataset/DataSetTest.java"}, "test_case": {"identifier": "testAddIndicator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddIndicator()\n    {\n        DataSet dsA = new DataSet( \"DataSetA\" );\n\n        Indicator indicatorA = new Indicator();\n        Indicator indicatorB = new Indicator();\n        indicatorA.setName( \"Indicator A\");\n        indicatorB.setName( \"Indicator B\");\n\n        dsA.addIndicator( indicatorA );\n\n        assertEquals( 1, dsA.getIndicators().size() );\n        assertTrue( dsA.getIndicators().contains( indicatorA ) );\n\n        assertEquals( 1, indicatorA.getDataSets().size() );\n        assertTrue( indicatorA.getDataSets().contains( dsA ) );\n\n        dsA.addIndicator( indicatorB );\n\n        assertEquals( 2, dsA.getIndicators().size() );\n        assertTrue( dsA.getIndicators().contains( indicatorA ) );\n        assertTrue( dsA.getIndicators().contains( indicatorB ) );\n\n        assertEquals( 1, indicatorA.getDataSets().size() );\n        assertEquals( 1, indicatorB.getDataSets().size() );\n        assertTrue( indicatorA.getDataSets().contains( dsA ) );\n        assertTrue( indicatorB.getDataSets().contains( dsA ) );\n    }", "signature": "void testAddIndicator()", "full_signature": "@Test public void testAddIndicator()", "class_method_signature": "DataSetTest.testAddIndicator()", "testcase": true, "constructor": false, "invocations": ["setName", "setName", "addIndicator", "assertEquals", "size", "getIndicators", "assertTrue", "contains", "getIndicators", "assertEquals", "size", "getDataSets", "assertTrue", "contains", "getDataSets", "addIndicator", "assertEquals", "size", "getIndicators", "assertTrue", "contains", "getIndicators", "assertTrue", "contains", "getIndicators", "assertEquals", "size", "getDataSets", "assertEquals", "size", "getDataSets", "assertTrue", "contains", "getDataSets", "assertTrue", "contains", "getDataSets"]}, "focal_class": {"identifier": "DataSet", "superclass": "extends BaseDimensionalItemObject", "interfaces": "implements VersionedObject, MetadataObject, InterpretableObject", "fields": [{"original_string": "public static final int NO_EXPIRY = 0;", "modifier": "public static final", "type": "int", "declarator": "NO_EXPIRY = 0", "var_name": "NO_EXPIRY"}, {"original_string": "private String formName;", "modifier": "private", "type": "String", "declarator": "formName", "var_name": "formName"}, {"original_string": "private PeriodType periodType;", "modifier": "private", "type": "PeriodType", "declarator": "periodType", "var_name": "periodType"}, {"original_string": "private Set<DataInputPeriod> dataInputPeriods = new HashSet<>();", "modifier": "private", "type": "Set<DataInputPeriod>", "declarator": "dataInputPeriods = new HashSet<>()", "var_name": "dataInputPeriods"}, {"original_string": "private Set<DataSetElement> dataSetElements = new HashSet<>();", "modifier": "private", "type": "Set<DataSetElement>", "declarator": "dataSetElements = new HashSet<>()", "var_name": "dataSetElements"}, {"original_string": "private Set<Indicator> indicators = new HashSet<>();", "modifier": "private", "type": "Set<Indicator>", "declarator": "indicators = new HashSet<>()", "var_name": "indicators"}, {"original_string": "private Set<DataElementOperand> compulsoryDataElementOperands = new HashSet<>();", "modifier": "private", "type": "Set<DataElementOperand>", "declarator": "compulsoryDataElementOperands = new HashSet<>()", "var_name": "compulsoryDataElementOperands"}, {"original_string": "private Set<OrganisationUnit> sources = new HashSet<>();", "modifier": "private", "type": "Set<OrganisationUnit>", "declarator": "sources = new HashSet<>()", "var_name": "sources"}, {"original_string": "private Set<Section> sections = new HashSet<>();", "modifier": "private", "type": "Set<Section>", "declarator": "sections = new HashSet<>()", "var_name": "sections"}, {"original_string": "private CategoryCombo categoryCombo;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryCombo", "var_name": "categoryCombo"}, {"original_string": "private boolean mobile;", "modifier": "private", "type": "boolean", "declarator": "mobile", "var_name": "mobile"}, {"original_string": "private DataEntryForm dataEntryForm;", "modifier": "private", "type": "DataEntryForm", "declarator": "dataEntryForm", "var_name": "dataEntryForm"}, {"original_string": "private int version;", "modifier": "private", "type": "int", "declarator": "version", "var_name": "version"}, {"original_string": "private int expiryDays;", "modifier": "private", "type": "int", "declarator": "expiryDays", "var_name": "expiryDays"}, {"original_string": "private int timelyDays;", "modifier": "private", "type": "int", "declarator": "timelyDays", "var_name": "timelyDays"}, {"original_string": "private UserGroup notificationRecipients;", "modifier": "private", "type": "UserGroup", "declarator": "notificationRecipients", "var_name": "notificationRecipients"}, {"original_string": "private boolean notifyCompletingUser;", "modifier": "private", "type": "boolean", "declarator": "notifyCompletingUser", "var_name": "notifyCompletingUser"}, {"original_string": "private DataApprovalWorkflow workflow;", "modifier": "private", "type": "DataApprovalWorkflow", "declarator": "workflow", "var_name": "workflow"}, {"original_string": "private Set<Interpretation> interpretations = new HashSet<>();", "modifier": "private", "type": "Set<Interpretation>", "declarator": "interpretations = new HashSet<>()", "var_name": "interpretations"}, {"original_string": "private int openFuturePeriods;", "modifier": "private", "type": "int", "declarator": "openFuturePeriods", "var_name": "openFuturePeriods"}, {"original_string": "private int openPeriodsAfterCoEndDate;", "modifier": "private", "type": "int", "declarator": "openPeriodsAfterCoEndDate", "var_name": "openPeriodsAfterCoEndDate"}, {"original_string": "private boolean fieldCombinationRequired;", "modifier": "private", "type": "boolean", "declarator": "fieldCombinationRequired", "var_name": "fieldCombinationRequired"}, {"original_string": "private boolean validCompleteOnly;", "modifier": "private", "type": "boolean", "declarator": "validCompleteOnly", "var_name": "validCompleteOnly"}, {"original_string": "private boolean noValueRequiresComment;", "modifier": "private", "type": "boolean", "declarator": "noValueRequiresComment", "var_name": "noValueRequiresComment"}, {"original_string": "private boolean skipOffline;", "modifier": "private", "type": "boolean", "declarator": "skipOffline", "var_name": "skipOffline"}, {"original_string": "private boolean dataElementDecoration;", "modifier": "private", "type": "boolean", "declarator": "dataElementDecoration", "var_name": "dataElementDecoration"}, {"original_string": "private boolean renderAsTabs;", "modifier": "private", "type": "boolean", "declarator": "renderAsTabs", "var_name": "renderAsTabs"}, {"original_string": "private boolean renderHorizontally;", "modifier": "private", "type": "boolean", "declarator": "renderHorizontally", "var_name": "renderHorizontally"}, {"original_string": "private boolean compulsoryFieldsCompleteOnly;", "modifier": "private", "type": "boolean", "declarator": "compulsoryFieldsCompleteOnly", "var_name": "compulsoryFieldsCompleteOnly"}, {"original_string": "private ObjectStyle style;", "modifier": "private", "type": "ObjectStyle", "declarator": "style", "var_name": "style"}], "methods": [{"identifier": "DataSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " DataSet()", "full_signature": "public  DataSet()", "class_method_signature": "DataSet.DataSet()", "testcase": false, "constructor": true}, {"identifier": "DataSet", "parameters": "( String name )", "modifiers": "public", "return": "", "signature": " DataSet( String name )", "full_signature": "public  DataSet( String name )", "class_method_signature": "DataSet.DataSet( String name )", "testcase": false, "constructor": true}, {"identifier": "DataSet", "parameters": "( String name, PeriodType periodType )", "modifiers": "public", "return": "", "signature": " DataSet( String name, PeriodType periodType )", "full_signature": "public  DataSet( String name, PeriodType periodType )", "class_method_signature": "DataSet.DataSet( String name, PeriodType periodType )", "testcase": false, "constructor": true}, {"identifier": "DataSet", "parameters": "( String name, String shortName, PeriodType periodType )", "modifiers": "public", "return": "", "signature": " DataSet( String name, String shortName, PeriodType periodType )", "full_signature": "public  DataSet( String name, String shortName, PeriodType periodType )", "class_method_signature": "DataSet.DataSet( String name, String shortName, PeriodType periodType )", "testcase": false, "constructor": true}, {"identifier": "DataSet", "parameters": "( String name, String shortName, String code, PeriodType periodType )", "modifiers": "public", "return": "", "signature": " DataSet( String name, String shortName, String code, PeriodType periodType )", "full_signature": "public  DataSet( String name, String shortName, String code, PeriodType periodType )", "class_method_signature": "DataSet.DataSet( String name, String shortName, String code, PeriodType periodType )", "testcase": false, "constructor": true}, {"identifier": "addOrganisationUnit", "parameters": "( OrganisationUnit organisationUnit )", "modifiers": "public", "return": "void", "signature": "void addOrganisationUnit( OrganisationUnit organisationUnit )", "full_signature": "public void addOrganisationUnit( OrganisationUnit organisationUnit )", "class_method_signature": "DataSet.addOrganisationUnit( OrganisationUnit organisationUnit )", "testcase": false, "constructor": false}, {"identifier": "removeOrganisationUnit", "parameters": "( OrganisationUnit organisationUnit )", "modifiers": "public", "return": "boolean", "signature": "boolean removeOrganisationUnit( OrganisationUnit organisationUnit )", "full_signature": "public boolean removeOrganisationUnit( OrganisationUnit organisationUnit )", "class_method_signature": "DataSet.removeOrganisationUnit( OrganisationUnit organisationUnit )", "testcase": false, "constructor": false}, {"identifier": "removeAllOrganisationUnits", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllOrganisationUnits()", "full_signature": "public void removeAllOrganisationUnits()", "class_method_signature": "DataSet.removeAllOrganisationUnits()", "testcase": false, "constructor": false}, {"identifier": "updateOrganisationUnits", "parameters": "( Set<OrganisationUnit> updates )", "modifiers": "public", "return": "void", "signature": "void updateOrganisationUnits( Set<OrganisationUnit> updates )", "full_signature": "public void updateOrganisationUnits( Set<OrganisationUnit> updates )", "class_method_signature": "DataSet.updateOrganisationUnits( Set<OrganisationUnit> updates )", "testcase": false, "constructor": false}, {"identifier": "hasOrganisationUnit", "parameters": "( OrganisationUnit unit )", "modifiers": "public", "return": "boolean", "signature": "boolean hasOrganisationUnit( OrganisationUnit unit )", "full_signature": "public boolean hasOrganisationUnit( OrganisationUnit unit )", "class_method_signature": "DataSet.hasOrganisationUnit( OrganisationUnit unit )", "testcase": false, "constructor": false}, {"identifier": "addDataInputPeriod", "parameters": "( DataInputPeriod dataInputPeriod )", "modifiers": "public", "return": "boolean", "signature": "boolean addDataInputPeriod( DataInputPeriod dataInputPeriod )", "full_signature": "public boolean addDataInputPeriod( DataInputPeriod dataInputPeriod )", "class_method_signature": "DataSet.addDataInputPeriod( DataInputPeriod dataInputPeriod )", "testcase": false, "constructor": false}, {"identifier": "addDataSetElement", "parameters": "( DataSetElement element )", "modifiers": "public", "return": "boolean", "signature": "boolean addDataSetElement( DataSetElement element )", "full_signature": "public boolean addDataSetElement( DataSetElement element )", "class_method_signature": "DataSet.addDataSetElement( DataSetElement element )", "testcase": false, "constructor": false}, {"identifier": "addDataSetElement", "parameters": "( DataElement dataElement )", "modifiers": "public", "return": "boolean", "signature": "boolean addDataSetElement( DataElement dataElement )", "full_signature": "public boolean addDataSetElement( DataElement dataElement )", "class_method_signature": "DataSet.addDataSetElement( DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "addDataSetElement", "parameters": "( DataElement dataElement, CategoryCombo categoryCombo )", "modifiers": "public", "return": "boolean", "signature": "boolean addDataSetElement( DataElement dataElement, CategoryCombo categoryCombo )", "full_signature": "public boolean addDataSetElement( DataElement dataElement, CategoryCombo categoryCombo )", "class_method_signature": "DataSet.addDataSetElement( DataElement dataElement, CategoryCombo categoryCombo )", "testcase": false, "constructor": false}, {"identifier": "removeDataSetElement", "parameters": "( DataSetElement element )", "modifiers": "public", "return": "boolean", "signature": "boolean removeDataSetElement( DataSetElement element )", "full_signature": "public boolean removeDataSetElement( DataSetElement element )", "class_method_signature": "DataSet.removeDataSetElement( DataSetElement element )", "testcase": false, "constructor": false}, {"identifier": "removeDataSetElement", "parameters": "( DataElement dataElement )", "modifiers": "public", "return": "void", "signature": "void removeDataSetElement( DataElement dataElement )", "full_signature": "public void removeDataSetElement( DataElement dataElement )", "class_method_signature": "DataSet.removeDataSetElement( DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "removeAllDataSetElements", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllDataSetElements()", "full_signature": "public void removeAllDataSetElements()", "class_method_signature": "DataSet.removeAllDataSetElements()", "testcase": false, "constructor": false}, {"identifier": "addIndicator", "parameters": "( Indicator indicator )", "modifiers": "public", "return": "void", "signature": "void addIndicator( Indicator indicator )", "full_signature": "public void addIndicator( Indicator indicator )", "class_method_signature": "DataSet.addIndicator( Indicator indicator )", "testcase": false, "constructor": false}, {"identifier": "removeIndicator", "parameters": "( Indicator indicator )", "modifiers": "public", "return": "boolean", "signature": "boolean removeIndicator( Indicator indicator )", "full_signature": "public boolean removeIndicator( Indicator indicator )", "class_method_signature": "DataSet.removeIndicator( Indicator indicator )", "testcase": false, "constructor": false}, {"identifier": "addCompulsoryDataElementOperand", "parameters": "( DataElementOperand dataElementOperand )", "modifiers": "public", "return": "void", "signature": "void addCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "full_signature": "public void addCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "class_method_signature": "DataSet.addCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "testcase": false, "constructor": false}, {"identifier": "removeCompulsoryDataElementOperand", "parameters": "( DataElementOperand dataElementOperand )", "modifiers": "public", "return": "void", "signature": "void removeCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "full_signature": "public void removeCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "class_method_signature": "DataSet.removeCompulsoryDataElementOperand( DataElementOperand dataElementOperand )", "testcase": false, "constructor": false}, {"identifier": "assignWorkflow", "parameters": "( DataApprovalWorkflow workflow )", "modifiers": "public", "return": "void", "signature": "void assignWorkflow( DataApprovalWorkflow workflow )", "full_signature": "public void assignWorkflow( DataApprovalWorkflow workflow )", "class_method_signature": "DataSet.assignWorkflow( DataApprovalWorkflow workflow )", "testcase": false, "constructor": false}, {"identifier": "hasDataEntryForm", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasDataEntryForm()", "full_signature": "public boolean hasDataEntryForm()", "class_method_signature": "DataSet.hasDataEntryForm()", "testcase": false, "constructor": false}, {"identifier": "hasSections", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSections()", "full_signature": "public boolean hasSections()", "class_method_signature": "DataSet.hasSections()", "testcase": false, "constructor": false}, {"identifier": "isApproveData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isApproveData()", "full_signature": "public boolean isApproveData()", "class_method_signature": "DataSet.isApproveData()", "testcase": false, "constructor": false}, {"identifier": "getFormType", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "FormType", "signature": "FormType getFormType()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public FormType getFormType()", "class_method_signature": "DataSet.getFormType()", "testcase": false, "constructor": false}, {"identifier": "getDataElements", "parameters": "()", "modifiers": "public", "return": "Set<DataElement>", "signature": "Set<DataElement> getDataElements()", "full_signature": "public Set<DataElement> getDataElements()", "class_method_signature": "DataSet.getDataElements()", "testcase": false, "constructor": false}, {"identifier": "getDataElementsInSections", "parameters": "()", "modifiers": "public", "return": "Set<DataElement>", "signature": "Set<DataElement> getDataElementsInSections()", "full_signature": "public Set<DataElement> getDataElementsInSections()", "class_method_signature": "DataSet.getDataElementsInSections()", "testcase": false, "constructor": false}, {"identifier": "getDataElementOptionCombos", "parameters": "()", "modifiers": "public", "return": "Set<CategoryOptionCombo>", "signature": "Set<CategoryOptionCombo> getDataElementOptionCombos()", "full_signature": "public Set<CategoryOptionCombo> getDataElementOptionCombos()", "class_method_signature": "DataSet.getDataElementOptionCombos()", "testcase": false, "constructor": false}, {"identifier": "increaseVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int increaseVersion()", "full_signature": "@Override public int increaseVersion()", "class_method_signature": "DataSet.increaseVersion()", "testcase": false, "constructor": false}, {"identifier": "getCategoryOptionGroupSets", "parameters": "()", "modifiers": "public", "return": "Set<CategoryOptionGroupSet>", "signature": "Set<CategoryOptionGroupSet> getCategoryOptionGroupSets()", "full_signature": "public Set<CategoryOptionGroupSet> getCategoryOptionGroupSets()", "class_method_signature": "DataSet.getCategoryOptionGroupSets()", "testcase": false, "constructor": false}, {"identifier": "hasCategoryCombo", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasCategoryCombo()", "full_signature": "public boolean hasCategoryCombo()", "class_method_signature": "DataSet.hasCategoryCombo()", "testcase": false, "constructor": false}, {"identifier": "isLocked", "parameters": "( User user, Period period, Date now )", "modifiers": "public", "return": "boolean", "signature": "boolean isLocked( User user, Period period, Date now )", "full_signature": "public boolean isLocked( User user, Period period, Date now )", "class_method_signature": "DataSet.isLocked( User user, Period period, Date now )", "testcase": false, "constructor": false}, {"identifier": "isDataInputPeriodAndDateAllowed", "parameters": "( Period period, Date date )", "modifiers": "public", "return": "boolean", "signature": "boolean isDataInputPeriodAndDateAllowed( Period period, Date date )", "full_signature": "public boolean isDataInputPeriodAndDateAllowed( Period period, Date date )", "class_method_signature": "DataSet.isDataInputPeriodAndDateAllowed( Period period, Date date )", "testcase": false, "constructor": false}, {"identifier": "getDimensionItemType", "parameters": "()", "modifiers": "@Override public", "return": "DimensionItemType", "signature": "DimensionItemType getDimensionItemType()", "full_signature": "@Override public DimensionItemType getDimensionItemType()", "class_method_signature": "DataSet.getDimensionItemType()", "testcase": false, "constructor": false}, {"identifier": "getPeriodType", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( using = JacksonPeriodTypeSerializer.class ) @JsonDeserialize( using = JacksonPeriodTypeDeserializer.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @Property( PropertyType.TEXT ) public", "return": "PeriodType", "signature": "PeriodType getPeriodType()", "full_signature": "@JsonProperty @JsonSerialize( using = JacksonPeriodTypeSerializer.class ) @JsonDeserialize( using = JacksonPeriodTypeDeserializer.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @Property( PropertyType.TEXT ) public PeriodType getPeriodType()", "class_method_signature": "DataSet.getPeriodType()", "testcase": false, "constructor": false}, {"identifier": "setPeriodType", "parameters": "( PeriodType periodType )", "modifiers": "public", "return": "void", "signature": "void setPeriodType( PeriodType periodType )", "full_signature": "public void setPeriodType( PeriodType periodType )", "class_method_signature": "DataSet.setPeriodType( PeriodType periodType )", "testcase": false, "constructor": false}, {"identifier": "getDataInputPeriods", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"dataInputPeriods\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataInputPeriods\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<DataInputPeriod>", "signature": "Set<DataInputPeriod> getDataInputPeriods()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"dataInputPeriods\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataInputPeriods\", namespace = DxfNamespaces.DXF_2_0 ) public Set<DataInputPeriod> getDataInputPeriods()", "class_method_signature": "DataSet.getDataInputPeriods()", "testcase": false, "constructor": false}, {"identifier": "setDataInputPeriods", "parameters": "( Set<DataInputPeriod> dataInputPeriods )", "modifiers": "public", "return": "void", "signature": "void setDataInputPeriods( Set<DataInputPeriod> dataInputPeriods )", "full_signature": "public void setDataInputPeriods( Set<DataInputPeriod> dataInputPeriods )", "class_method_signature": "DataSet.setDataInputPeriods( Set<DataInputPeriod> dataInputPeriods )", "testcase": false, "constructor": false}, {"identifier": "getDataEntryForm", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "DataEntryForm", "signature": "DataEntryForm getDataEntryForm()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public DataEntryForm getDataEntryForm()", "class_method_signature": "DataSet.getDataEntryForm()", "testcase": false, "constructor": false}, {"identifier": "setDataEntryForm", "parameters": "( DataEntryForm dataEntryForm )", "modifiers": "public", "return": "void", "signature": "void setDataEntryForm( DataEntryForm dataEntryForm )", "full_signature": "public void setDataEntryForm( DataEntryForm dataEntryForm )", "class_method_signature": "DataSet.setDataEntryForm( DataEntryForm dataEntryForm )", "testcase": false, "constructor": false}, {"identifier": "getDataSetElements", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataSetElement\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<DataSetElement>", "signature": "Set<DataSetElement> getDataSetElements()", "full_signature": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"dataSetElements\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"dataSetElement\", namespace = DxfNamespaces.DXF_2_0 ) public Set<DataSetElement> getDataSetElements()", "class_method_signature": "DataSet.getDataSetElements()", "testcase": false, "constructor": false}, {"identifier": "setDataSetElements", "parameters": "( Set<DataSetElement> dataSetElements )", "modifiers": "public", "return": "void", "signature": "void setDataSetElements( Set<DataSetElement> dataSetElements )", "full_signature": "public void setDataSetElements( Set<DataSetElement> dataSetElements )", "class_method_signature": "DataSet.setDataSetElements( Set<DataSetElement> dataSetElements )", "testcase": false, "constructor": false}, {"identifier": "getIndicators", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"indicators\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"indicator\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<Indicator>", "signature": "Set<Indicator> getIndicators()", "full_signature": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"indicators\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"indicator\", namespace = DxfNamespaces.DXF_2_0 ) public Set<Indicator> getIndicators()", "class_method_signature": "DataSet.getIndicators()", "testcase": false, "constructor": false}, {"identifier": "setIndicators", "parameters": "( Set<Indicator> indicators )", "modifiers": "public", "return": "void", "signature": "void setIndicators( Set<Indicator> indicators )", "full_signature": "public void setIndicators( Set<Indicator> indicators )", "class_method_signature": "DataSet.setIndicators( Set<Indicator> indicators )", "testcase": false, "constructor": false}, {"identifier": "getCompulsoryDataElementOperands", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"compulsoryDataElementOperands\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"compulsoryDataElementOperand\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<DataElementOperand>", "signature": "Set<DataElementOperand> getCompulsoryDataElementOperands()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"compulsoryDataElementOperands\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"compulsoryDataElementOperand\", namespace = DxfNamespaces.DXF_2_0 ) public Set<DataElementOperand> getCompulsoryDataElementOperands()", "class_method_signature": "DataSet.getCompulsoryDataElementOperands()", "testcase": false, "constructor": false}, {"identifier": "setCompulsoryDataElementOperands", "parameters": "( Set<DataElementOperand> compulsoryDataElementOperands )", "modifiers": "public", "return": "void", "signature": "void setCompulsoryDataElementOperands( Set<DataElementOperand> compulsoryDataElementOperands )", "full_signature": "public void setCompulsoryDataElementOperands( Set<DataElementOperand> compulsoryDataElementOperands )", "class_method_signature": "DataSet.setCompulsoryDataElementOperands( Set<DataElementOperand> compulsoryDataElementOperands )", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "()", "modifiers": "@JsonProperty( value = \"organisationUnits\" ) @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"organisationUnits\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"organisationUnit\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<OrganisationUnit>", "signature": "Set<OrganisationUnit> getSources()", "full_signature": "@JsonProperty( value = \"organisationUnits\" ) @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"organisationUnits\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"organisationUnit\", namespace = DxfNamespaces.DXF_2_0 ) public Set<OrganisationUnit> getSources()", "class_method_signature": "DataSet.getSources()", "testcase": false, "constructor": false}, {"identifier": "setSources", "parameters": "( Set<OrganisationUnit> sources )", "modifiers": "public", "return": "void", "signature": "void setSources( Set<OrganisationUnit> sources )", "full_signature": "public void setSources( Set<OrganisationUnit> sources )", "class_method_signature": "DataSet.setSources( Set<OrganisationUnit> sources )", "testcase": false, "constructor": false}, {"identifier": "getSections", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"sections\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"section\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<Section>", "signature": "Set<Section> getSections()", "full_signature": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"sections\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"section\", namespace = DxfNamespaces.DXF_2_0 ) public Set<Section> getSections()", "class_method_signature": "DataSet.getSections()", "testcase": false, "constructor": false}, {"identifier": "setSections", "parameters": "( Set<Section> sections )", "modifiers": "public", "return": "void", "signature": "void setSections( Set<Section> sections )", "full_signature": "public void setSections( Set<Section> sections )", "class_method_signature": "DataSet.setSections( Set<Section> sections )", "testcase": false, "constructor": false}, {"identifier": "getCategoryCombo", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "CategoryCombo", "signature": "CategoryCombo getCategoryCombo()", "full_signature": "@JsonProperty @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public CategoryCombo getCategoryCombo()", "class_method_signature": "DataSet.getCategoryCombo()", "testcase": false, "constructor": false}, {"identifier": "setCategoryCombo", "parameters": "( CategoryCombo categoryCombo )", "modifiers": "public", "return": "void", "signature": "void setCategoryCombo( CategoryCombo categoryCombo )", "full_signature": "public void setCategoryCombo( CategoryCombo categoryCombo )", "class_method_signature": "DataSet.setCategoryCombo( CategoryCombo categoryCombo )", "testcase": false, "constructor": false}, {"identifier": "isMobile", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isMobile()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isMobile()", "class_method_signature": "DataSet.isMobile()", "testcase": false, "constructor": false}, {"identifier": "setMobile", "parameters": "( boolean mobile )", "modifiers": "public", "return": "void", "signature": "void setMobile( boolean mobile )", "full_signature": "public void setMobile( boolean mobile )", "class_method_signature": "DataSet.setMobile( boolean mobile )", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public int getVersion()", "class_method_signature": "DataSet.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "( int version )", "modifiers": "@Override public", "return": "void", "signature": "void setVersion( int version )", "full_signature": "@Override public void setVersion( int version )", "class_method_signature": "DataSet.setVersion( int version )", "testcase": false, "constructor": false}, {"identifier": "getExpiryDays", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @PropertyRange( min = Integer.MIN_VALUE ) public", "return": "int", "signature": "int getExpiryDays()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) @PropertyRange( min = Integer.MIN_VALUE ) public int getExpiryDays()", "class_method_signature": "DataSet.getExpiryDays()", "testcase": false, "constructor": false}, {"identifier": "setExpiryDays", "parameters": "( int expiryDays )", "modifiers": "public", "return": "void", "signature": "void setExpiryDays( int expiryDays )", "full_signature": "public void setExpiryDays( int expiryDays )", "class_method_signature": "DataSet.setExpiryDays( int expiryDays )", "testcase": false, "constructor": false}, {"identifier": "getTimelyDays", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "int", "signature": "int getTimelyDays()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public int getTimelyDays()", "class_method_signature": "DataSet.getTimelyDays()", "testcase": false, "constructor": false}, {"identifier": "setTimelyDays", "parameters": "( int timelyDays )", "modifiers": "public", "return": "void", "signature": "void setTimelyDays( int timelyDays )", "full_signature": "public void setTimelyDays( int timelyDays )", "class_method_signature": "DataSet.setTimelyDays( int timelyDays )", "testcase": false, "constructor": false}, {"identifier": "getNotificationRecipients", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "UserGroup", "signature": "UserGroup getNotificationRecipients()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public UserGroup getNotificationRecipients()", "class_method_signature": "DataSet.getNotificationRecipients()", "testcase": false, "constructor": false}, {"identifier": "setNotificationRecipients", "parameters": "( UserGroup notificationRecipients )", "modifiers": "public", "return": "void", "signature": "void setNotificationRecipients( UserGroup notificationRecipients )", "full_signature": "public void setNotificationRecipients( UserGroup notificationRecipients )", "class_method_signature": "DataSet.setNotificationRecipients( UserGroup notificationRecipients )", "testcase": false, "constructor": false}, {"identifier": "isNotifyCompletingUser", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isNotifyCompletingUser()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isNotifyCompletingUser()", "class_method_signature": "DataSet.isNotifyCompletingUser()", "testcase": false, "constructor": false}, {"identifier": "setNotifyCompletingUser", "parameters": "( boolean notifyCompletingUser )", "modifiers": "public", "return": "void", "signature": "void setNotifyCompletingUser( boolean notifyCompletingUser )", "full_signature": "public void setNotifyCompletingUser( boolean notifyCompletingUser )", "class_method_signature": "DataSet.setNotifyCompletingUser( boolean notifyCompletingUser )", "testcase": false, "constructor": false}, {"identifier": "getWorkflow", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "DataApprovalWorkflow", "signature": "DataApprovalWorkflow getWorkflow()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public DataApprovalWorkflow getWorkflow()", "class_method_signature": "DataSet.getWorkflow()", "testcase": false, "constructor": false}, {"identifier": "setWorkflow", "parameters": "( DataApprovalWorkflow workflow )", "modifiers": "public", "return": "void", "signature": "void setWorkflow( DataApprovalWorkflow workflow )", "full_signature": "public void setWorkflow( DataApprovalWorkflow workflow )", "class_method_signature": "DataSet.setWorkflow( DataApprovalWorkflow workflow )", "testcase": false, "constructor": false}, {"identifier": "getInterpretations", "parameters": "()", "modifiers": "@Override @JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"interpretations\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"interpretation\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<Interpretation>", "signature": "Set<Interpretation> getInterpretations()", "full_signature": "@Override @JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"interpretations\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"interpretation\", namespace = DxfNamespaces.DXF_2_0 ) public Set<Interpretation> getInterpretations()", "class_method_signature": "DataSet.getInterpretations()", "testcase": false, "constructor": false}, {"identifier": "setInterpretations", "parameters": "( Set<Interpretation> interpretations )", "modifiers": "public", "return": "void", "signature": "void setInterpretations( Set<Interpretation> interpretations )", "full_signature": "public void setInterpretations( Set<Interpretation> interpretations )", "class_method_signature": "DataSet.setInterpretations( Set<Interpretation> interpretations )", "testcase": false, "constructor": false}, {"identifier": "getOpenFuturePeriods", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "int", "signature": "int getOpenFuturePeriods()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public int getOpenFuturePeriods()", "class_method_signature": "DataSet.getOpenFuturePeriods()", "testcase": false, "constructor": false}, {"identifier": "setOpenFuturePeriods", "parameters": "( int openFuturePeriods )", "modifiers": "public", "return": "void", "signature": "void setOpenFuturePeriods( int openFuturePeriods )", "full_signature": "public void setOpenFuturePeriods( int openFuturePeriods )", "class_method_signature": "DataSet.setOpenFuturePeriods( int openFuturePeriods )", "testcase": false, "constructor": false}, {"identifier": "getOpenPeriodsAfterCoEndDate", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "int", "signature": "int getOpenPeriodsAfterCoEndDate()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public int getOpenPeriodsAfterCoEndDate()", "class_method_signature": "DataSet.getOpenPeriodsAfterCoEndDate()", "testcase": false, "constructor": false}, {"identifier": "setOpenPeriodsAfterCoEndDate", "parameters": "( int openPeriodsAfterCoEndDate )", "modifiers": "public", "return": "void", "signature": "void setOpenPeriodsAfterCoEndDate( int openPeriodsAfterCoEndDate )", "full_signature": "public void setOpenPeriodsAfterCoEndDate( int openPeriodsAfterCoEndDate )", "class_method_signature": "DataSet.setOpenPeriodsAfterCoEndDate( int openPeriodsAfterCoEndDate )", "testcase": false, "constructor": false}, {"identifier": "isFieldCombinationRequired", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isFieldCombinationRequired()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isFieldCombinationRequired()", "class_method_signature": "DataSet.isFieldCombinationRequired()", "testcase": false, "constructor": false}, {"identifier": "setFieldCombinationRequired", "parameters": "( boolean fieldCombinationRequired )", "modifiers": "public", "return": "void", "signature": "void setFieldCombinationRequired( boolean fieldCombinationRequired )", "full_signature": "public void setFieldCombinationRequired( boolean fieldCombinationRequired )", "class_method_signature": "DataSet.setFieldCombinationRequired( boolean fieldCombinationRequired )", "testcase": false, "constructor": false}, {"identifier": "isValidCompleteOnly", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isValidCompleteOnly()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isValidCompleteOnly()", "class_method_signature": "DataSet.isValidCompleteOnly()", "testcase": false, "constructor": false}, {"identifier": "setValidCompleteOnly", "parameters": "( boolean validCompleteOnly )", "modifiers": "public", "return": "void", "signature": "void setValidCompleteOnly( boolean validCompleteOnly )", "full_signature": "public void setValidCompleteOnly( boolean validCompleteOnly )", "class_method_signature": "DataSet.setValidCompleteOnly( boolean validCompleteOnly )", "testcase": false, "constructor": false}, {"identifier": "isNoValueRequiresComment", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isNoValueRequiresComment()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isNoValueRequiresComment()", "class_method_signature": "DataSet.isNoValueRequiresComment()", "testcase": false, "constructor": false}, {"identifier": "setNoValueRequiresComment", "parameters": "( boolean noValueRequiresComment )", "modifiers": "public", "return": "void", "signature": "void setNoValueRequiresComment( boolean noValueRequiresComment )", "full_signature": "public void setNoValueRequiresComment( boolean noValueRequiresComment )", "class_method_signature": "DataSet.setNoValueRequiresComment( boolean noValueRequiresComment )", "testcase": false, "constructor": false}, {"identifier": "isSkipOffline", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isSkipOffline()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isSkipOffline()", "class_method_signature": "DataSet.isSkipOffline()", "testcase": false, "constructor": false}, {"identifier": "setSkipOffline", "parameters": "( boolean skipOffline )", "modifiers": "public", "return": "void", "signature": "void setSkipOffline( boolean skipOffline )", "full_signature": "public void setSkipOffline( boolean skipOffline )", "class_method_signature": "DataSet.setSkipOffline( boolean skipOffline )", "testcase": false, "constructor": false}, {"identifier": "isRenderAsTabs", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isRenderAsTabs()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isRenderAsTabs()", "class_method_signature": "DataSet.isRenderAsTabs()", "testcase": false, "constructor": false}, {"identifier": "setRenderAsTabs", "parameters": "( boolean renderAsTabs )", "modifiers": "public", "return": "void", "signature": "void setRenderAsTabs( boolean renderAsTabs )", "full_signature": "public void setRenderAsTabs( boolean renderAsTabs )", "class_method_signature": "DataSet.setRenderAsTabs( boolean renderAsTabs )", "testcase": false, "constructor": false}, {"identifier": "isRenderHorizontally", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isRenderHorizontally()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isRenderHorizontally()", "class_method_signature": "DataSet.isRenderHorizontally()", "testcase": false, "constructor": false}, {"identifier": "setRenderHorizontally", "parameters": "( boolean renderHorizontally )", "modifiers": "public", "return": "void", "signature": "void setRenderHorizontally( boolean renderHorizontally )", "full_signature": "public void setRenderHorizontally( boolean renderHorizontally )", "class_method_signature": "DataSet.setRenderHorizontally( boolean renderHorizontally )", "testcase": false, "constructor": false}, {"identifier": "isDataElementDecoration", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isDataElementDecoration()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isDataElementDecoration()", "class_method_signature": "DataSet.isDataElementDecoration()", "testcase": false, "constructor": false}, {"identifier": "setDataElementDecoration", "parameters": "( boolean dataElementDecoration )", "modifiers": "public", "return": "void", "signature": "void setDataElementDecoration( boolean dataElementDecoration )", "full_signature": "public void setDataElementDecoration( boolean dataElementDecoration )", "class_method_signature": "DataSet.setDataElementDecoration( boolean dataElementDecoration )", "testcase": false, "constructor": false}, {"identifier": "getStyle", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "ObjectStyle", "signature": "ObjectStyle getStyle()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public ObjectStyle getStyle()", "class_method_signature": "DataSet.getStyle()", "testcase": false, "constructor": false}, {"identifier": "setStyle", "parameters": "( ObjectStyle style )", "modifiers": "public", "return": "void", "signature": "void setStyle( ObjectStyle style )", "full_signature": "public void setStyle( ObjectStyle style )", "class_method_signature": "DataSet.setStyle( ObjectStyle style )", "testcase": false, "constructor": false}, {"identifier": "getFormName", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getFormName()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getFormName()", "class_method_signature": "DataSet.getFormName()", "testcase": false, "constructor": false}, {"identifier": "setFormName", "parameters": "( String formName )", "modifiers": "@Override public", "return": "void", "signature": "void setFormName( String formName )", "full_signature": "@Override public void setFormName( String formName )", "class_method_signature": "DataSet.setFormName( String formName )", "testcase": false, "constructor": false}, {"identifier": "isCompulsoryFieldsCompleteOnly", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isCompulsoryFieldsCompleteOnly()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isCompulsoryFieldsCompleteOnly()", "class_method_signature": "DataSet.isCompulsoryFieldsCompleteOnly()", "testcase": false, "constructor": false}, {"identifier": "setCompulsoryFieldsCompleteOnly", "parameters": "( boolean compulsoryFieldsCompleteOnly )", "modifiers": "public", "return": "void", "signature": "void setCompulsoryFieldsCompleteOnly( boolean compulsoryFieldsCompleteOnly )", "full_signature": "public void setCompulsoryFieldsCompleteOnly( boolean compulsoryFieldsCompleteOnly )", "class_method_signature": "DataSet.setCompulsoryFieldsCompleteOnly( boolean compulsoryFieldsCompleteOnly )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataset/DataSet.java"}, "focal_method": {"identifier": "addIndicator", "parameters": "( Indicator indicator )", "modifiers": "public", "return": "void", "body": "public void addIndicator( Indicator indicator )\n    {\n        indicators.add( indicator );\n        indicator.getDataSets().add( this );\n    }", "signature": "void addIndicator( Indicator indicator )", "full_signature": "public void addIndicator( Indicator indicator )", "class_method_signature": "DataSet.addIndicator( Indicator indicator )", "testcase": false, "constructor": false, "invocations": ["add", "add", "getDataSets"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}