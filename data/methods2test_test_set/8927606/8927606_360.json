{"test_class": {"identifier": "NashornTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Nashorn engine;", "modifier": "private", "type": "Nashorn", "declarator": "engine", "var_name": "engine"}], "file": "core/src/test/java/nl/nn/adapterframework/extensions/javascript/NashornTest.java"}, "test_case": {"identifier": "testGetEngine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetEngine() {\n\t\tAssert.assertNotNull(engine.getEngine());\n\t}", "signature": "void testGetEngine()", "full_signature": "@Test public void testGetEngine()", "class_method_signature": "NashornTest.testGetEngine()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getEngine"]}, "focal_class": {"identifier": "Nashorn", "superclass": "", "interfaces": "implements JavascriptEngine<ScriptEngine>", "fields": [{"original_string": "private Logger log = LogUtil.getLogger(this);", "modifier": "private", "type": "Logger", "declarator": "log = LogUtil.getLogger(this)", "var_name": "log"}, {"original_string": "private ScriptEngine engine;", "modifier": "private", "type": "ScriptEngine", "declarator": "engine", "var_name": "engine"}, {"original_string": "private String alias;", "modifier": "private", "type": "String", "declarator": "alias", "var_name": "alias"}], "methods": [{"identifier": "setScriptAlias", "parameters": "(String alias)", "modifiers": "@Override public", "return": "void", "signature": "void setScriptAlias(String alias)", "full_signature": "@Override public void setScriptAlias(String alias)", "class_method_signature": "Nashorn.setScriptAlias(String alias)", "testcase": false, "constructor": false}, {"identifier": "startRuntime", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startRuntime()", "full_signature": "@Override public void startRuntime()", "class_method_signature": "Nashorn.startRuntime()", "testcase": false, "constructor": false}, {"identifier": "executeScript", "parameters": "(String script)", "modifiers": "@Override public", "return": "void", "signature": "void executeScript(String script)", "full_signature": "@Override public void executeScript(String script)", "class_method_signature": "Nashorn.executeScript(String script)", "testcase": false, "constructor": false}, {"identifier": "executeFunction", "parameters": "(String name, Object... parameters)", "modifiers": "@Override public", "return": "Object", "signature": "Object executeFunction(String name, Object... parameters)", "full_signature": "@Override public Object executeFunction(String name, Object... parameters)", "class_method_signature": "Nashorn.executeFunction(String name, Object... parameters)", "testcase": false, "constructor": false}, {"identifier": "closeRuntime", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void closeRuntime()", "full_signature": "@Override public void closeRuntime()", "class_method_signature": "Nashorn.closeRuntime()", "testcase": false, "constructor": false}, {"identifier": "getEngine", "parameters": "()", "modifiers": "@Override public", "return": "ScriptEngine", "signature": "ScriptEngine getEngine()", "full_signature": "@Override public ScriptEngine getEngine()", "class_method_signature": "Nashorn.getEngine()", "testcase": false, "constructor": false}, {"identifier": "registerCallback", "parameters": "(ISender sender, IPipeLineSession session)", "modifiers": "@Override public", "return": "void", "signature": "void registerCallback(ISender sender, IPipeLineSession session)", "full_signature": "@Override public void registerCallback(ISender sender, IPipeLineSession session)", "class_method_signature": "Nashorn.registerCallback(ISender sender, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "setResultHandler", "parameters": "(ResultHandler resultHandler)", "modifiers": "@Override public", "return": "void", "signature": "void setResultHandler(ResultHandler resultHandler)", "full_signature": "@Override public void setResultHandler(ResultHandler resultHandler)", "class_method_signature": "Nashorn.setResultHandler(ResultHandler resultHandler)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/extensions/javascript/Nashorn.java"}, "focal_method": {"identifier": "getEngine", "parameters": "()", "modifiers": "@Override public", "return": "ScriptEngine", "body": "@Override\n\tpublic ScriptEngine getEngine() {\n\t\treturn engine;\n\t}", "signature": "ScriptEngine getEngine()", "full_signature": "@Override public ScriptEngine getEngine()", "class_method_signature": "Nashorn.getEngine()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}