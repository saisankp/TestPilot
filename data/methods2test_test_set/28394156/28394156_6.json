{"test_class": {"identifier": "WorkerRecoveryManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private WorkerRecoveryManager workerRecoveryManager;", "modifier": "@Autowired\n    private", "type": "WorkerRecoveryManager", "declarator": "workerRecoveryManager", "var_name": "workerRecoveryManager"}, {"original_string": "@Autowired\n    private WorkerNodeService workerNodeService;", "modifier": "@Autowired\n    private", "type": "WorkerNodeService", "declarator": "workerNodeService", "var_name": "workerNodeService"}, {"original_string": "@Autowired\n    private RetryTemplate retryTemplate;", "modifier": "@Autowired\n    private", "type": "RetryTemplate", "declarator": "retryTemplate", "var_name": "retryTemplate"}, {"original_string": "@Autowired\n    private List<WorkerRecoveryListener> workerRecoveryListeners;", "modifier": "@Autowired\n    private", "type": "List<WorkerRecoveryListener>", "declarator": "workerRecoveryListeners", "var_name": "workerRecoveryListeners"}, {"original_string": "@Autowired\n    private SynchronizationManager synchronizationManager;", "modifier": "@Autowired\n    private", "type": "SynchronizationManager", "declarator": "synchronizationManager", "var_name": "synchronizationManager"}], "file": "worker/worker-manager/score-worker-manager-impl/src/test/java/io/cloudslang/worker/management/services/WorkerRecoveryManagerImplTest.java"}, "test_case": {"identifier": "testDoRecovery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoRecovery() throws Exception {\n        Assert.assertEquals(2,workerRecoveryListeners.size());\n\n        workerRecoveryManager.doRecovery();\n\n        verify(workerRecoveryListeners.get(0),times(1)).doRecovery();\n        verify(workerRecoveryListeners.get(1),times(1)).doRecovery();\n    }", "signature": "void testDoRecovery()", "full_signature": "@Test public void testDoRecovery()", "class_method_signature": "WorkerRecoveryManagerImplTest.testDoRecovery()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "doRecovery", "doRecovery", "verify", "get", "times", "doRecovery", "verify", "get", "times"]}, "focal_class": {"identifier": "WorkerRecoveryManagerImpl", "superclass": "", "interfaces": "implements WorkerRecoveryManager", "fields": [{"original_string": "protected static final Logger logger = Logger.getLogger(WorkerRecoveryManagerImpl.class);", "modifier": "protected static final", "type": "Logger", "declarator": "logger = Logger.getLogger(WorkerRecoveryManagerImpl.class)", "var_name": "logger"}, {"original_string": "private static final int EXIT_STATUS = 75;", "modifier": "private static final", "type": "int", "declarator": "EXIT_STATUS = 75", "var_name": "EXIT_STATUS"}, {"original_string": "@Autowired\n\tprivate List<WorkerRecoveryListener> listeners;", "modifier": "@Autowired\n\tprivate", "type": "List<WorkerRecoveryListener>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "@Autowired\n\tprivate WorkerNodeService workerNodeService;", "modifier": "@Autowired\n\tprivate", "type": "WorkerNodeService", "declarator": "workerNodeService", "var_name": "workerNodeService"}, {"original_string": "@Autowired\n\tprivate RetryTemplate retryTemplate;", "modifier": "@Autowired\n\tprivate", "type": "RetryTemplate", "declarator": "retryTemplate", "var_name": "retryTemplate"}, {"original_string": "@Autowired\n    private SynchronizationManager syncManager;", "modifier": "@Autowired\n    private", "type": "SynchronizationManager", "declarator": "syncManager", "var_name": "syncManager"}, {"original_string": "@Autowired\n   \tprotected WorkerVersionService workerVersionService;", "modifier": "@Autowired\n   \tprotected", "type": "WorkerVersionService", "declarator": "workerVersionService", "var_name": "workerVersionService"}, {"original_string": "private volatile boolean inRecovery;", "modifier": "private volatile", "type": "boolean", "declarator": "inRecovery", "var_name": "inRecovery"}, {"original_string": "private volatile String wrv;", "modifier": "private volatile", "type": "String", "declarator": "wrv", "var_name": "wrv"}], "methods": [{"identifier": "doRecovery", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void doRecovery()", "full_signature": "public void doRecovery()", "class_method_signature": "WorkerRecoveryManagerImpl.doRecovery()", "testcase": false, "constructor": false}, {"identifier": "isInRecovery", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInRecovery()", "full_signature": "public boolean isInRecovery()", "class_method_signature": "WorkerRecoveryManagerImpl.isInRecovery()", "testcase": false, "constructor": false}, {"identifier": "getWRV", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWRV()", "full_signature": "public String getWRV()", "class_method_signature": "WorkerRecoveryManagerImpl.getWRV()", "testcase": false, "constructor": false}, {"identifier": "setWRV", "parameters": "(String newWrv)", "modifiers": "public", "return": "void", "signature": "void setWRV(String newWrv)", "full_signature": "public void setWRV(String newWrv)", "class_method_signature": "WorkerRecoveryManagerImpl.setWRV(String newWrv)", "testcase": false, "constructor": false}], "file": "worker/worker-manager/score-worker-manager-impl/src/main/java/io/cloudslang/worker/management/services/WorkerRecoveryManagerImpl.java"}, "focal_method": {"identifier": "doRecovery", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void doRecovery(){\n        try {\n            boolean toRestart = Boolean.getBoolean(\"cloudslang.worker.restart.on.recovery\");\n            //If we are configured to restart on recovery - do shutdown\n            if(toRestart){\n                logger.warn(\"Worker is configured to restart on recovery and since internal recovery is needed the process is exiting...\");\n                System.exit(EXIT_STATUS);\n            }\n\n            synchronized (this){\n                //If already in recovery - then return and do nothing\n                if(inRecovery){\n                    return;\n                }\n                inRecovery = true;\n\n            }\n            syncManager.startRecovery();\n\n            logger.warn(\"Worker internal recovery started\");\n\n            for (WorkerRecoveryListener listener : listeners){\n                try {\n                    listener.doRecovery();\n                } catch (Exception ex) {\n                    logger.error(\"Failed on worker internal recovery\", ex);\n                }\n            }\n            if (logger.isDebugEnabled()) logger.debug(\"Listeners recovery is done\");\n\n            retryTemplate.retry(RetryTemplate.INFINITELY, 30*1000L, new RetryTemplate.RetryCallback() {\n                @Override\n                public void tryOnce() {\n\t\t\t\t\tif(logger.isDebugEnabled()) logger.debug(\"sending worker UP\");\n                    String newWrv = workerNodeService.up(System.getProperty(\"worker.uuid\"), workerVersionService.getWorkerVersion(), workerVersionService.getWorkerVersionId());\n                    setWRV(newWrv);\n                    if(logger.isDebugEnabled()) logger.debug(\"the worker is UP\");\n                }\n            });\n            inRecovery = false;\n            logger.warn(\"Worker recovery is done\");\n        } finally {\n            syncManager.finishRecovery();\n\t\t}\n\t}", "signature": "void doRecovery()", "full_signature": "public void doRecovery()", "class_method_signature": "WorkerRecoveryManagerImpl.doRecovery()", "testcase": false, "constructor": false, "invocations": ["getBoolean", "warn", "exit", "startRecovery", "warn", "doRecovery", "error", "isDebugEnabled", "debug", "retry", "isDebugEnabled", "debug", "up", "getProperty", "getWorkerVersion", "getWorkerVersionId", "setWRV", "isDebugEnabled", "debug", "warn", "finishRecovery"]}, "repository": {"repo_id": 28394156, "url": "https://github.com/CloudSlang/score", "stars": 76, "created": "12/23/2014 11:19:26 AM +00:00", "updates": "2020-01-27T14:36:32+00:00", "fork": "False", "license": "licensed"}}