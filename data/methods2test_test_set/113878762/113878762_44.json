{"test_class": {"identifier": "StorageDirect2Test", "superclass": "extends EngineTest<StorageDirect2>", "interfaces": "", "fields": [{"original_string": "Volume.Factory fac = Volume.memoryFactory(false);", "modifier": "", "type": "Volume.Factory", "declarator": "fac = Volume.memoryFactory(false)", "var_name": "fac"}], "file": "migration/third-party/org.mapdb/src/test/java/org/mapdb/StorageDirect2Test.java"}, "test_case": {"identifier": "phys_append_alloc_link3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void phys_append_alloc_link3(){\n        long[] ret = e.physAllocate(100 + MAX_REC_SIZE*2);\n        long exp1 = MASK_IS_LINKED | ((long)MAX_REC_SIZE)<<48 | 8L;\n        long exp2 = MASK_IS_LINKED | ((long)MAX_REC_SIZE)<<48 | (8L+MAX_REC_SIZE);\n        long exp3 = ((long)120)<<48 | (8L+MAX_REC_SIZE*2);\n\n        assertArrayEquals(new long[]{exp1, exp2, exp3}, ret);\n    }", "signature": "void phys_append_alloc_link3()", "full_signature": "@Test public void phys_append_alloc_link3()", "class_method_signature": "StorageDirect2Test.phys_append_alloc_link3()", "testcase": true, "constructor": false, "invocations": ["physAllocate", "assertArrayEquals"]}, "focal_class": {"identifier": "StorageDirect2", "superclass": "", "interfaces": "implements Engine", "fields": [{"original_string": "protected static final long MASK_OFFSET = 0x0000FFFFFFFFFFFFL;", "modifier": "protected static final", "type": "long", "declarator": "MASK_OFFSET = 0x0000FFFFFFFFFFFFL", "var_name": "MASK_OFFSET"}, {"original_string": "protected static final long MASK_SIZE = 0x7fff000000000000L;", "modifier": "protected static final", "type": "long", "declarator": "MASK_SIZE = 0x7fff000000000000L", "var_name": "MASK_SIZE"}, {"original_string": "protected static final long MASK_IS_LINKED = 0x8000000000000000L;", "modifier": "protected static final", "type": "long", "declarator": "MASK_IS_LINKED = 0x8000000000000000L", "var_name": "MASK_IS_LINKED"}, {"original_string": "protected static final long HEADER = 9032094932889042394L;", "modifier": "protected static final", "type": "long", "declarator": "HEADER = 9032094932889042394L", "var_name": "HEADER"}, {"original_string": "protected static final int MAX_REC_SIZE = 32767;", "modifier": "protected static final", "type": "int", "declarator": "MAX_REC_SIZE = 32767", "var_name": "MAX_REC_SIZE"}, {"original_string": "protected static final int PHYS_FREE_SLOTS_COUNT = 2048;", "modifier": "protected static final", "type": "int", "declarator": "PHYS_FREE_SLOTS_COUNT = 2048", "var_name": "PHYS_FREE_SLOTS_COUNT"}, {"original_string": "protected static final int IO_INDEX_SIZE = 1*8;", "modifier": "protected static final", "type": "int", "declarator": "IO_INDEX_SIZE = 1*8", "var_name": "IO_INDEX_SIZE"}, {"original_string": "protected static final int IO_PHYS_SIZE = 2*8;", "modifier": "protected static final", "type": "int", "declarator": "IO_PHYS_SIZE = 2*8", "var_name": "IO_PHYS_SIZE"}, {"original_string": "protected static final int IO_FREE_RECID = 15*8;", "modifier": "protected static final", "type": "int", "declarator": "IO_FREE_RECID = 15*8", "var_name": "IO_FREE_RECID"}, {"original_string": "protected static final int IO_USER_START = IO_FREE_RECID+PHYS_FREE_SLOTS_COUNT*8;", "modifier": "protected static final", "type": "int", "declarator": "IO_USER_START = IO_FREE_RECID+PHYS_FREE_SLOTS_COUNT*8", "var_name": "IO_USER_START"}, {"original_string": "protected static final int CONCURRENCY_FACTOR = 32;", "modifier": "protected static final", "type": "int", "declarator": "CONCURRENCY_FACTOR = 32", "var_name": "CONCURRENCY_FACTOR"}, {"original_string": "protected final ReentrantReadWriteLock[] locks;", "modifier": "protected final", "type": "ReentrantReadWriteLock[]", "declarator": "locks", "var_name": "locks"}, {"original_string": "protected final ReentrantLock freeSpaceLock;", "modifier": "protected final", "type": "ReentrantLock", "declarator": "freeSpaceLock", "var_name": "freeSpaceLock"}, {"original_string": "protected Volume index;", "modifier": "protected", "type": "Volume", "declarator": "index", "var_name": "index"}, {"original_string": "protected Volume phys;", "modifier": "protected", "type": "Volume", "declarator": "phys", "var_name": "phys"}, {"original_string": "protected final boolean readOnly;", "modifier": "protected final", "type": "boolean", "declarator": "readOnly", "var_name": "readOnly"}], "methods": [{"identifier": "StorageDirect2", "parameters": "(Volume.Factory volFac, boolean readOnly)", "modifiers": "public", "return": "", "signature": " StorageDirect2(Volume.Factory volFac, boolean readOnly)", "full_signature": "public  StorageDirect2(Volume.Factory volFac, boolean readOnly)", "class_method_signature": "StorageDirect2.StorageDirect2(Volume.Factory volFac, boolean readOnly)", "testcase": false, "constructor": true}, {"identifier": "checkHeaders", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkHeaders()", "full_signature": "protected void checkHeaders()", "class_method_signature": "StorageDirect2.checkHeaders()", "testcase": false, "constructor": false}, {"identifier": "createStructure", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void createStructure()", "full_signature": "protected void createStructure()", "class_method_signature": "StorageDirect2.createStructure()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(A value, Serializer<A> serializer)", "modifiers": "@Override public", "return": "long", "signature": "long put(A value, Serializer<A> serializer)", "full_signature": "@Override public long put(A value, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.put(A value, Serializer<A> serializer)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long recid, Serializer<A> serializer)", "modifiers": "@Override public", "return": "A", "signature": "A get(long recid, Serializer<A> serializer)", "full_signature": "@Override public A get(long recid, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.get(long recid, Serializer<A> serializer)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(long recid, A value, Serializer<A> serializer)", "modifiers": "@Override public", "return": "void", "signature": "void update(long recid, A value, Serializer<A> serializer)", "full_signature": "@Override public void update(long recid, A value, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.update(long recid, A value, Serializer<A> serializer)", "testcase": false, "constructor": false}, {"identifier": "compareAndSwap", "parameters": "(long recid, A expectedOldValue, A newValue, Serializer<A> serializer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean compareAndSwap(long recid, A expectedOldValue, A newValue, Serializer<A> serializer)", "full_signature": "@Override public boolean compareAndSwap(long recid, A expectedOldValue, A newValue, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.compareAndSwap(long recid, A expectedOldValue, A newValue, Serializer<A> serializer)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(long recid, Serializer<A> serializer)", "modifiers": "@Override public", "return": "void", "signature": "void delete(long recid, Serializer<A> serializer)", "full_signature": "@Override public void delete(long recid, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.delete(long recid, Serializer<A> serializer)", "testcase": false, "constructor": false}, {"identifier": "physAllocate", "parameters": "(int size)", "modifiers": "protected", "return": "long[]", "signature": "long[] physAllocate(int size)", "full_signature": "protected long[] physAllocate(int size)", "class_method_signature": "StorageDirect2.physAllocate(int size)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "StorageDirect2.close()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public boolean isClosed()", "class_method_signature": "StorageDirect2.isClosed()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void commit()", "full_signature": "@Override public void commit()", "class_method_signature": "StorageDirect2.commit()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void rollback()", "full_signature": "@Override public void rollback()", "class_method_signature": "StorageDirect2.rollback()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "@Override public boolean isReadOnly()", "class_method_signature": "StorageDirect2.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "compact", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void compact()", "full_signature": "@Override public void compact()", "class_method_signature": "StorageDirect2.compact()", "testcase": false, "constructor": false}, {"identifier": "longStackTake", "parameters": "(long indexOffset)", "modifiers": "protected", "return": "long", "signature": "long longStackTake(long indexOffset)", "full_signature": "protected long longStackTake(long indexOffset)", "class_method_signature": "StorageDirect2.longStackTake(long indexOffset)", "testcase": false, "constructor": false}, {"identifier": "longStackPut", "parameters": "(long indexOffset, long value)", "modifiers": "protected", "return": "long", "signature": "long longStackPut(long indexOffset, long value)", "full_signature": "protected long longStackPut(long indexOffset, long value)", "class_method_signature": "StorageDirect2.longStackPut(long indexOffset, long value)", "testcase": false, "constructor": false}, {"identifier": "freeRecidPut", "parameters": "(long recid)", "modifiers": "protected", "return": "void", "signature": "void freeRecidPut(long recid)", "full_signature": "protected void freeRecidPut(long recid)", "class_method_signature": "StorageDirect2.freeRecidPut(long recid)", "testcase": false, "constructor": false}, {"identifier": "freeRecidTake", "parameters": "()", "modifiers": "protected", "return": "long", "signature": "long freeRecidTake()", "full_signature": "protected long freeRecidTake()", "class_method_signature": "StorageDirect2.freeRecidTake()", "testcase": false, "constructor": false}, {"identifier": "freePhysPut", "parameters": "(long indexVal)", "modifiers": "protected", "return": "void", "signature": "void freePhysPut(long indexVal)", "full_signature": "protected void freePhysPut(long indexVal)", "class_method_signature": "StorageDirect2.freePhysPut(long indexVal)", "testcase": false, "constructor": false}, {"identifier": "freePhysTake", "parameters": "(int size)", "modifiers": "protected", "return": "long", "signature": "long freePhysTake(int size)", "full_signature": "protected long freePhysTake(int size)", "class_method_signature": "StorageDirect2.freePhysTake(int size)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(A value, Serializer<A> serializer)", "modifiers": "protected", "return": "DataOutput2", "signature": "DataOutput2 serialize(A value, Serializer<A> serializer)", "full_signature": "protected DataOutput2 serialize(A value, Serializer<A> serializer)", "class_method_signature": "StorageDirect2.serialize(A value, Serializer<A> serializer)", "testcase": false, "constructor": false}], "file": "migration/third-party/org.mapdb/src/main/java/org/mapdb/StorageDirect2.java"}, "focal_method": {"identifier": "physAllocate", "parameters": "(int size)", "modifiers": "protected", "return": "long[]", "body": "protected long[] physAllocate(int size) {\n        //append to end of file\n        if(size<MAX_REC_SIZE){\n            long physSize = index.getLong(IO_PHYS_SIZE);\n            index.putLong(IO_PHYS_SIZE, physSize+size);\n            phys.ensureAvailable(physSize+size);\n            physSize = physSize ^ (((long)size)<<48);\n            return new long[]{physSize};\n        }else{\n            long[] ret = new long[2];\n            int retPos = 0;\n            int c = 12;\n\n            while(size>0){\n                if(retPos == ret.length) ret = Arrays.copyOf(ret, ret.length*2);\n                int allocSize = Math.min(size, MAX_REC_SIZE);\n                size -= allocSize - c;\n\n                //append to end of file\n                long physSize = index.getLong(IO_PHYS_SIZE);\n                index.putLong(IO_PHYS_SIZE, physSize+allocSize);\n                phys.ensureAvailable(physSize+allocSize);\n                physSize = physSize ^ (((long)allocSize)<<48);\n                if(c!=0) physSize|=MASK_IS_LINKED;\n                ret[retPos++] = physSize;\n\n                c = size<=MAX_REC_SIZE ? 0 : 8;\n            }\n            if(size!=0) throw new InternalError();\n\n            return Arrays.copyOf(ret, retPos);\n        }\n    }", "signature": "long[] physAllocate(int size)", "full_signature": "protected long[] physAllocate(int size)", "class_method_signature": "StorageDirect2.physAllocate(int size)", "testcase": false, "constructor": false, "invocations": ["getLong", "putLong", "ensureAvailable", "copyOf", "min", "getLong", "putLong", "ensureAvailable", "copyOf"]}, "repository": {"repo_id": 113878762, "url": "https://github.com/crossminer/scava", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 16, "size": 1903904, "license": "licensed"}}