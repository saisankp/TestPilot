{"test_class": {"identifier": "FileReadKafkaProducerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map ANY_CONF = new HashMap();", "modifier": "private static final", "type": "Map", "declarator": "ANY_CONF = new HashMap()", "var_name": "ANY_CONF"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/tools/producer/kafka/FileReadKafkaProducerTest.java"}, "test_case": {"identifier": "spoutShouldBeKafkaFileReadSpout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void spoutShouldBeKafkaFileReadSpout() {\n    KafkaProducer producer = new FileReadKafkaProducer();\n    producer.getTopology(new Config());\n    assertThat(producer.getSpout()).isInstanceOf(FileReadSpout.class);\n  }", "signature": "void spoutShouldBeKafkaFileReadSpout()", "full_signature": "@Test public void spoutShouldBeKafkaFileReadSpout()", "class_method_signature": "FileReadKafkaProducerTest.spoutShouldBeKafkaFileReadSpout()", "testcase": true, "constructor": false, "invocations": ["getTopology", "isInstanceOf", "assertThat", "getSpout"]}, "focal_class": {"identifier": "FileReadKafkaProducer", "superclass": "extends KafkaProducer", "interfaces": "", "fields": [{"original_string": "public static final String FILE = \"/resources/A_Tale_of_Two_City.txt\";", "modifier": "public static final", "type": "String", "declarator": "FILE = \"/resources/A_Tale_of_Two_City.txt\"", "var_name": "FILE"}], "methods": [{"identifier": "getTopology", "parameters": "(Config config)", "modifiers": "@Override public", "return": "StormTopology", "signature": "StormTopology getTopology(Config config)", "full_signature": "@Override public StormTopology getTopology(Config config)", "class_method_signature": "FileReadKafkaProducer.getTopology(Config config)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/tools/producer/kafka/FileReadKafkaProducer.java"}, "focal_method": {"identifier": "getTopology", "parameters": "(Config config)", "modifiers": "@Override public", "return": "StormTopology", "body": "@Override\n  public StormTopology getTopology(Config config) {\n    spout = new FileReadSpout(FILE);\n    return super.getTopology(config);\n  }", "signature": "StormTopology getTopology(Config config)", "full_signature": "@Override public StormTopology getTopology(Config config)", "class_method_signature": "FileReadKafkaProducer.getTopology(Config config)", "testcase": false, "constructor": false, "invocations": ["getTopology"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}