{"test_class": {"identifier": "KiePMMLTreeModelFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_1 = \"TreeSample.pmml\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_1 = \"TreeSample.pmml\"", "var_name": "SOURCE_1"}, {"original_string": "private static final String TARGET_FIELD = \"whatIdo\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_FIELD = \"whatIdo\"", "var_name": "TARGET_FIELD"}, {"original_string": "private static final String PACKAGE_NAME = \"packagename\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"packagename\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static PMML pmml;", "modifier": "private static", "type": "PMML", "declarator": "pmml", "var_name": "pmml"}, {"original_string": "private static TreeModel treeModel;", "modifier": "private static", "type": "TreeModel", "declarator": "treeModel", "var_name": "treeModel"}, {"original_string": "private static ClassOrInterfaceDeclaration classOrInterfaceDeclaration;", "modifier": "private static", "type": "ClassOrInterfaceDeclaration", "declarator": "classOrInterfaceDeclaration", "var_name": "classOrInterfaceDeclaration"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactoryTest.java"}, "test_case": {"identifier": "setConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setConstructor() {\n        ConstructorDeclaration constructorDeclaration = classOrInterfaceDeclaration.getDefaultConstructor().get();\n        SimpleName simpleName = new SimpleName(\"SIMPLENAME\");\n        KiePMMLTreeModelFactory.setConstructor(treeModel,\n                                               constructorDeclaration,\n                                               simpleName);\n        Map<Integer, Expression> superInvocationExpressionsMap = new HashMap<>();\n        superInvocationExpressionsMap.put(0, new NameExpr(String.format(\"\\\"%s\\\"\", treeModel.getModelName())));\n        superInvocationExpressionsMap.put(2, new NameExpr(String.format(\"\\\"%s\\\"\", treeModel.getAlgorithmName())));\n        Map<String, Expression> assignExpressionMap = new HashMap<>();\n        assignExpressionMap.put(\"targetField\", new NameExpr(\"targetField\"));\n        assignExpressionMap.put(\"miningFunction\", new NullLiteralExpr());\n        assignExpressionMap.put(\"pmmlMODEL\", new NullLiteralExpr());\n        assertTrue(commonEvaluateConstructor(constructorDeclaration, simpleName.asString(), superInvocationExpressionsMap, assignExpressionMap));\n    }", "signature": "void setConstructor()", "full_signature": "@Test public void setConstructor()", "class_method_signature": "KiePMMLTreeModelFactoryTest.setConstructor()", "testcase": true, "constructor": false, "invocations": ["get", "getDefaultConstructor", "setConstructor", "put", "format", "getModelName", "put", "format", "getAlgorithmName", "put", "put", "put", "assertTrue", "commonEvaluateConstructor", "asString"]}, "focal_class": {"identifier": "KiePMMLTreeModelFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLTreeModelFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLTreeModelFactory.class.getName())", "var_name": "logger"}, {"original_string": "static final String KIE_PMML_TREE_MODEL_TEMPLATE_JAVA = \"KiePMMLTreeModelTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_TREE_MODEL_TEMPLATE_JAVA = \"KiePMMLTreeModelTemplate.tmpl\"", "var_name": "KIE_PMML_TREE_MODEL_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_TREE_MODEL_TEMPLATE = \"KiePMMLTreeModelTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_TREE_MODEL_TEMPLATE = \"KiePMMLTreeModelTemplate\"", "var_name": "KIE_PMML_TREE_MODEL_TEMPLATE"}], "methods": [{"identifier": "KiePMMLTreeModelFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KiePMMLTreeModelFactory()", "full_signature": "private  KiePMMLTreeModelFactory()", "class_method_signature": "KiePMMLTreeModelFactory.KiePMMLTreeModelFactory()", "testcase": false, "constructor": true}, {"identifier": "getKiePMMLTreeModel", "parameters": "(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final TreeModel model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap)", "modifiers": "public static", "return": "KiePMMLTreeModel", "signature": "KiePMMLTreeModel getKiePMMLTreeModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final TreeModel model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap)", "full_signature": "public static KiePMMLTreeModel getKiePMMLTreeModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final TreeModel model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap)", "class_method_signature": "KiePMMLTreeModelFactory.getKiePMMLTreeModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final TreeModel model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLTreeModelSourcesMap", "parameters": "(final DataDictionary dataDictionary,\n                                                                    final TransformationDictionary transformationDictionary,\n                                                                    final TreeModel model,\n                                                                    final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                                    final String packageName)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLTreeModelSourcesMap(final DataDictionary dataDictionary,\n                                                                    final TransformationDictionary transformationDictionary,\n                                                                    final TreeModel model,\n                                                                    final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                                    final String packageName)", "full_signature": "public static Map<String, String> getKiePMMLTreeModelSourcesMap(final DataDictionary dataDictionary,\n                                                                    final TransformationDictionary transformationDictionary,\n                                                                    final TreeModel model,\n                                                                    final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                                    final String packageName)", "class_method_signature": "KiePMMLTreeModelFactory.getKiePMMLTreeModelSourcesMap(final DataDictionary dataDictionary,\n                                                                    final TransformationDictionary transformationDictionary,\n                                                                    final TreeModel model,\n                                                                    final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                                    final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLDroolsAST", "parameters": "(final DataDictionary dataDictionary,\n                                                       final TreeModel model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "modifiers": "public static", "return": "KiePMMLDroolsAST", "signature": "KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final TreeModel model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "full_signature": "public static KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final TreeModel model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "class_method_signature": "KiePMMLTreeModelFactory.getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final TreeModel model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "testcase": false, "constructor": false}, {"identifier": "setConstructor", "parameters": "(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "modifiers": "static", "return": "void", "signature": "void setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "full_signature": "static void setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "class_method_signature": "KiePMMLTreeModelFactory.setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/main/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelFactory.java"}, "focal_method": {"identifier": "setConstructor", "parameters": "(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "modifiers": "static", "return": "void", "body": "static void setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName) {\n        setConstructorSuperNameInvocation(modelName.asString(), constructorDeclaration, treeModel.getModelName());\n        final BlockStmt body = constructorDeclaration.getBody();\n        final ExplicitConstructorInvocationStmt superStatement = CommonCodegenUtils.getExplicitConstructorInvocationStmt(body)\n                .orElseThrow(() -> new KiePMMLException(String.format(MISSING_CONSTRUCTOR_IN_BODY, body)));\n        CommonCodegenUtils.setExplicitConstructorInvocationArgument(superStatement, \"algorithmName\", String.format(\"\\\"%s\\\"\", treeModel.getAlgorithmName()));\n    }", "signature": "void setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "full_signature": "static void setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "class_method_signature": "KiePMMLTreeModelFactory.setConstructor(final TreeModel treeModel, final ConstructorDeclaration constructorDeclaration, final SimpleName modelName)", "testcase": false, "constructor": false, "invocations": ["setConstructorSuperNameInvocation", "asString", "getModelName", "getBody", "orElseThrow", "getExplicitConstructorInvocationStmt", "format", "setExplicitConstructorInvocationArgument", "format", "getAlgorithmName"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}