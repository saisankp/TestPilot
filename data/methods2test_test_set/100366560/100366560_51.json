{"test_class": {"identifier": "AbstractBeanMotherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TestObjectMother beanMother = TestObjectMother.getInstance();", "modifier": "", "type": "TestObjectMother", "declarator": "beanMother = TestObjectMother.getInstance()", "var_name": "beanMother"}], "file": "beanmother-core/src/test/java/io/beanmother/core/AbstractBeanMotherTest.java"}, "test_case": {"identifier": "testSingleMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSingleMapping() throws URISyntaxException {\n        Author author = beanMother.bear(\"unknown_author\", Author.class);\n        assertNotNull(author);\n        assertNotNull(author.getName());\n    }", "signature": "void testSingleMapping()", "full_signature": "@Test public void testSingleMapping()", "class_method_signature": "AbstractBeanMotherTest.testSingleMapping()", "testcase": true, "constructor": false, "invocations": ["bear", "assertNotNull", "assertNotNull", "getName"]}, "focal_class": {"identifier": "AbstractBeanMother", "superclass": "", "interfaces": "implements BeanMother", "fields": [{"original_string": "private FixturesStore fixturesStore;", "modifier": "private", "type": "FixturesStore", "declarator": "fixturesStore", "var_name": "fixturesStore"}, {"original_string": "private ConverterFactory converterFactory;", "modifier": "private", "type": "ConverterFactory", "declarator": "converterFactory", "var_name": "converterFactory"}, {"original_string": "private FixtureMapper fixtureMapper;", "modifier": "private", "type": "FixtureMapper", "declarator": "fixtureMapper", "var_name": "fixtureMapper"}, {"original_string": "private FixtureConverter fixtureConverter;", "modifier": "private", "type": "FixtureConverter", "declarator": "fixtureConverter", "var_name": "fixtureConverter"}, {"original_string": "private ScriptHandler scriptHandler;", "modifier": "private", "type": "ScriptHandler", "declarator": "scriptHandler", "var_name": "scriptHandler"}, {"original_string": "private PostProcessorFactory postProcessorFactory;", "modifier": "private", "type": "PostProcessorFactory", "declarator": "postProcessorFactory", "var_name": "postProcessorFactory"}], "methods": [{"identifier": "getFixturesStore", "parameters": "()", "modifiers": "public", "return": "FixturesStore", "signature": "FixturesStore getFixturesStore()", "full_signature": "public FixturesStore getFixturesStore()", "class_method_signature": "AbstractBeanMother.getFixturesStore()", "testcase": false, "constructor": false}, {"identifier": "AbstractBeanMother", "parameters": "()", "modifiers": "protected", "return": "", "signature": " AbstractBeanMother()", "full_signature": "protected  AbstractBeanMother()", "class_method_signature": "AbstractBeanMother.AbstractBeanMother()", "testcase": false, "constructor": true}, {"identifier": "bear", "parameters": "(String fixtureName, T target)", "modifiers": "@Override public", "return": "T", "signature": "T bear(String fixtureName, T target)", "full_signature": "@Override public T bear(String fixtureName, T target)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, T target)", "testcase": false, "constructor": false}, {"identifier": "bear", "parameters": "(String fixtureName, Class<T> targetClass)", "modifiers": "@Override public", "return": "T", "signature": "T bear(String fixtureName, Class<T> targetClass)", "full_signature": "@Override public T bear(String fixtureName, Class<T> targetClass)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, Class<T> targetClass)", "testcase": false, "constructor": false}, {"identifier": "bear", "parameters": "(String fixtureName, T target, PostProcessor<T> postProcessor)", "modifiers": "@Override public", "return": "T", "signature": "T bear(String fixtureName, T target, PostProcessor<T> postProcessor)", "full_signature": "@Override public T bear(String fixtureName, T target, PostProcessor<T> postProcessor)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, T target, PostProcessor<T> postProcessor)", "testcase": false, "constructor": false}, {"identifier": "bear", "parameters": "(String fixtureName, Class<T> targetClass, PostProcessor<T> postProcessor)", "modifiers": "@Override public", "return": "T", "signature": "T bear(String fixtureName, Class<T> targetClass, PostProcessor<T> postProcessor)", "full_signature": "@Override public T bear(String fixtureName, Class<T> targetClass, PostProcessor<T> postProcessor)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, Class<T> targetClass, PostProcessor<T> postProcessor)", "testcase": false, "constructor": false}, {"identifier": "bear", "parameters": "(String fixtureName, Class<T> targetClass, int size)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> bear(String fixtureName, Class<T> targetClass, int size)", "full_signature": "@Override public List<T> bear(String fixtureName, Class<T> targetClass, int size)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, Class<T> targetClass, int size)", "testcase": false, "constructor": false}, {"identifier": "bear", "parameters": "(String fixtureName, Class<T> targetClass, int size, PostProcessor<T> postProcessor)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> bear(String fixtureName, Class<T> targetClass, int size, PostProcessor<T> postProcessor)", "full_signature": "@Override public List<T> bear(String fixtureName, Class<T> targetClass, int size, PostProcessor<T> postProcessor)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, Class<T> targetClass, int size, PostProcessor<T> postProcessor)", "testcase": false, "constructor": false}, {"identifier": "addFixtureLocation", "parameters": "(String path)", "modifiers": "@Override public", "return": "BeanMother", "signature": "BeanMother addFixtureLocation(String path)", "full_signature": "@Override public BeanMother addFixtureLocation(String path)", "class_method_signature": "AbstractBeanMother.addFixtureLocation(String path)", "testcase": false, "constructor": false}, {"identifier": "_bear", "parameters": "(T target, FixtureMap fixtureMap, PostProcessor<T> postProcessor)", "modifiers": "protected", "return": "T", "signature": "T _bear(T target, FixtureMap fixtureMap, PostProcessor<T> postProcessor)", "full_signature": "protected T _bear(T target, FixtureMap fixtureMap, PostProcessor<T> postProcessor)", "class_method_signature": "AbstractBeanMother._bear(T target, FixtureMap fixtureMap, PostProcessor<T> postProcessor)", "testcase": false, "constructor": false}, {"identifier": "defaultFixturePaths", "parameters": "()", "modifiers": "protected", "return": "String[]", "signature": "String[] defaultFixturePaths()", "full_signature": "protected String[] defaultFixturePaths()", "class_method_signature": "AbstractBeanMother.defaultFixturePaths()", "testcase": false, "constructor": false}, {"identifier": "configureConverterFactory", "parameters": "(ConverterFactory converterFactory)", "modifiers": "protected", "return": "void", "signature": "void configureConverterFactory(ConverterFactory converterFactory)", "full_signature": "protected void configureConverterFactory(ConverterFactory converterFactory)", "class_method_signature": "AbstractBeanMother.configureConverterFactory(ConverterFactory converterFactory)", "testcase": false, "constructor": false}, {"identifier": "configureScriptHandler", "parameters": "(ScriptHandler scriptHandler)", "modifiers": "protected", "return": "void", "signature": "void configureScriptHandler(ScriptHandler scriptHandler)", "full_signature": "protected void configureScriptHandler(ScriptHandler scriptHandler)", "class_method_signature": "AbstractBeanMother.configureScriptHandler(ScriptHandler scriptHandler)", "testcase": false, "constructor": false}, {"identifier": "configurePostProcessorFactory", "parameters": "(PostProcessorFactory postProcessorFactory)", "modifiers": "protected", "return": "void", "signature": "void configurePostProcessorFactory(PostProcessorFactory postProcessorFactory)", "full_signature": "protected void configurePostProcessorFactory(PostProcessorFactory postProcessorFactory)", "class_method_signature": "AbstractBeanMother.configurePostProcessorFactory(PostProcessorFactory postProcessorFactory)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initialize()", "full_signature": "protected void initialize()", "class_method_signature": "AbstractBeanMother.initialize()", "testcase": false, "constructor": false}, {"identifier": "handleScriptFixtureValue", "parameters": "(FixtureMap fixtureMap)", "modifiers": "private", "return": "void", "signature": "void handleScriptFixtureValue(FixtureMap fixtureMap)", "full_signature": "private void handleScriptFixtureValue(FixtureMap fixtureMap)", "class_method_signature": "AbstractBeanMother.handleScriptFixtureValue(FixtureMap fixtureMap)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/AbstractBeanMother.java"}, "focal_method": {"identifier": "bear", "parameters": "(String fixtureName, T target)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public <T> T bear(String fixtureName, T target) {\n        return bear(fixtureName, target, null);\n    }", "signature": "T bear(String fixtureName, T target)", "full_signature": "@Override public T bear(String fixtureName, T target)", "class_method_signature": "AbstractBeanMother.bear(String fixtureName, T target)", "testcase": false, "constructor": false, "invocations": ["bear"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}