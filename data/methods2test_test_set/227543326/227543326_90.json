{"test_class": {"identifier": "ShardingDbInitTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Tested\n    private ShardingDbInit shardingDbInit;", "modifier": "@Tested\n    private", "type": "ShardingDbInit", "declarator": "shardingDbInit", "var_name": "shardingDbInit"}, {"original_string": "@Mocked\n    private BeanDefinitionRegistry registry;", "modifier": "@Mocked\n    private", "type": "BeanDefinitionRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "@Mocked\n    private ShardingTracer shardingTracer;", "modifier": "@Mocked\n    private", "type": "ShardingTracer", "declarator": "shardingTracer", "var_name": "shardingTracer"}], "file": "zebra/zebra-database/src/test/java/com/guosen/zebra/database/init/ShardingDbInitTest.java"}, "test_case": {"identifier": "testNoShardingCfg", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoShardingCfg() {\n        shardingDbInit.init(registry, null, null);\n\n        new Verifications() {\n            {\n                ShardingTracer.init((Tracer)any);\n                times = 0;\n            }\n        };\n    }", "signature": "void testNoShardingCfg()", "full_signature": "@Test public void testNoShardingCfg()", "class_method_signature": "ShardingDbInitTest.testNoShardingCfg()", "testcase": true, "constructor": false, "invocations": ["init", "init"]}, "focal_class": {"identifier": "ShardingDbInit", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ShardingDbInit.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ShardingDbInit.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "init", "parameters": "(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "modifiers": "public", "return": "void", "signature": "void init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "full_signature": "public void init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "class_method_signature": "ShardingDbInit.init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "testcase": false, "constructor": false}, {"identifier": "initDataSources", "parameters": "(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList, Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "modifiers": "private", "return": "void", "signature": "void initDataSources(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList, Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "full_signature": "private void initDataSources(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList, Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "class_method_signature": "ShardingDbInit.initDataSources(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList, Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "testcase": false, "constructor": false}, {"identifier": "doInit", "parameters": "(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n                        String shardingDataSourceName, ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "modifiers": "private", "return": "void", "signature": "void doInit(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n                        String shardingDataSourceName, ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "full_signature": "private void doInit(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n                        String shardingDataSourceName, ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "class_method_signature": "ShardingDbInit.doInit(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n                        String shardingDataSourceName, ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "testcase": false, "constructor": false}, {"identifier": "getReferDataSourceNames", "parameters": "(ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getReferDataSourceNames(ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "full_signature": "private Set<String> getReferDataSourceNames(ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "class_method_signature": "ShardingDbInit.getReferDataSourceNames(ZebraShardingDataSourceCfg zebraShardingDataSourceCfg)", "testcase": false, "constructor": false}, {"identifier": "initDatabaseBeans", "parameters": "(BeanDefinitionRegistry registry,\n                                   String shardingDataSourceName,\n                                   ZebraShardingDataSourceCfg zebraShardingDataSourceCfg,\n                                   List<DataSourceCfg> referDataSourceCfgList)", "modifiers": "private", "return": "void", "signature": "void initDatabaseBeans(BeanDefinitionRegistry registry,\n                                   String shardingDataSourceName,\n                                   ZebraShardingDataSourceCfg zebraShardingDataSourceCfg,\n                                   List<DataSourceCfg> referDataSourceCfgList)", "full_signature": "private void initDatabaseBeans(BeanDefinitionRegistry registry,\n                                   String shardingDataSourceName,\n                                   ZebraShardingDataSourceCfg zebraShardingDataSourceCfg,\n                                   List<DataSourceCfg> referDataSourceCfgList)", "class_method_signature": "ShardingDbInit.initDatabaseBeans(BeanDefinitionRegistry registry,\n                                   String shardingDataSourceName,\n                                   ZebraShardingDataSourceCfg zebraShardingDataSourceCfg,\n                                   List<DataSourceCfg> referDataSourceCfgList)", "testcase": false, "constructor": false}, {"identifier": "initReferDataSources", "parameters": "(BeanDefinitionRegistry registry,\n                                                         List<DataSourceCfg> referDataSourceCfgList)", "modifiers": "private", "return": "Map<String, DataSource>", "signature": "Map<String, DataSource> initReferDataSources(BeanDefinitionRegistry registry,\n                                                         List<DataSourceCfg> referDataSourceCfgList)", "full_signature": "private Map<String, DataSource> initReferDataSources(BeanDefinitionRegistry registry,\n                                                         List<DataSourceCfg> referDataSourceCfgList)", "class_method_signature": "ShardingDbInit.initReferDataSources(BeanDefinitionRegistry registry,\n                                                         List<DataSourceCfg> referDataSourceCfgList)", "testcase": false, "constructor": false}], "file": "zebra/zebra-database/src/main/java/com/guosen/zebra/database/init/ShardingDbInit.java"}, "focal_method": {"identifier": "init", "parameters": "(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "modifiers": "public", "return": "void", "body": "public void init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap) {\n\n        if (MapUtils.isEmpty(zebraShardingDataSourceConfigurationMap)) {\n            LOGGER.info(\"There is no sharding configuration.\");\n            return;\n        }\n\n        String dataSourceNames = String.join(\",\", zebraShardingDataSourceConfigurationMap.keySet());\n        LOGGER.info(\"Sharding data source name is/are [{}].\", dataSourceNames);\n        LOGGER.info(\"Begin to create and register related bean definitions of sharding data sources.\");\n\n        // \u521d\u59cb\u5316\u76f8\u5173\u7684\u6570\u636e\u6e90\u53ca\u76f8\u5173bean\n        initDataSources(registry, dataSourceCfgList, zebraShardingDataSourceConfigurationMap);\n\n        // \u521d\u59cb\u5316ShardingTracer\uff0c\u4ee5\u4fbf\u4e0a\u62a5\u5230APM\u7cfb\u7edf\n        ShardingTracer.init(ZebraOpenTracingTracer.getInstance());\n\n        LOGGER.info(\"Finish to create and register related bean definitions of sharding data sources.\");\n    }", "signature": "void init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "full_signature": "public void init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "class_method_signature": "ShardingDbInit.init(BeanDefinitionRegistry registry, List<DataSourceCfg> dataSourceCfgList,\n              Map<String, ZebraShardingDataSourceCfg> zebraShardingDataSourceConfigurationMap)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "info", "join", "keySet", "info", "info", "initDataSources", "init", "getInstance", "info"]}, "repository": {"repo_id": 227543326, "url": "https://github.com/gszebra/zebra", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 15, "size": 2223, "license": "licensed"}}