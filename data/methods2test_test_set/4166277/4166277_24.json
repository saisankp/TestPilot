{"test_class": {"identifier": "StackFrameTest", "superclass": "", "interfaces": "", "fields": [], "file": "sjk-stacktrace/src/test/java/org/gridkit/jvmtool/stacktrace/StackFrameTest.java"}, "test_case": {"identifier": "test_normal_frame_at_15", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_normal_frame_at_15() {\n        StackTraceElement ste = new StackTraceElement(\"MyClass\", \"myMethod\", \"MyClass.java\", 15);\n        StackFrame frame = new StackFrame(ste);\n\n        Assert.assertEquals(ste.toString(), frame.toString());\n    }", "signature": "void test_normal_frame_at_15()", "full_signature": "@Test public void test_normal_frame_at_15()", "class_method_signature": "StackFrameTest.test_normal_frame_at_15()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "toString"]}, "focal_class": {"identifier": "StackFrame", "superclass": "", "interfaces": "implements CharSequence, GenericStackElement", "fields": [{"original_string": "public static final Comparator<StackFrame> COMPARATOR = new FrameComparator();", "modifier": "public static final", "type": "Comparator<StackFrame>", "declarator": "COMPARATOR = new FrameComparator()", "var_name": "COMPARATOR"}, {"original_string": "private static final String NATIVE_METHOD = \"Native Method\";", "modifier": "private static final", "type": "String", "declarator": "NATIVE_METHOD = \"Native Method\"", "var_name": "NATIVE_METHOD"}, {"original_string": "private static final String UNKNOWN_SOURCE = \"Unknown Source\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_SOURCE = \"Unknown Source\"", "var_name": "UNKNOWN_SOURCE"}, {"original_string": "private static final int NO_LINE_NUMBER = 0;", "modifier": "private static final", "type": "int", "declarator": "NO_LINE_NUMBER = 0", "var_name": "NO_LINE_NUMBER"}, {"original_string": "private static final int NO_SOURCE = -1;", "modifier": "private static final", "type": "int", "declarator": "NO_SOURCE = -1", "var_name": "NO_SOURCE"}, {"original_string": "private static final int NATIVE = -2;", "modifier": "private static final", "type": "int", "declarator": "NATIVE = -2", "var_name": "NATIVE"}, {"original_string": "private static final int[] PO10 = {1, 10, 100, 1000, 10000, 100000};", "modifier": "private static final", "type": "int[]", "declarator": "PO10 = {1, 10, 100, 1000, 10000, 100000}", "var_name": "PO10"}, {"original_string": "private final String classPrefix;", "modifier": "private final", "type": "String", "declarator": "classPrefix", "var_name": "classPrefix"}, {"original_string": "private final String className;", "modifier": "private final", "type": "String", "declarator": "className", "var_name": "className"}, {"original_string": "private String fqcn = null;", "modifier": "private", "type": "String", "declarator": "fqcn = null", "var_name": "fqcn"}, {"original_string": "private final String methodName;", "modifier": "private final", "type": "String", "declarator": "methodName", "var_name": "methodName"}, {"original_string": "private final String fileName;", "modifier": "private final", "type": "String", "declarator": "fileName", "var_name": "fileName"}, {"original_string": "private final int lineNumber;", "modifier": "private final", "type": "int", "declarator": "lineNumber", "var_name": "lineNumber"}, {"original_string": "private final short textLen;", "modifier": "private final", "type": "short", "declarator": "textLen", "var_name": "textLen"}, {"original_string": "private final short lineNumberDigits;", "modifier": "private final", "type": "short", "declarator": "lineNumberDigits", "var_name": "lineNumberDigits"}, {"original_string": "private final int hash;", "modifier": "private final", "type": "int", "declarator": "hash", "var_name": "hash"}], "methods": [{"identifier": "StackFrame", "parameters": "(StackTraceElement ste)", "modifiers": "public", "return": "", "signature": " StackFrame(StackTraceElement ste)", "full_signature": "public  StackFrame(StackTraceElement ste)", "class_method_signature": "StackFrame.StackFrame(StackTraceElement ste)", "testcase": false, "constructor": true}, {"identifier": "StackFrame", "parameters": "(String classPrefix, String className, String methodName, String fileName, int lineNumber)", "modifiers": "public", "return": "", "signature": " StackFrame(String classPrefix, String className, String methodName, String fileName, int lineNumber)", "full_signature": "public  StackFrame(String classPrefix, String className, String methodName, String fileName, int lineNumber)", "class_method_signature": "StackFrame.StackFrame(String classPrefix, String className, String methodName, String fileName, int lineNumber)", "testcase": false, "constructor": true}, {"identifier": "calcLen", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int calcLen()", "full_signature": "private int calcLen()", "class_method_signature": "StackFrame.calcLen()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClassName()", "full_signature": "public String getClassName()", "class_method_signature": "StackFrame.getClassName()", "testcase": false, "constructor": false}, {"identifier": "getClassPrefix", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getClassPrefix()", "full_signature": " String getClassPrefix()", "class_method_signature": "StackFrame.getClassPrefix()", "testcase": false, "constructor": false}, {"identifier": "getShortClassName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getShortClassName()", "full_signature": " String getShortClassName()", "class_method_signature": "StackFrame.getShortClassName()", "testcase": false, "constructor": false}, {"identifier": "getMethodName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethodName()", "full_signature": "public String getMethodName()", "class_method_signature": "StackFrame.getMethodName()", "testcase": false, "constructor": false}, {"identifier": "getSourceFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceFile()", "full_signature": "public String getSourceFile()", "class_method_signature": "StackFrame.getSourceFile()", "testcase": false, "constructor": false}, {"identifier": "getLineNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLineNumber()", "full_signature": "public int getLineNumber()", "class_method_signature": "StackFrame.getLineNumber()", "testcase": false, "constructor": false}, {"identifier": "isNative", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNative()", "full_signature": "public boolean isNative()", "class_method_signature": "StackFrame.isNative()", "testcase": false, "constructor": false}, {"identifier": "internSymbols", "parameters": "()", "modifiers": "public", "return": "StackFrame", "signature": "StackFrame internSymbols()", "full_signature": "public StackFrame internSymbols()", "class_method_signature": "StackFrame.internSymbols()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "StackFrame.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(int index)", "full_signature": "@Override public char charAt(int index)", "class_method_signature": "StackFrame.charAt(int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(int start, int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(int start, int end)", "full_signature": "@Override public CharSequence subSequence(int start, int end)", "class_method_signature": "StackFrame.subSequence(int start, int end)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StackFrame.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "StackFrame.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "withoutSource", "parameters": "()", "modifiers": "public", "return": "StackFrame", "signature": "StackFrame withoutSource()", "full_signature": "public StackFrame withoutSource()", "class_method_signature": "StackFrame.withoutSource()", "testcase": false, "constructor": false}, {"identifier": "toStackTraceElement", "parameters": "()", "modifiers": "public", "return": "StackTraceElement", "signature": "StackTraceElement toStackTraceElement()", "full_signature": "public StackTraceElement toStackTraceElement()", "class_method_signature": "StackFrame.toStackTraceElement()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StackFrame.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(StringBuilder builder)", "modifiers": "public", "return": "void", "signature": "void toString(StringBuilder builder)", "full_signature": "public void toString(StringBuilder builder)", "class_method_signature": "StackFrame.toString(StringBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "genHash", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int genHash()", "full_signature": "private int genHash()", "class_method_signature": "StackFrame.genHash()", "testcase": false, "constructor": false}, {"identifier": "hashText", "parameters": "(int hash, String text)", "modifiers": "private", "return": "int", "signature": "int hashText(int hash, String text)", "full_signature": "private int hashText(int hash, String text)", "class_method_signature": "StackFrame.hashText(int hash, String text)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(CharSequence seq)", "modifiers": "private static", "return": "String", "signature": "String toString(CharSequence seq)", "full_signature": "private static String toString(CharSequence seq)", "class_method_signature": "StackFrame.toString(CharSequence seq)", "testcase": false, "constructor": false}, {"identifier": "parseFrame", "parameters": "(String line)", "modifiers": "public static", "return": "StackFrame", "signature": "StackFrame parseFrame(String line)", "full_signature": "public static StackFrame parseFrame(String line)", "class_method_signature": "StackFrame.parseFrame(String line)", "testcase": false, "constructor": false}], "file": "sjk-stacktrace/src/main/java/org/gridkit/jvmtool/stacktrace/StackFrame.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return toString(this);\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StackFrame.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 4166277, "url": "https://github.com/aragozin/jvm-tools", "language": "Java", "is_fork": false, "fork_count": 443, "stargazer_count": 2728, "size": 4961, "license": "licensed"}}