{"test_class": {"identifier": "IOUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/utils/IOUtilsTest.java"}, "test_case": {"identifier": "testByteBufToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testByteBufToString() throws IOException {\n        ByteBuf byteBuf = Unpooled.buffer(16);\n        byteBuf.writeInt(123);\n        byteBuf.writeInt(456);\n        ByteBufInputStream inputStream = new ByteBufInputStream(byteBuf);\n        byte[] bytes = IOUtils.readInputStream(inputStream);\n        Assert.assertEquals(8, bytes.length);\n\n        ByteBuffer buf = ByteBuffer.wrap(bytes);\n        Assert.assertEquals(123, buf.getInt(0));\n        Assert.assertEquals(456, buf.getInt(4));\n    }", "signature": "void testByteBufToString()", "full_signature": "@Test public void testByteBufToString()", "class_method_signature": "IOUtilsTest.testByteBufToString()", "testcase": true, "constructor": false, "invocations": ["buffer", "writeInt", "writeInt", "readInputStream", "assertEquals", "wrap", "assertEquals", "getInt", "assertEquals", "getInt"]}, "focal_class": {"identifier": "IOUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int BUFFER_SIZE = 256;", "modifier": "private static final", "type": "int", "declarator": "BUFFER_SIZE = 256", "var_name": "BUFFER_SIZE"}], "methods": [{"identifier": "readInputStream", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readInputStream(InputStream inputStream)", "full_signature": "public static byte[] readInputStream(InputStream inputStream)", "class_method_signature": "IOUtils.readInputStream(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/utils/IOUtils.java"}, "focal_method": {"identifier": "readInputStream", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] readInputStream(InputStream inputStream) throws IOException {\n        byte[] buf = new byte[BUFFER_SIZE];\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        int n;\n        while ((n = inputStream.read(buf)) >= 0) {\n            out.write(buf, 0, n);\n        }\n        return out.toByteArray();\n    }", "signature": "byte[] readInputStream(InputStream inputStream)", "full_signature": "public static byte[] readInputStream(InputStream inputStream)", "class_method_signature": "IOUtils.readInputStream(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["read", "write", "toByteArray"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}