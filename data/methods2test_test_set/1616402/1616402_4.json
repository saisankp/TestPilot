{"test_class": {"identifier": "ActionFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "Magic/src/test/java/com/elmakers/mine/bukkit/action/ActionFactoryTest.java"}, "test_case": {"identifier": "testInvalidAliasClass", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testInvalidAliasClass() throws ActionFactoryException {\n        ActionFactory.registerActionClass(\"0123\", Object.class);\n    }", "signature": "void testInvalidAliasClass()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testInvalidAliasClass()", "class_method_signature": "ActionFactoryTest.testInvalidAliasClass()", "testcase": true, "constructor": false, "invocations": ["registerActionClass"]}, "focal_class": {"identifier": "ActionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<ActionResolver> resolvers = new ArrayList<>();", "modifier": "private static", "type": "List<ActionResolver>", "declarator": "resolvers = new ArrayList<>()", "var_name": "resolvers"}], "methods": [{"identifier": "getActionResolvers", "parameters": "()", "modifiers": "public static", "return": "List<ActionResolver>", "signature": "List<ActionResolver> getActionResolvers()", "full_signature": "public static List<ActionResolver> getActionResolvers()", "class_method_signature": "ActionFactory.getActionResolvers()", "testcase": false, "constructor": false}, {"identifier": "registerResolver", "parameters": "(ActionResolver actionResolver)", "modifiers": "public static", "return": "void", "signature": "void registerResolver(ActionResolver actionResolver)", "full_signature": "public static void registerResolver(ActionResolver actionResolver)", "class_method_signature": "ActionFactory.registerResolver(ActionResolver actionResolver)", "testcase": false, "constructor": false}, {"identifier": "registerResolver", "parameters": "(ActionResolver actionResolver,\n            boolean highPriority)", "modifiers": "public static", "return": "void", "signature": "void registerResolver(ActionResolver actionResolver,\n            boolean highPriority)", "full_signature": "public static void registerResolver(ActionResolver actionResolver,\n            boolean highPriority)", "class_method_signature": "ActionFactory.registerResolver(ActionResolver actionResolver,\n            boolean highPriority)", "testcase": false, "constructor": false}, {"identifier": "removeResolver", "parameters": "(ActionResolver actionResolver)", "modifiers": "public static", "return": "void", "signature": "void removeResolver(ActionResolver actionResolver)", "full_signature": "public static void removeResolver(ActionResolver actionResolver)", "class_method_signature": "ActionFactory.removeResolver(ActionResolver actionResolver)", "testcase": false, "constructor": false}, {"identifier": "ActionFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ActionFactory()", "full_signature": "private  ActionFactory()", "class_method_signature": "ActionFactory.ActionFactory()", "testcase": false, "constructor": true}, {"identifier": "registerActionClass", "parameters": "(String name, Class<?> clazz)", "modifiers": "public static", "return": "void", "signature": "void registerActionClass(String name, Class<?> clazz)", "full_signature": "public static void registerActionClass(String name, Class<?> clazz)", "class_method_signature": "ActionFactory.registerActionClass(String name, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "construct", "parameters": "(String actionClassName)", "modifiers": "public static", "return": "BaseSpellAction", "signature": "BaseSpellAction construct(String actionClassName)", "full_signature": "public static BaseSpellAction construct(String actionClassName)", "class_method_signature": "ActionFactory.construct(String actionClassName)", "testcase": false, "constructor": false}], "file": "Magic/src/main/java/com/elmakers/mine/bukkit/action/ActionFactory.java"}, "focal_method": {"identifier": "registerActionClass", "parameters": "(String name, Class<?> clazz)", "modifiers": "public static", "return": "void", "body": "public static void registerActionClass(String name, Class<?> clazz) {\n        if (!BaseSpellAction.class.isAssignableFrom(clazz)) {\n            throw new IllegalArgumentException(\"Must extend SpellAction\");\n        }\n\n        ActionConstructor constructor = InternalActionResolver\n                .createConstructor(clazz);\n\n        if (constructor == null) {\n            throw new IllegalArgumentException(\n                    \"Class does not have a valid no-args constructor\");\n        }\n\n        InternalActionResolver.actionClasses.put(name, constructor);\n    }", "signature": "void registerActionClass(String name, Class<?> clazz)", "full_signature": "public static void registerActionClass(String name, Class<?> clazz)", "class_method_signature": "ActionFactory.registerActionClass(String name, Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom", "createConstructor", "put"]}, "repository": {"repo_id": 1616402, "url": "https://github.com/elBukkit/MagicPlugin", "stars": 69, "created": "4/14/2011 9:39:53 PM +00:00", "updates": "2020-01-24T15:24:59+00:00", "fork": "False", "license": "licensed"}}