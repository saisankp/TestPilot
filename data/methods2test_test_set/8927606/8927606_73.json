{"test_class": {"identifier": "ApiServiceDispatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ApiServiceDispatcher dispatcher = null;", "modifier": "private", "type": "ApiServiceDispatcher", "declarator": "dispatcher = null", "var_name": "dispatcher"}, {"original_string": "private int amount = 100;", "modifier": "private", "type": "int", "declarator": "amount = 100", "var_name": "amount"}], "file": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiServiceDispatcherTest.java"}, "test_case": {"identifier": "testAddManyConcurrentSimultaneousListeners", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAddManyConcurrentSimultaneousListeners() throws ListenerException, InterruptedException {\n\t\tList<Thread> list = new ArrayList<Thread>();\n\n\t\t// Spin up many simultaneous threads to 'bomb' the dispatcher with many concurrent requests\n\t\tfor (int i = 0; i < amount; i++) {\n\t\t\tString name = \"thread\"+i;\n\t\t\tCreateListener target = new CreateListener(name);\n\t\t\tThread t = new Thread(target);\n\t\t\tt.setName(name);\n\t\t\tt.start();\n\t\t\tlist.add(t);\n\t\t}\n\n\t\t// Join all threads together\n\t\tfor (Thread thread : list) {\n\t\t\tthread.join();\n\t\t}\n\n\t\t// Make sure the expected amount matches the clients registered in the dispatcher!\n\t\tassertEquals(amount, dispatcher.getPatternClients().size());\n\t}", "signature": "void testAddManyConcurrentSimultaneousListeners()", "full_signature": "@Test public void testAddManyConcurrentSimultaneousListeners()", "class_method_signature": "ApiServiceDispatcherTest.testAddManyConcurrentSimultaneousListeners()", "testcase": true, "constructor": false, "invocations": ["setName", "start", "add", "join", "assertEquals", "size", "getPatternClients"]}, "focal_class": {"identifier": "ApiServiceDispatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger log = LogUtil.getLogger(this);", "modifier": "private", "type": "Logger", "declarator": "log = LogUtil.getLogger(this)", "var_name": "log"}, {"original_string": "private ConcurrentSkipListMap<String, ApiDispatchConfig> patternClients = new ConcurrentSkipListMap<String, ApiDispatchConfig>(new ApiUriComparator());", "modifier": "private", "type": "ConcurrentSkipListMap<String, ApiDispatchConfig>", "declarator": "patternClients = new ConcurrentSkipListMap<String, ApiDispatchConfig>(new ApiUriComparator())", "var_name": "patternClients"}, {"original_string": "private static ApiServiceDispatcher self = null;", "modifier": "private static", "type": "ApiServiceDispatcher", "declarator": "self = null", "var_name": "self"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static synchronized", "return": "ApiServiceDispatcher", "signature": "ApiServiceDispatcher getInstance()", "full_signature": "public static synchronized ApiServiceDispatcher getInstance()", "class_method_signature": "ApiServiceDispatcher.getInstance()", "testcase": false, "constructor": false}, {"identifier": "findConfigForUri", "parameters": "(String uri)", "modifiers": "public", "return": "ApiDispatchConfig", "signature": "ApiDispatchConfig findConfigForUri(String uri)", "full_signature": "public ApiDispatchConfig findConfigForUri(String uri)", "class_method_signature": "ApiServiceDispatcher.findConfigForUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "findMatchingConfigsForUri", "parameters": "(String uri)", "modifiers": "public", "return": "List<ApiDispatchConfig>", "signature": "List<ApiDispatchConfig> findMatchingConfigsForUri(String uri)", "full_signature": "public List<ApiDispatchConfig> findMatchingConfigsForUri(String uri)", "class_method_signature": "ApiServiceDispatcher.findMatchingConfigsForUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "findMatchingConfigsForUri", "parameters": "(String uri, boolean exactMatch)", "modifiers": "private", "return": "List<ApiDispatchConfig>", "signature": "List<ApiDispatchConfig> findMatchingConfigsForUri(String uri, boolean exactMatch)", "full_signature": "private List<ApiDispatchConfig> findMatchingConfigsForUri(String uri, boolean exactMatch)", "class_method_signature": "ApiServiceDispatcher.findMatchingConfigsForUri(String uri, boolean exactMatch)", "testcase": false, "constructor": false}, {"identifier": "registerServiceClient", "parameters": "(ApiListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void registerServiceClient(ApiListener listener)", "full_signature": "public synchronized void registerServiceClient(ApiListener listener)", "class_method_signature": "ApiServiceDispatcher.registerServiceClient(ApiListener listener)", "testcase": false, "constructor": false}, {"identifier": "unregisterServiceClient", "parameters": "(ApiListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void unregisterServiceClient(ApiListener listener)", "full_signature": "public synchronized void unregisterServiceClient(ApiListener listener)", "class_method_signature": "ApiServiceDispatcher.unregisterServiceClient(ApiListener listener)", "testcase": false, "constructor": false}, {"identifier": "getPatternClients", "parameters": "()", "modifiers": "public", "return": "SortedMap<String, ApiDispatchConfig>", "signature": "SortedMap<String, ApiDispatchConfig> getPatternClients()", "full_signature": "public SortedMap<String, ApiDispatchConfig> getPatternClients()", "class_method_signature": "ApiServiceDispatcher.getPatternClients()", "testcase": false, "constructor": false}, {"identifier": "generateOpenApiJsonSchema", "parameters": "()", "modifiers": "protected", "return": "JsonObject", "signature": "JsonObject generateOpenApiJsonSchema()", "full_signature": "protected JsonObject generateOpenApiJsonSchema()", "class_method_signature": "ApiServiceDispatcher.generateOpenApiJsonSchema()", "testcase": false, "constructor": false}, {"identifier": "generateOpenApiJsonSchema", "parameters": "(ApiDispatchConfig client)", "modifiers": "protected", "return": "JsonObject", "signature": "JsonObject generateOpenApiJsonSchema(ApiDispatchConfig client)", "full_signature": "protected JsonObject generateOpenApiJsonSchema(ApiDispatchConfig client)", "class_method_signature": "ApiServiceDispatcher.generateOpenApiJsonSchema(ApiDispatchConfig client)", "testcase": false, "constructor": false}, {"identifier": "generateOpenApiJsonSchema", "parameters": "(Collection<ApiDispatchConfig> clients)", "modifiers": "protected", "return": "JsonObject", "signature": "JsonObject generateOpenApiJsonSchema(Collection<ApiDispatchConfig> clients)", "full_signature": "protected JsonObject generateOpenApiJsonSchema(Collection<ApiDispatchConfig> clients)", "class_method_signature": "ApiServiceDispatcher.generateOpenApiJsonSchema(Collection<ApiDispatchConfig> clients)", "testcase": false, "constructor": false}, {"identifier": "getJsonValidator", "parameters": "(PipeLine pipeline)", "modifiers": "public static", "return": "Json2XmlValidator", "signature": "Json2XmlValidator getJsonValidator(PipeLine pipeline)", "full_signature": "public static Json2XmlValidator getJsonValidator(PipeLine pipeline)", "class_method_signature": "ApiServiceDispatcher.getJsonValidator(PipeLine pipeline)", "testcase": false, "constructor": false}, {"identifier": "mapResponses", "parameters": "(IAdapter adapter, MediaTypes contentType, JsonObjectBuilder schemas)", "modifiers": "private", "return": "JsonObjectBuilder", "signature": "JsonObjectBuilder mapResponses(IAdapter adapter, MediaTypes contentType, JsonObjectBuilder schemas)", "full_signature": "private JsonObjectBuilder mapResponses(IAdapter adapter, MediaTypes contentType, JsonObjectBuilder schemas)", "class_method_signature": "ApiServiceDispatcher.mapResponses(IAdapter adapter, MediaTypes contentType, JsonObjectBuilder schemas)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "ApiServiceDispatcher.clear()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiServiceDispatcher.java"}, "focal_method": {"identifier": "getPatternClients", "parameters": "()", "modifiers": "public", "return": "SortedMap<String, ApiDispatchConfig>", "body": "public SortedMap<String, ApiDispatchConfig> getPatternClients() {\n\t\treturn patternClients;\n\t}", "signature": "SortedMap<String, ApiDispatchConfig> getPatternClients()", "full_signature": "public SortedMap<String, ApiDispatchConfig> getPatternClients()", "class_method_signature": "ApiServiceDispatcher.getPatternClients()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}