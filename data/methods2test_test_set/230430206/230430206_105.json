{"test_class": {"identifier": "SerializeUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/util/SerializeUtilsTest.java"}, "test_case": {"identifier": "testSerializeRequestRequestIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerializeRequestRequestIsNull() {\n        byte[] data = SerializeUtils.serializeRequest(null);\n        assertNull(data);\n    }", "signature": "void testSerializeRequestRequestIsNull()", "full_signature": "@Test public void testSerializeRequestRequestIsNull()", "class_method_signature": "SerializeUtilsTest.testSerializeRequestRequestIsNull()", "testcase": true, "constructor": false, "invocations": ["serializeRequest", "assertNull"]}, "focal_class": {"identifier": "SerializeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SerializeUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SerializeUtils.class)", "var_name": "LOG"}], "methods": [{"identifier": "deserializeTxn", "parameters": "(byte txnBytes[], TxnHeader hdr)", "modifiers": "public static", "return": "Record", "signature": "Record deserializeTxn(byte txnBytes[], TxnHeader hdr)", "full_signature": "public static Record deserializeTxn(byte txnBytes[], TxnHeader hdr)", "class_method_signature": "SerializeUtils.deserializeTxn(byte txnBytes[], TxnHeader hdr)", "testcase": false, "constructor": false}, {"identifier": "deserializeSnapshot", "parameters": "(DataTree dt,InputArchive ia,\n            Map<Long, Integer> sessions)", "modifiers": "public static", "return": "void", "signature": "void deserializeSnapshot(DataTree dt,InputArchive ia,\n            Map<Long, Integer> sessions)", "full_signature": "public static void deserializeSnapshot(DataTree dt,InputArchive ia,\n            Map<Long, Integer> sessions)", "class_method_signature": "SerializeUtils.deserializeSnapshot(DataTree dt,InputArchive ia,\n            Map<Long, Integer> sessions)", "testcase": false, "constructor": false}, {"identifier": "serializeSnapshot", "parameters": "(DataTree dt,OutputArchive oa,\n            Map<Long, Integer> sessions)", "modifiers": "public static", "return": "void", "signature": "void serializeSnapshot(DataTree dt,OutputArchive oa,\n            Map<Long, Integer> sessions)", "full_signature": "public static void serializeSnapshot(DataTree dt,OutputArchive oa,\n            Map<Long, Integer> sessions)", "class_method_signature": "SerializeUtils.serializeSnapshot(DataTree dt,OutputArchive oa,\n            Map<Long, Integer> sessions)", "testcase": false, "constructor": false}, {"identifier": "serializeRequest", "parameters": "(Request request)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] serializeRequest(Request request)", "full_signature": "public static byte[] serializeRequest(Request request)", "class_method_signature": "SerializeUtils.serializeRequest(Request request)", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/util/SerializeUtils.java"}, "focal_method": {"identifier": "serializeRequest", "parameters": "(Request request)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] serializeRequest(Request request) {\n        if (request == null || request.getHdr() == null) return null;\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);\n        try {\n            request.getHdr().serialize(boa, \"hdr\");\n            if (request.getTxn() != null) {\n                request.getTxn().serialize(boa, \"txn\");\n            }\n        } catch (IOException e) {\n            LOG.error(\"This really should be impossible\", e);\n        } finally {\n            IOUtils.cleanup(LOG, baos);\n        }\n        return baos.toByteArray();\n    }", "signature": "byte[] serializeRequest(Request request)", "full_signature": "public static byte[] serializeRequest(Request request)", "class_method_signature": "SerializeUtils.serializeRequest(Request request)", "testcase": false, "constructor": false, "invocations": ["getHdr", "getArchive", "serialize", "getHdr", "getTxn", "serialize", "getTxn", "error", "cleanup", "toByteArray"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}