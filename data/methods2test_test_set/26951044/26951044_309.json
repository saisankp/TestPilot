{"test_class": {"identifier": "DefaultConfigurationBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestPropertySource testPropertySource = new TestPropertySource() {\n    };", "modifier": "private", "type": "TestPropertySource", "declarator": "testPropertySource = new TestPropertySource() {\n    }", "var_name": "testPropertySource"}], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationBuilderTest.java"}, "test_case": {"identifier": "highestPriority", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void highestPriority() {\n        // setup\n        DefaultConfigurationBuilder b = new DefaultConfigurationBuilder();\n        MockedPropertySource[] propertySources = new MockedPropertySource[10];\n        for (int i = 0; i < propertySources.length; i++) {\n            propertySources[i] = new MockedPropertySource(\"ps\" + i, i);\n        }\n        b.addPropertySources(propertySources);\n        // test\n        b.highestPriority(propertySources[propertySources.length - 1]);\n        for (int i = 0; i < propertySources.length; i++) {\n            assertThat(b.getPropertySources().get(i)).isEqualTo(propertySources[i]);\n        }\n        b.highestPriority(propertySources[propertySources.length - 2]);\n        for (int i = 0; i < propertySources.length - 2; i++) {\n            assertThat(b.getPropertySources().get(i)).isEqualTo(propertySources[i]);\n        }\n        assertThat(b.getPropertySources().get(propertySources.length - 1)).isEqualTo(propertySources[propertySources.length - 2]);\n        assertThat(b.getPropertySources().get(propertySources.length - 2)).isEqualTo(propertySources[propertySources.length - 1]);\n        b.highestPriority(propertySources[5]).build();\n        assertThat(b.getPropertySources().get(propertySources.length - 1)).isEqualTo(propertySources[5]);\n        boolean caughtAlreadyBuilt = false;\n        try {\n            b.highestPriority(propertySources[5]);\n        } catch (IllegalStateException e) {\n            caughtAlreadyBuilt = true;\n        }\n        assertThat(caughtAlreadyBuilt).isTrue();\n    }", "signature": "void highestPriority()", "full_signature": "@Test public void highestPriority()", "class_method_signature": "DefaultConfigurationBuilderTest.highestPriority()", "testcase": true, "constructor": false, "invocations": ["addPropertySources", "highestPriority", "isEqualTo", "assertThat", "get", "getPropertySources", "highestPriority", "isEqualTo", "assertThat", "get", "getPropertySources", "isEqualTo", "assertThat", "get", "getPropertySources", "isEqualTo", "assertThat", "get", "getPropertySources", "build", "highestPriority", "isEqualTo", "assertThat", "get", "getPropertySources", "highestPriority", "isTrue", "assertThat"]}, "focal_class": {"identifier": "DefaultConfigurationBuilder", "superclass": "", "interfaces": "implements ConfigurationBuilder", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(DefaultConfigurationBuilder.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(DefaultConfigurationBuilder.class.getName())", "var_name": "LOG"}, {"original_string": "protected ServiceContext serviceContext = ServiceContextManager.getServiceContext();", "modifier": "protected", "type": "ServiceContext", "declarator": "serviceContext = ServiceContextManager.getServiceContext()", "var_name": "serviceContext"}, {"original_string": "protected List<PropertyFilter> propertyFilters = new ArrayList<>();", "modifier": "protected", "type": "List<PropertyFilter>", "declarator": "propertyFilters = new ArrayList<>()", "var_name": "propertyFilters"}, {"original_string": "protected List<PropertySource> propertySources = new ArrayList<>();", "modifier": "protected", "type": "List<PropertySource>", "declarator": "propertySources = new ArrayList<>()", "var_name": "propertySources"}, {"original_string": "protected Map<TypeLiteral<?>, List<PropertyConverter<?>>> propertyConverters = new HashMap<>();", "modifier": "protected", "type": "Map<TypeLiteral<?>, List<PropertyConverter<?>>>", "declarator": "propertyConverters = new HashMap<>()", "var_name": "propertyConverters"}, {"original_string": "protected MetadataProvider metaDataProvider = serviceContext.create(MetadataProvider.class, DefaultMetaDataProvider::new);", "modifier": "protected", "type": "MetadataProvider", "declarator": "metaDataProvider = serviceContext.create(MetadataProvider.class, DefaultMetaDataProvider::new)", "var_name": "metaDataProvider"}, {"original_string": "protected boolean built;", "modifier": "protected", "type": "boolean", "declarator": "built", "var_name": "built"}], "methods": [{"identifier": "DefaultConfigurationBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultConfigurationBuilder()", "full_signature": "public  DefaultConfigurationBuilder()", "class_method_signature": "DefaultConfigurationBuilder.DefaultConfigurationBuilder()", "testcase": false, "constructor": true}, {"identifier": "DefaultConfigurationBuilder", "parameters": "(ConfigurationContext context)", "modifiers": "public", "return": "", "signature": " DefaultConfigurationBuilder(ConfigurationContext context)", "full_signature": "public  DefaultConfigurationBuilder(ConfigurationContext context)", "class_method_signature": "DefaultConfigurationBuilder.DefaultConfigurationBuilder(ConfigurationContext context)", "testcase": false, "constructor": true}, {"identifier": "DefaultConfigurationBuilder", "parameters": "(Configuration configuration)", "modifiers": "public", "return": "", "signature": " DefaultConfigurationBuilder(Configuration configuration)", "full_signature": "public  DefaultConfigurationBuilder(Configuration configuration)", "class_method_signature": "DefaultConfigurationBuilder.DefaultConfigurationBuilder(Configuration configuration)", "testcase": false, "constructor": true}, {"identifier": "setClassLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setClassLoader(ClassLoader classLoader)", "full_signature": "@Override public ConfigurationBuilder setClassLoader(ClassLoader classLoader)", "class_method_signature": "DefaultConfigurationBuilder.setClassLoader(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "@Override public ClassLoader getClassLoader()", "class_method_signature": "DefaultConfigurationBuilder.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "setServiceContext", "parameters": "(ServiceContext serviceContext)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setServiceContext(ServiceContext serviceContext)", "full_signature": "@Override public ConfigurationBuilder setServiceContext(ServiceContext serviceContext)", "class_method_signature": "DefaultConfigurationBuilder.setServiceContext(ServiceContext serviceContext)", "testcase": false, "constructor": false}, {"identifier": "setConfiguration", "parameters": "(Configuration configuration)", "modifiers": "public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setConfiguration(Configuration configuration)", "full_signature": "public ConfigurationBuilder setConfiguration(Configuration configuration)", "class_method_signature": "DefaultConfigurationBuilder.setConfiguration(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setContext(ConfigurationContext context)", "full_signature": "@Override public ConfigurationBuilder setContext(ConfigurationContext context)", "class_method_signature": "DefaultConfigurationBuilder.setContext(ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "setMeta", "parameters": "(String property, String key, String value)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setMeta(String property, String key, String value)", "full_signature": "@Override public ConfigurationBuilder setMeta(String property, String key, String value)", "class_method_signature": "DefaultConfigurationBuilder.setMeta(String property, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "setMeta", "parameters": "(String property, Map<String, String> metaData)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder setMeta(String property, Map<String, String> metaData)", "full_signature": "@Override public ConfigurationBuilder setMeta(String property, Map<String, String> metaData)", "class_method_signature": "DefaultConfigurationBuilder.setMeta(String property, Map<String, String> metaData)", "testcase": false, "constructor": false}, {"identifier": "addPropertySources", "parameters": "(Collection<PropertySource> sources)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addPropertySources(Collection<PropertySource> sources)", "full_signature": "@Override public ConfigurationBuilder addPropertySources(Collection<PropertySource> sources)", "class_method_signature": "DefaultConfigurationBuilder.addPropertySources(Collection<PropertySource> sources)", "testcase": false, "constructor": false}, {"identifier": "addDefaultPropertyFilters", "parameters": "()", "modifiers": "public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addDefaultPropertyFilters()", "full_signature": "public ConfigurationBuilder addDefaultPropertyFilters()", "class_method_signature": "DefaultConfigurationBuilder.addDefaultPropertyFilters()", "testcase": false, "constructor": false}, {"identifier": "addDefaultPropertySources", "parameters": "()", "modifiers": "public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addDefaultPropertySources()", "full_signature": "public ConfigurationBuilder addDefaultPropertySources()", "class_method_signature": "DefaultConfigurationBuilder.addDefaultPropertySources()", "testcase": false, "constructor": false}, {"identifier": "addDefaultPropertyConverters", "parameters": "()", "modifiers": "public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addDefaultPropertyConverters()", "full_signature": "public ConfigurationBuilder addDefaultPropertyConverters()", "class_method_signature": "DefaultConfigurationBuilder.addDefaultPropertyConverters()", "testcase": false, "constructor": false}, {"identifier": "removePropertySources", "parameters": "(Collection<PropertySource> propertySources)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder removePropertySources(Collection<PropertySource> propertySources)", "full_signature": "@Override public ConfigurationBuilder removePropertySources(Collection<PropertySource> propertySources)", "class_method_signature": "DefaultConfigurationBuilder.removePropertySources(Collection<PropertySource> propertySources)", "testcase": false, "constructor": false}, {"identifier": "getPropertySources", "parameters": "()", "modifiers": "@Override public", "return": "List<PropertySource>", "signature": "List<PropertySource> getPropertySources()", "full_signature": "@Override public List<PropertySource> getPropertySources()", "class_method_signature": "DefaultConfigurationBuilder.getPropertySources()", "testcase": false, "constructor": false}, {"identifier": "increasePriority", "parameters": "(PropertySource propertySource)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder increasePriority(PropertySource propertySource)", "full_signature": "@Override public ConfigurationBuilder increasePriority(PropertySource propertySource)", "class_method_signature": "DefaultConfigurationBuilder.increasePriority(PropertySource propertySource)", "testcase": false, "constructor": false}, {"identifier": "decreasePriority", "parameters": "(PropertySource propertySource)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder decreasePriority(PropertySource propertySource)", "full_signature": "@Override public ConfigurationBuilder decreasePriority(PropertySource propertySource)", "class_method_signature": "DefaultConfigurationBuilder.decreasePriority(PropertySource propertySource)", "testcase": false, "constructor": false}, {"identifier": "highestPriority", "parameters": "(PropertySource propertySource)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder highestPriority(PropertySource propertySource)", "full_signature": "@Override public ConfigurationBuilder highestPriority(PropertySource propertySource)", "class_method_signature": "DefaultConfigurationBuilder.highestPriority(PropertySource propertySource)", "testcase": false, "constructor": false}, {"identifier": "lowestPriority", "parameters": "(PropertySource propertySource)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder lowestPriority(PropertySource propertySource)", "full_signature": "@Override public ConfigurationBuilder lowestPriority(PropertySource propertySource)", "class_method_signature": "DefaultConfigurationBuilder.lowestPriority(PropertySource propertySource)", "testcase": false, "constructor": false}, {"identifier": "addPropertyFilters", "parameters": "(Collection<PropertyFilter> filters)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addPropertyFilters(Collection<PropertyFilter> filters)", "full_signature": "@Override public ConfigurationBuilder addPropertyFilters(Collection<PropertyFilter> filters)", "class_method_signature": "DefaultConfigurationBuilder.addPropertyFilters(Collection<PropertyFilter> filters)", "testcase": false, "constructor": false}, {"identifier": "removePropertyFilters", "parameters": "(Collection<PropertyFilter> filters)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder removePropertyFilters(Collection<PropertyFilter> filters)", "full_signature": "@Override public ConfigurationBuilder removePropertyFilters(Collection<PropertyFilter> filters)", "class_method_signature": "DefaultConfigurationBuilder.removePropertyFilters(Collection<PropertyFilter> filters)", "testcase": false, "constructor": false}, {"identifier": "removePropertyConverters", "parameters": "(TypeLiteral<T> typeToConvert,\n                                                                    Collection<PropertyConverter<T>> converters)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder removePropertyConverters(TypeLiteral<T> typeToConvert,\n                                                                    Collection<PropertyConverter<T>> converters)", "full_signature": "@Override public ConfigurationBuilder removePropertyConverters(TypeLiteral<T> typeToConvert,\n                                                                    Collection<PropertyConverter<T>> converters)", "class_method_signature": "DefaultConfigurationBuilder.removePropertyConverters(TypeLiteral<T> typeToConvert,\n                                                                    Collection<PropertyConverter<T>> converters)", "testcase": false, "constructor": false}, {"identifier": "removePropertyConverters", "parameters": "(TypeLiteral<?> typeToConvert)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder removePropertyConverters(TypeLiteral<?> typeToConvert)", "full_signature": "@Override public ConfigurationBuilder removePropertyConverters(TypeLiteral<?> typeToConvert)", "class_method_signature": "DefaultConfigurationBuilder.removePropertyConverters(TypeLiteral<?> typeToConvert)", "testcase": false, "constructor": false}, {"identifier": "addPropertyConverters", "parameters": "(TypeLiteral<T> type, Collection<PropertyConverter<T>> propertyConverters)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder addPropertyConverters(TypeLiteral<T> type, Collection<PropertyConverter<T>> propertyConverters)", "full_signature": "@Override public ConfigurationBuilder addPropertyConverters(TypeLiteral<T> type, Collection<PropertyConverter<T>> propertyConverters)", "class_method_signature": "DefaultConfigurationBuilder.addPropertyConverters(TypeLiteral<T> type, Collection<PropertyConverter<T>> propertyConverters)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration build()", "full_signature": "@Override public Configuration build()", "class_method_signature": "DefaultConfigurationBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "sortPropertyFilter", "parameters": "(Comparator<PropertyFilter> comparator)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder sortPropertyFilter(Comparator<PropertyFilter> comparator)", "full_signature": "@Override public ConfigurationBuilder sortPropertyFilter(Comparator<PropertyFilter> comparator)", "class_method_signature": "DefaultConfigurationBuilder.sortPropertyFilter(Comparator<PropertyFilter> comparator)", "testcase": false, "constructor": false}, {"identifier": "sortPropertySources", "parameters": "(Comparator<PropertySource> comparator)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder sortPropertySources(Comparator<PropertySource> comparator)", "full_signature": "@Override public ConfigurationBuilder sortPropertySources(Comparator<PropertySource> comparator)", "class_method_signature": "DefaultConfigurationBuilder.sortPropertySources(Comparator<PropertySource> comparator)", "testcase": false, "constructor": false}, {"identifier": "sortPropertyConverter", "parameters": "(Comparator<PropertyConverter> comparator)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder sortPropertyConverter(Comparator<PropertyConverter> comparator)", "full_signature": "@Override public ConfigurationBuilder sortPropertyConverter(Comparator<PropertyConverter> comparator)", "class_method_signature": "DefaultConfigurationBuilder.sortPropertyConverter(Comparator<PropertyConverter> comparator)", "testcase": false, "constructor": false}, {"identifier": "getPropertyFilters", "parameters": "()", "modifiers": "@Override public", "return": "List<PropertyFilter>", "signature": "List<PropertyFilter> getPropertyFilters()", "full_signature": "@Override public List<PropertyFilter> getPropertyFilters()", "class_method_signature": "DefaultConfigurationBuilder.getPropertyFilters()", "testcase": false, "constructor": false}, {"identifier": "getPropertyConverter", "parameters": "()", "modifiers": "@Override public", "return": "Map<TypeLiteral<?>, List<PropertyConverter<?>>>", "signature": "Map<TypeLiteral<?>, List<PropertyConverter<?>>> getPropertyConverter()", "full_signature": "@Override public Map<TypeLiteral<?>, List<PropertyConverter<?>>> getPropertyConverter()", "class_method_signature": "DefaultConfigurationBuilder.getPropertyConverter()", "testcase": false, "constructor": false}, {"identifier": "loadDefaults", "parameters": "()", "modifiers": "protected", "return": "ConfigurationBuilder", "signature": "ConfigurationBuilder loadDefaults()", "full_signature": "protected ConfigurationBuilder loadDefaults()", "class_method_signature": "DefaultConfigurationBuilder.loadDefaults()", "testcase": false, "constructor": false}, {"identifier": "getDefaultPropertyConverters", "parameters": "()", "modifiers": "protected", "return": "Map<TypeLiteral, Collection<PropertyConverter>>", "signature": "Map<TypeLiteral, Collection<PropertyConverter>> getDefaultPropertyConverters()", "full_signature": "protected Map<TypeLiteral, Collection<PropertyConverter>> getDefaultPropertyConverters()", "class_method_signature": "DefaultConfigurationBuilder.getDefaultPropertyConverters()", "testcase": false, "constructor": false}, {"identifier": "addCorePropertyResources", "parameters": "(List<PropertySource> propertySources)", "modifiers": "protected", "return": "void", "signature": "void addCorePropertyResources(List<PropertySource> propertySources)", "full_signature": "protected void addCorePropertyResources(List<PropertySource> propertySources)", "class_method_signature": "DefaultConfigurationBuilder.addCorePropertyResources(List<PropertySource> propertySources)", "testcase": false, "constructor": false}, {"identifier": "addCorePropertyConverters", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "void", "signature": "void addCorePropertyConverters()", "full_signature": "@SuppressWarnings(\"unchecked\") protected void addCorePropertyConverters()", "class_method_signature": "DefaultConfigurationBuilder.addCorePropertyConverters()", "testcase": false, "constructor": false}, {"identifier": "getPropertySource", "parameters": "(String name)", "modifiers": "protected", "return": "PropertySource", "signature": "PropertySource getPropertySource(String name)", "full_signature": "protected PropertySource getPropertySource(String name)", "class_method_signature": "DefaultConfigurationBuilder.getPropertySource(String name)", "testcase": false, "constructor": false}, {"identifier": "checkBuilderState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkBuilderState()", "full_signature": "private void checkBuilderState()", "class_method_signature": "DefaultConfigurationBuilder.checkBuilderState()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfigurationBuilder.java"}, "focal_method": {"identifier": "highestPriority", "parameters": "(PropertySource propertySource)", "modifiers": "@Override public", "return": "ConfigurationBuilder", "body": "@Override\n    public ConfigurationBuilder highestPriority(PropertySource propertySource) {\n        checkBuilderState();\n        int index = propertySources.indexOf(propertySource);\n        if(index<0){\n            throw new IllegalArgumentException(\"No such PropertySource: \" + propertySource);\n        }\n        if(index<(propertySources.size()-1)){\n            propertySources.remove(propertySource);\n            propertySources.add(propertySource);\n        }\n        return this;\n    }", "signature": "ConfigurationBuilder highestPriority(PropertySource propertySource)", "full_signature": "@Override public ConfigurationBuilder highestPriority(PropertySource propertySource)", "class_method_signature": "DefaultConfigurationBuilder.highestPriority(PropertySource propertySource)", "testcase": false, "constructor": false, "invocations": ["checkBuilderState", "indexOf", "size", "remove", "add"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}