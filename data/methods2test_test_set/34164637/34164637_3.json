{"test_class": {"identifier": "MainTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(MainTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(MainTest.class)", "var_name": "LOG"}], "file": "deployment/src/test/java/com/mapcode/services/cli/MainTest.java"}, "test_case": {"identifier": "testMainFails", "parameters": "()", "modifiers": "@SuppressWarnings(\"ProhibitedExceptionDeclared\") @Test(expected = IllegalStateException.class) public", "return": "void", "body": "@SuppressWarnings(\"ProhibitedExceptionDeclared\")\n    @Test(expected = IllegalStateException.class)\n    public void testMainFails() throws Exception {\n        LOG.info(\"testMainFails\");\n\n        // This will fail, as it needs to run from a WAR file and we can't do that here.\n        // Arguments: [--port <port>] [--silent] [--debug] [--help]\n        Main.main(\"--port\", \"8080\", \"--debug\");\n    }", "signature": "void testMainFails()", "full_signature": "@SuppressWarnings(\"ProhibitedExceptionDeclared\") @Test(expected = IllegalStateException.class) public void testMainFails()", "class_method_signature": "MainTest.testMainFails()", "testcase": true, "constructor": false, "invocations": ["info", "main"]}, "focal_class": {"identifier": "Main", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MAIN_CLASS_NAME = \"com.mapcode.services.standalone.MainCommandLine\";", "modifier": "private static final", "type": "String", "declarator": "MAIN_CLASS_NAME = \"com.mapcode.services.standalone.MainCommandLine\"", "var_name": "MAIN_CLASS_NAME"}, {"original_string": "private static final String MAIN_METHOD_NAME = \"execute\";", "modifier": "private static final", "type": "String", "declarator": "MAIN_METHOD_NAME = \"execute\"", "var_name": "MAIN_METHOD_NAME"}], "methods": [{"identifier": "Main", "parameters": "()", "modifiers": "private", "return": "", "signature": " Main()", "full_signature": "private  Main()", "class_method_signature": "Main.Main()", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(@Nonnull final String... args)", "modifiers": "public static", "return": "void", "signature": "void main(@Nonnull final String... args)", "full_signature": "public static void main(@Nonnull final String... args)", "class_method_signature": "Main.main(@Nonnull final String... args)", "testcase": false, "constructor": false}, {"identifier": "getWarFile", "parameters": "()", "modifiers": "@Nonnull private static", "return": "String", "signature": "String getWarFile()", "full_signature": "@Nonnull private static String getWarFile()", "class_method_signature": "Main.getWarFile()", "testcase": false, "constructor": false}], "file": "deployment/src/main/java/com/mapcode/services/cli/Main.java"}, "focal_method": {"identifier": "Main", "parameters": "()", "modifiers": "private", "return": "", "body": "private Main() {\n        // Prevent instantiation.\n    }", "signature": " Main()", "full_signature": "private  Main()", "class_method_signature": "Main.Main()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 34164637, "url": "https://github.com/mapcode-foundation/mapcode-rest-service", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 1181, "license": "licensed"}}