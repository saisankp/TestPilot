{"test_class": {"identifier": "NullTerminatingSpoutTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/util/NullTerminatingSpoutTest.java"}, "test_case": {"identifier": "testReachedEnd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReachedEnd() {\n\t\tNullTerminatingSpout finiteSpout = new NullTerminatingSpout(new TestDummySpout());\n\t\tfiniteSpout.open(null, null, mock(SpoutOutputCollector.class));\n\n\t\tAssert.assertFalse(finiteSpout.reachedEnd());\n\n\t\tfiniteSpout.nextTuple();\n\t\tAssert.assertFalse(finiteSpout.reachedEnd());\n\t\tfiniteSpout.nextTuple();\n\t\tAssert.assertTrue(finiteSpout.reachedEnd());\n\t}", "signature": "void testReachedEnd()", "full_signature": "@Test public void testReachedEnd()", "class_method_signature": "NullTerminatingSpoutTest.testReachedEnd()", "testcase": true, "constructor": false, "invocations": ["open", "mock", "assertFalse", "reachedEnd", "nextTuple", "assertFalse", "reachedEnd", "nextTuple", "assertTrue", "reachedEnd"]}, "focal_class": {"identifier": "NullTerminatingSpout", "superclass": "", "interfaces": "implements FiniteSpout", "fields": [{"original_string": "private static final long serialVersionUID = -6976210409932076066L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6976210409932076066L", "var_name": "serialVersionUID"}, {"original_string": "private final IRichSpout spout;", "modifier": "private final", "type": "IRichSpout", "declarator": "spout", "var_name": "spout"}, {"original_string": "private SpoutOutputCollectorObserver observer;", "modifier": "private", "type": "SpoutOutputCollectorObserver", "declarator": "observer", "var_name": "observer"}], "methods": [{"identifier": "NullTerminatingSpout", "parameters": "(IRichSpout spout)", "modifiers": "public", "return": "", "signature": " NullTerminatingSpout(IRichSpout spout)", "full_signature": "public  NullTerminatingSpout(IRichSpout spout)", "class_method_signature": "NullTerminatingSpout.NullTerminatingSpout(IRichSpout spout)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "(@SuppressWarnings(\"rawtypes\") Map conf, TopologyContext context, SpoutOutputCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void open(@SuppressWarnings(\"rawtypes\") Map conf, TopologyContext context, SpoutOutputCollector collector)", "full_signature": "@Override public void open(@SuppressWarnings(\"rawtypes\") Map conf, TopologyContext context, SpoutOutputCollector collector)", "class_method_signature": "NullTerminatingSpout.open(@SuppressWarnings(\"rawtypes\") Map conf, TopologyContext context, SpoutOutputCollector collector)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "NullTerminatingSpout.close()", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void activate()", "full_signature": "@Override public void activate()", "class_method_signature": "NullTerminatingSpout.activate()", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deactivate()", "full_signature": "@Override public void deactivate()", "class_method_signature": "NullTerminatingSpout.deactivate()", "testcase": false, "constructor": false}, {"identifier": "nextTuple", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void nextTuple()", "full_signature": "@Override public void nextTuple()", "class_method_signature": "NullTerminatingSpout.nextTuple()", "testcase": false, "constructor": false}, {"identifier": "ack", "parameters": "(Object msgId)", "modifiers": "@Override public", "return": "void", "signature": "void ack(Object msgId)", "full_signature": "@Override public void ack(Object msgId)", "class_method_signature": "NullTerminatingSpout.ack(Object msgId)", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(Object msgId)", "modifiers": "@Override public", "return": "void", "signature": "void fail(Object msgId)", "full_signature": "@Override public void fail(Object msgId)", "class_method_signature": "NullTerminatingSpout.fail(Object msgId)", "testcase": false, "constructor": false}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "NullTerminatingSpout.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false}, {"identifier": "getComponentConfiguration", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getComponentConfiguration()", "full_signature": "@Override public Map<String, Object> getComponentConfiguration()", "class_method_signature": "NullTerminatingSpout.getComponentConfiguration()", "testcase": false, "constructor": false}, {"identifier": "reachedEnd", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reachedEnd()", "full_signature": "@Override public boolean reachedEnd()", "class_method_signature": "NullTerminatingSpout.reachedEnd()", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/util/NullTerminatingSpout.java"}, "focal_method": {"identifier": "reachedEnd", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean reachedEnd() {\n\t\treturn this.observer.emitted == false;\n\t}", "signature": "boolean reachedEnd()", "full_signature": "@Override public boolean reachedEnd()", "class_method_signature": "NullTerminatingSpout.reachedEnd()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}