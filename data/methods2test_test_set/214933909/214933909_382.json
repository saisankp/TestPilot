{"test_class": {"identifier": "DatabaseSetDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    DatabaseSetDao databaseSetDao;", "modifier": "@Autowired", "type": "DatabaseSetDao", "declarator": "databaseSetDao", "var_name": "databaseSetDao"}, {"original_string": "DatabaseSet databaseset;", "modifier": "", "type": "DatabaseSet", "declarator": "databaseset", "var_name": "databaseset"}, {"original_string": "DatabaseSetEntry databasesetentry;", "modifier": "", "type": "DatabaseSetEntry", "declarator": "databasesetentry", "var_name": "databasesetentry"}, {"original_string": "DatabaseSet databaseSetModel;", "modifier": "", "type": "DatabaseSet", "declarator": "databaseSetModel", "var_name": "databaseSetModel"}, {"original_string": "Paging<DatabaseSet> paging;", "modifier": "", "type": "Paging<DatabaseSet>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/DatabaseSetDaoTest.java"}, "test_case": {"identifier": "updateDatabaseSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateDatabaseSet() throws Exception {\n        databaseset.setId(235L);\n        databaseset.setClassName(\"DatabaseSetDaoTest\");\n        int count = databaseSetDao.updateDatabaseSet(databaseset);\n        System.out.println(\"updateDatabaseSet :-------> \" + count);\n        Assert.assertTrue(count > 0);\n    }", "signature": "void updateDatabaseSet()", "full_signature": "@Test public void updateDatabaseSet()", "class_method_signature": "DatabaseSetDaoTest.updateDatabaseSet()", "testcase": true, "constructor": false, "invocations": ["setId", "setClassName", "updateDatabaseSet", "println", "assertTrue"]}, "focal_class": {"identifier": "DatabaseSetDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertDatabaseSet", "parameters": "(DatabaseSet dbset)", "modifiers": "public", "return": "Long", "signature": "Long insertDatabaseSet(DatabaseSet dbset)", "full_signature": "public Long insertDatabaseSet(DatabaseSet dbset)", "class_method_signature": "DatabaseSetDao.insertDatabaseSet(DatabaseSet dbset)", "testcase": false, "constructor": false}, {"identifier": "updateDatabaseSet", "parameters": "(DatabaseSet dbset)", "modifiers": "public", "return": "int", "signature": "int updateDatabaseSet(DatabaseSet dbset)", "full_signature": "public int updateDatabaseSet(DatabaseSet dbset)", "class_method_signature": "DatabaseSetDao.updateDatabaseSet(DatabaseSet dbset)", "testcase": false, "constructor": false}, {"identifier": "deleteDatabaseSetById", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "int", "signature": "int deleteDatabaseSetById(Long dbsetId)", "full_signature": "public int deleteDatabaseSetById(Long dbsetId)", "class_method_signature": "DatabaseSetDao.deleteDatabaseSetById(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "deleteDatabaseSetEntryByDbsetId", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "int", "signature": "int deleteDatabaseSetEntryByDbsetId(Long dbsetId)", "full_signature": "public int deleteDatabaseSetEntryByDbsetId(Long dbsetId)", "class_method_signature": "DatabaseSetDao.deleteDatabaseSetEntryByDbsetId(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "getDatabaseSetById", "parameters": "(Long id)", "modifiers": "public", "return": "DatabaseSet", "signature": "DatabaseSet getDatabaseSetById(Long id)", "full_signature": "public DatabaseSet getDatabaseSetById(Long id)", "class_method_signature": "DatabaseSetDao.getDatabaseSetById(Long id)", "testcase": false, "constructor": false}, {"identifier": "getDatabaseSetByName", "parameters": "(String name)", "modifiers": "public", "return": "DatabaseSet", "signature": "DatabaseSet getDatabaseSetByName(String name)", "full_signature": "public DatabaseSet getDatabaseSetByName(String name)", "class_method_signature": "DatabaseSetDao.getDatabaseSetByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getAllDatabaseSetByName", "parameters": "(String name)", "modifiers": "public", "return": "List<DatabaseSet>", "signature": "List<DatabaseSet> getAllDatabaseSetByName(String name)", "full_signature": "public List<DatabaseSet> getAllDatabaseSetByName(String name)", "class_method_signature": "DatabaseSetDao.getAllDatabaseSetByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getAllDatabaseSetByNames", "parameters": "(List<String> names)", "modifiers": "public", "return": "List<DatabaseSet>", "signature": "List<DatabaseSet> getAllDatabaseSetByNames(List<String> names)", "full_signature": "public List<DatabaseSet> getAllDatabaseSetByNames(List<String> names)", "class_method_signature": "DatabaseSetDao.getAllDatabaseSetByNames(List<String> names)", "testcase": false, "constructor": false}, {"identifier": "getAllDatabaseSetById", "parameters": "(Long id)", "modifiers": "public", "return": "List<DatabaseSet>", "signature": "List<DatabaseSet> getAllDatabaseSetById(Long id)", "full_signature": "public List<DatabaseSet> getAllDatabaseSetById(Long id)", "class_method_signature": "DatabaseSetDao.getAllDatabaseSetById(Long id)", "testcase": false, "constructor": false}, {"identifier": "getAllDatabaseSetByProjectId", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<DatabaseSetView>", "signature": "List<DatabaseSetView> getAllDatabaseSetByProjectId(Long projectId)", "full_signature": "public List<DatabaseSetView> getAllDatabaseSetByProjectId(Long projectId)", "class_method_signature": "DatabaseSetDao.getAllDatabaseSetByProjectId(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "getAllDatabaseSetByGroupId", "parameters": "(Long groupId)", "modifiers": "public", "return": "List<DatabaseSet>", "signature": "List<DatabaseSet> getAllDatabaseSetByGroupId(Long groupId)", "full_signature": "public List<DatabaseSet> getAllDatabaseSetByGroupId(Long groupId)", "class_method_signature": "DatabaseSetDao.getAllDatabaseSetByGroupId(Long groupId)", "testcase": false, "constructor": false}, {"identifier": "getMasterDatabaseSetEntryByDatabaseSetId", "parameters": "(Long dbset_id)", "modifiers": "public", "return": "DatabaseSetEntry", "signature": "DatabaseSetEntry getMasterDatabaseSetEntryByDatabaseSetId(Long dbset_id)", "full_signature": "public DatabaseSetEntry getMasterDatabaseSetEntryByDatabaseSetId(Long dbset_id)", "class_method_signature": "DatabaseSetDao.getMasterDatabaseSetEntryByDatabaseSetId(Long dbset_id)", "testcase": false, "constructor": false}, {"identifier": "getDbSetTotalCount", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "public", "return": "Long", "signature": "Long getDbSetTotalCount(Paging<DatabaseSet> paging)", "full_signature": "public Long getDbSetTotalCount(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.getDbSetTotalCount(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}, {"identifier": "findDbSetPageList", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "public", "return": "List<DatabaseSetView>", "signature": "List<DatabaseSetView> findDbSetPageList(Paging<DatabaseSet> paging)", "full_signature": "public List<DatabaseSetView> findDbSetPageList(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.findDbSetPageList(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<DatabaseSet> paging)", "full_signature": "private String appenWhere(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.appenWhere(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<DatabaseSet> paging)", "full_signature": "private String appenCondition(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.appenCondition(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}, {"identifier": "getDbSetTotalCountByAppid", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "public", "return": "Long", "signature": "Long getDbSetTotalCountByAppid(Paging<DatabaseSet> paging)", "full_signature": "public Long getDbSetTotalCountByAppid(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.getDbSetTotalCountByAppid(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}, {"identifier": "findDbSetPageListByAppid", "parameters": "(Paging<DatabaseSet> paging)", "modifiers": "public", "return": "List<DatabaseSetView>", "signature": "List<DatabaseSetView> findDbSetPageListByAppid(Paging<DatabaseSet> paging)", "full_signature": "public List<DatabaseSetView> findDbSetPageListByAppid(Paging<DatabaseSet> paging)", "class_method_signature": "DatabaseSetDao.findDbSetPageListByAppid(Paging<DatabaseSet> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/DatabaseSetDao.java"}, "focal_method": {"identifier": "updateDatabaseSet", "parameters": "(DatabaseSet dbset)", "modifiers": "public", "return": "int", "body": "public int updateDatabaseSet(DatabaseSet dbset) throws SQLException {\n        if (null == dbset || dbset.getId() == null) {\n            return 0;\n        }\n        return this.getDasClient().update(dbset);\n    }", "signature": "int updateDatabaseSet(DatabaseSet dbset)", "full_signature": "public int updateDatabaseSet(DatabaseSet dbset)", "class_method_signature": "DatabaseSetDao.updateDatabaseSet(DatabaseSet dbset)", "testcase": false, "constructor": false, "invocations": ["getId", "update", "getDasClient"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}