{"test_class": {"identifier": "PackageHeaderLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ArrayList<JarInputStream> jarInputStreams;", "modifier": "private", "type": "ArrayList<JarInputStream>", "declarator": "jarInputStreams", "var_name": "jarInputStreams"}], "file": "drools-verifier/drools-verifier-drl/src/test/java/org/drools/verifier/jarloader/PackageHeaderLoaderTest.java"}, "test_case": {"identifier": "testListAddressAndPetImport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListAddressAndPetImport() throws Exception {\n\n        PackageHeaderLoader packageHeaderLoader = getPackageHeaderLoader(\"org.test.Rambo\", \"org.test.Pet\");\n\n        Collection<String> classNames = packageHeaderLoader.getClassNames();\n\n        assertEquals(2, classNames.size());\n        assertTrue(classNames.contains(\"org.test.Rambo\"));\n        assertTrue(classNames.contains(\"org.test.Pet\"));\n    }", "signature": "void testListAddressAndPetImport()", "full_signature": "@Test public void testListAddressAndPetImport()", "class_method_signature": "PackageHeaderLoaderTest.testListAddressAndPetImport()", "testcase": true, "constructor": false, "invocations": ["getPackageHeaderLoader", "getClassNames", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "PackageHeaderLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Collection<String> IGNORED_FIELDS = getIgnoredFields();", "modifier": "private final static", "type": "Collection<String>", "declarator": "IGNORED_FIELDS = getIgnoredFields()", "var_name": "IGNORED_FIELDS"}, {"original_string": "private Set<String> classNames = new HashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "classNames = new HashSet<String>()", "var_name": "classNames"}, {"original_string": "private Map<String, String> fieldTypesByClassAndFieldNames = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "fieldTypesByClassAndFieldNames = new HashMap<String, String>()", "var_name": "fieldTypesByClassAndFieldNames"}, {"original_string": "private TreeMultimap<String, String> fieldsByClassNames = TreeMultimap.create();", "modifier": "private", "type": "TreeMultimap<String, String>", "declarator": "fieldsByClassNames = TreeMultimap.create()", "var_name": "fieldsByClassNames"}, {"original_string": "private List<String> missingClasses = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "missingClasses = new ArrayList<String>()", "var_name": "missingClasses"}], "methods": [{"identifier": "PackageHeaderLoader", "parameters": "(Collection<String> imports, List<JarInputStream> jarInputStreams)", "modifiers": "public", "return": "", "signature": " PackageHeaderLoader(Collection<String> imports, List<JarInputStream> jarInputStreams)", "full_signature": "public  PackageHeaderLoader(Collection<String> imports, List<JarInputStream> jarInputStreams)", "class_method_signature": "PackageHeaderLoader.PackageHeaderLoader(Collection<String> imports, List<JarInputStream> jarInputStreams)", "testcase": false, "constructor": true}, {"identifier": "findImportsFromJars", "parameters": "(Collection<String> imports, List<JarInputStream> jarInputStreams)", "modifiers": "private", "return": "void", "signature": "void findImportsFromJars(Collection<String> imports, List<JarInputStream> jarInputStreams)", "full_signature": "private void findImportsFromJars(Collection<String> imports, List<JarInputStream> jarInputStreams)", "class_method_signature": "PackageHeaderLoader.findImportsFromJars(Collection<String> imports, List<JarInputStream> jarInputStreams)", "testcase": false, "constructor": false}, {"identifier": "addFields", "parameters": "(Class clazz)", "modifiers": "private", "return": "void", "signature": "void addFields(Class clazz)", "full_signature": "private void addFields(Class clazz)", "class_method_signature": "PackageHeaderLoader.addFields(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "addThisField", "parameters": "(String className)", "modifiers": "private", "return": "void", "signature": "void addThisField(String className)", "full_signature": "private void addThisField(String className)", "class_method_signature": "PackageHeaderLoader.addThisField(String className)", "testcase": false, "constructor": false}, {"identifier": "getClassNames", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getClassNames()", "full_signature": "public Collection<String> getClassNames()", "class_method_signature": "PackageHeaderLoader.getClassNames()", "testcase": false, "constructor": false}, {"identifier": "getFieldNames", "parameters": "(String className)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getFieldNames(String className)", "full_signature": "public Collection<String> getFieldNames(String className)", "class_method_signature": "PackageHeaderLoader.getFieldNames(String className)", "testcase": false, "constructor": false}, {"identifier": "getFieldType", "parameters": "(String className, String fieldName)", "modifiers": "public", "return": "String", "signature": "String getFieldType(String className, String fieldName)", "full_signature": "public String getFieldType(String className, String fieldName)", "class_method_signature": "PackageHeaderLoader.getFieldType(String className, String fieldName)", "testcase": false, "constructor": false}, {"identifier": "getMissingClasses", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getMissingClasses()", "full_signature": "public Collection<String> getMissingClasses()", "class_method_signature": "PackageHeaderLoader.getMissingClasses()", "testcase": false, "constructor": false}, {"identifier": "getIgnoredFields", "parameters": "()", "modifiers": "private static", "return": "Collection<String>", "signature": "Collection<String> getIgnoredFields()", "full_signature": "private static Collection<String> getIgnoredFields()", "class_method_signature": "PackageHeaderLoader.getIgnoredFields()", "testcase": false, "constructor": false}], "file": "drools-verifier/drools-verifier-drl/src/main/java/org/drools/verifier/jarloader/PackageHeaderLoader.java"}, "focal_method": {"identifier": "getClassNames", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "body": "public Collection<String> getClassNames() {\n        return classNames;\n    }", "signature": "Collection<String> getClassNames()", "full_signature": "public Collection<String> getClassNames()", "class_method_signature": "PackageHeaderLoader.getClassNames()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}