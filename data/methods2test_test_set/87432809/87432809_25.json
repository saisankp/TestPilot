{"test_class": {"identifier": "ForceDriverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ForceDriver driver;", "modifier": "private", "type": "ForceDriver", "declarator": "driver", "var_name": "driver"}], "file": "sf-jdbc-driver/src/test/java/com/ascendix/jdbc/salesforce/ForceDriverTest.java"}, "test_case": {"identifier": "testGetConnStringProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConnStringProperties() throws IOException {\n        Properties actuals = driver.getConnStringProperties(\"jdbc:ascendix:salesforce://prop1=val1;prop2=val2\");\n\n        assertEquals(2, actuals.size());\n        assertEquals(\"val1\", actuals.getProperty(\"prop1\"));\n        assertEquals(\"val2\", actuals.getProperty(\"prop2\"));\n    }", "signature": "void testGetConnStringProperties()", "full_signature": "@Test public void testGetConnStringProperties()", "class_method_signature": "ForceDriverTest.testGetConnStringProperties()", "testcase": true, "constructor": false, "invocations": ["getConnStringProperties", "assertEquals", "size", "assertEquals", "getProperty", "assertEquals", "getProperty"]}, "focal_class": {"identifier": "ForceDriver", "superclass": "", "interfaces": "implements Driver", "fields": [{"original_string": "private static final String ACCEPTABLE_URL = \"jdbc:ascendix:salesforce\";", "modifier": "private static final", "type": "String", "declarator": "ACCEPTABLE_URL = \"jdbc:ascendix:salesforce\"", "var_name": "ACCEPTABLE_URL"}, {"original_string": "private static final Pattern URL_PATTERN = Pattern.compile(\"\\\\A\" + ACCEPTABLE_URL + \"://(.*)\");", "modifier": "private static final", "type": "Pattern", "declarator": "URL_PATTERN = Pattern.compile(\"\\\\A\" + ACCEPTABLE_URL + \"://(.*)\")", "var_name": "URL_PATTERN"}, {"original_string": "private static final Pattern URL_HAS_AUTHORIZATION_SEGMENT = Pattern.compile(\"\\\\A\" + ACCEPTABLE_URL + \"://([^:]+):([^@]+)@.*\");", "modifier": "private static final", "type": "Pattern", "declarator": "URL_HAS_AUTHORIZATION_SEGMENT = Pattern.compile(\"\\\\A\" + ACCEPTABLE_URL + \"://([^:]+):([^@]+)@.*\")", "var_name": "URL_HAS_AUTHORIZATION_SEGMENT"}], "methods": [{"identifier": "connect", "parameters": "(String url, Properties properties)", "modifiers": "@Override public", "return": "Connection", "signature": "Connection connect(String url, Properties properties)", "full_signature": "@Override public Connection connect(String url, Properties properties)", "class_method_signature": "ForceDriver.connect(String url, Properties properties)", "testcase": false, "constructor": false}, {"identifier": "resolveSandboxProperty", "parameters": "(Properties properties)", "modifiers": "private static", "return": "Boolean", "signature": "Boolean resolveSandboxProperty(Properties properties)", "full_signature": "private static Boolean resolveSandboxProperty(Properties properties)", "class_method_signature": "ForceDriver.resolveSandboxProperty(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getConnStringProperties", "parameters": "(String url)", "modifiers": "protected", "return": "Properties", "signature": "Properties getConnStringProperties(String url)", "full_signature": "protected Properties getConnStringProperties(String url)", "class_method_signature": "ForceDriver.getConnStringProperties(String url)", "testcase": false, "constructor": false}, {"identifier": "acceptsURL", "parameters": "(String url)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsURL(String url)", "full_signature": "@Override public boolean acceptsURL(String url)", "class_method_signature": "ForceDriver.acceptsURL(String url)", "testcase": false, "constructor": false}, {"identifier": "getPropertyInfo", "parameters": "(String url, Properties info)", "modifiers": "@Override public", "return": "DriverPropertyInfo[]", "signature": "DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "full_signature": "@Override public DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "class_method_signature": "ForceDriver.getPropertyInfo(String url, Properties info)", "testcase": false, "constructor": false}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMajorVersion()", "full_signature": "@Override public int getMajorVersion()", "class_method_signature": "ForceDriver.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinorVersion()", "full_signature": "@Override public int getMinorVersion()", "class_method_signature": "ForceDriver.getMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "jdbcCompliant", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean jdbcCompliant()", "full_signature": "@Override public boolean jdbcCompliant()", "class_method_signature": "ForceDriver.jdbcCompliant()", "testcase": false, "constructor": false}, {"identifier": "getParentLogger", "parameters": "()", "modifiers": "@Override public", "return": "Logger", "signature": "Logger getParentLogger()", "full_signature": "@Override public Logger getParentLogger()", "class_method_signature": "ForceDriver.getParentLogger()", "testcase": false, "constructor": false}], "file": "sf-jdbc-driver/src/main/java/com/ascendix/jdbc/salesforce/ForceDriver.java"}, "focal_method": {"identifier": "getConnStringProperties", "parameters": "(String url)", "modifiers": "protected", "return": "Properties", "body": "protected Properties getConnStringProperties(String url) throws IOException {\n        Properties result = new Properties();\n        String urlProperties = null;\n\n        Matcher stdMatcher = URL_PATTERN.matcher(url);\n        Matcher authMatcher = URL_HAS_AUTHORIZATION_SEGMENT.matcher(url);\n        \n        if (authMatcher.matches()) {\n            urlProperties = \"user=\" + authMatcher.group(1) + \"\\npassword=\" + authMatcher.group(2);\n        } else if (stdMatcher.matches()) {\n            urlProperties = stdMatcher.group(1);\n            urlProperties = urlProperties.replaceAll(\";\", \"\\n\");\n        }\n\n        if (urlProperties != null) {\n            try (InputStream in = new ByteArrayInputStream(urlProperties.getBytes(StandardCharsets.UTF_8))) {\n                result.load(in);\n            }\n        }\n\n        return result;\n    }", "signature": "Properties getConnStringProperties(String url)", "full_signature": "protected Properties getConnStringProperties(String url)", "class_method_signature": "ForceDriver.getConnStringProperties(String url)", "testcase": false, "constructor": false, "invocations": ["matcher", "matcher", "matches", "group", "group", "matches", "group", "replaceAll", "getBytes", "load"]}, "repository": {"repo_id": 87432809, "url": "https://github.com/ascendix/salesforce-jdbc", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 19, "size": 41622, "license": "licensed"}}