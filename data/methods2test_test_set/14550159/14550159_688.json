{"test_class": {"identifier": "CookieParameterResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Cookie cookie1 = new Cookie(\"cookie1\", \"value1\");", "modifier": "private final", "type": "Cookie", "declarator": "cookie1 = new Cookie(\"cookie1\", \"value1\")", "var_name": "cookie1"}, {"original_string": "private final Cookie cookie2 = new Cookie(\"cookie2\", \"value2\");", "modifier": "private final", "type": "Cookie", "declarator": "cookie2 = new Cookie(\"cookie2\", \"value2\")", "var_name": "cookie2"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private CookieParam        cookieParam;", "modifier": "private", "type": "CookieParam", "declarator": "cookieParam", "var_name": "cookieParam"}, {"original_string": "private Parameter          parameter;", "modifier": "private", "type": "Parameter", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private TypeProducer       typeProducer;", "modifier": "private", "type": "TypeProducer", "declarator": "typeProducer", "var_name": "typeProducer"}, {"original_string": "private CookieParameterResolver cookieParameterResolver;", "modifier": "private", "type": "CookieParameterResolver", "declarator": "cookieParameterResolver", "var_name": "cookieParameterResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/CookieParameterResolverTest.java"}, "test_case": {"identifier": "createsCookieFromDefaultValueWhenCookieNotFoundInRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createsCookieFromDefaultValueWhenCookieNotFoundInRequest() throws Exception {\n        when(cookieParam.value()).thenReturn(\"no cookie\");\n        when(parameter.getParameterClass()).thenReturn((Class)Cookie.class);\n        when(parameter.getDefaultValue()).thenReturn(\"default_cookie=xxx\");\n\n        Cookie resolvedCookie = (Cookie)cookieParameterResolver.resolve(parameter, applicationContext);\n\n        assertEquals(\"default_cookie\", resolvedCookie.getName());\n        assertEquals(\"xxx\", resolvedCookie.getValue());\n    }", "signature": "void createsCookieFromDefaultValueWhenCookieNotFoundInRequest()", "full_signature": "@Test public void createsCookieFromDefaultValueWhenCookieNotFoundInRequest()", "class_method_signature": "CookieParameterResolverTest.createsCookieFromDefaultValueWhenCookieNotFoundInRequest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "value", "thenReturn", "when", "getParameterClass", "thenReturn", "when", "getDefaultValue", "resolve", "assertEquals", "getName", "assertEquals", "getValue"]}, "focal_class": {"identifier": "CookieParameterResolver", "superclass": "", "interfaces": "implements ParameterResolver<CookieParam>", "fields": [{"original_string": "private final CookieParam         cookieParam;", "modifier": "private final", "type": "CookieParam", "declarator": "cookieParam", "var_name": "cookieParam"}, {"original_string": "private final TypeProducerFactory typeProducerFactory;", "modifier": "private final", "type": "TypeProducerFactory", "declarator": "typeProducerFactory", "var_name": "typeProducerFactory"}], "methods": [{"identifier": "CookieParameterResolver", "parameters": "(CookieParam cookieParam, TypeProducerFactory typeProducerFactory)", "modifiers": "", "return": "", "signature": " CookieParameterResolver(CookieParam cookieParam, TypeProducerFactory typeProducerFactory)", "full_signature": "  CookieParameterResolver(CookieParam cookieParam, TypeProducerFactory typeProducerFactory)", "class_method_signature": "CookieParameterResolver.CookieParameterResolver(CookieParam cookieParam, TypeProducerFactory typeProducerFactory)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "CookieParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/CookieParameterResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context) throws Exception {\n        String param = cookieParam.value();\n        if (Cookie.class.isAssignableFrom(parameter.getParameterClass())) {\n            Cookie cookie = context.getHttpHeaders().getCookies().get(param);\n            if (cookie == null && parameter.getDefaultValue() != null) {\n                cookie = Cookie.valueOf(parameter.getDefaultValue());\n            }\n            return cookie;\n        } else {\n            TypeProducer typeProducer = typeProducerFactory.createTypeProducer(parameter.getParameterClass(), parameter.getGenericType());\n            MultivaluedMap<String, String> cookieValues = new MultivaluedMapImpl();\n            for (Map.Entry<String, Cookie> entry : context.getHttpHeaders().getCookies().entrySet()) {\n                cookieValues.putSingle(entry.getKey(), entry.getValue().getValue());\n            }\n            return typeProducer.createValue(param, cookieValues, parameter.getDefaultValue());\n        }\n    }", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "CookieParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["value", "isAssignableFrom", "getParameterClass", "get", "getCookies", "getHttpHeaders", "getDefaultValue", "valueOf", "getDefaultValue", "createTypeProducer", "getParameterClass", "getGenericType", "entrySet", "getCookies", "getHttpHeaders", "putSingle", "getKey", "getValue", "getValue", "createValue", "getDefaultValue"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}