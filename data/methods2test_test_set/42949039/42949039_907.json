{"test_class": {"identifier": "DataBridgeWebClientTest", "superclass": "extends AbstractDataBridgeTest", "interfaces": "", "fields": [{"original_string": "private DataBridgeWebClient dataBridgeWebClient;", "modifier": "private", "type": "DataBridgeWebClient", "declarator": "dataBridgeWebClient", "var_name": "dataBridgeWebClient"}, {"original_string": "@Autowired\n    private HerdStringHelper herdStringHelper;", "modifier": "@Autowired\n    private", "type": "HerdStringHelper", "declarator": "herdStringHelper", "var_name": "herdStringHelper"}, {"original_string": "@Autowired\n    private HttpClientHelper httpClientHelper;", "modifier": "@Autowired\n    private", "type": "HttpClientHelper", "declarator": "httpClientHelper", "var_name": "httpClientHelper"}, {"original_string": "@Autowired\n    private HttpClientOperations httpClientOperations;", "modifier": "@Autowired\n    private", "type": "HttpClientOperations", "declarator": "httpClientOperations", "var_name": "httpClientOperations"}, {"original_string": "@Autowired\n    private XmlHelper xmlHelper;", "modifier": "@Autowired\n    private", "type": "XmlHelper", "declarator": "xmlHelper", "var_name": "xmlHelper"}], "file": "herd-code/herd-tools/herd-tools-common/src/test/java/org/finra/herd/tools/common/databridge/DataBridgeWebClientTest.java"}, "test_case": {"identifier": "testPreRegisterBusinessObjectData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPreRegisterBusinessObjectData() throws Exception\n    {\n        HashMap<String, String> attributes = new HashMap<>();\n        attributes.put(\"testAttributeName\", \"testAttributeValue\");\n        testPreRegisterBusinessObjectData(attributes, false);\n    }", "signature": "void testPreRegisterBusinessObjectData()", "full_signature": "@Test public void testPreRegisterBusinessObjectData()", "class_method_signature": "DataBridgeWebClientTest.testPreRegisterBusinessObjectData()", "testcase": true, "constructor": false, "invocations": ["put", "testPreRegisterBusinessObjectData"]}, "focal_class": {"identifier": "DataBridgeWebClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final String DEFAULT_ACCEPT = ContentType.APPLICATION_XML.withCharset(StandardCharsets.UTF_8).toString();", "modifier": "protected static final", "type": "String", "declarator": "DEFAULT_ACCEPT = ContentType.APPLICATION_XML.withCharset(StandardCharsets.UTF_8).toString()", "var_name": "DEFAULT_ACCEPT"}, {"original_string": "protected static final String DEFAULT_CONTENT_TYPE = ContentType.APPLICATION_XML.withCharset(StandardCharsets.UTF_8).toString();", "modifier": "protected static final", "type": "String", "declarator": "DEFAULT_CONTENT_TYPE = ContentType.APPLICATION_XML.withCharset(StandardCharsets.UTF_8).toString()", "var_name": "DEFAULT_CONTENT_TYPE"}, {"original_string": "protected static final String HERD_APP_REST_URI_PREFIX = \"/herd-app/rest\";", "modifier": "protected static final", "type": "String", "declarator": "HERD_APP_REST_URI_PREFIX = \"/herd-app/rest\"", "var_name": "HERD_APP_REST_URI_PREFIX"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DataBridgeWebClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DataBridgeWebClient.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    protected HerdStringHelper herdStringHelper;", "modifier": "@Autowired\n    protected", "type": "HerdStringHelper", "declarator": "herdStringHelper", "var_name": "herdStringHelper"}, {"original_string": "@Autowired\n    protected HttpClientHelper httpClientHelper;", "modifier": "@Autowired\n    protected", "type": "HttpClientHelper", "declarator": "httpClientHelper", "var_name": "httpClientHelper"}, {"original_string": "@Autowired\n    protected HttpClientOperations httpClientOperations;", "modifier": "@Autowired\n    protected", "type": "HttpClientOperations", "declarator": "httpClientOperations", "var_name": "httpClientOperations"}, {"original_string": "protected RegServerAccessParamsDto regServerAccessParamsDto;", "modifier": "protected", "type": "RegServerAccessParamsDto", "declarator": "regServerAccessParamsDto", "var_name": "regServerAccessParamsDto"}], "methods": [{"identifier": "addStorageFiles", "parameters": "(BusinessObjectDataKey businessObjectDataKey, UploaderInputManifestDto manifest,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto, String storageName)", "modifiers": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public", "return": "BusinessObjectDataStorageFilesCreateResponse", "signature": "BusinessObjectDataStorageFilesCreateResponse addStorageFiles(BusinessObjectDataKey businessObjectDataKey, UploaderInputManifestDto manifest,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto, String storageName)", "full_signature": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public BusinessObjectDataStorageFilesCreateResponse addStorageFiles(BusinessObjectDataKey businessObjectDataKey, UploaderInputManifestDto manifest,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto, String storageName)", "class_method_signature": "DataBridgeWebClient.addStorageFiles(BusinessObjectDataKey businessObjectDataKey, UploaderInputManifestDto manifest,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto, String storageName)", "testcase": false, "constructor": false}, {"identifier": "getRegServerAccessParamsDto", "parameters": "()", "modifiers": "public", "return": "RegServerAccessParamsDto", "signature": "RegServerAccessParamsDto getRegServerAccessParamsDto()", "full_signature": "public RegServerAccessParamsDto getRegServerAccessParamsDto()", "class_method_signature": "DataBridgeWebClient.getRegServerAccessParamsDto()", "testcase": false, "constructor": false}, {"identifier": "setRegServerAccessParamsDto", "parameters": "(RegServerAccessParamsDto regServerAccessParamsDto)", "modifiers": "public", "return": "void", "signature": "void setRegServerAccessParamsDto(RegServerAccessParamsDto regServerAccessParamsDto)", "full_signature": "public void setRegServerAccessParamsDto(RegServerAccessParamsDto regServerAccessParamsDto)", "class_method_signature": "DataBridgeWebClient.setRegServerAccessParamsDto(RegServerAccessParamsDto regServerAccessParamsDto)", "testcase": false, "constructor": false}, {"identifier": "getStorage", "parameters": "(String storageName)", "modifiers": "public", "return": "Storage", "signature": "Storage getStorage(String storageName)", "full_signature": "public Storage getStorage(String storageName)", "class_method_signature": "DataBridgeWebClient.getStorage(String storageName)", "testcase": false, "constructor": false}, {"identifier": "preRegisterBusinessObjectData", "parameters": "(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "modifiers": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public", "return": "BusinessObjectData", "signature": "BusinessObjectData preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "full_signature": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public BusinessObjectData preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "class_method_signature": "DataBridgeWebClient.preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "testcase": false, "constructor": false}, {"identifier": "updateBusinessObjectDataStatus", "parameters": "(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "modifiers": "public", "return": "BusinessObjectDataStatusUpdateResponse", "signature": "BusinessObjectDataStatusUpdateResponse updateBusinessObjectDataStatus(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "full_signature": "public BusinessObjectDataStatusUpdateResponse updateBusinessObjectDataStatus(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "class_method_signature": "DataBridgeWebClient.updateBusinessObjectDataStatus(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationHeader", "parameters": "()", "modifiers": "protected", "return": "BasicHeader", "signature": "BasicHeader getAuthorizationHeader()", "full_signature": "protected BasicHeader getAuthorizationHeader()", "class_method_signature": "DataBridgeWebClient.getAuthorizationHeader()", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectData", "parameters": "(CloseableHttpResponse httpResponse, String actionDescription)", "modifiers": "protected", "return": "BusinessObjectData", "signature": "BusinessObjectData getBusinessObjectData(CloseableHttpResponse httpResponse, String actionDescription)", "full_signature": "protected BusinessObjectData getBusinessObjectData(CloseableHttpResponse httpResponse, String actionDescription)", "class_method_signature": "DataBridgeWebClient.getBusinessObjectData(CloseableHttpResponse httpResponse, String actionDescription)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataStorageFilesCreateResponse", "parameters": "(CloseableHttpResponse httpResponse)", "modifiers": "protected", "return": "BusinessObjectDataStorageFilesCreateResponse", "signature": "BusinessObjectDataStorageFilesCreateResponse getBusinessObjectDataStorageFilesCreateResponse(CloseableHttpResponse httpResponse)", "full_signature": "protected BusinessObjectDataStorageFilesCreateResponse getBusinessObjectDataStorageFilesCreateResponse(CloseableHttpResponse httpResponse)", "class_method_signature": "DataBridgeWebClient.getBusinessObjectDataStorageFilesCreateResponse(CloseableHttpResponse httpResponse)", "testcase": false, "constructor": false}, {"identifier": "getS3KeyPrefix", "parameters": "(DataBridgeBaseManifestDto manifest, Integer businessObjectDataVersion, Boolean createNewVersion)", "modifiers": "protected", "return": "S3KeyPrefixInformation", "signature": "S3KeyPrefixInformation getS3KeyPrefix(DataBridgeBaseManifestDto manifest, Integer businessObjectDataVersion, Boolean createNewVersion)", "full_signature": "protected S3KeyPrefixInformation getS3KeyPrefix(DataBridgeBaseManifestDto manifest, Integer businessObjectDataVersion, Boolean createNewVersion)", "class_method_signature": "DataBridgeWebClient.getS3KeyPrefix(DataBridgeBaseManifestDto manifest, Integer businessObjectDataVersion, Boolean createNewVersion)", "testcase": false, "constructor": false}, {"identifier": "getUriScheme", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getUriScheme()", "full_signature": "protected String getUriScheme()", "class_method_signature": "DataBridgeWebClient.getUriScheme()", "testcase": false, "constructor": false}, {"identifier": "processXmlHttpResponse", "parameters": "(CloseableHttpResponse response, String actionDescription, Class<?>... responseClass)", "modifiers": "protected", "return": "Object", "signature": "Object processXmlHttpResponse(CloseableHttpResponse response, String actionDescription, Class<?>... responseClass)", "full_signature": "protected Object processXmlHttpResponse(CloseableHttpResponse response, String actionDescription, Class<?>... responseClass)", "class_method_signature": "DataBridgeWebClient.processXmlHttpResponse(CloseableHttpResponse response, String actionDescription, Class<?>... responseClass)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataStatusUpdateResponse", "parameters": "(CloseableHttpResponse response)", "modifiers": "private", "return": "BusinessObjectDataStatusUpdateResponse", "signature": "BusinessObjectDataStatusUpdateResponse getBusinessObjectDataStatusUpdateResponse(CloseableHttpResponse response)", "full_signature": "private BusinessObjectDataStatusUpdateResponse getBusinessObjectDataStatusUpdateResponse(CloseableHttpResponse response)", "class_method_signature": "DataBridgeWebClient.getBusinessObjectDataStatusUpdateResponse(CloseableHttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "getS3KeyPrefixInformation", "parameters": "(CloseableHttpResponse httpResponse)", "modifiers": "private", "return": "S3KeyPrefixInformation", "signature": "S3KeyPrefixInformation getS3KeyPrefixInformation(CloseableHttpResponse httpResponse)", "full_signature": "private S3KeyPrefixInformation getS3KeyPrefixInformation(CloseableHttpResponse httpResponse)", "class_method_signature": "DataBridgeWebClient.getS3KeyPrefixInformation(CloseableHttpResponse httpResponse)", "testcase": false, "constructor": false}, {"identifier": "getStorage", "parameters": "(CloseableHttpResponse httpResponse)", "modifiers": "private", "return": "Storage", "signature": "Storage getStorage(CloseableHttpResponse httpResponse)", "full_signature": "private Storage getStorage(CloseableHttpResponse httpResponse)", "class_method_signature": "DataBridgeWebClient.getStorage(CloseableHttpResponse httpResponse)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-tools-common/src/main/java/org/finra/herd/tools/common/databridge/DataBridgeWebClient.java"}, "focal_method": {"identifier": "preRegisterBusinessObjectData", "parameters": "(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "modifiers": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public", "return": "BusinessObjectData", "body": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\")\n    public BusinessObjectData preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)\n        throws IOException, JAXBException, URISyntaxException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException\n    {\n        LOGGER.info(\"Pre-registering business object data with the registration server...\");\n\n        BusinessObjectDataCreateRequest request = new BusinessObjectDataCreateRequest();\n        request.setNamespace(manifest.getNamespace());\n        request.setBusinessObjectDefinitionName(manifest.getBusinessObjectDefinitionName());\n        request.setBusinessObjectFormatUsage(manifest.getBusinessObjectFormatUsage());\n        request.setBusinessObjectFormatFileType(manifest.getBusinessObjectFormatFileType());\n        request.setBusinessObjectFormatVersion(Integer.parseInt(manifest.getBusinessObjectFormatVersion()));\n        request.setPartitionKey(manifest.getPartitionKey());\n        request.setPartitionValue(manifest.getPartitionValue());\n        request.setSubPartitionValues(manifest.getSubPartitionValues());\n        request.setCreateNewVersion(createNewVersion);\n        request.setStatus(BusinessObjectDataStatusEntity.UPLOADING);\n\n        List<StorageUnitCreateRequest> storageUnits = new ArrayList<>();\n        request.setStorageUnits(storageUnits);\n        StorageUnitCreateRequest storageUnit = new StorageUnitCreateRequest();\n        storageUnits.add(storageUnit);\n        storageUnit.setStorageName(storageName);\n\n        // Add business object data attributes, if any.\n        if (manifest.getAttributes() != null)\n        {\n            List<Attribute> attributes = new ArrayList<>();\n            request.setAttributes(attributes);\n\n            for (Map.Entry<String, String> entry : manifest.getAttributes().entrySet())\n            {\n                Attribute attribute = new Attribute();\n                attributes.add(attribute);\n                attribute.setName(entry.getKey());\n                attribute.setValue(entry.getValue());\n            }\n        }\n\n        // Add business object data parents, if any.\n        request.setBusinessObjectDataParents(manifest.getBusinessObjectDataParents());\n\n        // Create a JAXB context and marshaller\n        JAXBContext requestContext = JAXBContext.newInstance(BusinessObjectDataCreateRequest.class);\n        Marshaller requestMarshaller = requestContext.createMarshaller();\n        requestMarshaller.setProperty(Marshaller.JAXB_ENCODING, StandardCharsets.UTF_8.name());\n        requestMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);\n\n        StringWriter sw = new StringWriter();\n        requestMarshaller.marshal(request, sw);\n\n        BusinessObjectData businessObjectData;\n        try (CloseableHttpClient client = httpClientHelper\n            .createHttpClient(regServerAccessParamsDto.isTrustSelfSignedCertificate(), regServerAccessParamsDto.isDisableHostnameVerification()))\n        {\n            URI uri = new URIBuilder().setScheme(getUriScheme()).setHost(regServerAccessParamsDto.getRegServerHost())\n                .setPort(regServerAccessParamsDto.getRegServerPort()).setPath(HERD_APP_REST_URI_PREFIX + \"/businessObjectData\").build();\n            HttpPost post = new HttpPost(uri);\n\n            post.addHeader(\"Content-Type\", DEFAULT_CONTENT_TYPE);\n            post.addHeader(\"Accepts\", DEFAULT_ACCEPT);\n\n            // If SSL is enabled, set the client authentication header.\n            if (regServerAccessParamsDto.isUseSsl())\n            {\n                post.addHeader(getAuthorizationHeader());\n            }\n\n            post.setEntity(new StringEntity(sw.toString()));\n\n            LOGGER.info(String.format(\"    HTTP POST URI: %s\", post.getURI().toString()));\n            LOGGER.info(String.format(\"    HTTP POST Entity Content:%n%s\", sw.toString()));\n\n            businessObjectData =\n                getBusinessObjectData(httpClientOperations.execute(client, post), \"register business object data with the registration server\");\n        }\n\n        LOGGER.info(String\n            .format(\"Successfully pre-registered business object data with the registration server. businessObjectDataId=%s\", businessObjectData.getId()));\n\n        return businessObjectData;\n    }", "signature": "BusinessObjectData preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "full_signature": "@SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") public BusinessObjectData preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "class_method_signature": "DataBridgeWebClient.preRegisterBusinessObjectData(UploaderInputManifestDto manifest, String storageName, Boolean createNewVersion)", "testcase": false, "constructor": false, "invocations": ["info", "setNamespace", "getNamespace", "setBusinessObjectDefinitionName", "getBusinessObjectDefinitionName", "setBusinessObjectFormatUsage", "getBusinessObjectFormatUsage", "setBusinessObjectFormatFileType", "getBusinessObjectFormatFileType", "setBusinessObjectFormatVersion", "parseInt", "getBusinessObjectFormatVersion", "setPartitionKey", "getPartitionKey", "setPartitionValue", "getPartitionValue", "setSubPartitionValues", "getSubPartitionValues", "setCreateNewVersion", "setStatus", "setStorageUnits", "add", "setStorageName", "getAttributes", "setAttributes", "entrySet", "getAttributes", "add", "setName", "getKey", "setValue", "getValue", "setBusinessObjectDataParents", "getBusinessObjectDataParents", "newInstance", "createMarshaller", "setProperty", "name", "setProperty", "marshal", "createHttpClient", "isTrustSelfSignedCertificate", "isDisableHostnameVerification", "build", "setPath", "setPort", "setHost", "setScheme", "getUriScheme", "getRegServerHost", "getRegServerPort", "addHeader", "addHeader", "isUseSsl", "addHeader", "getAuthorizationHeader", "setEntity", "toString", "info", "format", "toString", "getURI", "info", "format", "toString", "getBusinessObjectData", "execute", "info", "format", "getId"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}