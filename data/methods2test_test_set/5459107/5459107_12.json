{"test_class": {"identifier": "CascadingHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "cascading-helpers/src/test/java/com/squareup/cascading_helpers/CascadingHelperTest.java"}, "test_case": {"identifier": "testWithTokensFor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWithTokensFor() throws Exception {\n    Map<Object,Object> properties = CascadingHelper.get().withTokensFor(X.class, Y.class).getFlowConnector().getProperties();\n    String tokensString = (String) properties.get(\"cascading.serialization.tokens\");\n    assertTrue(tokensString.contains(X.class.getName()));\n    assertTrue(tokensString.contains(Y.class.getName()));\n\n    properties = CascadingHelper.get().withTokensFor(X.class, Y.class, Z.class).getFlowConnector().getProperties();\n    tokensString = (String) properties.get(\"cascading.serialization.tokens\");\n    assertTrue(tokensString.contains(X.class.getName()));\n    assertTrue(tokensString.contains(Y.class.getName()));\n    assertTrue(tokensString.contains(Z.class.getName()));\n  }", "signature": "void testWithTokensFor()", "full_signature": "@Test public void testWithTokensFor()", "class_method_signature": "CascadingHelperTest.testWithTokensFor()", "testcase": true, "constructor": false, "invocations": ["getProperties", "getFlowConnector", "withTokensFor", "get", "get", "assertTrue", "contains", "getName", "assertTrue", "contains", "getName", "getProperties", "getFlowConnector", "withTokensFor", "get", "get", "assertTrue", "contains", "getName", "assertTrue", "contains", "getName", "assertTrue", "contains", "getName"]}, "focal_class": {"identifier": "CascadingHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IO_SERIALIZATIONS = \"io.serializations\";", "modifier": "private static final", "type": "String", "declarator": "IO_SERIALIZATIONS = \"io.serializations\"", "var_name": "IO_SERIALIZATIONS"}, {"original_string": "private static boolean testMode = false;", "modifier": "private static", "type": "boolean", "declarator": "testMode = false", "var_name": "testMode"}, {"original_string": "protected static final Map<Object, Object> DEFAULT_PROPERTIES = new HashMap<Object, Object>();", "modifier": "protected static final", "type": "Map<Object, Object>", "declarator": "DEFAULT_PROPERTIES = new HashMap<Object, Object>()", "var_name": "DEFAULT_PROPERTIES"}, {"original_string": "@SuppressWarnings({\"unchecked\"})\n  protected static final List<Class<? extends Serialization>> SERIALIZATION_IMPLS =\n      new ArrayList<Class<? extends Serialization>>(Arrays.asList(\n              WritableSerialization.class,\n              TupleSerialization.class\n      ));", "modifier": "@SuppressWarnings({\"unchecked\"})\n  protected static final", "type": "List<Class<? extends Serialization>>", "declarator": "SERIALIZATION_IMPLS =\n      new ArrayList<Class<? extends Serialization>>(Arrays.asList(\n              WritableSerialization.class,\n              TupleSerialization.class\n      ))", "var_name": "SERIALIZATION_IMPLS"}, {"original_string": "private static final int STARTING_TOKEN = 128;", "modifier": "private static final", "type": "int", "declarator": "STARTING_TOKEN = 128", "var_name": "STARTING_TOKEN"}, {"original_string": "protected static final Set<Class> CLASSES_TO_BE_SERIALIZED = new HashSet<Class>();", "modifier": "protected static final", "type": "Set<Class>", "declarator": "CLASSES_TO_BE_SERIALIZED = new HashSet<Class>()", "var_name": "CLASSES_TO_BE_SERIALIZED"}, {"original_string": "private static final CascadingHelper THE_HELPER = new CascadingHelper();", "modifier": "private static final", "type": "CascadingHelper", "declarator": "THE_HELPER = new CascadingHelper()", "var_name": "THE_HELPER"}], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "@Deprecated public static", "return": "CascadingHelper", "signature": "CascadingHelper get()", "full_signature": "@Deprecated public static CascadingHelper get()", "class_method_signature": "CascadingHelper.get()", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "FlowBuilder", "signature": "FlowBuilder newBuilder()", "full_signature": "public static FlowBuilder newBuilder()", "class_method_signature": "CascadingHelper.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "setTestMode", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void setTestMode()", "full_signature": "public static void setTestMode()", "class_method_signature": "CascadingHelper.setTestMode()", "testcase": false, "constructor": false}, {"identifier": "mergeProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "private static", "return": "Map<Object, Object>", "signature": "Map<Object, Object> mergeProperties(Map<Object, Object> properties)", "full_signature": "private static Map<Object, Object> mergeProperties(Map<Object, Object> properties)", "class_method_signature": "CascadingHelper.mergeProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "assignSerializationTokens", "parameters": "(Map<Object, Object> props)", "modifiers": "private static", "return": "void", "signature": "void assignSerializationTokens(Map<Object, Object> props)", "full_signature": "private static void assignSerializationTokens(Map<Object, Object> props)", "class_method_signature": "CascadingHelper.assignSerializationTokens(Map<Object, Object> props)", "testcase": false, "constructor": false}, {"identifier": "addSerializations", "parameters": "(Map<Object, Object> props)", "modifiers": "private static", "return": "void", "signature": "void addSerializations(Map<Object, Object> props)", "full_signature": "private static void addSerializations(Map<Object, Object> props)", "class_method_signature": "CascadingHelper.addSerializations(Map<Object, Object> props)", "testcase": false, "constructor": false}, {"identifier": "CascadingHelper", "parameters": "()", "modifiers": "protected", "return": "", "signature": " CascadingHelper()", "full_signature": "protected  CascadingHelper()", "class_method_signature": "CascadingHelper.CascadingHelper()", "testcase": false, "constructor": true}, {"identifier": "getFlowConnector", "parameters": "()", "modifiers": "public", "return": "FlowConnector", "signature": "FlowConnector getFlowConnector()", "full_signature": "public FlowConnector getFlowConnector()", "class_method_signature": "CascadingHelper.getFlowConnector()", "testcase": false, "constructor": false}, {"identifier": "getFlowConnector", "parameters": "(Map<Object, Object> properties)", "modifiers": "public", "return": "FlowConnector", "signature": "FlowConnector getFlowConnector(Map<Object, Object> properties)", "full_signature": "public FlowConnector getFlowConnector(Map<Object, Object> properties)", "class_method_signature": "CascadingHelper.getFlowConnector(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "withTokensFor", "parameters": "(Class... emittedClasses)", "modifiers": "public", "return": "CascadingHelper", "signature": "CascadingHelper withTokensFor(Class... emittedClasses)", "full_signature": "public CascadingHelper withTokensFor(Class... emittedClasses)", "class_method_signature": "CascadingHelper.withTokensFor(Class... emittedClasses)", "testcase": false, "constructor": false}, {"identifier": "withTokensFor", "parameters": "(Set<Class> emittedClasses)", "modifiers": "public", "return": "CascadingHelper", "signature": "CascadingHelper withTokensFor(Set<Class> emittedClasses)", "full_signature": "public CascadingHelper withTokensFor(Set<Class> emittedClasses)", "class_method_signature": "CascadingHelper.withTokensFor(Set<Class> emittedClasses)", "testcase": false, "constructor": false}], "file": "cascading-helpers/src/main/java/com/squareup/cascading_helpers/CascadingHelper.java"}, "focal_method": {"identifier": "withTokensFor", "parameters": "(Class... emittedClasses)", "modifiers": "public", "return": "CascadingHelper", "body": "public CascadingHelper withTokensFor(Class... emittedClasses) {\n    Collections.addAll(CLASSES_TO_BE_SERIALIZED, emittedClasses);\n    return THE_HELPER;\n  }", "signature": "CascadingHelper withTokensFor(Class... emittedClasses)", "full_signature": "public CascadingHelper withTokensFor(Class... emittedClasses)", "class_method_signature": "CascadingHelper.withTokensFor(Class... emittedClasses)", "testcase": false, "constructor": false, "invocations": ["addAll"]}, "repository": {"repo_id": 5459107, "url": "https://github.com/square/cascading-helpers", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 54, "size": 1004, "license": "licensed"}}