{"test_class": {"identifier": "PolymerTest", "superclass": "extends AbstractPolymerTest", "interfaces": "", "fields": [], "file": "base/data/src/test/java/org/openscience/cdk/PolymerTest.java"}, "test_case": {"identifier": "testPolymer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPolymer() {\n        IPolymer oPolymer = new Polymer();\n        Assert.assertNotNull(oPolymer);\n        Assert.assertEquals(oPolymer.getMonomerCount(), 0);\n    }", "signature": "void testPolymer()", "full_signature": "@Test public void testPolymer()", "class_method_signature": "PolymerTest.testPolymer()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "getMonomerCount"]}, "focal_class": {"identifier": "Polymer", "superclass": "extends AtomContainer", "interfaces": "implements java.io.Serializable, IPolymer", "fields": [{"original_string": "private static final long     serialVersionUID = -2596790658835319339L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2596790658835319339L", "var_name": "serialVersionUID"}, {"original_string": "private Map<String, IMonomer> monomers;", "modifier": "private", "type": "Map<String, IMonomer>", "declarator": "monomers", "var_name": "monomers"}], "methods": [{"identifier": "Polymer", "parameters": "()", "modifiers": "public", "return": "", "signature": " Polymer()", "full_signature": "public  Polymer()", "class_method_signature": "Polymer.Polymer()", "testcase": false, "constructor": true}, {"identifier": "addAtom", "parameters": "(IAtom oAtom, IMonomer oMonomer)", "modifiers": "@Override public", "return": "void", "signature": "void addAtom(IAtom oAtom, IMonomer oMonomer)", "full_signature": "@Override public void addAtom(IAtom oAtom, IMonomer oMonomer)", "class_method_signature": "Polymer.addAtom(IAtom oAtom, IMonomer oMonomer)", "testcase": false, "constructor": false}, {"identifier": "getMonomerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMonomerCount()", "full_signature": "@Override public int getMonomerCount()", "class_method_signature": "Polymer.getMonomerCount()", "testcase": false, "constructor": false}, {"identifier": "getMonomer", "parameters": "(String cName)", "modifiers": "@Override public", "return": "IMonomer", "signature": "IMonomer getMonomer(String cName)", "full_signature": "@Override public IMonomer getMonomer(String cName)", "class_method_signature": "Polymer.getMonomer(String cName)", "testcase": false, "constructor": false}, {"identifier": "getMonomerNames", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getMonomerNames()", "full_signature": "@Override public Collection<String> getMonomerNames()", "class_method_signature": "Polymer.getMonomerNames()", "testcase": false, "constructor": false}, {"identifier": "removeMonomer", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeMonomer(String name)", "full_signature": "@Override public void removeMonomer(String name)", "class_method_signature": "Polymer.removeMonomer(String name)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Polymer.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IPolymer", "signature": "IPolymer clone()", "full_signature": "@Override public IPolymer clone()", "class_method_signature": "Polymer.clone()", "testcase": false, "constructor": false}, {"identifier": "atomIsInMonomer", "parameters": "(IAtom atom)", "modifiers": "private", "return": "boolean", "signature": "boolean atomIsInMonomer(IAtom atom)", "full_signature": "private boolean atomIsInMonomer(IAtom atom)", "class_method_signature": "Polymer.atomIsInMonomer(IAtom atom)", "testcase": false, "constructor": false}], "file": "base/data/src/main/java/org/openscience/cdk/Polymer.java"}, "focal_method": {"identifier": "Polymer", "parameters": "()", "modifiers": "public", "return": "", "body": "public Polymer() {\n        super();\n        monomers = new Hashtable<String, IMonomer>();\n    }", "signature": " Polymer()", "full_signature": "public  Polymer()", "class_method_signature": "Polymer.Polymer()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}