{"test_class": {"identifier": "OlciHarmonisationIOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Path installAuxdataPath;", "modifier": "private", "type": "Path", "declarator": "installAuxdataPath", "var_name": "installAuxdataPath"}], "file": "s3tbx-o2a-harmonisation/src/test/java/org/esa/s3tbx/olci/harmonisation/OlciHarmonisationIOTest.java"}, "test_case": {"identifier": "testInstallAuxdata", "parameters": "()", "modifiers": "@Test // @Ignore public", "return": "void", "body": "@Test\n//    @Ignore\n    public void testInstallAuxdata() throws Exception {\n        Path auxPath = OlciHarmonisationIO.installAuxdata();\n        assertNotNull(auxPath);\n\n    }", "signature": "void testInstallAuxdata()", "full_signature": "@Test // @Ignore public void testInstallAuxdata()", "class_method_signature": "OlciHarmonisationIOTest.testInstallAuxdata()", "testcase": true, "constructor": false, "invocations": ["installAuxdata", "assertNotNull"]}, "focal_class": {"identifier": "OlciHarmonisationIO", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "validateSourceProduct", "parameters": "(Product l1bProduct)", "modifiers": "static", "return": "void", "signature": "void validateSourceProduct(Product l1bProduct)", "full_signature": "static void validateSourceProduct(Product l1bProduct)", "class_method_signature": "OlciHarmonisationIO.validateSourceProduct(Product l1bProduct)", "testcase": false, "constructor": false}, {"identifier": "parseJSONDouble", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "double", "signature": "double parseJSONDouble(JSONObject jsonObject, String variableName)", "full_signature": "static double parseJSONDouble(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSONDouble(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "parseJSONInt", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "long", "signature": "long parseJSONInt(JSONObject jsonObject, String variableName)", "full_signature": "static long parseJSONInt(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSONInt(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "parseJSON1DimDoubleArray", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "double[]", "signature": "double[] parseJSON1DimDoubleArray(JSONObject jsonObject, String variableName)", "full_signature": "static double[] parseJSON1DimDoubleArray(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSON1DimDoubleArray(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "parseJSON1DimStringArray", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "String[]", "signature": "String[] parseJSON1DimStringArray(JSONObject jsonObject, String variableName)", "full_signature": "static String[] parseJSON1DimStringArray(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSON1DimStringArray(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "parseJSON2DimDoubleArray", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "double[][]", "signature": "double[][] parseJSON2DimDoubleArray(JSONObject jsonObject, String variableName)", "full_signature": "static double[][] parseJSON2DimDoubleArray(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSON2DimDoubleArray(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "parseJSON3DimDoubleArray", "parameters": "(JSONObject jsonObject, String variableName)", "modifiers": "static", "return": "double[][][]", "signature": "double[][][] parseJSON3DimDoubleArray(JSONObject jsonObject, String variableName)", "full_signature": "static double[][][] parseJSON3DimDoubleArray(JSONObject jsonObject, String variableName)", "class_method_signature": "OlciHarmonisationIO.parseJSON3DimDoubleArray(JSONObject jsonObject, String variableName)", "testcase": false, "constructor": false}, {"identifier": "createKDTreeForDesmileInterpolation", "parameters": "(DesmileLut desmileLut)", "modifiers": "static", "return": "KDTree<double[]>", "signature": "KDTree<double[]> createKDTreeForDesmileInterpolation(DesmileLut desmileLut)", "full_signature": "static KDTree<double[]> createKDTreeForDesmileInterpolation(DesmileLut desmileLut)", "class_method_signature": "OlciHarmonisationIO.createKDTreeForDesmileInterpolation(DesmileLut desmileLut)", "testcase": false, "constructor": false}, {"identifier": "createDesmileLut", "parameters": "(Path auxdataPath, int bandIndex)", "modifiers": "static", "return": "DesmileLut", "signature": "DesmileLut createDesmileLut(Path auxdataPath, int bandIndex)", "full_signature": "static DesmileLut createDesmileLut(Path auxdataPath, int bandIndex)", "class_method_signature": "OlciHarmonisationIO.createDesmileLut(Path auxdataPath, int bandIndex)", "testcase": false, "constructor": false}, {"identifier": "installAuxdata", "parameters": "()", "modifiers": "static", "return": "Path", "signature": "Path installAuxdata()", "full_signature": "static Path installAuxdata()", "class_method_signature": "OlciHarmonisationIO.installAuxdata()", "testcase": false, "constructor": false}], "file": "s3tbx-o2a-harmonisation/src/main/java/org/esa/s3tbx/olci/harmonisation/OlciHarmonisationIO.java"}, "focal_method": {"identifier": "installAuxdata", "parameters": "()", "modifiers": "static", "return": "Path", "body": "static Path installAuxdata() throws IOException {\n        Path auxdataDirectory = SystemUtils.getAuxDataPath().resolve(\"harmonisation\");\n        final Path sourceDirPath = ResourceInstaller.findModuleCodeBasePath(OlciO2aHarmonisationOp.class).resolve(\"auxdata/luts\");\n        final ResourceInstaller resourceInstaller = new ResourceInstaller(sourceDirPath, auxdataDirectory);\n        resourceInstaller.install(\".*\", ProgressMonitor.NULL);\n        return auxdataDirectory;\n    }", "signature": "Path installAuxdata()", "full_signature": "static Path installAuxdata()", "class_method_signature": "OlciHarmonisationIO.installAuxdata()", "testcase": false, "constructor": false, "invocations": ["resolve", "getAuxDataPath", "resolve", "findModuleCodeBasePath", "install"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}