{"test_class": {"identifier": "CoordinateEd448Test", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/ed448/CoordinateEd448Test.java"}, "test_case": {"identifier": "success_Negate_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_Negate_1() {\n        Coordinate coordinate1 = new CoordinateEd448(new BigInteger(\"224580040295924300187604334099896036246789641632564134246125461686950415467406032909029192869357953282578032075146446173674602635247710\"));\n        Coordinate coordinate2 = new CoordinateEd448(new BigInteger(\"298819210078481492676017930443930673437544040154080242095928241372331506189835876003536878655418784733982303233503462500531545062832660\"));\n        Coordinate coordinate3 = new CoordinateEd448(new BigInteger(\"298003876961198825125222761234081859084992957881800404715410981664051054548359616801422517316457383831336442629355891318031934187529830\"));\n\n        Coordinate negatedCoordinate1 = coordinate1.negate();\n        Coordinate negatedCoordinate2 = coordinate2.negate();\n        Coordinate negatedCoordinate3 = coordinate3.negate();\n\n        assertThat(negatedCoordinate1.getInteger(), is(new BigInteger(\"502258683999682590361719473788108498106851719054753926035364737493661912699324739777367190829318592647510852386697191187378895383117729\")));\n        assertThat(negatedCoordinate2.getInteger(), is(new BigInteger(\"428019514217125397873305877444073860916097320533237818185561957808280821976894896682859505043257761196106581228340174860521952955532779\")));\n        assertThat(negatedCoordinate3.getInteger(), is(new BigInteger(\"428834847334408065424101046653922675268648402805517655566079217516561273618371155884973866382219162098752441832487746043021563830835609\")));\n    }", "signature": "void success_Negate_1()", "full_signature": "@Test public void success_Negate_1()", "class_method_signature": "CoordinateEd448Test.success_Negate_1()", "testcase": true, "constructor": false, "invocations": ["negate", "negate", "negate", "assertThat", "getInteger", "is", "assertThat", "getInteger", "is", "assertThat", "getInteger", "is"]}, "focal_class": {"identifier": "CoordinateEd448", "superclass": "extends Coordinate", "interfaces": "", "fields": [{"original_string": "public static final CoordinateEd448 ZERO = new CoordinateEd448(BigInteger.ZERO);", "modifier": "public static final", "type": "CoordinateEd448", "declarator": "ZERO = new CoordinateEd448(BigInteger.ZERO)", "var_name": "ZERO"}, {"original_string": "public static final CoordinateEd448 ONE = new CoordinateEd448(BigInteger.ONE);", "modifier": "public static final", "type": "CoordinateEd448", "declarator": "ONE = new CoordinateEd448(BigInteger.ONE)", "var_name": "ONE"}, {"original_string": "private static final Curve curve = Curve448.getInstance();", "modifier": "private static final", "type": "Curve", "declarator": "curve = Curve448.getInstance()", "var_name": "curve"}], "methods": [{"identifier": "CoordinateEd448", "parameters": "(BigInteger integer)", "modifiers": "", "return": "", "signature": " CoordinateEd448(BigInteger integer)", "full_signature": "  CoordinateEd448(BigInteger integer)", "class_method_signature": "CoordinateEd448.CoordinateEd448(BigInteger integer)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Coordinate val)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate add(Coordinate val)", "full_signature": "@Override public Coordinate add(Coordinate val)", "class_method_signature": "CoordinateEd448.add(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "divide", "parameters": "(Coordinate val)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate divide(Coordinate val)", "full_signature": "@Override public Coordinate divide(Coordinate val)", "class_method_signature": "CoordinateEd448.divide(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(Coordinate val)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate multiply(Coordinate val)", "full_signature": "@Override public Coordinate multiply(Coordinate val)", "class_method_signature": "CoordinateEd448.multiply(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(Coordinate val)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate subtract(Coordinate val)", "full_signature": "@Override public Coordinate subtract(Coordinate val)", "class_method_signature": "CoordinateEd448.subtract(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "mod", "parameters": "()", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate mod()", "full_signature": "@Override public Coordinate mod()", "class_method_signature": "CoordinateEd448.mod()", "testcase": false, "constructor": false}, {"identifier": "inverse", "parameters": "()", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate inverse()", "full_signature": "@Override public Coordinate inverse()", "class_method_signature": "CoordinateEd448.inverse()", "testcase": false, "constructor": false}, {"identifier": "powerMod", "parameters": "(BigInteger exponent)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate powerMod(BigInteger exponent)", "full_signature": "@Override public Coordinate powerMod(BigInteger exponent)", "class_method_signature": "CoordinateEd448.powerMod(BigInteger exponent)", "testcase": false, "constructor": false}, {"identifier": "negate", "parameters": "()", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate negate()", "full_signature": "@Override public Coordinate negate()", "class_method_signature": "CoordinateEd448.negate()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "EncodedCoordinate", "signature": "EncodedCoordinate encode()", "full_signature": "@Override public EncodedCoordinate encode()", "class_method_signature": "CoordinateEd448.encode()", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/ed448/CoordinateEd448.java"}, "focal_method": {"identifier": "negate", "parameters": "()", "modifiers": "@Override public", "return": "Coordinate", "body": "@Override\n    public Coordinate negate() {\n        return new CoordinateEd448(value.negate()).mod();\n    }", "signature": "Coordinate negate()", "full_signature": "@Override public Coordinate negate()", "class_method_signature": "CoordinateEd448.negate()", "testcase": false, "constructor": false, "invocations": ["mod", "negate"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}