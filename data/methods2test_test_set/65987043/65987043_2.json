{"test_class": {"identifier": "DynamicTableNameInnerInterceptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "mybatis-plus-extension/src/test/java/com/baomidou/mybatisplus/extension/plugins/inner/DynamicTableNameInnerInterceptorTest.java"}, "test_case": {"identifier": "doIt", "parameters": "()", "modifiers": "@Test @SuppressWarnings({\"SqlDialectInspection\", \"SqlNoDataSourceInspection\"})", "return": "void", "body": "@Test\n    @SuppressWarnings({\"SqlDialectInspection\", \"SqlNoDataSourceInspection\"})\n    void doIt() {\n        DynamicTableNameInnerInterceptor interceptor = new DynamicTableNameInnerInterceptor();\n        interceptor.setTableNameHandlerMap(newTableNameHandlerMap());\n        // \u8868\u540d\u76f8\u4e92\u5305\u542b\n        @Language(\"SQL\")\n        String origin = \"SELECT * FROM t_user, t_user_role\", replaced = \"SELECT * FROM t_user_r, t_user_role\";\n        assertEquals(replaced, interceptor.changeTable(origin));\n        // \u8868\u540d\u5728\u672b\u5c3e\n        origin = \"SELECT * FROM t_user\";\n        replaced = \"SELECT * FROM t_user_r\";\n        assertEquals(replaced, interceptor.changeTable(origin));\n        // \u8868\u540d\u524d\u540e\u6709\u6ce8\u91ca\n        origin = \"SELECT * FROM /**/t_user/* t_user */\";\n        replaced = \"SELECT * FROM /**/t_user_r/* t_user */\";\n        assertEquals(replaced, interceptor.changeTable(origin));\n        // \u503c\u4e2d\u5e26\u6709\u8868\u540d\n        origin = \"SELECT * FROM t_user WHERE name = 't_user'\";\n        replaced = \"SELECT * FROM t_user_r WHERE name = 't_user'\";\n        assertEquals(replaced, interceptor.changeTable(origin));\n        // \u522b\u540d\u88ab\u58f0\u660e\u8981\u66ff\u6362\n        origin = \"SELECT t_user.* FROM t_user_real t_user\";\n        assertEquals(origin, interceptor.changeTable(origin));\n    }", "signature": "void doIt()", "full_signature": "@Test @SuppressWarnings({\"SqlDialectInspection\", \"SqlNoDataSourceInspection\"}) void doIt()", "class_method_signature": "DynamicTableNameInnerInterceptorTest.doIt()", "testcase": true, "constructor": false, "invocations": ["setTableNameHandlerMap", "newTableNameHandlerMap", "assertEquals", "changeTable", "assertEquals", "changeTable", "assertEquals", "changeTable", "assertEquals", "changeTable", "assertEquals", "changeTable"]}, "focal_class": {"identifier": "DynamicTableNameInnerInterceptor", "superclass": "", "interfaces": "implements InnerInterceptor", "fields": [{"original_string": "private Map<String, TableNameHandler> tableNameHandlerMap;", "modifier": "private", "type": "Map<String, TableNameHandler>", "declarator": "tableNameHandlerMap", "var_name": "tableNameHandlerMap"}], "methods": [{"identifier": "beforeQuery", "parameters": "(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)", "modifiers": "@Override public", "return": "void", "signature": "void beforeQuery(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)", "full_signature": "@Override public void beforeQuery(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)", "class_method_signature": "DynamicTableNameInnerInterceptor.beforeQuery(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)", "testcase": false, "constructor": false}, {"identifier": "beforePrepare", "parameters": "(StatementHandler sh, Connection connection, Integer transactionTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void beforePrepare(StatementHandler sh, Connection connection, Integer transactionTimeout)", "full_signature": "@Override public void beforePrepare(StatementHandler sh, Connection connection, Integer transactionTimeout)", "class_method_signature": "DynamicTableNameInnerInterceptor.beforePrepare(StatementHandler sh, Connection connection, Integer transactionTimeout)", "testcase": false, "constructor": false}, {"identifier": "changeTable", "parameters": "(String sql)", "modifiers": "protected", "return": "String", "signature": "String changeTable(String sql)", "full_signature": "protected String changeTable(String sql)", "class_method_signature": "DynamicTableNameInnerInterceptor.changeTable(String sql)", "testcase": false, "constructor": false}], "file": "mybatis-plus-extension/src/main/java/com/baomidou/mybatisplus/extension/plugins/inner/DynamicTableNameInnerInterceptor.java"}, "focal_method": {"identifier": "changeTable", "parameters": "(String sql)", "modifiers": "protected", "return": "String", "body": "protected String changeTable(String sql) {\n        TableNameParser parser = new TableNameParser(sql);\n        List<TableNameParser.SqlToken> names = new ArrayList<>();\n        parser.accept(names::add);\n        StringBuilder builder = new StringBuilder();\n        int last = 0;\n        for (TableNameParser.SqlToken name : names) {\n            int start = name.getStart();\n            if (start != last) {\n                builder.append(sql, last, start);\n                String value = name.getValue();\n                TableNameHandler handler = tableNameHandlerMap.get(value);\n                if (handler != null) {\n                    builder.append(handler.dynamicTableName(sql, value));\n                } else {\n                    builder.append(value);\n                }\n            }\n            last = name.getEnd();\n        }\n        if (last != sql.length()) {\n            builder.append(sql.substring(last));\n        }\n        return builder.toString();\n    }", "signature": "String changeTable(String sql)", "full_signature": "protected String changeTable(String sql)", "class_method_signature": "DynamicTableNameInnerInterceptor.changeTable(String sql)", "testcase": false, "constructor": false, "invocations": ["accept", "getStart", "append", "getValue", "get", "append", "dynamicTableName", "append", "getEnd", "length", "append", "substring", "toString"]}, "repository": {"repo_id": 65987043, "url": "https://github.com/baomidou/mybatis-plus", "stars": 7720, "created": "8/18/2016 10:06:53 AM +00:00", "updates": "2020-01-27T08:09:51+00:00", "fork": "False", "license": "licensed"}}