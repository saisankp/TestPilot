{"test_class": {"identifier": "XYZWriterTest", "superclass": "extends ChemObjectIOTest", "interfaces": "", "fields": [], "file": "storage/io/src/test/java/org/openscience/cdk/io/XYZWriterTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() throws Exception {\n        XYZWriter reader = new XYZWriter();\n        Assert.assertTrue(reader.accepts(AtomContainer.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "XYZWriterTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "XYZWriter", "superclass": "extends DefaultChemObjectWriter", "interfaces": "", "fields": [{"original_string": "private BufferedWriter      writer;", "modifier": "private", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(XYZWriter.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(XYZWriter.class)", "var_name": "logger"}, {"original_string": "private FormatStringBuffer  fsb;", "modifier": "private", "type": "FormatStringBuffer", "declarator": "fsb", "var_name": "fsb"}], "methods": [{"identifier": "XYZWriter", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " XYZWriter(Writer out)", "full_signature": "public  XYZWriter(Writer out)", "class_method_signature": "XYZWriter.XYZWriter(Writer out)", "testcase": false, "constructor": true}, {"identifier": "XYZWriter", "parameters": "(OutputStream output)", "modifiers": "public", "return": "", "signature": " XYZWriter(OutputStream output)", "full_signature": "public  XYZWriter(OutputStream output)", "class_method_signature": "XYZWriter.XYZWriter(OutputStream output)", "testcase": false, "constructor": true}, {"identifier": "XYZWriter", "parameters": "()", "modifiers": "public", "return": "", "signature": " XYZWriter()", "full_signature": "public  XYZWriter()", "class_method_signature": "XYZWriter.XYZWriter()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "XYZWriter.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(Writer out)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(Writer out)", "full_signature": "@Override public void setWriter(Writer out)", "class_method_signature": "XYZWriter.setWriter(Writer out)", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(OutputStream output)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(OutputStream output)", "full_signature": "@Override public void setWriter(OutputStream output)", "class_method_signature": "XYZWriter.setWriter(OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "XYZWriter.close()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "XYZWriter.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(IChemObject object)", "modifiers": "@Override public", "return": "void", "signature": "void write(IChemObject object)", "full_signature": "@Override public void write(IChemObject object)", "class_method_signature": "XYZWriter.write(IChemObject object)", "testcase": false, "constructor": false}, {"identifier": "writeMolecule", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "void", "signature": "void writeMolecule(IAtomContainer mol)", "full_signature": "public void writeMolecule(IAtomContainer mol)", "class_method_signature": "XYZWriter.writeMolecule(IAtomContainer mol)", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/XYZWriter.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        if (IAtomContainer.class.equals(classObject)) return true;\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (int i = 0; i < interfaces.length; i++) {\n            if (IAtomContainer.class.equals(interfaces[i])) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "XYZWriter.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["equals", "getInterfaces", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}