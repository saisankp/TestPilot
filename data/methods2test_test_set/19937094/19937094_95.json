{"test_class": {"identifier": "SSLContextFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "quickfixj-core/src/test/java/quickfix/mina/ssl/SSLContextFactoryTest.java"}, "test_case": {"identifier": "testGetInstanceWithBadCert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstanceWithBadCert() throws Exception {\n        SSLConfig sslConfig = new SSLConfig();\n        sslConfig.setKeyStoreName(\"FOO\");\n        sslConfig.setKeyStorePassword(\"BAR\".toCharArray());\n        sslConfig.setKeyStoreType(\"JKS\");\n        sslConfig.setKeyManagerFactoryAlgorithm(\"SunX509\");\n\n        SSLContextFactory.getInstance(sslConfig);\n    }", "signature": "void testGetInstanceWithBadCert()", "full_signature": "@Test public void testGetInstanceWithBadCert()", "class_method_signature": "SSLContextFactoryTest.testGetInstanceWithBadCert()", "testcase": true, "constructor": false, "invocations": ["setKeyStoreName", "setKeyStorePassword", "toCharArray", "setKeyStoreType", "setKeyManagerFactoryAlgorithm", "getInstance"]}, "focal_class": {"identifier": "SSLContextFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SSLContextFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SSLContextFactory.class)", "var_name": "log"}, {"original_string": "private static final String PROTOCOL = \"TLS\";", "modifier": "private static final", "type": "String", "declarator": "PROTOCOL = \"TLS\"", "var_name": "PROTOCOL"}, {"original_string": "private static final Map<SSLConfig, SSLContext> contextCache = new HashMap<>();", "modifier": "private static final", "type": "Map<SSLConfig, SSLContext>", "declarator": "contextCache = new HashMap<>()", "var_name": "contextCache"}], "methods": [{"identifier": "getInstance", "parameters": "(SSLConfig sslConfig)", "modifiers": "public static", "return": "SSLContext", "signature": "SSLContext getInstance(SSLConfig sslConfig)", "full_signature": "public static SSLContext getInstance(SSLConfig sslConfig)", "class_method_signature": "SSLContextFactory.getInstance(SSLConfig sslConfig)", "testcase": false, "constructor": false}, {"identifier": "createSSLContext", "parameters": "(SSLConfig sslConfig)", "modifiers": "private static", "return": "SSLContext", "signature": "SSLContext createSSLContext(SSLConfig sslConfig)", "full_signature": "private static SSLContext createSSLContext(SSLConfig sslConfig)", "class_method_signature": "SSLContextFactory.createSSLContext(SSLConfig sslConfig)", "testcase": false, "constructor": false}, {"identifier": "initializeKeyManager", "parameters": "(SSLConfig sslConfig)", "modifiers": "private static", "return": "KeyManagerFactory", "signature": "KeyManagerFactory initializeKeyManager(SSLConfig sslConfig)", "full_signature": "private static KeyManagerFactory initializeKeyManager(SSLConfig sslConfig)", "class_method_signature": "SSLContextFactory.initializeKeyManager(SSLConfig sslConfig)", "testcase": false, "constructor": false}, {"identifier": "initializeKeyStore", "parameters": "(String keyStoreName, char[] keyStorePassword, String keyStoreType)", "modifiers": "private static", "return": "KeyStore", "signature": "KeyStore initializeKeyStore(String keyStoreName, char[] keyStorePassword, String keyStoreType)", "full_signature": "private static KeyStore initializeKeyStore(String keyStoreName, char[] keyStorePassword, String keyStoreType)", "class_method_signature": "SSLContextFactory.initializeKeyStore(String keyStoreName, char[] keyStorePassword, String keyStoreType)", "testcase": false, "constructor": false}, {"identifier": "initializeTrustManager", "parameters": "(SSLConfig sslConfig)", "modifiers": "private static", "return": "TrustManagerFactory", "signature": "TrustManagerFactory initializeTrustManager(SSLConfig sslConfig)", "full_signature": "private static TrustManagerFactory initializeTrustManager(SSLConfig sslConfig)", "class_method_signature": "SSLContextFactory.initializeTrustManager(SSLConfig sslConfig)", "testcase": false, "constructor": false}, {"identifier": "initializeTrustStore", "parameters": "(String trustStoreName, char[] trustStorePassword,\n            String trustStoreType)", "modifiers": "private static", "return": "KeyStore", "signature": "KeyStore initializeTrustStore(String trustStoreName, char[] trustStorePassword,\n            String trustStoreType)", "full_signature": "private static KeyStore initializeTrustStore(String trustStoreName, char[] trustStorePassword,\n            String trustStoreType)", "class_method_signature": "SSLContextFactory.initializeTrustStore(String trustStoreName, char[] trustStorePassword,\n            String trustStoreType)", "testcase": false, "constructor": false}, {"identifier": "closeInputStream", "parameters": "(InputStream in)", "modifiers": "private static", "return": "void", "signature": "void closeInputStream(InputStream in)", "full_signature": "private static void closeInputStream(InputStream in)", "class_method_signature": "SSLContextFactory.closeInputStream(InputStream in)", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/mina/ssl/SSLContextFactory.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(SSLConfig sslConfig)", "modifiers": "public static", "return": "SSLContext", "body": "public static SSLContext getInstance(SSLConfig sslConfig)\n            throws GeneralSecurityException {\n        synchronized (contextCache) {\n            SSLContext context = contextCache.get(sslConfig);\n            if (context == null) {\n                try {\n                    context = createSSLContext(sslConfig);\n                    contextCache.put(sslConfig, context);\n                } catch (Exception ioe) {\n                    throw new GeneralSecurityException(\"Can't create SSLContext\", ioe);\n                }\n            }\n            return context;\n        }\n    }", "signature": "SSLContext getInstance(SSLConfig sslConfig)", "full_signature": "public static SSLContext getInstance(SSLConfig sslConfig)", "class_method_signature": "SSLContextFactory.getInstance(SSLConfig sslConfig)", "testcase": false, "constructor": false, "invocations": ["get", "createSSLContext", "put"]}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}