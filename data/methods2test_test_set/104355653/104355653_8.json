{"test_class": {"identifier": "AgentControllerTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "service/settlement-service/src/test/java/com/meiduimall/service/settlement/api/AgentControllerTest.java"}, "test_case": {"identifier": "testShareDeposit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShareDeposit() throws Exception {\n\t\tResultActions results = mockMvc.perform(MockMvcRequestBuilders\n\t\t\t\t.post(\"/settlementservice/agentservice/v1/sharedeposit\")\n\t\t\t\t.param(\"id\", \"115\").param(\"agentNo\", \"9999991112\").param(\"bindPhone\", \"13410899920\")\n\t\t\t\t.param(\"userName\", \"\u5927\u533a\u4e2a\u4ee3\u5c0f\u5929\u5929\").param(\"misUserId\", \"1gw_13410899920\").param(\"companyName\", \"\u7f8e\u5151o2o115\")\n\t\t\t\t.param(\"cashDeposit\", \"6500\").param(\"depositLeftAmount\", \"0\").param(\"recommenderCode\", \"999999\")\n\t\t\t\t.param(\"recommenderName\", \"\u5927\u533a\u8054\u7cfb\u4eba\").param(\"recommenderPhone\", \"18999999999\").param(\"recNo\", \"QTG999999161212001\")\n\t\t\t\t.param(\"recType\", \"1\").param(\"addAgentNo\", \"999999\").param(\"addBindPhone\", \"18999999999\")\n\t\t\t\t.param(\"addCompanyName\", \"\u5927\u533a\").param(\"addDepositLeftAmount\", \"300\"))\n\t\t\t\t.andExpect(status().isOk());\n\t\t\n\t\tresults.andDo(new ResultHandler() {\n\t\t\t@Override\n\t\t\tpublic void handle(MvcResult result) throws Exception {\n\t\t\t\tSystem.out.println(\"*********\" + result.getResponse().getContentAsString());\n\t\t\t}\n\t\t});\n\t}", "signature": "void testShareDeposit()", "full_signature": "@Test public void testShareDeposit()", "class_method_signature": "AgentControllerTest.testShareDeposit()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "m(\"ad", "param", "param", "param", "param", "No\", ", "ommen", "param", "param", "param", "param", "Name\"", "Id\", ", "param", "param", "param", "param", "post", "isOk", "status", "andDo", "println", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "AgentController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(AgentController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(AgentController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate DepositService depositService;", "modifier": "@Autowired\n\tprivate", "type": "DepositService", "declarator": "depositService", "var_name": "depositService"}, {"original_string": "@Autowired\n\tprivate AgentService agentService;", "modifier": "@Autowired\n\tprivate", "type": "AgentService", "declarator": "agentService", "var_name": "agentService"}], "methods": [{"identifier": "shareDeposit", "parameters": "(@Validated EcmAgent ecmAgent)", "modifiers": "@PostMapping(\"/sharedeposit\") public", "return": "ResBodyData", "signature": "ResBodyData shareDeposit(@Validated EcmAgent ecmAgent)", "full_signature": "@PostMapping(\"/sharedeposit\") public ResBodyData shareDeposit(@Validated EcmAgent ecmAgent)", "class_method_signature": "AgentController.shareDeposit(@Validated EcmAgent ecmAgent)", "testcase": false, "constructor": false}, {"identifier": "sendScore", "parameters": "(@Validated EcmStore ecmStore)", "modifiers": "@PostMapping(\"/sendscore\") public", "return": "ResBodyData", "signature": "ResBodyData sendScore(@Validated EcmStore ecmStore)", "full_signature": "@PostMapping(\"/sendscore\") public ResBodyData sendScore(@Validated EcmStore ecmStore)", "class_method_signature": "AgentController.sendScore(@Validated EcmStore ecmStore)", "testcase": false, "constructor": false}, {"identifier": "createAccoutBalance", "parameters": "(@Validated EcmMzfAccount ecmMzfAccount)", "modifiers": "@PostMapping(\"/createaccoutbalance\") public", "return": "ResBodyData", "signature": "ResBodyData createAccoutBalance(@Validated EcmMzfAccount ecmMzfAccount)", "full_signature": "@PostMapping(\"/createaccoutbalance\") public ResBodyData createAccoutBalance(@Validated EcmMzfAccount ecmMzfAccount)", "class_method_signature": "AgentController.createAccoutBalance(@Validated EcmMzfAccount ecmMzfAccount)", "testcase": false, "constructor": false}], "file": "service/settlement-service/src/main/java/com/meiduimall/service/settlement/api/AgentController.java"}, "focal_method": {"identifier": "shareDeposit", "parameters": "(@Validated EcmAgent ecmAgent)", "modifiers": "@PostMapping(\"/sharedeposit\") public", "return": "ResBodyData", "body": "@PostMapping(\"/sharedeposit\")\n\tpublic ResBodyData shareDeposit(@Validated EcmAgent ecmAgent) {\n\t\t\n\t\tlong start = System.currentTimeMillis();\n\t\tlogger.info(\"share profit for agent start:{}\", start);\n\t\t\n\t\t//\u5224\u65ad\u5f53\u524d\u4e2a\u4ee3\u662f\u5426\u5df2\u5206\u6da6\u8fc7\n\t\tList<EcmMzfAgentWater> shareResults = agentService.getShareProfitResult(ecmAgent.getId(), ecmAgent.getRecNo());\n\t\tif(CollectionUtils.isNotEmpty(shareResults)){\n\t\t\tthrow new ServiceException(SettlementApiCode.ALREADY_SHAREPROIFT, BaseApiCode.getZhMsg(SettlementApiCode.ALREADY_SHAREPROIFT));\n\t\t}\n\t\t\n\t\t//\u8c03\u7528\u5206\u6da6\u65b9\u6cd5\n\t\tList<Map<String, Object>> resultList = depositService.shareDeposit(ecmAgent);\n\t\t\n\t\tlong end = System.currentTimeMillis();\n\t\tlogger.info(\"share profit for agent end:{}\", end);\n\t\tlogger.info(\"total time(second) for shareprofit:{}\", (end - start) / 1000);\n\t\t\n\t\tif(CollectionUtils.isNotEmpty(resultList)){\n\t\t\treturn SettlementUtil.success(resultList);\n\t\t}\n\t\treturn null;\n\t\t\n\n\t}", "signature": "ResBodyData shareDeposit(@Validated EcmAgent ecmAgent)", "full_signature": "@PostMapping(\"/sharedeposit\") public ResBodyData shareDeposit(@Validated EcmAgent ecmAgent)", "class_method_signature": "AgentController.shareDeposit(@Validated EcmAgent ecmAgent)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "info", "getShareProfitResult", "getId", "getRecNo", "isNotEmpty", "getZhMsg", "shareDeposit", "currentTimeMillis", "info", "info", "isNotEmpty", "success"]}, "repository": {"repo_id": 104355653, "url": "https://github.com/chenjy16/mall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 403, "license": "licensed"}}