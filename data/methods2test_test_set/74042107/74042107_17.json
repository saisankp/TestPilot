{"test_class": {"identifier": "ServerSettingsWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServerSettingsWrapper wrapper;", "modifier": "private", "type": "ServerSettingsWrapper", "declarator": "wrapper", "var_name": "wrapper"}, {"original_string": "private File tempTestFile;", "modifier": "private", "type": "File", "declarator": "tempTestFile", "var_name": "tempTestFile"}], "file": "src/osip-core/src/test/java/edu/kit/pse/osip/core/io/files/ServerSettingsWrapperTest.java"}, "test_case": {"identifier": "testGetServerPortNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetServerPortNull() {\n        int result = wrapper.getServerPort(TankSelector.valuesWithoutMix()[1], -1);\n        assertEquals(-1, result);\n    }", "signature": "void testGetServerPortNull()", "full_signature": "@Test public void testGetServerPortNull()", "class_method_signature": "ServerSettingsWrapperTest.testGetServerPortNull()", "testcase": true, "constructor": false, "invocations": ["getServerPort", "valuesWithoutMix", "assertEquals"]}, "focal_class": {"identifier": "ServerSettingsWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File propFile;", "modifier": "private", "type": "File", "declarator": "propFile", "var_name": "propFile"}, {"original_string": "private Properties properties;", "modifier": "private", "type": "Properties", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "ServerSettingsWrapper", "parameters": "(File propFile)", "modifiers": "public", "return": "", "signature": " ServerSettingsWrapper(File propFile)", "full_signature": "public  ServerSettingsWrapper(File propFile)", "class_method_signature": "ServerSettingsWrapper.ServerSettingsWrapper(File propFile)", "testcase": false, "constructor": true}, {"identifier": "setServerPort", "parameters": "(TankSelector tank, int port)", "modifiers": "public final", "return": "void", "signature": "void setServerPort(TankSelector tank, int port)", "full_signature": "public final void setServerPort(TankSelector tank, int port)", "class_method_signature": "ServerSettingsWrapper.setServerPort(TankSelector tank, int port)", "testcase": false, "constructor": false}, {"identifier": "getServerPort", "parameters": "(TankSelector tank, int defaultPort)", "modifiers": "public final", "return": "int", "signature": "int getServerPort(TankSelector tank, int defaultPort)", "full_signature": "public final int getServerPort(TankSelector tank, int defaultPort)", "class_method_signature": "ServerSettingsWrapper.getServerPort(TankSelector tank, int defaultPort)", "testcase": false, "constructor": false}, {"identifier": "saveSettings", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void saveSettings()", "full_signature": "public final void saveSettings()", "class_method_signature": "ServerSettingsWrapper.saveSettings()", "testcase": false, "constructor": false}], "file": "src/osip-core/src/main/java/edu/kit/pse/osip/core/io/files/ServerSettingsWrapper.java"}, "focal_method": {"identifier": "getServerPort", "parameters": "(TankSelector tank, int defaultPort)", "modifiers": "public final", "return": "int", "body": "public final int getServerPort(TankSelector tank, int defaultPort) {\n        String port = properties.getProperty(\"serverPort_\" + tank.name());\n        if (port == null) {\n            return defaultPort;\n        }\n        try {\n            return  Integer.parseInt(port);\n        } catch (NumberFormatException e) {\n            return defaultPort;\n        }\n    }", "signature": "int getServerPort(TankSelector tank, int defaultPort)", "full_signature": "public final int getServerPort(TankSelector tank, int defaultPort)", "class_method_signature": "ServerSettingsWrapper.getServerPort(TankSelector tank, int defaultPort)", "testcase": false, "constructor": false, "invocations": ["getProperty", "name", "parseInt"]}, "repository": {"repo_id": 74042107, "url": "https://github.com/ByteHamster/PSE", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 18396, "license": "licensed"}}