{"test_class": {"identifier": "DataProviderRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private DataProviderRestController dataProviderRestController;", "modifier": "@InjectMocks\n    private", "type": "DataProviderRestController", "declarator": "dataProviderRestController", "var_name": "dataProviderRestController"}, {"original_string": "@Mock\n    private DataProviderService dataProviderService;", "modifier": "@Mock\n    private", "type": "DataProviderService", "declarator": "dataProviderService", "var_name": "dataProviderService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/DataProviderRestControllerTest.java"}, "test_case": {"identifier": "testDeleteDataProvider", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteDataProvider() throws Exception\n    {\n        // Create a data provider key.\n        DataProviderKey dataProviderKey = new DataProviderKey(DATA_PROVIDER_NAME);\n        DataProvider dataProvider = new DataProvider(DATA_PROVIDER_NAME);\n\n        when(dataProviderService.deleteDataProvider(dataProviderKey)).thenReturn(dataProvider);\n\n        DataProvider deletedDataProvider = dataProviderRestController.deleteDataProvider(DATA_PROVIDER_NAME);\n\n        // Verify the external calls.\n        verify(dataProviderService).deleteDataProvider(dataProviderKey);\n        verifyNoMoreInteractions(dataProviderService);\n        // Validate the returned object.\n        assertEquals(dataProvider, deletedDataProvider);\n    }", "signature": "void testDeleteDataProvider()", "full_signature": "@Test public void testDeleteDataProvider()", "class_method_signature": "DataProviderRestControllerTest.testDeleteDataProvider()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "deleteDataProvider", "deleteDataProvider", "deleteDataProvider", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "DataProviderRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private DataProviderService dataProviderService;", "modifier": "@Autowired\n    private", "type": "DataProviderService", "declarator": "dataProviderService", "var_name": "dataProviderService"}], "methods": [{"identifier": "createDataProvider", "parameters": "(@RequestBody DataProviderCreateRequest request)", "modifiers": "@RequestMapping(value = \"/dataProviders\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_POST) public", "return": "DataProvider", "signature": "DataProvider createDataProvider(@RequestBody DataProviderCreateRequest request)", "full_signature": "@RequestMapping(value = \"/dataProviders\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_POST) public DataProvider createDataProvider(@RequestBody DataProviderCreateRequest request)", "class_method_signature": "DataProviderRestController.createDataProvider(@RequestBody DataProviderCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getDataProvider", "parameters": "(@PathVariable(\"dataProviderName\") String dataProviderName)", "modifiers": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_GET) public", "return": "DataProvider", "signature": "DataProvider getDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "full_signature": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_GET) public DataProvider getDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "class_method_signature": "DataProviderRestController.getDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "testcase": false, "constructor": false}, {"identifier": "deleteDataProvider", "parameters": "(@PathVariable(\"dataProviderName\") String dataProviderName)", "modifiers": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_DELETE) public", "return": "DataProvider", "signature": "DataProvider deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "full_signature": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_DELETE) public DataProvider deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "class_method_signature": "DataProviderRestController.deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "testcase": false, "constructor": false}, {"identifier": "getDataProviders", "parameters": "()", "modifiers": "@RequestMapping(value = \"/dataProviders\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_ALL_GET) public", "return": "DataProviderKeys", "signature": "DataProviderKeys getDataProviders()", "full_signature": "@RequestMapping(value = \"/dataProviders\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_ALL_GET) public DataProviderKeys getDataProviders()", "class_method_signature": "DataProviderRestController.getDataProviders()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/DataProviderRestController.java"}, "focal_method": {"identifier": "deleteDataProvider", "parameters": "(@PathVariable(\"dataProviderName\") String dataProviderName)", "modifiers": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_DELETE) public", "return": "DataProvider", "body": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.DELETE)\n    @Secured(SecurityFunctions.FN_DATA_PROVIDERS_DELETE)\n    public DataProvider deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)\n    {\n        return dataProviderService.deleteDataProvider(new DataProviderKey(dataProviderName));\n    }", "signature": "DataProvider deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "full_signature": "@RequestMapping(value = \"/dataProviders/{dataProviderName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_DATA_PROVIDERS_DELETE) public DataProvider deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "class_method_signature": "DataProviderRestController.deleteDataProvider(@PathVariable(\"dataProviderName\") String dataProviderName)", "testcase": false, "constructor": false, "invocations": ["deleteDataProvider"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}