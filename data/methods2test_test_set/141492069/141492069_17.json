{"test_class": {"identifier": "TestExtensionWebSocketListener", "superclass": "extends ExtjsdkTestBase", "interfaces": "", "fields": [{"original_string": "ExtensionWebSocketListener listener;", "modifier": "", "type": "ExtensionWebSocketListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "FalseClient client;", "modifier": "", "type": "FalseClient", "declarator": "client", "var_name": "client"}, {"original_string": "TestHandlerESM pHandler;", "modifier": "", "type": "TestHandlerESM", "declarator": "pHandler", "var_name": "pHandler"}, {"original_string": "TestHandlerResp aHandler;", "modifier": "", "type": "TestHandlerResp", "declarator": "aHandler", "var_name": "aHandler"}, {"original_string": "TestHandlerESM cHandler;", "modifier": "", "type": "TestHandlerESM", "declarator": "cHandler", "var_name": "cHandler"}, {"original_string": "TestHandlerESM qHandler;", "modifier": "", "type": "TestHandlerESM", "declarator": "qHandler", "var_name": "qHandler"}, {"original_string": "TestHandlerESM rHandler;", "modifier": "", "type": "TestHandlerESM", "declarator": "rHandler", "var_name": "rHandler"}, {"original_string": "TestHandlerResp hHandler;", "modifier": "", "type": "TestHandlerResp", "declarator": "hHandler", "var_name": "hHandler"}, {"original_string": "String srcName;", "modifier": "", "type": "String", "declarator": "srcName", "var_name": "srcName"}], "file": "extjsdk/src/test/java/io/vantiq/extjsdk/TestExtensionWebSocketListener.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClose() {\n        connectToSource(srcName, null);\n        \n        listener.close();\n        \n        ResponseBody body = TestListener.createReconnectMessage(srcName);\n        listener.onMessage(body);\n        assert rHandler.compareMessage(null);\n        \n        body = TestListener.createHttpMessage(new Response().status(200));\n        listener.onMessage(body);\n        assert hHandler.compareMessage(null);\n        \n        aHandler.lastMessage = null; // Resetting from auth in connectToSource\n        body = TestListener.createAuthenticationResponse(true);\n        listener.onMessage(body);\n        assert aHandler.compareMessage(null);\n        \n        body = TestListener.createQueryMessage(new LinkedHashMap(), srcName);\n        listener.onMessage(body);\n        assert qHandler.compareMessage(null);\n        \n        body = TestListener.createPublishMessage(new LinkedHashMap(), srcName);\n        listener.onMessage(body);\n        assert pHandler.compareMessage(null);\n        \n        cHandler.lastMessage = null; // Resetting from message in connectToSource\n        body = TestListener.createConfigResponse(new LinkedHashMap(), srcName);\n        listener.onMessage(body);\n        assert cHandler.compareMessage(null);\n    }", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "TestExtensionWebSocketListener.testClose()", "testcase": true, "constructor": false, "invocations": ["connectToSource", "close", "createReconnectMessage", "onMessage", "compareMessage", "createHttpMessage", "status", "onMessage", "compareMessage", "createAuthenticationResponse", "onMessage", "compareMessage", "createQueryMessage", "onMessage", "compareMessage", "createPublishMessage", "onMessage", "compareMessage", "createConfigResponse", "onMessage", "compareMessage"]}, "focal_class": {"identifier": "ExtensionWebSocketListener", "superclass": "", "interfaces": "implements WebSocketListener", "fields": [{"original_string": "Handler<Response> httpHandler = null;", "modifier": "", "type": "Handler<Response>", "declarator": "httpHandler = null", "var_name": "httpHandler"}, {"original_string": "Handler<ExtensionServiceMessage> publishHandler = null;", "modifier": "", "type": "Handler<ExtensionServiceMessage>", "declarator": "publishHandler = null", "var_name": "publishHandler"}, {"original_string": "Handler<ExtensionServiceMessage> queryHandler = null;", "modifier": "", "type": "Handler<ExtensionServiceMessage>", "declarator": "queryHandler = null", "var_name": "queryHandler"}, {"original_string": "Handler<ExtensionServiceMessage> configHandler = null;", "modifier": "", "type": "Handler<ExtensionServiceMessage>", "declarator": "configHandler = null", "var_name": "configHandler"}, {"original_string": "Handler<Response> authHandler = null;", "modifier": "", "type": "Handler<Response>", "declarator": "authHandler = null", "var_name": "authHandler"}, {"original_string": "Handler<ExtensionServiceMessage> reconnectHandler = null;", "modifier": "", "type": "Handler<ExtensionServiceMessage>", "declarator": "reconnectHandler = null", "var_name": "reconnectHandler"}, {"original_string": "final Logger log;", "modifier": "final", "type": "Logger", "declarator": "log", "var_name": "log"}, {"original_string": "private ExtensionWebSocketClient client;", "modifier": "private", "type": "ExtensionWebSocketClient", "declarator": "client", "var_name": "client"}, {"original_string": "ObjectMapper mapper = new ObjectMapper();", "modifier": "", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "boolean isClosed = false;", "modifier": "", "type": "boolean", "declarator": "isClosed = false", "var_name": "isClosed"}], "methods": [{"identifier": "ExtensionWebSocketListener", "parameters": "(ExtensionWebSocketClient client)", "modifiers": "public", "return": "", "signature": " ExtensionWebSocketListener(ExtensionWebSocketClient client)", "full_signature": "public  ExtensionWebSocketListener(ExtensionWebSocketClient client)", "class_method_signature": "ExtensionWebSocketListener.ExtensionWebSocketListener(ExtensionWebSocketClient client)", "testcase": false, "constructor": true}, {"identifier": "setHttpHandler", "parameters": "(Handler<Response> httpHandler)", "modifiers": "public", "return": "void", "signature": "void setHttpHandler(Handler<Response> httpHandler)", "full_signature": "public void setHttpHandler(Handler<Response> httpHandler)", "class_method_signature": "ExtensionWebSocketListener.setHttpHandler(Handler<Response> httpHandler)", "testcase": false, "constructor": false}, {"identifier": "setPublishHandler", "parameters": "(Handler<ExtensionServiceMessage> publishHandler)", "modifiers": "public", "return": "void", "signature": "void setPublishHandler(Handler<ExtensionServiceMessage> publishHandler)", "full_signature": "public void setPublishHandler(Handler<ExtensionServiceMessage> publishHandler)", "class_method_signature": "ExtensionWebSocketListener.setPublishHandler(Handler<ExtensionServiceMessage> publishHandler)", "testcase": false, "constructor": false}, {"identifier": "setQueryHandler", "parameters": "(Handler<ExtensionServiceMessage> queryHandler)", "modifiers": "public", "return": "void", "signature": "void setQueryHandler(Handler<ExtensionServiceMessage> queryHandler)", "full_signature": "public void setQueryHandler(Handler<ExtensionServiceMessage> queryHandler)", "class_method_signature": "ExtensionWebSocketListener.setQueryHandler(Handler<ExtensionServiceMessage> queryHandler)", "testcase": false, "constructor": false}, {"identifier": "setConfigHandler", "parameters": "(Handler<ExtensionServiceMessage> configHandler)", "modifiers": "public", "return": "void", "signature": "void setConfigHandler(Handler<ExtensionServiceMessage> configHandler)", "full_signature": "public void setConfigHandler(Handler<ExtensionServiceMessage> configHandler)", "class_method_signature": "ExtensionWebSocketListener.setConfigHandler(Handler<ExtensionServiceMessage> configHandler)", "testcase": false, "constructor": false}, {"identifier": "setAuthHandler", "parameters": "(Handler<Response> authHandler)", "modifiers": "public", "return": "void", "signature": "void setAuthHandler(Handler<Response> authHandler)", "full_signature": "public void setAuthHandler(Handler<Response> authHandler)", "class_method_signature": "ExtensionWebSocketListener.setAuthHandler(Handler<Response> authHandler)", "testcase": false, "constructor": false}, {"identifier": "setReconnectHandler", "parameters": "(Handler<ExtensionServiceMessage> reconnectHandler)", "modifiers": "public", "return": "void", "signature": "void setReconnectHandler(Handler<ExtensionServiceMessage> reconnectHandler)", "full_signature": "public void setReconnectHandler(Handler<ExtensionServiceMessage> reconnectHandler)", "class_method_signature": "ExtensionWebSocketListener.setReconnectHandler(Handler<ExtensionServiceMessage> reconnectHandler)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ExtensionWebSocketListener.close()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "public boolean isClosed()", "class_method_signature": "ExtensionWebSocketListener.isClosed()", "testcase": false, "constructor": false}, {"identifier": "onOpen", "parameters": "(WebSocket webSocket, okhttp3.Response response)", "modifiers": "@Override public", "return": "void", "signature": "void onOpen(WebSocket webSocket, okhttp3.Response response)", "full_signature": "@Override public void onOpen(WebSocket webSocket, okhttp3.Response response)", "class_method_signature": "ExtensionWebSocketListener.onOpen(WebSocket webSocket, okhttp3.Response response)", "testcase": false, "constructor": false}, {"identifier": "onMessage", "parameters": "(ResponseBody body)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(ResponseBody body)", "full_signature": "@Override public void onMessage(ResponseBody body)", "class_method_signature": "ExtensionWebSocketListener.onMessage(ResponseBody body)", "testcase": false, "constructor": false}, {"identifier": "useHandlersFromListener", "parameters": "(ExtensionWebSocketListener listener)", "modifiers": "public", "return": "void", "signature": "void useHandlersFromListener(ExtensionWebSocketListener listener)", "full_signature": "public void useHandlersFromListener(ExtensionWebSocketListener listener)", "class_method_signature": "ExtensionWebSocketListener.useHandlersFromListener(ExtensionWebSocketListener listener)", "testcase": false, "constructor": false}, {"identifier": "useHandlersFromListener", "parameters": "(ExtensionWebSocketClient client)", "modifiers": "public", "return": "void", "signature": "void useHandlersFromListener(ExtensionWebSocketClient client)", "full_signature": "public void useHandlersFromListener(ExtensionWebSocketClient client)", "class_method_signature": "ExtensionWebSocketListener.useHandlersFromListener(ExtensionWebSocketClient client)", "testcase": false, "constructor": false}, {"identifier": "onClose", "parameters": "(int code, String reason)", "modifiers": "@Override public", "return": "void", "signature": "void onClose(int code, String reason)", "full_signature": "@Override public void onClose(int code, String reason)", "class_method_signature": "ExtensionWebSocketListener.onClose(int code, String reason)", "testcase": false, "constructor": false}, {"identifier": "onPong", "parameters": "(Buffer payload)", "modifiers": "@Override public", "return": "void", "signature": "void onPong(Buffer payload)", "full_signature": "@Override public void onPong(Buffer payload)", "class_method_signature": "ExtensionWebSocketListener.onPong(Buffer payload)", "testcase": false, "constructor": false}, {"identifier": "onFailure", "parameters": "(IOException e, okhttp3.Response response)", "modifiers": "@Override public", "return": "void", "signature": "void onFailure(IOException e, okhttp3.Response response)", "full_signature": "@Override public void onFailure(IOException e, okhttp3.Response response)", "class_method_signature": "ExtensionWebSocketListener.onFailure(IOException e, okhttp3.Response response)", "testcase": false, "constructor": false}], "file": "extjsdk/src/main/java/io/vantiq/extjsdk/ExtensionWebSocketListener.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() {\n        isClosed = true;\n    }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ExtensionWebSocketListener.close()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 141492069, "url": "https://github.com/Vantiq/vantiq-extension-sources", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 16261, "license": "licensed"}}