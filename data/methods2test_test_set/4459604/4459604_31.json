{"test_class": {"identifier": "CompositeTemplateLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CompositeTemplateLoader loader =\n      new CompositeTemplateLoader(\n          new ClassPathTemplateLoader(),\n          new FileTemplateLoader(\"src/test/resources/inheritance\")\n      );", "modifier": "private", "type": "CompositeTemplateLoader", "declarator": "loader =\n      new CompositeTemplateLoader(\n          new ClassPathTemplateLoader(),\n          new FileTemplateLoader(\"src/test/resources/inheritance\")\n      )", "var_name": "loader"}], "file": "handlebars/src/test/java/com/github/jknack/handlebars/io/CompositeTemplateLoaderTest.java"}, "test_case": {"identifier": "getDelegates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getDelegates() throws IOException {\n    Iterable<TemplateLoader> delegates = loader.getDelegates();\n    assertNotNull(delegates);\n    Iterator<TemplateLoader> iterator = delegates.iterator();\n    assertNotNull(iterator);\n    assertTrue(iterator.next() instanceof ClassPathTemplateLoader);\n    assertTrue(iterator.next() instanceof FileTemplateLoader);\n  }", "signature": "void getDelegates()", "full_signature": "@Test public void getDelegates()", "class_method_signature": "CompositeTemplateLoaderTest.getDelegates()", "testcase": true, "constructor": false, "invocations": ["getDelegates", "assertNotNull", "iterator", "assertNotNull", "assertTrue", "next", "assertTrue", "next"]}, "focal_class": {"identifier": "CompositeTemplateLoader", "superclass": "", "interfaces": "implements TemplateLoader", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CompositeTemplateLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CompositeTemplateLoader.class)", "var_name": "logger"}, {"original_string": "private final TemplateLoader[] delegates;", "modifier": "private final", "type": "TemplateLoader[]", "declarator": "delegates", "var_name": "delegates"}], "methods": [{"identifier": "CompositeTemplateLoader", "parameters": "(final TemplateLoader... loaders)", "modifiers": "public", "return": "", "signature": " CompositeTemplateLoader(final TemplateLoader... loaders)", "full_signature": "public  CompositeTemplateLoader(final TemplateLoader... loaders)", "class_method_signature": "CompositeTemplateLoader.CompositeTemplateLoader(final TemplateLoader... loaders)", "testcase": false, "constructor": true}, {"identifier": "sourceAt", "parameters": "(final String location)", "modifiers": "@Override public", "return": "TemplateSource", "signature": "TemplateSource sourceAt(final String location)", "full_signature": "@Override public TemplateSource sourceAt(final String location)", "class_method_signature": "CompositeTemplateLoader.sourceAt(final String location)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(final String location)", "modifiers": "@Override public", "return": "String", "signature": "String resolve(final String location)", "full_signature": "@Override public String resolve(final String location)", "class_method_signature": "CompositeTemplateLoader.resolve(final String location)", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPrefix()", "full_signature": "@Override public String getPrefix()", "class_method_signature": "CompositeTemplateLoader.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "getSuffix", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSuffix()", "full_signature": "@Override public String getSuffix()", "class_method_signature": "CompositeTemplateLoader.getSuffix()", "testcase": false, "constructor": false}, {"identifier": "setPrefix", "parameters": "(final String prefix)", "modifiers": "@Override public", "return": "void", "signature": "void setPrefix(final String prefix)", "full_signature": "@Override public void setPrefix(final String prefix)", "class_method_signature": "CompositeTemplateLoader.setPrefix(final String prefix)", "testcase": false, "constructor": false}, {"identifier": "setSuffix", "parameters": "(final String suffix)", "modifiers": "@Override public", "return": "void", "signature": "void setSuffix(final String suffix)", "full_signature": "@Override public void setSuffix(final String suffix)", "class_method_signature": "CompositeTemplateLoader.setSuffix(final String suffix)", "testcase": false, "constructor": false}, {"identifier": "setCharset", "parameters": "(final Charset charset)", "modifiers": "@Override public", "return": "void", "signature": "void setCharset(final Charset charset)", "full_signature": "@Override public void setCharset(final Charset charset)", "class_method_signature": "CompositeTemplateLoader.setCharset(final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "getCharset", "parameters": "()", "modifiers": "@Override public", "return": "Charset", "signature": "Charset getCharset()", "full_signature": "@Override public Charset getCharset()", "class_method_signature": "CompositeTemplateLoader.getCharset()", "testcase": false, "constructor": false}, {"identifier": "getDelegates", "parameters": "()", "modifiers": "public", "return": "Iterable<TemplateLoader>", "signature": "Iterable<TemplateLoader> getDelegates()", "full_signature": "public Iterable<TemplateLoader> getDelegates()", "class_method_signature": "CompositeTemplateLoader.getDelegates()", "testcase": false, "constructor": false}], "file": "handlebars/src/main/java/com/github/jknack/handlebars/io/CompositeTemplateLoader.java"}, "focal_method": {"identifier": "getDelegates", "parameters": "()", "modifiers": "public", "return": "Iterable<TemplateLoader>", "body": "public Iterable<TemplateLoader> getDelegates() {\n    return Arrays.asList(delegates);\n  }", "signature": "Iterable<TemplateLoader> getDelegates()", "full_signature": "public Iterable<TemplateLoader> getDelegates()", "class_method_signature": "CompositeTemplateLoader.getDelegates()", "testcase": false, "constructor": false, "invocations": ["asList"]}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}