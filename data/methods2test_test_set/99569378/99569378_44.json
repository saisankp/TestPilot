{"test_class": {"identifier": "ActorHandlerBaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private FailureHandler mFailureHandler;", "modifier": "@Mock\n    private", "type": "FailureHandler", "declarator": "mFailureHandler", "var_name": "mFailureHandler"}, {"original_string": "@Mock\n    private Message mMessage;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "mMessage", "var_name": "mMessage"}, {"original_string": "@Mock\n    private ActorInvokeException mException;", "modifier": "@Mock\n    private", "type": "ActorInvokeException", "declarator": "mException", "var_name": "mException"}, {"original_string": "@Captor\n    private ArgumentCaptor<android.os.Message> mMessageCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<android.os.Message>", "declarator": "mMessageCaptor", "var_name": "mMessageCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<Long> mTimeoutCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Long>", "declarator": "mTimeoutCaptor", "var_name": "mTimeoutCaptor"}, {"original_string": "private final Object mImpl = new Object();", "modifier": "private final", "type": "Object", "declarator": "mImpl = new Object()", "var_name": "mImpl"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/ActorHandlerBaseTest.java"}, "test_case": {"identifier": "handleMessage_takePoisonPill_methodTransaction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleMessage_takePoisonPill_methodTransaction() {\n        ActorHandlerBase handler = createHandler(60000);\n\n        Transaction transaction = Transaction.<Object>obtain(mImpl, mMessage, mFailureHandler);\n        android.os.Message message = android.os.Message.obtain(handler, ActorHandlerBase.MSG_TRANSACTION,\n                10, 0, transaction);\n\n        handler.handleMessage(message);\n\n        Mockito.verify(handler).removeMessages(ActorHandlerBase.MSG_POISON_PILL);\n        Mockito.verify(handler).sendMessageDelayed(mMessageCaptor.capture(), mTimeoutCaptor.capture());\n\n        Assert.assertEquals(60000L, (long) mTimeoutCaptor.getValue());\n\n        android.os.Message poisonPill = mMessageCaptor.getValue();\n        Assert.assertNotNull(poisonPill);\n        Assert.assertEquals(ActorHandlerBase.MSG_POISON_PILL, poisonPill.what);\n        Assert.assertEquals(10, poisonPill.arg1);\n    }", "signature": "void handleMessage_takePoisonPill_methodTransaction()", "full_signature": "@Test public void handleMessage_takePoisonPill_methodTransaction()", "class_method_signature": "ActorHandlerBaseTest.handleMessage_takePoisonPill_methodTransaction()", "testcase": true, "constructor": false, "invocations": ["createHandler", "obtain", "obtain", "handleMessage", "removeMessages", "verify", "sendMessageDelayed", "verify", "capture", "capture", "assertEquals", "getValue", "getValue", "assertNotNull", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ActorHandlerBase", "superclass": "extends Handler", "interfaces": "", "fields": [{"original_string": "static final long NO_DELAY = -1L;", "modifier": "static final", "type": "long", "declarator": "NO_DELAY = -1L", "var_name": "NO_DELAY"}, {"original_string": "@VisibleForTesting\n    /* package */ static final int MSG_TRANSACTION = 1;", "modifier": "@VisibleForTesting\n    /* package */ static final", "type": "int", "declarator": "MSG_TRANSACTION = 1", "var_name": "MSG_TRANSACTION"}, {"original_string": "@VisibleForTesting\n    /* package */ static final int MSG_POISON_PILL = 2;", "modifier": "@VisibleForTesting\n    /* package */ static final", "type": "int", "declarator": "MSG_POISON_PILL = 2", "var_name": "MSG_POISON_PILL"}, {"original_string": "@Nullable\n    private final PowerManager.WakeLock mWakeLock;", "modifier": "@Nullable\n    private final", "type": "PowerManager.WakeLock", "declarator": "mWakeLock", "var_name": "mWakeLock"}, {"original_string": "private final long mStopDelay;", "modifier": "private final", "type": "long", "declarator": "mStopDelay", "var_name": "mStopDelay"}, {"original_string": "private volatile int mLastId = 0;", "modifier": "private volatile", "type": "int", "declarator": "mLastId = 0", "var_name": "mLastId"}], "methods": [{"identifier": "ActorHandlerBase", "parameters": "(Looper looper, long stopDelay, @Nullable PowerManager.WakeLock wakeLock)", "modifiers": "", "return": "", "signature": " ActorHandlerBase(Looper looper, long stopDelay, @Nullable PowerManager.WakeLock wakeLock)", "full_signature": "  ActorHandlerBase(Looper looper, long stopDelay, @Nullable PowerManager.WakeLock wakeLock)", "class_method_signature": "ActorHandlerBase.ActorHandlerBase(Looper looper, long stopDelay, @Nullable PowerManager.WakeLock wakeLock)", "testcase": false, "constructor": true}, {"identifier": "sendTransaction", "parameters": "(@NonNull Transaction transaction)", "modifiers": "", "return": "boolean", "signature": "boolean sendTransaction(@NonNull Transaction transaction)", "full_signature": " boolean sendTransaction(@NonNull Transaction transaction)", "class_method_signature": "ActorHandlerBase.sendTransaction(@NonNull Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "handleMessage", "parameters": "(@NonNull Message msg)", "modifiers": "@Override public", "return": "void", "signature": "void handleMessage(@NonNull Message msg)", "full_signature": "@Override public void handleMessage(@NonNull Message msg)", "class_method_signature": "ActorHandlerBase.handleMessage(@NonNull Message msg)", "testcase": false, "constructor": false}, {"identifier": "handleTransaction", "parameters": "(@NonNull Transaction transaction, int id)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void handleTransaction(@NonNull Transaction transaction, int id)", "full_signature": "@SuppressWarnings(\"unchecked\") private void handleTransaction(@NonNull Transaction transaction, int id)", "class_method_signature": "ActorHandlerBase.handleTransaction(@NonNull Transaction transaction, int id)", "testcase": false, "constructor": false}, {"identifier": "handlePoisonPill", "parameters": "(int id)", "modifiers": "private", "return": "void", "signature": "void handlePoisonPill(int id)", "full_signature": "private void handlePoisonPill(int id)", "class_method_signature": "ActorHandlerBase.handlePoisonPill(int id)", "testcase": false, "constructor": false}, {"identifier": "acquireWakelock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void acquireWakelock()", "full_signature": "private void acquireWakelock()", "class_method_signature": "ActorHandlerBase.acquireWakelock()", "testcase": false, "constructor": false}, {"identifier": "releaseWakelock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void releaseWakelock()", "full_signature": "private void releaseWakelock()", "class_method_signature": "ActorHandlerBase.releaseWakelock()", "testcase": false, "constructor": false}, {"identifier": "stopThread", "parameters": "()", "modifiers": "protected abstract", "return": "void", "signature": "void stopThread()", "full_signature": "protected abstract void stopThread()", "class_method_signature": "ActorHandlerBase.stopThread()", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/ActorHandlerBase.java"}, "focal_method": {"identifier": "handleMessage", "parameters": "(@NonNull Message msg)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleMessage(@NonNull Message msg) {\n        switch (msg.what) {\n            case MSG_TRANSACTION:\n                handleTransaction((Transaction) msg.obj, msg.arg1);\n                break;\n            case MSG_POISON_PILL:\n                handlePoisonPill(msg.arg1);\n                break;\n        }\n    }", "signature": "void handleMessage(@NonNull Message msg)", "full_signature": "@Override public void handleMessage(@NonNull Message msg)", "class_method_signature": "ActorHandlerBase.handleMessage(@NonNull Message msg)", "testcase": false, "constructor": false, "invocations": ["handleTransaction", "handlePoisonPill"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}