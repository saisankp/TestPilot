{"test_class": {"identifier": "PolicyIdMissingExceptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_MESSAGE = \"any Message\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_MESSAGE = \"any Message\"", "var_name": "KNOWN_MESSAGE"}, {"original_string": "private static final ThingId KNOWN_THING_ID = ThingId.of(\"org.eclipse.ditto\", \"a.thing\");", "modifier": "private static final", "type": "ThingId", "declarator": "KNOWN_THING_ID = ThingId.of(\"org.eclipse.ditto\", \"a.thing\")", "var_name": "KNOWN_THING_ID"}, {"original_string": "private static final String KNOWN_DESCRIPTION = \"any description\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_DESCRIPTION = \"any description\"", "var_name": "KNOWN_DESCRIPTION"}, {"original_string": "private static final URI KNOWN_HREF = URI.create(\"any://href\");", "modifier": "private static final", "type": "URI", "declarator": "KNOWN_HREF = URI.create(\"any://href\")", "var_name": "KNOWN_HREF"}, {"original_string": "private static final String KNOWN_ERROR_CODE = PolicyIdMissingException.ERROR_CODE;", "modifier": "private static final", "type": "String", "declarator": "KNOWN_ERROR_CODE = PolicyIdMissingException.ERROR_CODE", "var_name": "KNOWN_ERROR_CODE"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS = HttpStatusCode.NOT_FOUND;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS = HttpStatusCode.NOT_FOUND", "var_name": "KNOWN_STATUS"}, {"original_string": "private static final DittoHeaders KNOWN_HEADERS = DittoHeaders.newBuilder()\n            .schemaVersion(JsonSchemaVersion.V_1)\n            .correlationId(\"any\")\n            .build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "KNOWN_HEADERS = DittoHeaders.newBuilder()\n            .schemaVersion(JsonSchemaVersion.V_1)\n            .correlationId(\"any\")\n            .build()", "var_name": "KNOWN_HEADERS"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(DittoRuntimeException.JsonFields.STATUS, KNOWN_STATUS.toInt())\n            .set(DittoRuntimeException.JsonFields.ERROR_CODE, KNOWN_ERROR_CODE)\n            .set(DittoRuntimeException.JsonFields.MESSAGE, KNOWN_MESSAGE)\n            .set(DittoRuntimeException.JsonFields.DESCRIPTION, KNOWN_DESCRIPTION)\n            .set(DittoRuntimeException.JsonFields.HREF, KNOWN_HREF.toString())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(DittoRuntimeException.JsonFields.STATUS, KNOWN_STATUS.toInt())\n            .set(DittoRuntimeException.JsonFields.ERROR_CODE, KNOWN_ERROR_CODE)\n            .set(DittoRuntimeException.JsonFields.MESSAGE, KNOWN_MESSAGE)\n            .set(DittoRuntimeException.JsonFields.DESCRIPTION, KNOWN_DESCRIPTION)\n            .set(DittoRuntimeException.JsonFields.HREF, KNOWN_HREF.toString())\n            .build()", "var_name": "KNOWN_JSON"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/PolicyIdMissingExceptionTest.java"}, "test_case": {"identifier": "fromJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromJson() {\n        final PolicyIdMissingException exception = PolicyIdMissingException.fromJson(KNOWN_JSON, KNOWN_HEADERS);\n        Assertions.assertThat(exception.getMessage()).isEqualTo(KNOWN_MESSAGE);\n    }", "signature": "void fromJson()", "full_signature": "@Test public void fromJson()", "class_method_signature": "PolicyIdMissingExceptionTest.fromJson()", "testcase": true, "constructor": false, "invocations": ["fromJson", "isEqualTo", "assertThat", "getMessage"]}, "focal_class": {"identifier": "PolicyIdMissingException", "superclass": "extends DittoRuntimeException", "interfaces": "implements ThingException", "fields": [{"original_string": "public static final String ERROR_CODE = ERROR_CODE_PREFIX + \"policy.id.missing\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_CODE = ERROR_CODE_PREFIX + \"policy.id.missing\"", "var_name": "ERROR_CODE"}, {"original_string": "private static final String MESSAGE_TEMPLATE_UPDATE =\n            \"The schema version of the Thing with ID ''{0}'' does not allow an update on schema version ''{1}'' \" +\n                    \"without providing a policy id\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_TEMPLATE_UPDATE =\n            \"The schema version of the Thing with ID ''{0}'' does not allow an update on schema version ''{1}'' \" +\n                    \"without providing a policy id\"", "var_name": "MESSAGE_TEMPLATE_UPDATE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION_UPDATE =\n            \"When updating a schema version 1 Thing using a higher schema version API, you need to add a policyId. \" +\n                    \"Be aware that this will convert the Thing to the higher schema version, thus removing all ACL \" +\n                    \"information from it.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION_UPDATE =\n            \"When updating a schema version 1 Thing using a higher schema version API, you need to add a policyId. \" +\n                    \"Be aware that this will convert the Thing to the higher schema version, thus removing all ACL \" +\n                    \"information from it.\"", "var_name": "DEFAULT_DESCRIPTION_UPDATE"}, {"original_string": "private static final String MESSAGE_TEMPLATE_CREATE =\n            \"The schema version of the Thing with ID ''{0}'' (''{1}'') does not allow creation without \" +\n                    \"providing a policy id\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_TEMPLATE_CREATE =\n            \"The schema version of the Thing with ID ''{0}'' (''{1}'') does not allow creation without \" +\n                    \"providing a policy id\"", "var_name": "MESSAGE_TEMPLATE_CREATE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION_CREATE =\n            \"You need to specify a policy id.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION_CREATE =\n            \"You need to specify a policy id.\"", "var_name": "DEFAULT_DESCRIPTION_CREATE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION_GENERIC =\n            \"Either you need to specific a PolicyId or when updating \" +\n                    \"a schema version 1 Thing using a higher schema version API, you need to add a policyId. \" +\n                    \"Be aware that this will convert the Thing to the higher schema version, thus removing all ACL \" +\n                    \"information from it.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION_GENERIC =\n            \"Either you need to specific a PolicyId or when updating \" +\n                    \"a schema version 1 Thing using a higher schema version API, you need to add a policyId. \" +\n                    \"Be aware that this will convert the Thing to the higher schema version, thus removing all ACL \" +\n                    \"information from it.\"", "var_name": "DEFAULT_DESCRIPTION_GENERIC"}, {"original_string": "private static final long serialVersionUID = -2640894758584381867L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2640894758584381867L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "PolicyIdMissingException", "parameters": "(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "modifiers": "private", "return": "", "signature": " PolicyIdMissingException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "full_signature": "private  PolicyIdMissingException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "class_method_signature": "PolicyIdMissingException.PolicyIdMissingException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "testcase": false, "constructor": true}, {"identifier": "fromThingIdOnUpdate", "parameters": "(final ThingId thingId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyIdMissingException", "signature": "PolicyIdMissingException fromThingIdOnUpdate(final ThingId thingId, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyIdMissingException fromThingIdOnUpdate(final ThingId thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyIdMissingException.fromThingIdOnUpdate(final ThingId thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromThingIdOnCreate", "parameters": "(final ThingId thingId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyIdMissingException", "signature": "PolicyIdMissingException fromThingIdOnCreate(final ThingId thingId, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyIdMissingException fromThingIdOnCreate(final ThingId thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyIdMissingException.fromThingIdOnCreate(final ThingId thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyIdMissingException", "signature": "PolicyIdMissingException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyIdMissingException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyIdMissingException.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getSupportedSchemaVersions", "parameters": "()", "modifiers": "@Override public", "return": "JsonSchemaVersion[]", "signature": "JsonSchemaVersion[] getSupportedSchemaVersions()", "full_signature": "@Override public JsonSchemaVersion[] getSupportedSchemaVersions()", "class_method_signature": "PolicyIdMissingException.getSupportedSchemaVersions()", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/PolicyIdMissingException.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyIdMissingException", "body": "public static PolicyIdMissingException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders) {\n        return DittoRuntimeException.fromJson(jsonObject, dittoHeaders, new Builder());\n    }", "signature": "PolicyIdMissingException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyIdMissingException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyIdMissingException.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["fromJson"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}