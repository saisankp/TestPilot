{"test_class": {"identifier": "DigestTest", "superclass": "", "interfaces": "", "fields": [], "file": "crypto/src/test/java/org/coniks/crypto/DigestTest.java"}, "test_case": {"identifier": "testMakeRand", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMakeRand()\n        throws NoSuchAlgorithmException {\n\n        byte[] r = Digest.makeRand();\n\n        assertFalse(\"makeRand failed - hash of all zeros\",\n                    Arrays.equals(r,\n                    Digest.digest(new byte[Digest.HASH_SIZE_BYTES])));\n\n        if (r.length != Digest.HASH_SIZE_BYTES) {\n            fail(\"Digest of random number failed - wrong length.\");\n        }\n    }", "signature": "void testMakeRand()", "full_signature": "@Test public void testMakeRand()", "class_method_signature": "DigestTest.testMakeRand()", "testcase": true, "constructor": false, "invocations": ["makeRand", "assertFalse", "equals", "digest", "fail"]}, "focal_class": {"identifier": "Digest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int HASH_SIZE_BITS =  256;", "modifier": "public static final", "type": "int", "declarator": "HASH_SIZE_BITS =  256", "var_name": "HASH_SIZE_BITS"}, {"original_string": "public static final int HASH_SIZE_BYTES = HASH_SIZE_BITS/8;", "modifier": "public static final", "type": "int", "declarator": "HASH_SIZE_BYTES = HASH_SIZE_BITS/8", "var_name": "HASH_SIZE_BYTES"}, {"original_string": "public static final String HASH_ID = \"SHA-256\";", "modifier": "public static final", "type": "String", "declarator": "HASH_ID = \"SHA-256\"", "var_name": "HASH_ID"}, {"original_string": "private static Random random = new Random();", "modifier": "private static", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}], "methods": [{"identifier": "digest", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] digest(byte[] input)", "full_signature": "public static byte[] digest(byte[] input)", "class_method_signature": "Digest.digest(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "makeRand", "parameters": "()", "modifiers": "public static", "return": "byte[]", "signature": "byte[] makeRand()", "full_signature": "public static byte[] makeRand()", "class_method_signature": "Digest.makeRand()", "testcase": false, "constructor": false}], "file": "crypto/src/main/java/org/coniks/crypto/Digest.java"}, "focal_method": {"identifier": "makeRand", "parameters": "()", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] makeRand()\n        throws NoSuchAlgorithmException {\n\n        byte[] digest = null;\n        byte[] r = new byte[HASH_SIZE_BYTES];\n        try {\n            random.nextBytes(r);\n            digest = digest(r);\n        }\n        // let's panic if an exception occurs\n        finally {\n            return digest(r);\n        }\n    }", "signature": "byte[] makeRand()", "full_signature": "public static byte[] makeRand()", "class_method_signature": "Digest.makeRand()", "testcase": false, "constructor": false, "invocations": ["nextBytes", "digest", "digest"]}, "repository": {"repo_id": 34706545, "url": "https://github.com/coniks-sys/coniks-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 60, "size": 2990, "license": "licensed"}}