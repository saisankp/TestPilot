{"test_class": {"identifier": "TrainModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private UseCaseCallback<Boolean> useCaseCallback;", "modifier": "@Mock\n    private", "type": "UseCaseCallback<Boolean>", "declarator": "useCaseCallback", "var_name": "useCaseCallback"}], "file": "app/src/test/java/com/mccorby/federatedlearning/core/domain/usecase/TrainModelTest.java"}, "test_case": {"identifier": "testModelIsTrained", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testModelIsTrained() {\n        // Given\n        FederatedModel model = mock(FederatedModel.class);\n        FederatedDataSet dataSource = mock(FederatedDataSet.class);\n\n        // When\n        TrainModel cut = new TrainModel(model, dataSource, useCaseCallback);\n        cut.execute();\n\n        // Then\n        verify(model).buildModel();\n        verify(model).train(dataSource);\n        verify(useCaseCallback).onSuccess(Boolean.TRUE);\n    }", "signature": "void testModelIsTrained()", "full_signature": "@Test public void testModelIsTrained()", "class_method_signature": "TrainModelTest.testModelIsTrained()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "execute", "buildModel", "verify", "train", "verify", "onSuccess", "verify"]}, "focal_class": {"identifier": "TrainModel", "superclass": "", "interfaces": "implements UseCase", "fields": [{"original_string": "private final FederatedModel model;", "modifier": "private final", "type": "FederatedModel", "declarator": "model", "var_name": "model"}, {"original_string": "private final FederatedDataSet dataSource;", "modifier": "private final", "type": "FederatedDataSet", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final UseCaseCallback<Boolean> callback;", "modifier": "private final", "type": "UseCaseCallback<Boolean>", "declarator": "callback", "var_name": "callback"}], "methods": [{"identifier": "TrainModel", "parameters": "(FederatedModel model, FederatedDataSet dataSource,\n                      UseCaseCallback<Boolean> callback)", "modifiers": "public", "return": "", "signature": " TrainModel(FederatedModel model, FederatedDataSet dataSource,\n                      UseCaseCallback<Boolean> callback)", "full_signature": "public  TrainModel(FederatedModel model, FederatedDataSet dataSource,\n                      UseCaseCallback<Boolean> callback)", "class_method_signature": "TrainModel.TrainModel(FederatedModel model, FederatedDataSet dataSource,\n                      UseCaseCallback<Boolean> callback)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "TrainModel.execute()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/mccorby/federatedlearning/core/domain/usecase/TrainModel.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute() {\n        if (model == null) {\n            callback.onError(new UseCaseError());\n        } else {\n            model.buildModel();\n            model.train(dataSource);\n            callback.onSuccess(Boolean.TRUE);\n        }\n    }", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "TrainModel.execute()", "testcase": false, "constructor": false, "invocations": ["onError", "buildModel", "train", "onSuccess"]}, "repository": {"repo_id": 108563514, "url": "https://github.com/mccorby/FederatedAndroidTrainer", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 121, "size": 292, "license": "licensed"}}