{"test_class": {"identifier": "SpecificationReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-io/src/test/java/net/sf/opendse/io/SpecificationReaderTest.java"}, "test_case": {"identifier": "toApplicationTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void toApplicationTest() throws ValidityException, ParsingException, IOException, ClassNotFoundException,\n\t\t\tInstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException {\n\t\tnu.xom.Element eApp = new nu.xom.Element(\"application\", SpecificationWriter.NS);\n\t\tnu.xom.Element r1 = new nu.xom.Element(\"task\", SpecificationWriter.NS);\n\t\tr1.addAttribute(new Attribute(\"id\", \"r1\"));\n\t\teApp.appendChild(r1);\n\t\tnu.xom.Element r2 = new nu.xom.Element(\"communication\", SpecificationWriter.NS);\n\t\tr2.addAttribute(new Attribute(\"id\", \"r2\"));\n\t\teApp.appendChild(r2);\n\t\tnu.xom.Element l = new nu.xom.Element(\"dependency\", SpecificationWriter.NS);\n\t\tl.addAttribute(new Attribute(\"id\", \"l\"));\n\t\tl.addAttribute(new Attribute(\"source\", \"r1\"));\n\t\tl.addAttribute(new Attribute(\"destination\", \"r2\"));\n\t\teApp.appendChild(l);\n\n\t\tSpecificationReader r = new SpecificationReader();\n\t\tApplication<Task, Dependency> application = r.toApplication(eApp);\n\n\t\tAssert.assertNotNull(application.getVertex(\"r1\"));\n\t\tAssert.assertNotNull(application.getVertex(\"r2\"));\n\t\tAssert.assertNotNull(application.getEdge(\"l\"));\n\t}", "signature": "void toApplicationTest()", "full_signature": "@Test public void toApplicationTest()", "class_method_signature": "SpecificationReaderTest.toApplicationTest()", "testcase": true, "constructor": false, "invocations": ["addAttribute", "appendChild", "addAttribute", "appendChild", "addAttribute", "addAttribute", "addAttribute", "appendChild", "toApplication", "assertNotNull", "getVertex", "assertNotNull", "getVertex", "assertNotNull", "getEdge"]}, "focal_class": {"identifier": "SpecificationReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Map<String, Element> knownElements = new HashMap<String, Element>();", "modifier": "protected", "type": "Map<String, Element>", "declarator": "knownElements = new HashMap<String, Element>()", "var_name": "knownElements"}], "methods": [{"identifier": "read", "parameters": "(String filename)", "modifiers": "public", "return": "Specification", "signature": "Specification read(String filename)", "full_signature": "public Specification read(String filename)", "class_method_signature": "SpecificationReader.read(String filename)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(File file)", "modifiers": "public", "return": "Specification", "signature": "Specification read(File file)", "full_signature": "public Specification read(File file)", "class_method_signature": "SpecificationReader.read(File file)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(InputStream in)", "modifiers": "public", "return": "Specification", "signature": "Specification read(InputStream in)", "full_signature": "public Specification read(InputStream in)", "class_method_signature": "SpecificationReader.read(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "toSpecification", "parameters": "(nu.xom.Element eSpecification)", "modifiers": "public", "return": "Specification", "signature": "Specification toSpecification(nu.xom.Element eSpecification)", "full_signature": "public Specification toSpecification(nu.xom.Element eSpecification)", "class_method_signature": "SpecificationReader.toSpecification(nu.xom.Element eSpecification)", "testcase": false, "constructor": false}, {"identifier": "toRoutings", "parameters": "(nu.xom.Element eRoutings,\n\t\t\tArchitecture<Resource, Link> architecture, Application<Task, Dependency> application)", "modifiers": "protected", "return": "Routings<Task, Resource, Link>", "signature": "Routings<Task, Resource, Link> toRoutings(nu.xom.Element eRoutings,\n\t\t\tArchitecture<Resource, Link> architecture, Application<Task, Dependency> application)", "full_signature": "protected Routings<Task, Resource, Link> toRoutings(nu.xom.Element eRoutings,\n\t\t\tArchitecture<Resource, Link> architecture, Application<Task, Dependency> application)", "class_method_signature": "SpecificationReader.toRoutings(nu.xom.Element eRoutings,\n\t\t\tArchitecture<Resource, Link> architecture, Application<Task, Dependency> application)", "testcase": false, "constructor": false}, {"identifier": "toRouting", "parameters": "(nu.xom.Element eRouting, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "modifiers": "protected", "return": "Architecture<Resource, Link>", "signature": "Architecture<Resource, Link> toRouting(nu.xom.Element eRouting, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "full_signature": "protected Architecture<Resource, Link> toRouting(nu.xom.Element eRouting, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "class_method_signature": "SpecificationReader.toRouting(nu.xom.Element eRouting, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "testcase": false, "constructor": false}, {"identifier": "toMappings", "parameters": "(nu.xom.Element eMappings, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "modifiers": "protected", "return": "Mappings<Task, Resource>", "signature": "Mappings<Task, Resource> toMappings(nu.xom.Element eMappings, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "full_signature": "protected Mappings<Task, Resource> toMappings(nu.xom.Element eMappings, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "class_method_signature": "SpecificationReader.toMappings(nu.xom.Element eMappings, Architecture<Resource, Link> architecture,\n\t\t\tApplication<Task, Dependency> application)", "testcase": false, "constructor": false}, {"identifier": "toApplication", "parameters": "(nu.xom.Element eApplication)", "modifiers": "protected", "return": "Application<Task, Dependency>", "signature": "Application<Task, Dependency> toApplication(nu.xom.Element eApplication)", "full_signature": "protected Application<Task, Dependency> toApplication(nu.xom.Element eApplication)", "class_method_signature": "SpecificationReader.toApplication(nu.xom.Element eApplication)", "testcase": false, "constructor": false}, {"identifier": "parseDependency", "parameters": "(nu.xom.Element eDependency, Application<Task, Dependency> application)", "modifiers": "protected", "return": "void", "signature": "void parseDependency(nu.xom.Element eDependency, Application<Task, Dependency> application)", "full_signature": "protected void parseDependency(nu.xom.Element eDependency, Application<Task, Dependency> application)", "class_method_signature": "SpecificationReader.parseDependency(nu.xom.Element eDependency, Application<Task, Dependency> application)", "testcase": false, "constructor": false}, {"identifier": "toArchitecture", "parameters": "(nu.xom.Element eArch)", "modifiers": "protected", "return": "Architecture<Resource, Link>", "signature": "Architecture<Resource, Link> toArchitecture(nu.xom.Element eArch)", "full_signature": "protected Architecture<Resource, Link> toArchitecture(nu.xom.Element eArch)", "class_method_signature": "SpecificationReader.toArchitecture(nu.xom.Element eArch)", "testcase": false, "constructor": false}, {"identifier": "parseLink", "parameters": "(nu.xom.Element eLink, Architecture<Resource, Link> architecture)", "modifiers": "protected", "return": "void", "signature": "void parseLink(nu.xom.Element eLink, Architecture<Resource, Link> architecture)", "full_signature": "protected void parseLink(nu.xom.Element eLink, Architecture<Resource, Link> architecture)", "class_method_signature": "SpecificationReader.parseLink(nu.xom.Element eLink, Architecture<Resource, Link> architecture)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(nu.xom.Element eElement)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Class<C>", "signature": "Class<C> getClass(nu.xom.Element eElement)", "full_signature": "@SuppressWarnings(\"unchecked\") protected Class<C> getClass(nu.xom.Element eElement)", "class_method_signature": "SpecificationReader.getClass(nu.xom.Element eElement)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String name)", "modifiers": "protected", "return": "Class<?>", "signature": "Class<?> getClass(String name)", "full_signature": "protected Class<?> getClass(String name)", "class_method_signature": "SpecificationReader.getClass(String name)", "testcase": false, "constructor": false}, {"identifier": "toNode", "parameters": "(nu.xom.Element eNode, N parent)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "N", "signature": "N toNode(nu.xom.Element eNode, N parent)", "full_signature": "@SuppressWarnings(\"unchecked\") protected N toNode(nu.xom.Element eNode, N parent)", "class_method_signature": "SpecificationReader.toNode(nu.xom.Element eNode, N parent)", "testcase": false, "constructor": false}, {"identifier": "toEdge", "parameters": "(nu.xom.Element eEdge, E parent)", "modifiers": "protected", "return": "E", "signature": "E toEdge(nu.xom.Element eEdge, E parent)", "full_signature": "protected E toEdge(nu.xom.Element eEdge, E parent)", "class_method_signature": "SpecificationReader.toEdge(nu.xom.Element eEdge, E parent)", "testcase": false, "constructor": false}, {"identifier": "toMapping", "parameters": "(nu.xom.Element eMapping, Task source, Resource target)", "modifiers": "protected", "return": "M", "signature": "M toMapping(nu.xom.Element eMapping, Task source, Resource target)", "full_signature": "protected M toMapping(nu.xom.Element eMapping, Task source, Resource target)", "class_method_signature": "SpecificationReader.toMapping(nu.xom.Element eMapping, Task source, Resource target)", "testcase": false, "constructor": false}, {"identifier": "toAttributes", "parameters": "(nu.xom.Element eAttributes)", "modifiers": "protected", "return": "Attributes", "signature": "Attributes toAttributes(nu.xom.Element eAttributes)", "full_signature": "protected Attributes toAttributes(nu.xom.Element eAttributes)", "class_method_signature": "SpecificationReader.toAttributes(nu.xom.Element eAttributes)", "testcase": false, "constructor": false}, {"identifier": "toAttribute", "parameters": "(nu.xom.Element eAttribute)", "modifiers": "protected", "return": "Object", "signature": "Object toAttribute(nu.xom.Element eAttribute)", "full_signature": "protected Object toAttribute(nu.xom.Element eAttribute)", "class_method_signature": "SpecificationReader.toAttribute(nu.xom.Element eAttribute)", "testcase": false, "constructor": false}, {"identifier": "toAttributeCollection", "parameters": "(nu.xom.Element eAttribute, Class<?> clazz)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) protected", "return": "Object", "signature": "Object toAttributeCollection(nu.xom.Element eAttribute, Class<?> clazz)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) protected Object toAttributeCollection(nu.xom.Element eAttribute, Class<?> clazz)", "class_method_signature": "SpecificationReader.toAttributeCollection(nu.xom.Element eAttribute, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "toAttributeObject", "parameters": "(String value, Class<?> clazz)", "modifiers": "protected", "return": "Object", "signature": "Object toAttributeObject(String value, Class<?> clazz)", "full_signature": "protected Object toAttributeObject(String value, Class<?> clazz)", "class_method_signature": "SpecificationReader.toAttributeObject(String value, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getRange", "parameters": "(String value)", "modifiers": "protected", "return": "ParameterRange", "signature": "ParameterRange getRange(String value)", "full_signature": "protected ParameterRange getRange(String value)", "class_method_signature": "SpecificationReader.getRange(String value)", "testcase": false, "constructor": false}, {"identifier": "getRangeInt", "parameters": "(String value)", "modifiers": "protected", "return": "ParameterRangeDiscrete", "signature": "ParameterRangeDiscrete getRangeInt(String value)", "full_signature": "protected ParameterRangeDiscrete getRangeInt(String value)", "class_method_signature": "SpecificationReader.getRangeInt(String value)", "testcase": false, "constructor": false}, {"identifier": "getSelectRefList", "parameters": "(String type, String value)", "modifiers": "protected", "return": "ParameterSelect", "signature": "ParameterSelect getSelectRefList(String type, String value)", "full_signature": "protected ParameterSelect getSelectRefList(String type, String value)", "class_method_signature": "SpecificationReader.getSelectRefList(String type, String value)", "testcase": false, "constructor": false}, {"identifier": "getUniqueID", "parameters": "(String value)", "modifiers": "protected", "return": "ParameterUniqueID", "signature": "ParameterUniqueID getUniqueID(String value)", "full_signature": "protected ParameterUniqueID getUniqueID(String value)", "class_method_signature": "SpecificationReader.getUniqueID(String value)", "testcase": false, "constructor": false}], "file": "opendse-io/src/main/java/net/sf/opendse/io/SpecificationReader.java"}, "focal_method": {"identifier": "toApplication", "parameters": "(nu.xom.Element eApplication)", "modifiers": "protected", "return": "Application<Task, Dependency>", "body": "protected Application<Task, Dependency> toApplication(nu.xom.Element eApplication)\n\t\t\tthrows IllegalArgumentException, SecurityException, InstantiationException, IllegalAccessException,\n\t\t\tInvocationTargetException, NoSuchMethodException, ClassNotFoundException {\n\t\tApplication<Task, Dependency> application = new Application<Task, Dependency>();\n\n\t\tnu.xom.Elements eTasks = eApplication.getChildElements(\"task\", SpecificationWriter.NS);\n\t\tfor (nu.xom.Element eTask : iterable(eTasks)) {\n\t\t\tTask task = toNode(eTask, null);\n\t\t\tapplication.addVertex(task);\n\t\t}\n\t\tnu.xom.Elements eCommunications = eApplication.getChildElements(\"communication\", SpecificationWriter.NS);\n\t\tfor (nu.xom.Element eCommunication : iterable(eCommunications)) {\n\t\t\tCommunication communication = toNode(eCommunication, null);\n\t\t\tapplication.addVertex(communication);\n\t\t}\n\n\t\tnu.xom.Elements eDependencies = eApplication.getChildElements(\"dependency\", SpecificationWriter.NS);\n\t\tfor (nu.xom.Element eDependency : iterable(eDependencies)) {\n\t\t\tparseDependency(eDependency, application);\n\t\t}\n\n\t\tnu.xom.Element eFunctions = eApplication.getFirstChildElement(\"functions\", SpecificationWriter.NS);\n\t\tif (eFunctions != null) {\n\t\t\tnu.xom.Elements eFuncs = eFunctions.getChildElements(\"function\", SpecificationWriter.NS);\n\t\t\tfor (nu.xom.Element eFunc : iterable(eFuncs)) {\n\t\t\t\tTask task = application.getVertex(eFunc.getAttributeValue(\"anchor\"));\n\t\t\t\tFunction<Task, Dependency> function = application.getFunction(task);\n\t\t\t\tAttributes attributes = toAttributes(eFunc.getFirstChildElement(\"attributes\", SpecificationWriter.NS));\n\t\t\t\tsetAttributes(function, attributes);\n\t\t\t}\n\t\t}\n\n\t\treturn application;\n\t}", "signature": "Application<Task, Dependency> toApplication(nu.xom.Element eApplication)", "full_signature": "protected Application<Task, Dependency> toApplication(nu.xom.Element eApplication)", "class_method_signature": "SpecificationReader.toApplication(nu.xom.Element eApplication)", "testcase": false, "constructor": false, "invocations": ["getChildElements", "iterable", "toNode", "addVertex", "getChildElements", "iterable", "toNode", "addVertex", "getChildElements", "iterable", "parseDependency", "getFirstChildElement", "getChildElements", "iterable", "getVertex", "getAttributeValue", "getFunction", "toAttributes", "getFirstChildElement", "setAttributes"]}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}