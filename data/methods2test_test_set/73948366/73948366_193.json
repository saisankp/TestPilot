{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/util/StringUtilsTest.java"}, "test_case": {"identifier": "testPatternFromGlob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPatternFromGlob() {\n        assertEquals(\"^abc$\", StringUtils.patternFromGlob(\"abc\"));\n        assertEquals(\"^abc.*$\", StringUtils.patternFromGlob(\"abc*\"));\n        assertEquals(\"^abc.$\", StringUtils.patternFromGlob(\"abc?\"));\n        assertEquals(\"^.*abc.$\", StringUtils.patternFromGlob(\"*abc?\"));\n        assertEquals(\"^abc\\\\.abc:.*$\", StringUtils.patternFromGlob(\"abc.abc:*\"));\n        assertEquals(\"^ab\\\\[a-c]c$\", StringUtils.patternFromGlob(\"ab[a-c]c\"));\n        assertEquals(\"^ab.*\\\\.\\\\(\\\\)\\\\^\\\\$c$\", StringUtils.patternFromGlob(\"ab*.()^$c\"));\n        assertEquals(\"^abc\\\\\\\\test\\\\\\\\$\", StringUtils.patternFromGlob(\"abc\\\\test\\\\\"));\n        assertEquals(\"^ab\\\\{\\\\|c\\\\+$\", StringUtils.patternFromGlob(\"ab{|c+\"));\n        assertEquals(\"^\\\\^\\\\$\\\\[\\\\(\\\\)\\\\\\\\\\\\+\\\\{\\\\..*.\\\\|$\", StringUtils.patternFromGlob(\"^$[()\\\\+{.*?|\"));\n    }", "signature": "void testPatternFromGlob()", "full_signature": "@Test public void testPatternFromGlob()", "class_method_signature": "StringUtilsTest.testPatternFromGlob()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob", "assertEquals", "patternFromGlob"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isRegexMetaCharacter", "parameters": "(char regexChar)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRegexMetaCharacter(char regexChar)", "full_signature": "public static boolean isRegexMetaCharacter(char regexChar)", "class_method_signature": "StringUtils.isRegexMetaCharacter(char regexChar)", "testcase": false, "constructor": false}, {"identifier": "containsMatchCharacter", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsMatchCharacter(String name)", "full_signature": "public static boolean containsMatchCharacter(String name)", "class_method_signature": "StringUtils.containsMatchCharacter(String name)", "testcase": false, "constructor": false}, {"identifier": "patternFromGlob", "parameters": "(String glob)", "modifiers": "public static", "return": "String", "signature": "String patternFromGlob(String glob)", "full_signature": "public static String patternFromGlob(String glob)", "class_method_signature": "StringUtils.patternFromGlob(String glob)", "testcase": false, "constructor": false}, {"identifier": "containsControlCharacter", "parameters": "(String value)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsControlCharacter(String value)", "full_signature": "public static boolean containsControlCharacter(String value)", "class_method_signature": "StringUtils.containsControlCharacter(String value)", "testcase": false, "constructor": false}, {"identifier": "requestUriMatch", "parameters": "(String uri, Set<String> uriSet,\n            List<Pattern> uriList)", "modifiers": "public static", "return": "boolean", "signature": "boolean requestUriMatch(String uri, Set<String> uriSet,\n            List<Pattern> uriList)", "full_signature": "public static boolean requestUriMatch(String uri, Set<String> uriSet,\n            List<Pattern> uriList)", "class_method_signature": "StringUtils.requestUriMatch(String uri, Set<String> uriSet,\n            List<Pattern> uriList)", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/StringUtils.java"}, "focal_method": {"identifier": "patternFromGlob", "parameters": "(String glob)", "modifiers": "public static", "return": "String", "body": "public static String patternFromGlob(String glob) {\n        StringBuilder sb = new StringBuilder(\"^\");\n        int len = glob.length();\n        for (int i = 0; i < len; i++) {\n            char c = glob.charAt(i);\n            if (c == '*') {\n                sb.append(\".*\");\n            } else if (c == '?') {\n                sb.append('.');\n            } else {\n                if (isRegexMetaCharacter(c)) {\n                    sb.append('\\\\');\n                }\n                sb.append(c);\n            }\n        }\n        sb.append(\"$\");\n        return sb.toString();\n    }", "signature": "String patternFromGlob(String glob)", "full_signature": "public static String patternFromGlob(String glob)", "class_method_signature": "StringUtils.patternFromGlob(String glob)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "append", "append", "isRegexMetaCharacter", "append", "append", "append", "toString"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}