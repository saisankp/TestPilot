{"test_class": {"identifier": "WriteBufferTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/internal/codec/WriteBufferTest.java"}, "test_case": {"identifier": "writeAscii_long", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void writeAscii_long() {\n    assertThat(writeAscii(-1005656679588439279L))\n        .isEqualTo(\"-1005656679588439279\");\n    assertThat(writeAscii(0L))\n        .isEqualTo(\"0\");\n    assertThat(writeAscii(-9223372036854775808L /* Long.MIN_VALUE */))\n        .isEqualTo(\"-9223372036854775808\");\n    assertThat(writeAscii(123456789L))\n        .isEqualTo(\"123456789\");\n  }", "signature": "void writeAscii_long()", "full_signature": "@Test public void writeAscii_long()", "class_method_signature": "WriteBufferTest.writeAscii_long()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "writeAscii", "isEqualTo", "assertThat", "writeAscii", "isEqualTo", "assertThat", "writeAscii", "isEqualTo", "assertThat", "writeAscii"]}, "focal_class": {"identifier": "WriteBuffer", "superclass": "", "interfaces": "", "fields": [{"original_string": "final byte[] buf;", "modifier": "final", "type": "byte[]", "declarator": "buf", "var_name": "buf"}, {"original_string": "int pos;", "modifier": "", "type": "int", "declarator": "pos", "var_name": "pos"}], "methods": [{"identifier": "wrap", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "WriteBuffer", "signature": "WriteBuffer wrap(byte[] bytes)", "full_signature": "public static WriteBuffer wrap(byte[] bytes)", "class_method_signature": "WriteBuffer.wrap(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(byte[] bytes, int pos)", "modifiers": "public static", "return": "WriteBuffer", "signature": "WriteBuffer wrap(byte[] bytes, int pos)", "full_signature": "public static WriteBuffer wrap(byte[] bytes, int pos)", "class_method_signature": "WriteBuffer.wrap(byte[] bytes, int pos)", "testcase": false, "constructor": false}, {"identifier": "WriteBuffer", "parameters": "(byte[] buf, int pos)", "modifiers": "", "return": "", "signature": " WriteBuffer(byte[] buf, int pos)", "full_signature": "  WriteBuffer(byte[] buf, int pos)", "class_method_signature": "WriteBuffer.WriteBuffer(byte[] buf, int pos)", "testcase": false, "constructor": true}, {"identifier": "writeByte", "parameters": "(int v)", "modifiers": "public", "return": "void", "signature": "void writeByte(int v)", "full_signature": "public void writeByte(int v)", "class_method_signature": "WriteBuffer.writeByte(int v)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] v)", "modifiers": "public", "return": "void", "signature": "void write(byte[] v)", "full_signature": "public void write(byte[] v)", "class_method_signature": "WriteBuffer.write(byte[] v)", "testcase": false, "constructor": false}, {"identifier": "writeBackwards", "parameters": "(long v)", "modifiers": "", "return": "void", "signature": "void writeBackwards(long v)", "full_signature": " void writeBackwards(long v)", "class_method_signature": "WriteBuffer.writeBackwards(long v)", "testcase": false, "constructor": false}, {"identifier": "pos", "parameters": "()", "modifiers": "final", "return": "int", "signature": "int pos()", "full_signature": "final int pos()", "class_method_signature": "WriteBuffer.pos()", "testcase": false, "constructor": false}, {"identifier": "writeAscii", "parameters": "(String v)", "modifiers": "public", "return": "void", "signature": "void writeAscii(String v)", "full_signature": "public void writeAscii(String v)", "class_method_signature": "WriteBuffer.writeAscii(String v)", "testcase": false, "constructor": false}, {"identifier": "writeUtf8", "parameters": "(CharSequence string)", "modifiers": "public", "return": "void", "signature": "void writeUtf8(CharSequence string)", "full_signature": "public void writeUtf8(CharSequence string)", "class_method_signature": "WriteBuffer.writeUtf8(CharSequence string)", "testcase": false, "constructor": false}, {"identifier": "writeUtf8", "parameters": "(CharSequence string, int fromIndex, int toIndex)", "modifiers": "public", "return": "void", "signature": "void writeUtf8(CharSequence string, int fromIndex, int toIndex)", "full_signature": "public void writeUtf8(CharSequence string, int fromIndex, int toIndex)", "class_method_signature": "WriteBuffer.writeUtf8(CharSequence string, int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "writeAscii", "parameters": "(long v)", "modifiers": "public", "return": "void", "signature": "void writeAscii(long v)", "full_signature": "public void writeAscii(long v)", "class_method_signature": "WriteBuffer.writeAscii(long v)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WriteBuffer.toString()", "testcase": false, "constructor": false}, {"identifier": "utf8SizeInBytes", "parameters": "(CharSequence string)", "modifiers": "public static", "return": "int", "signature": "int utf8SizeInBytes(CharSequence string)", "full_signature": "public static int utf8SizeInBytes(CharSequence string)", "class_method_signature": "WriteBuffer.utf8SizeInBytes(CharSequence string)", "testcase": false, "constructor": false}, {"identifier": "asciiSizeInBytes", "parameters": "(long v)", "modifiers": "public static", "return": "int", "signature": "int asciiSizeInBytes(long v)", "full_signature": "public static int asciiSizeInBytes(long v)", "class_method_signature": "WriteBuffer.asciiSizeInBytes(long v)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/internal/codec/WriteBuffer.java"}, "focal_method": {"identifier": "writeAscii", "parameters": "(String v)", "modifiers": "public", "return": "void", "body": "public void writeAscii(String v) {\n    for (int i = 0, length = v.length(); i < length; i++) {\n      writeByte(v.charAt(i) & 0xff);\n    }\n  }", "signature": "void writeAscii(String v)", "full_signature": "public void writeAscii(String v)", "class_method_signature": "WriteBuffer.writeAscii(String v)", "testcase": false, "constructor": false, "invocations": ["length", "writeByte", "charAt"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}