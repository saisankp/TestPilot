{"test_class": {"identifier": "BaseCoverageProcessingNodeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BaseCoverageProcessingNode testedObject;", "modifier": "private", "type": "BaseCoverageProcessingNode", "declarator": "testedObject", "var_name": "testedObject"}, {"original_string": "private BaseCoverageProcessingNode testedObject2;", "modifier": "private", "type": "BaseCoverageProcessingNode", "declarator": "testedObject2", "var_name": "testedObject2"}], "file": "modules/library/render/src/test/java/org/geotools/renderer/lite/gridcoverage2d/BaseCoverageProcessingNodeTest.java"}, "test_case": {"identifier": "execute", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void execute() {\n\t\t// execute\n\t\tAssert.assertNotNull(testedObject2.getOutput());\n\t\t// do nothing\n\t\tAssert.assertNotNull(testedObject2.getOutput());\n\n\t\t// add source clean output\n\t\ttestedObject2.addSource(testedObject);\n\t\ttestedObject2.addSink(testedObject);\n\t\t// recompute\n\t\tAssert.assertNotNull(testedObject2.getOutput());\n\n\t\t// dispose\n\t\ttestedObject2.dispose(true);\n\t}", "signature": "void execute()", "full_signature": "@Test public final void execute()", "class_method_signature": "BaseCoverageProcessingNodeTest.execute()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getOutput", "assertNotNull", "getOutput", "addSource", "addSink", "assertNotNull", "getOutput", "dispose"]}, "focal_class": {"identifier": "BaseCoverageProcessingNode", "superclass": "", "interfaces": "implements\n\t\tCoverageProcessingNode", "fields": [{"original_string": "private final static CoverageProcessingCycleDetector cycleDetector = new CoverageProcessingCycleDetector();", "modifier": "private final static", "type": "CoverageProcessingCycleDetector", "declarator": "cycleDetector = new CoverageProcessingCycleDetector()", "var_name": "cycleDetector"}, {"original_string": "private final static Logger LOGGER = Logger\n\t\t\t.getLogger(BaseCoverageProcessingNode.class.getName());", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = Logger\n\t\t\t.getLogger(BaseCoverageProcessingNode.class.getName())", "var_name": "LOGGER"}, {"original_string": "private final List<CoverageProcessingNode> sources = new ArrayList<CoverageProcessingNode>();", "modifier": "private final", "type": "List<CoverageProcessingNode>", "declarator": "sources = new ArrayList<CoverageProcessingNode>()", "var_name": "sources"}, {"original_string": "private final List<CoverageProcessingNode> sinks = new ArrayList<CoverageProcessingNode>();", "modifier": "private final", "type": "List<CoverageProcessingNode>", "declarator": "sinks = new ArrayList<CoverageProcessingNode>()", "var_name": "sinks"}, {"original_string": "private GridCoverage2D output;", "modifier": "private", "type": "GridCoverage2D", "declarator": "output", "var_name": "output"}, {"original_string": "private boolean executed = false;", "modifier": "private", "type": "boolean", "declarator": "executed = false", "var_name": "executed"}, {"original_string": "private int maximumNumberOfSources = -1;", "modifier": "private", "type": "int", "declarator": "maximumNumberOfSources = -1", "var_name": "maximumNumberOfSources"}, {"original_string": "private Hints hints;", "modifier": "private", "type": "Hints", "declarator": "hints", "var_name": "hints"}, {"original_string": "final GridCoverageFactory coverageFactory;", "modifier": "final", "type": "GridCoverageFactory", "declarator": "coverageFactory", "var_name": "coverageFactory"}, {"original_string": "private Throwable error;", "modifier": "private", "type": "Throwable", "declarator": "error", "var_name": "error"}, {"original_string": "private boolean disposed;", "modifier": "private", "type": "boolean", "declarator": "disposed", "var_name": "disposed"}, {"original_string": "private InternationalString name = Vocabulary.formatInternational(VocabularyKeys.BASE_COVERAGE_PROCESSING);", "modifier": "private", "type": "InternationalString", "declarator": "name = Vocabulary.formatInternational(VocabularyKeys.BASE_COVERAGE_PROCESSING)", "var_name": "name"}, {"original_string": "private InternationalString description;", "modifier": "private", "type": "InternationalString", "declarator": "description", "var_name": "description"}], "methods": [{"identifier": "BaseCoverageProcessingNode", "parameters": "(InternationalString name,\n\t\t\tInternationalString description)", "modifiers": "public", "return": "", "signature": " BaseCoverageProcessingNode(InternationalString name,\n\t\t\tInternationalString description)", "full_signature": "public  BaseCoverageProcessingNode(InternationalString name,\n\t\t\tInternationalString description)", "class_method_signature": "BaseCoverageProcessingNode.BaseCoverageProcessingNode(InternationalString name,\n\t\t\tInternationalString description)", "testcase": false, "constructor": true}, {"identifier": "BaseCoverageProcessingNode", "parameters": "(int maxSources, InternationalString name,\n\t\t\tInternationalString description)", "modifiers": "public", "return": "", "signature": " BaseCoverageProcessingNode(int maxSources, InternationalString name,\n\t\t\tInternationalString description)", "full_signature": "public  BaseCoverageProcessingNode(int maxSources, InternationalString name,\n\t\t\tInternationalString description)", "class_method_signature": "BaseCoverageProcessingNode.BaseCoverageProcessingNode(int maxSources, InternationalString name,\n\t\t\tInternationalString description)", "testcase": false, "constructor": true}, {"identifier": "BaseCoverageProcessingNode", "parameters": "(int maxSources, Hints hints,\n\t\t\tInternationalString name, InternationalString description)", "modifiers": "public", "return": "", "signature": " BaseCoverageProcessingNode(int maxSources, Hints hints,\n\t\t\tInternationalString name, InternationalString description)", "full_signature": "public  BaseCoverageProcessingNode(int maxSources, Hints hints,\n\t\t\tInternationalString name, InternationalString description)", "class_method_signature": "BaseCoverageProcessingNode.BaseCoverageProcessingNode(int maxSources, Hints hints,\n\t\t\tInternationalString name, InternationalString description)", "testcase": false, "constructor": true}, {"identifier": "checkExecuted", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkExecuted()", "full_signature": "private void checkExecuted()", "class_method_signature": "BaseCoverageProcessingNode.checkExecuted()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "protected abstract", "return": "GridCoverage", "signature": "GridCoverage execute()", "full_signature": "protected abstract GridCoverage execute()", "class_method_signature": "BaseCoverageProcessingNode.execute()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "(boolean force)", "modifiers": "public", "return": "void", "signature": "void dispose(boolean force)", "full_signature": "public void dispose(boolean force)", "class_method_signature": "BaseCoverageProcessingNode.dispose(boolean force)", "testcase": false, "constructor": false}, {"identifier": "getOutput", "parameters": "()", "modifiers": "public", "return": "GridCoverage2D", "signature": "GridCoverage2D getOutput()", "full_signature": "public GridCoverage2D getOutput()", "class_method_signature": "BaseCoverageProcessingNode.getOutput()", "testcase": false, "constructor": false}, {"identifier": "addSink", "parameters": "(CoverageProcessingNode sink)", "modifiers": "public", "return": "void", "signature": "void addSink(CoverageProcessingNode sink)", "full_signature": "public void addSink(CoverageProcessingNode sink)", "class_method_signature": "BaseCoverageProcessingNode.addSink(CoverageProcessingNode sink)", "testcase": false, "constructor": false}, {"identifier": "cleanOutput", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanOutput()", "full_signature": "private void cleanOutput()", "class_method_signature": "BaseCoverageProcessingNode.cleanOutput()", "testcase": false, "constructor": false}, {"identifier": "addSource", "parameters": "(CoverageProcessingNode source)", "modifiers": "public", "return": "boolean", "signature": "boolean addSource(CoverageProcessingNode source)", "full_signature": "public boolean addSource(CoverageProcessingNode source)", "class_method_signature": "BaseCoverageProcessingNode.addSource(CoverageProcessingNode source)", "testcase": false, "constructor": false}, {"identifier": "detectCycle", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void detectCycle()", "full_signature": "private void detectCycle()", "class_method_signature": "BaseCoverageProcessingNode.detectCycle()", "testcase": false, "constructor": false}, {"identifier": "checkNumSources", "parameters": "(final int sourcesToAdd)", "modifiers": "private", "return": "void", "signature": "void checkNumSources(final int sourcesToAdd)", "full_signature": "private void checkNumSources(final int sourcesToAdd)", "class_method_signature": "BaseCoverageProcessingNode.checkNumSources(final int sourcesToAdd)", "testcase": false, "constructor": false}, {"identifier": "getSink", "parameters": "(int index)", "modifiers": "public", "return": "CoverageProcessingNode", "signature": "CoverageProcessingNode getSink(int index)", "full_signature": "public CoverageProcessingNode getSink(int index)", "class_method_signature": "BaseCoverageProcessingNode.getSink(int index)", "testcase": false, "constructor": false}, {"identifier": "getSinks", "parameters": "()", "modifiers": "public", "return": "List<CoverageProcessingNode>", "signature": "List<CoverageProcessingNode> getSinks()", "full_signature": "public List<CoverageProcessingNode> getSinks()", "class_method_signature": "BaseCoverageProcessingNode.getSinks()", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "(int index)", "modifiers": "public", "return": "CoverageProcessingNode", "signature": "CoverageProcessingNode getSource(int index)", "full_signature": "public CoverageProcessingNode getSource(int index)", "class_method_signature": "BaseCoverageProcessingNode.getSource(int index)", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "()", "modifiers": "public", "return": "List<CoverageProcessingNode>", "signature": "List<CoverageProcessingNode> getSources()", "full_signature": "public List<CoverageProcessingNode> getSources()", "class_method_signature": "BaseCoverageProcessingNode.getSources()", "testcase": false, "constructor": false}, {"identifier": "removeSink", "parameters": "(CoverageProcessingNode sink)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSink(CoverageProcessingNode sink)", "full_signature": "public boolean removeSink(CoverageProcessingNode sink)", "class_method_signature": "BaseCoverageProcessingNode.removeSink(CoverageProcessingNode sink)", "testcase": false, "constructor": false}, {"identifier": "removeSink", "parameters": "(int index)", "modifiers": "public", "return": "CoverageProcessingNode", "signature": "CoverageProcessingNode removeSink(int index)", "full_signature": "public CoverageProcessingNode removeSink(int index)", "class_method_signature": "BaseCoverageProcessingNode.removeSink(int index)", "testcase": false, "constructor": false}, {"identifier": "removeSource", "parameters": "(CoverageProcessingNode source)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSource(CoverageProcessingNode source)", "full_signature": "public boolean removeSource(CoverageProcessingNode source)", "class_method_signature": "BaseCoverageProcessingNode.removeSource(CoverageProcessingNode source)", "testcase": false, "constructor": false}, {"identifier": "getHints", "parameters": "()", "modifiers": "public", "return": "Hints", "signature": "Hints getHints()", "full_signature": "public Hints getHints()", "class_method_signature": "BaseCoverageProcessingNode.getHints()", "testcase": false, "constructor": false}, {"identifier": "getMaximumNumberOfSources", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaximumNumberOfSources()", "full_signature": "public int getMaximumNumberOfSources()", "class_method_signature": "BaseCoverageProcessingNode.getMaximumNumberOfSources()", "testcase": false, "constructor": false}, {"identifier": "getCoverageFactory", "parameters": "()", "modifiers": "public", "return": "GridCoverageFactory", "signature": "GridCoverageFactory getCoverageFactory()", "full_signature": "public GridCoverageFactory getCoverageFactory()", "class_method_signature": "BaseCoverageProcessingNode.getCoverageFactory()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfSinks", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfSinks()", "full_signature": "public int getNumberOfSinks()", "class_method_signature": "BaseCoverageProcessingNode.getNumberOfSinks()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfSources", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfSources()", "full_signature": "public int getNumberOfSources()", "class_method_signature": "BaseCoverageProcessingNode.getNumberOfSources()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "InternationalString", "signature": "InternationalString getDescription()", "full_signature": "public InternationalString getDescription()", "class_method_signature": "BaseCoverageProcessingNode.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "InternationalString", "signature": "InternationalString getName()", "full_signature": "public InternationalString getName()", "class_method_signature": "BaseCoverageProcessingNode.getName()", "testcase": false, "constructor": false}, {"identifier": "ensureSourceNotNull", "parameters": "(final Object source,\n\t\t\tfinal String name)", "modifiers": "protected static", "return": "void", "signature": "void ensureSourceNotNull(final Object source,\n\t\t\tfinal String name)", "full_signature": "protected static void ensureSourceNotNull(final Object source,\n\t\t\tfinal String name)", "class_method_signature": "BaseCoverageProcessingNode.ensureSourceNotNull(final Object source,\n\t\t\tfinal String name)", "testcase": false, "constructor": false}, {"identifier": "ensureNotNull", "parameters": "(final Object source, final String name)", "modifiers": "protected static", "return": "void", "signature": "void ensureNotNull(final Object source, final String name)", "full_signature": "protected static void ensureNotNull(final Object source, final String name)", "class_method_signature": "BaseCoverageProcessingNode.ensureNotNull(final Object source, final String name)", "testcase": false, "constructor": false}, {"identifier": "removeSource", "parameters": "(int index)", "modifiers": "public", "return": "CoverageProcessingNode", "signature": "CoverageProcessingNode removeSource(int index)", "full_signature": "public CoverageProcessingNode removeSource(int index)", "class_method_signature": "BaseCoverageProcessingNode.removeSource(int index)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "BaseCoverageProcessingNode.toString()", "testcase": false, "constructor": false}, {"identifier": "isDisposed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDisposed()", "full_signature": "public boolean isDisposed()", "class_method_signature": "BaseCoverageProcessingNode.isDisposed()", "testcase": false, "constructor": false}, {"identifier": "isExecuted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isExecuted()", "full_signature": "public boolean isExecuted()", "class_method_signature": "BaseCoverageProcessingNode.isExecuted()", "testcase": false, "constructor": false}], "file": "modules/library/render/src/main/java/org/geotools/renderer/lite/gridcoverage2d/BaseCoverageProcessingNode.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "protected abstract", "return": "GridCoverage", "body": "protected abstract GridCoverage execute();", "signature": "GridCoverage execute()", "full_signature": "protected abstract GridCoverage execute()", "class_method_signature": "BaseCoverageProcessingNode.execute()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}