{"test_class": {"identifier": "MeasurementAsduHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEVICE_IDENTIFICATION = \"TEST-DEVICE-1\";", "modifier": "private static final", "type": "String", "declarator": "DEVICE_IDENTIFICATION = \"TEST-DEVICE-1\"", "var_name": "DEVICE_IDENTIFICATION"}, {"original_string": "private static final DeviceType DEVICE_TYPE = DeviceType.DISTRIBUTION_AUTOMATION_DEVICE;", "modifier": "private static final", "type": "DeviceType", "declarator": "DEVICE_TYPE = DeviceType.DISTRIBUTION_AUTOMATION_DEVICE", "var_name": "DEVICE_TYPE"}, {"original_string": "private static final String ORGANISATION_IDENTIFICATION = \"TEST-ORG-1\";", "modifier": "private static final", "type": "String", "declarator": "ORGANISATION_IDENTIFICATION = \"TEST-ORG-1\"", "var_name": "ORGANISATION_IDENTIFICATION"}, {"original_string": "private static final String CORRELATION_UID = \"TEST-CORR-1\";", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_UID = \"TEST-CORR-1\"", "var_name": "CORRELATION_UID"}, {"original_string": "@InjectMocks\n    private ShortFloatWithTime56MeasurementAsduHandler asduHandler;", "modifier": "@InjectMocks\n    private", "type": "ShortFloatWithTime56MeasurementAsduHandler", "declarator": "asduHandler", "var_name": "asduHandler"}, {"original_string": "@Mock\n    private ResponseMetadataFactory responseMetadataFactory;", "modifier": "@Mock\n    private", "type": "ResponseMetadataFactory", "declarator": "responseMetadataFactory", "var_name": "responseMetadataFactory"}, {"original_string": "@Mock\n    private DeviceResponseServiceRegistry deviceResponseServiceRegistry;", "modifier": "@Mock\n    private", "type": "DeviceResponseServiceRegistry", "declarator": "deviceResponseServiceRegistry", "var_name": "deviceResponseServiceRegistry"}, {"original_string": "@Mock\n    private AsduConverterService converter;", "modifier": "@Mock\n    private", "type": "AsduConverterService", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Mock\n    private LogItemFactory logItemFactory;", "modifier": "@Mock\n    private", "type": "LogItemFactory", "declarator": "logItemFactory", "var_name": "logItemFactory"}, {"original_string": "@Mock\n    private DistributionAutomationDeviceResponseService deviceResponseService;", "modifier": "@Mock\n    private", "type": "DistributionAutomationDeviceResponseService", "declarator": "deviceResponseService", "var_name": "deviceResponseService"}, {"original_string": "@Mock\n    private LoggingService loggingService;", "modifier": "@Mock\n    private", "type": "LoggingService", "declarator": "loggingService", "var_name": "loggingService"}, {"original_string": "private final MapperFacade mapper = new Iec60870Mapper();", "modifier": "private final", "type": "MapperFacade", "declarator": "mapper = new Iec60870Mapper()", "var_name": "mapper"}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/test/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/asduhandlers/MeasurementAsduHandlerTest.java"}, "test_case": {"identifier": "shouldSendMeasurementReportAndLogItemWhenHandlingAsdu", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSendMeasurementReportAndLogItemWhenHandlingAsdu() throws Exception {\n        // Arrange\n        final ASdu asdu = AsduFactory.ofType(ASduType.M_ME_TF_1);\n        final MeasurementReportDto measurementReportDto = this.mapper.map(asdu, MeasurementReportDto.class);\n        final ResponseMetadata responseMetadata = new ResponseMetadata.Builder().withCorrelationUid(CORRELATION_UID)\n                .withDeviceIdentification(DEVICE_IDENTIFICATION)\n                .withDeviceType(DEVICE_TYPE)\n                .withOrganisationIdentification(ORGANISATION_IDENTIFICATION)\n                .build();\n        final LogItem logItem = new LogItem(DEVICE_IDENTIFICATION, ORGANISATION_IDENTIFICATION, true, asdu.toString());\n\n        when(this.responseMetadataFactory.createWithNewCorrelationUid(responseMetadata)).thenReturn(responseMetadata);\n        when(this.converter.convert(asdu)).thenReturn(measurementReportDto);\n        when(this.deviceResponseServiceRegistry.forDeviceType(DEVICE_TYPE)).thenReturn(this.deviceResponseService);\n        when(this.logItemFactory.create(asdu, responseMetadata, true)).thenReturn(logItem);\n        // Act\n        this.asduHandler.handleAsdu(asdu, responseMetadata);\n\n        // Assert\n        verify(this.deviceResponseService).process(measurementReportDto, responseMetadata);\n        verify(this.loggingService).log(logItem);\n    }", "signature": "void shouldSendMeasurementReportAndLogItemWhenHandlingAsdu()", "full_signature": "@Test public void shouldSendMeasurementReportAndLogItemWhenHandlingAsdu()", "class_method_signature": "MeasurementAsduHandlerTest.shouldSendMeasurementReportAndLogItemWhenHandlingAsdu()", "testcase": true, "constructor": false, "invocations": ["ofType", "map", "build", "withOrganisationIdentification", "withDeviceType", "withDeviceIdentification", "withCorrelationUid", "toString", "thenReturn", "when", "createWithNewCorrelationUid", "thenReturn", "when", "convert", "thenReturn", "when", "forDeviceType", "thenReturn", "when", "create", "handleAsdu", "process", "verify", "log", "verify"]}, "focal_class": {"identifier": "MeasurementAsduHandler", "superclass": "extends AbstractClientAsduHandler", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MeasurementAsduHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MeasurementAsduHandler.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AsduConverterService converter;", "modifier": "@Autowired\n    private", "type": "AsduConverterService", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Autowired\n    private DeviceResponseServiceRegistry deviceResponseServiceRegistry;", "modifier": "@Autowired\n    private", "type": "DeviceResponseServiceRegistry", "declarator": "deviceResponseServiceRegistry", "var_name": "deviceResponseServiceRegistry"}, {"original_string": "@Autowired\n    private LoggingService loggingService;", "modifier": "@Autowired\n    private", "type": "LoggingService", "declarator": "loggingService", "var_name": "loggingService"}, {"original_string": "@Autowired\n    protected ResponseMetadataFactory responseMetadataFactory;", "modifier": "@Autowired\n    protected", "type": "ResponseMetadataFactory", "declarator": "responseMetadataFactory", "var_name": "responseMetadataFactory"}, {"original_string": "@Autowired\n    private LogItemFactory logItemFactory;", "modifier": "@Autowired\n    private", "type": "LogItemFactory", "declarator": "logItemFactory", "var_name": "logItemFactory"}], "methods": [{"identifier": "MeasurementAsduHandler", "parameters": "(final ASduType asduType)", "modifiers": "public", "return": "", "signature": " MeasurementAsduHandler(final ASduType asduType)", "full_signature": "public  MeasurementAsduHandler(final ASduType asduType)", "class_method_signature": "MeasurementAsduHandler.MeasurementAsduHandler(final ASduType asduType)", "testcase": false, "constructor": true}, {"identifier": "handleAsdu", "parameters": "(final ASdu asdu, final ResponseMetadata responseMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "full_signature": "@Override public void handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "class_method_signature": "MeasurementAsduHandler.handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/asduhandlers/MeasurementAsduHandler.java"}, "focal_method": {"identifier": "handleAsdu", "parameters": "(final ASdu asdu, final ResponseMetadata responseMetadata)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata) {\n        LOGGER.info(\"Received measurement of type {}.\", asdu.getTypeIdentification());\n        final ResponseMetadata newResponseMetadata = this.responseMetadataFactory\n                .createWithNewCorrelationUid(responseMetadata);\n\n        final MeasurementReportDto measurementReportDto = this.converter.convert(asdu);\n        this.deviceResponseServiceRegistry.forDeviceType(responseMetadata.getDeviceType())\n                .process(measurementReportDto, newResponseMetadata);\n\n        final LogItem logItem = this.logItemFactory.create(asdu, newResponseMetadata, true);\n        this.loggingService.log(logItem);\n    }", "signature": "void handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "full_signature": "@Override public void handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "class_method_signature": "MeasurementAsduHandler.handleAsdu(final ASdu asdu, final ResponseMetadata responseMetadata)", "testcase": false, "constructor": false, "invocations": ["info", "getTypeIdentification", "createWithNewCorrelationUid", "convert", "process", "forDeviceType", "getDeviceType", "create", "log"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}