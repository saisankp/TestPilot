{"test_class": {"identifier": "VulnerabilityConnectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Map<UpdateType, List<Vulnerability>> statusToVulnerabilityMap;", "modifier": "", "type": "Map<UpdateType, List<Vulnerability>>", "declarator": "statusToVulnerabilityMap", "var_name": "statusToVulnerabilityMap"}, {"original_string": "@Mock\n    VulnerabilityDatabaseHandler vulnerabilityDatabaseHandler;", "modifier": "@Mock", "type": "VulnerabilityDatabaseHandler", "declarator": "vulnerabilityDatabaseHandler", "var_name": "vulnerabilityDatabaseHandler"}, {"original_string": "@InjectMocks\n    VulnerabilityConnector vulnerabilityConnector;", "modifier": "@InjectMocks", "type": "VulnerabilityConnector", "declarator": "vulnerabilityConnector", "var_name": "vulnerabilityConnector"}], "file": "backend/src/src-cvesearch/src/test/java/org/eclipse/sw360/cvesearch/datasink/VulnerabilityConnectorTest.java"}, "test_case": {"identifier": "testIsMoreRecentFirstOlder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsMoreRecentFirstOlder() throws Exception {\n        Vulnerability v1 = new Vulnerability().setLastExternalUpdate(\"2015\");\n        Vulnerability v2 = new Vulnerability().setLastExternalUpdate(\"2016\");\n        assertThat(vulnerabilityConnector.isMoreRecent(v1, v2), is(false));\n    }", "signature": "void testIsMoreRecentFirstOlder()", "full_signature": "@Test public void testIsMoreRecentFirstOlder()", "class_method_signature": "VulnerabilityConnectorTest.testIsMoreRecentFirstOlder()", "testcase": true, "constructor": false, "invocations": ["setLastExternalUpdate", "setLastExternalUpdate", "assertThat", "isMoreRecent", "is"]}, "focal_class": {"identifier": "VulnerabilityConnector", "superclass": "", "interfaces": "", "fields": [{"original_string": "VulnerabilityDatabaseHandler vulnerabilityDatabaseHandler;", "modifier": "", "type": "VulnerabilityDatabaseHandler", "declarator": "vulnerabilityDatabaseHandler", "var_name": "vulnerabilityDatabaseHandler"}, {"original_string": "ProjectDatabaseHandler projectDatabaseHandler;", "modifier": "", "type": "ProjectDatabaseHandler", "declarator": "projectDatabaseHandler", "var_name": "projectDatabaseHandler"}, {"original_string": "ComponentRepository componentRepository;", "modifier": "", "type": "ComponentRepository", "declarator": "componentRepository", "var_name": "componentRepository"}, {"original_string": "ReleaseRepository releaseRepository;", "modifier": "", "type": "ReleaseRepository", "declarator": "releaseRepository", "var_name": "releaseRepository"}, {"original_string": "ProjectRepository projectRepository;", "modifier": "", "type": "ProjectRepository", "declarator": "projectRepository", "var_name": "projectRepository"}, {"original_string": "VendorRepository vendorRepository;", "modifier": "", "type": "VendorRepository", "declarator": "vendorRepository", "var_name": "vendorRepository"}], "methods": [{"identifier": "VulnerabilityConnector", "parameters": "()", "modifiers": "public", "return": "", "signature": " VulnerabilityConnector()", "full_signature": "public  VulnerabilityConnector()", "class_method_signature": "VulnerabilityConnector.VulnerabilityConnector()", "testcase": false, "constructor": true}, {"identifier": "getRelease", "parameters": "(String releaseId)", "modifiers": "public", "return": "Optional<Release>", "signature": "Optional<Release> getRelease(String releaseId)", "full_signature": "public Optional<Release> getRelease(String releaseId)", "class_method_signature": "VulnerabilityConnector.getRelease(String releaseId)", "testcase": false, "constructor": false}, {"identifier": "getComponent", "parameters": "(String componentId)", "modifiers": "public", "return": "Optional<Component>", "signature": "Optional<Component> getComponent(String componentId)", "full_signature": "public Optional<Component> getComponent(String componentId)", "class_method_signature": "VulnerabilityConnector.getComponent(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getProject", "parameters": "(String projectId)", "modifiers": "public", "return": "Optional<Project>", "signature": "Optional<Project> getProject(String projectId)", "full_signature": "public Optional<Project> getProject(String projectId)", "class_method_signature": "VulnerabilityConnector.getProject(String projectId)", "testcase": false, "constructor": false}, {"identifier": "getAllReleases", "parameters": "()", "modifiers": "public", "return": "List<Release>", "signature": "List<Release> getAllReleases()", "full_signature": "public List<Release> getAllReleases()", "class_method_signature": "VulnerabilityConnector.getAllReleases()", "testcase": false, "constructor": false}, {"identifier": "isMoreRecent", "parameters": "(Vulnerability vulnerability, Vulnerability other)", "modifiers": "public", "return": "boolean", "signature": "boolean isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "full_signature": "public boolean isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "class_method_signature": "VulnerabilityConnector.isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdate", "parameters": "(ReleaseVulnerabilityRelation partiallyFilledRelation)", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus addOrUpdate(ReleaseVulnerabilityRelation partiallyFilledRelation)", "full_signature": "public RequestStatus addOrUpdate(ReleaseVulnerabilityRelation partiallyFilledRelation)", "class_method_signature": "VulnerabilityConnector.addOrUpdate(ReleaseVulnerabilityRelation partiallyFilledRelation)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdate", "parameters": "(Vulnerability vulnerability, ReleaseVulnerabilityRelation partiallyFilledRelation)", "modifiers": "public", "return": "UpdateType", "signature": "UpdateType addOrUpdate(Vulnerability vulnerability, ReleaseVulnerabilityRelation partiallyFilledRelation)", "full_signature": "public UpdateType addOrUpdate(Vulnerability vulnerability, ReleaseVulnerabilityRelation partiallyFilledRelation)", "class_method_signature": "VulnerabilityConnector.addOrUpdate(Vulnerability vulnerability, ReleaseVulnerabilityRelation partiallyFilledRelation)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdate", "parameters": "(Vulnerability vulnerability,\n                                                 ReleaseVulnerabilityRelation partiallyFilledRelation,\n                                                 VulnerabilityUpdateStatus currentVulnerabilityUpdateStatus)", "modifiers": "public", "return": "VulnerabilityUpdateStatus", "signature": "VulnerabilityUpdateStatus addOrUpdate(Vulnerability vulnerability,\n                                                 ReleaseVulnerabilityRelation partiallyFilledRelation,\n                                                 VulnerabilityUpdateStatus currentVulnerabilityUpdateStatus)", "full_signature": "public VulnerabilityUpdateStatus addOrUpdate(Vulnerability vulnerability,\n                                                 ReleaseVulnerabilityRelation partiallyFilledRelation,\n                                                 VulnerabilityUpdateStatus currentVulnerabilityUpdateStatus)", "class_method_signature": "VulnerabilityConnector.addOrUpdate(Vulnerability vulnerability,\n                                                 ReleaseVulnerabilityRelation partiallyFilledRelation,\n                                                 VulnerabilityUpdateStatus currentVulnerabilityUpdateStatus)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateVulnerabilityAndSetId", "parameters": "(\n            Vulnerability vulnerability,\n            Map<UpdateType, List<Vulnerability>> statusToVulnerabilities)", "modifiers": "public", "return": "Map<UpdateType, List<Vulnerability>>", "signature": "Map<UpdateType, List<Vulnerability>> addOrUpdateVulnerabilityAndSetId(\n            Vulnerability vulnerability,\n            Map<UpdateType, List<Vulnerability>> statusToVulnerabilities)", "full_signature": "public Map<UpdateType, List<Vulnerability>> addOrUpdateVulnerabilityAndSetId(\n            Vulnerability vulnerability,\n            Map<UpdateType, List<Vulnerability>> statusToVulnerabilities)", "class_method_signature": "VulnerabilityConnector.addOrUpdateVulnerabilityAndSetId(\n            Vulnerability vulnerability,\n            Map<UpdateType, List<Vulnerability>> statusToVulnerabilities)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateVulnerabilitiesAndSetIds", "parameters": "(List<Vulnerability> vulnerabilities)", "modifiers": "public", "return": "Map<UpdateType, List<Vulnerability>>", "signature": "Map<UpdateType, List<Vulnerability>> addOrUpdateVulnerabilitiesAndSetIds(List<Vulnerability> vulnerabilities)", "full_signature": "public Map<UpdateType, List<Vulnerability>> addOrUpdateVulnerabilitiesAndSetIds(List<Vulnerability> vulnerabilities)", "class_method_signature": "VulnerabilityConnector.addOrUpdateVulnerabilitiesAndSetIds(List<Vulnerability> vulnerabilities)", "testcase": false, "constructor": false}, {"identifier": "addReleaseVulnerabilityRelationsIfNecessary", "parameters": "(String releaseId, List<String> vulnerabilityIds)", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus addReleaseVulnerabilityRelationsIfNecessary(String releaseId, List<String> vulnerabilityIds)", "full_signature": "public RequestStatus addReleaseVulnerabilityRelationsIfNecessary(String releaseId, List<String> vulnerabilityIds)", "class_method_signature": "VulnerabilityConnector.addReleaseVulnerabilityRelationsIfNecessary(String releaseId, List<String> vulnerabilityIds)", "testcase": false, "constructor": false}, {"identifier": "addReleaseVulnerabilityRelationsIfNecessary", "parameters": "(String releaseId, Map<String,List<String>> needleToVulnerabilityIds)", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus addReleaseVulnerabilityRelationsIfNecessary(String releaseId, Map<String,List<String>> needleToVulnerabilityIds)", "full_signature": "public RequestStatus addReleaseVulnerabilityRelationsIfNecessary(String releaseId, Map<String,List<String>> needleToVulnerabilityIds)", "class_method_signature": "VulnerabilityConnector.addReleaseVulnerabilityRelationsIfNecessary(String releaseId, Map<String,List<String>> needleToVulnerabilityIds)", "testcase": false, "constructor": false}], "file": "backend/src/src-cvesearch/src/main/java/org/eclipse/sw360/cvesearch/datasink/VulnerabilityConnector.java"}, "focal_method": {"identifier": "isMoreRecent", "parameters": "(Vulnerability vulnerability, Vulnerability other)", "modifiers": "public", "return": "boolean", "body": "public boolean isMoreRecent(Vulnerability vulnerability, Vulnerability other) {\n        //update if one of the dates is not set\n        if (Strings.isNullOrEmpty(vulnerability.getLastExternalUpdate()) ||\n                Strings.isNullOrEmpty(other.getLastExternalUpdate())) {\n            return true;\n        }\n\n        return vulnerability.getLastExternalUpdate().compareTo(other.getLastExternalUpdate()) > 0;\n    }", "signature": "boolean isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "full_signature": "public boolean isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "class_method_signature": "VulnerabilityConnector.isMoreRecent(Vulnerability vulnerability, Vulnerability other)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "getLastExternalUpdate", "isNullOrEmpty", "getLastExternalUpdate", "compareTo", "getLastExternalUpdate", "getLastExternalUpdate"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}