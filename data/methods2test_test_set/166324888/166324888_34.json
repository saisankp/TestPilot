{"test_class": {"identifier": "DelegateDetailPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DelegateDetailContract.View view;", "modifier": "@Mock\n    private", "type": "DelegateDetailContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private DelegateDetailPresenter presenter;", "modifier": "private", "type": "DelegateDetailPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/DelegateDetailPresenterTest.java"}, "test_case": {"identifier": "getBuildDelegateItemInfoList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void getBuildDelegateItemInfoList(){\n\n       List<DelegateItemInfo> delegateInfoList = new ArrayList<>();\n\n       DelegateItemInfo delegateItemInfo = new DelegateItemInfo();\n       delegateItemInfo.setNodeId(\"101\");\n       delegateItemInfo.setWalletAddress(\"lat1x8z5nfgjnaryutayxxkzzkrfzenpwl7k6r2a8z\");\n       delegateItemInfo.setNodeName(\"\u8282\u70b9\u4e00\");\n\n       DelegateItemInfo delegateItemInfo2 = new DelegateItemInfo();\n       delegateItemInfo2.setNodeId(\"101\");\n       delegateItemInfo2.setWalletAddress(\"lax1x8z5nfgjnaryutayxxkzzkrfzenpwl7k4xcjfd\");\n       delegateItemInfo2.setNodeName(\"\u8282\u70b9\u4e8c\");\n\n       delegateInfoList.add(delegateItemInfo);\n       delegateInfoList.add(delegateItemInfo2);\n\n\n       List<DelegateItemInfo> delegateItemInfos = presenter.buildDelegateItemInfoList(delegateInfoList,\"0xfb1b74328f936973a59620d683e1b1acb487d9e7\");\n       LogUtils.i(\"---delegateItemInfos\u4e4b\u6570\u636e:\" + delegateItemInfos.size());\n\n\n   }", "signature": "void getBuildDelegateItemInfoList()", "full_signature": "@Test public void getBuildDelegateItemInfoList()", "class_method_signature": "DelegateDetailPresenterTest.getBuildDelegateItemInfoList()", "testcase": true, "constructor": false, "invocations": ["setNodeId", "setWalletAddress", "setNodeName", "setNodeId", "setWalletAddress", "setNodeName", "add", "add", "buildDelegateItemInfoList", "i", ");"]}, "focal_class": {"identifier": "DelegateDetailPresenter", "superclass": "extends BasePresenter<DelegateDetailContract.View>", "interfaces": "implements DelegateDetailContract.Presenter", "fields": [{"original_string": "private DelegateNodeDetail mDelegateNodeDetail;", "modifier": "private", "type": "DelegateNodeDetail", "declarator": "mDelegateNodeDetail", "var_name": "mDelegateNodeDetail"}], "methods": [{"identifier": "loadDelegateDetailData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void loadDelegateDetailData()", "full_signature": "@Override public void loadDelegateDetailData()", "class_method_signature": "DelegateDetailPresenter.loadDelegateDetailData()", "testcase": false, "constructor": false}, {"identifier": "getDelegateDetailData", "parameters": "(DelegateInfo delegateInfo)", "modifiers": "private", "return": "void", "signature": "void getDelegateDetailData(DelegateInfo delegateInfo)", "full_signature": "private void getDelegateDetailData(DelegateInfo delegateInfo)", "class_method_signature": "DelegateDetailPresenter.getDelegateDetailData(DelegateInfo delegateInfo)", "testcase": false, "constructor": false}, {"identifier": "buildDelegateItemInfoList", "parameters": "(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "modifiers": "public", "return": "List<DelegateItemInfo>", "signature": "List<DelegateItemInfo> buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "full_signature": "public List<DelegateItemInfo> buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "class_method_signature": "DelegateDetailPresenter.buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "testcase": false, "constructor": false}, {"identifier": "getDelegateItemInfoList", "parameters": "()", "modifiers": "private", "return": "List<DelegateItemInfo>", "signature": "List<DelegateItemInfo> getDelegateItemInfoList()", "full_signature": "private List<DelegateItemInfo> getDelegateItemInfoList()", "class_method_signature": "DelegateDetailPresenter.getDelegateItemInfoList()", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/DelegateDetailPresenter.java"}, "focal_method": {"identifier": "buildDelegateItemInfoList", "parameters": "(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "modifiers": "public", "return": "List<DelegateItemInfo>", "body": "public List<DelegateItemInfo> buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress) {\n        if (delegateInfoList == null || delegateInfoList.isEmpty() || TextUtils.isEmpty(walletAddress)) {\n            return delegateInfoList;\n        }\n\n        return Flowable\n                .fromIterable(delegateInfoList)\n                .map(new Function<DelegateItemInfo, DelegateItemInfo>() {\n                    @Override\n                    public DelegateItemInfo apply(DelegateItemInfo delegateItemInfo) throws Exception {\n                        delegateItemInfo.setWalletAddress(walletAddress);\n                        return delegateItemInfo;\n                    }\n                })\n                .toList()\n                .blockingGet();\n    }", "signature": "List<DelegateItemInfo> buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "full_signature": "public List<DelegateItemInfo> buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "class_method_signature": "DelegateDetailPresenter.buildDelegateItemInfoList(List<DelegateItemInfo> delegateInfoList, String walletAddress)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "isEmpty", "blockingGet", "toList", "map", "fromIterable", "setWalletAddress"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}