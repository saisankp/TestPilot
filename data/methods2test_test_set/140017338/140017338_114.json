{"test_class": {"identifier": "SW360ProjectAdapterUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROJECT_VERSION = \"1.0-projectVersion\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_VERSION = \"1.0-projectVersion\"", "var_name": "PROJECT_VERSION"}, {"original_string": "private static final String PROJECT_NAME = \"projectName\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_NAME = \"projectName\"", "var_name": "PROJECT_NAME"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ProjectAdapterUtilsTest.java"}, "test_case": {"identifier": "testHasEqualCoordinatesFalseByVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHasEqualCoordinatesFalseByVersion() {\n        SW360Project project = new SW360Project()\n                .setName(PROJECT_NAME)\n                .setVersion(PROJECT_VERSION);\n\n        boolean hasEqualCoordinates = SW360ProjectAdapterUtils.hasEqualCoordinates(project, PROJECT_NAME, PROJECT_VERSION + \"-no\");\n\n        assertThat(hasEqualCoordinates).isFalse();\n    }", "signature": "void testHasEqualCoordinatesFalseByVersion()", "full_signature": "@Test public void testHasEqualCoordinatesFalseByVersion()", "class_method_signature": "SW360ProjectAdapterUtilsTest.testHasEqualCoordinatesFalseByVersion()", "testcase": true, "constructor": false, "invocations": ["setVersion", "setName", "hasEqualCoordinates", "isFalse", "assertThat"]}, "focal_class": {"identifier": "SW360ProjectAdapterUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SW360ProjectAdapterUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SW360ProjectAdapterUtils()", "full_signature": "private  SW360ProjectAdapterUtils()", "class_method_signature": "SW360ProjectAdapterUtils.SW360ProjectAdapterUtils()", "testcase": false, "constructor": true}, {"identifier": "isValidProject", "parameters": "(SW360Project project)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidProject(SW360Project project)", "full_signature": "public static boolean isValidProject(SW360Project project)", "class_method_signature": "SW360ProjectAdapterUtils.isValidProject(SW360Project project)", "testcase": false, "constructor": false}, {"identifier": "hasEqualCoordinates", "parameters": "(SW360Project sw360Project, String projectName, String projectVersion)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "full_signature": "public static boolean hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "class_method_signature": "SW360ProjectAdapterUtils.hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ProjectAdapterUtils.java"}, "focal_method": {"identifier": "hasEqualCoordinates", "parameters": "(SW360Project sw360Project, String projectName, String projectVersion)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion) {\n        boolean isAppIdEqual = sw360Project.getName().equalsIgnoreCase(projectName);\n        boolean isProjectVersionEqual = sw360Project.getVersion().equalsIgnoreCase(projectVersion);\n        return isAppIdEqual && isProjectVersionEqual;\n    }", "signature": "boolean hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "full_signature": "public static boolean hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "class_method_signature": "SW360ProjectAdapterUtils.hasEqualCoordinates(SW360Project sw360Project, String projectName, String projectVersion)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "getName", "equalsIgnoreCase", "getVersion"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}