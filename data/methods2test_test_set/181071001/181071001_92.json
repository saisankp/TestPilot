{"test_class": {"identifier": "TestStandardFDRemoteProcessGroupService", "superclass": "extends BaseFDServiceTest", "interfaces": "", "fields": [{"original_string": "private FDRemoteProcessGroupService service;", "modifier": "private", "type": "FDRemoteProcessGroupService", "declarator": "service", "var_name": "service"}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/test/java/com/cloudera/cem/efm/service/component/TestStandardFDRemoteProcessGroupService.java"}, "test_case": {"identifier": "testUpdateWithInvalidTransportProtocol", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testUpdateWithInvalidTransportProtocol() {\n        final String flowId = flow.getFlowMetadata().getIdentifier();\n        when(flowManager.getFlow(flowId)).thenReturn(Optional.of(flow));\n\n        final VersionedRemoteProcessGroup requestConfig = new VersionedRemoteProcessGroup();\n        requestConfig.setIdentifier(remoteProcessGroup.getIdentifier());\n        requestConfig.setTransportProtocol(\"INVALID\");\n\n        service.update(flowId, requestConfig);\n    }", "signature": "void testUpdateWithInvalidTransportProtocol()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testUpdateWithInvalidTransportProtocol()", "class_method_signature": "TestStandardFDRemoteProcessGroupService.testUpdateWithInvalidTransportProtocol()", "testcase": true, "constructor": false, "invocations": ["getIdentifier", "getFlowMetadata", "thenReturn", "when", "getFlow", "of", "setIdentifier", "getIdentifier", "setTransportProtocol", "update"]}, "focal_class": {"identifier": "StandardFDRemoteProcessGroupService", "superclass": "extends BaseComponentService<VersionedRemoteProcessGroup,FDRemoteProcessGroup>", "interfaces": "implements FDRemoteProcessGroupService", "fields": [{"original_string": "static final String TRANSPORT_PROTOCOL_RAW = \"RAW\";", "modifier": "static final", "type": "String", "declarator": "TRANSPORT_PROTOCOL_RAW = \"RAW\"", "var_name": "TRANSPORT_PROTOCOL_RAW"}, {"original_string": "static final String TRANSPORT_PROOTOCOL_HTTP = \"HTTP\";", "modifier": "static final", "type": "String", "declarator": "TRANSPORT_PROOTOCOL_HTTP = \"HTTP\"", "var_name": "TRANSPORT_PROOTOCOL_HTTP"}, {"original_string": "static final String DEFAULT_TRANSPORT_PROTOCOL = TRANSPORT_PROTOCOL_RAW;", "modifier": "static final", "type": "String", "declarator": "DEFAULT_TRANSPORT_PROTOCOL = TRANSPORT_PROTOCOL_RAW", "var_name": "DEFAULT_TRANSPORT_PROTOCOL"}, {"original_string": "static final String DEFAULT_YIELD_DURATION = \"10 sec\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_YIELD_DURATION = \"10 sec\"", "var_name": "DEFAULT_YIELD_DURATION"}, {"original_string": "static final String DEFAULT_COMMUNICATION_TIMEOUT = \"30 secs\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_COMMUNICATION_TIMEOUT = \"30 secs\"", "var_name": "DEFAULT_COMMUNICATION_TIMEOUT"}], "methods": [{"identifier": "StandardFDRemoteProcessGroupService", "parameters": "(final FDFlowManager flowManager, final ValidationService validationService)", "modifiers": "public", "return": "", "signature": " StandardFDRemoteProcessGroupService(final FDFlowManager flowManager, final ValidationService validationService)", "full_signature": "public  StandardFDRemoteProcessGroupService(final FDFlowManager flowManager, final ValidationService validationService)", "class_method_signature": "StandardFDRemoteProcessGroupService.StandardFDRemoteProcessGroupService(final FDFlowManager flowManager, final ValidationService validationService)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(final String flowId, final String processGroupId, final VersionedRemoteProcessGroup requestComponentConfig)", "modifiers": "@Override public", "return": "FDRemoteProcessGroup", "signature": "FDRemoteProcessGroup create(final String flowId, final String processGroupId, final VersionedRemoteProcessGroup requestComponentConfig)", "full_signature": "@Override public FDRemoteProcessGroup create(final String flowId, final String processGroupId, final VersionedRemoteProcessGroup requestComponentConfig)", "class_method_signature": "StandardFDRemoteProcessGroupService.create(final String flowId, final String processGroupId, final VersionedRemoteProcessGroup requestComponentConfig)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String flowId, final String componentId)", "modifiers": "@Override public", "return": "FDRemoteProcessGroup", "signature": "FDRemoteProcessGroup get(final String flowId, final String componentId)", "full_signature": "@Override public FDRemoteProcessGroup get(final String flowId, final String componentId)", "class_method_signature": "StandardFDRemoteProcessGroupService.get(final String flowId, final String componentId)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "modifiers": "@Override public", "return": "FDRemoteProcessGroup", "signature": "FDRemoteProcessGroup update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "full_signature": "@Override public FDRemoteProcessGroup update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "class_method_signature": "StandardFDRemoteProcessGroupService.update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final String flowId, final String componentId)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final String flowId, final String componentId)", "full_signature": "@Override public void delete(final String flowId, final String componentId)", "class_method_signature": "StandardFDRemoteProcessGroupService.delete(final String flowId, final String componentId)", "testcase": false, "constructor": false}, {"identifier": "instantiateComponent", "parameters": "(final VersionedRemoteProcessGroup componentConfig)", "modifiers": "@Override protected", "return": "FDRemoteProcessGroup", "signature": "FDRemoteProcessGroup instantiateComponent(final VersionedRemoteProcessGroup componentConfig)", "full_signature": "@Override protected FDRemoteProcessGroup instantiateComponent(final VersionedRemoteProcessGroup componentConfig)", "class_method_signature": "StandardFDRemoteProcessGroupService.instantiateComponent(final VersionedRemoteProcessGroup componentConfig)", "testcase": false, "constructor": false}, {"identifier": "configureComponentSpecifics", "parameters": "(final VersionedRemoteProcessGroup requestComponent, final VersionedRemoteProcessGroup resultComponent)", "modifiers": "@Override protected", "return": "void", "signature": "void configureComponentSpecifics(final VersionedRemoteProcessGroup requestComponent, final VersionedRemoteProcessGroup resultComponent)", "full_signature": "@Override protected void configureComponentSpecifics(final VersionedRemoteProcessGroup requestComponent, final VersionedRemoteProcessGroup resultComponent)", "class_method_signature": "StandardFDRemoteProcessGroupService.configureComponentSpecifics(final VersionedRemoteProcessGroup requestComponent, final VersionedRemoteProcessGroup resultComponent)", "testcase": false, "constructor": false}, {"identifier": "validateRequestValues", "parameters": "(final VersionedRemoteProcessGroup requestComponent)", "modifiers": "private", "return": "void", "signature": "void validateRequestValues(final VersionedRemoteProcessGroup requestComponent)", "full_signature": "private void validateRequestValues(final VersionedRemoteProcessGroup requestComponent)", "class_method_signature": "StandardFDRemoteProcessGroupService.validateRequestValues(final VersionedRemoteProcessGroup requestComponent)", "testcase": false, "constructor": false}, {"identifier": "validateTargetUris", "parameters": "(final String targetUris)", "modifiers": "private static", "return": "void", "signature": "void validateTargetUris(final String targetUris)", "full_signature": "private static void validateTargetUris(final String targetUris)", "class_method_signature": "StandardFDRemoteProcessGroupService.validateTargetUris(final String targetUris)", "testcase": false, "constructor": false}, {"identifier": "validateUriString", "parameters": "(String s)", "modifiers": "private static", "return": "void", "signature": "void validateUriString(String s)", "full_signature": "private static void validateUriString(String s)", "class_method_signature": "StandardFDRemoteProcessGroupService.validateUriString(String s)", "testcase": false, "constructor": false}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/main/java/com/cloudera/cem/efm/service/component/StandardFDRemoteProcessGroupService.java"}, "focal_method": {"identifier": "update", "parameters": "(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "modifiers": "@Override public", "return": "FDRemoteProcessGroup", "body": "@Override\n    public FDRemoteProcessGroup update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig) {\n        validateRequestValues(requestComponentConfig);\n        return updateComponent(flowId, requestComponentConfig, VersionedProcessGroup::getRemoteProcessGroups, null);\n    }", "signature": "FDRemoteProcessGroup update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "full_signature": "@Override public FDRemoteProcessGroup update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "class_method_signature": "StandardFDRemoteProcessGroupService.update(final String flowId, final VersionedRemoteProcessGroup requestComponentConfig)", "testcase": false, "constructor": false, "invocations": ["validateRequestValues", "updateComponent"]}, "repository": {"repo_id": 181071001, "url": "https://github.com/hortonworks/efm", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 2003, "license": "licensed"}}