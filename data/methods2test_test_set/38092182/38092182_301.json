{"test_class": {"identifier": "EventForwardingBroadcastReceiverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CustomEventInterstitialListener customEventInterstitialListener;", "modifier": "private", "type": "CustomEventInterstitialListener", "declarator": "customEventInterstitialListener", "var_name": "customEventInterstitialListener"}, {"original_string": "private EventForwardingBroadcastReceiver subject;", "modifier": "private", "type": "EventForwardingBroadcastReceiver", "declarator": "subject", "var_name": "subject"}, {"original_string": "private Activity context;", "modifier": "private", "type": "Activity", "declarator": "context", "var_name": "context"}, {"original_string": "private int broadcastIdentifier;", "modifier": "private", "type": "int", "declarator": "broadcastIdentifier", "var_name": "broadcastIdentifier"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java"}, "test_case": {"identifier": "onReceive_whenActionInterstitialDismiss_shouldNotifyListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onReceive_whenActionInterstitialDismiss_shouldNotifyListener() throws Exception {\n        Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, broadcastIdentifier);\n\n        subject.onReceive(context, intent);\n\n        verify(customEventInterstitialListener).onInterstitialDismissed();\n    }", "signature": "void onReceive_whenActionInterstitialDismiss_shouldNotifyListener()", "full_signature": "@Test public void onReceive_whenActionInterstitialDismiss_shouldNotifyListener()", "class_method_signature": "EventForwardingBroadcastReceiverTest.onReceive_whenActionInterstitialDismiss_shouldNotifyListener()", "testcase": true, "constructor": false, "invocations": ["getIntentForActionAndIdentifier", "onReceive", "onInterstitialDismissed", "verify"]}, "focal_class": {"identifier": "EventForwardingBroadcastReceiver", "superclass": "extends BroadcastReceiver", "interfaces": "", "fields": [{"original_string": "private final CustomEventInterstitialListener mCustomEventInterstitialListener;", "modifier": "private final", "type": "CustomEventInterstitialListener", "declarator": "mCustomEventInterstitialListener", "var_name": "mCustomEventInterstitialListener"}, {"original_string": "private final long mBroadcastIdentifier;", "modifier": "private final", "type": "long", "declarator": "mBroadcastIdentifier", "var_name": "mBroadcastIdentifier"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "static final String BROADCAST_IDENTIFIER_KEY = \"broadcastIdentifier\";", "modifier": "static final", "type": "String", "declarator": "BROADCAST_IDENTIFIER_KEY = \"broadcastIdentifier\"", "var_name": "BROADCAST_IDENTIFIER_KEY"}, {"original_string": "public static final String ACTION_INTERSTITIAL_FAIL = \"com.mopub.action.interstitial.fail\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_INTERSTITIAL_FAIL = \"com.mopub.action.interstitial.fail\"", "var_name": "ACTION_INTERSTITIAL_FAIL"}, {"original_string": "public static final String ACTION_INTERSTITIAL_SHOW = \"com.mopub.action.interstitial.show\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_INTERSTITIAL_SHOW = \"com.mopub.action.interstitial.show\"", "var_name": "ACTION_INTERSTITIAL_SHOW"}, {"original_string": "public static final String ACTION_INTERSTITIAL_DISMISS = \"com.mopub.action.interstitial.dismiss\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_INTERSTITIAL_DISMISS = \"com.mopub.action.interstitial.dismiss\"", "var_name": "ACTION_INTERSTITIAL_DISMISS"}, {"original_string": "public static final String ACTION_INTERSTITIAL_CLICK = \"com.mopub.action.interstitial.click\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_INTERSTITIAL_CLICK = \"com.mopub.action.interstitial.click\"", "var_name": "ACTION_INTERSTITIAL_CLICK"}, {"original_string": "private static IntentFilter sIntentFilter;", "modifier": "private static", "type": "IntentFilter", "declarator": "sIntentFilter", "var_name": "sIntentFilter"}], "methods": [{"identifier": "EventForwardingBroadcastReceiver", "parameters": "(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier)", "modifiers": "public", "return": "", "signature": " EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier)", "full_signature": "public  EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier)", "class_method_signature": "EventForwardingBroadcastReceiver.EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier)", "testcase": false, "constructor": true}, {"identifier": "broadcastAction", "parameters": "(final Context context, final long broadcastIdentifier, final String action)", "modifiers": "static", "return": "void", "signature": "void broadcastAction(final Context context, final long broadcastIdentifier, final String action)", "full_signature": "static void broadcastAction(final Context context, final long broadcastIdentifier, final String action)", "class_method_signature": "EventForwardingBroadcastReceiver.broadcastAction(final Context context, final long broadcastIdentifier, final String action)", "testcase": false, "constructor": false}, {"identifier": "getHtmlInterstitialIntentFilter", "parameters": "()", "modifiers": "public static", "return": "IntentFilter", "signature": "IntentFilter getHtmlInterstitialIntentFilter()", "full_signature": "public static IntentFilter getHtmlInterstitialIntentFilter()", "class_method_signature": "EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter()", "testcase": false, "constructor": false}, {"identifier": "onReceive", "parameters": "(Context context, Intent intent)", "modifiers": "@Override public", "return": "void", "signature": "void onReceive(Context context, Intent intent)", "full_signature": "@Override public void onReceive(Context context, Intent intent)", "class_method_signature": "EventForwardingBroadcastReceiver.onReceive(Context context, Intent intent)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Context context)", "modifiers": "public", "return": "void", "signature": "void register(Context context)", "full_signature": "public void register(Context context)", "class_method_signature": "EventForwardingBroadcastReceiver.register(Context context)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void unregister()", "full_signature": "public void unregister()", "class_method_signature": "EventForwardingBroadcastReceiver.unregister()", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java"}, "focal_method": {"identifier": "onReceive", "parameters": "(Context context, Intent intent)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onReceive(Context context, Intent intent) {\n        if (mCustomEventInterstitialListener == null) {\n            return;\n        }\n\n        /**\n         * Only consume this broadcast if the identifier on the received Intent and this broadcast\n         * match up. This allows us to target broadcasts to the ad that spawned them. We include\n         * this here because there is no appropriate IntentFilter condition that can recreate this\n         * behavior.\n         */\n        final long receivedIdentifier = intent.getLongExtra(BROADCAST_IDENTIFIER_KEY, -1);\n        if (mBroadcastIdentifier != receivedIdentifier) {\n            return;\n        }\n\n        final String action = intent.getAction();\n        if (ACTION_INTERSTITIAL_FAIL.equals(action)) {\n            mCustomEventInterstitialListener.onInterstitialFailed(NETWORK_INVALID_STATE);\n        } else if (ACTION_INTERSTITIAL_SHOW.equals(action)) {\n            mCustomEventInterstitialListener.onInterstitialShown();\n        } else if (ACTION_INTERSTITIAL_DISMISS.equals(action)) {\n            mCustomEventInterstitialListener.onInterstitialDismissed();\n            unregister();\n        } else if (ACTION_INTERSTITIAL_CLICK.equals(action)) {\n            mCustomEventInterstitialListener.onInterstitialClicked();\n        }\n\n    }", "signature": "void onReceive(Context context, Intent intent)", "full_signature": "@Override public void onReceive(Context context, Intent intent)", "class_method_signature": "EventForwardingBroadcastReceiver.onReceive(Context context, Intent intent)", "testcase": false, "constructor": false, "invocations": ["getLongExtra", "getAction", "equals", "onInterstitialFailed", "equals", "onInterstitialShown", "equals", "onInterstitialDismissed", "unregister", "equals", "onInterstitialClicked"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}