{"test_class": {"identifier": "StringValueConverterTest", "superclass": "extends ValueConverterTestCase<String>", "interfaces": "", "fields": [], "file": "rdf-orm/com.mobi.rdf.orm/src/test/java/com/mobi/rdf/orm/conversion/impl/StringValueConverterTest.java"}, "test_case": {"identifier": "testEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmpty() {\n        TestCase.assertEquals(\"\", valueConverter.convertValue(valueFactory.createLiteral(\"\"), null, type));\n    }", "signature": "void testEmpty()", "full_signature": "@Test public void testEmpty()", "class_method_signature": "StringValueConverterTest.testEmpty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "convertValue", "createLiteral"]}, "focal_class": {"identifier": "StringValueConverter", "superclass": "extends AbstractValueConverter<String>", "interfaces": "", "fields": [], "methods": [{"identifier": "StringValueConverter", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringValueConverter()", "full_signature": "public  StringValueConverter()", "class_method_signature": "StringValueConverter.StringValueConverter()", "testcase": false, "constructor": true}, {"identifier": "convertValue", "parameters": "(Value value, Thing thing, Class<? extends String> desiredType)", "modifiers": "@Override public", "return": "String", "signature": "String convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "full_signature": "@Override public String convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "class_method_signature": "StringValueConverter.convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "testcase": false, "constructor": false}, {"identifier": "convertType", "parameters": "(String type, Thing thing)", "modifiers": "@Override public", "return": "Value", "signature": "Value convertType(String type, Thing thing)", "full_signature": "@Override public Value convertType(String type, Thing thing)", "class_method_signature": "StringValueConverter.convertType(String type, Thing thing)", "testcase": false, "constructor": false}], "file": "rdf-orm/com.mobi.rdf.orm/src/main/java/com/mobi/rdf/orm/conversion/impl/StringValueConverter.java"}, "focal_method": {"identifier": "convertValue", "parameters": "(Value value, Thing thing, Class<? extends String> desiredType)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String convertValue(Value value, Thing thing, Class<? extends String> desiredType)\n            throws ValueConversionException {\n        return value.stringValue();\n    }", "signature": "String convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "full_signature": "@Override public String convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "class_method_signature": "StringValueConverter.convertValue(Value value, Thing thing, Class<? extends String> desiredType)", "testcase": false, "constructor": false, "invocations": ["stringValue"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}