{"test_class": {"identifier": "ReviewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  CityService cityService;", "modifier": "@Autowired", "type": "CityService", "declarator": "cityService", "var_name": "cityService"}, {"original_string": "@Autowired\n  HotelService hotelService;", "modifier": "@Autowired", "type": "HotelService", "declarator": "hotelService", "var_name": "hotelService"}, {"original_string": "@Autowired\n  ReviewRepository reviewRepository;", "modifier": "@Autowired", "type": "ReviewRepository", "declarator": "reviewRepository", "var_name": "reviewRepository"}], "file": "examples/jpa/src/test/java/net/zerobuilder/examples/jpa/domain/ReviewTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test() throws Exception {\n    getReviews().forEach(r -> assertThat(r.getTitle(), is(not(\"FooBar\"))));\n    getReviews()\n        .map(r -> ReviewBuilders.reviewUpdater(r)\n            .title(\"FooBar\")\n            .done())\n        .forEach(reviewRepository::save);\n    getReviews().forEach(r -> assertThat(r.getTitle(), is(\"FooBar\")));\n  }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ReviewTest.test()", "testcase": true, "constructor": false, "invocations": ["forEach", "getReviews", "assertThat", "getTitle", "is", "not", "forEach", "map", "getReviews", "done", "title", "reviewUpdater", "forEach", "getReviews", "assertThat", "getTitle", "is"]}, "focal_class": {"identifier": "Review", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "@Id\n  @GeneratedValue\n  private Long id;", "modifier": "@Id\n  @GeneratedValue\n  private", "type": "Long", "declarator": "id", "var_name": "id"}, {"original_string": "@ManyToOne(optional = false)\n  private Hotel hotel;", "modifier": "@ManyToOne(optional = false)\n  private", "type": "Hotel", "declarator": "hotel", "var_name": "hotel"}, {"original_string": "@Column(nullable = false)\n  private int index;", "modifier": "@Column(nullable = false)\n  private", "type": "int", "declarator": "index", "var_name": "index"}, {"original_string": "@Column(nullable = false)\n  @Enumerated(EnumType.ORDINAL)\n  private Rating rating;", "modifier": "@Column(nullable = false)\n  @Enumerated(EnumType.ORDINAL)\n  private", "type": "Rating", "declarator": "rating", "var_name": "rating"}, {"original_string": "@Column(nullable = false)\n  @Temporal(TemporalType.DATE)\n  private Date checkInDate;", "modifier": "@Column(nullable = false)\n  @Temporal(TemporalType.DATE)\n  private", "type": "Date", "declarator": "checkInDate", "var_name": "checkInDate"}, {"original_string": "@Column(nullable = false)\n  @Enumerated(EnumType.ORDINAL)\n  private TripType tripType;", "modifier": "@Column(nullable = false)\n  @Enumerated(EnumType.ORDINAL)\n  private", "type": "TripType", "declarator": "tripType", "var_name": "tripType"}, {"original_string": "@Column(nullable = false)\n  private String title;", "modifier": "@Column(nullable = false)\n  private", "type": "String", "declarator": "title", "var_name": "title"}, {"original_string": "@Column(nullable = false, length = 5000)\n  private String details;", "modifier": "@Column(nullable = false, length = 5000)\n  private", "type": "String", "declarator": "details", "var_name": "details"}], "methods": [{"identifier": "Review", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Review()", "full_signature": "protected  Review()", "class_method_signature": "Review.Review()", "testcase": false, "constructor": true}, {"identifier": "Review", "parameters": "(Hotel hotel, int index, ReviewDetails details)", "modifiers": "public", "return": "", "signature": " Review(Hotel hotel, int index, ReviewDetails details)", "full_signature": "public  Review(Hotel hotel, int index, ReviewDetails details)", "class_method_signature": "Review.Review(Hotel hotel, int index, ReviewDetails details)", "testcase": false, "constructor": true}, {"identifier": "getHotel", "parameters": "()", "modifiers": "public", "return": "Hotel", "signature": "Hotel getHotel()", "full_signature": "public Hotel getHotel()", "class_method_signature": "Review.getHotel()", "testcase": false, "constructor": false}, {"identifier": "setHotel", "parameters": "(Hotel hotel)", "modifiers": "public", "return": "void", "signature": "void setHotel(Hotel hotel)", "full_signature": "public void setHotel(Hotel hotel)", "class_method_signature": "Review.setHotel(Hotel hotel)", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "()", "modifiers": "@IgnoreGetter public", "return": "int", "signature": "int getIndex()", "full_signature": "@IgnoreGetter public int getIndex()", "class_method_signature": "Review.getIndex()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getId()", "full_signature": "public Long getId()", "class_method_signature": "Review.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(Long id)", "modifiers": "public", "return": "void", "signature": "void setId(Long id)", "full_signature": "public void setId(Long id)", "class_method_signature": "Review.setId(Long id)", "testcase": false, "constructor": false}, {"identifier": "setIndex", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void setIndex(int index)", "full_signature": "public void setIndex(int index)", "class_method_signature": "Review.setIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "getRating", "parameters": "()", "modifiers": "public", "return": "Rating", "signature": "Rating getRating()", "full_signature": "public Rating getRating()", "class_method_signature": "Review.getRating()", "testcase": false, "constructor": false}, {"identifier": "setRating", "parameters": "(Rating rating)", "modifiers": "public", "return": "void", "signature": "void setRating(Rating rating)", "full_signature": "public void setRating(Rating rating)", "class_method_signature": "Review.setRating(Rating rating)", "testcase": false, "constructor": false}, {"identifier": "getCheckInDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getCheckInDate()", "full_signature": "public Date getCheckInDate()", "class_method_signature": "Review.getCheckInDate()", "testcase": false, "constructor": false}, {"identifier": "setCheckInDate", "parameters": "(Date checkInDate)", "modifiers": "public", "return": "void", "signature": "void setCheckInDate(Date checkInDate)", "full_signature": "public void setCheckInDate(Date checkInDate)", "class_method_signature": "Review.setCheckInDate(Date checkInDate)", "testcase": false, "constructor": false}, {"identifier": "getTripType", "parameters": "()", "modifiers": "public", "return": "TripType", "signature": "TripType getTripType()", "full_signature": "public TripType getTripType()", "class_method_signature": "Review.getTripType()", "testcase": false, "constructor": false}, {"identifier": "setTripType", "parameters": "(TripType tripType)", "modifiers": "public", "return": "void", "signature": "void setTripType(TripType tripType)", "full_signature": "public void setTripType(TripType tripType)", "class_method_signature": "Review.setTripType(TripType tripType)", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "Review.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "public void setTitle(String title)", "class_method_signature": "Review.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "getDetails", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDetails()", "full_signature": "public String getDetails()", "class_method_signature": "Review.getDetails()", "testcase": false, "constructor": false}, {"identifier": "setDetails", "parameters": "(String details)", "modifiers": "public", "return": "void", "signature": "void setDetails(String details)", "full_signature": "public void setDetails(String details)", "class_method_signature": "Review.setDetails(String details)", "testcase": false, "constructor": false}], "file": "examples/jpa/src/main/java/net/zerobuilder/examples/jpa/domain/Review.java"}, "focal_method": {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getTitle() {\n    return this.title;\n  }", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "Review.getTitle()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66055507, "url": "https://github.com/h908714124/zerobuilder", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 19, "size": 1962, "license": "licensed"}}