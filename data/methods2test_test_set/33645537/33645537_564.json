{"test_class": {"identifier": "AssertTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_HEADER = \"[Assertion\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_HEADER = \"[Assertion\"", "var_name": "DEFAULT_HEADER"}, {"original_string": "private static final String MESSAGE = \"test message %d\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE = \"test message %d\"", "var_name": "MESSAGE"}, {"original_string": "private static final String MESSAGE_1 = \"test message 1\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_1 = \"test message 1\"", "var_name": "MESSAGE_1"}, {"original_string": "private static final Object OBJECT = new Object();", "modifier": "private static final", "type": "Object", "declarator": "OBJECT = new Object()", "var_name": "OBJECT"}], "file": "concurrency/src/test/java/com/baidu/unbiz/common/AssertTest.java"}, "test_case": {"identifier": "unexpectedException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unexpectedException() {\n        final Throwable e = new Throwable();\n\n        try {\n            Assert.unexpectedException(e);\n        } catch (UnexpectedFailureException ee) {\n            assertThat(ee, exception(UnexpectedFailureException.class, DEFAULT_HEADER, \"unexpected\"));\n        }\n\n        try {\n            Assert.unexpectedException(e, MESSAGE);\n        } catch (UnexpectedFailureException ee) {\n            assertThat(ee, exception(UnexpectedFailureException.class, MESSAGE));\n        }\n\n        try {\n            Assert.unexpectedException(e, MESSAGE, 1);\n        } catch (UnexpectedFailureException ee) {\n            assertThat(ee, exception(UnexpectedFailureException.class, MESSAGE_1));\n        }\n\n        try {\n            Assert.unexpectedException(e);\n            fail();\n        } catch (UnexpectedFailureException ee) {\n            assertSame(e, ee.getCause());\n        }\n\n        try {\n            Assert.unexpectedException(e, MESSAGE);\n            fail();\n        } catch (UnexpectedFailureException ee) {\n            assertSame(e, ee.getCause());\n        }\n    }", "signature": "void unexpectedException()", "full_signature": "@Test public void unexpectedException()", "class_method_signature": "AssertTest.unexpectedException()", "testcase": true, "constructor": false, "invocations": ["unexpectedException", "assertThat", "exception", "unexpectedException", "assertThat", "exception", "unexpectedException", "assertThat", "exception", "unexpectedException", "fail", "assertSame", "getCause", "unexpectedException", "fail", "assertSame", "getCause"]}, "focal_class": {"identifier": "Assert", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "assertNotNull", "parameters": "(T object)", "modifiers": "public static", "return": "T", "signature": "T assertNotNull(T object)", "full_signature": "public static T assertNotNull(T object)", "class_method_signature": "Assert.assertNotNull(T object)", "testcase": false, "constructor": false}, {"identifier": "assertNotNull", "parameters": "(T object, String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T assertNotNull(T object, String message, Object...args)", "full_signature": "public static T assertNotNull(T object, String message, Object...args)", "class_method_signature": "Assert.assertNotNull(T object, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "assertNotNull", "parameters": "(T object, ExceptionType exceptionType, String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T assertNotNull(T object, ExceptionType exceptionType, String message, Object...args)", "full_signature": "public static T assertNotNull(T object, ExceptionType exceptionType, String message, Object...args)", "class_method_signature": "Assert.assertNotNull(T object, ExceptionType exceptionType, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "assertNull", "parameters": "(T object)", "modifiers": "public static", "return": "T", "signature": "T assertNull(T object)", "full_signature": "public static T assertNull(T object)", "class_method_signature": "Assert.assertNull(T object)", "testcase": false, "constructor": false}, {"identifier": "assertNull", "parameters": "(T object, String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T assertNull(T object, String message, Object...args)", "full_signature": "public static T assertNull(T object, String message, Object...args)", "class_method_signature": "Assert.assertNull(T object, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "assertNull", "parameters": "(T object, ExceptionType exceptionType, String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T assertNull(T object, ExceptionType exceptionType, String message, Object...args)", "full_signature": "public static T assertNull(T object, ExceptionType exceptionType, String message, Object...args)", "class_method_signature": "Assert.assertNull(T object, ExceptionType exceptionType, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "assertTrue", "parameters": "(boolean expression)", "modifiers": "public static", "return": "void", "signature": "void assertTrue(boolean expression)", "full_signature": "public static void assertTrue(boolean expression)", "class_method_signature": "Assert.assertTrue(boolean expression)", "testcase": false, "constructor": false}, {"identifier": "assertTrue", "parameters": "(boolean expression, String message, Object...args)", "modifiers": "public static", "return": "void", "signature": "void assertTrue(boolean expression, String message, Object...args)", "full_signature": "public static void assertTrue(boolean expression, String message, Object...args)", "class_method_signature": "Assert.assertTrue(boolean expression, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "assertTrue", "parameters": "(boolean expression, ExceptionType exceptionType, String message, Object...args)", "modifiers": "public static", "return": "void", "signature": "void assertTrue(boolean expression, ExceptionType exceptionType, String message, Object...args)", "full_signature": "public static void assertTrue(boolean expression, ExceptionType exceptionType, String message, Object...args)", "class_method_signature": "Assert.assertTrue(boolean expression, ExceptionType exceptionType, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "unreachableCode", "parameters": "()", "modifiers": "public static", "return": "T", "signature": "T unreachableCode()", "full_signature": "public static T unreachableCode()", "class_method_signature": "Assert.unreachableCode()", "testcase": false, "constructor": false}, {"identifier": "unreachableCode", "parameters": "(String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T unreachableCode(String message, Object...args)", "full_signature": "public static T unreachableCode(String message, Object...args)", "class_method_signature": "Assert.unreachableCode(String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "unexpectedException", "parameters": "(Throwable e)", "modifiers": "public static", "return": "T", "signature": "T unexpectedException(Throwable e)", "full_signature": "public static T unexpectedException(Throwable e)", "class_method_signature": "Assert.unexpectedException(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "unexpectedException", "parameters": "(Throwable e, String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T unexpectedException(Throwable e, String message, Object...args)", "full_signature": "public static T unexpectedException(Throwable e, String message, Object...args)", "class_method_signature": "Assert.unexpectedException(Throwable e, String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "()", "modifiers": "public static", "return": "T", "signature": "T fail()", "full_signature": "public static T fail()", "class_method_signature": "Assert.fail()", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T fail(String message, Object...args)", "full_signature": "public static T fail(String message, Object...args)", "class_method_signature": "Assert.fail(String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "unsupportedOperation", "parameters": "()", "modifiers": "public static", "return": "T", "signature": "T unsupportedOperation()", "full_signature": "public static T unsupportedOperation()", "class_method_signature": "Assert.unsupportedOperation()", "testcase": false, "constructor": false}, {"identifier": "unsupportedOperation", "parameters": "(String message, Object...args)", "modifiers": "public static", "return": "T", "signature": "T unsupportedOperation(String message, Object...args)", "full_signature": "public static T unsupportedOperation(String message, Object...args)", "class_method_signature": "Assert.unsupportedOperation(String message, Object...args)", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "(String message, Object[] args, String defaultMessage)", "modifiers": "private static", "return": "String", "signature": "String getMessage(String message, Object[] args, String defaultMessage)", "full_signature": "private static String getMessage(String message, Object[] args, String defaultMessage)", "class_method_signature": "Assert.getMessage(String message, Object[] args, String defaultMessage)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/Assert.java"}, "focal_method": {"identifier": "unexpectedException", "parameters": "(Throwable e)", "modifiers": "public static", "return": "T", "body": "public static <T> T unexpectedException(Throwable e) {\n        unexpectedException(e, null, (Object[]) null);\n        return null;\n    }", "signature": "T unexpectedException(Throwable e)", "full_signature": "public static T unexpectedException(Throwable e)", "class_method_signature": "Assert.unexpectedException(Throwable e)", "testcase": false, "constructor": false, "invocations": ["unexpectedException"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}