{"test_class": {"identifier": "BuildOutputParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NEWLINE = SystemProperties.getLineSeparator();", "modifier": "private static final", "type": "String", "declarator": "NEWLINE = SystemProperties.getLineSeparator()", "var_name": "NEWLINE"}, {"original_string": "private static final String CWD_PATH = new File(\"\").getAbsolutePath();", "modifier": "private static final", "type": "String", "declarator": "CWD_PATH = new File(\"\").getAbsolutePath()", "var_name": "CWD_PATH"}, {"original_string": "private File sourceFile;", "modifier": "private", "type": "File", "declarator": "sourceFile", "var_name": "sourceFile"}, {"original_string": "private String sourceFilePath;", "modifier": "private", "type": "String", "declarator": "sourceFilePath", "var_name": "sourceFilePath"}, {"original_string": "private BuildOutputParser parser;", "modifier": "private", "type": "BuildOutputParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private static final String WINDOWS_PATH_DRIVE_LETTER = \"C:\";", "modifier": "private static final", "type": "String", "declarator": "WINDOWS_PATH_DRIVE_LETTER = \"C:\"", "var_name": "WINDOWS_PATH_DRIVE_LETTER"}, {"original_string": "private static final String WINDOWS_PATH_UNDER_UNIX = new File(WINDOWS_PATH_DRIVE_LETTER).getAbsolutePath();", "modifier": "private static final", "type": "String", "declarator": "WINDOWS_PATH_UNDER_UNIX = new File(WINDOWS_PATH_DRIVE_LETTER).getAbsolutePath()", "var_name": "WINDOWS_PATH_UNDER_UNIX"}, {"original_string": "private static final int WINDOWS_PATH_UNIX_PREFIX_LENGTH = WINDOWS_PATH_UNDER_UNIX.length() - WINDOWS_PATH_DRIVE_LETTER.length();", "modifier": "private static final", "type": "int", "declarator": "WINDOWS_PATH_UNIX_PREFIX_LENGTH = WINDOWS_PATH_UNDER_UNIX.length() - WINDOWS_PATH_DRIVE_LETTER.length()", "var_name": "WINDOWS_PATH_UNIX_PREFIX_LENGTH"}], "file": "build-common/testSrc/com/android/tools/idea/gradle/output/parser/BuildOutputParserTest.java"}, "test_case": {"identifier": "redirectFileLinksOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void redirectFileLinksOutput() throws Exception {\n    // Do not run tests on Windows (see http://b.android.com/222904)\n    assumeFalse(SystemInfo.isWindows);\n\n    // Need file to be named (exactly) values.xml\n    File tempDir = Files.createTempDir();\n    File layoutDir = new File(tempDir, \"layout-land\");\n    layoutDir.mkdirs();\n    sourceFile = new File(layoutDir, \"main.xml\");\n    sourceFilePath = sourceFile.getAbsolutePath();\n\n    writeToFile(\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n      \"<LinearLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n      \"    android:orientation=\\\"vertical\\\"\\n\" +\n      \"    android:layout_width=\\\"fill_parent\\\"\\n\" +\n      \"    android:layout_height=\\\"fill_parent\\\"\\n\" +\n      \"    >\\n\" +\n      \"<TextView\\n\" +\n      \"    android:layout_width=\\\"fill_parent\\\"\\n\" +\n      \"    android:layout_height=\\\"wrap_content\\\"\\n\" +\n      \"    android:text=\\\"Test App - Basic\\\"\\n\" +\n      \"    android:id=\\\"@+id/text\\\"\\n\" +\n      \"    />\\n\" +\n      \"</LinearLayout>\\n\" +\n      \"\\n\" +\n      \"<!-- From: file:src/test/resources/testData/resources/incMergeData/filesVsValues/main/layout/main.xml -->\");\n\n    String messageText = \"Random error message here\";\n    String err = sourceFilePath + \":4: error: Error: \" + messageText;\n    Collection<Message> messages = parser.parseGradleOutput(err);\n    assertEquals(1, messages.size());\n\n    assertEquals(\"[message count]\", 1, messages.size());\n    Message message = ContainerUtil.getFirstItem(messages);\n    assertNotNull(message);\n\n    // NOT sourceFilePath; should be translated back from source comment\n    String expected = \"src/test/resources/testData/resources/incMergeData/filesVsValues/main/layout/main.xml\";\n    assertEquals(\"[file path]\", expected, getSystemIndependentSourcePath(message));\n\n    assertEquals(\"[message severity]\", Message.Kind.ERROR, message.getKind());\n    assertEquals(\"[message text]\", messageText, message.getText());\n    assertEquals(\"[position line]\", 4, message.getLineNumber());\n    //assertEquals(\"[position column]\", 35, message.getColumn());\n\n    // TODO: Test encoding issues (e.g. & in path where the XML source comment would be &amp; instead)\n  }", "signature": "void redirectFileLinksOutput()", "full_signature": "@Test public void redirectFileLinksOutput()", "class_method_signature": "BuildOutputParserTest.redirectFileLinksOutput()", "testcase": true, "constructor": false, "invocations": ["assumeFalse", "createTempDir", "mkdirs", "getAbsolutePath", "writeToFile", "parseGradleOutput", "assertEquals", "size", "assertEquals", "size", "getFirstItem", "assertNotNull", "assertEquals", "getSystemIndependentSourcePath", "assertEquals", "getKind", "assertEquals", "getText", "assertEquals", "getLineNumber"]}, "focal_class": {"identifier": "BuildOutputParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ToolOutputParser parser;", "modifier": "private final", "type": "ToolOutputParser", "declarator": "parser", "var_name": "parser"}], "methods": [{"identifier": "BuildOutputParser", "parameters": "(@NotNull Iterable<PatternAwareOutputParser> parsers)", "modifiers": "public", "return": "", "signature": " BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "full_signature": "public  BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "class_method_signature": "BuildOutputParser.BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "testcase": false, "constructor": true}, {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output)", "modifiers": "@NotNull public", "return": "List<Message>", "signature": "List<Message> parseGradleOutput(@NotNull String output)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output)", "testcase": false, "constructor": false}, {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output, boolean ignoreUnrecognizedText)", "modifiers": "@NotNull public", "return": "List<Message>", "signature": "List<Message> parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "testcase": false, "constructor": false}], "file": "build-common/src/com/android/tools/idea/gradle/output/parser/BuildOutputParser.java"}, "focal_method": {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output)", "modifiers": "@NotNull public", "return": "List<Message>", "body": "@NotNull\n  public List<Message> parseGradleOutput(@NotNull String output) {\n    return parser.parseToolOutput(output);\n  }", "signature": "List<Message> parseGradleOutput(@NotNull String output)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output)", "testcase": false, "constructor": false, "invocations": ["parseToolOutput"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}