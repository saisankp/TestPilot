{"test_class": {"identifier": "RestfulOAuthServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/security/security-client/src/test/java/org/openiot/security/client/rest/RestfulOAuthServiceTest.java"}, "test_case": {"identifier": "testGetAccessToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAccessToken() {\n\t\tString casOAuthUrl = \"https://localhost:8443/openiot-cas/openiot1/tickets\";\n\t\tRestfulOAuthService service = new RestfulOAuthService(casOAuthUrl);\n\n\t\tOAuthCredentialsRest credentials = new OAuthCredentialsRest(\"admin\", \"secret\", \"dummyClientName\", \"testservice1\", \"testsecret1\");\n\t\tToken accessToken = service.getAccessToken(credentials);\n\n\t\tassertNotNull(accessToken);\n\t}", "signature": "void testGetAccessToken()", "full_signature": "@Test public void testGetAccessToken()", "class_method_signature": "RestfulOAuthServiceTest.testGetAccessToken()", "testcase": true, "constructor": false, "invocations": ["getAccessToken", "assertNotNull"]}, "focal_class": {"identifier": "RestfulOAuthService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(RestfulOAuthService.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RestfulOAuthService.class)", "var_name": "log"}, {"original_string": "private static final int STATUS_SUCCESS = 201;", "modifier": "private static final", "type": "int", "declarator": "STATUS_SUCCESS = 201", "var_name": "STATUS_SUCCESS"}, {"original_string": "private static final int STATUS_DELETE_SUCCESS = 200;", "modifier": "private static final", "type": "int", "declarator": "STATUS_DELETE_SUCCESS = 200", "var_name": "STATUS_DELETE_SUCCESS"}, {"original_string": "private String casOAuthURL;", "modifier": "private", "type": "String", "declarator": "casOAuthURL", "var_name": "casOAuthURL"}], "methods": [{"identifier": "RestfulOAuthService", "parameters": "(String casOAuthUrl)", "modifiers": "public", "return": "", "signature": " RestfulOAuthService(String casOAuthUrl)", "full_signature": "public  RestfulOAuthService(String casOAuthUrl)", "class_method_signature": "RestfulOAuthService.RestfulOAuthService(String casOAuthUrl)", "testcase": false, "constructor": true}, {"identifier": "getAccessToken", "parameters": "(OAuthCredentialsRest credentials)", "modifiers": "public", "return": "Token", "signature": "Token getAccessToken(OAuthCredentialsRest credentials)", "full_signature": "public Token getAccessToken(OAuthCredentialsRest credentials)", "class_method_signature": "RestfulOAuthService.getAccessToken(OAuthCredentialsRest credentials)", "testcase": false, "constructor": false}, {"identifier": "removeAccessToken", "parameters": "(String token)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAccessToken(String token)", "full_signature": "public boolean removeAccessToken(String token)", "class_method_signature": "RestfulOAuthService.removeAccessToken(String token)", "testcase": false, "constructor": false}], "file": "modules/security/security-client/src/main/java/org/openiot/security/client/rest/RestfulOAuthService.java"}, "focal_method": {"identifier": "getAccessToken", "parameters": "(OAuthCredentialsRest credentials)", "modifiers": "public", "return": "Token", "body": "public Token getAccessToken(OAuthCredentialsRest credentials) {\n\t\tToken token = null;\n\t\tClientRequest request = new ClientRequest(casOAuthURL);\n\t\t// String params = \"username=\" + credentials.getUsername() + \"&password=\" +\n\t\t// credentials.getPassword() + \"&clientId=\" + credentials.getKey() + \"&secret=\"\n\t\t// + credentials.getSecret();\n\t\trequest.formParameter(\"username\", credentials.getUsername());\n\t\trequest.formParameter(\"password\", credentials.getPassword());\n\t\trequest.formParameter(\"clientId\", credentials.getKey());\n\t\trequest.formParameter(\"secret\", credentials.getSecret());\n\t\ttry {\n\t\t\tClientResponse<String> response = request.post(String.class);\n\t\t\t// Read output in string format\n\t\t\tlog.debug(\"Status code: {}\", response.getStatus());\n\n\t\t\tif (response.getStatus() == STATUS_SUCCESS) {\n\t\t\t\tMatcher matcher = Pattern.compile(\".*action=\\\".*/(.*?)\\\".*\").matcher(response.getEntity());\n\t\t\t\tif (matcher.matches())\n\t\t\t\t\ttoken = new Token(matcher.group(1), \"\");\n\t\t\t} else {\n\t\t\t\tlog.warn(\"Invalid response code {} from CAS server!\", response.getStatus());\n\t\t\t\tlog.info(\"Response: {}\", response.getEntity());\n\t\t\t}\n\n\t\t\tresponse.releaseConnection();\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving access token\", e);\n\t\t}\n\t\treturn token;\n\t}", "signature": "Token getAccessToken(OAuthCredentialsRest credentials)", "full_signature": "public Token getAccessToken(OAuthCredentialsRest credentials)", "class_method_signature": "RestfulOAuthService.getAccessToken(OAuthCredentialsRest credentials)", "testcase": false, "constructor": false, "invocations": ["formParameter", "getUsername", "formParameter", "getPassword", "formParameter", "getKey", "formParameter", "getSecret", "post", "debug", "getStatus", "getStatus", "matcher", "compile", "getEntity", "matches", "group", "warn", "getStatus", "info", "getEntity", "releaseConnection", "error"]}, "repository": {"repo_id": 9221446, "url": "https://github.com/OpenIotOrg/openiot", "language": "Java", "is_fork": false, "fork_count": 201, "stargazer_count": 417, "size": 101270, "license": "licensed"}}