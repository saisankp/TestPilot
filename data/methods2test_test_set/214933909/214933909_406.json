{"test_class": {"identifier": "TaskSqlDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    TaskSqlDao taskSqlDao;", "modifier": "@Autowired", "type": "TaskSqlDao", "declarator": "taskSqlDao", "var_name": "taskSqlDao"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/TaskSqlDaoTest.java"}, "test_case": {"identifier": "updateAndGetAllTasks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateAndGetAllTasks() throws Exception {\n        List<TaskSqlView> list = taskSqlDao.updateAndGetAllTasks(186L);\n        System.out.println(\"updateAndGetAllTasks :-------> \" + list);\n        Assert.assertTrue(list.size() > 0);\n    }", "signature": "void updateAndGetAllTasks()", "full_signature": "@Test public void updateAndGetAllTasks()", "class_method_signature": "TaskSqlDaoTest.updateAndGetAllTasks()", "testcase": true, "constructor": false, "invocations": ["updateAndGetAllTasks", "println", "assertTrue", "size"]}, "focal_class": {"identifier": "TaskSqlDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "processList", "parameters": "(List<TaskSqlView> list)", "modifiers": "private", "return": "void", "signature": "void processList(List<TaskSqlView> list)", "full_signature": "private void processList(List<TaskSqlView> list)", "class_method_signature": "TaskSqlDao.processList(List<TaskSqlView> list)", "testcase": false, "constructor": false}, {"identifier": "processGenTaskByFreeSql", "parameters": "(TaskSqlView entity)", "modifiers": "private", "return": "void", "signature": "void processGenTaskByFreeSql(TaskSqlView entity)", "full_signature": "private void processGenTaskByFreeSql(TaskSqlView entity)", "class_method_signature": "TaskSqlDao.processGenTaskByFreeSql(TaskSqlView entity)", "testcase": false, "constructor": false}, {"identifier": "getTasksByProjectId", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<TaskSqlView>", "signature": "List<TaskSqlView> getTasksByProjectId(Long projectId)", "full_signature": "public List<TaskSqlView> getTasksByProjectId(Long projectId)", "class_method_signature": "TaskSqlDao.getTasksByProjectId(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "updateAndGetAllTasks", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<TaskSqlView>", "signature": "List<TaskSqlView> updateAndGetAllTasks(Long projectId)", "full_signature": "public List<TaskSqlView> updateAndGetAllTasks(Long projectId)", "class_method_signature": "TaskSqlDao.updateAndGetAllTasks(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "updateAndGetTasks", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<TaskSqlView>", "signature": "List<TaskSqlView> updateAndGetTasks(Long projectId)", "full_signature": "public List<TaskSqlView> updateAndGetTasks(Long projectId)", "class_method_signature": "TaskSqlDao.updateAndGetTasks(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "insertTask", "parameters": "(TaskSql task)", "modifiers": "public", "return": "Long", "signature": "Long insertTask(TaskSql task)", "full_signature": "public Long insertTask(TaskSql task)", "class_method_signature": "TaskSqlDao.insertTask(TaskSql task)", "testcase": false, "constructor": false}, {"identifier": "updateTask", "parameters": "(TaskSqlView task)", "modifiers": "public", "return": "int", "signature": "int updateTask(TaskSqlView task)", "full_signature": "public int updateTask(TaskSqlView task)", "class_method_signature": "TaskSqlDao.updateTask(TaskSqlView task)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/TaskSqlDao.java"}, "focal_method": {"identifier": "updateAndGetAllTasks", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<TaskSqlView>", "body": "public List<TaskSqlView> updateAndGetAllTasks(Long projectId) throws SQLException {\n        List<TaskSqlView> result = new ArrayList<>();\n        List<TaskSqlView> list = getTasksByProjectId(projectId);\n        if (list == null || list.size() == 0) {\n            return result;\n        }\n\n        for (TaskSqlView entity : list) {\n            entity.setGenerated(true);\n            if (updateTask(entity) > 0) {\n                result.add(entity);\n            }\n        }\n\n        return result;\n    }", "signature": "List<TaskSqlView> updateAndGetAllTasks(Long projectId)", "full_signature": "public List<TaskSqlView> updateAndGetAllTasks(Long projectId)", "class_method_signature": "TaskSqlDao.updateAndGetAllTasks(Long projectId)", "testcase": false, "constructor": false, "invocations": ["getTasksByProjectId", "size", "setGenerated", "updateTask", "add"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}