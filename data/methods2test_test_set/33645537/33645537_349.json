{"test_class": {"identifier": "ReverseSentenceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReverseSentence reverseSentence;", "modifier": "private", "type": "ReverseSentence", "declarator": "reverseSentence", "var_name": "reverseSentence"}], "file": "algs/src/test/java/com/github/pedrovgs/problem27/ReverseSentenceTest.java"}, "test_case": {"identifier": "shouldReverseSentenceWithMoreThanOneWord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReverseSentenceWithMoreThanOneWord() {\n    String input = \"pedro vicente g\u00f3mez\";\n\n    String result = reverseSentence.reverse(input);\n\n    assertEquals(\"g\u00f3mez vicente pedro\", result);\n  }", "signature": "void shouldReverseSentenceWithMoreThanOneWord()", "full_signature": "@Test public void shouldReverseSentenceWithMoreThanOneWord()", "class_method_signature": "ReverseSentenceTest.shouldReverseSentenceWithMoreThanOneWord()", "testcase": true, "constructor": false, "invocations": ["reverse", "assertEquals"]}, "focal_class": {"identifier": "ReverseSentence", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WORD_SEPARATOR = \" \";", "modifier": "private static final", "type": "String", "declarator": "WORD_SEPARATOR = \" \"", "var_name": "WORD_SEPARATOR"}], "methods": [{"identifier": "reverse", "parameters": "(String sentence)", "modifiers": "public", "return": "String", "signature": "String reverse(String sentence)", "full_signature": "public String reverse(String sentence)", "class_method_signature": "ReverseSentence.reverse(String sentence)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem27/ReverseSentence.java"}, "focal_method": {"identifier": "reverse", "parameters": "(String sentence)", "modifiers": "public", "return": "String", "body": "public String reverse(String sentence) {\n    if (sentence == null) {\n      throw new IllegalArgumentException(\"Input param can't be null.\");\n    }\n    StringBuilder stringBuilder = new StringBuilder();\n    String[] words = sentence.split(WORD_SEPARATOR);\n    for (int i = words.length - 1; i >= 0; i--) {\n      stringBuilder.append(words[i]);\n      if (i != 0) {\n        stringBuilder.append(\" \");\n      }\n    }\n    return stringBuilder.toString();\n  }", "signature": "String reverse(String sentence)", "full_signature": "public String reverse(String sentence)", "class_method_signature": "ReverseSentence.reverse(String sentence)", "testcase": false, "constructor": false, "invocations": ["split", "append", "append", "toString"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}