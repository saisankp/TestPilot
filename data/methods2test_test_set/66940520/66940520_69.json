{"test_class": {"identifier": "MetadataSyncPreProcessorTest", "superclass": "extends IntegrationTestBase", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Autowired\n    @Mock\n    private SynchronizationManager synchronizationManager;", "modifier": "@Autowired\n    @Mock\n    private", "type": "SynchronizationManager", "declarator": "synchronizationManager", "var_name": "synchronizationManager"}, {"original_string": "@Autowired\n    @Mock\n    private SystemSettingManager systemSettingManager;", "modifier": "@Autowired\n    @Mock\n    private", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "@InjectMocks\n    @Autowired\n    private MetadataSyncPreProcessor metadataSyncPreProcessor;", "modifier": "@InjectMocks\n    @Autowired\n    private", "type": "MetadataSyncPreProcessor", "declarator": "metadataSyncPreProcessor", "var_name": "metadataSyncPreProcessor"}, {"original_string": "@Autowired\n    @Mock\n    private MetadataVersionService metadataVersionService;", "modifier": "@Autowired\n    @Mock\n    private", "type": "MetadataVersionService", "declarator": "metadataVersionService", "var_name": "metadataVersionService"}, {"original_string": "@Autowired\n    @Mock\n    private MetadataVersionDelegate metadataVersionDelegate;", "modifier": "@Autowired\n    @Mock\n    private", "type": "MetadataVersionDelegate", "declarator": "metadataVersionDelegate", "var_name": "metadataVersionDelegate"}, {"original_string": "private final MetadataSyncJobParameters metadataSyncJobParameters = new MetadataSyncJobParameters();", "modifier": "private final", "type": "MetadataSyncJobParameters", "declarator": "metadataSyncJobParameters = new MetadataSyncJobParameters()", "var_name": "metadataSyncJobParameters"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncPreProcessorTest.java"}, "test_case": {"identifier": "testHandleCurrentMetadataVersionShouldReturnCurrentVersionOfSystem", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleCurrentMetadataVersionShouldReturnCurrentVersionOfSystem() throws Exception\n    {\n        MetadataRetryContext mockRetryContext = mock( MetadataRetryContext.class );\n        MetadataVersion currentVersion = new MetadataVersion();\n        currentVersion.setType( VersionType.BEST_EFFORT );\n        currentVersion.setName( \"test_version\" );\n        currentVersion.setCreated( new Date() );\n        currentVersion.setHashCode( \"samplehashcode\" );\n\n        when( metadataVersionService.getCurrentVersion() ).thenReturn( currentVersion );\n        MetadataVersion actualVersion = metadataSyncPreProcessor.handleCurrentMetadataVersion( mockRetryContext );\n        assertEquals( currentVersion, actualVersion );\n    }", "signature": "void testHandleCurrentMetadataVersionShouldReturnCurrentVersionOfSystem()", "full_signature": "@Test public void testHandleCurrentMetadataVersionShouldReturnCurrentVersionOfSystem()", "class_method_signature": "MetadataSyncPreProcessorTest.testHandleCurrentMetadataVersionShouldReturnCurrentVersionOfSystem()", "testcase": true, "constructor": false, "invocations": ["mock", "setType", "setName", "setCreated", "setHashCode", "thenReturn", "when", "getCurrentVersion", "handleCurrentMetadataVersion", "assertEquals"]}, "focal_class": {"identifier": "MetadataSyncPreProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SystemSettingManager systemSettingManager;", "modifier": "private final", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "private final MetadataVersionService metadataVersionService;", "modifier": "private final", "type": "MetadataVersionService", "declarator": "metadataVersionService", "var_name": "metadataVersionService"}, {"original_string": "private final MetadataVersionDelegate metadataVersionDelegate;", "modifier": "private final", "type": "MetadataVersionDelegate", "declarator": "metadataVersionDelegate", "var_name": "metadataVersionDelegate"}, {"original_string": "private final DataSynchronizationWithPaging trackerSync;", "modifier": "private final", "type": "DataSynchronizationWithPaging", "declarator": "trackerSync", "var_name": "trackerSync"}, {"original_string": "private final DataSynchronizationWithPaging eventSync;", "modifier": "private final", "type": "DataSynchronizationWithPaging", "declarator": "eventSync", "var_name": "eventSync"}, {"original_string": "private final DataSynchronizationWithPaging dataValueSync;", "modifier": "private final", "type": "DataSynchronizationWithPaging", "declarator": "dataValueSync", "var_name": "dataValueSync"}, {"original_string": "private final DataSynchronizationWithoutPaging completeDataSetRegistrationSync;", "modifier": "private final", "type": "DataSynchronizationWithoutPaging", "declarator": "completeDataSetRegistrationSync", "var_name": "completeDataSetRegistrationSync"}], "methods": [{"identifier": "MetadataSyncPreProcessor", "parameters": "(\n        SystemSettingManager systemSettingManager,\n        MetadataVersionService metadataVersionService,\n        MetadataVersionDelegate metadataVersionDelegate,\n        TrackerSynchronization trackerSync,\n        EventSynchronization eventSync,\n        DataValueSynchronization dataValueSync,\n        CompleteDataSetRegistrationSynchronization completeDataSetRegistrationSync )", "modifiers": "public", "return": "", "signature": " MetadataSyncPreProcessor(\n        SystemSettingManager systemSettingManager,\n        MetadataVersionService metadataVersionService,\n        MetadataVersionDelegate metadataVersionDelegate,\n        TrackerSynchronization trackerSync,\n        EventSynchronization eventSync,\n        DataValueSynchronization dataValueSync,\n        CompleteDataSetRegistrationSynchronization completeDataSetRegistrationSync )", "full_signature": "public  MetadataSyncPreProcessor(\n        SystemSettingManager systemSettingManager,\n        MetadataVersionService metadataVersionService,\n        MetadataVersionDelegate metadataVersionDelegate,\n        TrackerSynchronization trackerSync,\n        EventSynchronization eventSync,\n        DataValueSynchronization dataValueSync,\n        CompleteDataSetRegistrationSynchronization completeDataSetRegistrationSync )", "class_method_signature": "MetadataSyncPreProcessor.MetadataSyncPreProcessor(\n        SystemSettingManager systemSettingManager,\n        MetadataVersionService metadataVersionService,\n        MetadataVersionDelegate metadataVersionDelegate,\n        TrackerSynchronization trackerSync,\n        EventSynchronization eventSync,\n        DataValueSynchronization dataValueSync,\n        CompleteDataSetRegistrationSynchronization completeDataSetRegistrationSync )", "testcase": false, "constructor": true}, {"identifier": "setUp", "parameters": "( MetadataRetryContext context )", "modifiers": "public", "return": "void", "signature": "void setUp( MetadataRetryContext context )", "full_signature": "public void setUp( MetadataRetryContext context )", "class_method_signature": "MetadataSyncPreProcessor.setUp( MetadataRetryContext context )", "testcase": false, "constructor": false}, {"identifier": "handleDataValuePush", "parameters": "( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "modifiers": "public", "return": "void", "signature": "void handleDataValuePush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "full_signature": "public void handleDataValuePush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "class_method_signature": "MetadataSyncPreProcessor.handleDataValuePush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "testcase": false, "constructor": false}, {"identifier": "handleTrackerProgramsDataPush", "parameters": "( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "modifiers": "public", "return": "void", "signature": "void handleTrackerProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "full_signature": "public void handleTrackerProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "class_method_signature": "MetadataSyncPreProcessor.handleTrackerProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "testcase": false, "constructor": false}, {"identifier": "handleEventProgramsDataPush", "parameters": "( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "modifiers": "public", "return": "void", "signature": "void handleEventProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "full_signature": "public void handleEventProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "class_method_signature": "MetadataSyncPreProcessor.handleEventProgramsDataPush( MetadataRetryContext context, MetadataSyncJobParameters jobParameters )", "testcase": false, "constructor": false}, {"identifier": "handleMetadataVersionsList", "parameters": "( MetadataRetryContext context, MetadataVersion metadataVersion )", "modifiers": "public", "return": "List<MetadataVersion>", "signature": "List<MetadataVersion> handleMetadataVersionsList( MetadataRetryContext context, MetadataVersion metadataVersion )", "full_signature": "public List<MetadataVersion> handleMetadataVersionsList( MetadataRetryContext context, MetadataVersion metadataVersion )", "class_method_signature": "MetadataSyncPreProcessor.handleMetadataVersionsList( MetadataRetryContext context, MetadataVersion metadataVersion )", "testcase": false, "constructor": false}, {"identifier": "setVersionListErrorInfoInContext", "parameters": "( MetadataRetryContext context, MetadataVersion metadataVersion, Exception e )", "modifiers": "private", "return": "String", "signature": "String setVersionListErrorInfoInContext( MetadataRetryContext context, MetadataVersion metadataVersion, Exception e )", "full_signature": "private String setVersionListErrorInfoInContext( MetadataRetryContext context, MetadataVersion metadataVersion, Exception e )", "class_method_signature": "MetadataSyncPreProcessor.setVersionListErrorInfoInContext( MetadataRetryContext context, MetadataVersion metadataVersion, Exception e )", "testcase": false, "constructor": false}, {"identifier": "isUsingLatestVersion", "parameters": "( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "modifiers": "private", "return": "boolean", "signature": "boolean isUsingLatestVersion( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "full_signature": "private boolean isUsingLatestVersion( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "class_method_signature": "MetadataSyncPreProcessor.isUsingLatestVersion( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "testcase": false, "constructor": false}, {"identifier": "isRemoteVersionEmpty", "parameters": "( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "modifiers": "private", "return": "boolean", "signature": "boolean isRemoteVersionEmpty( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "full_signature": "private boolean isRemoteVersionEmpty( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "class_method_signature": "MetadataSyncPreProcessor.isRemoteVersionEmpty( MetadataVersion metadataVersion, List<MetadataVersion> metadataVersionList )", "testcase": false, "constructor": false}, {"identifier": "handleCurrentMetadataVersion", "parameters": "( MetadataRetryContext context )", "modifiers": "public", "return": "MetadataVersion", "signature": "MetadataVersion handleCurrentMetadataVersion( MetadataRetryContext context )", "full_signature": "public MetadataVersion handleCurrentMetadataVersion( MetadataRetryContext context )", "class_method_signature": "MetadataSyncPreProcessor.handleCurrentMetadataVersion( MetadataRetryContext context )", "testcase": false, "constructor": false}, {"identifier": "getLatestVersion", "parameters": "( List<MetadataVersion> metadataVersionList )", "modifiers": "private", "return": "MetadataVersion", "signature": "MetadataVersion getLatestVersion( List<MetadataVersion> metadataVersionList )", "full_signature": "private MetadataVersion getLatestVersion( List<MetadataVersion> metadataVersionList )", "class_method_signature": "MetadataSyncPreProcessor.getLatestVersion( List<MetadataVersion> metadataVersionList )", "testcase": false, "constructor": false}, {"identifier": "handleCompleteDataSetRegistrationDataPush", "parameters": "( MetadataRetryContext context )", "modifiers": "public", "return": "void", "signature": "void handleCompleteDataSetRegistrationDataPush( MetadataRetryContext context )", "full_signature": "public void handleCompleteDataSetRegistrationDataPush( MetadataRetryContext context )", "class_method_signature": "MetadataSyncPreProcessor.handleCompleteDataSetRegistrationDataPush( MetadataRetryContext context )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncPreProcessor.java"}, "focal_method": {"identifier": "handleCurrentMetadataVersion", "parameters": "( MetadataRetryContext context )", "modifiers": "public", "return": "MetadataVersion", "body": "public MetadataVersion handleCurrentMetadataVersion( MetadataRetryContext context )\n    {\n        log.debug( \"Getting the current version of the system\" );\n        MetadataVersion metadataVersion;\n\n        try\n        {\n            metadataVersion = metadataVersionService.getCurrentVersion();\n            log.info( \"Current Metadata Version of the system: \" + metadataVersion );\n        }\n        catch ( MetadataVersionServiceException ex )\n        {\n            context.updateRetryContext( MetadataSyncJob.GET_METADATAVERSION, ex.getMessage(), null, null );\n            throw new MetadataSyncServiceException( ex.getMessage(), ex );\n        }\n\n        return metadataVersion;\n    }", "signature": "MetadataVersion handleCurrentMetadataVersion( MetadataRetryContext context )", "full_signature": "public MetadataVersion handleCurrentMetadataVersion( MetadataRetryContext context )", "class_method_signature": "MetadataSyncPreProcessor.handleCurrentMetadataVersion( MetadataRetryContext context )", "testcase": false, "constructor": false, "invocations": ["debug", "getCurrentVersion", "info", "updateRetryContext", "getMessage", "getMessage"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}