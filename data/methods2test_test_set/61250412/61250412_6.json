{"test_class": {"identifier": "ConverterFunctionCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "flatworm-core/src/test/java/com/blackbear/flatworm/converters/ConverterFunctionCacheTest.java"}, "test_case": {"identifier": "nullTestConvertToStringOptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nullTestConvertToStringOptions() throws Exception {\n        thrown.expect(NullPointerException.class);\n        convertToString(new Date(), null);\n    }", "signature": "void nullTestConvertToStringOptions()", "full_signature": "@Test public void nullTestConvertToStringOptions()", "class_method_signature": "ConverterFunctionCacheTest.nullTestConvertToStringOptions()", "testcase": true, "constructor": false, "invocations": ["expect", "convertToString"]}, "focal_class": {"identifier": "ConverterFunctionCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, ToTypeConverterFunction> toTypeConverterFunctionCache = new HashMap<>();", "modifier": "private static", "type": "Map<String, ToTypeConverterFunction>", "declarator": "toTypeConverterFunctionCache = new HashMap<>()", "var_name": "toTypeConverterFunctionCache"}, {"original_string": "private static Map<String, FromTypeConverterFunction> fromTypeConverterFunctionCache = new HashMap<>();", "modifier": "private static", "type": "Map<String, FromTypeConverterFunction>", "declarator": "fromTypeConverterFunctionCache = new HashMap<>()", "var_name": "fromTypeConverterFunctionCache"}, {"original_string": "private static CoreConverters coreConverters = new CoreConverters();", "modifier": "private static", "type": "CoreConverters", "declarator": "coreConverters = new CoreConverters()", "var_name": "coreConverters"}], "methods": [{"identifier": "ConverterFunctionCache", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConverterFunctionCache()", "full_signature": "private  ConverterFunctionCache()", "class_method_signature": "ConverterFunctionCache.ConverterFunctionCache()", "testcase": false, "constructor": true}, {"identifier": "convertFromString", "parameters": "(Class<?> clazz, String value, Map<String, ConversionOptionBO> options)", "modifiers": "public static", "return": "Object", "signature": "Object convertFromString(Class<?> clazz, String value, Map<String, ConversionOptionBO> options)", "full_signature": "public static Object convertFromString(Class<?> clazz, String value, Map<String, ConversionOptionBO> options)", "class_method_signature": "ConverterFunctionCache.convertFromString(Class<?> clazz, String value, Map<String, ConversionOptionBO> options)", "testcase": false, "constructor": false}, {"identifier": "convertToString", "parameters": "(Object value, Map<String, ConversionOptionBO> options)", "modifiers": "public static", "return": "String", "signature": "String convertToString(Object value, Map<String, ConversionOptionBO> options)", "full_signature": "public static String convertToString(Object value, Map<String, ConversionOptionBO> options)", "class_method_signature": "ConverterFunctionCache.convertToString(Object value, Map<String, ConversionOptionBO> options)", "testcase": false, "constructor": false}, {"identifier": "registerToTypeConverterFunction", "parameters": "(Class<?> clazz, ToTypeConverterFunction function)", "modifiers": "public static", "return": "void", "signature": "void registerToTypeConverterFunction(Class<?> clazz, ToTypeConverterFunction function)", "full_signature": "public static void registerToTypeConverterFunction(Class<?> clazz, ToTypeConverterFunction function)", "class_method_signature": "ConverterFunctionCache.registerToTypeConverterFunction(Class<?> clazz, ToTypeConverterFunction function)", "testcase": false, "constructor": false}, {"identifier": "removeToTypeConverterFunction", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "ToTypeConverterFunction", "signature": "ToTypeConverterFunction removeToTypeConverterFunction(Class<?> clazz)", "full_signature": "public static ToTypeConverterFunction removeToTypeConverterFunction(Class<?> clazz)", "class_method_signature": "ConverterFunctionCache.removeToTypeConverterFunction(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "registerFromTypeConverterFunction", "parameters": "(Class<?> clazz, FromTypeConverterFunction function)", "modifiers": "public static", "return": "void", "signature": "void registerFromTypeConverterFunction(Class<?> clazz, FromTypeConverterFunction function)", "full_signature": "public static void registerFromTypeConverterFunction(Class<?> clazz, FromTypeConverterFunction function)", "class_method_signature": "ConverterFunctionCache.registerFromTypeConverterFunction(Class<?> clazz, FromTypeConverterFunction function)", "testcase": false, "constructor": false}, {"identifier": "removeFromTypeConverterFunction", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "FromTypeConverterFunction", "signature": "FromTypeConverterFunction removeFromTypeConverterFunction(Class<?> clazz)", "full_signature": "public static FromTypeConverterFunction removeFromTypeConverterFunction(Class<?> clazz)", "class_method_signature": "ConverterFunctionCache.removeFromTypeConverterFunction(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "findToTypeConverter", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "ToTypeConverterFunction", "signature": "ToTypeConverterFunction findToTypeConverter(Class<?> clazz)", "full_signature": "public static ToTypeConverterFunction findToTypeConverter(Class<?> clazz)", "class_method_signature": "ConverterFunctionCache.findToTypeConverter(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "findFromTypeConverter", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "FromTypeConverterFunction", "signature": "FromTypeConverterFunction findFromTypeConverter(Class<?> clazz)", "full_signature": "public static FromTypeConverterFunction findFromTypeConverter(Class<?> clazz)", "class_method_signature": "ConverterFunctionCache.findFromTypeConverter(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "findKey", "parameters": "(Class<?> clazz, Collection<String> keys)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> findKey(Class<?> clazz, Collection<String> keys)", "full_signature": "private static Optional<String> findKey(Class<?> clazz, Collection<String> keys)", "class_method_signature": "ConverterFunctionCache.findKey(Class<?> clazz, Collection<String> keys)", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(String name)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> loadClass(String name)", "full_signature": "private static Class<?> loadClass(String name)", "class_method_signature": "ConverterFunctionCache.loadClass(String name)", "testcase": false, "constructor": false}], "file": "flatworm-core/src/main/java/com/blackbear/flatworm/converters/ConverterFunctionCache.java"}, "focal_method": {"identifier": "convertToString", "parameters": "(Object value, Map<String, ConversionOptionBO> options)", "modifiers": "public static", "return": "String", "body": "public static String convertToString(Object value, Map<String, ConversionOptionBO> options) throws Exception {\n        String result = null;\n        FromTypeConverterFunction function = findFromTypeConverter(value.getClass());\n        if(function != null) {\n            result = function.convert(value, options);\n        }\n        return result;\n    }", "signature": "String convertToString(Object value, Map<String, ConversionOptionBO> options)", "full_signature": "public static String convertToString(Object value, Map<String, ConversionOptionBO> options)", "class_method_signature": "ConverterFunctionCache.convertToString(Object value, Map<String, ConversionOptionBO> options)", "testcase": false, "constructor": false, "invocations": ["findFromTypeConverter", "getClass", "convert"]}, "repository": {"repo_id": 61250412, "url": "https://github.com/ahenson/flatworm", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 429, "license": "licensed"}}