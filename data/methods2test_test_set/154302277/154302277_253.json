{"test_class": {"identifier": "IeTime56ConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IeTime56Converter converter = new IeTime56Converter();", "modifier": "private final", "type": "IeTime56Converter", "declarator": "converter = new IeTime56Converter()", "var_name": "converter"}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/test/java/org/opensmartgridplatform/adapter/protocol/iec60870/application/mapping/informationelements/IeTime56ConverterTest.java"}, "test_case": {"identifier": "shouldConvertIeTime56ToTimestamp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldConvertIeTime56ToTimestamp() {\n        // Arrange\n        final long timestamp = ZonedDateTime.now(ZoneOffset.UTC).toInstant().toEpochMilli();\n        final TimestampMeasurementElementDto expected = new TimestampMeasurementElementDto(timestamp);\n        final IeTime56 source = new IeTime56(timestamp);\n\n        // Act\n        final TimestampMeasurementElementDto actual = this.converter.convert(source, null, null);\n\n        // Assert\n        assertThat(actual).isEqualTo(expected);\n    }", "signature": "void shouldConvertIeTime56ToTimestamp()", "full_signature": "@Test public void shouldConvertIeTime56ToTimestamp()", "class_method_signature": "IeTime56ConverterTest.shouldConvertIeTime56ToTimestamp()", "testcase": true, "constructor": false, "invocations": ["toEpochMilli", "toInstant", "now", "convert", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "IeTime56Converter", "superclass": "extends CustomConverter<IeTime56, TimestampMeasurementElementDto>", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "modifiers": "@Override public", "return": "TimestampMeasurementElementDto", "signature": "TimestampMeasurementElementDto convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "full_signature": "@Override public TimestampMeasurementElementDto convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "class_method_signature": "IeTime56Converter.convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/application/mapping/informationelements/IeTime56Converter.java"}, "focal_method": {"identifier": "convert", "parameters": "(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "modifiers": "@Override public", "return": "TimestampMeasurementElementDto", "body": "@Override\n    public TimestampMeasurementElementDto convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext) {\n        return new TimestampMeasurementElementDto(source.getTimestamp());\n    }", "signature": "TimestampMeasurementElementDto convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "full_signature": "@Override public TimestampMeasurementElementDto convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "class_method_signature": "IeTime56Converter.convert(final IeTime56 source,\n            final Type<? extends TimestampMeasurementElementDto> destinationType, final MappingContext mappingContext)", "testcase": false, "constructor": false, "invocations": ["getTimestamp"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}