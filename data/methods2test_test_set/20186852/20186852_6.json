{"test_class": {"identifier": "CCJSqlParserUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "db/org.tinygroup.jsqlparser/src/test/java/org/tinygroup/jsqlparser/parser/CCJSqlParserUtilTest.java"}, "test_case": {"identifier": "testParseExpression2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParseExpression2() throws Exception {\n\t\tExpression result = CCJSqlParserUtil.parseExpression(\"2*(a+6.0)\");\n\t\tassertEquals(\"2 * (a + 6.0)\", result.toString());\n\t\tassertTrue(result instanceof Multiplication);\n\t\tMultiplication mult = (Multiplication)result;\n\t\tassertTrue(mult.getLeftExpression() instanceof LongValue);\n\t\tassertTrue(mult.getRightExpression() instanceof Parenthesis);\n\t}", "signature": "void testParseExpression2()", "full_signature": "@Test public void testParseExpression2()", "class_method_signature": "CCJSqlParserUtilTest.testParseExpression2()", "testcase": true, "constructor": false, "invocations": ["parseExpression", "assertEquals", "toString", "assertTrue", "assertTrue", "getLeftExpression", "assertTrue", "getRightExpression"]}, "focal_class": {"identifier": "CCJSqlParserUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parse", "parameters": "(Reader statementReader)", "modifiers": "public static", "return": "Statement", "signature": "Statement parse(Reader statementReader)", "full_signature": "public static Statement parse(Reader statementReader)", "class_method_signature": "CCJSqlParserUtil.parse(Reader statementReader)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String sql)", "modifiers": "public static", "return": "Statement", "signature": "Statement parse(String sql)", "full_signature": "public static Statement parse(String sql)", "class_method_signature": "CCJSqlParserUtil.parse(String sql)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is)", "modifiers": "public static", "return": "Statement", "signature": "Statement parse(InputStream is)", "full_signature": "public static Statement parse(InputStream is)", "class_method_signature": "CCJSqlParserUtil.parse(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is, String encoding)", "modifiers": "public static", "return": "Statement", "signature": "Statement parse(InputStream is, String encoding)", "full_signature": "public static Statement parse(InputStream is, String encoding)", "class_method_signature": "CCJSqlParserUtil.parse(InputStream is, String encoding)", "testcase": false, "constructor": false}, {"identifier": "parseExpression", "parameters": "(String expression)", "modifiers": "public static", "return": "Expression", "signature": "Expression parseExpression(String expression)", "full_signature": "public static Expression parseExpression(String expression)", "class_method_signature": "CCJSqlParserUtil.parseExpression(String expression)", "testcase": false, "constructor": false}, {"identifier": "parseCondExpression", "parameters": "(String condExpr)", "modifiers": "public static", "return": "Expression", "signature": "Expression parseCondExpression(String condExpr)", "full_signature": "public static Expression parseCondExpression(String condExpr)", "class_method_signature": "CCJSqlParserUtil.parseCondExpression(String condExpr)", "testcase": false, "constructor": false}, {"identifier": "parseStatements", "parameters": "(String sqls)", "modifiers": "public static", "return": "Statements", "signature": "Statements parseStatements(String sqls)", "full_signature": "public static Statements parseStatements(String sqls)", "class_method_signature": "CCJSqlParserUtil.parseStatements(String sqls)", "testcase": false, "constructor": false}, {"identifier": "CCJSqlParserUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " CCJSqlParserUtil()", "full_signature": "private  CCJSqlParserUtil()", "class_method_signature": "CCJSqlParserUtil.CCJSqlParserUtil()", "testcase": false, "constructor": true}], "file": "db/org.tinygroup.jsqlparser/src/main/java/org/tinygroup/jsqlparser/parser/CCJSqlParserUtil.java"}, "focal_method": {"identifier": "parseExpression", "parameters": "(String expression)", "modifiers": "public static", "return": "Expression", "body": "public static Expression parseExpression(String expression) throws JSQLParserException {\n\t\tCCJSqlParser parser = new CCJSqlParser(new StringReader(expression));\n\t\ttry {\n\t\t\treturn parser.SimpleExpression();\n\t\t} catch (Exception ex) {\n\t\t\tthrow new JSQLParserException(ex);\n\t\t} \n\t}", "signature": "Expression parseExpression(String expression)", "full_signature": "public static Expression parseExpression(String expression)", "class_method_signature": "CCJSqlParserUtil.parseExpression(String expression)", "testcase": false, "constructor": false, "invocations": ["SimpleExpression"]}, "repository": {"repo_id": 20186852, "url": "https://github.com/TinyGroup/tiny", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 4712, "license": "licensed"}}