{"test_class": {"identifier": "CheckpointRegularRepeatStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private ISchedulerEntry entryMock;", "modifier": "private", "type": "ISchedulerEntry", "declarator": "entryMock", "var_name": "entryMock"}, {"original_string": "private IObject entryState;", "modifier": "private", "type": "IObject", "declarator": "entryState", "var_name": "entryState"}], "file": "CoreFeatures/Checkpoint/CheckpointSchedulingStrategies/src/test/java/info/smart_tools/smartactors/checkpoint/scheduling_strategies/CheckpointRegularRepeatStrategyTest.java"}, "test_case": {"identifier": "Should_notSaveEntryWith0TimesToRepeat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_notSaveEntryWith0TimesToRepeat()\n            throws Exception {\n        ISchedulingStrategy strategy = new CheckpointRegularRepeatStrategy();\n\n        makeEntry(\"{}\");\n\n        strategy.init(entryMock, makeArgs(\"{\" +\n                \"'times':0,\" +\n                \"'interval':'PT3H'\" +\n                \"}\"));\n\n        verify(entryMock, never()).save();\n        verify(entryMock, never()).scheduleNext(anyLong());\n    }", "signature": "void Should_notSaveEntryWith0TimesToRepeat()", "full_signature": "@Test public void Should_notSaveEntryWith0TimesToRepeat()", "class_method_signature": "CheckpointRegularRepeatStrategyTest.Should_notSaveEntryWith0TimesToRepeat()", "testcase": true, "constructor": false, "invocations": ["makeEntry", "init", "makeArgs", "save", "verify", "never", "scheduleNext", "verify", "never", "anyLong"]}, "focal_class": {"identifier": "CheckpointRegularRepeatStrategy", "superclass": "extends CheckpointRepeatStrategy", "interfaces": "", "fields": [{"original_string": "private final IFieldName intervalFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "intervalFieldName", "var_name": "intervalFieldName"}], "methods": [{"identifier": "CheckpointRegularRepeatStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " CheckpointRegularRepeatStrategy()", "full_signature": "public  CheckpointRegularRepeatStrategy()", "class_method_signature": "CheckpointRegularRepeatStrategy.CheckpointRegularRepeatStrategy()", "testcase": false, "constructor": true}, {"identifier": "calculateNextInterval", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override protected", "return": "long", "signature": "long calculateNextInterval(final ISchedulerEntry entry)", "full_signature": "@Override protected long calculateNextInterval(final ISchedulerEntry entry)", "class_method_signature": "CheckpointRegularRepeatStrategy.calculateNextInterval(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "defaultPostRestoreDelay", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override protected", "return": "Duration", "signature": "Duration defaultPostRestoreDelay(final ISchedulerEntry entry)", "full_signature": "@Override protected Duration defaultPostRestoreDelay(final ISchedulerEntry entry)", "class_method_signature": "CheckpointRegularRepeatStrategy.defaultPostRestoreDelay(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "defaultPostCompletionDelay", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override protected", "return": "Duration", "signature": "Duration defaultPostCompletionDelay(final ISchedulerEntry entry)", "full_signature": "@Override protected Duration defaultPostCompletionDelay(final ISchedulerEntry entry)", "class_method_signature": "CheckpointRegularRepeatStrategy.defaultPostCompletionDelay(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(final ISchedulerEntry entry, final IObject args)", "modifiers": "@Override public", "return": "void", "signature": "void init(final ISchedulerEntry entry, final IObject args)", "full_signature": "@Override public void init(final ISchedulerEntry entry, final IObject args)", "class_method_signature": "CheckpointRegularRepeatStrategy.init(final ISchedulerEntry entry, final IObject args)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Checkpoint/CheckpointSchedulingStrategies/src/main/java/info/smart_tools/smartactors/checkpoint/scheduling_strategies/CheckpointRegularRepeatStrategy.java"}, "focal_method": {"identifier": "init", "parameters": "(final ISchedulerEntry entry, final IObject args)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void init(final ISchedulerEntry entry, final IObject args) throws SchedulingStrategyExecutionException {\n        try {\n            Duration interval = Duration.parse((String) args.getValue(intervalFieldName));\n            entry.getState().setValue(intervalFieldName, interval.toString());\n        } catch (ReadValueException | ChangeValueException | InvalidArgumentException e) {\n            throw new SchedulingStrategyExecutionException(\"Error occurred initializing scheduling strategy.\", e);\n        }\n\n        super.init(entry, args);\n    }", "signature": "void init(final ISchedulerEntry entry, final IObject args)", "full_signature": "@Override public void init(final ISchedulerEntry entry, final IObject args)", "class_method_signature": "CheckpointRegularRepeatStrategy.init(final ISchedulerEntry entry, final IObject args)", "testcase": false, "constructor": false, "invocations": ["parse", "getValue", "setValue", "getState", "toString", "init"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}