{"test_class": {"identifier": "WithDrawPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private WithDrawContract.View view;", "modifier": "private", "type": "WithDrawContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private WithDrawPresenter presenter;", "modifier": "private", "type": "WithDrawPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/WithDrawPresenterTest.java"}, "test_case": {"identifier": "getWithDrawGasPrice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getWithDrawGasPrice(){\n\n        WithDrawBalance mWithDrawBalance = new WithDrawBalance();\n        mWithDrawBalance.setGasLimit(\"1000\");\n        mWithDrawBalance.setGasPrice(\"200\");\n        presenter.setmWithDrawBalance(mWithDrawBalance);\n\n        presenter.getWithDrawGasPrice(\"20\");\n        Mockito.verify(view).showWithDrawGasPrice(Mockito.anyString());\n\n    }", "signature": "void getWithDrawGasPrice()", "full_signature": "@Test public void getWithDrawGasPrice()", "class_method_signature": "WithDrawPresenterTest.getWithDrawGasPrice()", "testcase": true, "constructor": false, "invocations": ["setGasLimit", "setGasPrice", "setmWithDrawBalance", "getWithDrawGasPrice", "showWithDrawGasPrice", "verify", "anyString"]}, "focal_class": {"identifier": "WithDrawPresenter", "superclass": "extends BasePresenter<WithDrawContract.View>", "interfaces": "implements WithDrawContract.Presenter", "fields": [{"original_string": "private DelegateItemInfo mDelegateDetail;", "modifier": "private", "type": "DelegateItemInfo", "declarator": "mDelegateDetail", "var_name": "mDelegateDetail"}, {"original_string": "private Wallet mWallet;", "modifier": "private", "type": "Wallet", "declarator": "mWallet", "var_name": "mWallet"}, {"original_string": "private DelegationValue mDelegationValue;", "modifier": "private", "type": "DelegationValue", "declarator": "mDelegationValue", "var_name": "mDelegationValue"}, {"original_string": "private List<WithDrawBalance> list = new ArrayList<>();", "modifier": "private", "type": "List<WithDrawBalance>", "declarator": "list = new ArrayList<>()", "var_name": "list"}, {"original_string": "private WithDrawBalance mWithDrawBalance = null;", "modifier": "private", "type": "WithDrawBalance", "declarator": "mWithDrawBalance = null", "var_name": "mWithDrawBalance"}], "methods": [{"identifier": "getmWithDrawBalance", "parameters": "()", "modifiers": "public", "return": "WithDrawBalance", "signature": "WithDrawBalance getmWithDrawBalance()", "full_signature": "public WithDrawBalance getmWithDrawBalance()", "class_method_signature": "WithDrawPresenter.getmWithDrawBalance()", "testcase": false, "constructor": false}, {"identifier": "setmWithDrawBalance", "parameters": "(WithDrawBalance mWithDrawBalance)", "modifiers": "public", "return": "void", "signature": "void setmWithDrawBalance(WithDrawBalance mWithDrawBalance)", "full_signature": "public void setmWithDrawBalance(WithDrawBalance mWithDrawBalance)", "class_method_signature": "WithDrawPresenter.setmWithDrawBalance(WithDrawBalance mWithDrawBalance)", "testcase": false, "constructor": false}, {"identifier": "getmDelegateDetail", "parameters": "()", "modifiers": "public", "return": "DelegateItemInfo", "signature": "DelegateItemInfo getmDelegateDetail()", "full_signature": "public DelegateItemInfo getmDelegateDetail()", "class_method_signature": "WithDrawPresenter.getmDelegateDetail()", "testcase": false, "constructor": false}, {"identifier": "setmDelegateDetail", "parameters": "(DelegateItemInfo mDelegateDetail)", "modifiers": "public", "return": "void", "signature": "void setmDelegateDetail(DelegateItemInfo mDelegateDetail)", "full_signature": "public void setmDelegateDetail(DelegateItemInfo mDelegateDetail)", "class_method_signature": "WithDrawPresenter.setmDelegateDetail(DelegateItemInfo mDelegateDetail)", "testcase": false, "constructor": false}, {"identifier": "getmDelegationValue", "parameters": "()", "modifiers": "public", "return": "DelegationValue", "signature": "DelegationValue getmDelegationValue()", "full_signature": "public DelegationValue getmDelegationValue()", "class_method_signature": "WithDrawPresenter.getmDelegationValue()", "testcase": false, "constructor": false}, {"identifier": "setmDelegationValue", "parameters": "(DelegationValue mDelegationValue)", "modifiers": "public", "return": "void", "signature": "void setmDelegationValue(DelegationValue mDelegationValue)", "full_signature": "public void setmDelegationValue(DelegationValue mDelegationValue)", "class_method_signature": "WithDrawPresenter.setmDelegationValue(DelegationValue mDelegationValue)", "testcase": false, "constructor": false}, {"identifier": "getmWallet", "parameters": "()", "modifiers": "public", "return": "Wallet", "signature": "Wallet getmWallet()", "full_signature": "public Wallet getmWallet()", "class_method_signature": "WithDrawPresenter.getmWallet()", "testcase": false, "constructor": false}, {"identifier": "setmWallet", "parameters": "(Wallet mWallet)", "modifiers": "public", "return": "void", "signature": "void setmWallet(Wallet mWallet)", "full_signature": "public void setmWallet(Wallet mWallet)", "class_method_signature": "WithDrawPresenter.setmWallet(Wallet mWallet)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(DelegateItemInfo delegateItemInfo)", "modifiers": "@Override public", "return": "void", "signature": "void init(DelegateItemInfo delegateItemInfo)", "full_signature": "@Override public void init(DelegateItemInfo delegateItemInfo)", "class_method_signature": "WithDrawPresenter.init(DelegateItemInfo delegateItemInfo)", "testcase": false, "constructor": false}, {"identifier": "getWalletAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWalletAddress()", "full_signature": "public String getWalletAddress()", "class_method_signature": "WithDrawPresenter.getWalletAddress()", "testcase": false, "constructor": false}, {"identifier": "getWithDrawBalanceList", "parameters": "()", "modifiers": "public", "return": "List<WithDrawBalance>", "signature": "List<WithDrawBalance> getWithDrawBalanceList()", "full_signature": "public List<WithDrawBalance> getWithDrawBalanceList()", "class_method_signature": "WithDrawPresenter.getWithDrawBalanceList()", "testcase": false, "constructor": false}, {"identifier": "getWithDrawBalance", "parameters": "()", "modifiers": "public", "return": "WithDrawBalance", "signature": "WithDrawBalance getWithDrawBalance()", "full_signature": "public WithDrawBalance getWithDrawBalance()", "class_method_signature": "WithDrawPresenter.getWithDrawBalance()", "testcase": false, "constructor": false}, {"identifier": "getMinDelegationAmount", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMinDelegationAmount()", "full_signature": "public double getMinDelegationAmount()", "class_method_signature": "WithDrawPresenter.getMinDelegationAmount()", "testcase": false, "constructor": false}, {"identifier": "showWalletInfo", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showWalletInfo()", "full_signature": "@Override public void showWalletInfo()", "class_method_signature": "WithDrawPresenter.showWalletInfo()", "testcase": false, "constructor": false}, {"identifier": "getEstimateGas", "parameters": "(String prefixAddress, String nodeId)", "modifiers": "public", "return": "void", "signature": "void getEstimateGas(String prefixAddress, String nodeId)", "full_signature": "public void getEstimateGas(String prefixAddress, String nodeId)", "class_method_signature": "WithDrawPresenter.getEstimateGas(String prefixAddress, String nodeId)", "testcase": false, "constructor": false}, {"identifier": "estimateGas", "parameters": "(String from, String nodeId)", "modifiers": "private", "return": "Single<Response<ApiResponse<EstimateGasResult>>>", "signature": "Single<Response<ApiResponse<EstimateGasResult>>> estimateGas(String from, String nodeId)", "full_signature": "private Single<Response<ApiResponse<EstimateGasResult>>> estimateGas(String from, String nodeId)", "class_method_signature": "WithDrawPresenter.estimateGas(String from, String nodeId)", "testcase": false, "constructor": false}, {"identifier": "checkWithDrawAmount", "parameters": "(String withdrawAmount)", "modifiers": "@Override public", "return": "void", "signature": "void checkWithDrawAmount(String withdrawAmount)", "full_signature": "@Override public void checkWithDrawAmount(String withdrawAmount)", "class_method_signature": "WithDrawPresenter.checkWithDrawAmount(String withdrawAmount)", "testcase": false, "constructor": false}, {"identifier": "updateWithDrawButtonState", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateWithDrawButtonState()", "full_signature": "@Override public void updateWithDrawButtonState()", "class_method_signature": "WithDrawPresenter.updateWithDrawButtonState()", "testcase": false, "constructor": false}, {"identifier": "getBalanceType", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void getBalanceType()", "full_signature": "@Override public void getBalanceType()", "class_method_signature": "WithDrawPresenter.getBalanceType()", "testcase": false, "constructor": false}, {"identifier": "getWithDrawGasPrice", "parameters": "(String gasPrice)", "modifiers": "@Override public", "return": "void", "signature": "void getWithDrawGasPrice(String gasPrice)", "full_signature": "@Override public void getWithDrawGasPrice(String gasPrice)", "class_method_signature": "WithDrawPresenter.getWithDrawGasPrice(String gasPrice)", "testcase": false, "constructor": false}, {"identifier": "showSelectDelegationsDialogFragment", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showSelectDelegationsDialogFragment()", "full_signature": "@Override public void showSelectDelegationsDialogFragment()", "class_method_signature": "WithDrawPresenter.showSelectDelegationsDialogFragment()", "testcase": false, "constructor": false}, {"identifier": "getFeeAmount", "parameters": "(GasProvider gasProvider)", "modifiers": "private", "return": "String", "signature": "String getFeeAmount(GasProvider gasProvider)", "full_signature": "private String getFeeAmount(GasProvider gasProvider)", "class_method_signature": "WithDrawPresenter.getFeeAmount(GasProvider gasProvider)", "testcase": false, "constructor": false}, {"identifier": "submitWithDraw", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void submitWithDraw()", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void submitWithDraw()", "class_method_signature": "WithDrawPresenter.submitWithDraw()", "testcase": false, "constructor": false}, {"identifier": "withdraw", "parameters": "(Credentials credentials, GasProvider gasProvider, String nodeId, String nodeName, String blockNum, String withdrawAmount, String nonce)", "modifiers": "@SuppressLint(\"CheckResult\") public", "return": "void", "signature": "void withdraw(Credentials credentials, GasProvider gasProvider, String nodeId, String nodeName, String blockNum, String withdrawAmount, String nonce)", "full_signature": "@SuppressLint(\"CheckResult\") public void withdraw(Credentials credentials, GasProvider gasProvider, String nodeId, String nodeName, String blockNum, String withdrawAmount, String nonce)", "class_method_signature": "WithDrawPresenter.withdraw(Credentials credentials, GasProvider gasProvider, String nodeId, String nodeName, String blockNum, String withdrawAmount, String nonce)", "testcase": false, "constructor": false}, {"identifier": "buildTransactionAuthorizationBaseDataList", "parameters": "(final BigInteger nonce, String nodeId, String nodeName, String transactionAmount, String from, String to, com.platon.aton.entity.GasProvider gasProvider)", "modifiers": "private", "return": "List<TransactionAuthorizationBaseData>", "signature": "List<TransactionAuthorizationBaseData> buildTransactionAuthorizationBaseDataList(final BigInteger nonce, String nodeId, String nodeName, String transactionAmount, String from, String to, com.platon.aton.entity.GasProvider gasProvider)", "full_signature": "private List<TransactionAuthorizationBaseData> buildTransactionAuthorizationBaseDataList(final BigInteger nonce, String nodeId, String nodeName, String transactionAmount, String from, String to, com.platon.aton.entity.GasProvider gasProvider)", "class_method_signature": "WithDrawPresenter.buildTransactionAuthorizationBaseDataList(final BigInteger nonce, String nodeId, String nodeName, String transactionAmount, String from, String to, com.platon.aton.entity.GasProvider gasProvider)", "testcase": false, "constructor": false}, {"identifier": "showTransactionAuthorizationDialogFragment", "parameters": "(GasProvider gasProvider, String nodeId, String nodeName, String transactionAmount, String from, String to, String nonce)", "modifiers": "private", "return": "void", "signature": "void showTransactionAuthorizationDialogFragment(GasProvider gasProvider, String nodeId, String nodeName, String transactionAmount, String from, String to, String nonce)", "full_signature": "private void showTransactionAuthorizationDialogFragment(GasProvider gasProvider, String nodeId, String nodeName, String transactionAmount, String from, String to, String nonce)", "class_method_signature": "WithDrawPresenter.showTransactionAuthorizationDialogFragment(GasProvider gasProvider, String nodeId, String nodeName, String transactionAmount, String from, String to, String nonce)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/WithDrawPresenter.java"}, "focal_method": {"identifier": "getWithDrawGasPrice", "parameters": "(String gasPrice)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void getWithDrawGasPrice(String gasPrice) {\n        String input = getView().getInputAmount();\n        if (TextUtils.isEmpty(input) || TextUtils.equals(input, \".\")) {\n            getView().showWithDrawGasPrice(\"0.00\");\n            return;\n        }\n\n        if (mDelegateDetail == null || list.isEmpty() || mWithDrawBalance == null || mDelegationValue == null) {\n            return;\n        }\n\n        getView().showWithDrawGasPrice(getFeeAmount(mWithDrawBalance.getGasProvider()));\n    }", "signature": "void getWithDrawGasPrice(String gasPrice)", "full_signature": "@Override public void getWithDrawGasPrice(String gasPrice)", "class_method_signature": "WithDrawPresenter.getWithDrawGasPrice(String gasPrice)", "testcase": false, "constructor": false, "invocations": ["getInputAmount", "getView", "isEmpty", "equals", "showWithDrawGasPrice", "getView", "isEmpty", "showWithDrawGasPrice", "getView", "getFeeAmount", "getGasProvider"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}