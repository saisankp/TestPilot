{"test_class": {"identifier": "PromiseImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Object mResult = new Object();", "modifier": "private final", "type": "Object", "declarator": "mResult = new Object()", "var_name": "mResult"}, {"original_string": "@Mock\n    private ResourceCleaner<Object> mCleaner;", "modifier": "@Mock\n    private", "type": "ResourceCleaner<Object>", "declarator": "mCleaner", "var_name": "mCleaner"}, {"original_string": "@Mock\n    private ActorThread mActorThread;", "modifier": "@Mock\n    private", "type": "ActorThread", "declarator": "mActorThread", "var_name": "mActorThread"}, {"original_string": "@Mock\n    private ResultListener<Object> mListener;", "modifier": "@Mock\n    private", "type": "ResultListener<Object>", "declarator": "mListener", "var_name": "mListener"}, {"original_string": "@Mock\n    private ResultListener<Object> mProxy;", "modifier": "@Mock\n    private", "type": "ResultListener<Object>", "declarator": "mProxy", "var_name": "mProxy"}, {"original_string": "private ActorRef<ResultListener<Object>> mActorRef = new ActorRef<ResultListener<Object>>() {\n        @Override\n        public ResultListener<Object> tell() {\n            return mProxy;\n        }\n    };", "modifier": "private", "type": "ActorRef<ResultListener<Object>>", "declarator": "mActorRef = new ActorRef<ResultListener<Object>>() {\n        @Override\n        public ResultListener<Object> tell() {\n            return mProxy;\n        }\n    }", "var_name": "mActorRef"}, {"original_string": "@Captor\n    private ArgumentCaptor<ResultListener<Object>> mCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<ResultListener<Object>>", "declarator": "mCaptor", "var_name": "mCaptor"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/PromiseImplTest.java"}, "test_case": {"identifier": "then_callListenerOnActorThread_withListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void then_callListenerOnActorThread_withListener() throws Exception {\n        PromiseImpl<Object> promise = new PromiseImpl<>(mResult, mCleaner);\n        promise.then(mActorThread, mListener);\n\n        Mockito.verify(mActorThread).bind(Mockito.same(ResultListener.class), mCaptor.capture());\n        Mockito.verify(mProxy).onResult(mResult);\n\n        mCaptor.getValue().onResult(mResult);\n        Mockito.verify(mListener).onResult(mResult);\n    }", "signature": "void then_callListenerOnActorThread_withListener()", "full_signature": "@Test public void then_callListenerOnActorThread_withListener()", "class_method_signature": "PromiseImplTest.then_callListenerOnActorThread_withListener()", "testcase": true, "constructor": false, "invocations": ["then", "bind", "verify", "same", "capture", "onResult", "verify", "onResult", "getValue", "onResult", "verify"]}, "focal_class": {"identifier": "PromiseImpl", "superclass": "extends Promise<R>", "interfaces": "implements ActionHandle", "fields": [{"original_string": "@NonNull\n    private final ActorCallbackInvokeException mInvokeException;", "modifier": "@NonNull\n    private final", "type": "ActorCallbackInvokeException", "declarator": "mInvokeException", "var_name": "mInvokeException"}, {"original_string": "@Nullable\n    private volatile R mResult;", "modifier": "@Nullable\n    private volatile", "type": "R", "declarator": "mResult", "var_name": "mResult"}, {"original_string": "@Nullable\n    private ResourceCleaner<R> mCleaner;", "modifier": "@Nullable\n    private", "type": "ResourceCleaner<R>", "declarator": "mCleaner", "var_name": "mCleaner"}], "methods": [{"identifier": "PromiseImpl", "parameters": "(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "modifiers": "", "return": "", "signature": " PromiseImpl(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "full_signature": "  PromiseImpl(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "class_method_signature": "PromiseImpl.PromiseImpl(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "testcase": false, "constructor": true}, {"identifier": "thenNothing", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void thenNothing()", "full_signature": "@Override public void thenNothing()", "class_method_signature": "PromiseImpl.thenNothing()", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@Nullable ResultListener<R> listener)", "modifiers": "@NonNull @Override public", "return": "ActionHandle", "signature": "ActionHandle then(@Nullable ResultListener<R> listener)", "full_signature": "@NonNull @Override public ActionHandle then(@Nullable ResultListener<R> listener)", "class_method_signature": "PromiseImpl.then(@Nullable ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@NonNull ActorThread thread, @Nullable ResultListener<R> listener)", "modifiers": "@NonNull @Override public", "return": "ActionHandle", "signature": "ActionHandle then(@NonNull ActorThread thread, @Nullable ResultListener<R> listener)", "full_signature": "@NonNull @Override public ActionHandle then(@NonNull ActorThread thread, @Nullable ResultListener<R> listener)", "class_method_signature": "PromiseImpl.then(@NonNull ActorThread thread, @Nullable ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "R", "signature": "R get()", "full_signature": "@Nullable @Override public R get()", "class_method_signature": "PromiseImpl.get()", "testcase": false, "constructor": false}, {"identifier": "forget", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void forget()", "full_signature": "@Override public void forget()", "class_method_signature": "PromiseImpl.forget()", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/PromiseImpl.java"}, "focal_method": {"identifier": "then", "parameters": "(@Nullable ResultListener<R> listener)", "modifiers": "@NonNull @Override public", "return": "ActionHandle", "body": "@NonNull\n    @Override\n    public ActionHandle then(@Nullable ResultListener<R> listener) {\n        final R result = mResult;\n        final ResourceCleaner<R> cleaner = mCleaner;\n        mResult = null;\n\n        if (listener != null) {\n            listener.onResult(result);\n        } else if (cleaner != null && result != null) {\n            cleaner.clean(result);\n        }\n\n        mResult = null;\n        mCleaner = null;\n        return this;\n    }", "signature": "ActionHandle then(@Nullable ResultListener<R> listener)", "full_signature": "@NonNull @Override public ActionHandle then(@Nullable ResultListener<R> listener)", "class_method_signature": "PromiseImpl.then(@Nullable ResultListener<R> listener)", "testcase": false, "constructor": false, "invocations": ["onResult", "clean"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}