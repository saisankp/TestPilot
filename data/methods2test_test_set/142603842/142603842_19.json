{"test_class": {"identifier": "RouteOptimizerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DistanceMatrixRow matrixRow = locationId -> Distance.ZERO;", "modifier": "private final", "type": "DistanceMatrixRow", "declarator": "matrixRow = locationId -> Distance.ZERO", "var_name": "matrixRow"}, {"original_string": "private final Location location1 = new Location(1, Coordinates.valueOf(1.0, 0.1));", "modifier": "private final", "type": "Location", "declarator": "location1 = new Location(1, Coordinates.valueOf(1.0, 0.1))", "var_name": "location1"}, {"original_string": "private final Location location2 = new Location(2, Coordinates.valueOf(0.2, 2.2));", "modifier": "private final", "type": "Location", "declarator": "location2 = new Location(2, Coordinates.valueOf(0.2, 2.2))", "var_name": "location2"}, {"original_string": "private final Location location3 = new Location(3, Coordinates.valueOf(3.4, 5.6));", "modifier": "private final", "type": "Location", "declarator": "location3 = new Location(3, Coordinates.valueOf(3.4, 5.6))", "var_name": "location3"}, {"original_string": "@Captor\n    private ArgumentCaptor<VehicleRoutingSolution> solutionArgumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<VehicleRoutingSolution>", "declarator": "solutionArgumentCaptor", "var_name": "solutionArgumentCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<PlanningVehicle> vehicleArgumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<PlanningVehicle>", "declarator": "vehicleArgumentCaptor", "var_name": "vehicleArgumentCaptor"}, {"original_string": "@Mock\n    private SolverManager solverManager;", "modifier": "@Mock\n    private", "type": "SolverManager", "declarator": "solverManager", "var_name": "solverManager"}, {"original_string": "@Mock\n    private RouteChangedEventPublisher routeChangedEventPublisher;", "modifier": "@Mock\n    private", "type": "RouteChangedEventPublisher", "declarator": "routeChangedEventPublisher", "var_name": "routeChangedEventPublisher"}, {"original_string": "@InjectMocks\n    private RouteOptimizerImpl routeOptimizer;", "modifier": "@InjectMocks\n    private", "type": "RouteOptimizerImpl", "declarator": "routeOptimizer", "var_name": "routeOptimizer"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/plugin/planner/RouteOptimizerImplTest.java"}, "test_case": {"identifier": "removing_all_locations_should_not_fail_when_solver_is_not_solving", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void removing_all_locations_should_not_fail_when_solver_is_not_solving() {\n        assertThatCode(() -> routeOptimizer.removeAllLocations()).doesNotThrowAnyException();\n    }", "signature": "void removing_all_locations_should_not_fail_when_solver_is_not_solving()", "full_signature": "@Test void removing_all_locations_should_not_fail_when_solver_is_not_solving()", "class_method_signature": "RouteOptimizerImplTest.removing_all_locations_should_not_fail_when_solver_is_not_solving()", "testcase": true, "constructor": false, "invocations": ["doesNotThrowAnyException", "assertThatCode", "removeAllLocations"]}, "focal_class": {"identifier": "RouteOptimizerImpl", "superclass": "", "interfaces": "implements RouteOptimizer", "fields": [{"original_string": "private final SolverManager solverManager;", "modifier": "private final", "type": "SolverManager", "declarator": "solverManager", "var_name": "solverManager"}, {"original_string": "private final RouteChangedEventPublisher routeChangedEventPublisher;", "modifier": "private final", "type": "RouteChangedEventPublisher", "declarator": "routeChangedEventPublisher", "var_name": "routeChangedEventPublisher"}, {"original_string": "private final List<PlanningVehicle> vehicles = new ArrayList<>();", "modifier": "private final", "type": "List<PlanningVehicle>", "declarator": "vehicles = new ArrayList<>()", "var_name": "vehicles"}, {"original_string": "private final List<PlanningVisit> visits = new ArrayList<>();", "modifier": "private final", "type": "List<PlanningVisit>", "declarator": "visits = new ArrayList<>()", "var_name": "visits"}, {"original_string": "private PlanningDepot depot;", "modifier": "private", "type": "PlanningDepot", "declarator": "depot", "var_name": "depot"}], "methods": [{"identifier": "RouteOptimizerImpl", "parameters": "(SolverManager solverManager, RouteChangedEventPublisher routeChangedEventPublisher)", "modifiers": "@Autowired", "return": "", "signature": " RouteOptimizerImpl(SolverManager solverManager, RouteChangedEventPublisher routeChangedEventPublisher)", "full_signature": "@Autowired  RouteOptimizerImpl(SolverManager solverManager, RouteChangedEventPublisher routeChangedEventPublisher)", "class_method_signature": "RouteOptimizerImpl.RouteOptimizerImpl(SolverManager solverManager, RouteChangedEventPublisher routeChangedEventPublisher)", "testcase": false, "constructor": true}, {"identifier": "addLocation", "parameters": "(Location domainLocation, DistanceMatrixRow distanceMatrixRow)", "modifiers": "@Override public", "return": "void", "signature": "void addLocation(Location domainLocation, DistanceMatrixRow distanceMatrixRow)", "full_signature": "@Override public void addLocation(Location domainLocation, DistanceMatrixRow distanceMatrixRow)", "class_method_signature": "RouteOptimizerImpl.addLocation(Location domainLocation, DistanceMatrixRow distanceMatrixRow)", "testcase": false, "constructor": false}, {"identifier": "removeLocation", "parameters": "(Location domainLocation)", "modifiers": "@Override public", "return": "void", "signature": "void removeLocation(Location domainLocation)", "full_signature": "@Override public void removeLocation(Location domainLocation)", "class_method_signature": "RouteOptimizerImpl.removeLocation(Location domainLocation)", "testcase": false, "constructor": false}, {"identifier": "addVehicle", "parameters": "(Vehicle domainVehicle)", "modifiers": "@Override public", "return": "void", "signature": "void addVehicle(Vehicle domainVehicle)", "full_signature": "@Override public void addVehicle(Vehicle domainVehicle)", "class_method_signature": "RouteOptimizerImpl.addVehicle(Vehicle domainVehicle)", "testcase": false, "constructor": false}, {"identifier": "removeVehicle", "parameters": "(Vehicle domainVehicle)", "modifiers": "@Override public", "return": "void", "signature": "void removeVehicle(Vehicle domainVehicle)", "full_signature": "@Override public void removeVehicle(Vehicle domainVehicle)", "class_method_signature": "RouteOptimizerImpl.removeVehicle(Vehicle domainVehicle)", "testcase": false, "constructor": false}, {"identifier": "changeCapacity", "parameters": "(Vehicle domainVehicle)", "modifiers": "@Override public", "return": "void", "signature": "void changeCapacity(Vehicle domainVehicle)", "full_signature": "@Override public void changeCapacity(Vehicle domainVehicle)", "class_method_signature": "RouteOptimizerImpl.changeCapacity(Vehicle domainVehicle)", "testcase": false, "constructor": false}, {"identifier": "removeAllLocations", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllLocations()", "full_signature": "@Override public void removeAllLocations()", "class_method_signature": "RouteOptimizerImpl.removeAllLocations()", "testcase": false, "constructor": false}, {"identifier": "removeAllVehicles", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllVehicles()", "full_signature": "@Override public void removeAllVehicles()", "class_method_signature": "RouteOptimizerImpl.removeAllVehicles()", "testcase": false, "constructor": false}, {"identifier": "publishSolution", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void publishSolution()", "full_signature": "private void publishSolution()", "class_method_signature": "RouteOptimizerImpl.publishSolution()", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/plugin/planner/RouteOptimizerImpl.java"}, "focal_method": {"identifier": "removeAllLocations", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void removeAllLocations() {\n        solverManager.stopSolver();\n        depot = null;\n        visits.clear();\n        publishSolution();\n    }", "signature": "void removeAllLocations()", "full_signature": "@Override public void removeAllLocations()", "class_method_signature": "RouteOptimizerImpl.removeAllLocations()", "testcase": false, "constructor": false, "invocations": ["stopSolver", "clear", "publishSolution"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}