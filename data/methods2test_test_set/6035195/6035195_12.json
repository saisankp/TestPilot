{"test_class": {"identifier": "RundeckServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ByteArrayOutputStream output;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "output", "var_name": "output"}, {"original_string": "private PrintWriter writer;", "modifier": "private", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}], "file": "integration/rundeck/src/test/java/com/axemblr/provisionr/rundeck/RundeckServletTest.java"}, "test_case": {"identifier": "testEmptyListOfMachines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyListOfMachines() throws JAXBException, IOException, SAXException {\n        ProcessEngine processEngine = new StandaloneInMemProcessEngineConfiguration().buildProcessEngine();\n        try {\n            RundeckServlet servlet = new RundeckServlet(processEngine);\n            servlet.writeRundeckResourceModelXmlTo(writer);\n\n            writer.flush();\n            assertXMLEqual(output.toString(), \"<project />\");\n\n        } finally {\n            processEngine.close();\n        }\n    }", "signature": "void testEmptyListOfMachines()", "full_signature": "@Test public void testEmptyListOfMachines()", "class_method_signature": "RundeckServletTest.testEmptyListOfMachines()", "testcase": true, "constructor": false, "invocations": ["buildProcessEngine", "writeRundeckResourceModelXmlTo", "flush", "assertXMLEqual", "toString", "close"]}, "focal_class": {"identifier": "RundeckServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(RundeckServlet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(RundeckServlet.class)", "var_name": "LOG"}, {"original_string": "private final ProcessEngine processEngine;", "modifier": "private final", "type": "ProcessEngine", "declarator": "processEngine", "var_name": "processEngine"}, {"original_string": "private final Marshaller marshaller;", "modifier": "private final", "type": "Marshaller", "declarator": "marshaller", "var_name": "marshaller"}], "methods": [{"identifier": "RundeckServlet", "parameters": "(ProcessEngine processEngine)", "modifiers": "public", "return": "", "signature": " RundeckServlet(ProcessEngine processEngine)", "full_signature": "public  RundeckServlet(ProcessEngine processEngine)", "class_method_signature": "RundeckServlet.RundeckServlet(ProcessEngine processEngine)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override protected void doGet(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "RundeckServlet.doGet(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "writeRundeckResourceModelXmlTo", "parameters": "(PrintWriter writer)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void writeRundeckResourceModelXmlTo(PrintWriter writer)", "full_signature": "@VisibleForTesting void writeRundeckResourceModelXmlTo(PrintWriter writer)", "class_method_signature": "RundeckServlet.writeRundeckResourceModelXmlTo(PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "transformMachinesToRundeckNodes", "parameters": "(String businessKey, Pool pool, List<Machine> machines)", "modifiers": "@VisibleForTesting", "return": "List<Node>", "signature": "List<Node> transformMachinesToRundeckNodes(String businessKey, Pool pool, List<Machine> machines)", "full_signature": "@VisibleForTesting List<Node> transformMachinesToRundeckNodes(String businessKey, Pool pool, List<Machine> machines)", "class_method_signature": "RundeckServlet.transformMachinesToRundeckNodes(String businessKey, Pool pool, List<Machine> machines)", "testcase": false, "constructor": false}], "file": "integration/rundeck/src/main/java/com/axemblr/provisionr/rundeck/RundeckServlet.java"}, "focal_method": {"identifier": "writeRundeckResourceModelXmlTo", "parameters": "(PrintWriter writer)", "modifiers": "@VisibleForTesting", "return": "void", "body": "@VisibleForTesting\n    void writeRundeckResourceModelXmlTo(PrintWriter writer) {\n        final List<ProcessInstance> processes = processEngine.getRuntimeService()\n            .createProcessInstanceQuery().list();\n\n        Project project = new Project();\n        for (ProcessInstance instance : processes) {\n            final Pool pool = (Pool) processEngine.getRuntimeService()\n                .getVariable(instance.getId(), CoreProcessVariables.POOL);\n            if (pool == null) {\n                continue; /* skip - this process is not a provisionr process */\n            }\n\n            final String businessKey = (String) processEngine.getRuntimeService()\n                .getVariable(instance.getId(), CoreProcessVariables.POOL_BUSINESS_KEY);\n            if (!Objects.equal(instance.getBusinessKey(), businessKey)) {\n                continue; /* ignore - this is a process started by the main pool management process */\n            }\n\n            @SuppressWarnings(\"unchecked\")\n            List<Machine> machines = (List<Machine>) processEngine.getRuntimeService()\n                .getVariable(instance.getId(), CoreProcessVariables.MACHINES);\n            if (machines == null) {\n                continue;   /* the list of machines is not yet available */\n            }\n\n            project.setNodes(transformMachinesToRundeckNodes(businessKey, pool, machines));\n        }\n\n        try {\n            marshaller.marshal(project, writer);\n\n        } catch (JAXBException e) {\n            throw Throwables.propagate(e);\n        }\n    }", "signature": "void writeRundeckResourceModelXmlTo(PrintWriter writer)", "full_signature": "@VisibleForTesting void writeRundeckResourceModelXmlTo(PrintWriter writer)", "class_method_signature": "RundeckServlet.writeRundeckResourceModelXmlTo(PrintWriter writer)", "testcase": false, "constructor": false, "invocations": ["list", "createProcessInstanceQuery", "getRuntimeService", "getVariable", "getRuntimeService", "getId", "getVariable", "getRuntimeService", "getId", "equal", "getBusinessKey", "getVariable", "getRuntimeService", "getId", "setNodes", "transformMachinesToRundeckNodes", "marshal", "propagate"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}