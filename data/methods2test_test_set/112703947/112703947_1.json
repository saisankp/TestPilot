{"test_class": {"identifier": "ZookeeperLogServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private LogService logService;", "modifier": "@Autowired\n    private", "type": "LogService", "declarator": "logService", "var_name": "logService"}], "file": "myth-admin/src/test/java/org/dromara/myth/admin/service/log/ZookeeperLogServiceImplTest.java"}, "test_case": {"identifier": "listByPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listByPage() {\n\n        ConditionQuery query = new ConditionQuery();\n\n        query.setApplicationName(\"alipay-service\");\n\n        PageParameter pageParameter = new PageParameter(1, 8);\n\n        query.setPageParameter(pageParameter);\n\n        final CommonPager<LogVO> voCommonPager = logService.listByPage(query);\n\n\n    }", "signature": "void listByPage()", "full_signature": "@Test public void listByPage()", "class_method_signature": "ZookeeperLogServiceImplTest.listByPage()", "testcase": true, "constructor": false, "invocations": ["setApplicationName", "setPageParameter", "listByPage"]}, "focal_class": {"identifier": "ZookeeperLogServiceImpl", "superclass": "", "interfaces": "implements LogService", "fields": [{"original_string": "private final ZooKeeper zooKeeper;", "modifier": "private final", "type": "ZooKeeper", "declarator": "zooKeeper", "var_name": "zooKeeper"}, {"original_string": "private final ObjectSerializer objectSerializer;", "modifier": "private final", "type": "ObjectSerializer", "declarator": "objectSerializer", "var_name": "objectSerializer"}], "methods": [{"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "ZookeeperLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false}, {"identifier": "batchRemove", "parameters": "(final List<String> ids, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean batchRemove(final List<String> ids, final String appName)", "full_signature": "@Override public Boolean batchRemove(final List<String> ids, final String appName)", "class_method_signature": "ZookeeperLogServiceImpl.batchRemove(final List<String> ids, final String appName)", "testcase": false, "constructor": false}, {"identifier": "updateRetry", "parameters": "(final String id, final Integer retry, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean updateRetry(final String id, final Integer retry, final String appName)", "full_signature": "@Override public Boolean updateRetry(final String id, final Integer retry, final String appName)", "class_method_signature": "ZookeeperLogServiceImpl.updateRetry(final String id, final Integer retry, final String appName)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(final List<String> zNodePaths, final String rootPath)", "modifiers": "private", "return": "List<LogVO>", "signature": "List<LogVO> findAll(final List<String> zNodePaths, final String rootPath)", "full_signature": "private List<LogVO> findAll(final List<String> zNodePaths, final String rootPath)", "class_method_signature": "ZookeeperLogServiceImpl.findAll(final List<String> zNodePaths, final String rootPath)", "testcase": false, "constructor": false}, {"identifier": "findByPage", "parameters": "(final List<String> zNodePaths, final String rootPath,\n                                   final int start, final int pageSize)", "modifiers": "private", "return": "List<LogVO>", "signature": "List<LogVO> findByPage(final List<String> zNodePaths, final String rootPath,\n                                   final int start, final int pageSize)", "full_signature": "private List<LogVO> findByPage(final List<String> zNodePaths, final String rootPath,\n                                   final int start, final int pageSize)", "class_method_signature": "ZookeeperLogServiceImpl.findByPage(final List<String> zNodePaths, final String rootPath,\n                                   final int start, final int pageSize)", "testcase": false, "constructor": false}, {"identifier": "buildByNodePath", "parameters": "(final String rootPath, final String zNodePath)", "modifiers": "private", "return": "LogVO", "signature": "LogVO buildByNodePath(final String rootPath, final String zNodePath)", "full_signature": "private LogVO buildByNodePath(final String rootPath, final String zNodePath)", "class_method_signature": "ZookeeperLogServiceImpl.buildByNodePath(final String rootPath, final String zNodePath)", "testcase": false, "constructor": false}], "file": "myth-admin/src/main/java/org/dromara/myth/admin/service/log/ZookeeperLogServiceImpl.java"}, "focal_method": {"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "body": "@Override\n    public CommonPager<LogVO> listByPage(final ConditionQuery query) {\n        CommonPager<LogVO> voCommonPager = new CommonPager<>();\n        final int currentPage = query.getPageParameter().getCurrentPage();\n        final int pageSize = query.getPageParameter().getPageSize();\n        int start = (currentPage - 1) * pageSize;\n        final String rootPath =\n                RepositoryPathUtils.buildZookeeperPathPrefix(query.getApplicationName());\n        List<String> zNodePaths;\n        List<LogVO> voList;\n        int totalCount;\n        try {\n            if (StringUtils.isBlank(query.getTransId())) {\n                zNodePaths = zooKeeper.getChildren(rootPath, false);\n                totalCount = zNodePaths.size();\n                voList = findByPage(zNodePaths, rootPath, start, pageSize);\n            } else {\n                zNodePaths = Lists.newArrayList(query.getTransId());\n                totalCount = zNodePaths.size();\n                voList = findAll(zNodePaths, rootPath);\n            }\n            voCommonPager.setPage(PageHelper.buildPage(query.getPageParameter(), totalCount));\n            voCommonPager.setDataList(voList);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return voCommonPager;\n    }", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "ZookeeperLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false, "invocations": ["getCurrentPage", "getPageParameter", "getPageSize", "getPageParameter", "buildZookeeperPathPrefix", "getApplicationName", "isBlank", "getTransId", "getChildren", "size", "findByPage", "newArrayList", "getTransId", "size", "findAll", "setPage", "buildPage", "getPageParameter", "setDataList", "printStackTrace"]}, "repository": {"repo_id": 112703947, "url": "https://github.com/Dromara/myth", "language": "Java", "is_fork": false, "fork_count": 621, "stargazer_count": 1416, "size": 1399, "license": "licensed"}}