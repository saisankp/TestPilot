{"test_class": {"identifier": "ForwardingDataTreeChangeListenerTest", "superclass": "extends AbstractActorTest", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/ForwardingDataTreeChangeListenerTest.java"}, "test_case": {"identifier": "testOnDataChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnDataChanged() {\n        final ActorRef actorRef = getSystem().actorOf(MessageCollectorActor.props());\n\n        ForwardingDataTreeChangeListener forwardingListener = new ForwardingDataTreeChangeListener(\n                getSystem().actorSelection(actorRef.path()), ActorRef.noSender());\n\n        Collection<DataTreeCandidate> expected = Arrays.asList(Mockito.mock(DataTreeCandidate.class));\n        forwardingListener.onDataTreeChanged(expected);\n\n        DataTreeChanged actual = MessageCollectorActor.expectFirstMatching(actorRef, DataTreeChanged.class, 5000);\n        Assert.assertSame(expected, actual.getChanges());\n    }", "signature": "void testOnDataChanged()", "full_signature": "@Test public void testOnDataChanged()", "class_method_signature": "ForwardingDataTreeChangeListenerTest.testOnDataChanged()", "testcase": true, "constructor": false, "invocations": ["actorOf", "getSystem", "props", "actorSelection", "getSystem", "path", "noSender", "asList", "mock", "onDataTreeChanged", "expectFirstMatching", "assertSame", "getChanges"]}, "focal_class": {"identifier": "ForwardingDataTreeChangeListener", "superclass": "", "interfaces": "implements DOMDataTreeChangeListener", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ForwardingDataTreeChangeListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ForwardingDataTreeChangeListener.class)", "var_name": "LOG"}, {"original_string": "private final ActorSelection actor;", "modifier": "private final", "type": "ActorSelection", "declarator": "actor", "var_name": "actor"}, {"original_string": "private final ActorRef sendingActor;", "modifier": "private final", "type": "ActorRef", "declarator": "sendingActor", "var_name": "sendingActor"}], "methods": [{"identifier": "ForwardingDataTreeChangeListener", "parameters": "(final ActorSelection actor, @Nullable final ActorRef sendingActor)", "modifiers": "", "return": "", "signature": " ForwardingDataTreeChangeListener(final ActorSelection actor, @Nullable final ActorRef sendingActor)", "full_signature": "  ForwardingDataTreeChangeListener(final ActorSelection actor, @Nullable final ActorRef sendingActor)", "class_method_signature": "ForwardingDataTreeChangeListener.ForwardingDataTreeChangeListener(final ActorSelection actor, @Nullable final ActorRef sendingActor)", "testcase": false, "constructor": true}, {"identifier": "onDataTreeChanged", "parameters": "(final Collection<DataTreeCandidate> changes)", "modifiers": "@Override public", "return": "void", "signature": "void onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "full_signature": "@Override public void onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "class_method_signature": "ForwardingDataTreeChangeListener.onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "testcase": false, "constructor": false}, {"identifier": "onInitialData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onInitialData()", "full_signature": "@Override public void onInitialData()", "class_method_signature": "ForwardingDataTreeChangeListener.onInitialData()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ForwardingDataTreeChangeListener.toString()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ForwardingDataTreeChangeListener.java"}, "focal_method": {"identifier": "onDataTreeChanged", "parameters": "(final Collection<DataTreeCandidate> changes)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onDataTreeChanged(final Collection<DataTreeCandidate> changes) {\n        LOG.debug(\"Sending DataTreeChanged to {}\", actor);\n        actor.tell(new DataTreeChanged(changes), sendingActor);\n    }", "signature": "void onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "full_signature": "@Override public void onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "class_method_signature": "ForwardingDataTreeChangeListener.onDataTreeChanged(final Collection<DataTreeCandidate> changes)", "testcase": false, "constructor": false, "invocations": ["debug", "tell"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}