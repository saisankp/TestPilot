{"test_class": {"identifier": "CopyEndPointsTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/satoolkit/x11/CopyEndPointsTest.java"}, "test_case": {"identifier": "testProcess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcess() {\n        int N = 19;\n        //int P=5;\n        DataBlock in = new DataBlock(N);\n        in.set(1);\n        in.cumul();\n        for (int P = 0; P < 10; ++P) {\n            DataBlock out = in.deepClone();\n            CopyEndPoints cnp = new CopyEndPoints(P);\n            cnp.process(in, out);\n            assertTrue(out.range(0, P + 1).isConstant());\n            assertTrue(out.range(N - P - 1, N).isConstant());\n        }\n    }", "signature": "void testProcess()", "full_signature": "@Test public void testProcess()", "class_method_signature": "CopyEndPointsTest.testProcess()", "testcase": true, "constructor": false, "invocations": ["set", "cumul", "deepClone", "process", "assertTrue", "isConstant", "range", "assertTrue", "isConstant", "range"]}, "focal_class": {"identifier": "CopyEndPoints", "superclass": "", "interfaces": "implements IEndPointsProcessor", "fields": [{"original_string": "private int npoints;", "modifier": "private", "type": "int", "declarator": "npoints", "var_name": "npoints"}], "methods": [{"identifier": "CopyEndPoints", "parameters": "(int npoints)", "modifiers": "public", "return": "", "signature": " CopyEndPoints(int npoints)", "full_signature": "public  CopyEndPoints(int npoints)", "class_method_signature": "CopyEndPoints.CopyEndPoints(int npoints)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(final DataBlock in, final DataBlock out)", "modifiers": "@Override public", "return": "void", "signature": "void process(final DataBlock in, final DataBlock out)", "full_signature": "@Override public void process(final DataBlock in, final DataBlock out)", "class_method_signature": "CopyEndPoints.process(final DataBlock in, final DataBlock out)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/satoolkit/x11/CopyEndPoints.java"}, "focal_method": {"identifier": "process", "parameters": "(final DataBlock in, final DataBlock out)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final DataBlock in, final DataBlock out) {\n\tout.range(0, npoints).set(out.get(npoints));\n\tint n = out.getLength();\n\tout.range(n - npoints, n).set(out.get(n - npoints - 1));\n    }", "signature": "void process(final DataBlock in, final DataBlock out)", "full_signature": "@Override public void process(final DataBlock in, final DataBlock out)", "class_method_signature": "CopyEndPoints.process(final DataBlock in, final DataBlock out)", "testcase": false, "constructor": false, "invocations": ["set", "range", "get", "getLength", "set", "range", "get"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}