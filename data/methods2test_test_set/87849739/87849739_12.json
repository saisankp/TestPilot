{"test_class": {"identifier": "ImmutableJsonStringTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_STRING_VALUE = \"foo\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_STRING_VALUE = \"foo\"", "var_name": "KNOWN_STRING_VALUE"}], "file": "json/src/test/java/org/eclipse/ditto/json/ImmutableJsonStringTest.java"}, "test_case": {"identifier": "toStringReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toStringReturnsExpected() {\n        final String expected = \"\\\"\" + KNOWN_STRING_VALUE + \"\\\"\";\n        final com.eclipsesource.json.JsonValue underTest = Json.value(KNOWN_STRING_VALUE);\n\n        assertThat(underTest.toString()).isEqualTo(expected);\n    }", "signature": "void toStringReturnsExpected()", "full_signature": "@Test public void toStringReturnsExpected()", "class_method_signature": "ImmutableJsonStringTest.toStringReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["value", "isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "ImmutableJsonString", "superclass": "extends AbstractJsonValue", "interfaces": "", "fields": [{"original_string": "private static final long MAX_CHAR_ESCAPE_SEQUENCE_LENGTH = 6;", "modifier": "private static final", "type": "long", "declarator": "MAX_CHAR_ESCAPE_SEQUENCE_LENGTH = 6", "var_name": "MAX_CHAR_ESCAPE_SEQUENCE_LENGTH"}, {"original_string": "private static final long NUM_ENCLOSING_QUOTES = 2;", "modifier": "private static final", "type": "long", "declarator": "NUM_ENCLOSING_QUOTES = 2", "var_name": "NUM_ENCLOSING_QUOTES"}, {"original_string": "private final String value;", "modifier": "private final", "type": "String", "declarator": "value", "var_name": "value"}, {"original_string": "@Nullable private String stringRepresentation;", "modifier": "@Nullable private", "type": "String", "declarator": "stringRepresentation", "var_name": "stringRepresentation"}], "methods": [{"identifier": "ImmutableJsonString", "parameters": "(final String jsonString)", "modifiers": "private", "return": "", "signature": " ImmutableJsonString(final String jsonString)", "full_signature": "private  ImmutableJsonString(final String jsonString)", "class_method_signature": "ImmutableJsonString.ImmutableJsonString(final String jsonString)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final String string)", "modifiers": "public static", "return": "ImmutableJsonString", "signature": "ImmutableJsonString of(final String string)", "full_signature": "public static ImmutableJsonString of(final String string)", "class_method_signature": "ImmutableJsonString.of(final String string)", "testcase": false, "constructor": false}, {"identifier": "isString", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isString()", "full_signature": "@Override public boolean isString()", "class_method_signature": "ImmutableJsonString.isString()", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String asString()", "full_signature": "@Override public String asString()", "class_method_signature": "ImmutableJsonString.asString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableJsonString.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableJsonString.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonString.toString()", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(final SerializationContext serializationContext)", "modifiers": "@Override public", "return": "void", "signature": "void writeValue(final SerializationContext serializationContext)", "full_signature": "@Override public void writeValue(final SerializationContext serializationContext)", "class_method_signature": "ImmutableJsonString.writeValue(final SerializationContext serializationContext)", "testcase": false, "constructor": false}, {"identifier": "getUpperBoundForStringSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getUpperBoundForStringSize()", "full_signature": "@Override public long getUpperBoundForStringSize()", "class_method_signature": "ImmutableJsonString.getUpperBoundForStringSize()", "testcase": false, "constructor": false}, {"identifier": "createStringRepresentation", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String createStringRepresentation()", "full_signature": "private String createStringRepresentation()", "class_method_signature": "ImmutableJsonString.createStringRepresentation()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/ImmutableJsonString.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        // keep escaped string as escaping is expensive\n        String result = stringRepresentation;\n        if (null == result) {\n            result = createStringRepresentation();\n            stringRepresentation = result;\n        }\n        return result;\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableJsonString.toString()", "testcase": false, "constructor": false, "invocations": ["createStringRepresentation"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}