{"test_class": {"identifier": "CaselessUnmodifiableMultivaluedMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExtMultivaluedMap<String, String> map;", "modifier": "private", "type": "ExtMultivaluedMap<String, String>", "declarator": "map", "var_name": "map"}], "file": "everrest-core/src/test/java/org/everrest/core/util/CaselessUnmodifiableMultivaluedMapTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testAdd() {\n        map.add(\"k\", \"value\");\n    }", "signature": "void testAdd()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testAdd()", "class_method_signature": "CaselessUnmodifiableMultivaluedMapTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["add"]}, "focal_class": {"identifier": "CaselessUnmodifiableMultivaluedMap", "superclass": "extends CaselessMultivaluedMap<T>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -7195370974690531404L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7195370974690531404L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "CaselessUnmodifiableMultivaluedMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " CaselessUnmodifiableMultivaluedMap()", "full_signature": "public  CaselessUnmodifiableMultivaluedMap()", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.CaselessUnmodifiableMultivaluedMap()", "testcase": false, "constructor": true}, {"identifier": "CaselessUnmodifiableMultivaluedMap", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " CaselessUnmodifiableMultivaluedMap(int capacity)", "full_signature": "public  CaselessUnmodifiableMultivaluedMap(int capacity)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.CaselessUnmodifiableMultivaluedMap(int capacity)", "testcase": false, "constructor": true}, {"identifier": "CaselessUnmodifiableMultivaluedMap", "parameters": "(Map<String, List<T>> m)", "modifiers": "public", "return": "", "signature": " CaselessUnmodifiableMultivaluedMap(Map<String, List<T>> m)", "full_signature": "public  CaselessUnmodifiableMultivaluedMap(Map<String, List<T>> m)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.CaselessUnmodifiableMultivaluedMap(Map<String, List<T>> m)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(String key, T value)", "modifiers": "@Override public", "return": "void", "signature": "void add(String key, T value)", "full_signature": "@Override public void add(String key, T value)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.add(String key, T value)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.clear()", "testcase": false, "constructor": false}, {"identifier": "entrySet", "parameters": "()", "modifiers": "@Override public", "return": "Set<Entry<String, List<T>>>", "signature": "Set<Entry<String, List<T>>> entrySet()", "full_signature": "@Override public Set<Entry<String, List<T>>> entrySet()", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.entrySet()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> get(Object key)", "full_signature": "@Override public List<T> get(Object key)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(String key)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> getList(String key)", "full_signature": "@Override public List<T> getList(String key)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.getList(String key)", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> keySet()", "full_signature": "@Override public Set<String> keySet()", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.keySet()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String key, List<T> value)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> put(String key, List<T> value)", "full_signature": "@Override public List<T> put(String key, List<T> value)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.put(String key, List<T> value)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Map<? extends String, ? extends List<T>> m)", "modifiers": "@Override public", "return": "void", "signature": "void putAll(Map<? extends String, ? extends List<T>> m)", "full_signature": "@Override public void putAll(Map<? extends String, ? extends List<T>> m)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.putAll(Map<? extends String, ? extends List<T>> m)", "testcase": false, "constructor": false}, {"identifier": "putSingle", "parameters": "(String key, T value)", "modifiers": "@Override public", "return": "void", "signature": "void putSingle(String key, T value)", "full_signature": "@Override public void putSingle(String key, T value)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.putSingle(String key, T value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object key)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> remove(Object key)", "full_signature": "@Override public List<T> remove(Object key)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.remove(Object key)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(String key, T... newValues)", "modifiers": "@Override public", "return": "void", "signature": "void addAll(String key, T... newValues)", "full_signature": "@Override public void addAll(String key, T... newValues)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.addAll(String key, T... newValues)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(String key, List<T> valueList)", "modifiers": "@Override public", "return": "void", "signature": "void addAll(String key, List<T> valueList)", "full_signature": "@Override public void addAll(String key, List<T> valueList)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.addAll(String key, List<T> valueList)", "testcase": false, "constructor": false}, {"identifier": "addFirst", "parameters": "(String key, T value)", "modifiers": "@Override public", "return": "void", "signature": "void addFirst(String key, T value)", "full_signature": "@Override public void addFirst(String key, T value)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.addFirst(String key, T value)", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "@Override public", "return": "Collection<List<T>>", "signature": "Collection<List<T>> values()", "full_signature": "@Override public Collection<List<T>> values()", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.values()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/util/CaselessUnmodifiableMultivaluedMap.java"}, "focal_method": {"identifier": "add", "parameters": "(String key, T value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void add(String key, T value) {\n        throw new UnsupportedOperationException(\"add\");\n    }", "signature": "void add(String key, T value)", "full_signature": "@Override public void add(String key, T value)", "class_method_signature": "CaselessUnmodifiableMultivaluedMap.add(String key, T value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}