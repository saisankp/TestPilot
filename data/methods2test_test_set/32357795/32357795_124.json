{"test_class": {"identifier": "BeanUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "ontopia-engine/src/test/java/net/ontopia/utils/BeanUtilsTest.java"}, "test_case": {"identifier": "testToMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToMap() {\n    Map<String, String> map = BeanUtils.beanMap(new MyBean(), false);\n    Assert.assertEquals(\"foo\", map.get(\"foo\"));\n    Assert.assertEquals(\"3\", map.get(\"bar\"));\n    Assert.assertNull(map.get(\"withParams\"));\n    Assert.assertEquals(\"[<MyBean>, <MyBean>]\", map.get(\"list\"));\n  }", "signature": "void testToMap()", "full_signature": "@Test public void testToMap()", "class_method_signature": "BeanUtilsTest.testToMap()", "testcase": true, "constructor": false, "invocations": ["beanMap", "assertEquals", "get", "assertEquals", "get", "assertNull", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "BeanUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "BeanUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " BeanUtils()", "full_signature": "private  BeanUtils()", "class_method_signature": "BeanUtils.BeanUtils()", "testcase": false, "constructor": true}, {"identifier": "beanMap", "parameters": "(Object bean, boolean sorted)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> beanMap(Object bean, boolean sorted)", "full_signature": "public static Map<String, String> beanMap(Object bean, boolean sorted)", "class_method_signature": "BeanUtils.beanMap(Object bean, boolean sorted)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/utils/BeanUtils.java"}, "focal_method": {"identifier": "beanMap", "parameters": "(Object bean, boolean sorted)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> beanMap(Object bean, boolean sorted) {\n    Map<String, String> map =\n            sorted ? new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER)\n                   : new HashMap<String, String>();\n\n    for (Method method : bean.getClass().getMethods()) {\n      if (method.getName().startsWith(\"get\") && !method.getName().equals(\"getClass\") && (method.getReturnType() != null)) {\n        try {\n          Object o = method.invoke(bean);\n          String name = method.getName().substring(3);\n          name = name.substring(0, 1).toLowerCase() + name.substring(1);\n          map.put(name, o == null ? \"null\" : o.toString());\n        } catch (Exception e) {\n          // could not get property: ignore\n        }\n      }\n    }\n    return map;\n  }", "signature": "Map<String, String> beanMap(Object bean, boolean sorted)", "full_signature": "public static Map<String, String> beanMap(Object bean, boolean sorted)", "class_method_signature": "BeanUtils.beanMap(Object bean, boolean sorted)", "testcase": false, "constructor": false, "invocations": ["getMethods", "getClass", "startsWith", "getName", "equals", "getName", "getReturnType", "invoke", "substring", "getName", "toLowerCase", "substring", "substring", "put", "toString"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}