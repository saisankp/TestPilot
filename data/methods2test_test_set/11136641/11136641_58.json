{"test_class": {"identifier": "BindOperationRecorderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LdapOperations ldapOperationsMock;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperationsMock", "var_name": "ldapOperationsMock"}], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/BindOperationRecorderTest.java"}, "test_case": {"identifier": "testPerformOperation_Invalid", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testPerformOperation_Invalid() {\n        BindOperationRecorder tested = new BindOperationRecorder(\n                ldapOperationsMock);\n        Object expectedDn = new Object();\n\n        // Perform test.\n        tested.recordOperation(new Object[]{expectedDn});\n    }", "signature": "void testPerformOperation_Invalid()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testPerformOperation_Invalid()", "class_method_signature": "BindOperationRecorderTest.testPerformOperation_Invalid()", "testcase": true, "constructor": false, "invocations": ["recordOperation"]}, "focal_class": {"identifier": "BindOperationRecorder", "superclass": "", "interfaces": "implements\n        CompensatingTransactionOperationRecorder", "fields": [{"original_string": "private LdapOperations ldapOperations;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperations", "var_name": "ldapOperations"}], "methods": [{"identifier": "BindOperationRecorder", "parameters": "(LdapOperations ldapOperations)", "modifiers": "public", "return": "", "signature": " BindOperationRecorder(LdapOperations ldapOperations)", "full_signature": "public  BindOperationRecorder(LdapOperations ldapOperations)", "class_method_signature": "BindOperationRecorder.BindOperationRecorder(LdapOperations ldapOperations)", "testcase": false, "constructor": true}, {"identifier": "recordOperation", "parameters": "(\n            Object[] args)", "modifiers": "public", "return": "CompensatingTransactionOperationExecutor", "signature": "CompensatingTransactionOperationExecutor recordOperation(\n            Object[] args)", "full_signature": "public CompensatingTransactionOperationExecutor recordOperation(\n            Object[] args)", "class_method_signature": "BindOperationRecorder.recordOperation(\n            Object[] args)", "testcase": false, "constructor": false}, {"identifier": "getLdapOperations", "parameters": "()", "modifiers": "", "return": "LdapOperations", "signature": "LdapOperations getLdapOperations()", "full_signature": " LdapOperations getLdapOperations()", "class_method_signature": "BindOperationRecorder.getLdapOperations()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/BindOperationRecorder.java"}, "focal_method": {"identifier": "recordOperation", "parameters": "(\n            Object[] args)", "modifiers": "public", "return": "CompensatingTransactionOperationExecutor", "body": "public CompensatingTransactionOperationExecutor recordOperation(\n            Object[] args) {\n        if (args == null || args.length != 3) {\n            throw new IllegalArgumentException(\n                    \"Invalid arguments for bind operation\");\n        }\n        Name dn = LdapTransactionUtils.getFirstArgumentAsName(args);\n        Object object = args[1];\n        Attributes attributes = null;\n        if (args[2] != null && !(args[2] instanceof Attributes)) {\n            throw new IllegalArgumentException(\n                    \"Invalid third argument to bind operation\");\n        } else if (args[2] != null) {\n            attributes = (Attributes) args[2];\n        }\n\n        return new BindOperationExecutor(ldapOperations, dn, object, attributes);\n    }", "signature": "CompensatingTransactionOperationExecutor recordOperation(\n            Object[] args)", "full_signature": "public CompensatingTransactionOperationExecutor recordOperation(\n            Object[] args)", "class_method_signature": "BindOperationRecorder.recordOperation(\n            Object[] args)", "testcase": false, "constructor": false, "invocations": ["getFirstArgumentAsName"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}