{"test_class": {"identifier": "StringUtilsTest", "superclass": "extends TestLogger", "interfaces": "", "fields": [], "file": "flink-core/src/test/java/org/apache/flink/util/StringUtilsTest.java"}, "test_case": {"identifier": "testHexArrayToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHexArrayToString() {\n\t\tbyte[] byteArray = new byte[]{1, -97, 49, 74 };\n\t\tString hex = StringUtils.byteToHexString(byteArray);\n\t\tassertEquals(\"019f314a\", hex);\n\t}", "signature": "void testHexArrayToString()", "full_signature": "@Test public void testHexArrayToString()", "class_method_signature": "StringUtilsTest.testHexArrayToString()", "testcase": true, "constructor": false, "invocations": ["byteToHexString", "assertEquals"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "stringifyException", "parameters": "(final Throwable e)", "modifiers": "public static", "return": "String", "signature": "String stringifyException(final Throwable e)", "full_signature": "public static String stringifyException(final Throwable e)", "class_method_signature": "StringUtils.stringifyException(final Throwable e)", "testcase": false, "constructor": false}, {"identifier": "byteToHexString", "parameters": "(final byte[] bytes, final int start, final int end)", "modifiers": "public static", "return": "String", "signature": "String byteToHexString(final byte[] bytes, final int start, final int end)", "full_signature": "public static String byteToHexString(final byte[] bytes, final int start, final int end)", "class_method_signature": "StringUtils.byteToHexString(final byte[] bytes, final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "byteToHexString", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String byteToHexString(final byte[] bytes)", "full_signature": "public static String byteToHexString(final byte[] bytes)", "class_method_signature": "StringUtils.byteToHexString(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hexStringToByte", "parameters": "(final String hex)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexStringToByte(final String hex)", "full_signature": "public static byte[] hexStringToByte(final String hex)", "class_method_signature": "StringUtils.hexStringToByte(final String hex)", "testcase": false, "constructor": false}, {"identifier": "escapeHtml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeHtml(String str)", "full_signature": "public static String escapeHtml(String str)", "class_method_signature": "StringUtils.escapeHtml(String str)", "testcase": false, "constructor": false}, {"identifier": "arrayAwareToString", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String arrayAwareToString(Object o)", "full_signature": "public static String arrayAwareToString(Object o)", "class_method_signature": "StringUtils.arrayAwareToString(Object o)", "testcase": false, "constructor": false}, {"identifier": "arrayToString", "parameters": "(Object array)", "modifiers": "public static", "return": "String", "signature": "String arrayToString(Object array)", "full_signature": "public static String arrayToString(Object array)", "class_method_signature": "StringUtils.arrayToString(Object array)", "testcase": false, "constructor": false}, {"identifier": "showControlCharacters", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String showControlCharacters(String str)", "full_signature": "public static String showControlCharacters(String str)", "class_method_signature": "StringUtils.showControlCharacters(String str)", "testcase": false, "constructor": false}, {"identifier": "getRandomString", "parameters": "(Random rnd, int minLength, int maxLength)", "modifiers": "public static", "return": "String", "signature": "String getRandomString(Random rnd, int minLength, int maxLength)", "full_signature": "public static String getRandomString(Random rnd, int minLength, int maxLength)", "class_method_signature": "StringUtils.getRandomString(Random rnd, int minLength, int maxLength)", "testcase": false, "constructor": false}, {"identifier": "getRandomString", "parameters": "(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "modifiers": "public static", "return": "String", "signature": "String getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "full_signature": "public static String getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "class_method_signature": "StringUtils.getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "testcase": false, "constructor": false}, {"identifier": "writeNullableString", "parameters": "(String str, DataOutputView out)", "modifiers": "public static", "return": "void", "signature": "void writeNullableString(String str, DataOutputView out)", "full_signature": "public static void writeNullableString(String str, DataOutputView out)", "class_method_signature": "StringUtils.writeNullableString(String str, DataOutputView out)", "testcase": false, "constructor": false}, {"identifier": "readNullableString", "parameters": "(DataInputView in)", "modifiers": "public static", "return": "String", "signature": "String readNullableString(DataInputView in)", "full_signature": "public static String readNullableString(DataInputView in)", "class_method_signature": "StringUtils.readNullableString(DataInputView in)", "testcase": false, "constructor": false}], "file": "flink-core/src/main/java/org/apache/flink/util/StringUtils.java"}, "focal_method": {"identifier": "byteToHexString", "parameters": "(final byte[] bytes, final int start, final int end)", "modifiers": "public static", "return": "String", "body": "public static String byteToHexString(final byte[] bytes, final int start, final int end) {\n\t\tif (bytes == null) {\n\t\t\tthrow new IllegalArgumentException(\"bytes == null\");\n\t\t}\n\t\t\n\t\tfinal char[] HEX_CHARS = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n\n\t\tint length = end - start;\n\t\tchar[] out = new char[length * 2];\n\n\t\tfor (int i = start, j = 0; i < end; i++) {\n\t\t\tout[j++] = HEX_CHARS[(0xF0 & bytes[i]) >>> 4];\n\t\t\tout[j++] = HEX_CHARS[0x0F & bytes[i]];\n\t\t}\n\n\t\treturn new String(out);\n\t}", "signature": "String byteToHexString(final byte[] bytes, final int start, final int end)", "full_signature": "public static String byteToHexString(final byte[] bytes, final int start, final int end)", "class_method_signature": "StringUtils.byteToHexString(final byte[] bytes, final int start, final int end)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}