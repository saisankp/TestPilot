{"test_class": {"identifier": "CompressorFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/codec/CompressorFactoryTest.java"}, "test_case": {"identifier": "getCompressor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCompressor() throws Exception {\n        Compressor compressor = CompressorFactory.getCompressor((byte) 113);\n        Assert.assertNotNull(compressor);\n        Assert.assertEquals(compressor.getClass(), TestCompressor.class);\n    }", "signature": "void getCompressor()", "full_signature": "@Test public void getCompressor()", "class_method_signature": "CompressorFactoryTest.getCompressor()", "testcase": true, "constructor": false, "invocations": ["getCompressor", "assertNotNull", "assertEquals", "getClass"]}, "focal_class": {"identifier": "CompressorFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ConcurrentMap<Byte, Compressor> TYPE_COMPRESSOR_MAP = new ConcurrentHashMap<Byte, Compressor>();", "modifier": "private final static", "type": "ConcurrentMap<Byte, Compressor>", "declarator": "TYPE_COMPRESSOR_MAP = new ConcurrentHashMap<Byte, Compressor>()", "var_name": "TYPE_COMPRESSOR_MAP"}, {"original_string": "private final static ConcurrentMap<String, Byte>     TYPE_CODE_MAP       = new ConcurrentHashMap<String, Byte>();", "modifier": "private final static", "type": "ConcurrentMap<String, Byte>", "declarator": "TYPE_CODE_MAP       = new ConcurrentHashMap<String, Byte>()", "var_name": "TYPE_CODE_MAP"}, {"original_string": "private final static ExtensionLoader<Compressor>     EXTENSION_LOADER    = buildLoader();", "modifier": "private final static", "type": "ExtensionLoader<Compressor>", "declarator": "EXTENSION_LOADER    = buildLoader()", "var_name": "EXTENSION_LOADER"}], "methods": [{"identifier": "buildLoader", "parameters": "()", "modifiers": "private static", "return": "ExtensionLoader<Compressor>", "signature": "ExtensionLoader<Compressor> buildLoader()", "full_signature": "private static ExtensionLoader<Compressor> buildLoader()", "class_method_signature": "CompressorFactory.buildLoader()", "testcase": false, "constructor": false}, {"identifier": "getCompressor", "parameters": "(String alias)", "modifiers": "public static", "return": "Compressor", "signature": "Compressor getCompressor(String alias)", "full_signature": "public static Compressor getCompressor(String alias)", "class_method_signature": "CompressorFactory.getCompressor(String alias)", "testcase": false, "constructor": false}, {"identifier": "getCompressor", "parameters": "(byte code)", "modifiers": "public static", "return": "Compressor", "signature": "Compressor getCompressor(byte code)", "full_signature": "public static Compressor getCompressor(byte code)", "class_method_signature": "CompressorFactory.getCompressor(byte code)", "testcase": false, "constructor": false}, {"identifier": "getCodeByAlias", "parameters": "(String compress)", "modifiers": "public static", "return": "byte", "signature": "byte getCodeByAlias(String compress)", "full_signature": "public static byte getCodeByAlias(String compress)", "class_method_signature": "CompressorFactory.getCodeByAlias(String compress)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/codec/CompressorFactory.java"}, "focal_method": {"identifier": "getCompressor", "parameters": "(String alias)", "modifiers": "public static", "return": "Compressor", "body": "public static Compressor getCompressor(String alias) {\n        // \u5de5\u5382\u6a21\u5f0f  \u6258\u7ba1\u7ed9ExtensionLoader\n        return EXTENSION_LOADER.getExtension(alias);\n    }", "signature": "Compressor getCompressor(String alias)", "full_signature": "public static Compressor getCompressor(String alias)", "class_method_signature": "CompressorFactory.getCompressor(String alias)", "testcase": false, "constructor": false, "invocations": ["getExtension"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}