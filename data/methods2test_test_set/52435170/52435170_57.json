{"test_class": {"identifier": "DatabaseConnectionFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String H2_CONNECTION_URL_PROP_VALUE = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\";", "modifier": "private static final", "type": "String", "declarator": "H2_CONNECTION_URL_PROP_VALUE = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\"", "var_name": "H2_CONNECTION_URL_PROP_VALUE"}, {"original_string": "private static final String H2_DRIVER_CLASS_PROP_VALUE = \"org.h2.Driver\";", "modifier": "private static final", "type": "String", "declarator": "H2_DRIVER_CLASS_PROP_VALUE = \"org.h2.Driver\"", "var_name": "H2_DRIVER_CLASS_PROP_VALUE"}, {"original_string": "private static final String SQLITE_CONNECTION_URL_PROP_PREFIX = \"jdbc:sqlite:\";", "modifier": "private static final", "type": "String", "declarator": "SQLITE_CONNECTION_URL_PROP_PREFIX = \"jdbc:sqlite:\"", "var_name": "SQLITE_CONNECTION_URL_PROP_PREFIX"}, {"original_string": "private static final String SQLITE_DRIVER_CLASS_PROP_VALUE = \"org.sqlite.JDBC\";", "modifier": "private static final", "type": "String", "declarator": "SQLITE_DRIVER_CLASS_PROP_VALUE = \"org.sqlite.JDBC\"", "var_name": "SQLITE_DRIVER_CLASS_PROP_VALUE"}, {"original_string": "private static final String PASSWORD_PROP_VALUE = \"test\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD_PROP_VALUE = \"test\"", "var_name": "PASSWORD_PROP_VALUE"}, {"original_string": "private static final String USERNAME_PROP_VALUE = \"test\";", "modifier": "private static final", "type": "String", "declarator": "USERNAME_PROP_VALUE = \"test\"", "var_name": "USERNAME_PROP_VALUE"}, {"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}, {"original_string": "private IDatabaseConnection connection;", "modifier": "private", "type": "IDatabaseConnection", "declarator": "connection", "var_name": "connection"}], "file": "rdbms/src/test/java/eu/drus/jpa/unit/sql/dbunit/DatabaseConnectionFactoryTest.java"}, "test_case": {"identifier": "testOpenConnectionUsingUnknownDriver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOpenConnectionUsingUnknownDriver() throws ClassNotFoundException {\n        // GIVEN\n        final BasicDataSource ds = new BasicDataSource();\n        ds.setDriverClassName(\"unknown\");\n\n        // WHEN\n        try {\n            connection = DatabaseConnectionFactory.openConnection(ds);\n            fail(\"JpaTestException is expected\");\n        } catch (final JpaUnitException e) {\n            // THEN\n            // JpaTestException is thrown\n        }\n    }", "signature": "void testOpenConnectionUsingUnknownDriver()", "full_signature": "@Test public void testOpenConnectionUsingUnknownDriver()", "class_method_signature": "DatabaseConnectionFactoryTest.testOpenConnectionUsingUnknownDriver()", "testcase": true, "constructor": false, "invocations": ["setDriverClassName", "openConnection", "fail"]}, "focal_class": {"identifier": "DatabaseConnectionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ServiceLoader<DbUnitConnectionFactory> SERVICE_LOADER = ServiceLoader.load(DbUnitConnectionFactory.class);", "modifier": "private static final", "type": "ServiceLoader<DbUnitConnectionFactory>", "declarator": "SERVICE_LOADER = ServiceLoader.load(DbUnitConnectionFactory.class)", "var_name": "SERVICE_LOADER"}], "methods": [{"identifier": "DatabaseConnectionFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " DatabaseConnectionFactory()", "full_signature": "private  DatabaseConnectionFactory()", "class_method_signature": "DatabaseConnectionFactory.DatabaseConnectionFactory()", "testcase": false, "constructor": true}, {"identifier": "openConnection", "parameters": "(final BasicDataSource ds)", "modifiers": "public static", "return": "IDatabaseConnection", "signature": "IDatabaseConnection openConnection(final BasicDataSource ds)", "full_signature": "public static IDatabaseConnection openConnection(final BasicDataSource ds)", "class_method_signature": "DatabaseConnectionFactory.openConnection(final BasicDataSource ds)", "testcase": false, "constructor": false}, {"identifier": "discoverSchema", "parameters": "(final Connection connection)", "modifiers": "private static", "return": "String", "signature": "String discoverSchema(final Connection connection)", "full_signature": "private static String discoverSchema(final Connection connection)", "class_method_signature": "DatabaseConnectionFactory.discoverSchema(final Connection connection)", "testcase": false, "constructor": false}], "file": "rdbms/src/main/java/eu/drus/jpa/unit/sql/dbunit/DatabaseConnectionFactory.java"}, "focal_method": {"identifier": "openConnection", "parameters": "(final BasicDataSource ds)", "modifiers": "public static", "return": "IDatabaseConnection", "body": "public static IDatabaseConnection openConnection(final BasicDataSource ds) {\n        try {\n            final Connection connection = ds.getConnection();\n\n            for (final DbUnitConnectionFactory impl : SERVICE_LOADER) {\n                if (impl.supportsDriver(ds.getDriverClassName())) {\n                    return impl.createConnection(connection, discoverSchema(connection));\n                }\n            }\n\n            // fall back if no specific implementation is available\n            return new DatabaseConnection(connection);\n        } catch (final DatabaseUnitException | SQLException e) {\n            throw new JpaUnitException(e);\n        }\n    }", "signature": "IDatabaseConnection openConnection(final BasicDataSource ds)", "full_signature": "public static IDatabaseConnection openConnection(final BasicDataSource ds)", "class_method_signature": "DatabaseConnectionFactory.openConnection(final BasicDataSource ds)", "testcase": false, "constructor": false, "invocations": ["getConnection", "supportsDriver", "getDriverClassName", "createConnection", "discoverSchema"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}