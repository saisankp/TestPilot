{"test_class": {"identifier": "TestActiveGrammarSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ScopeObserver observer;", "modifier": "private", "type": "ScopeObserver", "declarator": "observer", "var_name": "observer"}, {"original_string": "private GrammarDocument document1;", "modifier": "private", "type": "GrammarDocument", "declarator": "document1", "var_name": "document1"}, {"original_string": "private GrammarDocument document2;", "modifier": "private", "type": "GrammarDocument", "declarator": "document2", "var_name": "document2"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/TestActiveGrammarSet.java"}, "test_case": {"identifier": "testAddAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddAll() throws Exception {\n        final ActiveGrammarSet set = new ActiveGrammarSet(observer);\n        final Collection<GrammarDocument> documents =\n                new java.util.ArrayList<GrammarDocument>();\n        documents.add(document1);\n        documents.add(document2);\n        documents.add(document1);\n        set.addAll(documents);\n        final Collection<GrammarDocument> docs = set.getGrammars();\n        Assert.assertEquals(2, docs.size());\n    }", "signature": "void testAddAll()", "full_signature": "@Test public void testAddAll()", "class_method_signature": "TestActiveGrammarSet.testAddAll()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "addAll", "getGrammars", "assertEquals", "size"]}, "focal_class": {"identifier": "ActiveGrammarSet", "superclass": "", "interfaces": "implements ScopedSetObserver<GrammarDocument>", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(ActiveGrammarSet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(ActiveGrammarSet.class)", "var_name": "LOGGER"}, {"original_string": "private final ScopedSet<GrammarDocument> grammars;", "modifier": "private final", "type": "ScopedSet<GrammarDocument>", "declarator": "grammars", "var_name": "grammars"}, {"original_string": "private final Collection<ActiveGrammarSetObserver> observers;", "modifier": "private final", "type": "Collection<ActiveGrammarSetObserver>", "declarator": "observers", "var_name": "observers"}], "methods": [{"identifier": "ActiveGrammarSet", "parameters": "(final ScopeObserver scopeObserver)", "modifiers": "public", "return": "", "signature": " ActiveGrammarSet(final ScopeObserver scopeObserver)", "full_signature": "public  ActiveGrammarSet(final ScopeObserver scopeObserver)", "class_method_signature": "ActiveGrammarSet.ActiveGrammarSet(final ScopeObserver scopeObserver)", "testcase": false, "constructor": true}, {"identifier": "addActiveGrammarSetObserver", "parameters": "(\n            final ActiveGrammarSetObserver obs)", "modifiers": "public", "return": "void", "signature": "void addActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "full_signature": "public void addActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "class_method_signature": "ActiveGrammarSet.addActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "testcase": false, "constructor": false}, {"identifier": "removeActiveGrammarSetObserver", "parameters": "(\n            final ActiveGrammarSetObserver obs)", "modifiers": "public", "return": "void", "signature": "void removeActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "full_signature": "public void removeActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "class_method_signature": "ActiveGrammarSet.removeActiveGrammarSetObserver(\n            final ActiveGrammarSetObserver obs)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "ActiveGrammarSet.size()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final GrammarDocument grammar)", "modifiers": "public", "return": "void", "signature": "void add(final GrammarDocument grammar)", "full_signature": "public void add(final GrammarDocument grammar)", "class_method_signature": "ActiveGrammarSet.add(final GrammarDocument grammar)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(final Collection<GrammarDocument> grams)", "modifiers": "public", "return": "void", "signature": "void addAll(final Collection<GrammarDocument> grams)", "full_signature": "public void addAll(final Collection<GrammarDocument> grams)", "class_method_signature": "ActiveGrammarSet.addAll(final Collection<GrammarDocument> grams)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<GrammarDocument> grams)", "modifiers": "public", "return": "void", "signature": "void removeAll(final Collection<GrammarDocument> grams)", "full_signature": "public void removeAll(final Collection<GrammarDocument> grams)", "class_method_signature": "ActiveGrammarSet.removeAll(final Collection<GrammarDocument> grams)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final GrammarDocument document)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final GrammarDocument document)", "full_signature": "public boolean contains(final GrammarDocument document)", "class_method_signature": "ActiveGrammarSet.contains(final GrammarDocument document)", "testcase": false, "constructor": false}, {"identifier": "getGrammars", "parameters": "()", "modifiers": "public", "return": "Collection<GrammarDocument>", "signature": "Collection<GrammarDocument> getGrammars()", "full_signature": "public Collection<GrammarDocument> getGrammars()", "class_method_signature": "ActiveGrammarSet.getGrammars()", "testcase": false, "constructor": false}, {"identifier": "getGrammarTypes", "parameters": "()", "modifiers": "public", "return": "Collection<GrammarType>", "signature": "Collection<GrammarType> getGrammarTypes()", "full_signature": "public Collection<GrammarType> getGrammarTypes()", "class_method_signature": "ActiveGrammarSet.getGrammarTypes()", "testcase": false, "constructor": false}, {"identifier": "getModeTypes", "parameters": "()", "modifiers": "public", "return": "Collection<ModeType>", "signature": "Collection<ModeType> getModeTypes()", "full_signature": "public Collection<ModeType> getModeTypes()", "class_method_signature": "ActiveGrammarSet.getModeTypes()", "testcase": false, "constructor": false}, {"identifier": "scopedSetChange", "parameters": "(final ScopedSet<GrammarDocument> set,\n            final Collection<GrammarDocument> removed)", "modifiers": "@Override public", "return": "void", "signature": "void scopedSetChange(final ScopedSet<GrammarDocument> set,\n            final Collection<GrammarDocument> removed)", "full_signature": "@Override public void scopedSetChange(final ScopedSet<GrammarDocument> set,\n            final Collection<GrammarDocument> removed)", "class_method_signature": "ActiveGrammarSet.scopedSetChange(final ScopedSet<GrammarDocument> set,\n            final Collection<GrammarDocument> removed)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/ActiveGrammarSet.java"}, "focal_method": {"identifier": "addAll", "parameters": "(final Collection<GrammarDocument> grams)", "modifiers": "public", "return": "void", "body": "public void addAll(final Collection<GrammarDocument> grams) {\n        grammars.addAll(grams);\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"added \" + grams.size()\n                    + \" grammar(s) - now containing \" + grammars.size());\n        }\n    }", "signature": "void addAll(final Collection<GrammarDocument> grams)", "full_signature": "public void addAll(final Collection<GrammarDocument> grams)", "class_method_signature": "ActiveGrammarSet.addAll(final Collection<GrammarDocument> grams)", "testcase": false, "constructor": false, "invocations": ["addAll", "isDebugEnabled", "debug", "size", "size"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}