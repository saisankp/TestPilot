{"test_class": {"identifier": "PreconditionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NON_NULL_ARG = \"non null arg\";", "modifier": "private static final", "type": "String", "declarator": "NON_NULL_ARG = \"non null arg\"", "var_name": "NON_NULL_ARG"}, {"original_string": "private static final String ERROR_MESSAGE_TEMPLATE = \"error message with %s\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MESSAGE_TEMPLATE = \"error message with %s\"", "var_name": "ERROR_MESSAGE_TEMPLATE"}, {"original_string": "private static final String ERROR_MESSAGE_ARG = \"error arg\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MESSAGE_ARG = \"error arg\"", "var_name": "ERROR_MESSAGE_ARG"}, {"original_string": "private static final String ERROR_MESSAGE_RESULT = \"error message with error arg\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MESSAGE_RESULT = \"error message with error arg\"", "var_name": "ERROR_MESSAGE_RESULT"}], "file": "rxnetwork/src/test/java/greyfox/rxnetwork/common/base/PreconditionsTest.java"}, "test_case": {"identifier": "shouldThrow_withCorrectErrorMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldThrow_withCorrectErrorMessage() {\n    try {\n      checkNotNull(null, ERROR_MESSAGE_ARG);\n      fail(\"NullPointerException expected\");\n    } catch (NullPointerException npe) {\n      assertThat(npe).hasMessageContaining(ERROR_MESSAGE_ARG);\n    }\n  }", "signature": "void shouldThrow_withCorrectErrorMessage()", "full_signature": "@Test public void shouldThrow_withCorrectErrorMessage()", "class_method_signature": "PreconditionsTest.shouldThrow_withCorrectErrorMessage()", "testcase": true, "constructor": false, "invocations": ["checkNotNull", "fail", "hasMessageContaining", "assertThat"]}, "focal_class": {"identifier": "Preconditions", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Preconditions", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "", "signature": " Preconditions()", "full_signature": "@VisibleForTesting  Preconditions()", "class_method_signature": "Preconditions.Preconditions()", "testcase": false, "constructor": true}, {"identifier": "checkNotNull", "parameters": "(T reference)", "modifiers": "public static", "return": "T", "signature": "T checkNotNull(T reference)", "full_signature": "public static T checkNotNull(T reference)", "class_method_signature": "Preconditions.checkNotNull(T reference)", "testcase": false, "constructor": false}, {"identifier": "checkNotNull", "parameters": "(T reference, String name)", "modifiers": "public static", "return": "T", "signature": "T checkNotNull(T reference, String name)", "full_signature": "public static T checkNotNull(T reference, String name)", "class_method_signature": "Preconditions.checkNotNull(T reference, String name)", "testcase": false, "constructor": false}, {"identifier": "checkNotNullWithMessage", "parameters": "(T reference, String message)", "modifiers": "public static", "return": "T", "signature": "T checkNotNullWithMessage(T reference, String message)", "full_signature": "public static T checkNotNullWithMessage(T reference, String message)", "class_method_signature": "Preconditions.checkNotNullWithMessage(T reference, String message)", "testcase": false, "constructor": false}, {"identifier": "checkNotNullWithMessage", "parameters": "(T reference, String messageFormat, Object... args)", "modifiers": "public static", "return": "T", "signature": "T checkNotNullWithMessage(T reference, String messageFormat, Object... args)", "full_signature": "public static T checkNotNullWithMessage(T reference, String messageFormat, Object... args)", "class_method_signature": "Preconditions.checkNotNullWithMessage(T reference, String messageFormat, Object... args)", "testcase": false, "constructor": false}], "file": "rxnetwork/src/main/java/greyfox/rxnetwork/common/base/Preconditions.java"}, "focal_method": {"identifier": "checkNotNull", "parameters": "(T reference)", "modifiers": "public static", "return": "T", "body": "public static <T> T checkNotNull(T reference) {\n    return checkNotNull(reference, \"Provided reference must not be null\");\n  }", "signature": "T checkNotNull(T reference)", "full_signature": "public static T checkNotNull(T reference)", "class_method_signature": "Preconditions.checkNotNull(T reference)", "testcase": false, "constructor": false, "invocations": ["checkNotNull"]}, "repository": {"repo_id": 91121306, "url": "https://github.com/greyfoxit/RxNetwork", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 511, "license": "licensed"}}