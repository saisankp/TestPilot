{"test_class": {"identifier": "KafkaSourceCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "KafkaSourceCounter counter;", "modifier": "", "type": "KafkaSourceCounter", "declarator": "counter", "var_name": "counter"}], "file": "flume-ng-core/src/test/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounterTest.java"}, "test_case": {"identifier": "testAddToKafkaCommitTimer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddToKafkaCommitTimer() throws Exception {\n    Assert.assertEquals(1L, counter.addToKafkaCommitTimer(1L));\n  }", "signature": "void testAddToKafkaCommitTimer()", "full_signature": "@Test public void testAddToKafkaCommitTimer()", "class_method_signature": "KafkaSourceCounterTest.testAddToKafkaCommitTimer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "addToKafkaCommitTimer"]}, "focal_class": {"identifier": "KafkaSourceCounter", "superclass": "extends SourceCounter", "interfaces": "implements  KafkaSourceCounterMBean", "fields": [{"original_string": "private static final String TIMER_KAFKA_EVENT_GET =\n      \"source.kafka.event.get.time\";", "modifier": "private static final", "type": "String", "declarator": "TIMER_KAFKA_EVENT_GET =\n      \"source.kafka.event.get.time\"", "var_name": "TIMER_KAFKA_EVENT_GET"}, {"original_string": "private static final String TIMER_KAFKA_COMMIT =\n      \"source.kafka.commit.time\";", "modifier": "private static final", "type": "String", "declarator": "TIMER_KAFKA_COMMIT =\n      \"source.kafka.commit.time\"", "var_name": "TIMER_KAFKA_COMMIT"}, {"original_string": "private static final String COUNTER_KAFKA_EMPTY =\n      \"source.kafka.empty.count\";", "modifier": "private static final", "type": "String", "declarator": "COUNTER_KAFKA_EMPTY =\n      \"source.kafka.empty.count\"", "var_name": "COUNTER_KAFKA_EMPTY"}, {"original_string": "private static final String[] ATTRIBUTES =\n      {TIMER_KAFKA_COMMIT, TIMER_KAFKA_EVENT_GET, COUNTER_KAFKA_EMPTY};", "modifier": "private static final", "type": "String[]", "declarator": "ATTRIBUTES =\n      {TIMER_KAFKA_COMMIT, TIMER_KAFKA_EVENT_GET, COUNTER_KAFKA_EMPTY}", "var_name": "ATTRIBUTES"}], "methods": [{"identifier": "KafkaSourceCounter", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " KafkaSourceCounter(String name)", "full_signature": "public  KafkaSourceCounter(String name)", "class_method_signature": "KafkaSourceCounter.KafkaSourceCounter(String name)", "testcase": false, "constructor": true}, {"identifier": "addToKafkaEventGetTimer", "parameters": "(long delta)", "modifiers": "public", "return": "long", "signature": "long addToKafkaEventGetTimer(long delta)", "full_signature": "public long addToKafkaEventGetTimer(long delta)", "class_method_signature": "KafkaSourceCounter.addToKafkaEventGetTimer(long delta)", "testcase": false, "constructor": false}, {"identifier": "addToKafkaCommitTimer", "parameters": "(long delta)", "modifiers": "public", "return": "long", "signature": "long addToKafkaCommitTimer(long delta)", "full_signature": "public long addToKafkaCommitTimer(long delta)", "class_method_signature": "KafkaSourceCounter.addToKafkaCommitTimer(long delta)", "testcase": false, "constructor": false}, {"identifier": "incrementKafkaEmptyCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementKafkaEmptyCount()", "full_signature": "public long incrementKafkaEmptyCount()", "class_method_signature": "KafkaSourceCounter.incrementKafkaEmptyCount()", "testcase": false, "constructor": false}, {"identifier": "getKafkaCommitTimer", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getKafkaCommitTimer()", "full_signature": "public long getKafkaCommitTimer()", "class_method_signature": "KafkaSourceCounter.getKafkaCommitTimer()", "testcase": false, "constructor": false}, {"identifier": "getKafkaEventGetTimer", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getKafkaEventGetTimer()", "full_signature": "public long getKafkaEventGetTimer()", "class_method_signature": "KafkaSourceCounter.getKafkaEventGetTimer()", "testcase": false, "constructor": false}, {"identifier": "getKafkaEmptyCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getKafkaEmptyCount()", "full_signature": "public long getKafkaEmptyCount()", "class_method_signature": "KafkaSourceCounter.getKafkaEmptyCount()", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/instrumentation/kafka/KafkaSourceCounter.java"}, "focal_method": {"identifier": "addToKafkaCommitTimer", "parameters": "(long delta)", "modifiers": "public", "return": "long", "body": "public long addToKafkaCommitTimer(long delta) {\n    return addAndGet(TIMER_KAFKA_COMMIT,delta);\n  }", "signature": "long addToKafkaCommitTimer(long delta)", "full_signature": "public long addToKafkaCommitTimer(long delta)", "class_method_signature": "KafkaSourceCounter.addToKafkaCommitTimer(long delta)", "testcase": false, "constructor": false, "invocations": ["addAndGet"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}