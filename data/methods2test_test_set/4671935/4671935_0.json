{"test_class": {"identifier": "FlightModeTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/platypii/baseline/jarvis/FlightModeTest.java"}, "test_case": {"identifier": "detectFlightMode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void detectFlightMode() {\n        assertEquals(\"Ground\", getMode(getLoc(0, 0)));\n        assertEquals(\"Ground\", getMode(getLoc(1, 10)));\n        assertEquals(\"Plane\", getMode(getLoc(0, 100)));\n        assertEquals(\"Wingsuit\", getMode(getLoc(-20, 50)));\n        assertEquals(\"Wingsuit\", getMode(getLoc(-18, 14)));\n        assertEquals(\"Freefall\", getMode(getLoc(-40, 0)));\n        assertEquals(\"Canopy\", getMode(getLoc(-5, 20)));\n        assertEquals(\"\", getMode(getLoc(15, 20)));\n    }", "signature": "void detectFlightMode()", "full_signature": "@Test public void detectFlightMode()", "class_method_signature": "FlightModeTest.detectFlightMode()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc", "assertEquals", "getMode", "getLoc"]}, "focal_class": {"identifier": "FlightMode", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int MODE_UNKNOWN = 0;", "modifier": "static final", "type": "int", "declarator": "MODE_UNKNOWN = 0", "var_name": "MODE_UNKNOWN"}, {"original_string": "public static final int MODE_GROUND = 1;", "modifier": "public static final", "type": "int", "declarator": "MODE_GROUND = 1", "var_name": "MODE_GROUND"}, {"original_string": "public static final int MODE_PLANE = 2;", "modifier": "public static final", "type": "int", "declarator": "MODE_PLANE = 2", "var_name": "MODE_PLANE"}, {"original_string": "public static final int MODE_WINGSUIT = 3;", "modifier": "public static final", "type": "int", "declarator": "MODE_WINGSUIT = 3", "var_name": "MODE_WINGSUIT"}, {"original_string": "public static final int MODE_FREEFALL = 4;", "modifier": "public static final", "type": "int", "declarator": "MODE_FREEFALL = 4", "var_name": "MODE_FREEFALL"}, {"original_string": "public static final int MODE_CANOPY = 5;", "modifier": "public static final", "type": "int", "declarator": "MODE_CANOPY = 5", "var_name": "MODE_CANOPY"}, {"original_string": "private static final String[] modeString = {\n            \"\", \"Ground\", \"Plane\", \"Wingsuit\", \"Freefall\", \"Canopy\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "modeString = {\n            \"\", \"Ground\", \"Plane\", \"Wingsuit\", \"Freefall\", \"Canopy\"\n    }", "var_name": "modeString"}], "methods": [{"identifier": "getMode", "parameters": "(@NonNull MLocation loc)", "modifiers": "public static", "return": "int", "signature": "int getMode(@NonNull MLocation loc)", "full_signature": "public static int getMode(@NonNull MLocation loc)", "class_method_signature": "FlightMode.getMode(@NonNull MLocation loc)", "testcase": false, "constructor": false}, {"identifier": "getModeString", "parameters": "(int mode)", "modifiers": "static", "return": "String", "signature": "String getModeString(int mode)", "full_signature": "static String getModeString(int mode)", "class_method_signature": "FlightMode.getModeString(int mode)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/platypii/baseline/jarvis/FlightMode.java"}, "focal_method": {"identifier": "getMode", "parameters": "(@NonNull MLocation loc)", "modifiers": "public static", "return": "int", "body": "public static int getMode(@NonNull MLocation loc) {\n        final double groundSpeed = loc.groundSpeed();\n        final double climb = loc.climb;\n\n        if (-0.3 * groundSpeed + 7 < climb && 33 < groundSpeed) {\n            return MODE_PLANE;\n        } else if (climb < -13 && climb < -groundSpeed - 10 && groundSpeed < 19) {\n            return MODE_FREEFALL;\n        } else if (climb < groundSpeed - 32 && climb < -0.3 * groundSpeed + 5.5) {\n            return MODE_WINGSUIT;\n        } else if (climb < -17) {\n            return MODE_WINGSUIT;\n        } else if (-11.5 < climb && climb < -1.1 && groundSpeed - 31 < climb && climb < groundSpeed - 4 && 1.1 < groundSpeed && groundSpeed < 23.5 && climb < -groundSpeed + 20) {\n            return MODE_CANOPY;\n        } else if (groundSpeed + Math.abs(climb - 1) < 5) {\n            return MODE_GROUND;\n        } else if (-1 < climb && climb < 2 && !(groundSpeed > 10)) {\n            return MODE_GROUND;\n        } else {\n            return MODE_UNKNOWN;\n        }\n    }", "signature": "int getMode(@NonNull MLocation loc)", "full_signature": "public static int getMode(@NonNull MLocation loc)", "class_method_signature": "FlightMode.getMode(@NonNull MLocation loc)", "testcase": false, "constructor": false, "invocations": ["groundSpeed", "abs"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}