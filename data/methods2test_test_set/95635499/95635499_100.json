{"test_class": {"identifier": "PartialOrderedSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String A = \"a\";", "modifier": "private static final", "type": "String", "declarator": "A = \"a\"", "var_name": "A"}, {"original_string": "private static final String B = \"b\";", "modifier": "private static final", "type": "String", "declarator": "B = \"b\"", "var_name": "B"}, {"original_string": "private static final String C = \"c\";", "modifier": "private static final", "type": "String", "declarator": "C = \"c\"", "var_name": "C"}, {"original_string": "private static final String D = \"d\";", "modifier": "private static final", "type": "String", "declarator": "D = \"d\"", "var_name": "D"}, {"original_string": "private PartialOrderedSet<String> set;", "modifier": "private", "type": "PartialOrderedSet<String>", "declarator": "set", "var_name": "set"}, {"original_string": "private Set<String> transitiveClosureOfA = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "transitiveClosureOfA = new HashSet<>()", "var_name": "transitiveClosureOfA"}, {"original_string": "private Set<String> transitiveClosureOfB = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "transitiveClosureOfB = new HashSet<>()", "var_name": "transitiveClosureOfB"}, {"original_string": "private Set<String> transitiveClosureOfC = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "transitiveClosureOfC = new HashSet<>()", "var_name": "transitiveClosureOfC"}, {"original_string": "private Set<String> transitiveClosureOfD = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "transitiveClosureOfD = new HashSet<>()", "var_name": "transitiveClosureOfD"}], "file": "JAICore/jaicore-basic/src/test/java/ai/libs/jaicore/basic/sets/PartialOrderedSetTest.java"}, "test_case": {"identifier": "testIsReflexive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIsReflexive() {\n\t\tassertFalse(\"The given set isn't refelxive, but calculation says it is.\", this.set.isReflexive());\n\t}", "signature": "void testIsReflexive()", "full_signature": "@Test public void testIsReflexive()", "class_method_signature": "PartialOrderedSetTest.testIsReflexive()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isReflexive"]}, "focal_class": {"identifier": "PartialOrderedSet", "superclass": "extends HashSet<E>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 5450009458863214917L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 5450009458863214917L", "var_name": "serialVersionUID"}, {"original_string": "private final Map<E, Set<E>> order;", "modifier": "private final", "type": "Map<E, Set<E>>", "declarator": "order", "var_name": "order"}], "methods": [{"identifier": "PartialOrderedSet", "parameters": "(final PartialOrderedSet<E> original)", "modifiers": "public", "return": "", "signature": " PartialOrderedSet(final PartialOrderedSet<E> original)", "full_signature": "public  PartialOrderedSet(final PartialOrderedSet<E> original)", "class_method_signature": "PartialOrderedSet.PartialOrderedSet(final PartialOrderedSet<E> original)", "testcase": false, "constructor": true}, {"identifier": "PartialOrderedSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " PartialOrderedSet()", "full_signature": "public  PartialOrderedSet()", "class_method_signature": "PartialOrderedSet.PartialOrderedSet()", "testcase": false, "constructor": true}, {"identifier": "addABeforeB", "parameters": "(final E a, final E b)", "modifiers": "public", "return": "void", "signature": "void addABeforeB(final E a, final E b)", "full_signature": "public void addABeforeB(final E a, final E b)", "class_method_signature": "PartialOrderedSet.addABeforeB(final E a, final E b)", "testcase": false, "constructor": false}, {"identifier": "requireABeforeB", "parameters": "(final E a, final E b)", "modifiers": "public", "return": "void", "signature": "void requireABeforeB(final E a, final E b)", "full_signature": "public void requireABeforeB(final E a, final E b)", "class_method_signature": "PartialOrderedSet.requireABeforeB(final E a, final E b)", "testcase": false, "constructor": false}, {"identifier": "allowsABeforeB", "parameters": "(final E a, final E b)", "modifiers": "public", "return": "boolean", "signature": "boolean allowsABeforeB(final E a, final E b)", "full_signature": "public boolean allowsABeforeB(final E a, final E b)", "class_method_signature": "PartialOrderedSet.allowsABeforeB(final E a, final E b)", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "public", "return": "Map<E, Set<E>>", "signature": "Map<E, Set<E>> getOrder()", "full_signature": "public Map<E, Set<E>> getOrder()", "class_method_signature": "PartialOrderedSet.getOrder()", "testcase": false, "constructor": false}, {"identifier": "isADirectlyBeforeB", "parameters": "(final E a, final E b)", "modifiers": "public", "return": "boolean", "signature": "boolean isADirectlyBeforeB(final E a, final E b)", "full_signature": "public boolean isADirectlyBeforeB(final E a, final E b)", "class_method_signature": "PartialOrderedSet.isADirectlyBeforeB(final E a, final E b)", "testcase": false, "constructor": false}, {"identifier": "getTransitiveClosure", "parameters": "(final E e)", "modifiers": "public", "return": "Set<E>", "signature": "Set<E> getTransitiveClosure(final E e)", "full_signature": "public Set<E> getTransitiveClosure(final E e)", "class_method_signature": "PartialOrderedSet.getTransitiveClosure(final E e)", "testcase": false, "constructor": false}, {"identifier": "getTransitiveClosure", "parameters": "(final Set<E> subSet)", "modifiers": "public", "return": "Set<E>", "signature": "Set<E> getTransitiveClosure(final Set<E> subSet)", "full_signature": "public Set<E> getTransitiveClosure(final Set<E> subSet)", "class_method_signature": "PartialOrderedSet.getTransitiveClosure(final Set<E> subSet)", "testcase": false, "constructor": false}, {"identifier": "isReflexive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReflexive()", "full_signature": "public boolean isReflexive()", "class_method_signature": "PartialOrderedSet.isReflexive()", "testcase": false, "constructor": false}, {"identifier": "getTotalOrder", "parameters": "()", "modifiers": "public", "return": "List<E>", "signature": "List<E> getTotalOrder()", "full_signature": "public List<E> getTotalOrder()", "class_method_signature": "PartialOrderedSet.getTotalOrder()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(final PartialOrderedSet<? extends E> set)", "modifiers": "public", "return": "void", "signature": "void merge(final PartialOrderedSet<? extends E> set)", "full_signature": "public void merge(final PartialOrderedSet<? extends E> set)", "class_method_signature": "PartialOrderedSet.merge(final PartialOrderedSet<? extends E> set)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(final PartialOrderedSet<? extends E> set)", "modifiers": "public", "return": "void", "signature": "void addAll(final PartialOrderedSet<? extends E> set)", "full_signature": "public void addAll(final PartialOrderedSet<? extends E> set)", "class_method_signature": "PartialOrderedSet.addAll(final PartialOrderedSet<? extends E> set)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PartialOrderedSet.toString()", "testcase": false, "constructor": false}, {"identifier": "getLinearization", "parameters": "()", "modifiers": "public", "return": "List<E>", "signature": "List<E> getLinearization()", "full_signature": "public List<E> getLinearization()", "class_method_signature": "PartialOrderedSet.getLinearization()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<E>", "signature": "Iterator<E> iterator()", "full_signature": "@Override public Iterator<E> iterator()", "class_method_signature": "PartialOrderedSet.iterator()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "PartialOrderedSet.clear()", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(final Collection<?> c)", "full_signature": "@Override public boolean removeAll(final Collection<?> c)", "class_method_signature": "PartialOrderedSet.removeAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(final Collection<?> c)", "full_signature": "@Override public boolean retainAll(final Collection<?> c)", "class_method_signature": "PartialOrderedSet.retainAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "removeIf", "parameters": "(final Predicate<? super E> filter)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeIf(final Predicate<? super E> filter)", "full_signature": "@Override public boolean removeIf(final Predicate<? super E> filter)", "class_method_signature": "PartialOrderedSet.removeIf(final Predicate<? super E> filter)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Object e)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(final Object e)", "full_signature": "@Override public boolean remove(final Object e)", "class_method_signature": "PartialOrderedSet.remove(final Object e)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PartialOrderedSet.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@SuppressWarnings(\"rawtypes\") @Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@SuppressWarnings(\"rawtypes\") @Override public boolean equals(final Object obj)", "class_method_signature": "PartialOrderedSet.equals(final Object obj)", "testcase": false, "constructor": false}], "file": "JAICore/jaicore-basic/src/main/java/ai/libs/jaicore/basic/sets/PartialOrderedSet.java"}, "focal_method": {"identifier": "isReflexive", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isReflexive() {\n\t\tfor (E e : this) {\n\t\t\tif (!this.order.containsKey(e)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!this.order.get(e).contains(e)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "signature": "boolean isReflexive()", "full_signature": "public boolean isReflexive()", "class_method_signature": "PartialOrderedSet.isReflexive()", "testcase": false, "constructor": false, "invocations": ["containsKey", "contains", "get"]}, "repository": {"repo_id": 95635499, "url": "https://github.com/fmohr/AILibs", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 25, "size": 155873, "license": "licensed"}}