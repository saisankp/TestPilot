{"test_class": {"identifier": "HttpHeadersImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private javax.ws.rs.core.HttpHeaders httpHeaders1;", "modifier": "private", "type": "javax.ws.rs.core.HttpHeaders", "declarator": "httpHeaders1", "var_name": "httpHeaders1"}, {"original_string": "private javax.ws.rs.core.HttpHeaders httpHeaders2;", "modifier": "private", "type": "javax.ws.rs.core.HttpHeaders", "declarator": "httpHeaders2", "var_name": "httpHeaders2"}], "file": "core/src/test/java/org/wso2/msf4j/internal/HttpHeadersImplTest.java"}, "test_case": {"identifier": "testGetLanguage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLanguage() throws Exception {\n        Locale locale = httpHeaders1.getLanguage();\n        assertNotNull(locale);\n        assertEquals(locale.getLanguage(), \"en\");\n\n        Locale locale2 = httpHeaders2.getLanguage();\n        assertNull(locale2);\n    }", "signature": "void testGetLanguage()", "full_signature": "@Test public void testGetLanguage()", "class_method_signature": "HttpHeadersImplTest.testGetLanguage()", "testcase": true, "constructor": false, "invocations": ["getLanguage", "assertNotNull", "assertEquals", "getLanguage", "getLanguage", "assertNull"]}, "focal_class": {"identifier": "HttpHeadersImpl", "superclass": "", "interfaces": "implements HttpHeaders", "fields": [{"original_string": "private static final String DATE_FORMAT_PATTERN = \"EEE, dd MMM yyyy HH:mm:ss zzz\";", "modifier": "private static final", "type": "String", "declarator": "DATE_FORMAT_PATTERN = \"EEE, dd MMM yyyy HH:mm:ss zzz\"", "var_name": "DATE_FORMAT_PATTERN"}, {"original_string": "private static final String GMT_TIMEZONE = \"GMT\";", "modifier": "private static final", "type": "String", "declarator": "GMT_TIMEZONE = \"GMT\"", "var_name": "GMT_TIMEZONE"}, {"original_string": "private final io.netty.handler.codec.http.HttpHeaders nettyHttpHeaders;", "modifier": "private final", "type": "io.netty.handler.codec.http.HttpHeaders", "declarator": "nettyHttpHeaders", "var_name": "nettyHttpHeaders"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(HttpHeadersImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(HttpHeadersImpl.class)", "var_name": "log"}], "methods": [{"identifier": "HttpHeadersImpl", "parameters": "(io.netty.handler.codec.http.HttpHeaders httpHeaders)", "modifiers": "public", "return": "", "signature": " HttpHeadersImpl(io.netty.handler.codec.http.HttpHeaders httpHeaders)", "full_signature": "public  HttpHeadersImpl(io.netty.handler.codec.http.HttpHeaders httpHeaders)", "class_method_signature": "HttpHeadersImpl.HttpHeadersImpl(io.netty.handler.codec.http.HttpHeaders httpHeaders)", "testcase": false, "constructor": true}, {"identifier": "getRequestHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getRequestHeader(String name)", "full_signature": "@Override public List<String> getRequestHeader(String name)", "class_method_signature": "HttpHeadersImpl.getRequestHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderString", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderString(String name)", "full_signature": "@Override public String getHeaderString(String name)", "class_method_signature": "HttpHeadersImpl.getHeaderString(String name)", "testcase": false, "constructor": false}, {"identifier": "getRequestHeaders", "parameters": "()", "modifiers": "@Override public", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getRequestHeaders()", "full_signature": "@Override public MultivaluedMap<String, String> getRequestHeaders()", "class_method_signature": "HttpHeadersImpl.getRequestHeaders()", "testcase": false, "constructor": false}, {"identifier": "getAcceptableMediaTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<MediaType>", "signature": "List<MediaType> getAcceptableMediaTypes()", "full_signature": "@Override public List<MediaType> getAcceptableMediaTypes()", "class_method_signature": "HttpHeadersImpl.getAcceptableMediaTypes()", "testcase": false, "constructor": false}, {"identifier": "getAcceptableLanguages", "parameters": "()", "modifiers": "@Override public", "return": "List<Locale>", "signature": "List<Locale> getAcceptableLanguages()", "full_signature": "@Override public List<Locale> getAcceptableLanguages()", "class_method_signature": "HttpHeadersImpl.getAcceptableLanguages()", "testcase": false, "constructor": false}, {"identifier": "getLanguageQualityFactor", "parameters": "(String q)", "modifiers": "private", "return": "float", "signature": "float getLanguageQualityFactor(String q)", "full_signature": "private float getLanguageQualityFactor(String q)", "class_method_signature": "HttpHeadersImpl.getLanguageQualityFactor(String q)", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType getMediaType()", "full_signature": "@Override public MediaType getMediaType()", "class_method_signature": "HttpHeadersImpl.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "Locale", "signature": "Locale getLanguage()", "full_signature": "@Override public Locale getLanguage()", "class_method_signature": "HttpHeadersImpl.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "getCookies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Cookie>", "signature": "Map<String, Cookie> getCookies()", "full_signature": "@Override public Map<String, Cookie> getCookies()", "class_method_signature": "HttpHeadersImpl.getCookies()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate()", "full_signature": "@Override public Date getDate()", "class_method_signature": "HttpHeadersImpl.getDate()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLength()", "full_signature": "@Override public int getLength()", "class_method_signature": "HttpHeadersImpl.getLength()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/wso2/msf4j/internal/HttpHeadersImpl.java"}, "focal_method": {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "Locale", "body": "@Override\n    public Locale getLanguage() {\n        String value = nettyHttpHeaders.get(HttpHeaders.CONTENT_LANGUAGE);\n        return value == null ? null : new Locale(value.trim());\n    }", "signature": "Locale getLanguage()", "full_signature": "@Override public Locale getLanguage()", "class_method_signature": "HttpHeadersImpl.getLanguage()", "testcase": false, "constructor": false, "invocations": ["get", "trim"]}, "repository": {"repo_id": 42847560, "url": "https://github.com/wso2/msf4j", "language": "Java", "is_fork": false, "fork_count": 337, "stargazer_count": 345, "size": 33285, "license": "licensed"}}