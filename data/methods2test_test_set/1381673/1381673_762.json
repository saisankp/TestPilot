{"test_class": {"identifier": "AttributeCol52Test", "superclass": "extends ColumnTestBase", "interfaces": "", "fields": [{"original_string": "private AttributeCol52 column1;", "modifier": "private", "type": "AttributeCol52", "declarator": "column1", "var_name": "column1"}, {"original_string": "private AttributeCol52 column2;", "modifier": "private", "type": "AttributeCol52", "declarator": "column2", "var_name": "column2"}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/test/java/org/drools/workbench/models/guided/dtable/shared/model/AttributeCol52Test.java"}, "test_case": {"identifier": "testDiffAttribute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDiffAttribute() {\n        column1.setAttribute(ACTIVATION_GROUP.getAttributeName());\n        column2.setAttribute(ENABLED.getAttributeName());\n\n        checkSingleDiff(FIELD_ATTRIBUTE, ACTIVATION_GROUP.getAttributeName(), ENABLED.getAttributeName(), column1, column2);\n    }", "signature": "void testDiffAttribute()", "full_signature": "@Test public void testDiffAttribute()", "class_method_signature": "AttributeCol52Test.testDiffAttribute()", "testcase": true, "constructor": false, "invocations": ["setAttribute", "getAttributeName", "setAttribute", "getAttributeName", "checkSingleDiff", "getAttributeName", "getAttributeName"]}, "focal_class": {"identifier": "AttributeCol52", "superclass": "extends DTColumnConfig52", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 729l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 729l", "var_name": "serialVersionUID"}, {"original_string": "private String attribute;", "modifier": "private", "type": "String", "declarator": "attribute", "var_name": "attribute"}, {"original_string": "private boolean reverseOrder = false;", "modifier": "private", "type": "boolean", "declarator": "reverseOrder = false", "var_name": "reverseOrder"}, {"original_string": "private boolean useRowNumber = false;", "modifier": "private", "type": "boolean", "declarator": "useRowNumber = false", "var_name": "useRowNumber"}, {"original_string": "public static final String FIELD_ATTRIBUTE = \"attribute\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_ATTRIBUTE = \"attribute\"", "var_name": "FIELD_ATTRIBUTE"}, {"original_string": "public static final String FIELD_REVERSE_ORDER = \"reverseOrder\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_REVERSE_ORDER = \"reverseOrder\"", "var_name": "FIELD_REVERSE_ORDER"}, {"original_string": "public static final String FIELD_USE_ROW_NUMBER = \"useRowNumber\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_USE_ROW_NUMBER = \"useRowNumber\"", "var_name": "FIELD_USE_ROW_NUMBER"}], "methods": [{"identifier": "diff", "parameters": "( BaseColumn otherColumn )", "modifiers": "@Override public", "return": "List<BaseColumnFieldDiff>", "signature": "List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "full_signature": "@Override public List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "class_method_signature": "AttributeCol52.diff( BaseColumn otherColumn )", "testcase": false, "constructor": false}, {"identifier": "cloneColumn", "parameters": "()", "modifiers": "public", "return": "AttributeCol52", "signature": "AttributeCol52 cloneColumn()", "full_signature": "public AttributeCol52 cloneColumn()", "class_method_signature": "AttributeCol52.cloneColumn()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAttribute()", "full_signature": "public String getAttribute()", "class_method_signature": "AttributeCol52.getAttribute()", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "( String attribute )", "modifiers": "public", "return": "void", "signature": "void setAttribute( String attribute )", "full_signature": "public void setAttribute( String attribute )", "class_method_signature": "AttributeCol52.setAttribute( String attribute )", "testcase": false, "constructor": false}, {"identifier": "isUseRowNumber", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseRowNumber()", "full_signature": "public boolean isUseRowNumber()", "class_method_signature": "AttributeCol52.isUseRowNumber()", "testcase": false, "constructor": false}, {"identifier": "setUseRowNumber", "parameters": "( boolean useRowNumber )", "modifiers": "public", "return": "void", "signature": "void setUseRowNumber( boolean useRowNumber )", "full_signature": "public void setUseRowNumber( boolean useRowNumber )", "class_method_signature": "AttributeCol52.setUseRowNumber( boolean useRowNumber )", "testcase": false, "constructor": false}, {"identifier": "isReverseOrder", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReverseOrder()", "full_signature": "public boolean isReverseOrder()", "class_method_signature": "AttributeCol52.isReverseOrder()", "testcase": false, "constructor": false}, {"identifier": "setReverseOrder", "parameters": "( boolean reverseOrder )", "modifiers": "public", "return": "void", "signature": "void setReverseOrder( boolean reverseOrder )", "full_signature": "public void setReverseOrder( boolean reverseOrder )", "class_method_signature": "AttributeCol52.setReverseOrder( boolean reverseOrder )", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AttributeCol52.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AttributeCol52.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/shared/model/AttributeCol52.java"}, "focal_method": {"identifier": "setAttribute", "parameters": "( String attribute )", "modifiers": "public", "return": "void", "body": "public void setAttribute( String attribute ) {\n        this.attribute = attribute;\n    }", "signature": "void setAttribute( String attribute )", "full_signature": "public void setAttribute( String attribute )", "class_method_signature": "AttributeCol52.setAttribute( String attribute )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}