{"test_class": {"identifier": "EntryStorageTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IPool connectionPool;", "modifier": "private", "type": "IPool", "declarator": "connectionPool", "var_name": "connectionPool"}, {"original_string": "private IResolveDependencyStrategy restoreEntryStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "restoreEntryStrategy", "var_name": "restoreEntryStrategy"}, {"original_string": "private IObject[] saved;", "modifier": "private", "type": "IObject[]", "declarator": "saved", "var_name": "saved"}, {"original_string": "private ISchedulerEntry[] entries;", "modifier": "private", "type": "ISchedulerEntry[]", "declarator": "entries", "var_name": "entries"}, {"original_string": "private IRemoteEntryStorage remoteEntryStorage;", "modifier": "private", "type": "IRemoteEntryStorage", "declarator": "remoteEntryStorage", "var_name": "remoteEntryStorage"}, {"original_string": "private ITimer timerMock;", "modifier": "private", "type": "ITimer", "declarator": "timerMock", "var_name": "timerMock"}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/test/java/info/smart_tools/smartactors/scheduler/actor/impl/EntryStorageTest.java"}, "test_case": {"identifier": "Should_storeTimer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_storeTimer()\n            throws Exception {\n        assertSame(timerMock, new EntryStorage(remoteEntryStorage, null).getTimer());\n    }", "signature": "void Should_storeTimer()", "full_signature": "@Test public void Should_storeTimer()", "class_method_signature": "EntryStorageTest.Should_storeTimer()", "testcase": true, "constructor": false, "invocations": ["assertSame", "getTimer"]}, "focal_class": {"identifier": "EntryStorage", "superclass": "", "interfaces": "implements ISchedulerEntryStorage", "fields": [{"original_string": "private final ITimer timer;", "modifier": "private final", "type": "ITimer", "declarator": "timer", "var_name": "timer"}, {"original_string": "private final IRemoteEntryStorage remoteEntryStorage;", "modifier": "private final", "type": "IRemoteEntryStorage", "declarator": "remoteEntryStorage", "var_name": "remoteEntryStorage"}, {"original_string": "private final ISchedulerEntryStorageObserver observer;", "modifier": "private final", "type": "ISchedulerEntryStorageObserver", "declarator": "observer", "var_name": "observer"}, {"original_string": "private final Map<String, ISchedulerEntry> activeEntries;", "modifier": "private final", "type": "Map<String, ISchedulerEntry>", "declarator": "activeEntries", "var_name": "activeEntries"}, {"original_string": "private final Map<String, ISchedulerEntry> strongSuspendEntries;", "modifier": "private final", "type": "Map<String, ISchedulerEntry>", "declarator": "strongSuspendEntries", "var_name": "strongSuspendEntries"}, {"original_string": "private final Map<String, WeakEntryReference> weakSuspendEntries;", "modifier": "private final", "type": "Map<String, WeakEntryReference>", "declarator": "weakSuspendEntries", "var_name": "weakSuspendEntries"}, {"original_string": "private final ReferenceQueue<ISchedulerEntry> weakSuspendReferenceQueue = new ReferenceQueue<>();", "modifier": "private final", "type": "ReferenceQueue<ISchedulerEntry>", "declarator": "weakSuspendReferenceQueue = new ReferenceQueue<>()", "var_name": "weakSuspendReferenceQueue"}, {"original_string": "private final List<ISchedulerEntry> refreshAwakeList;", "modifier": "private final", "type": "List<ISchedulerEntry>", "declarator": "refreshAwakeList", "var_name": "refreshAwakeList"}, {"original_string": "private final List<ISchedulerEntry> refreshSuspendList;", "modifier": "private final", "type": "List<ISchedulerEntry>", "declarator": "refreshSuspendList", "var_name": "refreshSuspendList"}, {"original_string": "private final HashSet<String>[] recentlyDeletedIdSets;", "modifier": "private final", "type": "HashSet<String>[]", "declarator": "recentlyDeletedIdSets", "var_name": "recentlyDeletedIdSets"}, {"original_string": "private int refreshIterationCounter;", "modifier": "private", "type": "int", "declarator": "refreshIterationCounter", "var_name": "refreshIterationCounter"}, {"original_string": "private ISchedulerEntryFilter filter = AllPassEntryFilter.INSTANCE;", "modifier": "private", "type": "ISchedulerEntryFilter", "declarator": "filter = AllPassEntryFilter.INSTANCE", "var_name": "filter"}, {"original_string": "private final Lock localStorageLock;", "modifier": "private final", "type": "Lock", "declarator": "localStorageLock", "var_name": "localStorageLock"}, {"original_string": "private final Object refreshLock;", "modifier": "private final", "type": "Object", "declarator": "refreshLock", "var_name": "refreshLock"}], "methods": [{"identifier": "isEntryCancelledRecently", "parameters": "(final String id)", "modifiers": "private", "return": "boolean", "signature": "boolean isEntryCancelledRecently(final String id)", "full_signature": "private boolean isEntryCancelledRecently(final String id)", "class_method_signature": "EntryStorage.isEntryCancelledRecently(final String id)", "testcase": false, "constructor": false}, {"identifier": "cleanupWeakSuspendedEntries", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanupWeakSuspendedEntries()", "full_signature": "private void cleanupWeakSuspendedEntries()", "class_method_signature": "EntryStorage.cleanupWeakSuspendedEntries()", "testcase": false, "constructor": false}, {"identifier": "EntryStorage", "parameters": "(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer, final ITimer timer)", "modifiers": "public", "return": "", "signature": " EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer, final ITimer timer)", "full_signature": "public  EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer, final ITimer timer)", "class_method_signature": "EntryStorage.EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer, final ITimer timer)", "testcase": false, "constructor": true}, {"identifier": "EntryStorage", "parameters": "(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer)", "modifiers": "public", "return": "", "signature": " EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer)", "full_signature": "public  EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer)", "class_method_signature": "EntryStorage.EntryStorage(final IRemoteEntryStorage remoteEntryStorage, final ISchedulerEntryStorageObserver observer)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override public", "return": "void", "signature": "void save(final ISchedulerEntry entry)", "full_signature": "@Override public void save(final ISchedulerEntry entry)", "class_method_signature": "EntryStorage.save(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "notifyActive", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override public", "return": "void", "signature": "void notifyActive(final ISchedulerEntry entry)", "full_signature": "@Override public void notifyActive(final ISchedulerEntry entry)", "class_method_signature": "EntryStorage.notifyActive(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "notifyInactive", "parameters": "(final ISchedulerEntry entry, final boolean keepReference)", "modifiers": "@Override public", "return": "void", "signature": "void notifyInactive(final ISchedulerEntry entry, final boolean keepReference)", "full_signature": "@Override public void notifyInactive(final ISchedulerEntry entry, final boolean keepReference)", "class_method_signature": "EntryStorage.notifyInactive(final ISchedulerEntry entry, final boolean keepReference)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final ISchedulerEntry entry)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final ISchedulerEntry entry)", "full_signature": "@Override public void delete(final ISchedulerEntry entry)", "class_method_signature": "EntryStorage.delete(final ISchedulerEntry entry)", "testcase": false, "constructor": false}, {"identifier": "listLocalEntries", "parameters": "()", "modifiers": "@Override public", "return": "List<ISchedulerEntry>", "signature": "List<ISchedulerEntry> listLocalEntries()", "full_signature": "@Override public List<ISchedulerEntry> listLocalEntries()", "class_method_signature": "EntryStorage.listLocalEntries()", "testcase": false, "constructor": false}, {"identifier": "countLocalEntries", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countLocalEntries()", "full_signature": "@Override public int countLocalEntries()", "class_method_signature": "EntryStorage.countLocalEntries()", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(final String id)", "modifiers": "@Override public", "return": "ISchedulerEntry", "signature": "ISchedulerEntry getEntry(final String id)", "full_signature": "@Override public ISchedulerEntry getEntry(final String id)", "class_method_signature": "EntryStorage.getEntry(final String id)", "testcase": false, "constructor": false}, {"identifier": "getTimer", "parameters": "()", "modifiers": "@Override public", "return": "ITimer", "signature": "ITimer getTimer()", "full_signature": "@Override public ITimer getTimer()", "class_method_signature": "EntryStorage.getTimer()", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "@Override public", "return": "ISchedulerEntryFilter", "signature": "ISchedulerEntryFilter getFilter()", "full_signature": "@Override public ISchedulerEntryFilter getFilter()", "class_method_signature": "EntryStorage.getFilter()", "testcase": false, "constructor": false}, {"identifier": "setFilter", "parameters": "(final ISchedulerEntryFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void setFilter(final ISchedulerEntryFilter filter)", "full_signature": "@Override public void setFilter(final ISchedulerEntryFilter filter)", "class_method_signature": "EntryStorage.setFilter(final ISchedulerEntryFilter filter)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(final long awakeUntil, final long suspendAfter)", "modifiers": "public", "return": "void", "signature": "void refresh(final long awakeUntil, final long suspendAfter)", "full_signature": "public void refresh(final long awakeUntil, final long suspendAfter)", "class_method_signature": "EntryStorage.refresh(final long awakeUntil, final long suspendAfter)", "testcase": false, "constructor": false}, {"identifier": "getLocalEntry", "parameters": "(final String id)", "modifiers": "public", "return": "ISchedulerEntry", "signature": "ISchedulerEntry getLocalEntry(final String id)", "full_signature": "public ISchedulerEntry getLocalEntry(final String id)", "class_method_signature": "EntryStorage.getLocalEntry(final String id)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/main/java/info/smart_tools/smartactors/scheduler/actor/impl/EntryStorage.java"}, "focal_method": {"identifier": "getTimer", "parameters": "()", "modifiers": "@Override public", "return": "ITimer", "body": "@Override\n    public ITimer getTimer() {\n        return this.timer;\n    }", "signature": "ITimer getTimer()", "full_signature": "@Override public ITimer getTimer()", "class_method_signature": "EntryStorage.getTimer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}