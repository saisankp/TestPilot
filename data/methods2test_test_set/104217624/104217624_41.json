{"test_class": {"identifier": "TrustAnchorTest", "superclass": "", "interfaces": "", "fields": [], "file": "rpki-validator/src/test/java/net/ripe/rpki/validator3/storage/data/TrustAnchorTest.java"}, "test_case": {"identifier": "getLocationsByPreference_keeps_order_within_protocol", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLocationsByPreference_keeps_order_within_protocol() {\n        TrustAnchor ta = new TrustAnchor();\n        ta.setLocations(Lists.newArrayList(\"rsync://rpki.ripe.net/b/ripe-ncc-ta.cer\", \"rsync://rpki.ripe.net/a/ripe-ncc-ta.cer\", \"https://rpki.ripe.net/ta/ripe-ncc-ta.cer\"));\n\n        assertThat(ta.getLocationsByPreference()).containsExactly(\n                URI.create(\"https://rpki.ripe.net/ta/ripe-ncc-ta.cer\"),\n                URI.create(\"rsync://rpki.ripe.net/b/ripe-ncc-ta.cer\"),\n                URI.create(\"rsync://rpki.ripe.net/a/ripe-ncc-ta.cer\")\n        );\n\n        ta.setLocations(Lists.newArrayList(\"rsync://rpki.ripe.net/a/ripe-ncc-ta.cer\", \"https://rpki.ripe.net/ta/ripe-ncc-ta.cer\", \"rsync://rpki.ripe.net/b/ripe-ncc-ta.cer\"));\n\n        assertThat(ta.getLocationsByPreference()).containsExactly(\n                URI.create(\"https://rpki.ripe.net/ta/ripe-ncc-ta.cer\"),\n                URI.create(\"rsync://rpki.ripe.net/a/ripe-ncc-ta.cer\"),\n                URI.create(\"rsync://rpki.ripe.net/b/ripe-ncc-ta.cer\")\n        );\n    }", "signature": "void getLocationsByPreference_keeps_order_within_protocol()", "full_signature": "@Test public void getLocationsByPreference_keeps_order_within_protocol()", "class_method_signature": "TrustAnchorTest.getLocationsByPreference_keeps_order_within_protocol()", "testcase": true, "constructor": false, "invocations": ["setLocations", "newArrayList", "containsExactly", "assertThat", "getLocationsByPreference", "create", "create", "create", "setLocations", "newArrayList", "containsExactly", "assertThat", "getLocationsByPreference", "create", "create", "create"]}, "focal_class": {"identifier": "TrustAnchor", "superclass": "extends Base<TrustAnchor>", "interfaces": "", "fields": [{"original_string": "public static final String TYPE = \"trust-anchor\";", "modifier": "public static final", "type": "String", "declarator": "TYPE = \"trust-anchor\"", "var_name": "TYPE"}, {"original_string": "private boolean preconfigured;", "modifier": "private", "type": "boolean", "declarator": "preconfigured", "var_name": "preconfigured"}, {"original_string": "private boolean initialCertificateTreeValidationRunCompleted;", "modifier": "private", "type": "boolean", "declarator": "initialCertificateTreeValidationRunCompleted", "var_name": "initialCertificateTreeValidationRunCompleted"}, {"original_string": "@NotNull\n    @Size(min = 1, max = 1000)\n    private String name;", "modifier": "@NotNull\n    @Size(min = 1, max = 1000)\n    private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private List<@NotNull @ValidLocationURI String> locations = new ArrayList<>();", "modifier": "private", "type": "List<@NotNull @ValidLocationURI String>", "declarator": "locations = new ArrayList<>()", "var_name": "locations"}, {"original_string": "@NotNull\n    @ValidPublicKeyInfo\n    private String subjectPublicKeyInfo;", "modifier": "@NotNull\n    @ValidPublicKeyInfo\n    private", "type": "String", "declarator": "subjectPublicKeyInfo", "var_name": "subjectPublicKeyInfo"}, {"original_string": "@ValidLocationURI\n    private String rsyncPrefetchUri;", "modifier": "@ValidLocationURI\n    private", "type": "String", "declarator": "rsyncPrefetchUri", "var_name": "rsyncPrefetchUri"}, {"original_string": "@Size(max = RpkiObject.MAX_SIZE)\n    private byte[] encodedCertificate;", "modifier": "@Size(max = RpkiObject.MAX_SIZE)\n    private", "type": "byte[]", "declarator": "encodedCertificate", "var_name": "encodedCertificate"}], "methods": [{"identifier": "TrustAnchor", "parameters": "()", "modifiers": "public", "return": "", "signature": " TrustAnchor()", "full_signature": "public  TrustAnchor()", "class_method_signature": "TrustAnchor.TrustAnchor()", "testcase": false, "constructor": true}, {"identifier": "TrustAnchor", "parameters": "(boolean preconfigured)", "modifiers": "public", "return": "", "signature": " TrustAnchor(boolean preconfigured)", "full_signature": "public  TrustAnchor(boolean preconfigured)", "class_method_signature": "TrustAnchor.TrustAnchor(boolean preconfigured)", "testcase": false, "constructor": true}, {"identifier": "setCertificate", "parameters": "(X509ResourceCertificate certificate)", "modifiers": "public", "return": "void", "signature": "void setCertificate(X509ResourceCertificate certificate)", "full_signature": "public void setCertificate(X509ResourceCertificate certificate)", "class_method_signature": "TrustAnchor.setCertificate(X509ResourceCertificate certificate)", "testcase": false, "constructor": false}, {"identifier": "getCertificate", "parameters": "()", "modifiers": "public", "return": "X509ResourceCertificate", "signature": "X509ResourceCertificate getCertificate()", "full_signature": "public X509ResourceCertificate getCertificate()", "class_method_signature": "TrustAnchor.getCertificate()", "testcase": false, "constructor": false}, {"identifier": "markInitialCertificateTreeValidationRunCompleted", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void markInitialCertificateTreeValidationRunCompleted()", "full_signature": "public void markInitialCertificateTreeValidationRunCompleted()", "class_method_signature": "TrustAnchor.markInitialCertificateTreeValidationRunCompleted()", "testcase": false, "constructor": false}, {"identifier": "getLocationsByPreference", "parameters": "()", "modifiers": "public", "return": "List<URI>", "signature": "List<URI> getLocationsByPreference()", "full_signature": "public List<URI> getLocationsByPreference()", "class_method_signature": "TrustAnchor.getLocationsByPreference()", "testcase": false, "constructor": false}], "file": "rpki-validator/src/main/java/net/ripe/rpki/validator3/storage/data/TrustAnchor.java"}, "focal_method": {"identifier": "getLocationsByPreference", "parameters": "()", "modifiers": "public", "return": "List<URI>", "body": "public List<URI> getLocationsByPreference() {\n        return locations.stream()\n            .map(URI::create)\n            .sorted(Comparator.comparing(URI::getScheme))\n            .collect(Collectors.toList());\n    }", "signature": "List<URI> getLocationsByPreference()", "full_signature": "public List<URI> getLocationsByPreference()", "class_method_signature": "TrustAnchor.getLocationsByPreference()", "testcase": false, "constructor": false, "invocations": ["collect", "sorted", "map", "stream", "comparing", "toList"]}, "repository": {"repo_id": 104217624, "url": "https://github.com/RIPE-NCC/rpki-validator-3", "stars": 32, "created": "9/20/2017 1:15:05 PM +00:00", "updates": "2020-01-27T10:48:38+00:00", "fork": "False", "license": "licensed"}}