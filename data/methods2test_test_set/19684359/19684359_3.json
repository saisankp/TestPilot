{"test_class": {"identifier": "GoogleHadoopFileSystemTestBase", "superclass": "extends HadoopFileSystemTestBase", "interfaces": "", "fields": [{"original_string": "@ClassRule\n  public static NotInheritableExternalResource storageResource =\n      new NotInheritableExternalResource(GoogleHadoopFileSystemTestBase.class) {\n        /** Perform clean-up once after all tests are turn. */\n        @Override\n        public void after() {\n          if (ghfs != null) {\n            // For GHFS tests, print the counter values to stdout.\n            // We cannot use ghfs.logCounters() because we disable logging for tests.\n            String countersStr = ((GoogleHadoopFileSystemBase) ghfs).countersToString();\n            System.out.println(countersStr);\n          }\n          HadoopFileSystemTestBase.storageResource.after();\n        }\n      };", "modifier": "@ClassRule\n  public static", "type": "NotInheritableExternalResource", "declarator": "storageResource =\n      new NotInheritableExternalResource(GoogleHadoopFileSystemTestBase.class) {\n        /** Perform clean-up once after all tests are turn. */\n        @Override\n        public void after() {\n          if (ghfs != null) {\n            // For GHFS tests, print the counter values to stdout.\n            // We cannot use ghfs.logCounters() because we disable logging for tests.\n            String countersStr = ((GoogleHadoopFileSystemBase) ghfs).countersToString();\n            System.out.println(countersStr);\n          }\n          HadoopFileSystemTestBase.storageResource.after();\n        }\n      }", "var_name": "storageResource"}], "file": "gcs/src/test/java/com/google/cloud/hadoop/fs/gcs/GoogleHadoopFileSystemTestBase.java"}, "test_case": {"identifier": "testGetCanonicalServiceName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetCanonicalServiceName() {\n    assertThat(ghfs.getCanonicalServiceName()).isNull();\n  }", "signature": "void testGetCanonicalServiceName()", "full_signature": "@Test public void testGetCanonicalServiceName()", "class_method_signature": "GoogleHadoopFileSystemTestBase.testGetCanonicalServiceName()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getCanonicalServiceName"]}, "focal_class": {"identifier": "GoogleHadoopFileSystemBase", "superclass": "extends FileSystem", "interfaces": "implements FileSystemDescriptor", "fields": [{"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}, {"original_string": "static final String SCHEME = GoogleCloudStorageFileSystem.SCHEME;", "modifier": "static final", "type": "String", "declarator": "SCHEME = GoogleCloudStorageFileSystem.SCHEME", "var_name": "SCHEME"}, {"original_string": "public static final short REPLICATION_FACTOR_DEFAULT = 3;", "modifier": "public static final", "type": "short", "declarator": "REPLICATION_FACTOR_DEFAULT = 3", "var_name": "REPLICATION_FACTOR_DEFAULT"}, {"original_string": "public static final PathFilter DEFAULT_FILTER = path -> true;", "modifier": "public static final", "type": "PathFilter", "declarator": "DEFAULT_FILTER = path -> true", "var_name": "DEFAULT_FILTER"}, {"original_string": "public static final String PROPERTIES_FILE = \"gcs.properties\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTIES_FILE = \"gcs.properties\"", "var_name": "PROPERTIES_FILE"}, {"original_string": "public static final String VERSION_PROPERTY = \"gcs.connector.version\";", "modifier": "public static final", "type": "String", "declarator": "VERSION_PROPERTY = \"gcs.connector.version\"", "var_name": "VERSION_PROPERTY"}, {"original_string": "public static final String UNKNOWN_VERSION = \"0.0.0\";", "modifier": "public static final", "type": "String", "declarator": "UNKNOWN_VERSION = \"0.0.0\"", "var_name": "UNKNOWN_VERSION"}, {"original_string": "public static final String VERSION;", "modifier": "public static final", "type": "String", "declarator": "VERSION", "var_name": "VERSION"}, {"original_string": "public static final String GHFS_ID;", "modifier": "public static final", "type": "String", "declarator": "GHFS_ID", "var_name": "GHFS_ID"}, {"original_string": "private static final String XATTR_KEY_PREFIX = \"GHFS_XATTR_\";", "modifier": "private static final", "type": "String", "declarator": "XATTR_KEY_PREFIX = \"GHFS_XATTR_\"", "var_name": "XATTR_KEY_PREFIX"}, {"original_string": "private static final byte[] XATTR_NULL_VALUE = new byte[0];", "modifier": "private static final", "type": "byte[]", "declarator": "XATTR_NULL_VALUE = new byte[0]", "var_name": "XATTR_NULL_VALUE"}, {"original_string": "private static final ThreadFactory DAEMON_THREAD_FACTORY =\n      new ThreadFactoryBuilder().setNameFormat(\"ghfs-thread-%d\").setDaemon(true).build();", "modifier": "private static final", "type": "ThreadFactory", "declarator": "DAEMON_THREAD_FACTORY =\n      new ThreadFactoryBuilder().setNameFormat(\"ghfs-thread-%d\").setDaemon(true).build()", "var_name": "DAEMON_THREAD_FACTORY"}, {"original_string": "@VisibleForTesting\n  boolean enableFlatGlob = GCS_FLAT_GLOB_ENABLE.getDefault();", "modifier": "@VisibleForTesting", "type": "boolean", "declarator": "enableFlatGlob = GCS_FLAT_GLOB_ENABLE.getDefault()", "var_name": "enableFlatGlob"}, {"original_string": "@VisibleForTesting\n  boolean enableConcurrentGlob = GCS_CONCURRENT_GLOB_ENABLE.getDefault();", "modifier": "@VisibleForTesting", "type": "boolean", "declarator": "enableConcurrentGlob = GCS_CONCURRENT_GLOB_ENABLE.getDefault()", "var_name": "enableConcurrentGlob"}, {"original_string": "private GcsFileChecksumType checksumType = GCS_FILE_CHECKSUM_TYPE.getDefault();", "modifier": "private", "type": "GcsFileChecksumType", "declarator": "checksumType = GCS_FILE_CHECKSUM_TYPE.getDefault()", "var_name": "checksumType"}, {"original_string": "protected URI initUri;", "modifier": "protected", "type": "URI", "declarator": "initUri", "var_name": "initUri"}, {"original_string": "protected GcsDelegationTokens delegationTokens = null;", "modifier": "protected", "type": "GcsDelegationTokens", "declarator": "delegationTokens = null", "var_name": "delegationTokens"}, {"original_string": "private Supplier<GoogleCloudStorageFileSystem> gcsFsSupplier;", "modifier": "private", "type": "Supplier<GoogleCloudStorageFileSystem>", "declarator": "gcsFsSupplier", "var_name": "gcsFsSupplier"}, {"original_string": "private boolean gcsFsInitialized = false;", "modifier": "private", "type": "boolean", "declarator": "gcsFsInitialized = false", "var_name": "gcsFsInitialized"}, {"original_string": "private Path workingDirectory;", "modifier": "private", "type": "Path", "declarator": "workingDirectory", "var_name": "workingDirectory"}, {"original_string": "protected long defaultBlockSize = BLOCK_SIZE.getDefault();", "modifier": "protected", "type": "long", "declarator": "defaultBlockSize = BLOCK_SIZE.getDefault()", "var_name": "defaultBlockSize"}, {"original_string": "private FsPermission reportedPermissions;", "modifier": "private", "type": "FsPermission", "declarator": "reportedPermissions", "var_name": "reportedPermissions"}, {"original_string": "protected final ImmutableMap<Counter, AtomicLong> counters = createCounterMap();", "modifier": "protected final", "type": "ImmutableMap<Counter, AtomicLong>", "declarator": "counters = createCounterMap()", "var_name": "counters"}, {"original_string": "private static final ImmutableSet<Counter> ALL_COUNTERS =\n      Sets.immutableEnumSet(EnumSet.allOf(Counter.class));", "modifier": "private static final", "type": "ImmutableSet<Counter>", "declarator": "ALL_COUNTERS =\n      Sets.immutableEnumSet(EnumSet.allOf(Counter.class))", "var_name": "ALL_COUNTERS"}], "methods": [{"identifier": "createCounterMap", "parameters": "()", "modifiers": "protected", "return": "ImmutableMap<Counter, AtomicLong>", "signature": "ImmutableMap<Counter, AtomicLong> createCounterMap()", "full_signature": "protected ImmutableMap<Counter, AtomicLong> createCounterMap()", "class_method_signature": "GoogleHadoopFileSystemBase.createCounterMap()", "testcase": false, "constructor": false}, {"identifier": "GoogleHadoopFileSystemBase", "parameters": "()", "modifiers": "public", "return": "", "signature": " GoogleHadoopFileSystemBase()", "full_signature": "public  GoogleHadoopFileSystemBase()", "class_method_signature": "GoogleHadoopFileSystemBase.GoogleHadoopFileSystemBase()", "testcase": false, "constructor": true}, {"identifier": "GoogleHadoopFileSystemBase", "parameters": "(GoogleCloudStorageFileSystem gcsFs)", "modifiers": "", "return": "", "signature": " GoogleHadoopFileSystemBase(GoogleCloudStorageFileSystem gcsFs)", "full_signature": "  GoogleHadoopFileSystemBase(GoogleCloudStorageFileSystem gcsFs)", "class_method_signature": "GoogleHadoopFileSystemBase.GoogleHadoopFileSystemBase(GoogleCloudStorageFileSystem gcsFs)", "testcase": false, "constructor": true}, {"identifier": "setGcsFs", "parameters": "(GoogleCloudStorageFileSystem gcsFs)", "modifiers": "private", "return": "void", "signature": "void setGcsFs(GoogleCloudStorageFileSystem gcsFs)", "full_signature": "private void setGcsFs(GoogleCloudStorageFileSystem gcsFs)", "class_method_signature": "GoogleHadoopFileSystemBase.setGcsFs(GoogleCloudStorageFileSystem gcsFs)", "testcase": false, "constructor": false}, {"identifier": "getHomeDirectorySubpath", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getHomeDirectorySubpath()", "full_signature": "protected abstract String getHomeDirectorySubpath()", "class_method_signature": "GoogleHadoopFileSystemBase.getHomeDirectorySubpath()", "testcase": false, "constructor": false}, {"identifier": "getHadoopPath", "parameters": "(URI gcsPath)", "modifiers": "public abstract", "return": "Path", "signature": "Path getHadoopPath(URI gcsPath)", "full_signature": "public abstract Path getHadoopPath(URI gcsPath)", "class_method_signature": "GoogleHadoopFileSystemBase.getHadoopPath(URI gcsPath)", "testcase": false, "constructor": false}, {"identifier": "getGcsPath", "parameters": "(Path hadoopPath)", "modifiers": "public abstract", "return": "URI", "signature": "URI getGcsPath(Path hadoopPath)", "full_signature": "public abstract URI getGcsPath(Path hadoopPath)", "class_method_signature": "GoogleHadoopFileSystemBase.getGcsPath(Path hadoopPath)", "testcase": false, "constructor": false}, {"identifier": "getDefaultWorkingDirectory", "parameters": "()", "modifiers": "public abstract", "return": "Path", "signature": "Path getDefaultWorkingDirectory()", "full_signature": "public abstract Path getDefaultWorkingDirectory()", "class_method_signature": "GoogleHadoopFileSystemBase.getDefaultWorkingDirectory()", "testcase": false, "constructor": false}, {"identifier": "getFileSystemRoot", "parameters": "()", "modifiers": "@Override public abstract", "return": "Path", "signature": "Path getFileSystemRoot()", "full_signature": "@Override public abstract Path getFileSystemRoot()", "class_method_signature": "GoogleHadoopFileSystemBase.getFileSystemRoot()", "testcase": false, "constructor": false}, {"identifier": "getScheme", "parameters": "()", "modifiers": "@Override public abstract", "return": "String", "signature": "String getScheme()", "full_signature": "@Override public abstract String getScheme()", "class_method_signature": "GoogleHadoopFileSystemBase.getScheme()", "testcase": false, "constructor": false}, {"identifier": "makeQualified", "parameters": "(final Path path)", "modifiers": "@Override public", "return": "Path", "signature": "Path makeQualified(final Path path)", "full_signature": "@Override public Path makeQualified(final Path path)", "class_method_signature": "GoogleHadoopFileSystemBase.makeQualified(final Path path)", "testcase": false, "constructor": false}, {"identifier": "checkPath", "parameters": "(Path path)", "modifiers": "@Override protected", "return": "void", "signature": "void checkPath(Path path)", "full_signature": "@Override protected void checkPath(Path path)", "class_method_signature": "GoogleHadoopFileSystemBase.checkPath(Path path)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(URI path, Configuration config)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(URI path, Configuration config)", "full_signature": "@Override public void initialize(URI path, Configuration config)", "class_method_signature": "GoogleHadoopFileSystemBase.initialize(URI path, Configuration config)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(URI path, Configuration config, boolean initSuperclass)", "modifiers": "public", "return": "void", "signature": "void initialize(URI path, Configuration config, boolean initSuperclass)", "full_signature": "public void initialize(URI path, Configuration config, boolean initSuperclass)", "class_method_signature": "GoogleHadoopFileSystemBase.initialize(URI path, Configuration config, boolean initSuperclass)", "testcase": false, "constructor": false}, {"identifier": "initializeDelegationTokenSupport", "parameters": "(Configuration config, URI path)", "modifiers": "private", "return": "void", "signature": "void initializeDelegationTokenSupport(Configuration config, URI path)", "full_signature": "private void initializeDelegationTokenSupport(Configuration config, URI path)", "class_method_signature": "GoogleHadoopFileSystemBase.initializeDelegationTokenSupport(Configuration config, URI path)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "GoogleHadoopFileSystemBase.getUri()", "testcase": false, "constructor": false}, {"identifier": "getDefaultPort", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getDefaultPort()", "full_signature": "@Override protected int getDefaultPort()", "class_method_signature": "GoogleHadoopFileSystemBase.getDefaultPort()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(Path hadoopPath, int bufferSize)", "modifiers": "@Override public", "return": "FSDataInputStream", "signature": "FSDataInputStream open(Path hadoopPath, int bufferSize)", "full_signature": "@Override public FSDataInputStream open(Path hadoopPath, int bufferSize)", "class_method_signature": "GoogleHadoopFileSystemBase.open(Path hadoopPath, int bufferSize)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(\n      Path hadoopPath,\n      FsPermission permission,\n      boolean overwrite,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "modifiers": "@Override public", "return": "FSDataOutputStream", "signature": "FSDataOutputStream create(\n      Path hadoopPath,\n      FsPermission permission,\n      boolean overwrite,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "full_signature": "@Override public FSDataOutputStream create(\n      Path hadoopPath,\n      FsPermission permission,\n      boolean overwrite,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "class_method_signature": "GoogleHadoopFileSystemBase.create(\n      Path hadoopPath,\n      FsPermission permission,\n      boolean overwrite,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "testcase": false, "constructor": false}, {"identifier": "createNonRecursive", "parameters": "(\n      Path hadoopPath,\n      FsPermission permission,\n      EnumSet<org.apache.hadoop.fs.CreateFlag> flags,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "modifiers": "@Override public", "return": "FSDataOutputStream", "signature": "FSDataOutputStream createNonRecursive(\n      Path hadoopPath,\n      FsPermission permission,\n      EnumSet<org.apache.hadoop.fs.CreateFlag> flags,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "full_signature": "@Override public FSDataOutputStream createNonRecursive(\n      Path hadoopPath,\n      FsPermission permission,\n      EnumSet<org.apache.hadoop.fs.CreateFlag> flags,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "class_method_signature": "GoogleHadoopFileSystemBase.createNonRecursive(\n      Path hadoopPath,\n      FsPermission permission,\n      EnumSet<org.apache.hadoop.fs.CreateFlag> flags,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Path hadoopPath, int bufferSize, Progressable progress)", "modifiers": "@Override public", "return": "FSDataOutputStream", "signature": "FSDataOutputStream append(Path hadoopPath, int bufferSize, Progressable progress)", "full_signature": "@Override public FSDataOutputStream append(Path hadoopPath, int bufferSize, Progressable progress)", "class_method_signature": "GoogleHadoopFileSystemBase.append(Path hadoopPath, int bufferSize, Progressable progress)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(Path tgt, Path[] srcs)", "modifiers": "@Override public", "return": "void", "signature": "void concat(Path tgt, Path[] srcs)", "full_signature": "@Override public void concat(Path tgt, Path[] srcs)", "class_method_signature": "GoogleHadoopFileSystemBase.concat(Path tgt, Path[] srcs)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(Path src, Path dst)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean rename(Path src, Path dst)", "full_signature": "@Override public boolean rename(Path src, Path dst)", "class_method_signature": "GoogleHadoopFileSystemBase.rename(Path src, Path dst)", "testcase": false, "constructor": false}, {"identifier": "renameInternal", "parameters": "(Path src, Path dst)", "modifiers": "", "return": "void", "signature": "void renameInternal(Path src, Path dst)", "full_signature": " void renameInternal(Path src, Path dst)", "class_method_signature": "GoogleHadoopFileSystemBase.renameInternal(Path src, Path dst)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Path hadoopPath, boolean recursive)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(Path hadoopPath, boolean recursive)", "full_signature": "@Override public boolean delete(Path hadoopPath, boolean recursive)", "class_method_signature": "GoogleHadoopFileSystemBase.delete(Path hadoopPath, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "listStatus", "parameters": "(Path hadoopPath)", "modifiers": "@Override public", "return": "FileStatus[]", "signature": "FileStatus[] listStatus(Path hadoopPath)", "full_signature": "@Override public FileStatus[] listStatus(Path hadoopPath)", "class_method_signature": "GoogleHadoopFileSystemBase.listStatus(Path hadoopPath)", "testcase": false, "constructor": false}, {"identifier": "setWorkingDirectory", "parameters": "(Path hadoopPath)", "modifiers": "@Override public", "return": "void", "signature": "void setWorkingDirectory(Path hadoopPath)", "full_signature": "@Override public void setWorkingDirectory(Path hadoopPath)", "class_method_signature": "GoogleHadoopFileSystemBase.setWorkingDirectory(Path hadoopPath)", "testcase": false, "constructor": false}, {"identifier": "getWorkingDirectory", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getWorkingDirectory()", "full_signature": "@Override public Path getWorkingDirectory()", "class_method_signature": "GoogleHadoopFileSystemBase.getWorkingDirectory()", "testcase": false, "constructor": false}, {"identifier": "mkdirs", "parameters": "(Path hadoopPath, FsPermission permission)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean mkdirs(Path hadoopPath, FsPermission permission)", "full_signature": "@Override public boolean mkdirs(Path hadoopPath, FsPermission permission)", "class_method_signature": "GoogleHadoopFileSystemBase.mkdirs(Path hadoopPath, FsPermission permission)", "testcase": false, "constructor": false}, {"identifier": "getDefaultReplication", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short getDefaultReplication()", "full_signature": "@Override public short getDefaultReplication()", "class_method_signature": "GoogleHadoopFileSystemBase.getDefaultReplication()", "testcase": false, "constructor": false}, {"identifier": "getFileStatus", "parameters": "(Path hadoopPath)", "modifiers": "@Override public", "return": "FileStatus", "signature": "FileStatus getFileStatus(Path hadoopPath)", "full_signature": "@Override public FileStatus getFileStatus(Path hadoopPath)", "class_method_signature": "GoogleHadoopFileSystemBase.getFileStatus(Path hadoopPath)", "testcase": false, "constructor": false}, {"identifier": "getFileStatus", "parameters": "(FileInfo fileInfo, String userName)", "modifiers": "private", "return": "FileStatus", "signature": "FileStatus getFileStatus(FileInfo fileInfo, String userName)", "full_signature": "private FileStatus getFileStatus(FileInfo fileInfo, String userName)", "class_method_signature": "GoogleHadoopFileSystemBase.getFileStatus(FileInfo fileInfo, String userName)", "testcase": false, "constructor": false}, {"identifier": "couldUseFlatGlob", "parameters": "(Path fixedPath)", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean couldUseFlatGlob(Path fixedPath)", "full_signature": "@VisibleForTesting boolean couldUseFlatGlob(Path fixedPath)", "class_method_signature": "GoogleHadoopFileSystemBase.couldUseFlatGlob(Path fixedPath)", "testcase": false, "constructor": false}, {"identifier": "trimToPrefixWithoutGlob", "parameters": "(String path)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String trimToPrefixWithoutGlob(String path)", "full_signature": "@VisibleForTesting String trimToPrefixWithoutGlob(String path)", "class_method_signature": "GoogleHadoopFileSystemBase.trimToPrefixWithoutGlob(String path)", "testcase": false, "constructor": false}, {"identifier": "globStatus", "parameters": "(Path pathPattern)", "modifiers": "@Override public", "return": "FileStatus[]", "signature": "FileStatus[] globStatus(Path pathPattern)", "full_signature": "@Override public FileStatus[] globStatus(Path pathPattern)", "class_method_signature": "GoogleHadoopFileSystemBase.globStatus(Path pathPattern)", "testcase": false, "constructor": false}, {"identifier": "globStatus", "parameters": "(Path pathPattern, PathFilter filter)", "modifiers": "@Override public", "return": "FileStatus[]", "signature": "FileStatus[] globStatus(Path pathPattern, PathFilter filter)", "full_signature": "@Override public FileStatus[] globStatus(Path pathPattern, PathFilter filter)", "class_method_signature": "GoogleHadoopFileSystemBase.globStatus(Path pathPattern, PathFilter filter)", "testcase": false, "constructor": false}, {"identifier": "concurrentGlobInternal", "parameters": "(Path fixedPath, PathFilter filter)", "modifiers": "private", "return": "FileStatus[]", "signature": "FileStatus[] concurrentGlobInternal(Path fixedPath, PathFilter filter)", "full_signature": "private FileStatus[] concurrentGlobInternal(Path fixedPath, PathFilter filter)", "class_method_signature": "GoogleHadoopFileSystemBase.concurrentGlobInternal(Path fixedPath, PathFilter filter)", "testcase": false, "constructor": false}, {"identifier": "flatGlobInternal", "parameters": "(Path fixedPath, PathFilter filter)", "modifiers": "private", "return": "FileStatus[]", "signature": "FileStatus[] flatGlobInternal(Path fixedPath, PathFilter filter)", "full_signature": "private FileStatus[] flatGlobInternal(Path fixedPath, PathFilter filter)", "class_method_signature": "GoogleHadoopFileSystemBase.flatGlobInternal(Path fixedPath, PathFilter filter)", "testcase": false, "constructor": false}, {"identifier": "isImplicitDirectory", "parameters": "(FileStatus curr)", "modifiers": "private static", "return": "boolean", "signature": "boolean isImplicitDirectory(FileStatus curr)", "full_signature": "private static boolean isImplicitDirectory(FileStatus curr)", "class_method_signature": "GoogleHadoopFileSystemBase.isImplicitDirectory(FileStatus curr)", "testcase": false, "constructor": false}, {"identifier": "toFileStatusesWithImplicitDirectories", "parameters": "(\n      Collection<FileInfo> fileInfos)", "modifiers": "private", "return": "Collection<FileStatus>", "signature": "Collection<FileStatus> toFileStatusesWithImplicitDirectories(\n      Collection<FileInfo> fileInfos)", "full_signature": "private Collection<FileStatus> toFileStatusesWithImplicitDirectories(\n      Collection<FileInfo> fileInfos)", "class_method_signature": "GoogleHadoopFileSystemBase.toFileStatusesWithImplicitDirectories(\n      Collection<FileInfo> fileInfos)", "testcase": false, "constructor": false}, {"identifier": "getUgiUserName", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getUgiUserName()", "full_signature": "private static String getUgiUserName()", "class_method_signature": "GoogleHadoopFileSystemBase.getUgiUserName()", "testcase": false, "constructor": false}, {"identifier": "getHomeDirectory", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getHomeDirectory()", "full_signature": "@Override public Path getHomeDirectory()", "class_method_signature": "GoogleHadoopFileSystemBase.getHomeDirectory()", "testcase": false, "constructor": false}, {"identifier": "fileStatusToString", "parameters": "(FileStatus stat)", "modifiers": "private static", "return": "String", "signature": "String fileStatusToString(FileStatus stat)", "full_signature": "private static String fileStatusToString(FileStatus stat)", "class_method_signature": "GoogleHadoopFileSystemBase.fileStatusToString(FileStatus stat)", "testcase": false, "constructor": false}, {"identifier": "getCanonicalServiceName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCanonicalServiceName()", "full_signature": "@Override public String getCanonicalServiceName()", "class_method_signature": "GoogleHadoopFileSystemBase.getCanonicalServiceName()", "testcase": false, "constructor": false}, {"identifier": "getGcsFs", "parameters": "()", "modifiers": "public", "return": "GoogleCloudStorageFileSystem", "signature": "GoogleCloudStorageFileSystem getGcsFs()", "full_signature": "public GoogleCloudStorageFileSystem getGcsFs()", "class_method_signature": "GoogleHadoopFileSystemBase.getGcsFs()", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "(Counter key)", "modifiers": "", "return": "void", "signature": "void increment(Counter key)", "full_signature": " void increment(Counter key)", "class_method_signature": "GoogleHadoopFileSystemBase.increment(Counter key)", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "(Counter key, long value)", "modifiers": "", "return": "void", "signature": "void increment(Counter key, long value)", "full_signature": " void increment(Counter key, long value)", "class_method_signature": "GoogleHadoopFileSystemBase.increment(Counter key, long value)", "testcase": false, "constructor": false}, {"identifier": "countersToString", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String countersToString()", "full_signature": "@VisibleForTesting String countersToString()", "class_method_signature": "GoogleHadoopFileSystemBase.countersToString()", "testcase": false, "constructor": false}, {"identifier": "logCounters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void logCounters()", "full_signature": "private void logCounters()", "class_method_signature": "GoogleHadoopFileSystemBase.logCounters()", "testcase": false, "constructor": false}, {"identifier": "getCredential", "parameters": "(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions)", "modifiers": "private", "return": "Credential", "signature": "Credential getCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions)", "full_signature": "private Credential getCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions)", "class_method_signature": "GoogleHadoopFileSystemBase.getCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions)", "testcase": false, "constructor": false}, {"identifier": "getImpersonatedCredential", "parameters": "(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions, Credential credential)", "modifiers": "private static", "return": "Optional<Credential>", "signature": "Optional<Credential> getImpersonatedCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions, Credential credential)", "full_signature": "private static Optional<Credential> getImpersonatedCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions, Credential credential)", "class_method_signature": "GoogleHadoopFileSystemBase.getImpersonatedCredential(\n      Configuration config, GoogleCloudStorageFileSystemOptions gcsFsOptions, Credential credential)", "testcase": false, "constructor": false}, {"identifier": "getServiceAccountToImpersonateForUserGroup", "parameters": "(\n      Map<String, String> serviceAccountMapping, List<String> userGroups)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> getServiceAccountToImpersonateForUserGroup(\n      Map<String, String> serviceAccountMapping, List<String> userGroups)", "full_signature": "private static Optional<String> getServiceAccountToImpersonateForUserGroup(\n      Map<String, String> serviceAccountMapping, List<String> userGroups)", "class_method_signature": "GoogleHadoopFileSystemBase.getServiceAccountToImpersonateForUserGroup(\n      Map<String, String> serviceAccountMapping, List<String> userGroups)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Configuration config)", "modifiers": "private synchronized", "return": "void", "signature": "void configure(Configuration config)", "full_signature": "private synchronized void configure(Configuration config)", "class_method_signature": "GoogleHadoopFileSystemBase.configure(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "overrideConfigFromFile", "parameters": "(Configuration config)", "modifiers": "private", "return": "void", "signature": "void overrideConfigFromFile(Configuration config)", "full_signature": "private void overrideConfigFromFile(Configuration config)", "class_method_signature": "GoogleHadoopFileSystemBase.overrideConfigFromFile(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "createGcsFs", "parameters": "(Configuration config)", "modifiers": "private", "return": "GoogleCloudStorageFileSystem", "signature": "GoogleCloudStorageFileSystem createGcsFs(Configuration config)", "full_signature": "private GoogleCloudStorageFileSystem createGcsFs(Configuration config)", "class_method_signature": "GoogleHadoopFileSystemBase.createGcsFs(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "configureBuckets", "parameters": "(GoogleCloudStorageFileSystem gcsFs)", "modifiers": "@VisibleForTesting protected abstract", "return": "void", "signature": "void configureBuckets(GoogleCloudStorageFileSystem gcsFs)", "full_signature": "@VisibleForTesting protected abstract void configureBuckets(GoogleCloudStorageFileSystem gcsFs)", "class_method_signature": "GoogleHadoopFileSystemBase.configureBuckets(GoogleCloudStorageFileSystem gcsFs)", "testcase": false, "constructor": false}, {"identifier": "configureWorkingDirectory", "parameters": "(Configuration config)", "modifiers": "private", "return": "void", "signature": "void configureWorkingDirectory(Configuration config)", "full_signature": "private void configureWorkingDirectory(Configuration config)", "class_method_signature": "GoogleHadoopFileSystemBase.configureWorkingDirectory(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "checkOpen", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkOpen()", "full_signature": "private void checkOpen()", "class_method_signature": "GoogleHadoopFileSystemBase.checkOpen()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "private boolean isClosed()", "class_method_signature": "GoogleHadoopFileSystemBase.isClosed()", "testcase": false, "constructor": false}, {"identifier": "deleteOnExit", "parameters": "(Path f)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteOnExit(Path f)", "full_signature": "@Override public boolean deleteOnExit(Path f)", "class_method_signature": "GoogleHadoopFileSystemBase.deleteOnExit(Path f)", "testcase": false, "constructor": false}, {"identifier": "processDeleteOnExit", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void processDeleteOnExit()", "full_signature": "@Override protected void processDeleteOnExit()", "class_method_signature": "GoogleHadoopFileSystemBase.processDeleteOnExit()", "testcase": false, "constructor": false}, {"identifier": "getContentSummary", "parameters": "(Path f)", "modifiers": "@Override public", "return": "ContentSummary", "signature": "ContentSummary getContentSummary(Path f)", "full_signature": "@Override public ContentSummary getContentSummary(Path f)", "class_method_signature": "GoogleHadoopFileSystemBase.getContentSummary(Path f)", "testcase": false, "constructor": false}, {"identifier": "getDelegationToken", "parameters": "(String renewer)", "modifiers": "@Override public", "return": "Token<?>", "signature": "Token<?> getDelegationToken(String renewer)", "full_signature": "@Override public Token<?> getDelegationToken(String renewer)", "class_method_signature": "GoogleHadoopFileSystemBase.getDelegationToken(String renewer)", "testcase": false, "constructor": false}, {"identifier": "copyFromLocalFile", "parameters": "(boolean delSrc, boolean overwrite, Path[] srcs, Path dst)", "modifiers": "@Override public", "return": "void", "signature": "void copyFromLocalFile(boolean delSrc, boolean overwrite, Path[] srcs, Path dst)", "full_signature": "@Override public void copyFromLocalFile(boolean delSrc, boolean overwrite, Path[] srcs, Path dst)", "class_method_signature": "GoogleHadoopFileSystemBase.copyFromLocalFile(boolean delSrc, boolean overwrite, Path[] srcs, Path dst)", "testcase": false, "constructor": false}, {"identifier": "copyFromLocalFile", "parameters": "(boolean delSrc, boolean overwrite, Path src, Path dst)", "modifiers": "@Override public", "return": "void", "signature": "void copyFromLocalFile(boolean delSrc, boolean overwrite, Path src, Path dst)", "full_signature": "@Override public void copyFromLocalFile(boolean delSrc, boolean overwrite, Path src, Path dst)", "class_method_signature": "GoogleHadoopFileSystemBase.copyFromLocalFile(boolean delSrc, boolean overwrite, Path src, Path dst)", "testcase": false, "constructor": false}, {"identifier": "copyToLocalFile", "parameters": "(boolean delSrc, Path src, Path dst)", "modifiers": "@Override public", "return": "void", "signature": "void copyToLocalFile(boolean delSrc, Path src, Path dst)", "full_signature": "@Override public void copyToLocalFile(boolean delSrc, Path src, Path dst)", "class_method_signature": "GoogleHadoopFileSystemBase.copyToLocalFile(boolean delSrc, Path src, Path dst)", "testcase": false, "constructor": false}, {"identifier": "startLocalOutput", "parameters": "(Path fsOutputFile, Path tmpLocalFile)", "modifiers": "@Override public", "return": "Path", "signature": "Path startLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "full_signature": "@Override public Path startLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "class_method_signature": "GoogleHadoopFileSystemBase.startLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "testcase": false, "constructor": false}, {"identifier": "completeLocalOutput", "parameters": "(Path fsOutputFile, Path tmpLocalFile)", "modifiers": "@Override public", "return": "void", "signature": "void completeLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "full_signature": "@Override public void completeLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "class_method_signature": "GoogleHadoopFileSystemBase.completeLocalOutput(Path fsOutputFile, Path tmpLocalFile)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "GoogleHadoopFileSystemBase.close()", "testcase": false, "constructor": false}, {"identifier": "getUsed", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getUsed()", "full_signature": "@Override public long getUsed()", "class_method_signature": "GoogleHadoopFileSystemBase.getUsed()", "testcase": false, "constructor": false}, {"identifier": "getDefaultBlockSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getDefaultBlockSize()", "full_signature": "@Override public long getDefaultBlockSize()", "class_method_signature": "GoogleHadoopFileSystemBase.getDefaultBlockSize()", "testcase": false, "constructor": false}, {"identifier": "getFileChecksum", "parameters": "(Path hadoopPath)", "modifiers": "@Override public", "return": "FileChecksum", "signature": "FileChecksum getFileChecksum(Path hadoopPath)", "full_signature": "@Override public FileChecksum getFileChecksum(Path hadoopPath)", "class_method_signature": "GoogleHadoopFileSystemBase.getFileChecksum(Path hadoopPath)", "testcase": false, "constructor": false}, {"identifier": "getFileChecksum", "parameters": "(GcsFileChecksumType type, FileInfo fileInfo)", "modifiers": "private static", "return": "FileChecksum", "signature": "FileChecksum getFileChecksum(GcsFileChecksumType type, FileInfo fileInfo)", "full_signature": "private static FileChecksum getFileChecksum(GcsFileChecksumType type, FileInfo fileInfo)", "class_method_signature": "GoogleHadoopFileSystemBase.getFileChecksum(GcsFileChecksumType type, FileInfo fileInfo)", "testcase": false, "constructor": false}, {"identifier": "setVerifyChecksum", "parameters": "(boolean verifyChecksum)", "modifiers": "@Override public", "return": "void", "signature": "void setVerifyChecksum(boolean verifyChecksum)", "full_signature": "@Override public void setVerifyChecksum(boolean verifyChecksum)", "class_method_signature": "GoogleHadoopFileSystemBase.setVerifyChecksum(boolean verifyChecksum)", "testcase": false, "constructor": false}, {"identifier": "setPermission", "parameters": "(Path p, FsPermission permission)", "modifiers": "@Override public", "return": "void", "signature": "void setPermission(Path p, FsPermission permission)", "full_signature": "@Override public void setPermission(Path p, FsPermission permission)", "class_method_signature": "GoogleHadoopFileSystemBase.setPermission(Path p, FsPermission permission)", "testcase": false, "constructor": false}, {"identifier": "setOwner", "parameters": "(Path p, String username, String groupname)", "modifiers": "@Override public", "return": "void", "signature": "void setOwner(Path p, String username, String groupname)", "full_signature": "@Override public void setOwner(Path p, String username, String groupname)", "class_method_signature": "GoogleHadoopFileSystemBase.setOwner(Path p, String username, String groupname)", "testcase": false, "constructor": false}, {"identifier": "setTimes", "parameters": "(Path p, long mtime, long atime)", "modifiers": "@Override public", "return": "void", "signature": "void setTimes(Path p, long mtime, long atime)", "full_signature": "@Override public void setTimes(Path p, long mtime, long atime)", "class_method_signature": "GoogleHadoopFileSystemBase.setTimes(Path p, long mtime, long atime)", "testcase": false, "constructor": false}, {"identifier": "getXAttr", "parameters": "(Path path, String name)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getXAttr(Path path, String name)", "full_signature": "@Override public byte[] getXAttr(Path path, String name)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttr(Path path, String name)", "testcase": false, "constructor": false}, {"identifier": "getXAttrs", "parameters": "(Path path)", "modifiers": "@Override public", "return": "Map<String, byte[]>", "signature": "Map<String, byte[]> getXAttrs(Path path)", "full_signature": "@Override public Map<String, byte[]> getXAttrs(Path path)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttrs(Path path)", "testcase": false, "constructor": false}, {"identifier": "getXAttrs", "parameters": "(Path path, List<String> names)", "modifiers": "@Override public", "return": "Map<String, byte[]>", "signature": "Map<String, byte[]> getXAttrs(Path path, List<String> names)", "full_signature": "@Override public Map<String, byte[]> getXAttrs(Path path, List<String> names)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttrs(Path path, List<String> names)", "testcase": false, "constructor": false}, {"identifier": "listXAttrs", "parameters": "(Path path)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listXAttrs(Path path)", "full_signature": "@Override public List<String> listXAttrs(Path path)", "class_method_signature": "GoogleHadoopFileSystemBase.listXAttrs(Path path)", "testcase": false, "constructor": false}, {"identifier": "setXAttr", "parameters": "(Path path, String name, byte[] value, EnumSet<XAttrSetFlag> flags)", "modifiers": "@Override public", "return": "void", "signature": "void setXAttr(Path path, String name, byte[] value, EnumSet<XAttrSetFlag> flags)", "full_signature": "@Override public void setXAttr(Path path, String name, byte[] value, EnumSet<XAttrSetFlag> flags)", "class_method_signature": "GoogleHadoopFileSystemBase.setXAttr(Path path, String name, byte[] value, EnumSet<XAttrSetFlag> flags)", "testcase": false, "constructor": false}, {"identifier": "removeXAttr", "parameters": "(Path path, String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeXAttr(Path path, String name)", "full_signature": "@Override public void removeXAttr(Path path, String name)", "class_method_signature": "GoogleHadoopFileSystemBase.removeXAttr(Path path, String name)", "testcase": false, "constructor": false}, {"identifier": "isXAttr", "parameters": "(String key)", "modifiers": "private", "return": "boolean", "signature": "boolean isXAttr(String key)", "full_signature": "private boolean isXAttr(String key)", "class_method_signature": "GoogleHadoopFileSystemBase.isXAttr(String key)", "testcase": false, "constructor": false}, {"identifier": "getXAttrKey", "parameters": "(String name)", "modifiers": "private", "return": "String", "signature": "String getXAttrKey(String name)", "full_signature": "private String getXAttrKey(String name)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttrKey(String name)", "testcase": false, "constructor": false}, {"identifier": "getXAttrName", "parameters": "(String key)", "modifiers": "private", "return": "String", "signature": "String getXAttrName(String key)", "full_signature": "private String getXAttrName(String key)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttrName(String key)", "testcase": false, "constructor": false}, {"identifier": "getXAttrValue", "parameters": "(byte[] value)", "modifiers": "private", "return": "byte[]", "signature": "byte[] getXAttrValue(byte[] value)", "full_signature": "private byte[] getXAttrValue(byte[] value)", "class_method_signature": "GoogleHadoopFileSystemBase.getXAttrValue(byte[] value)", "testcase": false, "constructor": false}], "file": "gcs/src/main/java/com/google/cloud/hadoop/fs/gcs/GoogleHadoopFileSystemBase.java"}, "focal_method": {"identifier": "getCanonicalServiceName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String getCanonicalServiceName() {\n    String service = null;\n    if (delegationTokens != null) {\n      service = delegationTokens.getService().toString();\n    }\n    logger.atFinest().log(\"getCanonicalServiceName(): %s\", service);\n    return service;\n  }", "signature": "String getCanonicalServiceName()", "full_signature": "@Override public String getCanonicalServiceName()", "class_method_signature": "GoogleHadoopFileSystemBase.getCanonicalServiceName()", "testcase": false, "constructor": false, "invocations": ["toString", "getService", "log", "atFinest"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}