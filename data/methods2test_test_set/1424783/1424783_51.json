{"test_class": {"identifier": "ZoomEstimatorTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    XYPlot xyPlot;", "modifier": "@Mock", "type": "XYPlot", "declarator": "xyPlot", "var_name": "xyPlot"}], "file": "androidplot-core/src/test/java/com/androidplot/xy/ZoomEstimatorTest.java"}, "test_case": {"identifier": "testCalculateZoom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCalculateZoom() {\n        ZoomEstimator estimator = spy(new ZoomEstimator());\n\n        SampledXYSeries series =\n                spy(new SampledXYSeries(TestUtils\n                        .generateXYSeries(\"test series\", 1000), 2, 100));\n        series.resample();\n\n        when(xyPlot.getBounds())\n                .thenReturn(new RectRegion(0, 1000, 0, 1000));\n\n        // fully zoomed out so max zoom factor should be applied:\n        assertEquals(series.getMaxZoomFactor(), estimator.calculateZoom(series, new RectRegion(0, 1000, 0, 1000)));\n\n        // fully zoomed in so min zoom factor should be applied:\n        assertEquals(1d, estimator.calculateZoom(series, new RectRegion(0, 1, 0, 1)));\n\n    }", "signature": "void testCalculateZoom()", "full_signature": "@Test public void testCalculateZoom()", "class_method_signature": "ZoomEstimatorTest.testCalculateZoom()", "testcase": true, "constructor": false, "invocations": ["spy", "spy", "generateXYSeries", "resample", "thenReturn", "when", "getBounds", "assertEquals", "getMaxZoomFactor", "calculateZoom", "assertEquals", "calculateZoom"]}, "focal_class": {"identifier": "ZoomEstimator", "superclass": "extends Estimator", "interfaces": "", "fields": [], "methods": [{"identifier": "run", "parameters": "(XYPlot plot, XYSeriesBundle sf)", "modifiers": "@Override public", "return": "void", "signature": "void run(XYPlot plot, XYSeriesBundle sf)", "full_signature": "@Override public void run(XYPlot plot, XYSeriesBundle sf)", "class_method_signature": "ZoomEstimator.run(XYPlot plot, XYSeriesBundle sf)", "testcase": false, "constructor": false}, {"identifier": "calculateZoom", "parameters": "(SampledXYSeries series, RectRegion visibleBounds)", "modifiers": "protected", "return": "double", "signature": "double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "full_signature": "protected double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "class_method_signature": "ZoomEstimator.calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/ZoomEstimator.java"}, "focal_method": {"identifier": "calculateZoom", "parameters": "(SampledXYSeries series, RectRegion visibleBounds)", "modifiers": "protected", "return": "double", "body": "protected double calculateZoom(SampledXYSeries series, RectRegion visibleBounds) {\n        RectRegion seriesBounds = series.getBounds();\n        final double ratio = seriesBounds.getxRegion().ratio(visibleBounds.getxRegion()).doubleValue();\n        final double maxFactor = series.getMaxZoomFactor();\n        final double factor = Math.abs(Math.round(maxFactor / ratio));\n        return factor > 0 ? factor : 1;\n    }", "signature": "double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "full_signature": "protected double calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "class_method_signature": "ZoomEstimator.calculateZoom(SampledXYSeries series, RectRegion visibleBounds)", "testcase": false, "constructor": false, "invocations": ["getBounds", "doubleValue", "ratio", "getxRegion", "getxRegion", "getMaxZoomFactor", "abs", "round"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}