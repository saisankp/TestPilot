{"test_class": {"identifier": "StringToIntMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/src/test/java/com/powsybl/commons/util/StringToIntMapperTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws IOException {\n        StringToIntMapper<TestSubset> mapper = new StringToIntMapper<>(TestSubset.class);\n        testAddMapping(mapper);\n        mapper.reset(TestSubset.TYPE);\n        testAddMapping(mapper);\n        try {\n            mapper.reset(null);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "StringToIntMapperTest.test()", "testcase": true, "constructor": false, "invocations": ["testAddMapping", "reset", "testAddMapping", "reset", "fail"]}, "focal_class": {"identifier": "StringToIntMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Class<S> clazz;", "modifier": "private final", "type": "Class<S>", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private final Map<S, BiMap<String, Integer>> id2num;", "modifier": "private final", "type": "Map<S, BiMap<String, Integer>>", "declarator": "id2num", "var_name": "id2num"}, {"original_string": "private final Map<S, Integer> counter;", "modifier": "private final", "type": "Map<S, Integer>", "declarator": "counter", "var_name": "counter"}, {"original_string": "private boolean modified = false;", "modifier": "private", "type": "boolean", "declarator": "modified = false", "var_name": "modified"}], "methods": [{"identifier": "StringToIntMapper", "parameters": "(Class<S> clazz)", "modifiers": "public", "return": "", "signature": " StringToIntMapper(Class<S> clazz)", "full_signature": "public  StringToIntMapper(Class<S> clazz)", "class_method_signature": "StringToIntMapper.StringToIntMapper(Class<S> clazz)", "testcase": false, "constructor": true}, {"identifier": "createSubsetIsNullException", "parameters": "()", "modifiers": "private static", "return": "IllegalArgumentException", "signature": "IllegalArgumentException createSubsetIsNullException()", "full_signature": "private static IllegalArgumentException createSubsetIsNullException()", "class_method_signature": "StringToIntMapper.createSubsetIsNullException()", "testcase": false, "constructor": false}, {"identifier": "newInt", "parameters": "(S subset, String id)", "modifiers": "public synchronized", "return": "int", "signature": "int newInt(S subset, String id)", "full_signature": "public synchronized int newInt(S subset, String id)", "class_method_signature": "StringToIntMapper.newInt(S subset, String id)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(S subset, String id)", "modifiers": "public synchronized", "return": "int", "signature": "int getInt(S subset, String id)", "full_signature": "public synchronized int getInt(S subset, String id)", "class_method_signature": "StringToIntMapper.getInt(S subset, String id)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(S subset, int num)", "modifiers": "public synchronized", "return": "String", "signature": "String getId(S subset, int num)", "full_signature": "public synchronized String getId(S subset, int num)", "class_method_signature": "StringToIntMapper.getId(S subset, int num)", "testcase": false, "constructor": false}, {"identifier": "isMapped", "parameters": "(S subset, String id)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean isMapped(S subset, String id)", "full_signature": "public synchronized boolean isMapped(S subset, String id)", "class_method_signature": "StringToIntMapper.isMapped(S subset, String id)", "testcase": false, "constructor": false}, {"identifier": "isModified", "parameters": "()", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean isModified()", "full_signature": "public synchronized boolean isModified()", "class_method_signature": "StringToIntMapper.isModified()", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(Writer writer)", "modifiers": "public synchronized", "return": "void", "signature": "void dump(Writer writer)", "full_signature": "public synchronized void dump(Writer writer)", "class_method_signature": "StringToIntMapper.dump(Writer writer)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(Path file)", "modifiers": "public", "return": "void", "signature": "void dump(Path file)", "full_signature": "public void dump(Path file)", "class_method_signature": "StringToIntMapper.dump(Path file)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(BufferedReader reader)", "modifiers": "public synchronized", "return": "void", "signature": "void load(BufferedReader reader)", "full_signature": "public synchronized void load(BufferedReader reader)", "class_method_signature": "StringToIntMapper.load(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Path file)", "modifiers": "public", "return": "void", "signature": "void load(Path file)", "full_signature": "public void load(Path file)", "class_method_signature": "StringToIntMapper.load(Path file)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(S subset)", "modifiers": "public synchronized", "return": "void", "signature": "void reset(S subset)", "full_signature": "public synchronized void reset(S subset)", "class_method_signature": "StringToIntMapper.reset(S subset)", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/powsybl/commons/util/StringToIntMapper.java"}, "focal_method": {"identifier": "reset", "parameters": "(S subset)", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void reset(S subset) {\n        if (subset == null) {\n            throw new IllegalArgumentException(\"subset is null\");\n        }\n        id2num.put(subset, HashBiMap.<String, Integer>create());\n        counter.put(subset, subset.getInitialValue());\n    }", "signature": "void reset(S subset)", "full_signature": "public synchronized void reset(S subset)", "class_method_signature": "StringToIntMapper.reset(S subset)", "testcase": false, "constructor": false, "invocations": ["put", "create", "put", "getInitialValue"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}