{"test_class": {"identifier": "GameSpecSourceInstantiatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "gazeplay-core/src/test/java/net/gazeplay/gameslocator/GameSpecSourceInstantiatorTest.java"}, "test_case": {"identifier": "shouldInstantiateFromListOfSources", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldInstantiateFromListOfSources() throws ClassNotFoundException {\n        List<Class> classList = new ArrayList<>(List.of(\n            Class.forName(\"net.gazeplay.games.videogrid.VideoGridGameSpecSource\"),\n            Class.forName(\"net.gazeplay.games.order.OrderGameSpecSource\"),\n            Class.forName(\"net.gazeplay.games.mediaPlayer.MediaPlayerGameSpecSource\")\n        ));\n\n        GameSpecSourceInstantiator instantiator = new GameSpecSourceInstantiator();\n        List<GameSpecSource> result = instantiator.instantiateGameSpecSources(classList);\n\n        assertEquals(3, result.size());\n    }", "signature": "void shouldInstantiateFromListOfSources()", "full_signature": "@Test void shouldInstantiateFromListOfSources()", "class_method_signature": "GameSpecSourceInstantiatorTest.shouldInstantiateFromListOfSources()", "testcase": true, "constructor": false, "invocations": ["of", "forName", "forName", "forName", "instantiateGameSpecSources", "assertEquals", "size"]}, "focal_class": {"identifier": "GameSpecSourceInstantiator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "instantiateGameSpecSources", "parameters": "(List<Class> gamesClasses)", "modifiers": "public", "return": "List<GameSpecSource>", "signature": "List<GameSpecSource> instantiateGameSpecSources(List<Class> gamesClasses)", "full_signature": "public List<GameSpecSource> instantiateGameSpecSources(List<Class> gamesClasses)", "class_method_signature": "GameSpecSourceInstantiator.instantiateGameSpecSources(List<Class> gamesClasses)", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/gameslocator/GameSpecSourceInstantiator.java"}, "focal_method": {"identifier": "instantiateGameSpecSources", "parameters": "(List<Class> gamesClasses)", "modifiers": "public", "return": "List<GameSpecSource>", "body": "public List<GameSpecSource> instantiateGameSpecSources(List<Class> gamesClasses) {\n        return gamesClasses\n            .stream()\n            .map(gameClass -> {\n                try {\n                    Constructor<GameSpecSource> defaultConstructor = gameClass.getConstructor();\n                    return defaultConstructor.newInstance();\n                } catch (\n                    NoSuchMethodException |\n                        IllegalAccessException |\n                        InstantiationException |\n                        InvocationTargetException |\n                        ClassCastException e) {\n                    throw new GameSpecInstantiationException(\"Failed to create new instance of class \" + gameClass, e);\n                }\n            })\n            .collect(Collectors.toList());\n    }", "signature": "List<GameSpecSource> instantiateGameSpecSources(List<Class> gamesClasses)", "full_signature": "public List<GameSpecSource> instantiateGameSpecSources(List<Class> gamesClasses)", "class_method_signature": "GameSpecSourceInstantiator.instantiateGameSpecSources(List<Class> gamesClasses)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "getConstructor", "newInstance", "toList"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}