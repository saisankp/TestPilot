{"test_class": {"identifier": "DefaultKeyProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static DefaultKeyProvider cut;", "modifier": "private static", "type": "DefaultKeyProvider", "declarator": "cut", "var_name": "cut"}], "file": "simple-spring-memcached/src/test/java/com/google/code/ssm/aop/support/DefaultKeyProviderTest.java"}, "test_case": {"identifier": "testMultiplex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMultiplex() {\n        final Object[] src = new Object[4];\n        final String[] expectedResults = new String[4];\n        final String data = \"abcdefghijklmnopqrstuvwxyz\";\n        for (int ix = 0; ix < 4; ix++) {\n            final String val = data.substring(0, 5 + ix);\n            src[ix] = new KeyObject(val);\n            expectedResults[ix] = val;\n        }\n\n        final String [] results = cut.generateKeys(src);\n        assertArrayEquals(expectedResults, results);\n    }", "signature": "void testMultiplex()", "full_signature": "@Test public void testMultiplex()", "class_method_signature": "DefaultKeyProviderTest.testMultiplex()", "testcase": true, "constructor": false, "invocations": ["substring", "generateKeys", "assertArrayEquals"]}, "focal_class": {"identifier": "DefaultKeyProvider", "superclass": "", "interfaces": "implements KeyProvider", "fields": [{"original_string": "private CacheKeyMethodStore methodStore = new CacheKeyMethodStoreImpl();", "modifier": "private", "type": "CacheKeyMethodStore", "declarator": "methodStore = new CacheKeyMethodStoreImpl()", "var_name": "methodStore"}], "methods": [{"identifier": "setMethodStore", "parameters": "(final CacheKeyMethodStore methodStore)", "modifiers": "public", "return": "void", "signature": "void setMethodStore(final CacheKeyMethodStore methodStore)", "full_signature": "public void setMethodStore(final CacheKeyMethodStore methodStore)", "class_method_signature": "DefaultKeyProvider.setMethodStore(final CacheKeyMethodStore methodStore)", "testcase": false, "constructor": false}, {"identifier": "getMethodStore", "parameters": "()", "modifiers": "public", "return": "CacheKeyMethodStore", "signature": "CacheKeyMethodStore getMethodStore()", "full_signature": "public CacheKeyMethodStore getMethodStore()", "class_method_signature": "DefaultKeyProvider.getMethodStore()", "testcase": false, "constructor": false}, {"identifier": "generateKey", "parameters": "(final Object keyObject)", "modifiers": "@Override public", "return": "String", "signature": "String generateKey(final Object keyObject)", "full_signature": "@Override public String generateKey(final Object keyObject)", "class_method_signature": "DefaultKeyProvider.generateKey(final Object keyObject)", "testcase": false, "constructor": false}, {"identifier": "generateKeys", "parameters": "(final Object[] keyObjects)", "modifiers": "@Override public", "return": "String[]", "signature": "String[] generateKeys(final Object[] keyObjects)", "full_signature": "@Override public String[] generateKeys(final Object[] keyObjects)", "class_method_signature": "DefaultKeyProvider.generateKeys(final Object[] keyObjects)", "testcase": false, "constructor": false}, {"identifier": "getKeyMethod", "parameters": "(final Object keyObject)", "modifiers": "", "return": "Method", "signature": "Method getKeyMethod(final Object keyObject)", "full_signature": " Method getKeyMethod(final Object keyObject)", "class_method_signature": "DefaultKeyProvider.getKeyMethod(final Object keyObject)", "testcase": false, "constructor": false}, {"identifier": "generateObjectId", "parameters": "(final Method keyMethod, final Object keyObject)", "modifiers": "", "return": "String", "signature": "String generateObjectId(final Method keyMethod, final Object keyObject)", "full_signature": " String generateObjectId(final Method keyMethod, final Object keyObject)", "class_method_signature": "DefaultKeyProvider.generateObjectId(final Method keyMethod, final Object keyObject)", "testcase": false, "constructor": false}], "file": "simple-spring-memcached/src/main/java/com/google/code/ssm/aop/support/DefaultKeyProvider.java"}, "focal_method": {"identifier": "generateKeys", "parameters": "(final Object[] keyObjects)", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] generateKeys(final Object[] keyObjects) {\n        if (keyObjects == null || keyObjects.length < 1) {\n            throw new InvalidParameterException(\"The key objects must be defined.\");\n        }\n\n        final String[] results = new String[keyObjects.length];\n        for (int i = 0; i < keyObjects.length; i++) {\n            results[i] = generateKey(keyObjects[i]);\n        }\n\n        return results;\n    }", "signature": "String[] generateKeys(final Object[] keyObjects)", "full_signature": "@Override public String[] generateKeys(final Object[] keyObjects)", "class_method_signature": "DefaultKeyProvider.generateKeys(final Object[] keyObjects)", "testcase": false, "constructor": false, "invocations": ["generateKey"]}, "repository": {"repo_id": 16611556, "url": "https://github.com/ragnor/simple-spring-memcached", "language": "Java", "is_fork": false, "fork_count": 86, "stargazer_count": 181, "size": 3625, "license": "licensed"}}