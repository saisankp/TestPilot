{"test_class": {"identifier": "CertificateCredentialsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String domain = \"domain\";", "modifier": "", "type": "String", "declarator": "domain = \"domain\"", "var_name": "domain"}, {"original_string": "AzureEnvironment environment = AzureEnvironment.AZURE;", "modifier": "", "type": "AzureEnvironment", "declarator": "environment = AzureEnvironment.AZURE", "var_name": "environment"}], "file": "nvadaemon-azure/src/test/java/com/microsoft/azure/practices/nvadaemon/credentials/CertificateCredentialsTest.java"}, "test_case": {"identifier": "testValidToken", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testValidToken() throws NoSuchFieldException, IllegalAccessException, IOException {\n        String resource = \"resource\";\n        String accessToken = \"accessToken\";\n        Field tokensField = CertificateCredentials.class.getDeclaredField(\"tokens\");\n        tokensField.setAccessible(true);\n        CertificateCredentials credentials = new CertificateCredentials(domain,\n            environment, mock(AsymmetricKeyCredentialFactory.class));\n        Map<String, AuthenticationResult> tokens =\n            (Map<String, AuthenticationResult>)tokensField.get(credentials);\n        AuthenticationResult authenticationResult = new AuthenticationResult(\n            \"accessTokenType\", accessToken, \"refreshToken\", 1000, \"idToken\", null, false);\n        tokens.put(resource, authenticationResult);\n        String token = credentials.getToken(resource);\n        Assertions.assertEquals(accessToken, token);\n    }", "signature": "void testValidToken()", "full_signature": "@Test void testValidToken()", "class_method_signature": "CertificateCredentialsTest.testValidToken()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "setAccessible", "mock", "get", "put", "getToken", "assertEquals"]}, "focal_class": {"identifier": "CertificateCredentials", "superclass": "extends TokenCredentials", "interfaces": "implements AzureTokenCredentials", "fields": [{"original_string": "private Map<String, AuthenticationResult> tokens;", "modifier": "private", "type": "Map<String, AuthenticationResult>", "declarator": "tokens", "var_name": "tokens"}, {"original_string": "private String domain;", "modifier": "private", "type": "String", "declarator": "domain", "var_name": "domain"}, {"original_string": "private AzureEnvironment environment;", "modifier": "private", "type": "AzureEnvironment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private AsymmetricKeyCredentialFactory credentialFactory;", "modifier": "private", "type": "AsymmetricKeyCredentialFactory", "declarator": "credentialFactory", "var_name": "credentialFactory"}], "methods": [{"identifier": "CertificateCredentials", "parameters": "(String domain, AzureEnvironment environment,\n                                  AsymmetricKeyCredentialFactory credentialFactory)", "modifiers": "public", "return": "", "signature": " CertificateCredentials(String domain, AzureEnvironment environment,\n                                  AsymmetricKeyCredentialFactory credentialFactory)", "full_signature": "public  CertificateCredentials(String domain, AzureEnvironment environment,\n                                  AsymmetricKeyCredentialFactory credentialFactory)", "class_method_signature": "CertificateCredentials.CertificateCredentials(String domain, AzureEnvironment environment,\n                                  AsymmetricKeyCredentialFactory credentialFactory)", "testcase": false, "constructor": true}, {"identifier": "getDomain", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDomain()", "full_signature": "@Override public String getDomain()", "class_method_signature": "CertificateCredentials.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getEnvironment", "parameters": "()", "modifiers": "@Override public", "return": "AzureEnvironment", "signature": "AzureEnvironment getEnvironment()", "full_signature": "@Override public AzureEnvironment getEnvironment()", "class_method_signature": "CertificateCredentials.getEnvironment()", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "(String resource)", "modifiers": "@Override public", "return": "String", "signature": "String getToken(String resource)", "full_signature": "@Override public String getToken(String resource)", "class_method_signature": "CertificateCredentials.getToken(String resource)", "testcase": false, "constructor": false}, {"identifier": "acquireAccessToken", "parameters": "(String resource)", "modifiers": "private", "return": "AuthenticationResult", "signature": "AuthenticationResult acquireAccessToken(String resource)", "full_signature": "private AuthenticationResult acquireAccessToken(String resource)", "class_method_signature": "CertificateCredentials.acquireAccessToken(String resource)", "testcase": false, "constructor": false}, {"identifier": "applyCredentialsFilter", "parameters": "(OkHttpClient.Builder clientBuilder)", "modifiers": "public", "return": "void", "signature": "void applyCredentialsFilter(OkHttpClient.Builder clientBuilder)", "full_signature": "public void applyCredentialsFilter(OkHttpClient.Builder clientBuilder)", "class_method_signature": "CertificateCredentials.applyCredentialsFilter(OkHttpClient.Builder clientBuilder)", "testcase": false, "constructor": false}], "file": "nvadaemon-azure/src/main/java/com/microsoft/azure/practices/nvadaemon/credentials/CertificateCredentials.java"}, "focal_method": {"identifier": "getToken", "parameters": "(String resource)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getToken(String resource) throws IOException {\n        AuthenticationResult authenticationResult = this.tokens.get(resource);\n        if(authenticationResult == null || authenticationResult.getExpiresOnDate().before(new Date())) {\n            authenticationResult = this.acquireAccessToken(resource);\n        }\n\n        return authenticationResult.getAccessToken();\n    }", "signature": "String getToken(String resource)", "full_signature": "@Override public String getToken(String resource)", "class_method_signature": "CertificateCredentials.getToken(String resource)", "testcase": false, "constructor": false, "invocations": ["get", "before", "getExpiresOnDate", "acquireAccessToken", "getAccessToken"]}, "repository": {"repo_id": 70932660, "url": "https://github.com/mspnp/ha-nva", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 27, "size": 38331, "license": "licensed"}}