{"test_class": {"identifier": "JdbcLogTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JdbcLog log;", "modifier": "private", "type": "JdbcLog", "declarator": "log", "var_name": "log"}, {"original_string": "private JdbcLogFactory logFactory;", "modifier": "private", "type": "JdbcLogFactory", "declarator": "logFactory", "var_name": "logFactory"}, {"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private SessionID sessionID;", "modifier": "private", "type": "SessionID", "declarator": "sessionID", "var_name": "sessionID"}], "file": "quickfixj-core/src/test/java/quickfix/JdbcLogTest.java"}, "test_case": {"identifier": "testHandlesRecursivelyFailingException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandlesRecursivelyFailingException() throws Exception {\n        setUpJdbcLog(false, null);\n\n        // need to register the session since we are going to log errors through LogUtil\n        Session.registerSession(new Session(new UnitTestApplication(), new MemoryStoreFactory(),\n                sessionID, new DefaultDataDictionaryProvider(), null, logFactory,\n                new DefaultMessageFactory(), 0));\n\n        // remove the messages and events tables\n        dropTable(log.getIncomingMessagesTableName());\n\n        // now try to log an error\n        try {\n            log.onIncoming(\"DB is messed up\");\n        } catch (OutOfMemoryError err) {\n            fail(\"We seem to get an out of memory error b/c of stack overflow b/c we\"\n                    + \"keep calling jdbc logger recursively in case of misconfiguration: \"\n                    + err.getMessage());\n        } finally {\n            // put the tables back so they can be cleaned up in tearDown()\n            initializeTableDefinitions(connection);\n        }\n    }", "signature": "void testHandlesRecursivelyFailingException()", "full_signature": "@Test public void testHandlesRecursivelyFailingException()", "class_method_signature": "JdbcLogTest.testHandlesRecursivelyFailingException()", "testcase": true, "constructor": false, "invocations": ["setUpJdbcLog", "registerSession", "dropTable", "getIncomingMessagesTableName", "onIncoming", "fail", "getMessage", "initializeTableDefinitions"]}, "focal_class": {"identifier": "JdbcLog", "superclass": "extends AbstractLog", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_MESSAGES_LOG_TABLE = \"messages_log\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MESSAGES_LOG_TABLE = \"messages_log\"", "var_name": "DEFAULT_MESSAGES_LOG_TABLE"}, {"original_string": "private static final String DEFAULT_EVENT_LOG_TABLE = \"event_log\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_EVENT_LOG_TABLE = \"event_log\"", "var_name": "DEFAULT_EVENT_LOG_TABLE"}, {"original_string": "private final String outgoingMessagesTableName;", "modifier": "private final", "type": "String", "declarator": "outgoingMessagesTableName", "var_name": "outgoingMessagesTableName"}, {"original_string": "private final String incomingMessagesTableName;", "modifier": "private final", "type": "String", "declarator": "incomingMessagesTableName", "var_name": "incomingMessagesTableName"}, {"original_string": "private final String eventTableName;", "modifier": "private final", "type": "String", "declarator": "eventTableName", "var_name": "eventTableName"}, {"original_string": "private final SessionID sessionID;", "modifier": "private final", "type": "SessionID", "declarator": "sessionID", "var_name": "sessionID"}, {"original_string": "private final DataSource dataSource;", "modifier": "private final", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final boolean logHeartbeats;", "modifier": "private final", "type": "boolean", "declarator": "logHeartbeats", "var_name": "logHeartbeats"}, {"original_string": "private final boolean extendedSessionIdSupported;", "modifier": "private final", "type": "boolean", "declarator": "extendedSessionIdSupported", "var_name": "extendedSessionIdSupported"}, {"original_string": "private final String defaultSessionIdPropertyValue;", "modifier": "private final", "type": "String", "declarator": "defaultSessionIdPropertyValue", "var_name": "defaultSessionIdPropertyValue"}, {"original_string": "private Throwable recursiveException = null;", "modifier": "private", "type": "Throwable", "declarator": "recursiveException = null", "var_name": "recursiveException"}, {"original_string": "private final Map<String, String> insertItemSqlCache = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "insertItemSqlCache = new HashMap<>()", "var_name": "insertItemSqlCache"}, {"original_string": "private final Map<String, String> deleteItemsSqlCache = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "deleteItemsSqlCache = new HashMap<>()", "var_name": "deleteItemsSqlCache"}], "methods": [{"identifier": "JdbcLog", "parameters": "(SessionSettings settings, SessionID sessionID, DataSource ds)", "modifiers": "public", "return": "", "signature": " JdbcLog(SessionSettings settings, SessionID sessionID, DataSource ds)", "full_signature": "public  JdbcLog(SessionSettings settings, SessionID sessionID, DataSource ds)", "class_method_signature": "JdbcLog.JdbcLog(SessionSettings settings, SessionID sessionID, DataSource ds)", "testcase": false, "constructor": true}, {"identifier": "createCachedSql", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createCachedSql()", "full_signature": "private void createCachedSql()", "class_method_signature": "JdbcLog.createCachedSql()", "testcase": false, "constructor": false}, {"identifier": "createInsertItemSql", "parameters": "(String tableName)", "modifiers": "private", "return": "void", "signature": "void createInsertItemSql(String tableName)", "full_signature": "private void createInsertItemSql(String tableName)", "class_method_signature": "JdbcLog.createInsertItemSql(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getInsertItemSql", "parameters": "(String tableName)", "modifiers": "private", "return": "String", "signature": "String getInsertItemSql(String tableName)", "full_signature": "private String getInsertItemSql(String tableName)", "class_method_signature": "JdbcLog.getInsertItemSql(String tableName)", "testcase": false, "constructor": false}, {"identifier": "createDeleteItemsSql", "parameters": "(String tableName)", "modifiers": "private", "return": "void", "signature": "void createDeleteItemsSql(String tableName)", "full_signature": "private void createDeleteItemsSql(String tableName)", "class_method_signature": "JdbcLog.createDeleteItemsSql(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getDeleteItemsSql", "parameters": "(String tableName)", "modifiers": "private", "return": "String", "signature": "String getDeleteItemsSql(String tableName)", "full_signature": "private String getDeleteItemsSql(String tableName)", "class_method_signature": "JdbcLog.getDeleteItemsSql(String tableName)", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void onEvent(String value)", "full_signature": "public void onEvent(String value)", "class_method_signature": "JdbcLog.onEvent(String value)", "testcase": false, "constructor": false}, {"identifier": "logIncoming", "parameters": "(String message)", "modifiers": "protected", "return": "void", "signature": "void logIncoming(String message)", "full_signature": "protected void logIncoming(String message)", "class_method_signature": "JdbcLog.logIncoming(String message)", "testcase": false, "constructor": false}, {"identifier": "logOutgoing", "parameters": "(String message)", "modifiers": "protected", "return": "void", "signature": "void logOutgoing(String message)", "full_signature": "protected void logOutgoing(String message)", "class_method_signature": "JdbcLog.logOutgoing(String message)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(String tableName, String value)", "modifiers": "private", "return": "void", "signature": "void insert(String tableName, String value)", "full_signature": "private void insert(String tableName, String value)", "class_method_signature": "JdbcLog.insert(String tableName, String value)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "JdbcLog.clear()", "testcase": false, "constructor": false}, {"identifier": "clearTable", "parameters": "(String tableName)", "modifiers": "private", "return": "void", "signature": "void clearTable(String tableName)", "full_signature": "private void clearTable(String tableName)", "class_method_signature": "JdbcLog.clearTable(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getIncomingMessagesTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIncomingMessagesTableName()", "full_signature": "public String getIncomingMessagesTableName()", "class_method_signature": "JdbcLog.getIncomingMessagesTableName()", "testcase": false, "constructor": false}, {"identifier": "getOutgoingMessagesTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOutgoingMessagesTableName()", "full_signature": "public String getOutgoingMessagesTableName()", "class_method_signature": "JdbcLog.getOutgoingMessagesTableName()", "testcase": false, "constructor": false}, {"identifier": "getEventTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEventTableName()", "full_signature": "public String getEventTableName()", "class_method_signature": "JdbcLog.getEventTableName()", "testcase": false, "constructor": false}, {"identifier": "setSessionIdParameters", "parameters": "(PreparedStatement query, int offset)", "modifiers": "private", "return": "int", "signature": "int setSessionIdParameters(PreparedStatement query, int offset)", "full_signature": "private int setSessionIdParameters(PreparedStatement query, int offset)", "class_method_signature": "JdbcLog.setSessionIdParameters(PreparedStatement query, int offset)", "testcase": false, "constructor": false}, {"identifier": "onErrorEvent", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void onErrorEvent(String text)", "full_signature": "public void onErrorEvent(String text)", "class_method_signature": "JdbcLog.onErrorEvent(String text)", "testcase": false, "constructor": false}], "file": "quickfixj-core/src/main/java/quickfix/JdbcLog.java"}, "focal_method": {"identifier": "getIncomingMessagesTableName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getIncomingMessagesTableName() {\n        return incomingMessagesTableName;\n    }", "signature": "String getIncomingMessagesTableName()", "full_signature": "public String getIncomingMessagesTableName()", "class_method_signature": "JdbcLog.getIncomingMessagesTableName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 19937094, "url": "https://github.com/quickfix-j/quickfixj", "stars": 538, "created": "5/19/2014 10:04:08 AM +00:00", "updates": "2020-01-26T01:21:15+00:00", "fork": "False", "license": "licensed"}}