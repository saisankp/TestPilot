{"test_class": {"identifier": "JTextReporterTest", "superclass": "extends GraphicsTestBase<Dialog>", "interfaces": "", "fields": [{"original_string": "private static final Class<? extends Dialog> DIALOG_CLASS = JTextReporter.TextDialog.class;", "modifier": "private static final", "type": "Class<? extends Dialog>", "declarator": "DIALOG_CLASS = JTextReporter.TextDialog.class", "var_name": "DIALOG_CLASS"}, {"original_string": "private static final long LISTENER_TIMEOUT = 1000;", "modifier": "private static final", "type": "long", "declarator": "LISTENER_TIMEOUT = 1000", "var_name": "LISTENER_TIMEOUT"}, {"original_string": "private static final String TITLE = \"Test text reporter\";", "modifier": "private static final", "type": "String", "declarator": "TITLE = \"Test text reporter\"", "var_name": "TITLE"}, {"original_string": "private static final String[] TEXT = {\n        \"A thing is called finite after its kind,\",\n        \"when it can be limited by another thing of the same nature;\",\n        \"for instance, a body is called finite because we always\",\n        \"conceive another greater body.\",\n        \"So, also, a thought is limited by another thought,\",\n        \"but a body is not limited by thought, nor a thought by body\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "TEXT = {\n        \"A thing is called finite after its kind,\",\n        \"when it can be limited by another thing of the same nature;\",\n        \"for instance, a body is called finite because we always\",\n        \"conceive another greater body.\",\n        \"So, also, a thought is limited by another thought,\",\n        \"but a body is not limited by thought, nor a thought by body\"\n    }", "var_name": "TEXT"}, {"original_string": "private static final ExecutorService executor = Executors.newSingleThreadExecutor();", "modifier": "private static final", "type": "ExecutorService", "declarator": "executor = Executors.newSingleThreadExecutor()", "var_name": "executor"}, {"original_string": "private WindowActivatedListener listener;", "modifier": "private", "type": "WindowActivatedListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private StreamHandler handler;", "modifier": "private", "type": "StreamHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private ByteArrayOutputStream out;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "out", "var_name": "out"}], "file": "modules/unsupported/swing/src/test/java/org/geotools/swing/dialog/JTextReporterTest.java"}, "test_case": {"identifier": "appendText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void appendText() throws Exception {\n        Connection conn = showDialog(TITLE).get();\n        \n        conn.append(TEXT[0]);\n        windowFixture.robot.waitForIdle();\n        \n        windowFixture.textBox().requireText(TEXT[0]);\n    }", "signature": "void appendText()", "full_signature": "@Test public void appendText()", "class_method_signature": "JTextReporterTest.appendText()", "testcase": true, "constructor": false, "invocations": ["get", "showDialog", "append", "waitForIdle", "requireText", "textBox"]}, "focal_class": {"identifier": "JTextReporter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logging.getLogger(\"org.geotools.swing\");", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logging.getLogger(\"org.geotools.swing\")", "var_name": "LOGGER"}, {"original_string": "private static final long DIALOG_CREATION_TIMEOUT = 1000;", "modifier": "private static final", "type": "long", "declarator": "DIALOG_CREATION_TIMEOUT = 1000", "var_name": "DIALOG_CREATION_TIMEOUT"}, {"original_string": "public static final int FLAG_MODAL = 1;", "modifier": "public static final", "type": "int", "declarator": "FLAG_MODAL = 1", "var_name": "FLAG_MODAL"}, {"original_string": "public static final int FLAG_ALWAYS_ON_TOP = 1 << 1;", "modifier": "public static final", "type": "int", "declarator": "FLAG_ALWAYS_ON_TOP = 1 << 1", "var_name": "FLAG_ALWAYS_ON_TOP"}, {"original_string": "public static final int FLAG_RESIZABLE = 1 << 2;", "modifier": "public static final", "type": "int", "declarator": "FLAG_RESIZABLE = 1 << 2", "var_name": "FLAG_RESIZABLE"}, {"original_string": "public static final int DEFAULT_FLAGS = FLAG_ALWAYS_ON_TOP | FLAG_RESIZABLE;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_FLAGS = FLAG_ALWAYS_ON_TOP | FLAG_RESIZABLE", "var_name": "DEFAULT_FLAGS"}, {"original_string": "public static final int DEFAULT_TEXTAREA_ROWS = 20;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_TEXTAREA_ROWS = 20", "var_name": "DEFAULT_TEXTAREA_ROWS"}, {"original_string": "public static final int DEFAULT_TEXTAREA_COLS = 50;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_TEXTAREA_COLS = 50", "var_name": "DEFAULT_TEXTAREA_COLS"}, {"original_string": "public static String NEWLINE = System.getProperty(\"line.separator\");", "modifier": "public static", "type": "String", "declarator": "NEWLINE = System.getProperty(\"line.separator\")", "var_name": "NEWLINE"}, {"original_string": "public static final char DEFAULT_SEPARATOR_CHAR = '-';", "modifier": "public static final", "type": "char", "declarator": "DEFAULT_SEPARATOR_CHAR = '-'", "var_name": "DEFAULT_SEPARATOR_CHAR"}], "methods": [{"identifier": "showDialog", "parameters": "(String title)", "modifiers": "public static", "return": "Connection", "signature": "Connection showDialog(String title)", "full_signature": "public static Connection showDialog(String title)", "class_method_signature": "JTextReporter.showDialog(String title)", "testcase": false, "constructor": false}, {"identifier": "showDialog", "parameters": "(String title, String initialText)", "modifiers": "public static", "return": "Connection", "signature": "Connection showDialog(String title, String initialText)", "full_signature": "public static Connection showDialog(String title, String initialText)", "class_method_signature": "JTextReporter.showDialog(String title, String initialText)", "testcase": false, "constructor": false}, {"identifier": "showDialog", "parameters": "(String title, \n            String initialText,\n            int flags)", "modifiers": "public static", "return": "Connection", "signature": "Connection showDialog(String title, \n            String initialText,\n            int flags)", "full_signature": "public static Connection showDialog(String title, \n            String initialText,\n            int flags)", "class_method_signature": "JTextReporter.showDialog(String title, \n            String initialText,\n            int flags)", "testcase": false, "constructor": false}, {"identifier": "showDialog", "parameters": "(final String title, \n            final String initialText, \n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "modifiers": "public static", "return": "Connection", "signature": "Connection showDialog(final String title, \n            final String initialText, \n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "full_signature": "public static Connection showDialog(final String title, \n            final String initialText, \n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "class_method_signature": "JTextReporter.showDialog(final String title, \n            final String initialText, \n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "testcase": false, "constructor": false}, {"identifier": "doShowDialog", "parameters": "(final String title, \n            final String initialText,\n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "modifiers": "private static", "return": "Connection", "signature": "Connection doShowDialog(final String title, \n            final String initialText,\n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "full_signature": "private static Connection doShowDialog(final String title, \n            final String initialText,\n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "class_method_signature": "JTextReporter.doShowDialog(final String title, \n            final String initialText,\n            final int flags,\n            final int textAreaRows, \n            final int textAreaCols)", "testcase": false, "constructor": false}], "file": "modules/unsupported/swing/src/main/java/org/geotools/swing/dialog/JTextReporter.java"}, "focal_method": {"identifier": "showDialog", "parameters": "(String title)", "modifiers": "public static", "return": "Connection", "body": "public static Connection showDialog(String title) {\n        return showDialog(title, null);\n    }", "signature": "Connection showDialog(String title)", "full_signature": "public static Connection showDialog(String title)", "class_method_signature": "JTextReporter.showDialog(String title)", "testcase": false, "constructor": false, "invocations": ["showDialog"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}