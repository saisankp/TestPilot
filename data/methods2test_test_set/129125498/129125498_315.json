{"test_class": {"identifier": "LegacyDetectorRepositoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private LegacyDetectorRepository repoUnderTest = new LegacyDetectorRepositoryImpl();", "modifier": "@InjectMocks\n    private", "type": "LegacyDetectorRepository", "declarator": "repoUnderTest = new LegacyDetectorRepositoryImpl()", "var_name": "repoUnderTest"}, {"original_string": "@Mock\n    private LegacyElasticSearchClient legacyElasticSearchClient;", "modifier": "@Mock\n    private", "type": "LegacyElasticSearchClient", "declarator": "legacyElasticSearchClient", "var_name": "legacyElasticSearchClient"}, {"original_string": "@Mock\n    private ElasticsearchUtil elasticsearchUtil;", "modifier": "@Mock\n    private", "type": "ElasticsearchUtil", "declarator": "elasticsearchUtil", "var_name": "elasticsearchUtil"}, {"original_string": "@Mock\n    private ObjectMapperUtil objectMapperUtil;", "modifier": "@Mock\n    private", "type": "ObjectMapperUtil", "declarator": "objectMapperUtil", "var_name": "objectMapperUtil"}, {"original_string": "private UUID someUuid;", "modifier": "private", "type": "UUID", "declarator": "someUuid", "var_name": "someUuid"}, {"original_string": "private DetectorDocument detector;", "modifier": "private", "type": "DetectorDocument", "declarator": "detector", "var_name": "detector"}, {"original_string": "private DetectorDocument illegalParamsDetector;", "modifier": "private", "type": "DetectorDocument", "declarator": "illegalParamsDetector", "var_name": "illegalParamsDetector"}, {"original_string": "private IndexResponse indexResponse;", "modifier": "private", "type": "IndexResponse", "declarator": "indexResponse", "var_name": "indexResponse"}, {"original_string": "private SearchResponse searchResponse;", "modifier": "private", "type": "SearchResponse", "declarator": "searchResponse", "var_name": "searchResponse"}, {"original_string": "private DeleteResponse deleteResponse;", "modifier": "private", "type": "DeleteResponse", "declarator": "deleteResponse", "var_name": "deleteResponse"}, {"original_string": "private GetResponse getResponse;", "modifier": "private", "type": "GetResponse", "declarator": "getResponse", "var_name": "getResponse"}, {"original_string": "private List<DetectorDocument> detectors = new ArrayList<>();", "modifier": "private", "type": "List<DetectorDocument>", "declarator": "detectors = new ArrayList<>()", "var_name": "detectors"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/repo/impl/LegacyDetectorRepositoryImplTest.java"}, "test_case": {"identifier": "testFindByCreatedBy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindByCreatedBy() {\n        List<DetectorDocument> actualDetectors = repoUnderTest.findByCreatedBy(\"kashah\");\n        assertNotNull(actualDetectors);\n        assertCheck(actualDetectors);\n    }", "signature": "void testFindByCreatedBy()", "full_signature": "@Test public void testFindByCreatedBy()", "class_method_signature": "LegacyDetectorRepositoryImplTest.testFindByCreatedBy()", "testcase": true, "constructor": false, "invocations": ["findByCreatedBy", "assertNotNull", "assertCheck"]}, "focal_class": {"identifier": "LegacyDetectorRepositoryImpl", "superclass": "", "interfaces": "implements LegacyDetectorRepository", "fields": [{"original_string": "private static final String DETECTOR_INDEX = \"detectors\";", "modifier": "private static final", "type": "String", "declarator": "DETECTOR_INDEX = \"detectors\"", "var_name": "DETECTOR_INDEX"}, {"original_string": "private static final String DETECTOR_DOC_TYPE = \"detector\";", "modifier": "private static final", "type": "String", "declarator": "DETECTOR_DOC_TYPE = \"detector\"", "var_name": "DETECTOR_DOC_TYPE"}, {"original_string": "private static final int DEFAULT_ES_RESULTS_SIZE = 500;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_ES_RESULTS_SIZE = 500", "var_name": "DEFAULT_ES_RESULTS_SIZE"}, {"original_string": "@Autowired\n    private LegacyElasticSearchClient legacyElasticSearchClient;", "modifier": "@Autowired\n    private", "type": "LegacyElasticSearchClient", "declarator": "legacyElasticSearchClient", "var_name": "legacyElasticSearchClient"}, {"original_string": "@Autowired\n    private ObjectMapperUtil objectMapperUtil;", "modifier": "@Autowired\n    private", "type": "ObjectMapperUtil", "declarator": "objectMapperUtil", "var_name": "objectMapperUtil"}, {"original_string": "@Autowired\n    private ElasticsearchUtil elasticsearchUtil;", "modifier": "@Autowired\n    private", "type": "ElasticsearchUtil", "declarator": "elasticsearchUtil", "var_name": "elasticsearchUtil"}], "methods": [{"identifier": "createDetector", "parameters": "(DetectorDocument document)", "modifiers": "@Override public", "return": "UUID", "signature": "UUID createDetector(DetectorDocument document)", "full_signature": "@Override public UUID createDetector(DetectorDocument document)", "class_method_signature": "LegacyDetectorRepositoryImpl.createDetector(DetectorDocument document)", "testcase": false, "constructor": false}, {"identifier": "deleteDetector", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "void", "signature": "void deleteDetector(String uuid)", "full_signature": "@Override public void deleteDetector(String uuid)", "class_method_signature": "LegacyDetectorRepositoryImpl.deleteDetector(String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateDetector", "parameters": "(String uuid, DetectorDocument document)", "modifiers": "@Override public", "return": "void", "signature": "void updateDetector(String uuid, DetectorDocument document)", "full_signature": "@Override public void updateDetector(String uuid, DetectorDocument document)", "class_method_signature": "LegacyDetectorRepositoryImpl.updateDetector(String uuid, DetectorDocument document)", "testcase": false, "constructor": false}, {"identifier": "findByUuid", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "DetectorDocument", "signature": "DetectorDocument findByUuid(String uuid)", "full_signature": "@Override public DetectorDocument findByUuid(String uuid)", "class_method_signature": "LegacyDetectorRepositoryImpl.findByUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "findByCreatedBy", "parameters": "(String user)", "modifiers": "@Override public", "return": "List<DetectorDocument>", "signature": "List<DetectorDocument> findByCreatedBy(String user)", "full_signature": "@Override public List<DetectorDocument> findByCreatedBy(String user)", "class_method_signature": "LegacyDetectorRepositoryImpl.findByCreatedBy(String user)", "testcase": false, "constructor": false}, {"identifier": "toggleDetector", "parameters": "(String uuid, Boolean enabled)", "modifiers": "@Override public", "return": "void", "signature": "void toggleDetector(String uuid, Boolean enabled)", "full_signature": "@Override public void toggleDetector(String uuid, Boolean enabled)", "class_method_signature": "LegacyDetectorRepositoryImpl.toggleDetector(String uuid, Boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "trustDetector", "parameters": "(String uuid, Boolean trusted)", "modifiers": "@Override public", "return": "void", "signature": "void trustDetector(String uuid, Boolean trusted)", "full_signature": "@Override public void trustDetector(String uuid, Boolean trusted)", "class_method_signature": "LegacyDetectorRepositoryImpl.trustDetector(String uuid, Boolean trusted)", "testcase": false, "constructor": false}, {"identifier": "getLastUpdatedDetectors", "parameters": "(long interval)", "modifiers": "@Override public", "return": "List<DetectorDocument>", "signature": "List<DetectorDocument> getLastUpdatedDetectors(long interval)", "full_signature": "@Override public List<DetectorDocument> getLastUpdatedDetectors(long interval)", "class_method_signature": "LegacyDetectorRepositoryImpl.getLastUpdatedDetectors(long interval)", "testcase": false, "constructor": false}, {"identifier": "getLastUpdatedDetectors", "parameters": "(String fromDate, String toDate)", "modifiers": "@Override public", "return": "List<DetectorDocument>", "signature": "List<DetectorDocument> getLastUpdatedDetectors(String fromDate, String toDate)", "full_signature": "@Override public List<DetectorDocument> getLastUpdatedDetectors(String fromDate, String toDate)", "class_method_signature": "LegacyDetectorRepositoryImpl.getLastUpdatedDetectors(String fromDate, String toDate)", "testcase": false, "constructor": false}, {"identifier": "getDetectorsFromElasticSearch", "parameters": "(SearchRequest searchRequest)", "modifiers": "private", "return": "List<DetectorDocument>", "signature": "List<DetectorDocument> getDetectorsFromElasticSearch(SearchRequest searchRequest)", "full_signature": "private List<DetectorDocument> getDetectorsFromElasticSearch(SearchRequest searchRequest)", "class_method_signature": "LegacyDetectorRepositoryImpl.getDetectorsFromElasticSearch(SearchRequest searchRequest)", "testcase": false, "constructor": false}, {"identifier": "getElasticSearchDetector", "parameters": "(DetectorDocument detector)", "modifiers": "private", "return": "DetectorDocument", "signature": "DetectorDocument getElasticSearchDetector(DetectorDocument detector)", "full_signature": "private DetectorDocument getElasticSearchDetector(DetectorDocument detector)", "class_method_signature": "LegacyDetectorRepositoryImpl.getElasticSearchDetector(DetectorDocument detector)", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/repo/impl/LegacyDetectorRepositoryImpl.java"}, "focal_method": {"identifier": "findByCreatedBy", "parameters": "(String user)", "modifiers": "@Override public", "return": "List<DetectorDocument>", "body": "@Override\n    public List<DetectorDocument> findByCreatedBy(String user) {\n        val queryBuilder = QueryBuilders.termQuery(\"createdBy\", user);\n        val searchSourceBuilder = elasticsearchUtil.getSourceBuilder(queryBuilder).size(DEFAULT_ES_RESULTS_SIZE);\n        val searchRequest = elasticsearchUtil.getSearchRequest(searchSourceBuilder, DETECTOR_INDEX, DETECTOR_DOC_TYPE);\n        return getDetectorsFromElasticSearch(searchRequest);\n    }", "signature": "List<DetectorDocument> findByCreatedBy(String user)", "full_signature": "@Override public List<DetectorDocument> findByCreatedBy(String user)", "class_method_signature": "LegacyDetectorRepositoryImpl.findByCreatedBy(String user)", "testcase": false, "constructor": false, "invocations": ["termQuery", "size", "getSourceBuilder", "getSearchRequest", "getDetectorsFromElasticSearch"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}