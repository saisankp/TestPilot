{"test_class": {"identifier": "AmplNetworkReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "ampl-converter/src/test/java/com/powsybl/ampl/converter/AmplNetworkReaderTest.java"}, "test_case": {"identifier": "readHvdcLines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readHvdcLines() throws IOException {\n        Network network = HvdcTestNetwork.createLcc();\n        StringToIntMapper<AmplSubset> mapper = AmplUtil.createMapper(network);\n\n        ReadOnlyDataSource dataSource = new ResourceDataSource(\"lcc-test\",\n                new ResourceSet(\"/outputs/\",\n                        \"lcc-test_hvdc.txt\",\n                        \"lcc-test_shunts.txt\",\n                        \"lcc-test_lcc_converter_stations.txt\"));\n\n        AmplNetworkReader reader = new AmplNetworkReader(dataSource, network, mapper);\n        testHvdc(network, reader);\n        testShunts(network, reader);\n        testLcc(network, reader);\n\n        Network network2 = HvdcTestNetwork.createVsc();\n        StringToIntMapper<AmplSubset> mapper2 = AmplUtil.createMapper(network2);\n\n        ReadOnlyDataSource dataSource2 = new ResourceDataSource(\"vsc-test\",\n                new ResourceSet(\"/outputs/\",\n                        \"vsc-test_vsc_converter_stations.txt\"));\n\n        AmplNetworkReader reader2 = new AmplNetworkReader(dataSource2, network2, mapper2);\n        testVsc(network2, reader2);\n    }", "signature": "void readHvdcLines()", "full_signature": "@Test public void readHvdcLines()", "class_method_signature": "AmplNetworkReaderTest.readHvdcLines()", "testcase": true, "constructor": false, "invocations": ["createLcc", "createMapper", "testHvdc", "testShunts", "testLcc", "createVsc", "createMapper", "testVsc"]}, "focal_class": {"identifier": "AmplNetworkReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AmplNetworkReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AmplNetworkReader.class)", "var_name": "LOGGER"}, {"original_string": "private static final Pattern PATTERN = Pattern.compile(\"([^']\\\\S*|'.+?')\\\\s*\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"([^']\\\\S*|'.+?')\\\\s*\")", "var_name": "PATTERN"}, {"original_string": "private final ReadOnlyDataSource dataSource;", "modifier": "private final", "type": "ReadOnlyDataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final Network network;", "modifier": "private final", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private final int variantIndex;", "modifier": "private final", "type": "int", "declarator": "variantIndex", "var_name": "variantIndex"}, {"original_string": "private final StringToIntMapper<AmplSubset> mapper;", "modifier": "private final", "type": "StringToIntMapper<AmplSubset>", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private final Map<String, Bus> buses;", "modifier": "private final", "type": "Map<String, Bus>", "declarator": "buses", "var_name": "buses"}], "methods": [{"identifier": "AmplNetworkReader", "parameters": "(ReadOnlyDataSource dataSource, Network network, int variantIndex, StringToIntMapper<AmplSubset> mapper)", "modifiers": "public", "return": "", "signature": " AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, int variantIndex, StringToIntMapper<AmplSubset> mapper)", "full_signature": "public  AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, int variantIndex, StringToIntMapper<AmplSubset> mapper)", "class_method_signature": "AmplNetworkReader.AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, int variantIndex, StringToIntMapper<AmplSubset> mapper)", "testcase": false, "constructor": true}, {"identifier": "AmplNetworkReader", "parameters": "(ReadOnlyDataSource dataSource, Network network, StringToIntMapper<AmplSubset> mapper)", "modifiers": "public", "return": "", "signature": " AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, StringToIntMapper<AmplSubset> mapper)", "full_signature": "public  AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, StringToIntMapper<AmplSubset> mapper)", "class_method_signature": "AmplNetworkReader.AmplNetworkReader(ReadOnlyDataSource dataSource, Network network, StringToIntMapper<AmplSubset> mapper)", "testcase": false, "constructor": true}, {"identifier": "createWrongNumberOfColumnException", "parameters": "(int expected, int actual)", "modifiers": "private static", "return": "AmplException", "signature": "AmplException createWrongNumberOfColumnException(int expected, int actual)", "full_signature": "private static AmplException createWrongNumberOfColumnException(int expected, int actual)", "class_method_signature": "AmplNetworkReader.createWrongNumberOfColumnException(int expected, int actual)", "testcase": false, "constructor": false}, {"identifier": "parseExceptIfBetweenQuotes", "parameters": "(String str)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> parseExceptIfBetweenQuotes(String str)", "full_signature": "private static List<String> parseExceptIfBetweenQuotes(String str)", "class_method_signature": "AmplNetworkReader.parseExceptIfBetweenQuotes(String str)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(String suffix, int expectedTokenCount, Function<String[], Void> handler)", "modifiers": "private", "return": "void", "signature": "void read(String suffix, int expectedTokenCount, Function<String[], Void> handler)", "full_signature": "private void read(String suffix, int expectedTokenCount, Function<String[], Void> handler)", "class_method_signature": "AmplNetworkReader.read(String suffix, int expectedTokenCount, Function<String[], Void> handler)", "testcase": false, "constructor": false}, {"identifier": "readGenerators", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readGenerators()", "full_signature": "public AmplNetworkReader readGenerators()", "class_method_signature": "AmplNetworkReader.readGenerators()", "testcase": false, "constructor": false}, {"identifier": "readGenerator", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readGenerator(String[] tokens)", "full_signature": "private Void readGenerator(String[] tokens)", "class_method_signature": "AmplNetworkReader.readGenerator(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readBatteries", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readBatteries()", "full_signature": "public AmplNetworkReader readBatteries()", "class_method_signature": "AmplNetworkReader.readBatteries()", "testcase": false, "constructor": false}, {"identifier": "readBattery", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readBattery(String[] tokens)", "full_signature": "private Void readBattery(String[] tokens)", "class_method_signature": "AmplNetworkReader.readBattery(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readLoads", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readLoads()", "full_signature": "public AmplNetworkReader readLoads()", "class_method_signature": "AmplNetworkReader.readLoads()", "testcase": false, "constructor": false}, {"identifier": "readLoad", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readLoad(String[] tokens)", "full_signature": "private Void readLoad(String[] tokens)", "class_method_signature": "AmplNetworkReader.readLoad(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readRatioTapChangers", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readRatioTapChangers()", "full_signature": "public AmplNetworkReader readRatioTapChangers()", "class_method_signature": "AmplNetworkReader.readRatioTapChangers()", "testcase": false, "constructor": false}, {"identifier": "readRatioTapChanger", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readRatioTapChanger(String[] tokens)", "full_signature": "private Void readRatioTapChanger(String[] tokens)", "class_method_signature": "AmplNetworkReader.readRatioTapChanger(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readPhaseTapChangers", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readPhaseTapChangers()", "full_signature": "public AmplNetworkReader readPhaseTapChangers()", "class_method_signature": "AmplNetworkReader.readPhaseTapChangers()", "testcase": false, "constructor": false}, {"identifier": "readPhaseTapChanger", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readPhaseTapChanger(String[] tokens)", "full_signature": "private Void readPhaseTapChanger(String[] tokens)", "class_method_signature": "AmplNetworkReader.readPhaseTapChanger(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readShunts", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readShunts()", "full_signature": "public AmplNetworkReader readShunts()", "class_method_signature": "AmplNetworkReader.readShunts()", "testcase": false, "constructor": false}, {"identifier": "readShunt", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readShunt(String[] tokens)", "full_signature": "private Void readShunt(String[] tokens)", "class_method_signature": "AmplNetworkReader.readShunt(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readBuses", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readBuses()", "full_signature": "public AmplNetworkReader readBuses()", "class_method_signature": "AmplNetworkReader.readBuses()", "testcase": false, "constructor": false}, {"identifier": "readBus", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readBus(String[] tokens)", "full_signature": "private Void readBus(String[] tokens)", "class_method_signature": "AmplNetworkReader.readBus(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readBranches", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readBranches()", "full_signature": "public AmplNetworkReader readBranches()", "class_method_signature": "AmplNetworkReader.readBranches()", "testcase": false, "constructor": false}, {"identifier": "readBranch", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readBranch(String[] tokens)", "full_signature": "private Void readBranch(String[] tokens)", "class_method_signature": "AmplNetworkReader.readBranch(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readThreeWindingsTransformerBranch", "parameters": "(String id, double p, double q, int busNum)", "modifiers": "private", "return": "boolean", "signature": "boolean readThreeWindingsTransformerBranch(String id, double p, double q, int busNum)", "full_signature": "private boolean readThreeWindingsTransformerBranch(String id, double p, double q, int busNum)", "class_method_signature": "AmplNetworkReader.readThreeWindingsTransformerBranch(String id, double p, double q, int busNum)", "testcase": false, "constructor": false}, {"identifier": "readHvdcLines", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readHvdcLines()", "full_signature": "public AmplNetworkReader readHvdcLines()", "class_method_signature": "AmplNetworkReader.readHvdcLines()", "testcase": false, "constructor": false}, {"identifier": "readHvdcLine", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readHvdcLine(String[] tokens)", "full_signature": "private Void readHvdcLine(String[] tokens)", "class_method_signature": "AmplNetworkReader.readHvdcLine(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readStaticVarcompensator", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readStaticVarcompensator()", "full_signature": "public AmplNetworkReader readStaticVarcompensator()", "class_method_signature": "AmplNetworkReader.readStaticVarcompensator()", "testcase": false, "constructor": false}, {"identifier": "readSvc", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readSvc(String[] tokens)", "full_signature": "private Void readSvc(String[] tokens)", "class_method_signature": "AmplNetworkReader.readSvc(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readLccConverterStations", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readLccConverterStations()", "full_signature": "public AmplNetworkReader readLccConverterStations()", "class_method_signature": "AmplNetworkReader.readLccConverterStations()", "testcase": false, "constructor": false}, {"identifier": "readLcc", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readLcc(String[] tokens)", "full_signature": "private Void readLcc(String[] tokens)", "class_method_signature": "AmplNetworkReader.readLcc(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readVscConverterStations", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readVscConverterStations()", "full_signature": "public AmplNetworkReader readVscConverterStations()", "class_method_signature": "AmplNetworkReader.readVscConverterStations()", "testcase": false, "constructor": false}, {"identifier": "readVsc", "parameters": "(String[] tokens)", "modifiers": "private", "return": "Void", "signature": "Void readVsc(String[] tokens)", "full_signature": "private Void readVsc(String[] tokens)", "class_method_signature": "AmplNetworkReader.readVsc(String[] tokens)", "testcase": false, "constructor": false}, {"identifier": "readMetrics", "parameters": "(Map<String, String> metrics)", "modifiers": "public", "return": "AmplNetworkReader", "signature": "AmplNetworkReader readMetrics(Map<String, String> metrics)", "full_signature": "public AmplNetworkReader readMetrics(Map<String, String> metrics)", "class_method_signature": "AmplNetworkReader.readMetrics(Map<String, String> metrics)", "testcase": false, "constructor": false}, {"identifier": "busConnection", "parameters": "(Terminal t, int busNum)", "modifiers": "private", "return": "void", "signature": "void busConnection(Terminal t, int busNum)", "full_signature": "private void busConnection(Terminal t, int busNum)", "class_method_signature": "AmplNetworkReader.busConnection(Terminal t, int busNum)", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "(String d)", "modifiers": "private", "return": "double", "signature": "double readDouble(String d)", "full_signature": "private double readDouble(String d)", "class_method_signature": "AmplNetworkReader.readDouble(String d)", "testcase": false, "constructor": false}, {"identifier": "getThreeWindingsTransformer", "parameters": "(Network network, String legId)", "modifiers": "private static", "return": "ThreeWindingsTransformer", "signature": "ThreeWindingsTransformer getThreeWindingsTransformer(Network network, String legId)", "full_signature": "private static ThreeWindingsTransformer getThreeWindingsTransformer(Network network, String legId)", "class_method_signature": "AmplNetworkReader.getThreeWindingsTransformer(Network network, String legId)", "testcase": false, "constructor": false}, {"identifier": "getThreeWindingsTransformerLeg", "parameters": "(ThreeWindingsTransformer twt, String legId)", "modifiers": "private static", "return": "ThreeWindingsTransformer.Leg", "signature": "ThreeWindingsTransformer.Leg getThreeWindingsTransformerLeg(ThreeWindingsTransformer twt, String legId)", "full_signature": "private static ThreeWindingsTransformer.Leg getThreeWindingsTransformerLeg(ThreeWindingsTransformer twt, String legId)", "class_method_signature": "AmplNetworkReader.getThreeWindingsTransformerLeg(ThreeWindingsTransformer twt, String legId)", "testcase": false, "constructor": false}], "file": "ampl-converter/src/main/java/com/powsybl/ampl/converter/AmplNetworkReader.java"}, "focal_method": {"identifier": "readHvdcLines", "parameters": "()", "modifiers": "public", "return": "AmplNetworkReader", "body": "public AmplNetworkReader readHvdcLines() throws IOException {\n        read(\"_hvdc\", 4, this::readHvdcLine);\n\n        return this;\n    }", "signature": "AmplNetworkReader readHvdcLines()", "full_signature": "public AmplNetworkReader readHvdcLines()", "class_method_signature": "AmplNetworkReader.readHvdcLines()", "testcase": false, "constructor": false, "invocations": ["read"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}