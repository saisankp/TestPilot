{"test_class": {"identifier": "TestCommandLineSupport", "superclass": "", "interfaces": "", "fields": [], "file": "com.gzoltar.core/src/test/java/com/gzoltar/core/util/TestCommandLineSupport.java"}, "test_case": {"identifier": "testQuote3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testQuote3() {\n    assertEquals(\"\\\"a\\\\\\\"c\\\"\", CommandLineSupport.quote(\"a\\\"c\"));\n  }", "signature": "void testQuote3()", "full_signature": "@Test public void testQuote3()", "class_method_signature": "TestCommandLineSupport.testQuote3()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "quote"]}, "focal_class": {"identifier": "CommandLineSupport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char BLANK = ' ';", "modifier": "private static final", "type": "char", "declarator": "BLANK = ' '", "var_name": "BLANK"}, {"original_string": "private static final char QUOTE = '\"';", "modifier": "private static final", "type": "char", "declarator": "QUOTE = '\"'", "var_name": "QUOTE"}, {"original_string": "private static final char SLASH = '\\\\';", "modifier": "private static final", "type": "char", "declarator": "SLASH = '\\\\'", "var_name": "SLASH"}, {"original_string": "private static final int M_STRIPWHITESPACE = 0;", "modifier": "private static final", "type": "int", "declarator": "M_STRIPWHITESPACE = 0", "var_name": "M_STRIPWHITESPACE"}, {"original_string": "private static final int M_PARSEARGUMENT = 1;", "modifier": "private static final", "type": "int", "declarator": "M_PARSEARGUMENT = 1", "var_name": "M_PARSEARGUMENT"}, {"original_string": "private static final int M_ESCAPED = 2;", "modifier": "private static final", "type": "int", "declarator": "M_ESCAPED = 2", "var_name": "M_ESCAPED"}], "methods": [{"identifier": "quote", "parameters": "(final String arg)", "modifiers": "public static", "return": "String", "signature": "String quote(final String arg)", "full_signature": "public static String quote(final String arg)", "class_method_signature": "CommandLineSupport.quote(final String arg)", "testcase": false, "constructor": false}, {"identifier": "quote", "parameters": "(final List<String> args)", "modifiers": "public static", "return": "String", "signature": "String quote(final List<String> args)", "full_signature": "public static String quote(final List<String> args)", "class_method_signature": "CommandLineSupport.quote(final List<String> args)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String commandline)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> split(final String commandline)", "full_signature": "public static List<String> split(final String commandline)", "class_method_signature": "CommandLineSupport.split(final String commandline)", "testcase": false, "constructor": false}, {"identifier": "addArgument", "parameters": "(final List<String> args, final StringBuilder current)", "modifiers": "private static", "return": "void", "signature": "void addArgument(final List<String> args, final StringBuilder current)", "full_signature": "private static void addArgument(final List<String> args, final StringBuilder current)", "class_method_signature": "CommandLineSupport.addArgument(final List<String> args, final StringBuilder current)", "testcase": false, "constructor": false}], "file": "com.gzoltar.core/src/main/java/com/gzoltar/core/util/CommandLineSupport.java"}, "focal_method": {"identifier": "quote", "parameters": "(final String arg)", "modifiers": "public static", "return": "String", "body": "public static String quote(final String arg) {\n    final StringBuilder escaped = new StringBuilder();\n    for (final char c : arg.toCharArray()) {\n      if (c == QUOTE || c == SLASH) {\n        escaped.append(SLASH);\n      }\n      escaped.append(c);\n    }\n    if (arg.indexOf(BLANK) != -1 || arg.indexOf(QUOTE) != -1) {\n      escaped.insert(0, QUOTE).append(QUOTE);\n    }\n    return escaped.toString();\n  }", "signature": "String quote(final String arg)", "full_signature": "public static String quote(final String arg)", "class_method_signature": "CommandLineSupport.quote(final String arg)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "append", "append", "indexOf", "indexOf", "append", "insert", "toString"]}, "repository": {"repo_id": 139729058, "url": "https://github.com/GZoltar/gzoltar", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 30, "size": 2454, "license": "licensed"}}