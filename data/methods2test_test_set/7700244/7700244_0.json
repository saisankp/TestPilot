{"test_class": {"identifier": "StockTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/com/nhefner/main/StockTest.java"}, "test_case": {"identifier": "testStock", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testStock() { \n\t\t\n\t\tStock facebook = StockFetcher.getStock(\"FB\");\n\t\tSystem.out.println(\"Price: \" + facebook.getPrice());\n\t\tSystem.out.println(\"Volume: \" + facebook.getVolume()); \n\t\tSystem.out.println(\"P/E: \" + facebook.getPe());\n\t\tSystem.out.println(\"EPS: \" + facebook.getEps());\n\t\tSystem.out.println(\"Year Low: \" + facebook.getWeek52low());\n\t\tSystem.out.println(\"Year High: \" + facebook.getWeek52high());\n\t\tSystem.out.println(\"Day Low: \" + facebook.getDaylow());\n\t\tSystem.out.println(\"Day High: \" + facebook.getDayhigh());\n\t\tSystem.out.println(\"50 Day Moving Av: \" + facebook.getMovingav50day());\n\t\tSystem.out.println(\"Market Cap: \" + facebook.getMarketcap());\n\t\tSystem.out.println(\"The full name is: \" + facebook.getName());\n\t\tSystem.out.println(\"The currency is: \" + facebook.getCurrency());\n\t\tSystem.out.println(\"The short ratio is: \" + facebook.getShortRatio());\n\t\tSystem.out.println(\"The previous close was: \" + facebook.getPreviousClose());\n\t\tSystem.out.println(\"The open for today was: \" + facebook.getOpen());\n\t\tSystem.out.println(\"The exchange is \" + facebook.getExchange());\n\t\t\n\t}", "signature": "void testStock()", "full_signature": "@Test public void testStock()", "class_method_signature": "StockTest.testStock()", "testcase": true, "constructor": false, "invocations": ["getStock", "println", "getPrice", "println", "getVolume", "println", "getPe", "println", "getEps", "println", "getWeek52low", "println", "getWeek52high", "println", "getDaylow", "println", "getDayhigh", "println", "getMovingav50day", "println", "getMarketcap", "println", "getName", "println", "getCurrency", "println", "getShortRatio", "println", "getPreviousClose", "println", "getOpen", "println", "getExchange"]}, "focal_class": {"identifier": "Stock", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String symbol;", "modifier": "private", "type": "String", "declarator": "symbol", "var_name": "symbol"}, {"original_string": "private double price;", "modifier": "private", "type": "double", "declarator": "price", "var_name": "price"}, {"original_string": "private int volume;", "modifier": "private", "type": "int", "declarator": "volume", "var_name": "volume"}, {"original_string": "private double pe;", "modifier": "private", "type": "double", "declarator": "pe", "var_name": "pe"}, {"original_string": "private double eps;", "modifier": "private", "type": "double", "declarator": "eps", "var_name": "eps"}, {"original_string": "private double week52low;", "modifier": "private", "type": "double", "declarator": "week52low", "var_name": "week52low"}, {"original_string": "private double week52high;", "modifier": "private", "type": "double", "declarator": "week52high", "var_name": "week52high"}, {"original_string": "private double daylow;", "modifier": "private", "type": "double", "declarator": "daylow", "var_name": "daylow"}, {"original_string": "private double dayhigh;", "modifier": "private", "type": "double", "declarator": "dayhigh", "var_name": "dayhigh"}, {"original_string": "private double movingav50day;", "modifier": "private", "type": "double", "declarator": "movingav50day", "var_name": "movingav50day"}, {"original_string": "private double marketcap;", "modifier": "private", "type": "double", "declarator": "marketcap", "var_name": "marketcap"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String currency;", "modifier": "private", "type": "String", "declarator": "currency", "var_name": "currency"}, {"original_string": "private double shortRatio;", "modifier": "private", "type": "double", "declarator": "shortRatio", "var_name": "shortRatio"}, {"original_string": "private double previousClose;", "modifier": "private", "type": "double", "declarator": "previousClose", "var_name": "previousClose"}, {"original_string": "private double open;", "modifier": "private", "type": "double", "declarator": "open", "var_name": "open"}, {"original_string": "private String exchange;", "modifier": "private", "type": "String", "declarator": "exchange", "var_name": "exchange"}], "methods": [{"identifier": "Stock", "parameters": "(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "modifiers": "public", "return": "", "signature": " Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "full_signature": "public  Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "class_method_signature": "Stock.Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "testcase": false, "constructor": true}, {"identifier": "getExchange", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExchange()", "full_signature": "public String getExchange()", "class_method_signature": "Stock.getExchange()", "testcase": false, "constructor": false}, {"identifier": "getPreviousClose", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getPreviousClose()", "full_signature": "public double getPreviousClose()", "class_method_signature": "Stock.getPreviousClose()", "testcase": false, "constructor": false}, {"identifier": "getOpen", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getOpen()", "full_signature": "public double getOpen()", "class_method_signature": "Stock.getOpen()", "testcase": false, "constructor": false}, {"identifier": "getShortRatio", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getShortRatio()", "full_signature": "public double getShortRatio()", "class_method_signature": "Stock.getShortRatio()", "testcase": false, "constructor": false}, {"identifier": "getCurrency", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCurrency()", "full_signature": "public String getCurrency()", "class_method_signature": "Stock.getCurrency()", "testcase": false, "constructor": false}, {"identifier": "getSymbol", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSymbol()", "full_signature": "public String getSymbol()", "class_method_signature": "Stock.getSymbol()", "testcase": false, "constructor": false}, {"identifier": "getPrice", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getPrice()", "full_signature": "public double getPrice()", "class_method_signature": "Stock.getPrice()", "testcase": false, "constructor": false}, {"identifier": "getVolume", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVolume()", "full_signature": "public int getVolume()", "class_method_signature": "Stock.getVolume()", "testcase": false, "constructor": false}, {"identifier": "getPe", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getPe()", "full_signature": "public double getPe()", "class_method_signature": "Stock.getPe()", "testcase": false, "constructor": false}, {"identifier": "getEps", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getEps()", "full_signature": "public double getEps()", "class_method_signature": "Stock.getEps()", "testcase": false, "constructor": false}, {"identifier": "getWeek52low", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getWeek52low()", "full_signature": "public double getWeek52low()", "class_method_signature": "Stock.getWeek52low()", "testcase": false, "constructor": false}, {"identifier": "getWeek52high", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getWeek52high()", "full_signature": "public double getWeek52high()", "class_method_signature": "Stock.getWeek52high()", "testcase": false, "constructor": false}, {"identifier": "getDaylow", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDaylow()", "full_signature": "public double getDaylow()", "class_method_signature": "Stock.getDaylow()", "testcase": false, "constructor": false}, {"identifier": "getDayhigh", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDayhigh()", "full_signature": "public double getDayhigh()", "class_method_signature": "Stock.getDayhigh()", "testcase": false, "constructor": false}, {"identifier": "getMovingav50day", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMovingav50day()", "full_signature": "public double getMovingav50day()", "class_method_signature": "Stock.getMovingav50day()", "testcase": false, "constructor": false}, {"identifier": "getMarketcap", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMarketcap()", "full_signature": "public double getMarketcap()", "class_method_signature": "Stock.getMarketcap()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Stock.getName()", "testcase": false, "constructor": false}], "file": "src/com/nhefner/main/Stock.java"}, "focal_method": {"identifier": "Stock", "parameters": "(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "modifiers": "public", "return": "", "body": "public Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange) {\t\n\t\tthis.symbol = symbol; \n\t\tthis.price = price;\t\n\t\tthis.volume = volume; \n\t\tthis.pe = pe; \n\t\tthis.eps = eps; \n\t\tthis.week52low = week52low; \n\t\tthis.week52high = week52high; \n\t\tthis.daylow = daylow; \n\t\tthis.dayhigh = dayhigh; \n\t\tthis.movingav50day = movingav50day; \n\t\tthis.marketcap = marketcap;\n\t\tthis.name = name;\n\t\tthis.currency = currency;\n\t\tthis.shortRatio = shortRatio;\n\t\tthis.previousClose = previousClose;\n\t\tthis.open = open;\n\t\tthis.exchange = exchange;\n\t}", "signature": " Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "full_signature": "public  Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "class_method_signature": "Stock.Stock(String symbol, double price, int volume, double pe, double eps, double week52low,      \n\t\t\t\t\tdouble week52high, double daylow, double dayhigh, double movingav50day, double marketcap, String name, String currency, double shortRatio, double previousClose, double open, String exchange)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 7700244, "url": "https://github.com/natehefner/yahoostocks-java", "language": "Java", "is_fork": false, "fork_count": 58, "stargazer_count": 88, "size": 470, "license": "licensed"}}