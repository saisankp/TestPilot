{"test_class": {"identifier": "HkdfStreamingPrfTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/subtle/prf/HkdfStreamingPrfTest.java"}, "test_case": {"identifier": "testComputePrf_rfc589vector1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testComputePrf_rfc589vector1() throws Exception {\n    HashType hash = HashType.SHA256;\n    byte[] ikm = Hex.decode(\"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\");\n    byte[] salt = Hex.decode(\"000102030405060708090a0b0c\");\n    byte[] info = Hex.decode(\"f0f1f2f3f4f5f6f7f8f9\");\n    byte[] expectedResult =\n        Hex.decode(\n            \"3cb25f25faacd57a90434f64d0362f2a\"\n                + \"2d2d0a90cf1a5a4c5db02d56ecc4c5bf\"\n                + \"34007208d5b887185865\");\n    HkdfStreamingPrf prf = new HkdfStreamingPrf(hash, ikm, salt);\n    InputStream input = prf.computePrf(info);\n\n    byte[] output = new byte[expectedResult.length];\n    assertThat(input.read(output)).isEqualTo(expectedResult.length);\n    assertThat(output).isEqualTo(expectedResult);\n  }", "signature": "void testComputePrf_rfc589vector1()", "full_signature": "@Test public void testComputePrf_rfc589vector1()", "class_method_signature": "HkdfStreamingPrfTest.testComputePrf_rfc589vector1()", "testcase": true, "constructor": false, "invocations": ["decode", "decode", "decode", "decode", "computePrf", "isEqualTo", "assertThat", "read", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "HkdfStreamingPrf", "superclass": "", "interfaces": "implements StreamingPrf", "fields": [{"original_string": "private final HashType hashType;", "modifier": "private final", "type": "HashType", "declarator": "hashType", "var_name": "hashType"}, {"original_string": "@SuppressWarnings(\"Immutable\")\n  private final byte[] ikm;", "modifier": "@SuppressWarnings(\"Immutable\")\n  private final", "type": "byte[]", "declarator": "ikm", "var_name": "ikm"}, {"original_string": "@SuppressWarnings(\"Immutable\")\n  private final byte[] salt;", "modifier": "@SuppressWarnings(\"Immutable\")\n  private final", "type": "byte[]", "declarator": "salt", "var_name": "salt"}], "methods": [{"identifier": "getJavaxHmacName", "parameters": "(HashType hashType)", "modifiers": "private static", "return": "String", "signature": "String getJavaxHmacName(HashType hashType)", "full_signature": "private static String getJavaxHmacName(HashType hashType)", "class_method_signature": "HkdfStreamingPrf.getJavaxHmacName(HashType hashType)", "testcase": false, "constructor": false}, {"identifier": "HkdfStreamingPrf", "parameters": "(final HashType hashType, final byte[] ikm, final byte[] salt)", "modifiers": "public", "return": "", "signature": " HkdfStreamingPrf(final HashType hashType, final byte[] ikm, final byte[] salt)", "full_signature": "public  HkdfStreamingPrf(final HashType hashType, final byte[] ikm, final byte[] salt)", "class_method_signature": "HkdfStreamingPrf.HkdfStreamingPrf(final HashType hashType, final byte[] ikm, final byte[] salt)", "testcase": false, "constructor": true}, {"identifier": "computePrf", "parameters": "(final byte[] input)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream computePrf(final byte[] input)", "full_signature": "@Override public InputStream computePrf(final byte[] input)", "class_method_signature": "HkdfStreamingPrf.computePrf(final byte[] input)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/subtle/prf/HkdfStreamingPrf.java"}, "focal_method": {"identifier": "computePrf", "parameters": "(final byte[] input)", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n  public InputStream computePrf(final byte[] input) {\n    return new HkdfInputStream(input);\n  }", "signature": "InputStream computePrf(final byte[] input)", "full_signature": "@Override public InputStream computePrf(final byte[] input)", "class_method_signature": "HkdfStreamingPrf.computePrf(final byte[] input)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}