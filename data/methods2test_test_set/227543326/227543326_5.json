{"test_class": {"identifier": "RocketMqGroupNameNormalizierTest", "superclass": "", "interfaces": "", "fields": [], "file": "zebra/zebra-cache/src/test/java/com/guosen/zebra/cache/common/RocketMqGroupNameNormalizierTest.java"}, "test_case": {"identifier": "test2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test2() {\n        String originalGroupName = \"com.$GUOSEN.z%ebra.hello1.service\";\n\n        String normalizedGroupName = RocketMqGroupNameNormalizier.normalize(originalGroupName);\n\n        assertThat(normalizedGroupName, is(\"com--GUOSEN-z%ebra-hello1-service\"));\n    }", "signature": "void test2()", "full_signature": "@Test public void test2()", "class_method_signature": "RocketMqGroupNameNormalizierTest.test2()", "testcase": true, "constructor": false, "invocations": ["normalize", "assertThat", "is"]}, "focal_class": {"identifier": "RocketMqGroupNameNormalizier", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "RocketMqGroupNameNormalizier", "parameters": "()", "modifiers": "private", "return": "", "signature": " RocketMqGroupNameNormalizier()", "full_signature": "private  RocketMqGroupNameNormalizier()", "class_method_signature": "RocketMqGroupNameNormalizier.RocketMqGroupNameNormalizier()", "testcase": false, "constructor": true}, {"identifier": "normalize", "parameters": "(String groupName)", "modifiers": "public static", "return": "String", "signature": "String normalize(String groupName)", "full_signature": "public static String normalize(String groupName)", "class_method_signature": "RocketMqGroupNameNormalizier.normalize(String groupName)", "testcase": false, "constructor": false}, {"identifier": "isLegalChar", "parameters": "(char ch)", "modifiers": "private static", "return": "boolean", "signature": "boolean isLegalChar(char ch)", "full_signature": "private static boolean isLegalChar(char ch)", "class_method_signature": "RocketMqGroupNameNormalizier.isLegalChar(char ch)", "testcase": false, "constructor": false}], "file": "zebra/zebra-cache/src/main/java/com/guosen/zebra/cache/common/RocketMqGroupNameNormalizier.java"}, "focal_method": {"identifier": "normalize", "parameters": "(String groupName)", "modifiers": "public static", "return": "String", "body": "public static String normalize(String groupName) {\n        char[] originalChars = groupName.toCharArray();\n        char[] newChars = new char[originalChars.length];\n\n        for (int i = 0; i < originalChars.length; i++) {\n            char originalChar = originalChars[i];\n\n            // \u5982\u679c\u4e0d\u662f\u5408\u6cd5\u7684\u7ec4\u540d\u5b57\u7b26\uff0c\u90a3\u4e48\u7528'-'\u66ff\u4ee3\n            char newChar = isLegalChar(originalChar) ? originalChar : '-';\n            newChars[i] = newChar;\n        }\n\n        return new String(newChars);\n    }", "signature": "String normalize(String groupName)", "full_signature": "public static String normalize(String groupName)", "class_method_signature": "RocketMqGroupNameNormalizier.normalize(String groupName)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "isLegalChar"]}, "repository": {"repo_id": 227543326, "url": "https://github.com/gszebra/zebra", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 15, "size": 2223, "license": "licensed"}}