{"test_class": {"identifier": "QueryStringDecoderUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/wso2/msf4j/util/QueryStringDecoderUtilTest.java"}, "test_case": {"identifier": "testUrlDecoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUrlDecoding() throws Exception {\n        final String caffe = new String(\n                // \"Caff\u00e9\" but instead of putting the literal E-acute in the\n                // source file, we directly use the UTF-8 encoding so as to\n                // not rely on the platform's default encoding (not portable).\n                new byte[]{'C', 'a', 'f', 'f', (byte) 0xC3, (byte) 0xA9},\n                \"UTF-8\");\n        final String[] tests = {\n                // Encoded   ->   Decoded or error message substring\n                \"\", \"\",\n                \"foo\", \"foo\",\n                \"f%%b\", \"f%b\",\n                \"f+o\", \"f o\",\n                \"f++\", \"f  \",\n                \"fo%\", \"unterminated escape sequence\",\n                \"%42\", \"B\",\n                \"%5f\", \"_\",\n                \"f%4\", \"partial escape sequence\",\n                \"%x2\", \"invalid escape sequence `%x2' at index 0 of: %x2\",\n                \"%4x\", \"invalid escape sequence `%4x' at index 0 of: %4x\",\n                \"Caff%C3%A9\", caffe,\n        };\n        for (int i = 0; i < tests.length; i += 2) {\n            final String encoded = tests[i];\n            final String expected = tests[i + 1];\n            try {\n                final String decoded = QueryStringDecoderUtil.decodeComponent(encoded);\n                assertEquals(expected, decoded);\n            } catch (IllegalArgumentException e) {\n                assertTrue(\"String \" + e.getMessage() + \"\\\" does not contain \\\"\" + expected + '\"',\n                        e.getMessage().contains(expected));\n            }\n        }\n    }", "signature": "void testUrlDecoding()", "full_signature": "@Test public void testUrlDecoding()", "class_method_signature": "QueryStringDecoderUtilTest.testUrlDecoding()", "testcase": true, "constructor": false, "invocations": ["decodeComponent", "assertEquals", "assertTrue", "getMessage", "contains", "getMessage"]}, "focal_class": {"identifier": "QueryStringDecoderUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_MAX_PARAMS = 1024;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_PARAMS = 1024", "var_name": "DEFAULT_MAX_PARAMS"}, {"original_string": "private final Charset charset;", "modifier": "private final", "type": "Charset", "declarator": "charset", "var_name": "charset"}, {"original_string": "private final String uri;", "modifier": "private final", "type": "String", "declarator": "uri", "var_name": "uri"}, {"original_string": "private final boolean hasPath;", "modifier": "private final", "type": "boolean", "declarator": "hasPath", "var_name": "hasPath"}, {"original_string": "private final int maxParams;", "modifier": "private final", "type": "int", "declarator": "maxParams", "var_name": "maxParams"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private Map<String, List<String>> params;", "modifier": "private", "type": "Map<String, List<String>>", "declarator": "params", "var_name": "params"}, {"original_string": "private int nParams;", "modifier": "private", "type": "int", "declarator": "nParams", "var_name": "nParams"}], "methods": [{"identifier": "QueryStringDecoderUtil", "parameters": "(String uri)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(String uri)", "full_signature": "public  QueryStringDecoderUtil(String uri)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(String uri)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(String uri, boolean hasPath)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(String uri, boolean hasPath)", "full_signature": "public  QueryStringDecoderUtil(String uri, boolean hasPath)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(String uri, boolean hasPath)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(String uri, Charset charset)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(String uri, Charset charset)", "full_signature": "public  QueryStringDecoderUtil(String uri, Charset charset)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(String uri, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(String uri, Charset charset, boolean hasPath)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath)", "full_signature": "public  QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(String uri, Charset charset, boolean hasPath, int maxParams)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath, int maxParams)", "full_signature": "public  QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath, int maxParams)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(String uri, Charset charset, boolean hasPath, int maxParams)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(URI uri)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(URI uri)", "full_signature": "public  QueryStringDecoderUtil(URI uri)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(URI uri)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(URI uri, Charset charset)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(URI uri, Charset charset)", "full_signature": "public  QueryStringDecoderUtil(URI uri, Charset charset)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(URI uri, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "QueryStringDecoderUtil", "parameters": "(URI uri, Charset charset, int maxParams)", "modifiers": "public", "return": "", "signature": " QueryStringDecoderUtil(URI uri, Charset charset, int maxParams)", "full_signature": "public  QueryStringDecoderUtil(URI uri, Charset charset, int maxParams)", "class_method_signature": "QueryStringDecoderUtil.QueryStringDecoderUtil(URI uri, Charset charset, int maxParams)", "testcase": false, "constructor": true}, {"identifier": "uri", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String uri()", "full_signature": "public String uri()", "class_method_signature": "QueryStringDecoderUtil.uri()", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String path()", "full_signature": "public String path()", "class_method_signature": "QueryStringDecoderUtil.path()", "testcase": false, "constructor": false}, {"identifier": "parameters", "parameters": "()", "modifiers": "public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> parameters()", "full_signature": "public Map<String, List<String>> parameters()", "class_method_signature": "QueryStringDecoderUtil.parameters()", "testcase": false, "constructor": false}, {"identifier": "decodeParams", "parameters": "(String s)", "modifiers": "private", "return": "void", "signature": "void decodeParams(String s)", "full_signature": "private void decodeParams(String s)", "class_method_signature": "QueryStringDecoderUtil.decodeParams(String s)", "testcase": false, "constructor": false}, {"identifier": "addParam", "parameters": "(Map<String, List<String>> params, String name, String value)", "modifiers": "private", "return": "boolean", "signature": "boolean addParam(Map<String, List<String>> params, String name, String value)", "full_signature": "private boolean addParam(Map<String, List<String>> params, String name, String value)", "class_method_signature": "QueryStringDecoderUtil.addParam(Map<String, List<String>> params, String name, String value)", "testcase": false, "constructor": false}, {"identifier": "decodeComponent", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "signature": "String decodeComponent(final String s)", "full_signature": "public static String decodeComponent(final String s)", "class_method_signature": "QueryStringDecoderUtil.decodeComponent(final String s)", "testcase": false, "constructor": false}, {"identifier": "decodeComponent", "parameters": "(final String s, final Charset charset)", "modifiers": "public static", "return": "String", "signature": "String decodeComponent(final String s, final Charset charset)", "full_signature": "public static String decodeComponent(final String s, final Charset charset)", "class_method_signature": "QueryStringDecoderUtil.decodeComponent(final String s, final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "decodeHexNibble", "parameters": "(final char c)", "modifiers": "private static", "return": "char", "signature": "char decodeHexNibble(final char c)", "full_signature": "private static char decodeHexNibble(final char c)", "class_method_signature": "QueryStringDecoderUtil.decodeHexNibble(final char c)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/wso2/msf4j/util/QueryStringDecoderUtil.java"}, "focal_method": {"identifier": "decodeComponent", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "body": "public static String decodeComponent(final String s) {\n        return decodeComponent(s, Charset.forName(\"UTF-8\"));\n    }", "signature": "String decodeComponent(final String s)", "full_signature": "public static String decodeComponent(final String s)", "class_method_signature": "QueryStringDecoderUtil.decodeComponent(final String s)", "testcase": false, "constructor": false, "invocations": ["decodeComponent", "forName"]}, "repository": {"repo_id": 42847560, "url": "https://github.com/wso2/msf4j", "language": "Java", "is_fork": false, "fork_count": 337, "stargazer_count": 345, "size": 33285, "license": "licensed"}}