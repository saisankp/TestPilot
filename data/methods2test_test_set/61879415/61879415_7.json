{"test_class": {"identifier": "IdentityLogExampleBulkActionTest", "superclass": "extends AbstractBulkActionTest", "interfaces": "", "fields": [], "file": "Realization/backend/example/src/test/java/eu/bcvsolutions/idm/example/bulk/action/impl/IdentityLogExampleBulkActionTest.java"}, "test_case": {"identifier": "testDeleteIdentityWithoutModuleIsEnabled", "parameters": "()", "modifiers": "@Test @Transactional public", "return": "void", "body": "@Test\n\t@Transactional\n\tpublic void testDeleteIdentityWithoutModuleIsEnabled() {\n\t\ttry {\n\t\t\tgetHelper().loginAdmin();\n\t\t\tgetHelper().disableModule(ExampleModuleDescriptor.MODULE_ID);\n\t\t\t\n\t\t\tIdmIdentityDto identity = getHelper().createIdentity((GuardedString) null);\n\t\t\t\n\t\t\tIdmBulkActionDto bulkAction = this.findBulkAction(IdmIdentity.class, IdentityDeleteBulkAction.NAME);\n\t\t\tSet<UUID> ids = Sets.newHashSet(identity.getId());\n\t\t\tbulkAction.setIdentifiers(ids);\n\t\t\tbulkActionManager.processAction(bulkAction);\n\t\t\t\n\t\t\tfor (UUID id : ids) {\n\t\t\t\tIdmIdentityDto identityDto = getHelper().getService(IdmIdentityService.class).get(id);\n\t\t\t\tAssert.assertNull(identityDto);\n\t\t\t}\n\t\t} finally {\n\t\t\tgetHelper().enableModule(ExampleModuleDescriptor.MODULE_ID);\n\t\t\tgetHelper().logout();\n\t\t}\n\t}", "signature": "void testDeleteIdentityWithoutModuleIsEnabled()", "full_signature": "@Test @Transactional public void testDeleteIdentityWithoutModuleIsEnabled()", "class_method_signature": "IdentityLogExampleBulkActionTest.testDeleteIdentityWithoutModuleIsEnabled()", "testcase": true, "constructor": false, "invocations": ["loginAdmin", "getHelper", "disableModule", "getHelper", "createIdentity", "getHelper", "findBulkAction", "newHashSet", "getId", "setIdentifiers", "processAction", "get", "getService", "getHelper", "assertNull", "enableModule", "getHelper", "logout", "getHelper"]}, "focal_class": {"identifier": "IdentityLogExampleBulkAction", "superclass": "extends AbstractBulkAction<IdmIdentityDto, IdmIdentityFilter>", "interfaces": "", "fields": [{"original_string": "private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(IdentityLogExampleBulkAction.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOG = org.slf4j.LoggerFactory.getLogger(IdentityLogExampleBulkAction.class)", "var_name": "LOG"}, {"original_string": "public static final String BULK_ACTION_NAME = \"identity-log-example-bulk-action\";", "modifier": "public static final", "type": "String", "declarator": "BULK_ACTION_NAME = \"identity-log-example-bulk-action\"", "var_name": "BULK_ACTION_NAME"}, {"original_string": "private static final String EXAMPLE_TEXT_CODE = \"exampleText\";", "modifier": "private static final", "type": "String", "declarator": "EXAMPLE_TEXT_CODE = \"exampleText\"", "var_name": "EXAMPLE_TEXT_CODE"}, {"original_string": "private static final String EXAMPLE_WARNING_CODE = \"exampleWarning\";", "modifier": "private static final", "type": "String", "declarator": "EXAMPLE_WARNING_CODE = \"exampleWarning\"", "var_name": "EXAMPLE_WARNING_CODE"}, {"original_string": "private static final String EXAMPLE_SLEEP_CODE = \"sleep\";", "modifier": "private static final", "type": "String", "declarator": "EXAMPLE_SLEEP_CODE = \"sleep\"", "var_name": "EXAMPLE_SLEEP_CODE"}, {"original_string": "private static final String EXAMPLE_FAIL_EVERY_N = \"failEveryN\";", "modifier": "private static final", "type": "String", "declarator": "EXAMPLE_FAIL_EVERY_N = \"failEveryN\"", "var_name": "EXAMPLE_FAIL_EVERY_N"}, {"original_string": "private int failCount = 1;", "modifier": "private", "type": "int", "declarator": "failCount = 1", "var_name": "failCount"}, {"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}], "methods": [{"identifier": "processDto", "parameters": "(IdmIdentityDto dto)", "modifiers": "@Override protected", "return": "OperationResult", "signature": "OperationResult processDto(IdmIdentityDto dto)", "full_signature": "@Override protected OperationResult processDto(IdmIdentityDto dto)", "class_method_signature": "IdentityLogExampleBulkAction.processDto(IdmIdentityDto dto)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityLogExampleBulkAction.getName()", "testcase": false, "constructor": false}, {"identifier": "getFormAttributes", "parameters": "()", "modifiers": "@Override public", "return": "List<IdmFormAttributeDto>", "signature": "List<IdmFormAttributeDto> getFormAttributes()", "full_signature": "@Override public List<IdmFormAttributeDto> getFormAttributes()", "class_method_signature": "IdentityLogExampleBulkAction.getFormAttributes()", "testcase": false, "constructor": false}, {"identifier": "getTextFieldAttribute", "parameters": "()", "modifiers": "protected", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getTextFieldAttribute()", "full_signature": "protected IdmFormAttributeDto getTextFieldAttribute()", "class_method_signature": "IdentityLogExampleBulkAction.getTextFieldAttribute()", "testcase": false, "constructor": false}, {"identifier": "getFailEveryNAttribute", "parameters": "()", "modifiers": "protected", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getFailEveryNAttribute()", "full_signature": "protected IdmFormAttributeDto getFailEveryNAttribute()", "class_method_signature": "IdentityLogExampleBulkAction.getFailEveryNAttribute()", "testcase": false, "constructor": false}, {"identifier": "getWarningAttribute", "parameters": "()", "modifiers": "protected", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getWarningAttribute()", "full_signature": "protected IdmFormAttributeDto getWarningAttribute()", "class_method_signature": "IdentityLogExampleBulkAction.getWarningAttribute()", "testcase": false, "constructor": false}, {"identifier": "getSleepAttribute", "parameters": "()", "modifiers": "protected", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getSleepAttribute()", "full_signature": "protected IdmFormAttributeDto getSleepAttribute()", "class_method_signature": "IdentityLogExampleBulkAction.getSleepAttribute()", "testcase": false, "constructor": false}, {"identifier": "getTextField", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getTextField()", "full_signature": "private String getTextField()", "class_method_signature": "IdentityLogExampleBulkAction.getTextField()", "testcase": false, "constructor": false}, {"identifier": "getSleep", "parameters": "()", "modifiers": "private", "return": "Integer", "signature": "Integer getSleep()", "full_signature": "private Integer getSleep()", "class_method_signature": "IdentityLogExampleBulkAction.getSleep()", "testcase": false, "constructor": false}, {"identifier": "getFailEveryN", "parameters": "()", "modifiers": "private", "return": "Integer", "signature": "Integer getFailEveryN()", "full_signature": "private Integer getFailEveryN()", "class_method_signature": "IdentityLogExampleBulkAction.getFailEveryN()", "testcase": false, "constructor": false}, {"identifier": "isWarning", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isWarning()", "full_signature": "private boolean isWarning()", "class_method_signature": "IdentityLogExampleBulkAction.isWarning()", "testcase": false, "constructor": false}, {"identifier": "getAuthoritiesForEntity", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getAuthoritiesForEntity()", "full_signature": "@Override protected List<String> getAuthoritiesForEntity()", "class_method_signature": "IdentityLogExampleBulkAction.getAuthoritiesForEntity()", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "IdentityLogExampleBulkAction.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getLevel", "parameters": "()", "modifiers": "@Override public", "return": "NotificationLevel", "signature": "NotificationLevel getLevel()", "full_signature": "@Override public NotificationLevel getLevel()", "class_method_signature": "IdentityLogExampleBulkAction.getLevel()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter>", "signature": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "full_signature": "@Override public ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "class_method_signature": "IdentityLogExampleBulkAction.getService()", "testcase": false, "constructor": false}, {"identifier": "isRecoverable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRecoverable()", "full_signature": "@Override public boolean isRecoverable()", "class_method_signature": "IdentityLogExampleBulkAction.isRecoverable()", "testcase": false, "constructor": false}], "file": "Realization/backend/example/src/main/java/eu/bcvsolutions/idm/example/bulk/action/impl/IdentityLogExampleBulkAction.java"}, "focal_method": {"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter>", "body": "@Override\n\tpublic ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService() {\n\t\treturn identityService;\n\t}", "signature": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "full_signature": "@Override public ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "class_method_signature": "IdentityLogExampleBulkAction.getService()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}