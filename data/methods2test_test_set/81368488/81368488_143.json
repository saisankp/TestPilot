{"test_class": {"identifier": "ResourceFileManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/utils/games/ResourceFileManagerTest.java"}, "test_case": {"identifier": "canConstructRegexForFileExtensions", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void canConstructRegexForFileExtensions() {\n        Set<String> extensions = Collections\n            .unmodifiableSet(Sets.newHashSet(\"jpg\", \"jpeg\", \"png\"));\n        String result = ResourceFileManager.createExtensionRegex(extensions);\n        String expected = \".*\\\\.(?i)(jpg|png|jpeg)\";\n\n        assert (expected.equals(result));\n    }", "signature": "void canConstructRegexForFileExtensions()", "full_signature": "@Test void canConstructRegexForFileExtensions()", "class_method_signature": "ResourceFileManagerTest.canConstructRegexForFileExtensions()", "testcase": true, "constructor": false, "invocations": ["unmodifiableSet", "newHashSet", "createExtensionRegex", "equals"]}, "focal_class": {"identifier": "ResourceFileManager", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getResourcePaths", "parameters": "(String path)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getResourcePaths(String path)", "full_signature": "public static Set<String> getResourcePaths(String path)", "class_method_signature": "ResourceFileManager.getResourcePaths(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceFolders", "parameters": "(String path)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getResourceFolders(String path)", "full_signature": "public static Set<String> getResourceFolders(String path)", "class_method_signature": "ResourceFileManager.getResourceFolders(String path)", "testcase": false, "constructor": false}, {"identifier": "resourceExists", "parameters": "(String location)", "modifiers": "public static", "return": "boolean", "signature": "boolean resourceExists(String location)", "full_signature": "public static boolean resourceExists(String location)", "class_method_signature": "ResourceFileManager.resourceExists(String location)", "testcase": false, "constructor": false}, {"identifier": "getMatchingResources", "parameters": "(String location)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getMatchingResources(String location)", "full_signature": "public static Set<String> getMatchingResources(String location)", "class_method_signature": "ResourceFileManager.getMatchingResources(String location)", "testcase": false, "constructor": false}, {"identifier": "createExtensionRegex", "parameters": "(Set<String> fileExtensions)", "modifiers": "static", "return": "String", "signature": "String createExtensionRegex(Set<String> fileExtensions)", "full_signature": "static String createExtensionRegex(Set<String> fileExtensions)", "class_method_signature": "ResourceFileManager.createExtensionRegex(Set<String> fileExtensions)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/utils/games/ResourceFileManager.java"}, "focal_method": {"identifier": "createExtensionRegex", "parameters": "(Set<String> fileExtensions)", "modifiers": "static", "return": "String", "body": "static String createExtensionRegex(Set<String> fileExtensions) {\n        StringBuilder validExtensions = new StringBuilder();\n        for (Iterator<String> it = fileExtensions.iterator(); it.hasNext(); ) {\n            String extension = it.next();\n            if (it.hasNext())\n                validExtensions.append(extension).append(\"|\");\n            else\n                validExtensions.append(extension);\n        }\n\n        return \".*\\\\.(?i)(\" + validExtensions + \")\";\n    }", "signature": "String createExtensionRegex(Set<String> fileExtensions)", "full_signature": "static String createExtensionRegex(Set<String> fileExtensions)", "class_method_signature": "ResourceFileManager.createExtensionRegex(Set<String> fileExtensions)", "testcase": false, "constructor": false, "invocations": ["iterator", "hasNext", "next", "hasNext", "append", "append", "append"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}