{"test_class": {"identifier": "LoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static I18n errorMessageWithNoParameters;", "modifier": "public static", "type": "I18n", "declarator": "errorMessageWithNoParameters", "var_name": "errorMessageWithNoParameters"}, {"original_string": "public static I18n warningMessageWithNoParameters;", "modifier": "public static", "type": "I18n", "declarator": "warningMessageWithNoParameters", "var_name": "warningMessageWithNoParameters"}, {"original_string": "public static I18n infoMessageWithNoParameters;", "modifier": "public static", "type": "I18n", "declarator": "infoMessageWithNoParameters", "var_name": "infoMessageWithNoParameters"}, {"original_string": "public static I18n errorMessageWithTwoParameters;", "modifier": "public static", "type": "I18n", "declarator": "errorMessageWithTwoParameters", "var_name": "errorMessageWithTwoParameters"}, {"original_string": "public static I18n warningMessageWithTwoParameters;", "modifier": "public static", "type": "I18n", "declarator": "warningMessageWithTwoParameters", "var_name": "warningMessageWithTwoParameters"}, {"original_string": "public static I18n infoMessageWithTwoParameters;", "modifier": "public static", "type": "I18n", "declarator": "infoMessageWithTwoParameters", "var_name": "infoMessageWithTwoParameters"}, {"original_string": "public static I18n errorMessageWithException;", "modifier": "public static", "type": "I18n", "declarator": "errorMessageWithException", "var_name": "errorMessageWithException"}, {"original_string": "public static I18n warningMessageWithException;", "modifier": "public static", "type": "I18n", "declarator": "warningMessageWithException", "var_name": "warningMessageWithException"}, {"original_string": "public static I18n infoMessageWithException;", "modifier": "public static", "type": "I18n", "declarator": "infoMessageWithException", "var_name": "infoMessageWithException"}, {"original_string": "public static I18n errorMessageWithNullException;", "modifier": "public static", "type": "I18n", "declarator": "errorMessageWithNullException", "var_name": "errorMessageWithNullException"}, {"original_string": "public static I18n warningMessageWithNullException;", "modifier": "public static", "type": "I18n", "declarator": "warningMessageWithNullException", "var_name": "warningMessageWithNullException"}, {"original_string": "public static I18n infoMessageWithNullException;", "modifier": "public static", "type": "I18n", "declarator": "infoMessageWithNullException", "var_name": "infoMessageWithNullException"}, {"original_string": "public static I18n someMessage;", "modifier": "public static", "type": "I18n", "declarator": "someMessage", "var_name": "someMessage"}, {"original_string": "private LogRecorder log;", "modifier": "private", "type": "LogRecorder", "declarator": "log", "var_name": "log"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private org.apache.log4j.Logger log4jLogger;", "modifier": "private", "type": "org.apache.log4j.Logger", "declarator": "log4jLogger", "var_name": "log4jLogger"}, {"original_string": "private Map<String, List<Appender>> existingAppendersByLoggerName = new HashMap<String, List<Appender>>();", "modifier": "private", "type": "Map<String, List<Appender>>", "declarator": "existingAppendersByLoggerName = new HashMap<String, List<Appender>>()", "var_name": "existingAppendersByLoggerName"}], "file": "modeshape-common/src/test/java/org/modeshape/common/logging/LoggerTest.java"}, "test_case": {"identifier": "shouldNotAcceptDebugMessageWithTooFewParameters", "parameters": "()", "modifiers": "@Test( expected = IllegalArgumentException.class ) public", "return": "void", "body": "@Test( expected = IllegalArgumentException.class )\n    public void shouldNotAcceptDebugMessageWithTooFewParameters() {\n        logger.debug(\"This is a debug message with a {0} parameter and the {1} parameter\", (Object[])null);\n    }", "signature": "void shouldNotAcceptDebugMessageWithTooFewParameters()", "full_signature": "@Test( expected = IllegalArgumentException.class ) public void shouldNotAcceptDebugMessageWithTooFewParameters()", "class_method_signature": "LoggerTest.shouldNotAcceptDebugMessageWithTooFewParameters()", "testcase": true, "constructor": false, "invocations": ["debug"]}, "focal_class": {"identifier": "Logger", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AtomicReference<Locale> LOGGING_LOCALE = new AtomicReference<Locale>(null);", "modifier": "private static final", "type": "AtomicReference<Locale>", "declarator": "LOGGING_LOCALE = new AtomicReference<Locale>(null)", "var_name": "LOGGING_LOCALE"}], "methods": [{"identifier": "getLoggingLocale", "parameters": "()", "modifiers": "public static", "return": "Locale", "signature": "Locale getLoggingLocale()", "full_signature": "public static Locale getLoggingLocale()", "class_method_signature": "Logger.getLoggingLocale()", "testcase": false, "constructor": false}, {"identifier": "setLoggingLocale", "parameters": "( Locale locale )", "modifiers": "public static", "return": "Locale", "signature": "Locale setLoggingLocale( Locale locale )", "full_signature": "public static Locale setLoggingLocale( Locale locale )", "class_method_signature": "Logger.setLoggingLocale( Locale locale )", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "( Class<?> clazz )", "modifiers": "public static", "return": "Logger", "signature": "Logger getLogger( Class<?> clazz )", "full_signature": "public static Logger getLogger( Class<?> clazz )", "class_method_signature": "Logger.getLogger( Class<?> clazz )", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "( String name )", "modifiers": "public static", "return": "Logger", "signature": "Logger getLogger( String name )", "full_signature": "public static Logger getLogger( String name )", "class_method_signature": "Logger.getLogger( String name )", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getName()", "full_signature": "public abstract String getName()", "class_method_signature": "Logger.getName()", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "( Level level,\n                     I18nResource message,\n                     Object... params )", "modifiers": "public", "return": "void", "signature": "void log( Level level,\n                     I18nResource message,\n                     Object... params )", "full_signature": "public void log( Level level,\n                     I18nResource message,\n                     Object... params )", "class_method_signature": "Logger.log( Level level,\n                     I18nResource message,\n                     Object... params )", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "( Level level,\n                     Throwable t,\n                     I18nResource message,\n                     Object... params )", "modifiers": "public", "return": "void", "signature": "void log( Level level,\n                     Throwable t,\n                     I18nResource message,\n                     Object... params )", "full_signature": "public void log( Level level,\n                     Throwable t,\n                     I18nResource message,\n                     Object... params )", "class_method_signature": "Logger.log( Level level,\n                     Throwable t,\n                     I18nResource message,\n                     Object... params )", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "( String message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void debug( String message,\n                                Object... params )", "full_signature": "public abstract void debug( String message,\n                                Object... params )", "class_method_signature": "Logger.debug( String message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "( Throwable t,\n                                String message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void debug( Throwable t,\n                                String message,\n                                Object... params )", "full_signature": "public abstract void debug( Throwable t,\n                                String message,\n                                Object... params )", "class_method_signature": "Logger.debug( Throwable t,\n                                String message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "( I18nResource message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void error( I18nResource message,\n                                Object... params )", "full_signature": "public abstract void error( I18nResource message,\n                                Object... params )", "class_method_signature": "Logger.error( I18nResource message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "( Throwable t,\n                                I18nResource message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void error( Throwable t,\n                                I18nResource message,\n                                Object... params )", "full_signature": "public abstract void error( Throwable t,\n                                I18nResource message,\n                                Object... params )", "class_method_signature": "Logger.error( Throwable t,\n                                I18nResource message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "( I18nResource message,\n                               Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void info( I18nResource message,\n                               Object... params )", "full_signature": "public abstract void info( I18nResource message,\n                               Object... params )", "class_method_signature": "Logger.info( I18nResource message,\n                               Object... params )", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "( Throwable t,\n                               I18nResource message,\n                               Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void info( Throwable t,\n                               I18nResource message,\n                               Object... params )", "full_signature": "public abstract void info( Throwable t,\n                               I18nResource message,\n                               Object... params )", "class_method_signature": "Logger.info( Throwable t,\n                               I18nResource message,\n                               Object... params )", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "( String message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void trace( String message,\n                                Object... params )", "full_signature": "public abstract void trace( String message,\n                                Object... params )", "class_method_signature": "Logger.trace( String message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "( Throwable t,\n                                String message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void trace( Throwable t,\n                                String message,\n                                Object... params )", "full_signature": "public abstract void trace( Throwable t,\n                                String message,\n                                Object... params )", "class_method_signature": "Logger.trace( Throwable t,\n                                String message,\n                                Object... params )", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "( I18nResource message,\n                               Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void warn( I18nResource message,\n                               Object... params )", "full_signature": "public abstract void warn( I18nResource message,\n                               Object... params )", "class_method_signature": "Logger.warn( I18nResource message,\n                               Object... params )", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "( Throwable t,\n                               I18nResource message,\n                               Object... params )", "modifiers": "public abstract", "return": "void", "signature": "void warn( Throwable t,\n                               I18nResource message,\n                               Object... params )", "full_signature": "public abstract void warn( Throwable t,\n                               I18nResource message,\n                               Object... params )", "class_method_signature": "Logger.warn( Throwable t,\n                               I18nResource message,\n                               Object... params )", "testcase": false, "constructor": false}, {"identifier": "isInfoEnabled", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isInfoEnabled()", "full_signature": "public abstract boolean isInfoEnabled()", "class_method_signature": "Logger.isInfoEnabled()", "testcase": false, "constructor": false}, {"identifier": "isWarnEnabled", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isWarnEnabled()", "full_signature": "public abstract boolean isWarnEnabled()", "class_method_signature": "Logger.isWarnEnabled()", "testcase": false, "constructor": false}, {"identifier": "isErrorEnabled", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isErrorEnabled()", "full_signature": "public abstract boolean isErrorEnabled()", "class_method_signature": "Logger.isErrorEnabled()", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isDebugEnabled()", "full_signature": "public abstract boolean isDebugEnabled()", "class_method_signature": "Logger.isDebugEnabled()", "testcase": false, "constructor": false}, {"identifier": "isTraceEnabled", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isTraceEnabled()", "full_signature": "public abstract boolean isTraceEnabled()", "class_method_signature": "Logger.isTraceEnabled()", "testcase": false, "constructor": false}], "file": "modeshape-common/src/main/java/org/modeshape/common/logging/Logger.java"}, "focal_method": {"identifier": "debug", "parameters": "( String message,\n                                Object... params )", "modifiers": "public abstract", "return": "void", "body": "public abstract void debug( String message,\n                                Object... params );", "signature": "void debug( String message,\n                                Object... params )", "full_signature": "public abstract void debug( String message,\n                                Object... params )", "class_method_signature": "Logger.debug( String message,\n                                Object... params )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}