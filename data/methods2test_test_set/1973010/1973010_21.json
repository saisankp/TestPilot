{"test_class": {"identifier": "AndTest", "superclass": "", "interfaces": "", "fields": [], "file": "culvert-main/src/test/java/com/bah/culvert/constraints/AndTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    Constraint myconstraint1 = createMock(Constraint.class);\n    Constraint myconstraint2 = createMock(Constraint.class);\n\n    And myand = new And(myconstraint1, myconstraint2);\n    Assert\n        .assertEquals(\n            \"And([EasyMock for class com.bah.culvert.constraints.Constraint,EasyMock for class com.bah.culvert.constraints.Constraint])\",\n            myand.toString());\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "AndTest.testToString()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "assertEquals", "toString"]}, "focal_class": {"identifier": "And", "superclass": "extends Logic", "interfaces": "", "fields": [], "methods": [{"identifier": "And", "parameters": "()", "modifiers": "public", "return": "", "signature": " And()", "full_signature": "public  And()", "class_method_signature": "And.And()", "testcase": false, "constructor": true}, {"identifier": "And", "parameters": "(Constraint... subConstraints)", "modifiers": "public", "return": "", "signature": " And(Constraint... subConstraints)", "full_signature": "public  And(Constraint... subConstraints)", "class_method_signature": "And.And(Constraint... subConstraints)", "testcase": false, "constructor": true}, {"identifier": "And", "parameters": "(List<Constraint> subConstraints)", "modifiers": "public", "return": "", "signature": " And(List<Constraint> subConstraints)", "full_signature": "public  And(List<Constraint> subConstraints)", "class_method_signature": "And.And(List<Constraint> subConstraints)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "And.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object a)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object a)", "full_signature": "@Override public boolean equals(Object a)", "class_method_signature": "And.equals(Object a)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "And.hashCode()", "testcase": false, "constructor": false}, {"identifier": "nextResult", "parameters": "(SeekingCurrentIterator[] resultIterators)", "modifiers": "@Override protected", "return": "Result", "signature": "Result nextResult(SeekingCurrentIterator[] resultIterators)", "full_signature": "@Override protected Result nextResult(SeekingCurrentIterator[] resultIterators)", "class_method_signature": "And.nextResult(SeekingCurrentIterator[] resultIterators)", "testcase": false, "constructor": false}], "file": "culvert-main/src/main/java/com/bah/culvert/constraints/And.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return new StringBuilder().append(\"And(\").append(super.toString())\n        .append(\")\").toString();\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "And.toString()", "testcase": false, "constructor": false, "invocations": ["toString", "append", "append", "append", "toString"]}, "repository": {"repo_id": 1973010, "url": "https://github.com/booz-allen-hamilton/culvert", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 373, "license": "licensed"}}