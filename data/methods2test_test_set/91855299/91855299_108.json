{"test_class": {"identifier": "CategoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/prefs/CategoryTest.java"}, "test_case": {"identifier": "testInvalidNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInvalidNames() {\n    assertAll(\n        () -> assertThrows(NullPointerException.class, () -> Category.of(null)),\n        () -> assertThrows(IllegalArgumentException.class, () -> Category.of(\"\")),\n        () -> assertThrows(IllegalArgumentException.class, () -> Category.of(\" \")),\n        () -> assertThrows(IllegalArgumentException.class, () -> Category.of(\"\\n\")),\n        () -> assertThrows(IllegalArgumentException.class, () -> Category.of(\"\\t\"))\n    );\n  }", "signature": "void testInvalidNames()", "full_signature": "@Test public void testInvalidNames()", "class_method_signature": "CategoryTest.testInvalidNames()", "testcase": true, "constructor": false, "invocations": ["assertAll", "assertThrows", "of", "assertThrows", "of", "assertThrows", "of", "assertThrows", "of", "assertThrows", "of"]}, "focal_class": {"identifier": "Category", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final ImmutableList<Category> subcategories;", "modifier": "private final", "type": "ImmutableList<Category>", "declarator": "subcategories", "var_name": "subcategories"}, {"original_string": "private final ImmutableList<Group> groups;", "modifier": "private final", "type": "ImmutableList<Group>", "declarator": "groups", "var_name": "groups"}], "methods": [{"identifier": "of", "parameters": "(String name, Group... groups)", "modifiers": "public static", "return": "Category", "signature": "Category of(String name, Group... groups)", "full_signature": "public static Category of(String name, Group... groups)", "class_method_signature": "Category.of(String name, Group... groups)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String name, Collection<Group> groups)", "modifiers": "public static", "return": "Category", "signature": "Category of(String name, Collection<Group> groups)", "full_signature": "public static Category of(String name, Collection<Group> groups)", "class_method_signature": "Category.of(String name, Collection<Group> groups)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String name, Collection<Category> subcategories, Collection<Group> groups)", "modifiers": "public static", "return": "Category", "signature": "Category of(String name, Collection<Category> subcategories, Collection<Group> groups)", "full_signature": "public static Category of(String name, Collection<Category> subcategories, Collection<Group> groups)", "class_method_signature": "Category.of(String name, Collection<Category> subcategories, Collection<Group> groups)", "testcase": false, "constructor": false}, {"identifier": "Category", "parameters": "(String name, ImmutableList<Category> subcategories, ImmutableList<Group> groups)", "modifiers": "private", "return": "", "signature": " Category(String name, ImmutableList<Category> subcategories, ImmutableList<Group> groups)", "full_signature": "private  Category(String name, ImmutableList<Category> subcategories, ImmutableList<Group> groups)", "class_method_signature": "Category.Category(String name, ImmutableList<Category> subcategories, ImmutableList<Group> groups)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Category.getName()", "testcase": false, "constructor": false}, {"identifier": "getSubcategories", "parameters": "()", "modifiers": "public", "return": "ImmutableList<Category>", "signature": "ImmutableList<Category> getSubcategories()", "full_signature": "public ImmutableList<Category> getSubcategories()", "class_method_signature": "Category.getSubcategories()", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "public", "return": "ImmutableList<Group>", "signature": "ImmutableList<Group> getGroups()", "full_signature": "public ImmutableList<Group> getGroups()", "class_method_signature": "Category.getGroups()", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/prefs/Category.java"}, "focal_method": {"identifier": "of", "parameters": "(String name, Group... groups)", "modifiers": "public static", "return": "Category", "body": "public static Category of(String name, Group... groups) {\n    return Category.of(name, ImmutableList.copyOf(groups));\n  }", "signature": "Category of(String name, Group... groups)", "full_signature": "public static Category of(String name, Group... groups)", "class_method_signature": "Category.of(String name, Group... groups)", "testcase": false, "constructor": false, "invocations": ["of", "copyOf"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}