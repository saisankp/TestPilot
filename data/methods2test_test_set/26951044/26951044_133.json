{"test_class": {"identifier": "URIConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(URI.class))\n            .build();", "modifier": "", "type": "ConversionContext", "declarator": "context = new ConversionContext.Builder(TypeLiteral.of(URI.class))\n            .build()", "var_name": "context"}], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/URIConverterTest.java"}, "test_case": {"identifier": "testConvert_URI_WithSpacesBefore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert_URI_WithSpacesBefore() throws Exception {\n        URIConverter converter = new URIConverter();\n        assertThat(new URI(\"test:path\")).isEqualTo(converter.convert(\"  test:path\", context));\n    }", "signature": "void testConvert_URI_WithSpacesBefore()", "full_signature": "@Test public void testConvert_URI_WithSpacesBefore()", "class_method_signature": "URIConverterTest.testConvert_URI_WithSpacesBefore()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "convert"]}, "focal_class": {"identifier": "URIConverter", "superclass": "", "interfaces": "implements PropertyConverter<URI>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(URIConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(URIConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "URI", "signature": "URI convert(String value, ConversionContext ctx)", "full_signature": "@Override public URI convert(String value, ConversionContext ctx)", "class_method_signature": "URIConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "URIConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "URIConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/URIConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "URI", "body": "@Override\n    public URI convert(String value, ConversionContext ctx) {\n        ctx.addSupportedFormats(getClass(), \"<uri> -> new URI(uri)\");\n        if(value==null){\n            return null;\n        }\n        String trimmed = value.trim();\n        if(value.isEmpty()){\n            return null;\n        }\n        try {\n            return new URI(trimmed);\n        } catch (Exception e) {\n            LOG.log(Level.FINE, \"Unparseable URI: \" + trimmed, e);\n            return null;\n        }\n    }", "signature": "URI convert(String value, ConversionContext ctx)", "full_signature": "@Override public URI convert(String value, ConversionContext ctx)", "class_method_signature": "URIConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "isEmpty", "log"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}