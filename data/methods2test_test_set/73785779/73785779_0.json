{"test_class": {"identifier": "ProxyBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxbus-compiler/src/main/java/vite/rxbus/compiler/ProxyBuilderTest.java"}, "test_case": {"identifier": "testCreateClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateClass() {\n        File file = new File(\"/home/trs/AndroidStudioProjects/RxBus/exampleTest\");\n        File DemoTestClass = new File(file.getAbsolutePath() + \"/vite/demo/MainActivity$$Proxy.java\");\n        ProxyBuilder builder = new ProxyBuilder(ClassName.get(\"vite.demo\", \"MainActivity\"));\n        builder.build(file);\n\n        assertTrue(file.exists());\n        assertTrue(DemoTestClass.exists());\n    }", "signature": "void testCreateClass()", "full_signature": "@Test public void testCreateClass()", "class_method_signature": "ProxyBuilderTest.testCreateClass()", "testcase": true, "constructor": false, "invocations": ["getAbsolutePath", "get", "build", "assertTrue", "exists", "assertTrue", "exists"]}, "focal_class": {"identifier": "ProxyBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CLASS_UNIFORM_MARK = \"$$Proxy\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_UNIFORM_MARK = \"$$Proxy\"", "var_name": "CLASS_UNIFORM_MARK"}, {"original_string": "private static final ClassName BUSPROXY = ClassName.get(\"vite.rxbus\", \"BusProxy\");", "modifier": "private static final", "type": "ClassName", "declarator": "BUSPROXY = ClassName.get(\"vite.rxbus\", \"BusProxy\")", "var_name": "BUSPROXY"}, {"original_string": "private static final ClassName DEFAULT_OBJECT = ClassName.get(\"vite.rxbus\", \"DefaultObject\");", "modifier": "private static final", "type": "ClassName", "declarator": "DEFAULT_OBJECT = ClassName.get(\"vite.rxbus\", \"DefaultObject\")", "var_name": "DEFAULT_OBJECT"}, {"original_string": "private static final ClassName FILTER_FUNC = ClassName.get(\"io.reactivex.functions\", \"Predicate\");", "modifier": "private static final", "type": "ClassName", "declarator": "FILTER_FUNC = ClassName.get(\"io.reactivex.functions\", \"Predicate\")", "var_name": "FILTER_FUNC"}, {"original_string": "private static final ClassName PROXY_ACTION = ClassName.get(\"\", \"IAction\");", "modifier": "private static final", "type": "ClassName", "declarator": "PROXY_ACTION = ClassName.get(\"\", \"IAction\")", "var_name": "PROXY_ACTION"}, {"original_string": "private static final ClassName SCHEDULER_MAIN = ClassName.get(\"io.reactivex.android.schedulers\", \"AndroidSchedulers\", \"mainThread\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_MAIN = ClassName.get(\"io.reactivex.android.schedulers\", \"AndroidSchedulers\", \"mainThread\")", "var_name": "SCHEDULER_MAIN"}, {"original_string": "private static final ClassName SCHEDULER_IO = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"io\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_IO = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"io\")", "var_name": "SCHEDULER_IO"}, {"original_string": "private static final ClassName SCHEDULER_COMPUTATION = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"computation\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_COMPUTATION = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"computation\")", "var_name": "SCHEDULER_COMPUTATION"}, {"original_string": "private static final ClassName SCHEDULER_NEWTHREAD = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"newThread\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_NEWTHREAD = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"newThread\")", "var_name": "SCHEDULER_NEWTHREAD"}, {"original_string": "private static final ClassName SCHEDULER_SINGLE = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"single\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_SINGLE = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"single\")", "var_name": "SCHEDULER_SINGLE"}, {"original_string": "private static final ClassName SCHEDULER_TRAMPOLINE = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"trampoline\");", "modifier": "private static final", "type": "ClassName", "declarator": "SCHEDULER_TRAMPOLINE = ClassName.get(\"io.reactivex.schedulers\", \"Schedulers\", \"trampoline\")", "var_name": "SCHEDULER_TRAMPOLINE"}, {"original_string": "private String mPackagePath;", "modifier": "private", "type": "String", "declarator": "mPackagePath", "var_name": "mPackagePath"}, {"original_string": "private ClassName mTargetClassName;", "modifier": "private", "type": "ClassName", "declarator": "mTargetClassName", "var_name": "mTargetClassName"}, {"original_string": "private Set<MethodBinder> mMethods;", "modifier": "private", "type": "Set<MethodBinder>", "declarator": "mMethods", "var_name": "mMethods"}], "methods": [{"identifier": "ProxyBuilder", "parameters": "(ClassName targetClassName)", "modifiers": "public", "return": "", "signature": " ProxyBuilder(ClassName targetClassName)", "full_signature": "public  ProxyBuilder(ClassName targetClassName)", "class_method_signature": "ProxyBuilder.ProxyBuilder(ClassName targetClassName)", "testcase": false, "constructor": true}, {"identifier": "addMethod", "parameters": "(MethodBinder methodBinder)", "modifiers": "public", "return": "void", "signature": "void addMethod(MethodBinder methodBinder)", "full_signature": "public void addMethod(MethodBinder methodBinder)", "class_method_signature": "ProxyBuilder.addMethod(MethodBinder methodBinder)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Filer filer)", "modifiers": "public", "return": "void", "signature": "void build(Filer filer)", "full_signature": "public void build(Filer filer)", "class_method_signature": "ProxyBuilder.build(Filer filer)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(File file)", "modifiers": "", "return": "void", "signature": "void build(File file)", "full_signature": " void build(File file)", "class_method_signature": "ProxyBuilder.build(File file)", "testcase": false, "constructor": false}, {"identifier": "createTargetClass", "parameters": "()", "modifiers": "private", "return": "TypeSpec", "signature": "TypeSpec createTargetClass()", "full_signature": "private TypeSpec createTargetClass()", "class_method_signature": "ProxyBuilder.createTargetClass()", "testcase": false, "constructor": false}, {"identifier": "createMethods", "parameters": "()", "modifiers": "private", "return": "ArrayList<MethodSpec>", "signature": "ArrayList<MethodSpec> createMethods()", "full_signature": "private ArrayList<MethodSpec> createMethods()", "class_method_signature": "ProxyBuilder.createMethods()", "testcase": false, "constructor": false}, {"identifier": "createConstructor", "parameters": "()", "modifiers": "private", "return": "MethodSpec", "signature": "MethodSpec createConstructor()", "full_signature": "private MethodSpec createConstructor()", "class_method_signature": "ProxyBuilder.createConstructor()", "testcase": false, "constructor": false}, {"identifier": "createMethodCode", "parameters": "(MethodBinder binder)", "modifiers": "private", "return": "CodeBlock", "signature": "CodeBlock createMethodCode(MethodBinder binder)", "full_signature": "private CodeBlock createMethodCode(MethodBinder binder)", "class_method_signature": "ProxyBuilder.createMethodCode(MethodBinder binder)", "testcase": false, "constructor": false}, {"identifier": "createFunc1", "parameters": "(List<TypeMirror> paramTypes)", "modifiers": "private", "return": "TypeSpec", "signature": "TypeSpec createFunc1(List<TypeMirror> paramTypes)", "full_signature": "private TypeSpec createFunc1(List<TypeMirror> paramTypes)", "class_method_signature": "ProxyBuilder.createFunc1(List<TypeMirror> paramTypes)", "testcase": false, "constructor": false}, {"identifier": "createProxyAction", "parameters": "(MethodBinder binder)", "modifiers": "private", "return": "TypeSpec", "signature": "TypeSpec createProxyAction(MethodBinder binder)", "full_signature": "private TypeSpec createProxyAction(MethodBinder binder)", "class_method_signature": "ProxyBuilder.createProxyAction(MethodBinder binder)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProxyBuilder.toString()", "testcase": false, "constructor": false}, {"identifier": "getRxThread", "parameters": "(ThreadType threadType)", "modifiers": "private", "return": "ClassName", "signature": "ClassName getRxThread(ThreadType threadType)", "full_signature": "private ClassName getRxThread(ThreadType threadType)", "class_method_signature": "ProxyBuilder.getRxThread(ThreadType threadType)", "testcase": false, "constructor": false}], "file": "rxbus-compiler/src/main/java/vite/rxbus/compiler/ProxyBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(Filer filer)", "modifiers": "public", "return": "void", "body": "public void build(Filer filer) throws IOException {\n        JavaFile javaFile = JavaFile.builder(mPackagePath, createTargetClass())\n                .addFileComment(\"Generated code from RxBus. Do not modify!\")\n                .build();\n        javaFile.writeTo(filer);\n    }", "signature": "void build(Filer filer)", "full_signature": "public void build(Filer filer)", "class_method_signature": "ProxyBuilder.build(Filer filer)", "testcase": false, "constructor": false, "invocations": ["build", "addFileComment", "builder", "createTargetClass", "writeTo"]}, "repository": {"repo_id": 73785779, "url": "https://github.com/ViTess/RxBus", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 208, "license": "licensed"}}