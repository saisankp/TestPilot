{"test_class": {"identifier": "AsyncEventTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/AsyncEventTest.java"}, "test_case": {"identifier": "testGetThrowable", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetThrowable() {\n        AsyncEvent event = new AsyncEvent(new TestAsyncContext(null, null), new RuntimeException());\n        assertNotNull(event.getThrowable());\n    }", "signature": "void testGetThrowable()", "full_signature": "@Test void testGetThrowable()", "class_method_signature": "AsyncEventTest.testGetThrowable()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getThrowable"]}, "focal_class": {"identifier": "AsyncEvent", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AsyncContext context;", "modifier": "private", "type": "AsyncContext", "declarator": "context", "var_name": "context"}, {"original_string": "private ServletRequest suppliedRequest;", "modifier": "private", "type": "ServletRequest", "declarator": "suppliedRequest", "var_name": "suppliedRequest"}, {"original_string": "private ServletResponse suppliedResponse;", "modifier": "private", "type": "ServletResponse", "declarator": "suppliedResponse", "var_name": "suppliedResponse"}, {"original_string": "private Throwable throwable;", "modifier": "private", "type": "Throwable", "declarator": "throwable", "var_name": "throwable"}], "methods": [{"identifier": "AsyncEvent", "parameters": "(AsyncContext context)", "modifiers": "public", "return": "", "signature": " AsyncEvent(AsyncContext context)", "full_signature": "public  AsyncEvent(AsyncContext context)", "class_method_signature": "AsyncEvent.AsyncEvent(AsyncContext context)", "testcase": false, "constructor": true}, {"identifier": "AsyncEvent", "parameters": "(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse)", "modifiers": "public", "return": "", "signature": " AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse)", "full_signature": "public  AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse)", "class_method_signature": "AsyncEvent.AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse)", "testcase": false, "constructor": true}, {"identifier": "AsyncEvent", "parameters": "(AsyncContext context, Throwable throwable)", "modifiers": "public", "return": "", "signature": " AsyncEvent(AsyncContext context, Throwable throwable)", "full_signature": "public  AsyncEvent(AsyncContext context, Throwable throwable)", "class_method_signature": "AsyncEvent.AsyncEvent(AsyncContext context, Throwable throwable)", "testcase": false, "constructor": true}, {"identifier": "AsyncEvent", "parameters": "(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse, Throwable throwable)", "modifiers": "public", "return": "", "signature": " AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse, Throwable throwable)", "full_signature": "public  AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse, Throwable throwable)", "class_method_signature": "AsyncEvent.AsyncEvent(AsyncContext context, ServletRequest suppliedRequest, ServletResponse suppliedResponse, Throwable throwable)", "testcase": false, "constructor": true}, {"identifier": "getAsyncContext", "parameters": "()", "modifiers": "public", "return": "AsyncContext", "signature": "AsyncContext getAsyncContext()", "full_signature": "public AsyncContext getAsyncContext()", "class_method_signature": "AsyncEvent.getAsyncContext()", "testcase": false, "constructor": false}, {"identifier": "getSuppliedRequest", "parameters": "()", "modifiers": "public", "return": "ServletRequest", "signature": "ServletRequest getSuppliedRequest()", "full_signature": "public ServletRequest getSuppliedRequest()", "class_method_signature": "AsyncEvent.getSuppliedRequest()", "testcase": false, "constructor": false}, {"identifier": "getSuppliedResponse", "parameters": "()", "modifiers": "public", "return": "ServletResponse", "signature": "ServletResponse getSuppliedResponse()", "full_signature": "public ServletResponse getSuppliedResponse()", "class_method_signature": "AsyncEvent.getSuppliedResponse()", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "public Throwable getThrowable()", "class_method_signature": "AsyncEvent.getThrowable()", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/AsyncEvent.java"}, "focal_method": {"identifier": "getThrowable", "parameters": "()", "modifiers": "public", "return": "Throwable", "body": "public Throwable getThrowable() {\n        return throwable;\n    }", "signature": "Throwable getThrowable()", "full_signature": "public Throwable getThrowable()", "class_method_signature": "AsyncEvent.getThrowable()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}