{"test_class": {"identifier": "PrefixJarResourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "resource/impl/src/test/java/cloud/piranha/resource/PrefixJarResourceTest.java"}, "test_case": {"identifier": "testGetResource2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetResource2() {\n        PrefixJarResource resource = new PrefixJarResource();\n        assertThrows(NullPointerException.class, () -> resource.getResource(\"we_wont_find_this\"));\n    }", "signature": "void testGetResource2()", "full_signature": "@Test void testGetResource2()", "class_method_signature": "PrefixJarResourceTest.testGetResource2()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "getResource"]}, "focal_class": {"identifier": "PrefixJarResource", "superclass": "", "interfaces": "implements Resource", "fields": [{"original_string": "private JarFile jarFile;", "modifier": "private", "type": "JarFile", "declarator": "jarFile", "var_name": "jarFile"}, {"original_string": "private String prefix;", "modifier": "private", "type": "String", "declarator": "prefix", "var_name": "prefix"}], "methods": [{"identifier": "PrefixJarResource", "parameters": "()", "modifiers": "public", "return": "", "signature": " PrefixJarResource()", "full_signature": "public  PrefixJarResource()", "class_method_signature": "PrefixJarResource.PrefixJarResource()", "testcase": false, "constructor": true}, {"identifier": "PrefixJarResource", "parameters": "(JarFile jarFile, String prefix)", "modifiers": "public", "return": "", "signature": " PrefixJarResource(JarFile jarFile, String prefix)", "full_signature": "public  PrefixJarResource(JarFile jarFile, String prefix)", "class_method_signature": "PrefixJarResource.PrefixJarResource(JarFile jarFile, String prefix)", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "PrefixJarResource.getResource(String location)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "PrefixJarResource.getResourceAsStream(String location)", "testcase": false, "constructor": false}, {"identifier": "getAllLocations", "parameters": "()", "modifiers": "public", "return": "Stream<String>", "signature": "Stream<String> getAllLocations()", "full_signature": "public Stream<String> getAllLocations()", "class_method_signature": "PrefixJarResource.getAllLocations()", "testcase": false, "constructor": false}, {"identifier": "getJarFile", "parameters": "()", "modifiers": "public", "return": "JarFile", "signature": "JarFile getJarFile()", "full_signature": "public JarFile getJarFile()", "class_method_signature": "PrefixJarResource.getJarFile()", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrefix()", "full_signature": "public String getPrefix()", "class_method_signature": "PrefixJarResource.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "setJarFile", "parameters": "(JarFile jarFile)", "modifiers": "public", "return": "void", "signature": "void setJarFile(JarFile jarFile)", "full_signature": "public void setJarFile(JarFile jarFile)", "class_method_signature": "PrefixJarResource.setJarFile(JarFile jarFile)", "testcase": false, "constructor": false}, {"identifier": "setPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setPrefix(String prefix)", "full_signature": "public void setPrefix(String prefix)", "class_method_signature": "PrefixJarResource.setPrefix(String prefix)", "testcase": false, "constructor": false}], "file": "resource/impl/src/main/java/cloud/piranha/resource/PrefixJarResource.java"}, "focal_method": {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "body": "@Override\n    public URL getResource(String location) {\n        URL result = null;\n        try {\n            location = prefix + location;\n            JarEntry jarEntry = jarFile.getJarEntry(location);\n            if (jarEntry != null) {\n                result = new URL(\"jar://\" + jarFile.getName() + \"#!/\" + location);\n            }\n        } catch (MalformedURLException use) {\n        }\n        return result;\n    }", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "PrefixJarResource.getResource(String location)", "testcase": false, "constructor": false, "invocations": ["getJarEntry", "getName"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}