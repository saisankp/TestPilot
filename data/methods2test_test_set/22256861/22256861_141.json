{"test_class": {"identifier": "MetopRad2ReflFactorCalibratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-avhrr-reader/src/test/java/org/esa/s3tbx/dataio/avhrr/metop/MetopRad2ReflFactorCalibratorTest.java"}, "test_case": {"identifier": "testCalibration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCalibration() {\n        MetopRad2ReflFactorCalibrator calibrator = new MetopRad2ReflFactorCalibrator(139.8732, 1);\n        assertEquals(16.418472, calibrator.calibrate((float) (7.31)), 1.0e-6f);\n    }", "signature": "void testCalibration()", "full_signature": "@Test public void testCalibration()", "class_method_signature": "MetopRad2ReflFactorCalibratorTest.testCalibration()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "calibrate"]}, "focal_class": {"identifier": "MetopRad2ReflFactorCalibrator", "superclass": "", "interfaces": "implements RadianceCalibrator", "fields": [{"original_string": "private float conversionFactor;", "modifier": "private", "type": "float", "declarator": "conversionFactor", "var_name": "conversionFactor"}], "methods": [{"identifier": "MetopRad2ReflFactorCalibrator", "parameters": "(double solarIrradiance, double earthSunDistance)", "modifiers": "public", "return": "", "signature": " MetopRad2ReflFactorCalibrator(double solarIrradiance, double earthSunDistance)", "full_signature": "public  MetopRad2ReflFactorCalibrator(double solarIrradiance, double earthSunDistance)", "class_method_signature": "MetopRad2ReflFactorCalibrator.MetopRad2ReflFactorCalibrator(double solarIrradiance, double earthSunDistance)", "testcase": false, "constructor": true}, {"identifier": "calibrate", "parameters": "(float radiances)", "modifiers": "@Override public", "return": "float", "signature": "float calibrate(float radiances)", "full_signature": "@Override public float calibrate(float radiances)", "class_method_signature": "MetopRad2ReflFactorCalibrator.calibrate(float radiances)", "testcase": false, "constructor": false}, {"identifier": "getConversionFactor", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getConversionFactor()", "full_signature": "public float getConversionFactor()", "class_method_signature": "MetopRad2ReflFactorCalibrator.getConversionFactor()", "testcase": false, "constructor": false}], "file": "s3tbx-avhrr-reader/src/main/java/org/esa/s3tbx/dataio/avhrr/metop/MetopRad2ReflFactorCalibrator.java"}, "focal_method": {"identifier": "calibrate", "parameters": "(float radiances)", "modifiers": "@Override public", "return": "float", "body": "@Override\n    public float calibrate(float radiances) {\n\t\treturn radiances / conversionFactor;\n\t}", "signature": "float calibrate(float radiances)", "full_signature": "@Override public float calibrate(float radiances)", "class_method_signature": "MetopRad2ReflFactorCalibrator.calibrate(float radiances)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}