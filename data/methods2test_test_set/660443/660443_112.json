{"test_class": {"identifier": "BasicGeneratorTest", "superclass": "extends AbstractGeneratorTest", "interfaces": "", "fields": [{"original_string": "private BasicGenerator generator;", "modifier": "private", "type": "BasicGenerator", "declarator": "generator", "var_name": "generator"}], "file": "display/renderbasic/src/test/java/org/openscience/cdk/renderer/generators/BasicGeneratorTest.java"}, "test_case": {"identifier": "testSingleAtom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSingleAtom() {\n        IAtomContainer singleAtom = makeSingleAtom();\n\n        // nothing should be made\n        IRenderingElement root = generator.generate(singleAtom, model);\n        List<IRenderingElement> elements = elementUtil.getAllSimpleElements(root);\n        Assert.assertEquals(1, elements.size());\n    }", "signature": "void testSingleAtom()", "full_signature": "@Test public void testSingleAtom()", "class_method_signature": "BasicGeneratorTest.testSingleAtom()", "testcase": true, "constructor": false, "invocations": ["makeSingleAtom", "generate", "getAllSimpleElements", "assertEquals", "size"]}, "focal_class": {"identifier": "BasicGenerator", "superclass": "", "interfaces": "implements IGenerator<IAtomContainer>", "fields": [{"original_string": "private BasicSceneGenerator sceneGenerator;", "modifier": "private", "type": "BasicSceneGenerator", "declarator": "sceneGenerator", "var_name": "sceneGenerator"}, {"original_string": "private BasicAtomGenerator  atomGenerator;", "modifier": "private", "type": "BasicAtomGenerator", "declarator": "atomGenerator", "var_name": "atomGenerator"}, {"original_string": "private BasicBondGenerator  bondGenerator;", "modifier": "private", "type": "BasicBondGenerator", "declarator": "bondGenerator", "var_name": "bondGenerator"}], "methods": [{"identifier": "BasicGenerator", "parameters": "()", "modifiers": "public", "return": "", "signature": " BasicGenerator()", "full_signature": "public  BasicGenerator()", "class_method_signature": "BasicGenerator.BasicGenerator()", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "(IAtomContainer ac, RendererModel model)", "modifiers": "@Override public", "return": "IRenderingElement", "signature": "IRenderingElement generate(IAtomContainer ac, RendererModel model)", "full_signature": "@Override public IRenderingElement generate(IAtomContainer ac, RendererModel model)", "class_method_signature": "BasicGenerator.generate(IAtomContainer ac, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<IGeneratorParameter<?>>", "signature": "List<IGeneratorParameter<?>> getParameters()", "full_signature": "@Override public List<IGeneratorParameter<?>> getParameters()", "class_method_signature": "BasicGenerator.getParameters()", "testcase": false, "constructor": false}], "file": "display/renderbasic/src/main/java/org/openscience/cdk/renderer/generators/BasicGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(IAtomContainer ac, RendererModel model)", "modifiers": "@Override public", "return": "IRenderingElement", "body": "@Override\n    public IRenderingElement generate(IAtomContainer ac, RendererModel model) {\n        ElementGroup diagram = new ElementGroup();\n        diagram.add(this.sceneGenerator.generate(ac, model));\n        diagram.add(this.bondGenerator.generate(ac, model));\n        diagram.add(this.atomGenerator.generate(ac, model));\n        return diagram;\n    }", "signature": "IRenderingElement generate(IAtomContainer ac, RendererModel model)", "full_signature": "@Override public IRenderingElement generate(IAtomContainer ac, RendererModel model)", "class_method_signature": "BasicGenerator.generate(IAtomContainer ac, RendererModel model)", "testcase": false, "constructor": false, "invocations": ["add", "generate", "add", "generate", "add", "generate"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}