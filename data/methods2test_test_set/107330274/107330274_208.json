{"test_class": {"identifier": "AgentStoreReaperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TestScheduler testScheduler = Schedulers.test();", "modifier": "private final", "type": "TestScheduler", "declarator": "testScheduler = Schedulers.test()", "var_name": "testScheduler"}, {"original_string": "private final AgentStoreReaperConfiguration configuration = mock(AgentStoreReaperConfiguration.class);", "modifier": "private final", "type": "AgentStoreReaperConfiguration", "declarator": "configuration = mock(AgentStoreReaperConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final AgentStore agentStore = mock(AgentStore.class);", "modifier": "private final", "type": "AgentStore", "declarator": "agentStore = mock(AgentStore.class)", "var_name": "agentStore"}, {"original_string": "private final AgentStoreReaper reaper = new AgentStoreReaper(configuration, agentStore, new DefaultRegistry(), testScheduler);", "modifier": "private final", "type": "AgentStoreReaper", "declarator": "reaper = new AgentStoreReaper(configuration, agentStore, new DefaultRegistry(), testScheduler)", "var_name": "reaper"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/agent/store/AgentStoreReaperTest.java"}, "test_case": {"identifier": "testTaggedInstanceGroupsAreRemovedAfterDeadline", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTaggedInstanceGroupsAreRemovedAfterDeadline() {\n        AgentInstanceGroup instanceGroup = AgentStoreReaper.tagToRemove(AgentGenerator.agentServerGroups().getValue(), testScheduler);\n        AgentInstance instance = AgentGenerator.agentInstances(instanceGroup).getValue();\n\n        when(agentStore.retrieveAgentInstanceGroups()).thenReturn(Observable.just(instanceGroup));\n        when(agentStore.retrieveAgentInstances()).thenReturn(Observable.just(instance));\n\n        testScheduler.advanceTimeBy(AgentStoreReaper.MIN_EXPIRED_DATA_RETENTION_PERIOD_MS - 1, TimeUnit.MILLISECONDS);\n        verify(agentStore, times(0)).removeAgentInstanceGroups(Collections.singletonList(instanceGroup.getId()));\n        verify(agentStore, times(0)).removeAgentInstances(Collections.singletonList(instance.getId()));\n\n        testScheduler.advanceTimeBy(1, TimeUnit.MILLISECONDS);\n        verify(agentStore, times(1)).removeAgentInstanceGroups(Collections.singletonList(instanceGroup.getId()));\n        verify(agentStore, times(1)).removeAgentInstances(Collections.singletonList(instance.getId()));\n    }", "signature": "void testTaggedInstanceGroupsAreRemovedAfterDeadline()", "full_signature": "@Test public void testTaggedInstanceGroupsAreRemovedAfterDeadline()", "class_method_signature": "AgentStoreReaperTest.testTaggedInstanceGroupsAreRemovedAfterDeadline()", "testcase": true, "constructor": false, "invocations": ["tagToRemove", "getValue", "agentServerGroups", "getValue", "agentInstances", "thenReturn", "when", "retrieveAgentInstanceGroups", "just", "thenReturn", "when", "retrieveAgentInstances", "just", "advanceTimeBy", "removeAgentInstanceGroups", "verify", "times", "singletonList", "getId", "removeAgentInstances", "verify", "times", "singletonList", "getId", "advanceTimeBy", "removeAgentInstanceGroups", "verify", "times", "singletonList", "getId", "removeAgentInstances", "verify", "times", "singletonList", "getId"]}, "focal_class": {"identifier": "AgentStoreReaper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(AgentStoreReaper.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(AgentStoreReaper.class)", "var_name": "logger"}, {"original_string": "public static final String INSTANCE_GROUP_REMOVED_ATTRIBUTE = \"titus.agentManagement.instanceGroupRemoved\";", "modifier": "public static final", "type": "String", "declarator": "INSTANCE_GROUP_REMOVED_ATTRIBUTE = \"titus.agentManagement.instanceGroupRemoved\"", "var_name": "INSTANCE_GROUP_REMOVED_ATTRIBUTE"}, {"original_string": "@VisibleForTesting\n    static final long MIN_EXPIRED_DATA_RETENTION_PERIOD_MS = 3600_000;", "modifier": "@VisibleForTesting\n    static final", "type": "long", "declarator": "MIN_EXPIRED_DATA_RETENTION_PERIOD_MS = 3600_000", "var_name": "MIN_EXPIRED_DATA_RETENTION_PERIOD_MS"}, {"original_string": "private static final long STORAGE_GC_INTERVAL_MS = 600_000;", "modifier": "private static final", "type": "long", "declarator": "STORAGE_GC_INTERVAL_MS = 600_000", "var_name": "STORAGE_GC_INTERVAL_MS"}, {"original_string": "private final AgentStore agentStore;", "modifier": "private final", "type": "AgentStore", "declarator": "agentStore", "var_name": "agentStore"}, {"original_string": "private final Registry registry;", "modifier": "private final", "type": "Registry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final Scheduler scheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private final AgentStoreReaperConfiguration configuration;", "modifier": "private final", "type": "AgentStoreReaperConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private Subscription reaperSubscription;", "modifier": "private", "type": "Subscription", "declarator": "reaperSubscription", "var_name": "reaperSubscription"}], "methods": [{"identifier": "AgentStoreReaper", "parameters": "(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry)", "modifiers": "@Inject public", "return": "", "signature": " AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry)", "full_signature": "@Inject public  AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry)", "class_method_signature": "AgentStoreReaper.AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry)", "testcase": false, "constructor": true}, {"identifier": "AgentStoreReaper", "parameters": "(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry, Scheduler scheduler)", "modifiers": "public", "return": "", "signature": " AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry, Scheduler scheduler)", "full_signature": "public  AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry, Scheduler scheduler)", "class_method_signature": "AgentStoreReaper.AgentStoreReaper(AgentStoreReaperConfiguration configuration, AgentStore agentStore, Registry registry, Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "void", "signature": "void enterActiveMode()", "full_signature": "@Activator public void enterActiveMode()", "class_method_signature": "AgentStoreReaper.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "AgentStoreReaper.shutdown()", "testcase": false, "constructor": false}, {"identifier": "doStoreGarbageCollection", "parameters": "()", "modifiers": "private", "return": "Completable", "signature": "Completable doStoreGarbageCollection()", "full_signature": "private Completable doStoreGarbageCollection()", "class_method_signature": "AgentStoreReaper.doStoreGarbageCollection()", "testcase": false, "constructor": false}, {"identifier": "shouldBeRemoved", "parameters": "(AgentInstanceGroup sg)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldBeRemoved(AgentInstanceGroup sg)", "full_signature": "private boolean shouldBeRemoved(AgentInstanceGroup sg)", "class_method_signature": "AgentStoreReaper.shouldBeRemoved(AgentInstanceGroup sg)", "testcase": false, "constructor": false}, {"identifier": "findRecordsToRemove", "parameters": "(Pair<List<AgentInstanceGroup>, List<AgentInstance>> pair)", "modifiers": "private", "return": "Pair<List<String>, List<String>>", "signature": "Pair<List<String>, List<String>> findRecordsToRemove(Pair<List<AgentInstanceGroup>, List<AgentInstance>> pair)", "full_signature": "private Pair<List<String>, List<String>> findRecordsToRemove(Pair<List<AgentInstanceGroup>, List<AgentInstance>> pair)", "class_method_signature": "AgentStoreReaper.findRecordsToRemove(Pair<List<AgentInstanceGroup>, List<AgentInstance>> pair)", "testcase": false, "constructor": false}, {"identifier": "toRemoveActions", "parameters": "(List<String> instanceGroupIds, List<String> instanceIds)", "modifiers": "private", "return": "Completable", "signature": "Completable toRemoveActions(List<String> instanceGroupIds, List<String> instanceIds)", "full_signature": "private Completable toRemoveActions(List<String> instanceGroupIds, List<String> instanceIds)", "class_method_signature": "AgentStoreReaper.toRemoveActions(List<String> instanceGroupIds, List<String> instanceIds)", "testcase": false, "constructor": false}, {"identifier": "isTaggedToRemove", "parameters": "(AgentInstanceGroup instanceGroup)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTaggedToRemove(AgentInstanceGroup instanceGroup)", "full_signature": "public static boolean isTaggedToRemove(AgentInstanceGroup instanceGroup)", "class_method_signature": "AgentStoreReaper.isTaggedToRemove(AgentInstanceGroup instanceGroup)", "testcase": false, "constructor": false}, {"identifier": "tagToRemove", "parameters": "(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "modifiers": "public static", "return": "AgentInstanceGroup", "signature": "AgentInstanceGroup tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "full_signature": "public static AgentInstanceGroup tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "class_method_signature": "AgentStoreReaper.tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/agent/store/AgentStoreReaper.java"}, "focal_method": {"identifier": "tagToRemove", "parameters": "(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "modifiers": "public static", "return": "AgentInstanceGroup", "body": "public static AgentInstanceGroup tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler) {\n        return instanceGroup.toBuilder()\n                .withAttributes(CollectionsExt.copyAndAdd(instanceGroup.getAttributes(), AgentStoreReaper.INSTANCE_GROUP_REMOVED_ATTRIBUTE, Long.toString(scheduler.now())))\n                .build();\n    }", "signature": "AgentInstanceGroup tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "full_signature": "public static AgentInstanceGroup tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "class_method_signature": "AgentStoreReaper.tagToRemove(AgentInstanceGroup instanceGroup, Scheduler scheduler)", "testcase": false, "constructor": false, "invocations": ["build", "withAttributes", "toBuilder", "copyAndAdd", "getAttributes", "toString", "now"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}