{"test_class": {"identifier": "EnvironmentDriverTest", "superclass": "", "interfaces": "", "fields": [], "file": "database/environment/src/test/java/cloud/piranha/database/environment/EnvironmentDriverTest.java"}, "test_case": {"identifier": "testGetPropertyInfo", "parameters": "()", "modifiers": "@Disabled @Test", "return": "void", "body": "@Disabled\n    @Test\n    void testGetPropertyInfo() throws Exception {\n        assertNotNull(DriverManager.getDriver(\"jdbc:environment:0\").\n                getPropertyInfo(\"jdbc:environment:0\", new Properties()));\n    }", "signature": "void testGetPropertyInfo()", "full_signature": "@Disabled @Test void testGetPropertyInfo()", "class_method_signature": "EnvironmentDriverTest.testGetPropertyInfo()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getPropertyInfo", "getDriver"]}, "focal_class": {"identifier": "EnvironmentDriver", "superclass": "", "interfaces": "implements Driver", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(EnvironmentDriver.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(EnvironmentDriver.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "EnvironmentDriver", "parameters": "()", "modifiers": "public", "return": "", "signature": " EnvironmentDriver()", "full_signature": "public  EnvironmentDriver()", "class_method_signature": "EnvironmentDriver.EnvironmentDriver()", "testcase": false, "constructor": true}, {"identifier": "connect", "parameters": "(String url, Properties info)", "modifiers": "@Override public", "return": "Connection", "signature": "Connection connect(String url, Properties info)", "full_signature": "@Override public Connection connect(String url, Properties info)", "class_method_signature": "EnvironmentDriver.connect(String url, Properties info)", "testcase": false, "constructor": false}, {"identifier": "acceptsURL", "parameters": "(String url)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsURL(String url)", "full_signature": "@Override public boolean acceptsURL(String url)", "class_method_signature": "EnvironmentDriver.acceptsURL(String url)", "testcase": false, "constructor": false}, {"identifier": "getPropertyInfo", "parameters": "(String url, Properties info)", "modifiers": "@Override public", "return": "DriverPropertyInfo[]", "signature": "DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "full_signature": "@Override public DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "class_method_signature": "EnvironmentDriver.getPropertyInfo(String url, Properties info)", "testcase": false, "constructor": false}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMajorVersion()", "full_signature": "@Override public int getMajorVersion()", "class_method_signature": "EnvironmentDriver.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinorVersion()", "full_signature": "@Override public int getMinorVersion()", "class_method_signature": "EnvironmentDriver.getMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "jdbcCompliant", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean jdbcCompliant()", "full_signature": "@Override public boolean jdbcCompliant()", "class_method_signature": "EnvironmentDriver.jdbcCompliant()", "testcase": false, "constructor": false}, {"identifier": "getParentLogger", "parameters": "()", "modifiers": "@Override public", "return": "Logger", "signature": "Logger getParentLogger()", "full_signature": "@Override public Logger getParentLogger()", "class_method_signature": "EnvironmentDriver.getParentLogger()", "testcase": false, "constructor": false}], "file": "database/environment/src/main/java/cloud/piranha/database/environment/EnvironmentDriver.java"}, "focal_method": {"identifier": "getPropertyInfo", "parameters": "(String url, Properties info)", "modifiers": "@Override public", "return": "DriverPropertyInfo[]", "body": "@Override\n    public DriverPropertyInfo[] getPropertyInfo(String url, Properties info) throws SQLException {\n        String delegateUrl = null;\n        Properties delegateInfo = null;\n        Driver driver = DriverManager.getDriver(delegateUrl);\n        return driver.getPropertyInfo(delegateUrl, delegateInfo);\n    }", "signature": "DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "full_signature": "@Override public DriverPropertyInfo[] getPropertyInfo(String url, Properties info)", "class_method_signature": "EnvironmentDriver.getPropertyInfo(String url, Properties info)", "testcase": false, "constructor": false, "invocations": ["getDriver", "getPropertyInfo"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}