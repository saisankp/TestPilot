{"test_class": {"identifier": "ClientTransactionCursorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final QName NODE_1 = QName.create(\"ns-1\", \"node-1\");", "modifier": "private static final", "type": "QName", "declarator": "NODE_1 = QName.create(\"ns-1\", \"node-1\")", "var_name": "NODE_1"}, {"original_string": "private static final QName NODE_2 = QName.create(NODE_1, \"node-2\");", "modifier": "private static final", "type": "QName", "declarator": "NODE_2 = QName.create(NODE_1, \"node-2\")", "var_name": "NODE_2"}, {"original_string": "private static final QName NODE_3 = QName.create(NODE_1, \"node-3\");", "modifier": "private static final", "type": "QName", "declarator": "NODE_3 = QName.create(NODE_1, \"node-3\")", "var_name": "NODE_3"}, {"original_string": "@Mock\n    private ClientTransaction transaction;", "modifier": "@Mock\n    private", "type": "ClientTransaction", "declarator": "transaction", "var_name": "transaction"}, {"original_string": "private ClientTransactionCursor cursor;", "modifier": "private", "type": "ClientTransactionCursor", "declarator": "cursor", "var_name": "cursor"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/databroker/actors/dds/ClientTransactionCursorTest.java"}, "test_case": {"identifier": "testMerge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMerge() {\n        final YangInstanceIdentifier.NodeIdentifier path = YangInstanceIdentifier.NodeIdentifier.create(NODE_1);\n        final ContainerNode data = createData(path.getNodeType());\n        cursor.merge(path, data);\n        final YangInstanceIdentifier expected = createId(NODE_1);\n        verify(transaction).merge(expected, data);\n    }", "signature": "void testMerge()", "full_signature": "@Test public void testMerge()", "class_method_signature": "ClientTransactionCursorTest.testMerge()", "testcase": true, "constructor": false, "invocations": ["create", "createData", "getNodeType", "merge", "createId", "merge", "verify"]}, "focal_class": {"identifier": "ClientTransactionCursor", "superclass": "", "interfaces": "implements DOMDataTreeWriteCursor", "fields": [{"original_string": "private YangInstanceIdentifier current = YangInstanceIdentifier.empty();", "modifier": "private", "type": "YangInstanceIdentifier", "declarator": "current = YangInstanceIdentifier.empty()", "var_name": "current"}, {"original_string": "private final ClientTransaction parent;", "modifier": "private final", "type": "ClientTransaction", "declarator": "parent", "var_name": "parent"}], "methods": [{"identifier": "ClientTransactionCursor", "parameters": "(final ClientTransaction parent)", "modifiers": "", "return": "", "signature": " ClientTransactionCursor(final ClientTransaction parent)", "full_signature": "  ClientTransactionCursor(final ClientTransaction parent)", "class_method_signature": "ClientTransactionCursor.ClientTransactionCursor(final ClientTransaction parent)", "testcase": false, "constructor": true}, {"identifier": "enter", "parameters": "(final PathArgument child)", "modifiers": "@Override public", "return": "void", "signature": "void enter(final PathArgument child)", "full_signature": "@Override public void enter(final PathArgument child)", "class_method_signature": "ClientTransactionCursor.enter(final PathArgument child)", "testcase": false, "constructor": false}, {"identifier": "enter", "parameters": "(final PathArgument... path)", "modifiers": "@Override public", "return": "void", "signature": "void enter(final PathArgument... path)", "full_signature": "@Override public void enter(final PathArgument... path)", "class_method_signature": "ClientTransactionCursor.enter(final PathArgument... path)", "testcase": false, "constructor": false}, {"identifier": "enter", "parameters": "(final Iterable<PathArgument> path)", "modifiers": "@Override public", "return": "void", "signature": "void enter(final Iterable<PathArgument> path)", "full_signature": "@Override public void enter(final Iterable<PathArgument> path)", "class_method_signature": "ClientTransactionCursor.enter(final Iterable<PathArgument> path)", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void exit()", "full_signature": "@Override public void exit()", "class_method_signature": "ClientTransactionCursor.exit()", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "(final int depth)", "modifiers": "@Override public", "return": "void", "signature": "void exit(final int depth)", "full_signature": "@Override public void exit(final int depth)", "class_method_signature": "ClientTransactionCursor.exit(final int depth)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ClientTransactionCursor.close()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final PathArgument child)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final PathArgument child)", "full_signature": "@Override public void delete(final PathArgument child)", "class_method_signature": "ClientTransactionCursor.delete(final PathArgument child)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(final PathArgument child, final NormalizedNode<?, ?> data)", "modifiers": "@Override public", "return": "void", "signature": "void merge(final PathArgument child, final NormalizedNode<?, ?> data)", "full_signature": "@Override public void merge(final PathArgument child, final NormalizedNode<?, ?> data)", "class_method_signature": "ClientTransactionCursor.merge(final PathArgument child, final NormalizedNode<?, ?> data)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final PathArgument child, final NormalizedNode<?, ?> data)", "modifiers": "@Override public", "return": "void", "signature": "void write(final PathArgument child, final NormalizedNode<?, ?> data)", "full_signature": "@Override public void write(final PathArgument child, final NormalizedNode<?, ?> data)", "class_method_signature": "ClientTransactionCursor.write(final PathArgument child, final NormalizedNode<?, ?> data)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/databroker/actors/dds/ClientTransactionCursor.java"}, "focal_method": {"identifier": "merge", "parameters": "(final PathArgument child, final NormalizedNode<?, ?> data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void merge(final PathArgument child, final NormalizedNode<?, ?> data) {\n        parent.merge(current.node(child), data);\n    }", "signature": "void merge(final PathArgument child, final NormalizedNode<?, ?> data)", "full_signature": "@Override public void merge(final PathArgument child, final NormalizedNode<?, ?> data)", "class_method_signature": "ClientTransactionCursor.merge(final PathArgument child, final NormalizedNode<?, ?> data)", "testcase": false, "constructor": false, "invocations": ["merge", "node"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}