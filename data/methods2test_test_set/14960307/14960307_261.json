{"test_class": {"identifier": "MetaFieldUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MetaFieldUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MetaFieldUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/MetaFieldUtilTest.java"}, "test_case": {"identifier": "toMetaFieldInfoArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toMetaFieldInfoArray() throws Exception {\n        Administrator emp = new Administrator();\n        MetaFieldInfo[] fields = MetaFieldUtil.toMetaFieldInfoArray(emp);\n        Assert.assertEquals(12, fields.length);\n        Assert.assertEquals(\"First Name\", fields[0].name);\n        Assert.assertEquals(\"Last Name\", fields[1].name);\n        Assert.assertEquals(\"email\", fields[2].name);\n        Assert.assertEquals(\"ID\", fields[3].name);\n        Assert.assertEquals(\"Active?\", fields[4].name);\n        Assert.assertEquals(\"loginCounter\", fields[5].name);\n        Assert.assertEquals(\"The first name of this user\", fields[0].description);\n        Assert.assertEquals(\"\", fields[1].description);\n        Assert.assertEquals(\"\", fields[2].description);\n        // set some values\n        emp.setFirstName(\"John\");\n        emp.setLastName(\"Doe\");\n        fields = MetaFieldUtil.toMetaFieldInfoArray(emp, \"EMPTY\");\n        //for (MetaFieldInfo field : fields) {\n        //    logger.debug(\"field name=\" + field.name + \", value=\" + field.value + \", description=\" + field.description);\n        //}\n        Assert.assertEquals(\"John\", fields[0].value);\n        Assert.assertEquals(\"Doe\", fields[1].value);\n        Assert.assertEquals(\"EMPTY\", fields[2].value);\n    }", "signature": "void toMetaFieldInfoArray()", "full_signature": "@Test public void toMetaFieldInfoArray()", "class_method_signature": "MetaFieldUtilTest.toMetaFieldInfoArray()", "testcase": true, "constructor": false, "invocations": ["toMetaFieldInfoArray", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "setFirstName", "setLastName", "toMetaFieldInfoArray", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "MetaFieldUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(MetaFieldUtil.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MetaFieldUtil.class)", "var_name": "logger"}], "methods": [{"identifier": "toMetaFieldInfoString", "parameters": "(Object obj)", "modifiers": "public static", "return": "String", "signature": "String toMetaFieldInfoString(Object obj)", "full_signature": "public static String toMetaFieldInfoString(Object obj)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toMetaFieldInfoArray", "parameters": "(Object obj)", "modifiers": "public static", "return": "MetaFieldInfo[]", "signature": "MetaFieldInfo[] toMetaFieldInfoArray(Object obj)", "full_signature": "public static MetaFieldInfo[] toMetaFieldInfoArray(Object obj)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoArray(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toMetaFieldInfoArray", "parameters": "(Object obj, String stringForNullValues)", "modifiers": "public static", "return": "MetaFieldInfo[]", "signature": "MetaFieldInfo[] toMetaFieldInfoArray(Object obj, String stringForNullValues)", "full_signature": "public static MetaFieldInfo[] toMetaFieldInfoArray(Object obj, String stringForNullValues)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoArray(Object obj, String stringForNullValues)", "testcase": false, "constructor": false}, {"identifier": "toMetaFieldInfoArray", "parameters": "(Object obj, String stringForNullValues, boolean ignoreAnnotatedName)", "modifiers": "public static", "return": "MetaFieldInfo[]", "signature": "MetaFieldInfo[] toMetaFieldInfoArray(Object obj, String stringForNullValues, boolean ignoreAnnotatedName)", "full_signature": "public static MetaFieldInfo[] toMetaFieldInfoArray(Object obj, String stringForNullValues, boolean ignoreAnnotatedName)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoArray(Object obj, String stringForNullValues, boolean ignoreAnnotatedName)", "testcase": false, "constructor": false}, {"identifier": "toMetaFieldInfoArray", "parameters": "(Class type, Object obj, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "modifiers": "public static", "return": "MetaFieldInfo[]", "signature": "MetaFieldInfo[] toMetaFieldInfoArray(Class type, Object obj, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "full_signature": "public static MetaFieldInfo[] toMetaFieldInfoArray(Class type, Object obj, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoArray(Class type, Object obj, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "internalToMetaFieldInfoArray", "parameters": "(Class type, Object obj, String preFieldName,\n            String postFieldName, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "modifiers": "protected static", "return": "MetaFieldInfo[]", "signature": "MetaFieldInfo[] internalToMetaFieldInfoArray(Class type, Object obj, String preFieldName,\n            String postFieldName, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "full_signature": "protected static MetaFieldInfo[] internalToMetaFieldInfoArray(Class type, Object obj, String preFieldName,\n            String postFieldName, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "class_method_signature": "MetaFieldUtil.internalToMetaFieldInfoArray(Class type, Object obj, String preFieldName,\n            String postFieldName, String stringForNullValues, boolean ignoreAnnotatedName, boolean recursive)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/MetaFieldUtil.java"}, "focal_method": {"identifier": "toMetaFieldInfoArray", "parameters": "(Object obj)", "modifiers": "public static", "return": "MetaFieldInfo[]", "body": "public static MetaFieldInfo[] toMetaFieldInfoArray(Object obj) {\n        return toMetaFieldInfoArray(obj, null);\n    }", "signature": "MetaFieldInfo[] toMetaFieldInfoArray(Object obj)", "full_signature": "public static MetaFieldInfo[] toMetaFieldInfoArray(Object obj)", "class_method_signature": "MetaFieldUtil.toMetaFieldInfoArray(Object obj)", "testcase": false, "constructor": false, "invocations": ["toMetaFieldInfoArray"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}