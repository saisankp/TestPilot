{"test_class": {"identifier": "TopologyLinkDataChangeHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockitoAnnotations.Mock\n    private DataBroker dataBroker;", "modifier": "@MockitoAnnotations.Mock\n    private", "type": "DataBroker", "declarator": "dataBroker", "var_name": "dataBroker"}, {"original_string": "@MockitoAnnotations.Mock\n    private NetworkGraphService networkGraphService;", "modifier": "@MockitoAnnotations.Mock\n    private", "type": "NetworkGraphService", "declarator": "networkGraphService", "var_name": "networkGraphService"}, {"original_string": "private TopologyLinkDataChangeHandler topologyLinkDataChangeHandler;", "modifier": "private", "type": "TopologyLinkDataChangeHandler", "declarator": "topologyLinkDataChangeHandler", "var_name": "topologyLinkDataChangeHandler"}], "file": "loopremover/implementation/src/test/java/org/opendaylight/l2switch/loopremover/topology/TopologyLinkDataChangeHandlerTest.java"}, "test_case": {"identifier": "testRegisterAsDataChangeListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegisterAsDataChangeListener() throws Exception {\n        topologyLinkDataChangeHandler.registerAsDataChangeListener();\n        verify(dataBroker, times(1)).registerDataTreeChangeListener(any(DataTreeIdentifier.class),\n                any(DataTreeChangeListener.class));\n    }", "signature": "void testRegisterAsDataChangeListener()", "full_signature": "@Test public void testRegisterAsDataChangeListener()", "class_method_signature": "TopologyLinkDataChangeHandlerTest.testRegisterAsDataChangeListener()", "testcase": true, "constructor": false, "invocations": ["registerAsDataChangeListener", "registerDataTreeChangeListener", "verify", "times", "any", "any"]}, "focal_class": {"identifier": "TopologyLinkDataChangeHandler", "superclass": "", "interfaces": "implements DataTreeChangeListener<Link>", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TopologyLinkDataChangeHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TopologyLinkDataChangeHandler.class)", "var_name": "LOG"}, {"original_string": "private static final String DEFAULT_TOPOLOGY_ID = \"flow:1\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_TOPOLOGY_ID = \"flow:1\"", "var_name": "DEFAULT_TOPOLOGY_ID"}, {"original_string": "private static final long DEFAULT_GRAPH_REFRESH_DELAY = 1000;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_GRAPH_REFRESH_DELAY = 1000", "var_name": "DEFAULT_GRAPH_REFRESH_DELAY"}, {"original_string": "private final ScheduledExecutorService topologyDataChangeEventProcessor = Executors.newScheduledThreadPool(1);", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "topologyDataChangeEventProcessor = Executors.newScheduledThreadPool(1)", "var_name": "topologyDataChangeEventProcessor"}, {"original_string": "private final NetworkGraphService networkGraphService;", "modifier": "private final", "type": "NetworkGraphService", "declarator": "networkGraphService", "var_name": "networkGraphService"}, {"original_string": "private volatile boolean networkGraphRefreshScheduled = false;", "modifier": "private volatile", "type": "boolean", "declarator": "networkGraphRefreshScheduled = false", "var_name": "networkGraphRefreshScheduled"}, {"original_string": "private volatile boolean threadReschedule = false;", "modifier": "private volatile", "type": "boolean", "declarator": "threadReschedule = false", "var_name": "threadReschedule"}, {"original_string": "private long graphRefreshDelay;", "modifier": "private", "type": "long", "declarator": "graphRefreshDelay", "var_name": "graphRefreshDelay"}, {"original_string": "private String topologyId;", "modifier": "private", "type": "String", "declarator": "topologyId", "var_name": "topologyId"}, {"original_string": "private final DataBroker dataBroker;", "modifier": "private final", "type": "DataBroker", "declarator": "dataBroker", "var_name": "dataBroker"}], "methods": [{"identifier": "TopologyLinkDataChangeHandler", "parameters": "(DataBroker dataBroker, NetworkGraphService networkGraphService)", "modifiers": "public", "return": "", "signature": " TopologyLinkDataChangeHandler(DataBroker dataBroker, NetworkGraphService networkGraphService)", "full_signature": "public  TopologyLinkDataChangeHandler(DataBroker dataBroker, NetworkGraphService networkGraphService)", "class_method_signature": "TopologyLinkDataChangeHandler.TopologyLinkDataChangeHandler(DataBroker dataBroker, NetworkGraphService networkGraphService)", "testcase": false, "constructor": true}, {"identifier": "setGraphRefreshDelay", "parameters": "(long graphRefreshDelay)", "modifiers": "public", "return": "void", "signature": "void setGraphRefreshDelay(long graphRefreshDelay)", "full_signature": "public void setGraphRefreshDelay(long graphRefreshDelay)", "class_method_signature": "TopologyLinkDataChangeHandler.setGraphRefreshDelay(long graphRefreshDelay)", "testcase": false, "constructor": false}, {"identifier": "setTopologyId", "parameters": "(String topologyId)", "modifiers": "public", "return": "void", "signature": "void setTopologyId(String topologyId)", "full_signature": "public void setTopologyId(String topologyId)", "class_method_signature": "TopologyLinkDataChangeHandler.setTopologyId(String topologyId)", "testcase": false, "constructor": false}, {"identifier": "registerAsDataChangeListener", "parameters": "()", "modifiers": "public", "return": "ListenerRegistration<TopologyLinkDataChangeHandler>", "signature": "ListenerRegistration<TopologyLinkDataChangeHandler> registerAsDataChangeListener()", "full_signature": "public ListenerRegistration<TopologyLinkDataChangeHandler> registerAsDataChangeListener()", "class_method_signature": "TopologyLinkDataChangeHandler.registerAsDataChangeListener()", "testcase": false, "constructor": false}, {"identifier": "onDataTreeChanged", "parameters": "(Collection<DataTreeModification<Link>> changes)", "modifiers": "@Override public", "return": "void", "signature": "void onDataTreeChanged(Collection<DataTreeModification<Link>> changes)", "full_signature": "@Override public void onDataTreeChanged(Collection<DataTreeModification<Link>> changes)", "class_method_signature": "TopologyLinkDataChangeHandler.onDataTreeChanged(Collection<DataTreeModification<Link>> changes)", "testcase": false, "constructor": false}], "file": "loopremover/implementation/src/main/java/org/opendaylight/l2switch/loopremover/topology/TopologyLinkDataChangeHandler.java"}, "focal_method": {"identifier": "registerAsDataChangeListener", "parameters": "()", "modifiers": "public", "return": "ListenerRegistration<TopologyLinkDataChangeHandler>", "body": "public ListenerRegistration<TopologyLinkDataChangeHandler> registerAsDataChangeListener() {\n        InstanceIdentifier<Link> linkInstance = InstanceIdentifier.builder(NetworkTopology.class)\n                .child(Topology.class, new TopologyKey(new TopologyId(topologyId))).child(Link.class).build();\n        return dataBroker.registerDataTreeChangeListener(new DataTreeIdentifier<>(\n                LogicalDatastoreType.OPERATIONAL, linkInstance), this);\n    }", "signature": "ListenerRegistration<TopologyLinkDataChangeHandler> registerAsDataChangeListener()", "full_signature": "public ListenerRegistration<TopologyLinkDataChangeHandler> registerAsDataChangeListener()", "class_method_signature": "TopologyLinkDataChangeHandler.registerAsDataChangeListener()", "testcase": false, "constructor": false, "invocations": ["build", "child", "child", "builder", "registerDataTreeChangeListener"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}