{"test_class": {"identifier": "DialogDescriptorReferenceParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DIALOG_DESCRIPTOR_REFERENCE_NAME_ATTRIBUTE = \"ref\";", "modifier": "private static final", "type": "String", "declarator": "DIALOG_DESCRIPTOR_REFERENCE_NAME_ATTRIBUTE = \"ref\"", "var_name": "DIALOG_DESCRIPTOR_REFERENCE_NAME_ATTRIBUTE"}, {"original_string": "private static final String DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME = \"dialog-descriptor-ref\";", "modifier": "private static final", "type": "String", "declarator": "DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME = \"dialog-descriptor-ref\"", "var_name": "DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME"}, {"original_string": "private DialogDescriptorReferenceParser underTest;", "modifier": "private", "type": "DialogDescriptorReferenceParser", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private DialogDescriptor dialogDescriptorOne;", "modifier": "private", "type": "DialogDescriptor", "declarator": "dialogDescriptorOne", "var_name": "dialogDescriptorOne"}, {"original_string": "private DialogDescriptor dialogDescriptorTwo;", "modifier": "private", "type": "DialogDescriptor", "declarator": "dialogDescriptorTwo", "var_name": "dialogDescriptorTwo"}, {"original_string": "private Map<String, DialogDescriptor> nameToDialogDescriptor;", "modifier": "private", "type": "Map<String, DialogDescriptor>", "declarator": "nameToDialogDescriptor", "var_name": "nameToDialogDescriptor"}, {"original_string": "@Mock\n    private Element sequenceElement;", "modifier": "@Mock\n    private", "type": "Element", "declarator": "sequenceElement", "var_name": "sequenceElement"}, {"original_string": "@Mock\n    private NodeList nodeList;", "modifier": "@Mock\n    private", "type": "NodeList", "declarator": "nodeList", "var_name": "nodeList"}, {"original_string": "@Mock\n    private Element dialogDescriptorReferenceElement;", "modifier": "@Mock\n    private", "type": "Element", "declarator": "dialogDescriptorReferenceElement", "var_name": "dialogDescriptorReferenceElement"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/dom/parser/sequence/DialogDescriptorReferenceParserTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() {\n        //GIVEN\n        dialogDescriptorOne = new DialogDescriptor(null, null, null);\n        dialogDescriptorTwo = new DialogDescriptor(null, null, null);\n        List<DialogDescriptor> expected = new ArrayList<>();\n        expected.add(dialogDescriptorOne);\n\n        nameToDialogDescriptor.put(\"one\", dialogDescriptorOne);\n        nameToDialogDescriptor.put(\"two\", dialogDescriptorTwo);\n        given(sequenceElement.getElementsByTagName(DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME)).willReturn(nodeList);\n        given(nodeList.getLength()).willReturn(1);\n        given(nodeList.item(0)).willReturn(dialogDescriptorReferenceElement);\n        given(dialogDescriptorReferenceElement.getAttribute(DIALOG_DESCRIPTOR_REFERENCE_NAME_ATTRIBUTE)).willReturn(\"one\");\n        //WHEN\n        List<DialogDescriptor> result = underTest.parse(sequenceElement, nameToDialogDescriptor);\n        //THEN\n        assertEquals(expected, result);\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "DialogDescriptorReferenceParserTest.testParse()", "testcase": true, "constructor": false, "invocations": ["add", "put", "put", "willReturn", "given", "getElementsByTagName", "willReturn", "given", "getLength", "willReturn", "given", "item", "willReturn", "given", "getAttribute", "parse", "assertEquals"]}, "focal_class": {"identifier": "DialogDescriptorReferenceParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME = \"dialog-descriptor-ref\";", "modifier": "private static final", "type": "String", "declarator": "DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME = \"dialog-descriptor-ref\"", "var_name": "DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME"}], "methods": [{"identifier": "parse", "parameters": "(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "modifiers": "public", "return": "List<DialogDescriptor>", "signature": "List<DialogDescriptor> parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "full_signature": "public List<DialogDescriptor> parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "class_method_signature": "DialogDescriptorReferenceParser.parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/dom/parser/sequence/DialogDescriptorReferenceParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "modifiers": "public", "return": "List<DialogDescriptor>", "body": "public List<DialogDescriptor> parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor) {\n        List<DialogDescriptor> result = new ArrayList<>();\n        NodeList dialogDescriptorReferences = sequenceElement.getElementsByTagName(DIALOG_DESCRIPTOR_REFERENCE_TAG_NAME);\n        for (int i = 0; i < dialogDescriptorReferences.getLength(); i++) {\n            Element dialogDescriptorReferenceElement = (Element) dialogDescriptorReferences.item(i);\n            String referencedName = dialogDescriptorReferenceElement.getAttribute(\"ref\");\n            DialogDescriptor dialogDescriptor = nameToDialogDescriptor.get(referencedName);\n            if (dialogDescriptor != null) {\n                result.add(dialogDescriptor);\n            }\n        }\n        return result;\n    }", "signature": "List<DialogDescriptor> parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "full_signature": "public List<DialogDescriptor> parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "class_method_signature": "DialogDescriptorReferenceParser.parse(final Element sequenceElement, final Map<String, DialogDescriptor> nameToDialogDescriptor)", "testcase": false, "constructor": false, "invocations": ["getElementsByTagName", "getLength", "item", "getAttribute", "get", "add"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}