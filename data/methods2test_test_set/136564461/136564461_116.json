{"test_class": {"identifier": "CoordinateEd25519Test", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/ed25519/CoordinateEd25519Test.java"}, "test_case": {"identifier": "success_Encode_4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_Encode_4() {\n        Coordinate coordinate1 = new CoordinateEd25519(new BigInteger(\"466061824698566712370651010976869652622695944005000025458774533499639142642\"));\n        EncodedCoordinate encoded = coordinate1.encode();\n\n        assertThat(HexEncoder.getString(encoded.getValue()), is(\"f29829ffdb3b229fd05dc7f83c1de7ab041cbbeb4156d7442f3e23de19c80701\"));\n    }", "signature": "void success_Encode_4()", "full_signature": "@Test public void success_Encode_4()", "class_method_signature": "CoordinateEd25519Test.success_Encode_4()", "testcase": true, "constructor": false, "invocations": ["encode", "assertThat", "getString", "getValue", "is"]}, "focal_class": {"identifier": "CoordinateEd25519", "superclass": "extends Coordinate", "interfaces": "", "fields": [{"original_string": "public static final CoordinateEd25519 ONE = new CoordinateEd25519(BigInteger.ONE);", "modifier": "public static final", "type": "CoordinateEd25519", "declarator": "ONE = new CoordinateEd25519(BigInteger.ONE)", "var_name": "ONE"}, {"original_string": "private static final Curve curve = Curve25519.getInstance();", "modifier": "private static final", "type": "Curve", "declarator": "curve = Curve25519.getInstance()", "var_name": "curve"}], "methods": [{"identifier": "CoordinateEd25519", "parameters": "(BigInteger integer)", "modifiers": "", "return": "", "signature": " CoordinateEd25519(BigInteger integer)", "full_signature": "  CoordinateEd25519(BigInteger integer)", "class_method_signature": "CoordinateEd25519.CoordinateEd25519(BigInteger integer)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Coordinate val)", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate add(Coordinate val)", "full_signature": "@Override public final Coordinate add(Coordinate val)", "class_method_signature": "CoordinateEd25519.add(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "divide", "parameters": "(Coordinate val)", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate divide(Coordinate val)", "full_signature": "@Override public final Coordinate divide(Coordinate val)", "class_method_signature": "CoordinateEd25519.divide(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(Coordinate val)", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate multiply(Coordinate val)", "full_signature": "@Override public final Coordinate multiply(Coordinate val)", "class_method_signature": "CoordinateEd25519.multiply(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(Coordinate val)", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate subtract(Coordinate val)", "full_signature": "@Override public final Coordinate subtract(Coordinate val)", "class_method_signature": "CoordinateEd25519.subtract(Coordinate val)", "testcase": false, "constructor": false}, {"identifier": "mod", "parameters": "()", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate mod()", "full_signature": "@Override public final Coordinate mod()", "class_method_signature": "CoordinateEd25519.mod()", "testcase": false, "constructor": false}, {"identifier": "inverse", "parameters": "()", "modifiers": "@Override public final", "return": "Coordinate", "signature": "Coordinate inverse()", "full_signature": "@Override public final Coordinate inverse()", "class_method_signature": "CoordinateEd25519.inverse()", "testcase": false, "constructor": false}, {"identifier": "powerMod", "parameters": "(BigInteger exponent)", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate powerMod(BigInteger exponent)", "full_signature": "@Override public Coordinate powerMod(BigInteger exponent)", "class_method_signature": "CoordinateEd25519.powerMod(BigInteger exponent)", "testcase": false, "constructor": false}, {"identifier": "negate", "parameters": "()", "modifiers": "@Override public", "return": "Coordinate", "signature": "Coordinate negate()", "full_signature": "@Override public Coordinate negate()", "class_method_signature": "CoordinateEd25519.negate()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "EncodedCoordinate", "signature": "EncodedCoordinate encode()", "full_signature": "@Override public EncodedCoordinate encode()", "class_method_signature": "CoordinateEd25519.encode()", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/ed25519/CoordinateEd25519.java"}, "focal_method": {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "EncodedCoordinate", "body": "@Override\n    public EncodedCoordinate encode() {\n        byte[] seed = ByteUtils.reverse(ArrayUtils.toByteArray(value, 32));\n        return new EncodedCoordinateEd25519(seed);\n    }", "signature": "EncodedCoordinate encode()", "full_signature": "@Override public EncodedCoordinate encode()", "class_method_signature": "CoordinateEd25519.encode()", "testcase": false, "constructor": false, "invocations": ["reverse", "toByteArray"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}