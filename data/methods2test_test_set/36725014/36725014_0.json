{"test_class": {"identifier": "InsertTest", "superclass": "", "interfaces": "", "fields": [], "file": "squel/src/test/java/com/github/gchudnov/squel/InsertTest.java"}, "test_case": {"identifier": "fromQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromQuery() {\n        QueryBuilder sel = Squel.select().from(\"students\").where(\"a = ?\", 2);\n        QueryBuilder sql = Squel.insert()\n                .into(\"table\")\n                .fromQuery(Arrays.asList(\"field1\", \"field2\"), sel);\n\n        String actual = sql.toString();\n        String expected = \"INSERT INTO table (field1, field2) (SELECT * FROM students WHERE (a = 2))\";\n        assertEquals(expected, actual);\n    }", "signature": "void fromQuery()", "full_signature": "@Test public void fromQuery()", "class_method_signature": "InsertTest.fromQuery()", "testcase": true, "constructor": false, "invocations": ["where", "from", "select", "fromQuery", "into", "insert", "asList", "toString", "assertEquals"]}, "focal_class": {"identifier": "Insert", "superclass": "extends QueryBuilder", "interfaces": "", "fields": [], "methods": [{"identifier": "Insert", "parameters": "(QueryBuilderOptions options)", "modifiers": "", "return": "", "signature": " Insert(QueryBuilderOptions options)", "full_signature": "  Insert(QueryBuilderOptions options)", "class_method_signature": "Insert.Insert(QueryBuilderOptions options)", "testcase": false, "constructor": true}, {"identifier": "into", "parameters": "(String table)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder into(String table)", "full_signature": "@Override public QueryBuilder into(String table)", "class_method_signature": "Insert.into(String table)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String field, T value)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder set(String field, T value)", "full_signature": "@Override public QueryBuilder set(String field, T value)", "class_method_signature": "Insert.set(String field, T value)", "testcase": false, "constructor": false}, {"identifier": "fromQuery", "parameters": "(Iterable<String> fields, QueryBuilder query)", "modifiers": "@Override public", "return": "QueryBuilder", "signature": "QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "full_signature": "@Override public QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "class_method_signature": "Insert.fromQuery(Iterable<String> fields, QueryBuilder query)", "testcase": false, "constructor": false}], "file": "squel/src/main/java/com/github/gchudnov/squel/Insert.java"}, "focal_method": {"identifier": "fromQuery", "parameters": "(Iterable<String> fields, QueryBuilder query)", "modifiers": "@Override public", "return": "QueryBuilder", "body": "@Override\n    public QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query) {\n        InsertFieldsFromQueryBlock block = (InsertFieldsFromQueryBlock) mBlocks.get(3);\n        block.setFromQuery(fields, query);\n        return this;\n    }", "signature": "QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "full_signature": "@Override public QueryBuilder fromQuery(Iterable<String> fields, QueryBuilder query)", "class_method_signature": "Insert.fromQuery(Iterable<String> fields, QueryBuilder query)", "testcase": false, "constructor": false, "invocations": ["get", "setFromQuery"]}, "repository": {"repo_id": 36725014, "url": "https://github.com/gchudnov/squel-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 456, "license": "licensed"}}