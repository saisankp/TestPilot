{"test_class": {"identifier": "SecurityConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "unirest/src/test/java/kong/unirest/apache/SecurityConfigTest.java"}, "test_case": {"identifier": "willTakeConfigIntoAccountWhenCreatingManager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void willTakeConfigIntoAccountWhenCreatingManager() {\n        Config config = new Config().concurrency(88, 42);\n\n        SecurityConfig sec = new SecurityConfig(config);\n\n        PoolingHttpClientConnectionManager manager = sec.createManager();\n\n        assertEquals(88, manager.getMaxTotal());\n        assertEquals(42, manager.getDefaultMaxPerRoute());\n    }", "signature": "void willTakeConfigIntoAccountWhenCreatingManager()", "full_signature": "@Test public void willTakeConfigIntoAccountWhenCreatingManager()", "class_method_signature": "SecurityConfigTest.willTakeConfigIntoAccountWhenCreatingManager()", "testcase": true, "constructor": false, "invocations": ["concurrency", "createManager", "assertEquals", "getMaxTotal", "assertEquals", "getDefaultMaxPerRoute"]}, "focal_class": {"identifier": "SecurityConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Config config;", "modifier": "private final", "type": "Config", "declarator": "config", "var_name": "config"}, {"original_string": "private SSLContext sslContext;", "modifier": "private", "type": "SSLContext", "declarator": "sslContext", "var_name": "sslContext"}, {"original_string": "private SSLConnectionSocketFactory sslSocketFactory;", "modifier": "private", "type": "SSLConnectionSocketFactory", "declarator": "sslSocketFactory", "var_name": "sslSocketFactory"}], "methods": [{"identifier": "SecurityConfig", "parameters": "(Config config)", "modifiers": "public", "return": "", "signature": " SecurityConfig(Config config)", "full_signature": "public  SecurityConfig(Config config)", "class_method_signature": "SecurityConfig.SecurityConfig(Config config)", "testcase": false, "constructor": true}, {"identifier": "createManager", "parameters": "()", "modifiers": "public", "return": "PoolingHttpClientConnectionManager", "signature": "PoolingHttpClientConnectionManager createManager()", "full_signature": "public PoolingHttpClientConnectionManager createManager()", "class_method_signature": "SecurityConfig.createManager()", "testcase": false, "constructor": false}, {"identifier": "buildSocketFactory", "parameters": "()", "modifiers": "private", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> buildSocketFactory()", "full_signature": "private Registry<ConnectionSocketFactory> buildSocketFactory()", "class_method_signature": "SecurityConfig.buildSocketFactory()", "testcase": false, "constructor": false}, {"identifier": "createDefaultRegistry", "parameters": "()", "modifiers": "private", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> createDefaultRegistry()", "full_signature": "private Registry<ConnectionSocketFactory> createDefaultRegistry()", "class_method_signature": "SecurityConfig.createDefaultRegistry()", "testcase": false, "constructor": false}, {"identifier": "createCustomSslContext", "parameters": "()", "modifiers": "private", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> createCustomSslContext()", "full_signature": "private Registry<ConnectionSocketFactory> createCustomSslContext()", "class_method_signature": "SecurityConfig.createCustomSslContext()", "testcase": false, "constructor": false}, {"identifier": "createDisabledSSLContext", "parameters": "()", "modifiers": "private", "return": "Registry<ConnectionSocketFactory>", "signature": "Registry<ConnectionSocketFactory> createDisabledSSLContext()", "full_signature": "private Registry<ConnectionSocketFactory> createDisabledSSLContext()", "class_method_signature": "SecurityConfig.createDisabledSSLContext()", "testcase": false, "constructor": false}, {"identifier": "getSocketFactory", "parameters": "()", "modifiers": "private", "return": "SSLConnectionSocketFactory", "signature": "SSLConnectionSocketFactory getSocketFactory()", "full_signature": "private SSLConnectionSocketFactory getSocketFactory()", "class_method_signature": "SecurityConfig.getSocketFactory()", "testcase": false, "constructor": false}, {"identifier": "getHostnameVerifier", "parameters": "()", "modifiers": "private", "return": "HostnameVerifier", "signature": "HostnameVerifier getHostnameVerifier()", "full_signature": "private HostnameVerifier getHostnameVerifier()", "class_method_signature": "SecurityConfig.getHostnameVerifier()", "testcase": false, "constructor": false}, {"identifier": "createSslContext", "parameters": "()", "modifiers": "private", "return": "SSLContext", "signature": "SSLContext createSslContext()", "full_signature": "private SSLContext createSslContext()", "class_method_signature": "SecurityConfig.createSslContext()", "testcase": false, "constructor": false}, {"identifier": "configureSecurity", "parameters": "(HttpClientBuilder cb)", "modifiers": "public", "return": "void", "signature": "void configureSecurity(HttpClientBuilder cb)", "full_signature": "public void configureSecurity(HttpClientBuilder cb)", "class_method_signature": "SecurityConfig.configureSecurity(HttpClientBuilder cb)", "testcase": false, "constructor": false}, {"identifier": "disableSsl", "parameters": "(HttpClientBuilder cb)", "modifiers": "private", "return": "void", "signature": "void disableSsl(HttpClientBuilder cb)", "full_signature": "private void disableSsl(HttpClientBuilder cb)", "class_method_signature": "SecurityConfig.disableSsl(HttpClientBuilder cb)", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/apache/SecurityConfig.java"}, "focal_method": {"identifier": "createManager", "parameters": "()", "modifiers": "public", "return": "PoolingHttpClientConnectionManager", "body": "public PoolingHttpClientConnectionManager createManager() {\n        PoolingHttpClientConnectionManager manager = new PoolingHttpClientConnectionManager(buildSocketFactory(),\n                null, null, null,\n                config.getTTL(), TimeUnit.MILLISECONDS);\n\n        manager.setMaxTotal(config.getMaxConnections());\n        manager.setDefaultMaxPerRoute(config.getMaxPerRoutes());\n        return manager;\n    }", "signature": "PoolingHttpClientConnectionManager createManager()", "full_signature": "public PoolingHttpClientConnectionManager createManager()", "class_method_signature": "SecurityConfig.createManager()", "testcase": false, "constructor": false, "invocations": ["buildSocketFactory", "getTTL", "setMaxTotal", "getMaxConnections", "setDefaultMaxPerRoute", "getMaxPerRoutes"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}