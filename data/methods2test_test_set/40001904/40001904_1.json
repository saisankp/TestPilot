{"test_class": {"identifier": "CategoryGraphTest", "superclass": "extends BaseJWPLTest", "interfaces": "", "fields": [{"original_string": "private static CategoryGraph catGraph;", "modifier": "private static", "type": "CategoryGraph", "declarator": "catGraph", "var_name": "catGraph"}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/test/java/de/tudarmstadt/ukp/wikipedia/api/CategoryGraphTest.java"}, "test_case": {"identifier": "testDepth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDepth(){\n        try {\n            double depth = catGraph.getDepth();\n            assertEquals(4, depth, 0.00001);\n        } catch (WikiApiException e) {\n            fail(\"Getting depth of the CategoryGraph throws exception.\");\n        }\n    }", "signature": "void testDepth()", "full_signature": "@Test public void testDepth()", "class_method_signature": "CategoryGraphTest.testDepth()", "testcase": true, "constructor": false, "invocations": ["getDepth", "assertEquals", "fail"]}, "focal_class": {"identifier": "CategoryGraph", "superclass": "", "interfaces": "implements WikiConstants, Serializable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass())", "var_name": "logger"}, {"original_string": "static final long serialVersionUID = 1l;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = 1l", "var_name": "serialVersionUID"}, {"original_string": "private Wikipedia wiki;", "modifier": "private", "type": "Wikipedia", "declarator": "wiki", "var_name": "wiki"}, {"original_string": "private DirectedGraph<Integer, DefaultEdge> graph;", "modifier": "private", "type": "DirectedGraph<Integer, DefaultEdge>", "declarator": "graph", "var_name": "graph"}, {"original_string": "private UndirectedGraph<Integer, DefaultEdge> undirectedGraph;", "modifier": "private", "type": "UndirectedGraph<Integer, DefaultEdge>", "declarator": "undirectedGraph", "var_name": "undirectedGraph"}, {"original_string": "private Map<Integer, Integer> degreeDistribution;", "modifier": "private", "type": "Map<Integer, Integer>", "declarator": "degreeDistribution", "var_name": "degreeDistribution"}, {"original_string": "private int numberOfNodes;", "modifier": "private", "type": "int", "declarator": "numberOfNodes", "var_name": "numberOfNodes"}, {"original_string": "private int numberOfEdges;", "modifier": "private", "type": "int", "declarator": "numberOfEdges", "var_name": "numberOfEdges"}, {"original_string": "private Map<Integer, Integer> hyponymCountMap = null;", "modifier": "private", "type": "Map<Integer, Integer>", "declarator": "hyponymCountMap = null", "var_name": "hyponymCountMap"}, {"original_string": "private String hyponymCountMapFilename = \"hypoCountMap\";", "modifier": "private", "type": "String", "declarator": "hyponymCountMapFilename = \"hypoCountMap\"", "var_name": "hyponymCountMapFilename"}, {"original_string": "private Map<Integer, List<Integer>> rootPathMap = null;", "modifier": "private", "type": "Map<Integer, List<Integer>>", "declarator": "rootPathMap = null", "var_name": "rootPathMap"}, {"original_string": "private String rootPathMapFilename = \"rootPathMap\";", "modifier": "private", "type": "String", "declarator": "rootPathMapFilename = \"rootPathMap\"", "var_name": "rootPathMapFilename"}, {"original_string": "private double averageShortestPathLength = Double.NEGATIVE_INFINITY;", "modifier": "private", "type": "double", "declarator": "averageShortestPathLength = Double.NEGATIVE_INFINITY", "var_name": "averageShortestPathLength"}, {"original_string": "private double diameter                  = Double.NEGATIVE_INFINITY;", "modifier": "private", "type": "double", "declarator": "diameter                  = Double.NEGATIVE_INFINITY", "var_name": "diameter"}, {"original_string": "private double averageDegree             = Double.NEGATIVE_INFINITY;", "modifier": "private", "type": "double", "declarator": "averageDegree             = Double.NEGATIVE_INFINITY", "var_name": "averageDegree"}, {"original_string": "private double clusterCoefficient        = Double.NEGATIVE_INFINITY;", "modifier": "private", "type": "double", "declarator": "clusterCoefficient        = Double.NEGATIVE_INFINITY", "var_name": "clusterCoefficient"}, {"original_string": "private double depth                     = Double.NEGATIVE_INFINITY;", "modifier": "private", "type": "double", "declarator": "depth                     = Double.NEGATIVE_INFINITY", "var_name": "depth"}], "methods": [{"identifier": "CategoryGraph", "parameters": "()", "modifiers": "public", "return": "", "signature": " CategoryGraph()", "full_signature": "public  CategoryGraph()", "class_method_signature": "CategoryGraph.CategoryGraph()", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, File location)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, File location)", "full_signature": "public  CategoryGraph(Wikipedia pWiki, File location)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, File location)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki)", "full_signature": "public  CategoryGraph(Wikipedia pWiki)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, List<String> filterList)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, List<String> filterList)", "full_signature": "public  CategoryGraph(Wikipedia pWiki, List<String> filterList)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, List<String> filterList)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, Iterable<Category> categories)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, Iterable<Category> categories)", "full_signature": "public  CategoryGraph(Wikipedia pWiki, Iterable<Category> categories)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, Iterable<Category> categories)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, Iterable<Category> categories, List<String> filterList)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, Iterable<Category> categories, List<String> filterList)", "full_signature": "public  CategoryGraph(Wikipedia pWiki, Iterable<Category> categories, List<String> filterList)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, Iterable<Category> categories, List<String> filterList)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, Set<Integer> pPageIDs)", "modifiers": "protected", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs)", "full_signature": "protected  CategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs)", "testcase": false, "constructor": true}, {"identifier": "CategoryGraph", "parameters": "(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "modifiers": "public", "return": "", "signature": " CategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "full_signature": "public  CategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "class_method_signature": "CategoryGraph.CategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "testcase": false, "constructor": true}, {"identifier": "constructCategoryGraph", "parameters": "(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "modifiers": "private", "return": "void", "signature": "void constructCategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "full_signature": "private void constructCategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "class_method_signature": "CategoryGraph.constructCategoryGraph(Wikipedia pWiki, DirectedGraph<Integer,DefaultEdge> pGraph)", "testcase": false, "constructor": false}, {"identifier": "constructCategoryGraph", "parameters": "(Wikipedia pWiki, Set<Integer> pPageIDs, List<String> filterList)", "modifiers": "private", "return": "void", "signature": "void constructCategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs, List<String> filterList)", "full_signature": "private void constructCategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs, List<String> filterList)", "class_method_signature": "CategoryGraph.constructCategoryGraph(Wikipedia pWiki, Set<Integer> pPageIDs, List<String> filterList)", "testcase": false, "constructor": false}, {"identifier": "matchesFilter", "parameters": "(Category cat, List<String> filterList)", "modifiers": "private", "return": "boolean", "signature": "boolean matchesFilter(Category cat, List<String> filterList)", "full_signature": "private boolean matchesFilter(Category cat, List<String> filterList)", "class_method_signature": "CategoryGraph.matchesFilter(Category cat, List<String> filterList)", "testcase": false, "constructor": false}, {"identifier": "getLCS", "parameters": "(Category category1, Category category2)", "modifiers": "public", "return": "Category", "signature": "Category getLCS(Category category1, Category category2)", "full_signature": "public Category getLCS(Category category1, Category category2)", "class_method_signature": "CategoryGraph.getLCS(Category category1, Category category2)", "testcase": false, "constructor": false}, {"identifier": "getLCSId", "parameters": "(int categoryPageId1, int categoryPageId2)", "modifiers": "public", "return": "int", "signature": "int getLCSId(int categoryPageId1, int categoryPageId2)", "full_signature": "public int getLCSId(int categoryPageId1, int categoryPageId2)", "class_method_signature": "CategoryGraph.getLCSId(int categoryPageId1, int categoryPageId2)", "testcase": false, "constructor": false}, {"identifier": "getLCS", "parameters": "(int categoryPageId1, int categoryPageId2)", "modifiers": "public", "return": "Category", "signature": "Category getLCS(int categoryPageId1, int categoryPageId2)", "full_signature": "public Category getLCS(int categoryPageId1, int categoryPageId2)", "class_method_signature": "CategoryGraph.getLCS(int categoryPageId1, int categoryPageId2)", "testcase": false, "constructor": false}, {"identifier": "getPathToRoot", "parameters": "(int root, int node)", "modifiers": "private", "return": "List<Integer>", "signature": "List<Integer> getPathToRoot(int root, int node)", "full_signature": "private List<Integer> getPathToRoot(int root, int node)", "class_method_signature": "CategoryGraph.getPathToRoot(int root, int node)", "testcase": false, "constructor": false}, {"identifier": "expandPath", "parameters": "(int root, int currentNode, List<Integer> currentPath, List<Integer> shortestPath)", "modifiers": "private", "return": "void", "signature": "void expandPath(int root, int currentNode, List<Integer> currentPath, List<Integer> shortestPath)", "full_signature": "private void expandPath(int root, int currentNode, List<Integer> currentPath, List<Integer> shortestPath)", "class_method_signature": "CategoryGraph.expandPath(int root, int currentNode, List<Integer> currentPath, List<Integer> shortestPath)", "testcase": false, "constructor": false}, {"identifier": "getPathLengthInEdges", "parameters": "(Category node1, Category node2)", "modifiers": "public", "return": "int", "signature": "int getPathLengthInEdges(Category node1, Category node2)", "full_signature": "public int getPathLengthInEdges(Category node1, Category node2)", "class_method_signature": "CategoryGraph.getPathLengthInEdges(Category node1, Category node2)", "testcase": false, "constructor": false}, {"identifier": "getTaxonomicallyBoundPathLengthInEdges", "parameters": "(Category cat1, Category cat2)", "modifiers": "public", "return": "int", "signature": "int getTaxonomicallyBoundPathLengthInEdges(Category cat1, Category cat2)", "full_signature": "public int getTaxonomicallyBoundPathLengthInEdges(Category cat1, Category cat2)", "class_method_signature": "CategoryGraph.getTaxonomicallyBoundPathLengthInEdges(Category cat1, Category cat2)", "testcase": false, "constructor": false}, {"identifier": "getTaxonomicallyBoundPathLengthInNodes", "parameters": "(Category cat1, Category cat2)", "modifiers": "public", "return": "int", "signature": "int getTaxonomicallyBoundPathLengthInNodes(Category cat1, Category cat2)", "full_signature": "public int getTaxonomicallyBoundPathLengthInNodes(Category cat1, Category cat2)", "class_method_signature": "CategoryGraph.getTaxonomicallyBoundPathLengthInNodes(Category cat1, Category cat2)", "testcase": false, "constructor": false}, {"identifier": "getPathLengthInNodes", "parameters": "(Category node1, Category node2)", "modifiers": "public", "return": "int", "signature": "int getPathLengthInNodes(Category node1, Category node2)", "full_signature": "public int getPathLengthInNodes(Category node1, Category node2)", "class_method_signature": "CategoryGraph.getPathLengthInNodes(Category node1, Category node2)", "testcase": false, "constructor": false}, {"identifier": "createHyponymCountMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createHyponymCountMap()", "full_signature": "private void createHyponymCountMap()", "class_method_signature": "CategoryGraph.createHyponymCountMap()", "testcase": false, "constructor": false}, {"identifier": "scaleHyponymCountMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scaleHyponymCountMap()", "full_signature": "private void scaleHyponymCountMap()", "class_method_signature": "CategoryGraph.scaleHyponymCountMap()", "testcase": false, "constructor": false}, {"identifier": "__getLeafNodes", "parameters": "()", "modifiers": "protected", "return": "Set<Integer>", "signature": "Set<Integer> __getLeafNodes()", "full_signature": "protected Set<Integer> __getLeafNodes()", "class_method_signature": "CategoryGraph.__getLeafNodes()", "testcase": false, "constructor": false}, {"identifier": "getIntrinsicInformationContent", "parameters": "(Category category)", "modifiers": "public", "return": "double", "signature": "double getIntrinsicInformationContent(Category category)", "full_signature": "public double getIntrinsicInformationContent(Category category)", "class_method_signature": "CategoryGraph.getIntrinsicInformationContent(Category category)", "testcase": false, "constructor": false}, {"identifier": "createRootPathMap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createRootPathMap()", "full_signature": "public void createRootPathMap()", "class_method_signature": "CategoryGraph.createRootPathMap()", "testcase": false, "constructor": false}, {"identifier": "deleteRootPathMap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteRootPathMap()", "full_signature": "public void deleteRootPathMap()", "class_method_signature": "CategoryGraph.deleteRootPathMap()", "testcase": false, "constructor": false}, {"identifier": "fillRootPathMap", "parameters": "(List<Integer> queue)", "modifiers": "private", "return": "void", "signature": "void fillRootPathMap(List<Integer> queue)", "full_signature": "private void fillRootPathMap(List<Integer> queue)", "class_method_signature": "CategoryGraph.fillRootPathMap(List<Integer> queue)", "testcase": false, "constructor": false}, {"identifier": "getInDegree", "parameters": "(int pageID)", "modifiers": "protected", "return": "int", "signature": "int getInDegree(int pageID)", "full_signature": "protected int getInDegree(int pageID)", "class_method_signature": "CategoryGraph.getInDegree(int pageID)", "testcase": false, "constructor": false}, {"identifier": "getOutDegree", "parameters": "(int pageID)", "modifiers": "protected", "return": "int", "signature": "int getOutDegree(int pageID)", "full_signature": "protected int getOutDegree(int pageID)", "class_method_signature": "CategoryGraph.getOutDegree(int pageID)", "testcase": false, "constructor": false}, {"identifier": "__getChildren", "parameters": "(int pageID)", "modifiers": "protected", "return": "Set<Integer>", "signature": "Set<Integer> __getChildren(int pageID)", "full_signature": "protected Set<Integer> __getChildren(int pageID)", "class_method_signature": "CategoryGraph.__getChildren(int pageID)", "testcase": false, "constructor": false}, {"identifier": "__getParents", "parameters": "(int pageID)", "modifiers": "protected", "return": "Set<Integer>", "signature": "Set<Integer> __getParents(int pageID)", "full_signature": "protected Set<Integer> __getParents(int pageID)", "class_method_signature": "CategoryGraph.__getParents(int pageID)", "testcase": false, "constructor": false}, {"identifier": "getLargestConnectedComponent", "parameters": "()", "modifiers": "public", "return": "CategoryGraph", "signature": "CategoryGraph getLargestConnectedComponent()", "full_signature": "public CategoryGraph getLargestConnectedComponent()", "class_method_signature": "CategoryGraph.getLargestConnectedComponent()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfNodes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfNodes()", "full_signature": "public int getNumberOfNodes()", "class_method_signature": "CategoryGraph.getNumberOfNodes()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfEdges", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfEdges()", "full_signature": "public int getNumberOfEdges()", "class_method_signature": "CategoryGraph.getNumberOfEdges()", "testcase": false, "constructor": false}, {"identifier": "getAverageShortestPathLength", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAverageShortestPathLength()", "full_signature": "public double getAverageShortestPathLength()", "class_method_signature": "CategoryGraph.getAverageShortestPathLength()", "testcase": false, "constructor": false}, {"identifier": "getDiameter", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDiameter()", "full_signature": "public double getDiameter()", "class_method_signature": "CategoryGraph.getDiameter()", "testcase": false, "constructor": false}, {"identifier": "getAverageDegree", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAverageDegree()", "full_signature": "public double getAverageDegree()", "class_method_signature": "CategoryGraph.getAverageDegree()", "testcase": false, "constructor": false}, {"identifier": "getClusterCoefficient", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getClusterCoefficient()", "full_signature": "public double getClusterCoefficient()", "class_method_signature": "CategoryGraph.getClusterCoefficient()", "testcase": false, "constructor": false}, {"identifier": "getDegreeDistribution", "parameters": "()", "modifiers": "public", "return": "Map<Integer, Integer>", "signature": "Map<Integer, Integer> getDegreeDistribution()", "full_signature": "public Map<Integer, Integer> getDegreeDistribution()", "class_method_signature": "CategoryGraph.getDegreeDistribution()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfNeighborConnections", "parameters": "(int node)", "modifiers": "private", "return": "int", "signature": "int getNumberOfNeighborConnections(int node)", "full_signature": "private int getNumberOfNeighborConnections(int node)", "class_method_signature": "CategoryGraph.getNumberOfNeighborConnections(int node)", "testcase": false, "constructor": false}, {"identifier": "getNeighbors", "parameters": "(int node)", "modifiers": "protected", "return": "Set<Integer>", "signature": "Set<Integer> getNeighbors(int node)", "full_signature": "protected Set<Integer> getNeighbors(int node)", "class_method_signature": "CategoryGraph.getNeighbors(int node)", "testcase": false, "constructor": false}, {"identifier": "updateDegreeDistribution", "parameters": "(int nodeDegree)", "modifiers": "private", "return": "void", "signature": "void updateDegreeDistribution(int nodeDegree)", "full_signature": "private void updateDegreeDistribution(int nodeDegree)", "class_method_signature": "CategoryGraph.updateDegreeDistribution(int nodeDegree)", "testcase": false, "constructor": false}, {"identifier": "setGraphParameters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setGraphParameters()", "full_signature": "private void setGraphParameters()", "class_method_signature": "CategoryGraph.setGraphParameters()", "testcase": false, "constructor": false}, {"identifier": "computeShortestPathLenghts", "parameters": "(int pStartNode, double pShortestPathLengthSum, double pMaxPathLength, Set<Integer> pWasSource)", "modifiers": "private", "return": "double[]", "signature": "double[] computeShortestPathLenghts(int pStartNode, double pShortestPathLengthSum, double pMaxPathLength, Set<Integer> pWasSource)", "full_signature": "private double[] computeShortestPathLenghts(int pStartNode, double pShortestPathLengthSum, double pMaxPathLength, Set<Integer> pWasSource)", "class_method_signature": "CategoryGraph.computeShortestPathLenghts(int pStartNode, double pShortestPathLengthSum, double pMaxPathLength, Set<Integer> pWasSource)", "testcase": false, "constructor": false}, {"identifier": "getDepth", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDepth()", "full_signature": "public double getDepth()", "class_method_signature": "CategoryGraph.getDepth()", "testcase": false, "constructor": false}, {"identifier": "getDepthFromRootPathMap", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double getDepthFromRootPathMap()", "full_signature": "private double getDepthFromRootPathMap()", "class_method_signature": "CategoryGraph.getDepthFromRootPathMap()", "testcase": false, "constructor": false}, {"identifier": "computeDepth", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double computeDepth()", "full_signature": "private double computeDepth()", "class_method_signature": "CategoryGraph.computeDepth()", "testcase": false, "constructor": false}, {"identifier": "getGraphInfo", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGraphInfo()", "full_signature": "public String getGraphInfo()", "class_method_signature": "CategoryGraph.getGraphInfo()", "testcase": false, "constructor": false}, {"identifier": "getGraph", "parameters": "()", "modifiers": "public", "return": "DirectedGraph<Integer, DefaultEdge>", "signature": "DirectedGraph<Integer, DefaultEdge> getGraph()", "full_signature": "public DirectedGraph<Integer, DefaultEdge> getGraph()", "class_method_signature": "CategoryGraph.getGraph()", "testcase": false, "constructor": false}, {"identifier": "getUndirectedGraph", "parameters": "()", "modifiers": "public", "return": "UndirectedGraph<Integer, DefaultEdge>", "signature": "UndirectedGraph<Integer, DefaultEdge> getUndirectedGraph()", "full_signature": "public UndirectedGraph<Integer, DefaultEdge> getUndirectedGraph()", "class_method_signature": "CategoryGraph.getUndirectedGraph()", "testcase": false, "constructor": false}, {"identifier": "getHyponymCountMap", "parameters": "()", "modifiers": "public", "return": "Map<Integer,Integer>", "signature": "Map<Integer,Integer> getHyponymCountMap()", "full_signature": "public Map<Integer,Integer> getHyponymCountMap()", "class_method_signature": "CategoryGraph.getHyponymCountMap()", "testcase": false, "constructor": false}, {"identifier": "getRootPathMap", "parameters": "()", "modifiers": "public", "return": "Map<Integer,List<Integer>>", "signature": "Map<Integer,List<Integer>> getRootPathMap()", "full_signature": "public Map<Integer,List<Integer>> getRootPathMap()", "class_method_signature": "CategoryGraph.getRootPathMap()", "testcase": false, "constructor": false}, {"identifier": "serializeMap", "parameters": "(Map<?,?> map, File file)", "modifiers": "private", "return": "void", "signature": "void serializeMap(Map<?,?> map, File file)", "full_signature": "private void serializeMap(Map<?,?> map, File file)", "class_method_signature": "CategoryGraph.serializeMap(Map<?,?> map, File file)", "testcase": false, "constructor": false}, {"identifier": "deserializeMap", "parameters": "(File file)", "modifiers": "private", "return": "Map", "signature": "Map deserializeMap(File file)", "full_signature": "private Map deserializeMap(File file)", "class_method_signature": "CategoryGraph.deserializeMap(File file)", "testcase": false, "constructor": false}, {"identifier": "saveGraph", "parameters": "(String destination)", "modifiers": "public", "return": "void", "signature": "void saveGraph(String destination)", "full_signature": "public void saveGraph(String destination)", "class_method_signature": "CategoryGraph.saveGraph(String destination)", "testcase": false, "constructor": false}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/main/java/de/tudarmstadt/ukp/wikipedia/api/CategoryGraph.java"}, "focal_method": {"identifier": "getDepth", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double getDepth() throws WikiApiException {\n        if (depth < 0) {    // has not been initialized\n            if (rootPathMap != null) {\n                this.depth = getDepthFromRootPathMap();\n                logger.info(\"Getting depth from RootPathMap: \" + this.depth);\n\n            }\n            else {\n                depth = computeDepth();\n                logger.info(\"Computing depth of the hierarchy: \" + this.depth);\n            }\n        }\n        return depth;\n    }", "signature": "double getDepth()", "full_signature": "public double getDepth()", "class_method_signature": "CategoryGraph.getDepth()", "testcase": false, "constructor": false, "invocations": ["getDepthFromRootPathMap", "info", "computeDepth", "info"]}, "repository": {"repo_id": 40001904, "url": "https://github.com/dkpro/dkpro-jwpl", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 68, "size": 6884, "license": "licensed"}}