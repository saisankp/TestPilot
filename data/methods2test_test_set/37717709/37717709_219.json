{"test_class": {"identifier": "TestJVoiceXmlPromptAccumulator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JVoiceXmlPromptAccumulator accumulator;", "modifier": "private", "type": "JVoiceXmlPromptAccumulator", "declarator": "accumulator", "var_name": "accumulator"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/implementation/jvxml/TestJVoiceXmlPromptAccumulator.java"}, "test_case": {"identifier": "testGetLastSpeakableText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLastSpeakableText() throws Exception {\n        Assert.assertNull(accumulator.getLastSpeakableText());\n        final SsmlDocument ssml1 = new SsmlDocument();\n        final Speak speak1 = ssml1.getSpeak();\n        speak1.addText(\"this is a test\");\n        final SpeakableText speakable1 =\n                new SpeakableSsmlText(ssml1);\n        accumulator.queuePrompt(speakable1);\n        Assert.assertEquals(speakable1, accumulator.getLastSpeakableText());\n        final SsmlDocument ssml2 = new SsmlDocument();\n        final Speak speak2 = ssml2.getSpeak();\n        speak2.addText(\"this is another test\");\n        final SpeakableText speakable2 = new SpeakableSsmlText(ssml2);\n        accumulator.queuePrompt(speakable2);\n        Assert.assertEquals(speakable2, accumulator.getLastSpeakableText());\n    }", "signature": "void testGetLastSpeakableText()", "full_signature": "@Test public void testGetLastSpeakableText()", "class_method_signature": "TestJVoiceXmlPromptAccumulator.testGetLastSpeakableText()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getLastSpeakableText", "getSpeak", "addText", "queuePrompt", "assertEquals", "getLastSpeakableText", "getSpeak", "addText", "queuePrompt", "assertEquals", "getLastSpeakableText"]}, "focal_class": {"identifier": "JVoiceXmlPromptAccumulator", "superclass": "", "interfaces": "implements PromptAccumulator", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(JVoiceXmlPromptAccumulator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(JVoiceXmlPromptAccumulator.class)", "var_name": "LOGGER"}, {"original_string": "private final ImplementationPlatform platform;", "modifier": "private final", "type": "ImplementationPlatform", "declarator": "platform", "var_name": "platform"}, {"original_string": "private long timeout;", "modifier": "private", "type": "long", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final List<SpeakableText> prompts;", "modifier": "private final", "type": "List<SpeakableText>", "declarator": "prompts", "var_name": "prompts"}], "methods": [{"identifier": "JVoiceXmlPromptAccumulator", "parameters": "(\n            final ImplementationPlatform implementationPlatform)", "modifiers": "", "return": "", "signature": " JVoiceXmlPromptAccumulator(\n            final ImplementationPlatform implementationPlatform)", "full_signature": "  JVoiceXmlPromptAccumulator(\n            final ImplementationPlatform implementationPlatform)", "class_method_signature": "JVoiceXmlPromptAccumulator.JVoiceXmlPromptAccumulator(\n            final ImplementationPlatform implementationPlatform)", "testcase": false, "constructor": true}, {"identifier": "startPromptQueuing", "parameters": "(final long promptTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void startPromptQueuing(final long promptTimeout)", "full_signature": "@Override public void startPromptQueuing(final long promptTimeout)", "class_method_signature": "JVoiceXmlPromptAccumulator.startPromptQueuing(final long promptTimeout)", "testcase": false, "constructor": false}, {"identifier": "getPromptTimeout", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPromptTimeout()", "full_signature": "public long getPromptTimeout()", "class_method_signature": "JVoiceXmlPromptAccumulator.getPromptTimeout()", "testcase": false, "constructor": false}, {"identifier": "queuePrompt", "parameters": "(final SpeakableText speakable)", "modifiers": "@Override public", "return": "void", "signature": "void queuePrompt(final SpeakableText speakable)", "full_signature": "@Override public void queuePrompt(final SpeakableText speakable)", "class_method_signature": "JVoiceXmlPromptAccumulator.queuePrompt(final SpeakableText speakable)", "testcase": false, "constructor": false}, {"identifier": "getLastSpeakableText", "parameters": "()", "modifiers": "public", "return": "SpeakableText", "signature": "SpeakableText getLastSpeakableText()", "full_signature": "public SpeakableText getLastSpeakableText()", "class_method_signature": "JVoiceXmlPromptAccumulator.getLastSpeakableText()", "testcase": false, "constructor": false}, {"identifier": "renderPrompts", "parameters": "(final String sessionId,\n            final DocumentServer server, final CallControlProperties callProps)", "modifiers": "@Override public", "return": "void", "signature": "void renderPrompts(final String sessionId,\n            final DocumentServer server, final CallControlProperties callProps)", "full_signature": "@Override public void renderPrompts(final String sessionId,\n            final DocumentServer server, final CallControlProperties callProps)", "class_method_signature": "JVoiceXmlPromptAccumulator.renderPrompts(final String sessionId,\n            final DocumentServer server, final CallControlProperties callProps)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/implementation/jvxml/JVoiceXmlPromptAccumulator.java"}, "focal_method": {"identifier": "getLastSpeakableText", "parameters": "()", "modifiers": "public", "return": "SpeakableText", "body": "public SpeakableText getLastSpeakableText() {\n        final int size = prompts.size();\n        if (size == 0) {\n            return null;\n        }\n        return prompts.get(size - 1);\n    }", "signature": "SpeakableText getLastSpeakableText()", "full_signature": "public SpeakableText getLastSpeakableText()", "class_method_signature": "JVoiceXmlPromptAccumulator.getLastSpeakableText()", "testcase": false, "constructor": false, "invocations": ["size", "get"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}