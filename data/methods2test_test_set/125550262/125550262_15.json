{"test_class": {"identifier": "MutateTest", "superclass": "", "interfaces": "", "fields": [], "file": "ovsdb-client/src/test/java/com/vmware/ovsdb/protocol/operation/MutateTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    List<Condition> conditions = ImmutableList.of(\n        new Condition(\"integer_column\", Function.LESS_THAN, Atom.integer(42))\n    );\n    List<Mutation> mutations = ImmutableList.of(\n        new Mutation(\"column3\", Mutator.PRODUCT, Atom.string(\"abc\"))\n    );\n\n    String tableName = \"table\";\n    new EqualsTester()\n        .addEqualityGroup(new Mutate(tableName, conditions, mutations),\n            new Mutate(tableName)\n                .where(\"integer_column\", Function.LESS_THAN, 42)\n                .mutation(\"column3\", Mutator.PRODUCT, \"abc\")\n        ).testEquals();\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "MutateTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["of", "integer", "of", "string", "testEquals", "addEqualityGroup", "mutation", "where"]}, "focal_class": {"identifier": "Mutate", "superclass": "extends Operation", "interfaces": "", "fields": [{"original_string": "private final String table;", "modifier": "private final", "type": "String", "declarator": "table", "var_name": "table"}, {"original_string": "@JsonProperty(value = WHERE)\n  private List<Condition> conditions;", "modifier": "@JsonProperty(value = WHERE)\n  private", "type": "List<Condition>", "declarator": "conditions", "var_name": "conditions"}, {"original_string": "private List<Mutation> mutations;", "modifier": "private", "type": "List<Mutation>", "declarator": "mutations", "var_name": "mutations"}], "methods": [{"identifier": "Mutate", "parameters": "(String table)", "modifiers": "public", "return": "", "signature": " Mutate(String table)", "full_signature": "public  Mutate(String table)", "class_method_signature": "Mutate.Mutate(String table)", "testcase": false, "constructor": true}, {"identifier": "Mutate", "parameters": "(\n      String table, List<Condition> conditions, List<Mutation> mutations\n  )", "modifiers": "public", "return": "", "signature": " Mutate(\n      String table, List<Condition> conditions, List<Mutation> mutations\n  )", "full_signature": "public  Mutate(\n      String table, List<Condition> conditions, List<Mutation> mutations\n  )", "class_method_signature": "Mutate.Mutate(\n      String table, List<Condition> conditions, List<Mutation> mutations\n  )", "testcase": false, "constructor": true}, {"identifier": "where", "parameters": "(String column, Function function, Value value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, Value value)", "full_signature": "public Mutate where(String column, Function function, Value value)", "class_method_signature": "Mutate.where(String column, Function function, Value value)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String column, Function function, String string)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, String string)", "full_signature": "public Mutate where(String column, Function function, String string)", "class_method_signature": "Mutate.where(String column, Function function, String string)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String column, Function function, long integer)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, long integer)", "full_signature": "public Mutate where(String column, Function function, long integer)", "class_method_signature": "Mutate.where(String column, Function function, long integer)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String column, Function function, boolean bool)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, boolean bool)", "full_signature": "public Mutate where(String column, Function function, boolean bool)", "class_method_signature": "Mutate.where(String column, Function function, boolean bool)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String column, Function function, Uuid uuid)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, Uuid uuid)", "full_signature": "public Mutate where(String column, Function function, Uuid uuid)", "class_method_signature": "Mutate.where(String column, Function function, Uuid uuid)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String column, Function function, NamedUuid namedUuid)", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(String column, Function function, NamedUuid namedUuid)", "full_signature": "public Mutate where(String column, Function function, NamedUuid namedUuid)", "class_method_signature": "Mutate.where(String column, Function function, NamedUuid namedUuid)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(\n      String column, Function function, java.util.Map<K, V> map\n  )", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(\n      String column, Function function, java.util.Map<K, V> map\n  )", "full_signature": "public Mutate where(\n      String column, Function function, java.util.Map<K, V> map\n  )", "class_method_signature": "Mutate.where(\n      String column, Function function, java.util.Map<K, V> map\n  )", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(\n      String column, Function function, java.util.Set<T> set\n  )", "modifiers": "public", "return": "Mutate", "signature": "Mutate where(\n      String column, Function function, java.util.Set<T> set\n  )", "full_signature": "public Mutate where(\n      String column, Function function, java.util.Set<T> set\n  )", "class_method_signature": "Mutate.where(\n      String column, Function function, java.util.Set<T> set\n  )", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, Value value)", "modifiers": "private", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, Value value)", "full_signature": "private Mutate mutation(String column, Mutator mutator, Value value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, Value value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, String value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, String value)", "full_signature": "public Mutate mutation(String column, Mutator mutator, String value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, String value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, long value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, long value)", "full_signature": "public Mutate mutation(String column, Mutator mutator, long value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, long value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, boolean value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, boolean value)", "full_signature": "public Mutate mutation(String column, Mutator mutator, boolean value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, boolean value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, Uuid value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, Uuid value)", "full_signature": "public Mutate mutation(String column, Mutator mutator, Uuid value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, Uuid value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(String column, Mutator mutator, NamedUuid value)", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(String column, Mutator mutator, NamedUuid value)", "full_signature": "public Mutate mutation(String column, Mutator mutator, NamedUuid value)", "class_method_signature": "Mutate.mutation(String column, Mutator mutator, NamedUuid value)", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(\n      String column, Mutator mutator, java.util.Map<K, V> map\n  )", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(\n      String column, Mutator mutator, java.util.Map<K, V> map\n  )", "full_signature": "public Mutate mutation(\n      String column, Mutator mutator, java.util.Map<K, V> map\n  )", "class_method_signature": "Mutate.mutation(\n      String column, Mutator mutator, java.util.Map<K, V> map\n  )", "testcase": false, "constructor": false}, {"identifier": "mutation", "parameters": "(\n      String column, Mutator mutator, java.util.Set<T> set\n  )", "modifiers": "public", "return": "Mutate", "signature": "Mutate mutation(\n      String column, Mutator mutator, java.util.Set<T> set\n  )", "full_signature": "public Mutate mutation(\n      String column, Mutator mutator, java.util.Set<T> set\n  )", "class_method_signature": "Mutate.mutation(\n      String column, Mutator mutator, java.util.Set<T> set\n  )", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTable()", "full_signature": "public String getTable()", "class_method_signature": "Mutate.getTable()", "testcase": false, "constructor": false}, {"identifier": "getWhere", "parameters": "()", "modifiers": "public", "return": "List<Condition>", "signature": "List<Condition> getWhere()", "full_signature": "public List<Condition> getWhere()", "class_method_signature": "Mutate.getWhere()", "testcase": false, "constructor": false}, {"identifier": "getMutations", "parameters": "()", "modifiers": "public", "return": "List<Mutation>", "signature": "List<Mutation> getMutations()", "full_signature": "public List<Mutation> getMutations()", "class_method_signature": "Mutate.getMutations()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Mutate.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Mutate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Mutate.toString()", "testcase": false, "constructor": false}], "file": "ovsdb-client/src/main/java/com/vmware/ovsdb/protocol/operation/Mutate.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object other) {\n    if (this == other) {\n      return true;\n    }\n    if (!(other instanceof Mutate)) {\n      return false;\n    }\n    Mutate that = (Mutate) other;\n    return Objects.equals(table, that.getTable())\n        && Objects.equals(conditions, that.getWhere())\n        && Objects.equals(mutations, that.getMutations());\n  }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Mutate.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["equals", "getTable", "equals", "getWhere", "equals", "getMutations"]}, "repository": {"repo_id": 125550262, "url": "https://github.com/vmware/ovsdb-client-library", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 12, "size": 288, "license": "licensed"}}