{"test_class": {"identifier": "DataSetEditorWorkflowTest", "superclass": "extends AbstractDataSetWorkflowTest", "interfaces": "", "fields": [{"original_string": "public static final String UUID = \"uuid1\";", "modifier": "public static final", "type": "String", "declarator": "UUID = \"uuid1\"", "var_name": "UUID"}, {"original_string": "public static final String NAME = \"name1\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"name1\"", "var_name": "NAME"}, {"original_string": "@Mock SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock EventSourceMock<SaveRequestEvent> saveRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<SaveRequestEvent>", "declarator": "saveRequestEvent", "var_name": "saveRequestEvent"}, {"original_string": "@Mock EventSourceMock<TestDataSetRequestEvent> testDataSetEvent;", "modifier": "@Mock", "type": "EventSourceMock<TestDataSetRequestEvent>", "declarator": "testDataSetEvent", "var_name": "testDataSetEvent"}, {"original_string": "@Mock EventSourceMock<CancelRequestEvent> cancelRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<CancelRequestEvent>", "declarator": "cancelRequestEvent", "var_name": "cancelRequestEvent"}, {"original_string": "@Mock DataSetClientServices clientServices;", "modifier": "@Mock", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "@Mock DataSetDef dataSetDef;", "modifier": "@Mock", "type": "DataSetDef", "declarator": "dataSetDef", "var_name": "dataSetDef"}, {"original_string": "@Mock DataSet dataSet;", "modifier": "@Mock", "type": "DataSet", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "@Mock SimpleBeanEditorDriver driver;", "modifier": "@Mock", "type": "SimpleBeanEditorDriver", "declarator": "driver", "var_name": "driver"}, {"original_string": "@Mock DataSetEditorWorkflow.View view;", "modifier": "@Mock", "type": "DataSetEditorWorkflow.View", "declarator": "view", "var_name": "view"}, {"original_string": "private DataSetEditorWorkflow presenter;", "modifier": "private", "type": "DataSetEditorWorkflow", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-widgets/src/test/java/org/dashbuilder/client/widgets/dataset/editor/workflow/DataSetEditorWorkflowTest.java"}, "test_case": {"identifier": "testDoTestDataSetNotEdited", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n    public void testDoTestDataSetNotEdited() {\n        presenter.dataSetDef = null;\n        final DataSetEditorWorkflow.TestDataSetCallback testDataSetCallback = mock(DataSetEditorWorkflow.TestDataSetCallback.class);\n        presenter.testDataSet(testDataSetCallback);\n    }", "signature": "void testDoTestDataSetNotEdited()", "full_signature": "@Test(expected = RuntimeException.class) public void testDoTestDataSetNotEdited()", "class_method_signature": "DataSetEditorWorkflowTest.testDoTestDataSetNotEdited()", "testcase": true, "constructor": false, "invocations": ["mock", "testDataSet"]}, "focal_class": {"identifier": "DataSetEditorWorkflow", "superclass": "", "interfaces": "implements IsWidget", "fields": [{"original_string": "protected SyncBeanManager beanManager;", "modifier": "protected", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "protected DataSetClientServices clientServices;", "modifier": "protected", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "protected DataSetValidatorProvider validatorProvider;", "modifier": "protected", "type": "DataSetValidatorProvider", "declarator": "validatorProvider", "var_name": "validatorProvider"}, {"original_string": "protected Event<SaveRequestEvent> saveRequestEvent;", "modifier": "protected", "type": "Event<SaveRequestEvent>", "declarator": "saveRequestEvent", "var_name": "saveRequestEvent"}, {"original_string": "protected Event<TestDataSetRequestEvent> testDataSetEvent;", "modifier": "protected", "type": "Event<TestDataSetRequestEvent>", "declarator": "testDataSetEvent", "var_name": "testDataSetEvent"}, {"original_string": "protected Event<CancelRequestEvent> cancelRequestEvent;", "modifier": "protected", "type": "Event<CancelRequestEvent>", "declarator": "cancelRequestEvent", "var_name": "cancelRequestEvent"}, {"original_string": "public View view;", "modifier": "public", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected T dataSetDef;", "modifier": "protected", "type": "T", "declarator": "dataSetDef", "var_name": "dataSetDef"}, {"original_string": "protected Collection<ConstraintViolation<?>> violations = new ArrayList<ConstraintViolation<?>>();", "modifier": "protected", "type": "Collection<ConstraintViolation<?>>", "declarator": "violations = new ArrayList<ConstraintViolation<?>>()", "var_name": "violations"}, {"original_string": "protected Command flushCommand;", "modifier": "protected", "type": "Command", "declarator": "flushCommand", "var_name": "flushCommand"}, {"original_string": "protected Command stepValidator;", "modifier": "protected", "type": "Command", "declarator": "stepValidator", "var_name": "stepValidator"}, {"original_string": "protected final Command testButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            flush();\n            testDataSetEvent.fire(new TestDataSetRequestEvent(DataSetEditorWorkflow.this));\n        }\n    };", "modifier": "protected final", "type": "Command", "declarator": "testButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            flush();\n            testDataSetEvent.fire(new TestDataSetRequestEvent(DataSetEditorWorkflow.this));\n        }\n    }", "var_name": "testButtonCommand"}, {"original_string": "protected final Command saveButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            flush();\n            saveRequestEvent.fire(new SaveRequestEvent(DataSetEditorWorkflow.this));\n        }\n    };", "modifier": "protected final", "type": "Command", "declarator": "saveButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            flush();\n            saveRequestEvent.fire(new SaveRequestEvent(DataSetEditorWorkflow.this));\n        }\n    }", "var_name": "saveButtonCommand"}, {"original_string": "protected final Command cancelButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            cancelRequestEvent.fire(new CancelRequestEvent(DataSetEditorWorkflow.this));\n        }\n    };", "modifier": "protected final", "type": "Command", "declarator": "cancelButtonCommand = new Command() {\n        @Override\n        public void execute() {\n            cancelRequestEvent.fire(new CancelRequestEvent(DataSetEditorWorkflow.this));\n        }\n    }", "var_name": "cancelButtonCommand"}], "methods": [{"identifier": "DataSetEditorWorkflow", "parameters": "(final DataSetClientServices clientServices,\n                                 final DataSetValidatorProvider validatorProvider,\n                                 final SyncBeanManager beanManager,\n                                 final Event<SaveRequestEvent> saveRequestEvent,\n                                 final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                 final Event<CancelRequestEvent> cancelRequestEvent,\n                                 final View view)", "modifiers": "@Inject public", "return": "", "signature": " DataSetEditorWorkflow(final DataSetClientServices clientServices,\n                                 final DataSetValidatorProvider validatorProvider,\n                                 final SyncBeanManager beanManager,\n                                 final Event<SaveRequestEvent> saveRequestEvent,\n                                 final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                 final Event<CancelRequestEvent> cancelRequestEvent,\n                                 final View view)", "full_signature": "@Inject public  DataSetEditorWorkflow(final DataSetClientServices clientServices,\n                                 final DataSetValidatorProvider validatorProvider,\n                                 final SyncBeanManager beanManager,\n                                 final Event<SaveRequestEvent> saveRequestEvent,\n                                 final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                 final Event<CancelRequestEvent> cancelRequestEvent,\n                                 final View view)", "class_method_signature": "DataSetEditorWorkflow.DataSetEditorWorkflow(final DataSetClientServices clientServices,\n                                 final DataSetValidatorProvider validatorProvider,\n                                 final SyncBeanManager beanManager,\n                                 final Event<SaveRequestEvent> saveRequestEvent,\n                                 final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                 final Event<CancelRequestEvent> cancelRequestEvent,\n                                 final View view)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "DataSetEditorWorkflow.init()", "testcase": false, "constructor": false}, {"identifier": "testDataSet", "parameters": "(final TestDataSetCallback testDataSetCallback)", "modifiers": "public", "return": "void", "signature": "void testDataSet(final TestDataSetCallback testDataSetCallback)", "full_signature": "public void testDataSet(final TestDataSetCallback testDataSetCallback)", "class_method_signature": "DataSetEditorWorkflow.testDataSet(final TestDataSetCallback testDataSetCallback)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow flush()", "full_signature": "public DataSetEditorWorkflow flush()", "class_method_signature": "DataSetEditorWorkflow.flush()", "testcase": false, "constructor": false}, {"identifier": "showNextButton", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showNextButton()", "full_signature": "public DataSetEditorWorkflow showNextButton()", "class_method_signature": "DataSetEditorWorkflow.showNextButton()", "testcase": false, "constructor": false}, {"identifier": "showTestButton", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showTestButton()", "full_signature": "public DataSetEditorWorkflow showTestButton()", "class_method_signature": "DataSetEditorWorkflow.showTestButton()", "testcase": false, "constructor": false}, {"identifier": "showBackButton", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showBackButton()", "full_signature": "public DataSetEditorWorkflow showBackButton()", "class_method_signature": "DataSetEditorWorkflow.showBackButton()", "testcase": false, "constructor": false}, {"identifier": "clearButtons", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow clearButtons()", "full_signature": "public DataSetEditorWorkflow clearButtons()", "class_method_signature": "DataSetEditorWorkflow.clearButtons()", "testcase": false, "constructor": false}, {"identifier": "hasErrors", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasErrors()", "full_signature": "public boolean hasErrors()", "class_method_signature": "DataSetEditorWorkflow.hasErrors()", "testcase": false, "constructor": false}, {"identifier": "getDataSetDef", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T getDataSetDef()", "full_signature": "public T getDataSetDef()", "class_method_signature": "DataSetEditorWorkflow.getDataSetDef()", "testcase": false, "constructor": false}, {"identifier": "asWidget", "parameters": "()", "modifiers": "@Override public", "return": "Widget", "signature": "Widget asWidget()", "full_signature": "@Override public Widget asWidget()", "class_method_signature": "DataSetEditorWorkflow.asWidget()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "(final SimpleBeanEditorDriver driver)", "modifiers": "public", "return": "void", "signature": "void flush(final SimpleBeanEditorDriver driver)", "full_signature": "public void flush(final SimpleBeanEditorDriver driver)", "class_method_signature": "DataSetEditorWorkflow.flush(final SimpleBeanEditorDriver driver)", "testcase": false, "constructor": false}, {"identifier": "afterFlush", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void afterFlush()", "full_signature": "protected void afterFlush()", "class_method_signature": "DataSetEditorWorkflow.afterFlush()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void dispose()", "full_signature": "protected void dispose()", "class_method_signature": "DataSetEditorWorkflow.dispose()", "testcase": false, "constructor": false}, {"identifier": "addViolations", "parameters": "(final Iterable<ConstraintViolation<?>> _violations)", "modifiers": "protected", "return": "void", "signature": "void addViolations(final Iterable<ConstraintViolation<?>> _violations)", "full_signature": "protected void addViolations(final Iterable<ConstraintViolation<?>> _violations)", "class_method_signature": "DataSetEditorWorkflow.addViolations(final Iterable<ConstraintViolation<?>> _violations)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow clear()", "full_signature": "public DataSetEditorWorkflow clear()", "class_method_signature": "DataSetEditorWorkflow.clear()", "testcase": false, "constructor": false}, {"identifier": "checkDataSetDefNotNull", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkDataSetDefNotNull()", "full_signature": "protected void checkDataSetDefNotNull()", "class_method_signature": "DataSetEditorWorkflow.checkDataSetDefNotNull()", "testcase": false, "constructor": false}, {"identifier": "checkDataSetDefNotNull", "parameters": "(final T def)", "modifiers": "protected", "return": "void", "signature": "void checkDataSetDefNotNull(final T def)", "full_signature": "protected void checkDataSetDefNotNull(final T def)", "class_method_signature": "DataSetEditorWorkflow.checkDataSetDefNotNull(final T def)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-widgets/src/main/java/org/dashbuilder/client/widgets/dataset/editor/workflow/DataSetEditorWorkflow.java"}, "focal_method": {"identifier": "testDataSet", "parameters": "(final TestDataSetCallback testDataSetCallback)", "modifiers": "public", "return": "void", "body": "public void testDataSet(final TestDataSetCallback testDataSetCallback) {\n        checkDataSetDefNotNull();\n\n        // Reset columns and filter configuration.\n        getDataSetDef().setAllColumnsEnabled(true);\n        getDataSetDef().setColumns(null);\n        getDataSetDef().setDataSetFilter(null);\n\n        DataSetDef editCloneWithoutCacheSettings = getDataSetDef().clone();\n        editCloneWithoutCacheSettings.setCacheEnabled(false);\n\n        final DataSetLookup lookup = DataSetFactory.newDataSetLookupBuilder()\n                .dataset(dataSetDef.getUUID())\n                .rowOffset(0)\n                .rowNumber(6)\n                .buildLookup();\n\n        try {\n            DataSetHandler editHandler = new DataSetEditHandler(clientServices, lookup, editCloneWithoutCacheSettings);\n            editHandler.lookupDataSet(new DataSetReadyCallback() {\n                @Override\n                public void callback(final DataSet dataSet) {\n                    testDataSetCallback.onSuccess(dataSet);\n                }\n\n                @Override\n                public void notFound() {\n                    testDataSetCallback.onError(new ClientRuntimeError(DataSetEditorConstants.INSTANCE.defNotFound()));\n                }\n\n                @Override\n                public boolean onError(final ClientRuntimeError error) {\n                    testDataSetCallback.onError(error);\n                    return false;\n                }\n            });\n        } catch (final Exception e) {\n            testDataSetCallback.onError(new ClientRuntimeError(e));\n        }\n\n\n    }", "signature": "void testDataSet(final TestDataSetCallback testDataSetCallback)", "full_signature": "public void testDataSet(final TestDataSetCallback testDataSetCallback)", "class_method_signature": "DataSetEditorWorkflow.testDataSet(final TestDataSetCallback testDataSetCallback)", "testcase": false, "constructor": false, "invocations": ["checkDataSetDefNotNull", "setAllColumnsEnabled", "getDataSetDef", "setColumns", "getDataSetDef", "setDataSetFilter", "getDataSetDef", "clone", "getDataSetDef", "setCacheEnabled", "buildLookup", "rowNumber", "rowOffset", "dataset", "newDataSetLookupBuilder", "getUUID", "lookupDataSet", "onSuccess", "onError", "defNotFound", "onError", "onError"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}