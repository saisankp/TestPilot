{"test_class": {"identifier": "MmiDetailedSessionListenerTest", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.callmanager.mmi/src/test/java/org/jvoicexml/callmanager/mmi/MmiDetailedSessionListenerTest.java"}, "test_case": {"identifier": "testSessionEventQueueEMpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSessionEventQueueEMpty() throws Exception {\n        final MMIContext context = new MMIContext(UUID.randomUUID().toString());\n        final XmlExtensionNotificationDataConverter converter = new XmlExtensionNotificationDataConverter();\n        final MockETLProtocolAdapter adapter = new MockETLProtocolAdapter();\n        final MmiDetailedSessionListener listener = new MmiDetailedSessionListener(\n                adapter, context, converter);\n        final QueueEmptyEvent empty = new QueueEmptyEvent(null, null);\n        listener.sessionEvent(null, empty);\n        System.out.println(adapter.getMmiAsString());\n    }", "signature": "void testSessionEventQueueEMpty()", "full_signature": "@Test public void testSessionEventQueueEMpty()", "class_method_signature": "MmiDetailedSessionListenerTest.testSessionEventQueueEMpty()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "sessionEvent", "println", "getMmiAsString"]}, "focal_class": {"identifier": "MmiDetailedSessionListener", "superclass": "", "interfaces": "implements DetailedSessionListener", "fields": [{"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(MmiDetailedSessionListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(MmiDetailedSessionListener.class)", "var_name": "LOGGER"}, {"original_string": "private final ETLProtocolAdapter adapter;", "modifier": "private final", "type": "ETLProtocolAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private final MMIContext context;", "modifier": "private final", "type": "MMIContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final ExtensionNotificationDataConverter converter;", "modifier": "private final", "type": "ExtensionNotificationDataConverter", "declarator": "converter", "var_name": "converter"}], "methods": [{"identifier": "MmiDetailedSessionListener", "parameters": "(final ETLProtocolAdapter protocolAdapter,\n            final MMIContext ctx,\n            final ExtensionNotificationDataConverter conv)", "modifiers": "public", "return": "", "signature": " MmiDetailedSessionListener(final ETLProtocolAdapter protocolAdapter,\n            final MMIContext ctx,\n            final ExtensionNotificationDataConverter conv)", "full_signature": "public  MmiDetailedSessionListener(final ETLProtocolAdapter protocolAdapter,\n            final MMIContext ctx,\n            final ExtensionNotificationDataConverter conv)", "class_method_signature": "MmiDetailedSessionListener.MmiDetailedSessionListener(final ETLProtocolAdapter protocolAdapter,\n            final MMIContext ctx,\n            final ExtensionNotificationDataConverter conv)", "testcase": false, "constructor": true}, {"identifier": "sessionStarted", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void sessionStarted(final Session session)", "full_signature": "@Override public void sessionStarted(final Session session)", "class_method_signature": "MmiDetailedSessionListener.sessionStarted(final Session session)", "testcase": false, "constructor": false}, {"identifier": "sessionEvent", "parameters": "(final Session session,\n            final JVoiceXMLEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "full_signature": "@Override public void sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "class_method_signature": "MmiDetailedSessionListener.sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "testcase": false, "constructor": false}, {"identifier": "convertJVoiceXMLEvent", "parameters": "(final DataModel model,\n            final JVoiceXMLEvent event)", "modifiers": "private", "return": "Mmi", "signature": "Mmi convertJVoiceXMLEvent(final DataModel model,\n            final JVoiceXMLEvent event)", "full_signature": "private Mmi convertJVoiceXMLEvent(final DataModel model,\n            final JVoiceXMLEvent event)", "class_method_signature": "MmiDetailedSessionListener.convertJVoiceXMLEvent(final DataModel model,\n            final JVoiceXMLEvent event)", "testcase": false, "constructor": false}, {"identifier": "sessionEnded", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void sessionEnded(final Session session)", "full_signature": "@Override public void sessionEnded(final Session session)", "class_method_signature": "MmiDetailedSessionListener.sessionEnded(final Session session)", "testcase": false, "constructor": false}, {"identifier": "getExtensionNotificationName", "parameters": "(final JVoiceXMLEvent event)", "modifiers": "private", "return": "String", "signature": "String getExtensionNotificationName(final JVoiceXMLEvent event)", "full_signature": "private String getExtensionNotificationName(final JVoiceXMLEvent event)", "class_method_signature": "MmiDetailedSessionListener.getExtensionNotificationName(final JVoiceXMLEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.callmanager.mmi/src/main/java/org/jvoicexml/callmanager/mmi/MmiDetailedSessionListener.java"}, "focal_method": {"identifier": "sessionEvent", "parameters": "(final Session session,\n            final JVoiceXMLEvent event)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void sessionEvent(final Session session,\n            final JVoiceXMLEvent event) {\n        final DataModel model = ((JVoiceXmlSession) session).getDataModel();\n        final Mmi mmi = convertJVoiceXMLEvent(model, event);\n        try {\n            final Object channel = context.getChannel();\n            adapter.sendMMIEvent(channel, mmi);\n        } catch (IOException e) {\n            LOGGER.error(e.getMessage(), e);\n        }\n    }", "signature": "void sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "full_signature": "@Override public void sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "class_method_signature": "MmiDetailedSessionListener.sessionEvent(final Session session,\n            final JVoiceXMLEvent event)", "testcase": false, "constructor": false, "invocations": ["getDataModel", "convertJVoiceXMLEvent", "getChannel", "sendMMIEvent", "error", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}