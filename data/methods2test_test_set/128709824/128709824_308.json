{"test_class": {"identifier": "SofaProtoUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "remoting/remoting-triple/src/test/java/com/alipay/sofa/rpc/utils/SofaProtoUtilsTest.java"}, "test_case": {"identifier": "testGetMethodNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMethodNames() {\n        String interfaceName = TestInterface.class.getName();\n        Set<String> methodNames = SofaProtoUtils.getMethodNames(interfaceName);\n        Assert.assertEquals(2, methodNames.size());\n        Assert.assertTrue(methodNames.contains(\"methodA\"));\n        Assert.assertTrue(methodNames.contains(\"methodB\"));\n    }", "signature": "void testGetMethodNames()", "full_signature": "@Test public void testGetMethodNames()", "class_method_signature": "SofaProtoUtilsTest.testGetMethodNames()", "testcase": true, "constructor": false, "invocations": ["getName", "getMethodNames", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "SofaProtoUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isProtoClass", "parameters": "(Object object)", "modifiers": "public static", "return": "boolean", "signature": "boolean isProtoClass(Object object)", "full_signature": "public static boolean isProtoClass(Object object)", "class_method_signature": "SofaProtoUtils.isProtoClass(Object object)", "testcase": false, "constructor": false}, {"identifier": "getMethodNames", "parameters": "(String interfaceId)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getMethodNames(String interfaceId)", "full_signature": "public static Set<String> getMethodNames(String interfaceId)", "class_method_signature": "SofaProtoUtils.getMethodNames(String interfaceId)", "testcase": false, "constructor": false}, {"identifier": "checkIfUseGeneric", "parameters": "(ConsumerConfig consumerConfig)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "full_signature": "public static boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "class_method_signature": "SofaProtoUtils.checkIfUseGeneric(ConsumerConfig consumerConfig)", "testcase": false, "constructor": false}, {"identifier": "getFullNameWithUniqueId", "parameters": "(String fullMethodName, String uniqueId)", "modifiers": "public static", "return": "String", "signature": "String getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "full_signature": "public static String getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "class_method_signature": "SofaProtoUtils.getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "testcase": false, "constructor": false}], "file": "remoting/remoting-triple/src/main/java/com/alipay/sofa/rpc/utils/SofaProtoUtils.java"}, "focal_method": {"identifier": "getMethodNames", "parameters": "(String interfaceId)", "modifiers": "public static", "return": "Set<String>", "body": "public static Set<String> getMethodNames(String interfaceId) {\n        HashSet<String> result = new HashSet<>();\n        Class interfaceClass = ClassUtils.forName(interfaceId);\n        Method[] methods = interfaceClass.getMethods();\n        for (Method method : methods) {\n            result.add(method.getName());\n        }\n        return result;\n    }", "signature": "Set<String> getMethodNames(String interfaceId)", "full_signature": "public static Set<String> getMethodNames(String interfaceId)", "class_method_signature": "SofaProtoUtils.getMethodNames(String interfaceId)", "testcase": false, "constructor": false, "invocations": ["forName", "getMethods", "add", "getName"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}