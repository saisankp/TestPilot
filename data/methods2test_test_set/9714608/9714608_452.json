{"test_class": {"identifier": "ShapeFileWriterTest", "superclass": "extends AbstractIoShapeTest", "interfaces": "", "fields": [{"original_string": "private File outputFile;", "modifier": "private", "type": "File", "declarator": "outputFile", "var_name": "outputFile"}, {"original_string": "private ShapeFileWriter<Point3d> writer;", "modifier": "private", "type": "ShapeFileWriter<Point3d>", "declarator": "writer", "var_name": "writer"}, {"original_string": "private ESRIBounds bounds;", "modifier": "private", "type": "ESRIBounds", "declarator": "bounds", "var_name": "bounds"}, {"original_string": "private Point3d[] points;", "modifier": "private", "type": "Point3d[]", "declarator": "points", "var_name": "points"}, {"original_string": "private int fileSize;", "modifier": "private", "type": "int", "declarator": "fileSize", "var_name": "fileSize"}], "file": "advanced/shapefile/src/test/java/org/arakhne/afc/io/shape/ShapeFileWriterTest.java"}, "test_case": {"identifier": "testGetFileBounds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetFileBounds() {\n\t\tESRIBounds b = this.writer.getFileBounds();\n\t\t\n\t\tassertEpsilonEquals(this.bounds.getMinX(), b.getMinX());\n\t\tassertEpsilonEquals(this.bounds.getMaxX(), b.getMaxX());\n\t\tassertEpsilonEquals(this.bounds.getMinY(), b.getMinY());\n\t\tassertEpsilonEquals(this.bounds.getMaxY(), b.getMaxY());\n\t\tassertEpsilonEquals(this.bounds.getMinZ(), b.getMinZ());\n\t\tassertEpsilonEquals(this.bounds.getMaxZ(), b.getMaxZ());\n\t\tassertEpsilonEquals(this.bounds.getMinM(), b.getMinM());\n\t\tassertEpsilonEquals(this.bounds.getMaxM(), b.getMaxM());\n\t}", "signature": "void testGetFileBounds()", "full_signature": "@Test public void testGetFileBounds()", "class_method_signature": "ShapeFileWriterTest.testGetFileBounds()", "testcase": true, "constructor": false, "invocations": ["getFileBounds", "assertEpsilonEquals", "getMinX", "getMinX", "assertEpsilonEquals", "getMaxX", "getMaxX", "assertEpsilonEquals", "getMinY", "getMinY", "assertEpsilonEquals", "getMaxY", "getMaxY", "assertEpsilonEquals", "getMinZ", "getMinZ", "assertEpsilonEquals", "getMaxZ", "getMaxZ", "assertEpsilonEquals", "getMinM", "getMinM", "assertEpsilonEquals", "getMaxM", "getMaxM"]}, "focal_class": {"identifier": "ShapeFileWriter", "superclass": "extends AbstractShapeFileWriter<E>", "interfaces": "", "fields": [{"original_string": "private final ElementExporter<E> exporter;", "modifier": "private final", "type": "ElementExporter<E>", "declarator": "exporter", "var_name": "exporter"}], "methods": [{"identifier": "ShapeFileWriter", "parameters": "(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "full_signature": "public  ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "full_signature": "public  ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter)", "full_signature": "public  ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(WritableByteChannel channel, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter)", "full_signature": "public  ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "full_signature": "public  ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "full_signature": "public  ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "full_signature": "public  ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(OutputStream stream, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "full_signature": "public  ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(File shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(URL shapeName, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(OutputStream stream, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter, DBaseFileWriter dbfWriter,\n\t\t\tShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(OutputStream stream, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter, DBaseFileWriter dbfWriter,\n\t\t\tShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(OutputStream stream, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter, DBaseFileWriter dbfWriter,\n\t\t\tShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(OutputStream stream, ShapeElementType elementType,\n\t\t\tElementExporter<E> exporter, DBaseFileWriter dbfWriter,\n\t\t\tShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileWriter", "parameters": "(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "modifiers": "public", "return": "", "signature": " ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "full_signature": "public  ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "class_method_signature": "ShapeFileWriter.ShapeFileWriter(WritableByteChannel channel, ShapeElementType elementType, ElementExporter<E> exporter,\n\t\t\tDBaseFileWriter dbfWriter, ShapeFileIndexWriter shxWriter)", "testcase": false, "constructor": true}, {"identifier": "getAttributeProviders", "parameters": "(Collection<? extends E> elements)", "modifiers": "@Override protected", "return": "AttributeProvider[]", "signature": "AttributeProvider[] getAttributeProviders(Collection<? extends E> elements)", "full_signature": "@Override protected AttributeProvider[] getAttributeProviders(Collection<? extends E> elements)", "class_method_signature": "ShapeFileWriter.getAttributeProviders(Collection<? extends E> elements)", "testcase": false, "constructor": false}, {"identifier": "getAttributeProvider", "parameters": "(E element)", "modifiers": "@Override protected", "return": "AttributeProvider", "signature": "AttributeProvider getAttributeProvider(E element)", "full_signature": "@Override protected AttributeProvider getAttributeProvider(E element)", "class_method_signature": "ShapeFileWriter.getAttributeProvider(E element)", "testcase": false, "constructor": false}, {"identifier": "getGroupCountFor", "parameters": "(E element)", "modifiers": "@Override protected", "return": "int", "signature": "int getGroupCountFor(E element)", "full_signature": "@Override protected int getGroupCountFor(E element)", "class_method_signature": "ShapeFileWriter.getGroupCountFor(E element)", "testcase": false, "constructor": false}, {"identifier": "getPointAt", "parameters": "(E element, int groupIndex, int pointIndex, boolean expectM,\n\t\t\tboolean expectZ)", "modifiers": "@Override protected", "return": "ESRIPoint", "signature": "ESRIPoint getPointAt(E element, int groupIndex, int pointIndex, boolean expectM,\n\t\t\tboolean expectZ)", "full_signature": "@Override protected ESRIPoint getPointAt(E element, int groupIndex, int pointIndex, boolean expectM,\n\t\t\tboolean expectZ)", "class_method_signature": "ShapeFileWriter.getPointAt(E element, int groupIndex, int pointIndex, boolean expectM,\n\t\t\tboolean expectZ)", "testcase": false, "constructor": false}, {"identifier": "getPointCountFor", "parameters": "(E element, int groupIndex)", "modifiers": "@Override protected", "return": "int", "signature": "int getPointCountFor(E element, int groupIndex)", "full_signature": "@Override protected int getPointCountFor(E element, int groupIndex)", "class_method_signature": "ShapeFileWriter.getPointCountFor(E element, int groupIndex)", "testcase": false, "constructor": false}, {"identifier": "getGroupTypeFor", "parameters": "(E element, int groupIndex)", "modifiers": "@Override protected", "return": "ShapeMultiPatchType", "signature": "ShapeMultiPatchType getGroupTypeFor(E element, int groupIndex)", "full_signature": "@Override protected ShapeMultiPatchType getGroupTypeFor(E element, int groupIndex)", "class_method_signature": "ShapeFileWriter.getGroupTypeFor(E element, int groupIndex)", "testcase": false, "constructor": false}, {"identifier": "getFileBounds", "parameters": "()", "modifiers": "@Override protected", "return": "ESRIBounds", "signature": "ESRIBounds getFileBounds()", "full_signature": "@Override protected ESRIBounds getFileBounds()", "class_method_signature": "ShapeFileWriter.getFileBounds()", "testcase": false, "constructor": false}], "file": "advanced/shapefile/src/main/java/org/arakhne/afc/io/shape/ShapeFileWriter.java"}, "focal_method": {"identifier": "getFileBounds", "parameters": "()", "modifiers": "@Override protected", "return": "ESRIBounds", "body": "@Override\n\tprotected ESRIBounds getFileBounds() {\n\t\treturn this.exporter.getFileBounds();\n\t}", "signature": "ESRIBounds getFileBounds()", "full_signature": "@Override protected ESRIBounds getFileBounds()", "class_method_signature": "ShapeFileWriter.getFileBounds()", "testcase": false, "constructor": false, "invocations": ["getFileBounds"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}