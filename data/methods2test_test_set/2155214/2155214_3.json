{"test_class": {"identifier": "PathAddressIteratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/org/gatein/management/api/PathAddressIteratorTest.java"}, "test_case": {"identifier": "testCurrentAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testCurrentAddress()\n   {\n      PathAddressIterator iterator = new PathAddressIterator(PathAddress.pathAddress(\"one\", \"two\", \"three\"));\n      assertTrue(iterator.hasNext());\n      int count = 1;\n      while (iterator.hasNext())\n      {\n         iterator.next();\n         switch (count++)\n         {\n            case 1:\n               assertEquals(PathAddress.pathAddress(\"two\", \"three\"), iterator.currentAddress());\n               break;\n            case 2:\n               assertEquals(PathAddress.pathAddress(\"three\"), iterator.currentAddress());\n               break;\n            case 3:\n               assertEquals(PathAddress.EMPTY_ADDRESS, iterator.currentAddress());\n               break;\n         }\n      }\n   }", "signature": "void testCurrentAddress()", "full_signature": "@Test public void testCurrentAddress()", "class_method_signature": "PathAddressIteratorTest.testCurrentAddress()", "testcase": true, "constructor": false, "invocations": ["pathAddress", "assertTrue", "hasNext", "hasNext", "next", "assertEquals", "pathAddress", "currentAddress", "assertEquals", "pathAddress", "currentAddress", "assertEquals", "currentAddress"]}, "focal_class": {"identifier": "PathAddressIterator", "superclass": "", "interfaces": "implements Iterator<String>", "fields": [{"original_string": "public static final PathAddressIterator EMPTY = new PathAddressIterator(PathAddress.EMPTY_ADDRESS);", "modifier": "public static final", "type": "PathAddressIterator", "declarator": "EMPTY = new PathAddressIterator(PathAddress.EMPTY_ADDRESS)", "var_name": "EMPTY"}, {"original_string": "private PathAddress originalAddress;", "modifier": "private", "type": "PathAddress", "declarator": "originalAddress", "var_name": "originalAddress"}, {"original_string": "private PathAddress currentAddress;", "modifier": "private", "type": "PathAddress", "declarator": "currentAddress", "var_name": "currentAddress"}, {"original_string": "private Iterator<String> iterator;", "modifier": "private", "type": "Iterator<String>", "declarator": "iterator", "var_name": "iterator"}], "methods": [{"identifier": "PathAddressIterator", "parameters": "(PathAddress address)", "modifiers": "public", "return": "", "signature": " PathAddressIterator(PathAddress address)", "full_signature": "public  PathAddressIterator(PathAddress address)", "class_method_signature": "PathAddressIterator.PathAddressIterator(PathAddress address)", "testcase": false, "constructor": true}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "PathAddressIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String next()", "full_signature": "@Override public String next()", "class_method_signature": "PathAddressIterator.next()", "testcase": false, "constructor": false}, {"identifier": "originalAddress", "parameters": "()", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress originalAddress()", "full_signature": "public PathAddress originalAddress()", "class_method_signature": "PathAddressIterator.originalAddress()", "testcase": false, "constructor": false}, {"identifier": "currentAddress", "parameters": "()", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress currentAddress()", "full_signature": "public PathAddress currentAddress()", "class_method_signature": "PathAddressIterator.currentAddress()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "PathAddressIterator.remove()", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/gatein/management/api/PathAddressIterator.java"}, "focal_method": {"identifier": "currentAddress", "parameters": "()", "modifiers": "public", "return": "PathAddress", "body": "public PathAddress currentAddress()\n   {\n      return currentAddress;\n   }", "signature": "PathAddress currentAddress()", "full_signature": "public PathAddress currentAddress()", "class_method_signature": "PathAddressIterator.currentAddress()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2155214, "url": "https://github.com/gatein/gatein-management", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3383, "license": "licensed"}}