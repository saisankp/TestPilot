{"test_class": {"identifier": "CategoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/src/test/java/com/greensopinion/finance/services/domain/CategoryTest.java"}, "test_case": {"identifier": "matches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void matches() {\n\t\tMatchRule rule = MatchRule.withPattern(\"abc\");\n\t\tMatchRule rule2 = MatchRule.withPattern(\"def\");\n\t\tCategory category = new Category(\"a name\", ImmutableList.of(rule, rule2));\n\t\tassertTrue(category.matches(MockTransaction.create(\"2015-01-01\", \"aaabc\", 123)));\n\t\tassertTrue(category.matches(MockTransaction.create(\"2015-01-01\", \"def\", 123)));\n\t\tassertFalse(category.matches(MockTransaction.create(\"2015-01-01\", \"ghi\", 123)));\n\t\tassertFalse(new Category(\"nope\").matches(MockTransaction.create(\"2015-01-01\", \"def\", 123)));\n\t}", "signature": "void matches()", "full_signature": "@Test public void matches()", "class_method_signature": "CategoryTest.matches()", "testcase": true, "constructor": false, "invocations": ["withPattern", "withPattern", "of", "assertTrue", "matches", "create", "assertTrue", "matches", "create", "assertFalse", "matches", "create", "assertFalse", "matches", "create"]}, "focal_class": {"identifier": "Category", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final List<MatchRule> matchRules;", "modifier": "private final", "type": "List<MatchRule>", "declarator": "matchRules", "var_name": "matchRules"}], "methods": [{"identifier": "Category", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Category(String name)", "full_signature": "public  Category(String name)", "class_method_signature": "Category.Category(String name)", "testcase": false, "constructor": true}, {"identifier": "Category", "parameters": "(String name, List<MatchRule> matchRules)", "modifiers": "public", "return": "", "signature": " Category(String name, List<MatchRule> matchRules)", "full_signature": "public  Category(String name, List<MatchRule> matchRules)", "class_method_signature": "Category.Category(String name, List<MatchRule> matchRules)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Category.getName()", "testcase": false, "constructor": false}, {"identifier": "getMatchRules", "parameters": "()", "modifiers": "public", "return": "List<MatchRule>", "signature": "List<MatchRule> getMatchRules()", "full_signature": "public List<MatchRule> getMatchRules()", "class_method_signature": "Category.getMatchRules()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(Transaction transaction)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(Transaction transaction)", "full_signature": "public boolean matches(Transaction transaction)", "class_method_signature": "Category.matches(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "withMatchRule", "parameters": "(MatchRule rule)", "modifiers": "public", "return": "Category", "signature": "Category withMatchRule(MatchRule rule)", "full_signature": "public Category withMatchRule(MatchRule rule)", "class_method_signature": "Category.withMatchRule(MatchRule rule)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Category.toString()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/domain/Category.java"}, "focal_method": {"identifier": "matches", "parameters": "(Transaction transaction)", "modifiers": "public", "return": "boolean", "body": "public boolean matches(Transaction transaction) {\n\t\tcheckNotNull(transaction);\n\t\tif (!Strings.isNullOrEmpty(transaction.getCategoryName())) {\n\t\t\treturn getName().equals(transaction.getCategoryName());\n\t\t}\n\t\tfor (MatchRule matchRule : getMatchRules()) {\n\t\t\tif (matchRule.matches(transaction)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean matches(Transaction transaction)", "full_signature": "public boolean matches(Transaction transaction)", "class_method_signature": "Category.matches(Transaction transaction)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "isNullOrEmpty", "getCategoryName", "equals", "getName", "getCategoryName", "getMatchRules", "matches"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}