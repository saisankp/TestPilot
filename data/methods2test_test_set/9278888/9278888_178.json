{"test_class": {"identifier": "DubboClientResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Invoker invoker = mock(Invoker.class);", "modifier": "", "type": "Invoker", "declarator": "invoker = mock(Invoker.class)", "var_name": "invoker"}, {"original_string": "Invocation invocation = mock(Invocation.class);", "modifier": "", "type": "Invocation", "declarator": "invocation = mock(Invocation.class)", "var_name": "invocation"}, {"original_string": "Result result = mock(Result.class);", "modifier": "", "type": "Result", "declarator": "result = mock(Result.class)", "var_name": "result"}, {"original_string": "RpcException error = new RpcException(TIMEOUT_EXCEPTION);", "modifier": "", "type": "RpcException", "declarator": "error = new RpcException(TIMEOUT_EXCEPTION)", "var_name": "error"}, {"original_string": "Map<String, String> attachments = new LinkedHashMap<>();", "modifier": "", "type": "Map<String, String>", "declarator": "attachments = new LinkedHashMap<>()", "var_name": "attachments"}, {"original_string": "DubboClientRequest request = new DubboClientRequest(invoker, invocation, attachments);", "modifier": "", "type": "DubboClientRequest", "declarator": "request = new DubboClientRequest(invoker, invocation, attachments)", "var_name": "request"}, {"original_string": "DubboClientResponse response = new DubboClientResponse(request, result, error);", "modifier": "", "type": "DubboClientResponse", "declarator": "response = new DubboClientResponse(request, result, error)", "var_name": "response"}], "file": "instrumentation/dubbo-rpc/src/test/java/brave/dubbo/rpc/DubboClientResponseTest.java"}, "test_case": {"identifier": "errorCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void errorCode() {\n    assertThat(response.errorCode()).isEqualTo(\"TIMEOUT_EXCEPTION\");\n  }", "signature": "void errorCode()", "full_signature": "@Test public void errorCode()", "class_method_signature": "DubboClientResponseTest.errorCode()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "errorCode"]}, "focal_class": {"identifier": "DubboClientResponse", "superclass": "extends RpcClientResponse", "interfaces": "implements DubboResponse", "fields": [{"original_string": "final DubboClientRequest request;", "modifier": "final", "type": "DubboClientRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Nullable final Result result;", "modifier": "@Nullable final", "type": "Result", "declarator": "result", "var_name": "result"}, {"original_string": "@Nullable final Throwable error;", "modifier": "@Nullable final", "type": "Throwable", "declarator": "error", "var_name": "error"}], "methods": [{"identifier": "DubboClientResponse", "parameters": "(\n    DubboClientRequest request, @Nullable Result result, @Nullable Throwable error)", "modifiers": "", "return": "", "signature": " DubboClientResponse(\n    DubboClientRequest request, @Nullable Result result, @Nullable Throwable error)", "full_signature": "  DubboClientResponse(\n    DubboClientRequest request, @Nullable Result result, @Nullable Throwable error)", "class_method_signature": "DubboClientResponse.DubboClientResponse(\n    DubboClientRequest request, @Nullable Result result, @Nullable Throwable error)", "testcase": false, "constructor": true}, {"identifier": "result", "parameters": "()", "modifiers": "@Override public", "return": "Result", "signature": "Result result()", "full_signature": "@Override public Result result()", "class_method_signature": "DubboClientResponse.result()", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "()", "modifiers": "@Override public", "return": "Result", "signature": "Result unwrap()", "full_signature": "@Override public Result unwrap()", "class_method_signature": "DubboClientResponse.unwrap()", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "()", "modifiers": "@Override public", "return": "DubboClientRequest", "signature": "DubboClientRequest request()", "full_signature": "@Override public DubboClientRequest request()", "class_method_signature": "DubboClientResponse.request()", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "()", "modifiers": "@Override public", "return": "Throwable", "signature": "Throwable error()", "full_signature": "@Override public Throwable error()", "class_method_signature": "DubboClientResponse.error()", "testcase": false, "constructor": false}, {"identifier": "errorCode", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String errorCode()", "full_signature": "@Override public String errorCode()", "class_method_signature": "DubboClientResponse.errorCode()", "testcase": false, "constructor": false}], "file": "instrumentation/dubbo-rpc/src/main/java/brave/dubbo/rpc/DubboClientResponse.java"}, "focal_method": {"identifier": "errorCode", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override public String errorCode() {\n    return DubboParser.errorCode(error);\n  }", "signature": "String errorCode()", "full_signature": "@Override public String errorCode()", "class_method_signature": "DubboClientResponse.errorCode()", "testcase": false, "constructor": false, "invocations": ["errorCode"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}