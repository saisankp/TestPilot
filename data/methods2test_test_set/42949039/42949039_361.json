{"test_class": {"identifier": "SecurityRoleDaoHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private SecurityRoleDao securityRoleDao;", "modifier": "@Mock\n    private", "type": "SecurityRoleDao", "declarator": "securityRoleDao", "var_name": "securityRoleDao"}, {"original_string": "@InjectMocks\n    private SecurityRoleDaoHelper securityRoleDaoHelper = new SecurityRoleDaoHelper();", "modifier": "@InjectMocks\n    private", "type": "SecurityRoleDaoHelper", "declarator": "securityRoleDaoHelper = new SecurityRoleDaoHelper()", "var_name": "securityRoleDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/SecurityRoleDaoHelperTest.java"}, "test_case": {"identifier": "testGetSecurityRoleEntitySecurityRoleNoExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSecurityRoleEntitySecurityRoleNoExists()\n    {\n        // Specify the expected exception.\n        expectedException.expect(ObjectNotFoundException.class);\n        expectedException.expectMessage(String.format(\"Security role with name \\\"%s\\\" doesn't exist.\", SECURITY_ROLE));\n\n        // Mock the external calls.\n        when(securityRoleDao.getSecurityRoleByName(SECURITY_ROLE)).thenReturn(null);\n\n        // Call the method under test.\n        securityRoleDaoHelper.getSecurityRoleEntity(SECURITY_ROLE);\n\n        // Verify the external calls.\n        verify(securityRoleDao).getSecurityRoleByName(SECURITY_ROLE);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetSecurityRoleEntitySecurityRoleNoExists()", "full_signature": "@Test public void testGetSecurityRoleEntitySecurityRoleNoExists()", "class_method_signature": "SecurityRoleDaoHelperTest.testGetSecurityRoleEntitySecurityRoleNoExists()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "format", "thenReturn", "when", "getSecurityRoleByName", "getSecurityRoleEntity", "getSecurityRoleByName", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "SecurityRoleDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SecurityRoleDao securityRoleDao;", "modifier": "@Autowired\n    private", "type": "SecurityRoleDao", "declarator": "securityRoleDao", "var_name": "securityRoleDao"}], "methods": [{"identifier": "getSecurityRoleEntity", "parameters": "(String securityRoleName)", "modifiers": "public", "return": "SecurityRoleEntity", "signature": "SecurityRoleEntity getSecurityRoleEntity(String securityRoleName)", "full_signature": "public SecurityRoleEntity getSecurityRoleEntity(String securityRoleName)", "class_method_signature": "SecurityRoleDaoHelper.getSecurityRoleEntity(String securityRoleName)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/SecurityRoleDaoHelper.java"}, "focal_method": {"identifier": "getSecurityRoleEntity", "parameters": "(String securityRoleName)", "modifiers": "public", "return": "SecurityRoleEntity", "body": "public SecurityRoleEntity getSecurityRoleEntity(String securityRoleName)\n    {\n        SecurityRoleEntity securityRoleEntity = securityRoleDao.getSecurityRoleByName(securityRoleName);\n\n        if (securityRoleEntity == null)\n        {\n            throw new ObjectNotFoundException(String.format(\"Security role with name \\\"%s\\\" doesn't exist.\", securityRoleName));\n        }\n\n        return securityRoleEntity;\n    }", "signature": "SecurityRoleEntity getSecurityRoleEntity(String securityRoleName)", "full_signature": "public SecurityRoleEntity getSecurityRoleEntity(String securityRoleName)", "class_method_signature": "SecurityRoleDaoHelper.getSecurityRoleEntity(String securityRoleName)", "testcase": false, "constructor": false, "invocations": ["getSecurityRoleByName", "format"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}