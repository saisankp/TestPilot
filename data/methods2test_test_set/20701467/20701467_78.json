{"test_class": {"identifier": "HexEncodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "packethandler/implementation/src/test/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncodeTest.java"}, "test_case": {"identifier": "testbytesToHexString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testbytesToHexString() {\n        byte[] bytes1 = { (byte) 0x01, (byte) 0x02, (byte) 0x03 };\n        String str1 = HexEncode.bytesToHexString(bytes1);\n        Assert.assertTrue(str1.equals(\"010203\"));\n\n        byte[] bytes2 = { (byte) 0x11, (byte) 0x22, (byte) 0x33 };\n        String str2 = HexEncode.bytesToHexString(bytes2);\n        Assert.assertFalse(str2.equals(\"010203\"));\n\n    }", "signature": "void testbytesToHexString()", "full_signature": "@Test public void testbytesToHexString()", "class_method_signature": "HexEncodeTest.testbytesToHexString()", "testcase": true, "constructor": false, "invocations": ["bytesToHexString", "assertTrue", "equals", "bytesToHexString", "assertFalse", "equals"]}, "focal_class": {"identifier": "HexEncode", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HexEncode", "parameters": "()", "modifiers": "private", "return": "", "signature": " HexEncode()", "full_signature": "private  HexEncode()", "class_method_signature": "HexEncode.HexEncode()", "testcase": false, "constructor": true}, {"identifier": "bytesToHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexString(byte[] bytes)", "full_signature": "public static String bytesToHexString(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "longToHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "signature": "String longToHexString(long val)", "full_signature": "public static String longToHexString(long val)", "class_method_signature": "HexEncode.longToHexString(long val)", "testcase": false, "constructor": false}, {"identifier": "bytesFromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] bytesFromHexString(String values)", "full_signature": "public static byte[] bytesFromHexString(String values)", "class_method_signature": "HexEncode.bytesFromHexString(String values)", "testcase": false, "constructor": false}, {"identifier": "stringToLong", "parameters": "(String values)", "modifiers": "public static", "return": "long", "signature": "long stringToLong(String values)", "full_signature": "public static long stringToLong(String values)", "class_method_signature": "HexEncode.stringToLong(String values)", "testcase": false, "constructor": false}, {"identifier": "bytesToHexStringFormat", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexStringFormat(byte[] bytes)", "full_signature": "public static String bytesToHexStringFormat(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexStringFormat(byte[] bytes)", "testcase": false, "constructor": false}], "file": "packethandler/implementation/src/main/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncode.java"}, "focal_method": {"identifier": "bytesToHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "body": "public static String bytesToHexString(byte[] bytes) {\n\n        if (bytes == null) {\n            return \"null\";\n        }\n\n        String ret = \"\";\n        StringBuffer buf = new StringBuffer();\n        for (int i = 0; i < bytes.length; i++) {\n            if (i > 0) {\n                ret += \":\";\n            }\n            short u8byte = (short) (bytes[i] & 0xff);\n            String tmp = Integer.toHexString(u8byte);\n            if (tmp.length() == 1) {\n                buf.append(\"0\");\n            }\n            buf.append(tmp);\n        }\n        ret = buf.toString();\n        return ret;\n    }", "signature": "String bytesToHexString(byte[] bytes)", "full_signature": "public static String bytesToHexString(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexString(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["toHexString", "length", "append", "append", "toString"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}