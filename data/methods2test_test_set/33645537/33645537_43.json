{"test_class": {"identifier": "NumSetBitsTest", "superclass": "", "interfaces": "", "fields": [], "file": "algs/src/test/java/com/github/kowshik/bigo/bitsandbytes/NumSetBitsTest.java"}, "test_case": {"identifier": "getNumSetBits_ByteArrayWithOffsetAndLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getNumSetBits_ByteArrayWithOffsetAndLength() {\n\t\tbyte[] array = new byte[] { (byte) 100, (byte) 255, (byte) 255,\n\t\t\t\t(byte) 175 };\n\t\tassertEquals(1, NumSetBits.getNumSetBits(array, 3, 3));\n\t\tassertEquals(20, NumSetBits.getNumSetBits(array, 3, 26));\n\t}", "signature": "void getNumSetBits_ByteArrayWithOffsetAndLength()", "full_signature": "@Test public void getNumSetBits_ByteArrayWithOffsetAndLength()", "class_method_signature": "NumSetBitsTest.getNumSetBits_ByteArrayWithOffsetAndLength()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNumSetBits", "assertEquals", "getNumSetBits"]}, "focal_class": {"identifier": "NumSetBits", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getNumSetBits", "parameters": "(byte[] leds, long offset, long length)", "modifiers": "public static", "return": "long", "signature": "long getNumSetBits(byte[] leds, long offset, long length)", "full_signature": "public static long getNumSetBits(byte[] leds, long offset, long length)", "class_method_signature": "NumSetBits.getNumSetBits(byte[] leds, long offset, long length)", "testcase": false, "constructor": false}, {"identifier": "getNumSetBits", "parameters": "(byte b, int startOffset, int endOffset)", "modifiers": "public static", "return": "int", "signature": "int getNumSetBits(byte b, int startOffset, int endOffset)", "full_signature": "public static int getNumSetBits(byte b, int startOffset, int endOffset)", "class_method_signature": "NumSetBits.getNumSetBits(byte b, int startOffset, int endOffset)", "testcase": false, "constructor": false}, {"identifier": "getNumSetBitsBetweenWholeBytes", "parameters": "(byte[] array,\n\t\t\tint firstByte, int lastByte)", "modifiers": "public static", "return": "long", "signature": "long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "full_signature": "public static long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "class_method_signature": "NumSetBits.getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/kowshik/bigo/bitsandbytes/NumSetBits.java"}, "focal_method": {"identifier": "getNumSetBits", "parameters": "(byte[] leds, long offset, long length)", "modifiers": "public static", "return": "long", "body": "public static long getNumSetBits(byte[] leds, long offset, long length) {\n\t\t// s/offset/firstBitIndex/ for readability.\n\t\tlong firstBitIndex = offset;\n\t\tlong lastBitIndex = firstBitIndex + length - 1;\n\t\tbyte firstByteIndex = (byte) (firstBitIndex / 8);\n\t\tbyte lastByteIndex = (byte) ((firstBitIndex + length - 1) / 8);\n\n\t\tlong totalSetBits = 0L;\n\t\tif (firstByteIndex != lastByteIndex) {\n\t\t\ttotalSetBits += getNumSetBitsBetweenWholeBytes(leds,\n\t\t\t\t\tfirstByteIndex + 1, lastByteIndex - 1);\n\t\t\ttotalSetBits += getNumSetBits(leds[firstByteIndex],\n\t\t\t\t\t(int) (firstBitIndex % 8), 7);\n\t\t\ttotalSetBits += getNumSetBits(leds[lastByteIndex], 0,\n\t\t\t\t\t(int) (lastBitIndex % 8));\n\t\t} else {\n\t\t\ttotalSetBits += getNumSetBits(leds[firstByteIndex],\n\t\t\t\t\t(int) (firstBitIndex % 8), (int) (lastBitIndex % 8));\n\t\t}\n\n\t\treturn totalSetBits;\n\t}", "signature": "long getNumSetBits(byte[] leds, long offset, long length)", "full_signature": "public static long getNumSetBits(byte[] leds, long offset, long length)", "class_method_signature": "NumSetBits.getNumSetBits(byte[] leds, long offset, long length)", "testcase": false, "constructor": false, "invocations": ["getNumSetBitsBetweenWholeBytes", "getNumSetBits", "getNumSetBits", "getNumSetBits"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}