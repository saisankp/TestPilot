{"test_class": {"identifier": "SetConfigurationObjectServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SetConfigurationObjectService instance;", "modifier": "private", "type": "SetConfigurationObjectService", "declarator": "instance", "var_name": "instance"}, {"original_string": "@Mock\n    private DlmsHelper dlmsHelper;", "modifier": "@Mock\n    private", "type": "DlmsHelper", "declarator": "dlmsHelper", "var_name": "dlmsHelper"}, {"original_string": "@Mock\n    private DlmsConnectionManager conn;", "modifier": "@Mock\n    private", "type": "DlmsConnectionManager", "declarator": "conn", "var_name": "conn"}, {"original_string": "@Mock\n    private DlmsMessageListener dlmsMessageListener;", "modifier": "@Mock\n    private", "type": "DlmsMessageListener", "declarator": "dlmsMessageListener", "var_name": "dlmsMessageListener"}, {"original_string": "@Mock\n    private DlmsConnection dlmsConnection;", "modifier": "@Mock\n    private", "type": "DlmsConnection", "declarator": "dlmsConnection", "var_name": "dlmsConnection"}, {"original_string": "@Mock\n    private ConfigurationObjectDto configurationToSet;", "modifier": "@Mock\n    private", "type": "ConfigurationObjectDto", "declarator": "configurationToSet", "var_name": "configurationToSet"}, {"original_string": "@Mock\n    private ConfigurationObjectDto configurationOnDevice;", "modifier": "@Mock\n    private", "type": "ConfigurationObjectDto", "declarator": "configurationOnDevice", "var_name": "configurationOnDevice"}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/SetConfigurationObjectServiceTest.java"}, "test_case": {"identifier": "getFlagsNullConfigurationFlags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getFlagsNullConfigurationFlags() throws Exception {\n\n        // SETUP\n        when(this.configurationToSet.getConfigurationFlags()).thenReturn(null);\n        when(this.configurationOnDevice.getConfigurationFlags()).thenReturn(null);\n\n        // CALL\n        this.instance.getFlags(this.configurationToSet, this.configurationOnDevice);\n\n        // VERIFY\n        // no exception occurs\n    }", "signature": "void getFlagsNullConfigurationFlags()", "full_signature": "@Test public void getFlagsNullConfigurationFlags()", "class_method_signature": "SetConfigurationObjectServiceTest.getFlagsNullConfigurationFlags()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getConfigurationFlags", "thenReturn", "when", "getConfigurationFlags", "getFlags"]}, "focal_class": {"identifier": "SetConfigurationObjectService", "superclass": "", "interfaces": "implements ProtocolService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SetConfigurationObjectService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SetConfigurationObjectService.class)", "var_name": "LOGGER"}, {"original_string": "private static final int NUMBER_OF_FLAG_BITS = 16;", "modifier": "private static final", "type": "int", "declarator": "NUMBER_OF_FLAG_BITS = 16", "var_name": "NUMBER_OF_FLAG_BITS"}, {"original_string": "private static final int BYTE_SIZE = 8;", "modifier": "private static final", "type": "int", "declarator": "BYTE_SIZE = 8", "var_name": "BYTE_SIZE"}, {"original_string": "private final DlmsHelper dlmsHelper;", "modifier": "private final", "type": "DlmsHelper", "declarator": "dlmsHelper", "var_name": "dlmsHelper"}], "methods": [{"identifier": "SetConfigurationObjectService", "parameters": "(final DlmsHelper dlmsHelper)", "modifiers": "", "return": "", "signature": " SetConfigurationObjectService(final DlmsHelper dlmsHelper)", "full_signature": "  SetConfigurationObjectService(final DlmsHelper dlmsHelper)", "class_method_signature": "SetConfigurationObjectService.SetConfigurationObjectService(final DlmsHelper dlmsHelper)", "testcase": false, "constructor": true}, {"identifier": "setConfigurationObject", "parameters": "(final DlmsConnectionManager conn,\n            final ConfigurationObjectDto configurationToSet, final ConfigurationObjectDto configurationOnDevice)", "modifiers": "public", "return": "AccessResultCode", "signature": "AccessResultCode setConfigurationObject(final DlmsConnectionManager conn,\n            final ConfigurationObjectDto configurationToSet, final ConfigurationObjectDto configurationOnDevice)", "full_signature": "public AccessResultCode setConfigurationObject(final DlmsConnectionManager conn,\n            final ConfigurationObjectDto configurationToSet, final ConfigurationObjectDto configurationOnDevice)", "class_method_signature": "SetConfigurationObjectService.setConfigurationObject(final DlmsConnectionManager conn,\n            final ConfigurationObjectDto configurationToSet, final ConfigurationObjectDto configurationOnDevice)", "testcase": false, "constructor": false}, {"identifier": "getAccessResultCode", "parameters": "(final DlmsConnectionManager conn, final SetParameter setParameter)", "modifiers": "private", "return": "AccessResultCode", "signature": "AccessResultCode getAccessResultCode(final DlmsConnectionManager conn, final SetParameter setParameter)", "full_signature": "private AccessResultCode getAccessResultCode(final DlmsConnectionManager conn, final SetParameter setParameter)", "class_method_signature": "SetConfigurationObjectService.getAccessResultCode(final DlmsConnectionManager conn, final SetParameter setParameter)", "testcase": false, "constructor": false}, {"identifier": "buildSetParameterData", "parameters": "(ConfigurationObjectDto configurationToSet,\n            ConfigurationObjectDto configurationOnDevice)", "modifiers": "abstract", "return": "DataObject", "signature": "DataObject buildSetParameterData(ConfigurationObjectDto configurationToSet,\n            ConfigurationObjectDto configurationOnDevice)", "full_signature": "abstract DataObject buildSetParameterData(ConfigurationObjectDto configurationToSet,\n            ConfigurationObjectDto configurationOnDevice)", "class_method_signature": "SetConfigurationObjectService.buildSetParameterData(ConfigurationObjectDto configurationToSet,\n            ConfigurationObjectDto configurationOnDevice)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "modifiers": "", "return": "BitString", "signature": "BitString getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "full_signature": " BitString getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "class_method_signature": "SetConfigurationObjectService.getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "testcase": false, "constructor": false}, {"identifier": "addSettableFlags", "parameters": "(final ConfigurationObjectDto configurationToSet,\n            final List<ConfigurationFlagDto> flagsToSet)", "modifiers": "private", "return": "void", "signature": "void addSettableFlags(final ConfigurationObjectDto configurationToSet,\n            final List<ConfigurationFlagDto> flagsToSet)", "full_signature": "private void addSettableFlags(final ConfigurationObjectDto configurationToSet,\n            final List<ConfigurationFlagDto> flagsToSet)", "class_method_signature": "SetConfigurationObjectService.addSettableFlags(final ConfigurationObjectDto configurationToSet,\n            final List<ConfigurationFlagDto> flagsToSet)", "testcase": false, "constructor": false}, {"identifier": "addDeviceFlags", "parameters": "(final ConfigurationObjectDto configurationOnDevice,\n            final List<ConfigurationFlagDto> flagsToSet)", "modifiers": "private", "return": "void", "signature": "void addDeviceFlags(final ConfigurationObjectDto configurationOnDevice,\n            final List<ConfigurationFlagDto> flagsToSet)", "full_signature": "private void addDeviceFlags(final ConfigurationObjectDto configurationOnDevice,\n            final List<ConfigurationFlagDto> flagsToSet)", "class_method_signature": "SetConfigurationObjectService.addDeviceFlags(final ConfigurationObjectDto configurationOnDevice,\n            final List<ConfigurationFlagDto> flagsToSet)", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "(final List<ConfigurationFlagDto> flags)", "modifiers": "private", "return": "byte[]", "signature": "byte[] toBytes(final List<ConfigurationFlagDto> flags)", "full_signature": "private byte[] toBytes(final List<ConfigurationFlagDto> flags)", "class_method_signature": "SetConfigurationObjectService.toBytes(final List<ConfigurationFlagDto> flags)", "testcase": false, "constructor": false}, {"identifier": "createEmptyWord", "parameters": "()", "modifiers": "private", "return": "StringBuilder", "signature": "StringBuilder createEmptyWord()", "full_signature": "private StringBuilder createEmptyWord()", "class_method_signature": "SetConfigurationObjectService.createEmptyWord()", "testcase": false, "constructor": false}, {"identifier": "toWord", "parameters": "(final List<ConfigurationFlagDto> flags)", "modifiers": "private", "return": "String", "signature": "String toWord(final List<ConfigurationFlagDto> flags)", "full_signature": "private String toWord(final List<ConfigurationFlagDto> flags)", "class_method_signature": "SetConfigurationObjectService.toWord(final List<ConfigurationFlagDto> flags)", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "(final String word)", "modifiers": "private", "return": "byte[]", "signature": "byte[] toBytes(final String word)", "full_signature": "private byte[] toBytes(final String word)", "class_method_signature": "SetConfigurationObjectService.toBytes(final String word)", "testcase": false, "constructor": false}, {"identifier": "getBitPosition", "parameters": "(ConfigurationFlagTypeDto type)", "modifiers": "abstract", "return": "Optional<Integer>", "signature": "Optional<Integer> getBitPosition(ConfigurationFlagTypeDto type)", "full_signature": "abstract Optional<Integer> getBitPosition(ConfigurationFlagTypeDto type)", "class_method_signature": "SetConfigurationObjectService.getBitPosition(ConfigurationFlagTypeDto type)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/SetConfigurationObjectService.java"}, "focal_method": {"identifier": "getFlags", "parameters": "(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "modifiers": "", "return": "BitString", "body": "BitString getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice) throws ProtocolAdapterException {\n        final List<ConfigurationFlagDto> flagsToSet = new ArrayList<>();\n        this.addSettableFlags(configurationToSet, flagsToSet);\n        this.addDeviceFlags(configurationOnDevice, flagsToSet);\n        final byte[] flagBytesToSet = this.toBytes(flagsToSet);\n        return new BitString(flagBytesToSet, NUMBER_OF_FLAG_BITS);\n    }", "signature": "BitString getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "full_signature": " BitString getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "class_method_signature": "SetConfigurationObjectService.getFlags(final ConfigurationObjectDto configurationToSet,\n            final ConfigurationObjectDto configurationOnDevice)", "testcase": false, "constructor": false, "invocations": ["addSettableFlags", "addDeviceFlags", "toBytes"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}