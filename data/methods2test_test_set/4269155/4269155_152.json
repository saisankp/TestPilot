{"test_class": {"identifier": "PublisherRendererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PublisherRenderer renderer;", "modifier": "private", "type": "PublisherRenderer", "declarator": "renderer", "var_name": "renderer"}, {"original_string": "private StringRenderer internalRenderer;", "modifier": "private", "type": "StringRenderer", "declarator": "internalRenderer", "var_name": "internalRenderer"}], "file": "tiles-request-api/src/test/java/org/apache/tiles/request/render/PublisherRendererTest.java"}, "test_case": {"identifier": "testIsRenderable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsRenderable() {\n        Request requestContext = createMock(Request.class);\n        RendererListener listener = createMock(RendererListener.class);\n        replay(requestContext);\n        renderer.addListener(listener);\n        assertTrue(renderer.isRenderable(\"Result\", requestContext));\n        verify(requestContext);\n    }", "signature": "void testIsRenderable()", "full_signature": "@Test public void testIsRenderable()", "class_method_signature": "PublisherRendererTest.testIsRenderable()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "replay", "addListener", "assertTrue", "isRenderable", "verify"]}, "focal_class": {"identifier": "PublisherRenderer", "superclass": "", "interfaces": "implements Renderer", "fields": [{"original_string": "private final Renderer renderer;", "modifier": "private final", "type": "Renderer", "declarator": "renderer", "var_name": "renderer"}, {"original_string": "private final List<RendererListener> listeners = new ArrayList<RendererListener>();", "modifier": "private final", "type": "List<RendererListener>", "declarator": "listeners = new ArrayList<RendererListener>()", "var_name": "listeners"}, {"original_string": "private final List<RendererListener> listenersReversed = new ArrayList<RendererListener>();", "modifier": "private final", "type": "List<RendererListener>", "declarator": "listenersReversed = new ArrayList<RendererListener>()", "var_name": "listenersReversed"}], "methods": [{"identifier": "PublisherRenderer", "parameters": "(Renderer renderer)", "modifiers": "public", "return": "", "signature": " PublisherRenderer(Renderer renderer)", "full_signature": "public  PublisherRenderer(Renderer renderer)", "class_method_signature": "PublisherRenderer.PublisherRenderer(Renderer renderer)", "testcase": false, "constructor": true}, {"identifier": "render", "parameters": "(String path, Request request)", "modifiers": "@Override public", "return": "void", "signature": "void render(String path, Request request)", "full_signature": "@Override public void render(String path, Request request)", "class_method_signature": "PublisherRenderer.render(String path, Request request)", "testcase": false, "constructor": false}, {"identifier": "isRenderable", "parameters": "(String path, Request request)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRenderable(String path, Request request)", "full_signature": "@Override public boolean isRenderable(String path, Request request)", "class_method_signature": "PublisherRenderer.isRenderable(String path, Request request)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(RendererListener listener)", "modifiers": "public", "return": "void", "signature": "void addListener(RendererListener listener)", "full_signature": "public void addListener(RendererListener listener)", "class_method_signature": "PublisherRenderer.addListener(RendererListener listener)", "testcase": false, "constructor": false}, {"identifier": "handleIOException", "parameters": "(IOException exception, Request request)", "modifiers": "private", "return": "void", "signature": "void handleIOException(IOException exception, Request request)", "full_signature": "private void handleIOException(IOException exception, Request request)", "class_method_signature": "PublisherRenderer.handleIOException(IOException exception, Request request)", "testcase": false, "constructor": false}], "file": "tiles-request-api/src/main/java/org/apache/tiles/request/render/PublisherRenderer.java"}, "focal_method": {"identifier": "isRenderable", "parameters": "(String path, Request request)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isRenderable(String path, Request request) {\n        return renderer.isRenderable(path, request);\n    }", "signature": "boolean isRenderable(String path, Request request)", "full_signature": "@Override public boolean isRenderable(String path, Request request)", "class_method_signature": "PublisherRenderer.isRenderable(String path, Request request)", "testcase": false, "constructor": false, "invocations": ["isRenderable"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}