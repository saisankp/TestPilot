{"test_class": {"identifier": "MongoDbUriSupplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_URI = \"mongodb://user-name-1234-5678-abcdefg:password12345@\" +\n            \"first.hostname.com:10000,second.hostname.com:20000,third.hostname.com:30000,fourth.hostname\" +\n            \"fifth.hostname.com:50000,sixth.hostname.com:60000,seventh:hostname.com:70000\" +\n            \"/database-name?replicaSet=streched-0003&maxIdleTimeMS=240000&w=majority\" +\n            \"&readPreference=primaryPreferred&ssl=true&sslInvalidHostNameAllowed=true\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_URI = \"mongodb://user-name-1234-5678-abcdefg:password12345@\" +\n            \"first.hostname.com:10000,second.hostname.com:20000,third.hostname.com:30000,fourth.hostname\" +\n            \"fifth.hostname.com:50000,sixth.hostname.com:60000,seventh:hostname.com:70000\" +\n            \"/database-name?replicaSet=streched-0003&maxIdleTimeMS=240000&w=majority\" +\n            \"&readPreference=primaryPreferred&ssl=true&sslInvalidHostNameAllowed=true\"", "var_name": "SOURCE_URI"}, {"original_string": "private static final String KEY_URI = MongoDbUriSupplier.URI_CONFIG_PATH;", "modifier": "private static final", "type": "String", "declarator": "KEY_URI = MongoDbUriSupplier.URI_CONFIG_PATH", "var_name": "KEY_URI"}, {"original_string": "private static final String KEY_OPTIONS = DefaultOptionsConfig.CONFIG_PATH;", "modifier": "private static final", "type": "String", "declarator": "KEY_OPTIONS = DefaultOptionsConfig.CONFIG_PATH", "var_name": "KEY_OPTIONS"}], "file": "services/utils/persistence/src/test/java/org/eclipse/ditto/services/utils/persistence/mongo/config/MongoDbUriSupplierTest.java"}, "test_case": {"identifier": "tryToGetInstanceWithNullConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToGetInstanceWithNullConfig() {\n        assertThatExceptionOfType(DittoConfigError.class)\n                .isThrownBy(() -> MongoDbUriSupplier.of(null))\n                .withCause(new NullPointerException(\"The MongoDB Config must not be null!\"));\n    }", "signature": "void tryToGetInstanceWithNullConfig()", "full_signature": "@Test public void tryToGetInstanceWithNullConfig()", "class_method_signature": "MongoDbUriSupplierTest.tryToGetInstanceWithNullConfig()", "testcase": true, "constructor": false, "invocations": ["withCause", "isThrownBy", "assertThatExceptionOfType", "of"]}, "focal_class": {"identifier": "MongoDbUriSupplier", "superclass": "", "interfaces": "implements Supplier<String>", "fields": [{"original_string": "static final String URI_CONFIG_PATH = \"uri\";", "modifier": "static final", "type": "String", "declarator": "URI_CONFIG_PATH = \"uri\"", "var_name": "URI_CONFIG_PATH"}, {"original_string": "private final Config mongoDbConfig;", "modifier": "private final", "type": "Config", "declarator": "mongoDbConfig", "var_name": "mongoDbConfig"}, {"original_string": "private final URI mongoDbSourceUri;", "modifier": "private final", "type": "URI", "declarator": "mongoDbSourceUri", "var_name": "mongoDbSourceUri"}], "methods": [{"identifier": "MongoDbUriSupplier", "parameters": "(final Config theMongoDbConfig, final URI theMongoDbSourceUri)", "modifiers": "private", "return": "", "signature": " MongoDbUriSupplier(final Config theMongoDbConfig, final URI theMongoDbSourceUri)", "full_signature": "private  MongoDbUriSupplier(final Config theMongoDbConfig, final URI theMongoDbSourceUri)", "class_method_signature": "MongoDbUriSupplier.MongoDbUriSupplier(final Config theMongoDbConfig, final URI theMongoDbSourceUri)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Config mongoDbConfig)", "modifiers": "static", "return": "MongoDbUriSupplier", "signature": "MongoDbUriSupplier of(final Config mongoDbConfig)", "full_signature": "static MongoDbUriSupplier of(final Config mongoDbConfig)", "class_method_signature": "MongoDbUriSupplier.of(final Config mongoDbConfig)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(@Nullable final Config mongoDbConfig)", "modifiers": "private static", "return": "void", "signature": "void validate(@Nullable final Config mongoDbConfig)", "full_signature": "private static void validate(@Nullable final Config mongoDbConfig)", "class_method_signature": "MongoDbUriSupplier.validate(@Nullable final Config mongoDbConfig)", "testcase": false, "constructor": false}, {"identifier": "tryToGetMongoDbSourceUri", "parameters": "(final String mongoDbUriString)", "modifiers": "private static", "return": "URI", "signature": "URI tryToGetMongoDbSourceUri(final String mongoDbUriString)", "full_signature": "private static URI tryToGetMongoDbSourceUri(final String mongoDbUriString)", "class_method_signature": "MongoDbUriSupplier.tryToGetMongoDbSourceUri(final String mongoDbUriString)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String get()", "full_signature": "@Override public String get()", "class_method_signature": "MongoDbUriSupplier.get()", "testcase": false, "constructor": false}, {"identifier": "tryToCreateMongoDbTargetUri", "parameters": "()", "modifiers": "private", "return": "URI", "signature": "URI tryToCreateMongoDbTargetUri()", "full_signature": "private URI tryToCreateMongoDbTargetUri()", "class_method_signature": "MongoDbUriSupplier.tryToCreateMongoDbTargetUri()", "testcase": false, "constructor": false}, {"identifier": "createMongoDbTargetUri", "parameters": "()", "modifiers": "private", "return": "URI", "signature": "URI createMongoDbTargetUri()", "full_signature": "private URI createMongoDbTargetUri()", "class_method_signature": "MongoDbUriSupplier.createMongoDbTargetUri()", "testcase": false, "constructor": false}, {"identifier": "getTargetQueryComponent", "parameters": "()", "modifiers": "@Nullable private", "return": "String", "signature": "String getTargetQueryComponent()", "full_signature": "@Nullable private String getTargetQueryComponent()", "class_method_signature": "MongoDbUriSupplier.getTargetQueryComponent()", "testcase": false, "constructor": false}], "file": "services/utils/persistence/src/main/java/org/eclipse/ditto/services/utils/persistence/mongo/config/MongoDbUriSupplier.java"}, "focal_method": {"identifier": "of", "parameters": "(final Config mongoDbConfig)", "modifiers": "static", "return": "MongoDbUriSupplier", "body": "static MongoDbUriSupplier of(final Config mongoDbConfig) {\n        validate(mongoDbConfig);\n\n        return new MongoDbUriSupplier(mongoDbConfig, tryToGetMongoDbSourceUri(mongoDbConfig.getString(URI_CONFIG_PATH)));\n    }", "signature": "MongoDbUriSupplier of(final Config mongoDbConfig)", "full_signature": "static MongoDbUriSupplier of(final Config mongoDbConfig)", "class_method_signature": "MongoDbUriSupplier.of(final Config mongoDbConfig)", "testcase": false, "constructor": false, "invocations": ["validate", "tryToGetMongoDbSourceUri", "getString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}