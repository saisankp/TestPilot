{"test_class": {"identifier": "FibonacciTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/insightfullogic/java8/answers/chapter5/FibonacciTest.java"}, "test_case": {"identifier": "fibonacciMatchesOpeningSequence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fibonacciMatchesOpeningSequence() {\n        List<Long> fibonacciSequence = Arrays.asList(0L, 1L, 1L, 2L, 3L, 5L, 8L, 13L, 21L, 34L);\n\n        IntStream.range(0, fibonacciSequence.size())\n                 .forEach(x -> {\n                     com.insightfullogic.java8.answers.chapter5.Fibonacci fibonacci = new Fibonacci();\n                     long result = fibonacci.fibonacci(x);\n                     long expectedResult = fibonacciSequence.get(x);\n                     assertEquals(expectedResult, result);\n                 });\n    }", "signature": "void fibonacciMatchesOpeningSequence()", "full_signature": "@Test public void fibonacciMatchesOpeningSequence()", "class_method_signature": "FibonacciTest.fibonacciMatchesOpeningSequence()", "testcase": true, "constructor": false, "invocations": ["asList", "forEach", "range", "size", "fibonacci", "get", "assertEquals"]}, "focal_class": {"identifier": "Fibonacci", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<Integer,Long> cache;", "modifier": "private final", "type": "Map<Integer,Long>", "declarator": "cache", "var_name": "cache"}], "methods": [{"identifier": "Fibonacci", "parameters": "()", "modifiers": "public", "return": "", "signature": " Fibonacci()", "full_signature": "public  Fibonacci()", "class_method_signature": "Fibonacci.Fibonacci()", "testcase": false, "constructor": true}, {"identifier": "fibonacci", "parameters": "(int x)", "modifiers": "public", "return": "long", "signature": "long fibonacci(int x)", "full_signature": "public long fibonacci(int x)", "class_method_signature": "Fibonacci.fibonacci(int x)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/answers/chapter5/Fibonacci.java"}, "focal_method": {"identifier": "Fibonacci", "parameters": "()", "modifiers": "public", "return": "", "body": "public Fibonacci() {\n        cache = new HashMap<>();\n        cache.put(0, 0L);\n        cache.put(1, 1L);\n    }", "signature": " Fibonacci()", "full_signature": "public  Fibonacci()", "class_method_signature": "Fibonacci.Fibonacci()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}