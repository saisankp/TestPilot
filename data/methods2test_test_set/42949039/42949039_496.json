{"test_class": {"identifier": "StorageUnitDaoHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private MessageNotificationEventService messageNotificationEventService;", "modifier": "@Mock\n    private", "type": "MessageNotificationEventService", "declarator": "messageNotificationEventService", "var_name": "messageNotificationEventService"}, {"original_string": "@Mock\n    private StorageDao storageDao;", "modifier": "@Mock\n    private", "type": "StorageDao", "declarator": "storageDao", "var_name": "storageDao"}, {"original_string": "@Mock\n    private StorageUnitDao storageUnitDao;", "modifier": "@Mock\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@InjectMocks\n    private StorageUnitDaoHelper storageUnitDaoHelper;", "modifier": "@InjectMocks\n    private", "type": "StorageUnitDaoHelper", "declarator": "storageUnitDaoHelper", "var_name": "storageUnitDaoHelper"}, {"original_string": "@Mock\n    private StorageUnitStatusDaoHelper storageUnitStatusDaoHelper;", "modifier": "@Mock\n    private", "type": "StorageUnitStatusDaoHelper", "declarator": "storageUnitStatusDaoHelper", "var_name": "storageUnitStatusDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageUnitDaoHelperTest.java"}, "test_case": {"identifier": "testGetStorageUnitEntityByBusinessObjectDataAndStorageStorageUnitNoExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStorageUnitEntityByBusinessObjectDataAndStorageStorageUnitNoExists()\n    {\n        // Create a business object data entity.\n        BusinessObjectDataEntity businessObjectDataEntity = new BusinessObjectDataEntity();\n\n        // Create a storage entity.\n        StorageEntity storageEntity = new StorageEntity();\n        storageEntity.setName(STORAGE_NAME);\n\n        // Mock the external calls.\n        when(storageUnitDao.getStorageUnitByBusinessObjectDataAndStorage(businessObjectDataEntity, storageEntity)).thenReturn(null);\n        when(businessObjectDataHelper.businessObjectDataEntityAltKeyToString(businessObjectDataEntity)).thenReturn(BUSINESS_OBJECT_DATA_KEY_AS_STRING);\n\n        // Try to call the method under test.\n        try\n        {\n            storageUnitDaoHelper.getStorageUnitEntityByBusinessObjectDataAndStorage(businessObjectDataEntity, storageEntity);\n            fail();\n        }\n        catch (ObjectNotFoundException e)\n        {\n            assertEquals(String\n                    .format(\"Could not find storage unit in \\\"%s\\\" storage for the business object data {%s}.\", STORAGE_NAME, BUSINESS_OBJECT_DATA_KEY_AS_STRING),\n                e.getMessage());\n        }\n\n        // Verify the external calls.\n        verify(storageUnitDao).getStorageUnitByBusinessObjectDataAndStorage(businessObjectDataEntity, storageEntity);\n        verify(businessObjectDataHelper).businessObjectDataEntityAltKeyToString(businessObjectDataEntity);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetStorageUnitEntityByBusinessObjectDataAndStorageStorageUnitNoExists()", "full_signature": "@Test public void testGetStorageUnitEntityByBusinessObjectDataAndStorageStorageUnitNoExists()", "class_method_signature": "StorageUnitDaoHelperTest.testGetStorageUnitEntityByBusinessObjectDataAndStorageStorageUnitNoExists()", "testcase": true, "constructor": false, "invocations": ["setName", "thenReturn", "when", "getStorageUnitByBusinessObjectDataAndStorage", "thenReturn", "when", "businessObjectDataEntityAltKeyToString", "getStorageUnitEntityByBusinessObjectDataAndStorage", "fail", "assertEquals", "format", "getMessage", "getStorageUnitByBusinessObjectDataAndStorage", "verify", "businessObjectDataEntityAltKeyToString", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "StorageUnitDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatHelper businessObjectFormatHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatHelper", "declarator": "businessObjectFormatHelper", "var_name": "businessObjectFormatHelper"}, {"original_string": "@Autowired\n    private MessageNotificationEventService messageNotificationEventService;", "modifier": "@Autowired\n    private", "type": "MessageNotificationEventService", "declarator": "messageNotificationEventService", "var_name": "messageNotificationEventService"}, {"original_string": "@Autowired\n    private StorageDao storageDao;", "modifier": "@Autowired\n    private", "type": "StorageDao", "declarator": "storageDao", "var_name": "storageDao"}, {"original_string": "@Autowired\n    private StorageUnitDao storageUnitDao;", "modifier": "@Autowired\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Autowired\n    private StorageUnitStatusDaoHelper storageUnitStatusDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitStatusDaoHelper", "declarator": "storageUnitStatusDaoHelper", "var_name": "storageUnitStatusDaoHelper"}], "methods": [{"identifier": "findExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData", "parameters": "(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectFormat businessObjectFormat, BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "StorageUnitEntity", "signature": "StorageUnitEntity findExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectFormat businessObjectFormat, BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public StorageUnitEntity findExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectFormat businessObjectFormat, BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageUnitDaoHelper.findExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectFormat businessObjectFormat, BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitEntity", "parameters": "(String storageName, BusinessObjectDataEntity businessObjectDataEntity)", "modifiers": "public", "return": "StorageUnitEntity", "signature": "StorageUnitEntity getStorageUnitEntity(String storageName, BusinessObjectDataEntity businessObjectDataEntity)", "full_signature": "public StorageUnitEntity getStorageUnitEntity(String storageName, BusinessObjectDataEntity businessObjectDataEntity)", "class_method_signature": "StorageUnitDaoHelper.getStorageUnitEntity(String storageName, BusinessObjectDataEntity businessObjectDataEntity)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitEntityByBusinessObjectDataAndStorage", "parameters": "(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "modifiers": "public", "return": "StorageUnitEntity", "signature": "StorageUnitEntity getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "full_signature": "public StorageUnitEntity getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "class_method_signature": "StorageUnitDaoHelper.getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitEntityByKey", "parameters": "(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "modifiers": "public", "return": "StorageUnitEntity", "signature": "StorageUnitEntity getStorageUnitEntityByKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "full_signature": "public StorageUnitEntity getStorageUnitEntityByKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "class_method_signature": "StorageUnitDaoHelper.getStorageUnitEntityByKey(BusinessObjectDataStorageUnitKey businessObjectDataStorageUnitKey)", "testcase": false, "constructor": false}, {"identifier": "setStorageUnitStatus", "parameters": "(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity)", "modifiers": "public", "return": "void", "signature": "void setStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity)", "full_signature": "public void setStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity)", "class_method_signature": "StorageUnitDaoHelper.setStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity)", "testcase": false, "constructor": false}, {"identifier": "updateStorageUnitStatus", "parameters": "(StorageUnitEntity storageUnitEntity, String storageUnitStatus, String reason)", "modifiers": "public", "return": "void", "signature": "void updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, String storageUnitStatus, String reason)", "full_signature": "public void updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, String storageUnitStatus, String reason)", "class_method_signature": "StorageUnitDaoHelper.updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, String storageUnitStatus, String reason)", "testcase": false, "constructor": false}, {"identifier": "updateStorageUnitStatus", "parameters": "(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity, String reason)", "modifiers": "public", "return": "void", "signature": "void updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity, String reason)", "full_signature": "public void updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity, String reason)", "class_method_signature": "StorageUnitDaoHelper.updateStorageUnitStatus(StorageUnitEntity storageUnitEntity, StorageUnitStatusEntity storageUnitStatusEntity, String reason)", "testcase": false, "constructor": false}, {"identifier": "validateNoExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData", "parameters": "(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectDataKey businessObjectDataKey, String s3KeyPrefix)", "modifiers": "public", "return": "void", "signature": "void validateNoExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectDataKey businessObjectDataKey, String s3KeyPrefix)", "full_signature": "public void validateNoExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectDataKey businessObjectDataKey, String s3KeyPrefix)", "class_method_signature": "StorageUnitDaoHelper.validateNoExplicitlyRegisteredSubPartitionInStorageForBusinessObjectData(StorageEntity storageEntity,\n        BusinessObjectFormatEntity businessObjectFormatEntity, BusinessObjectDataKey businessObjectDataKey, String s3KeyPrefix)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageUnitDaoHelper.java"}, "focal_method": {"identifier": "getStorageUnitEntityByBusinessObjectDataAndStorage", "parameters": "(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "modifiers": "public", "return": "StorageUnitEntity", "body": "public StorageUnitEntity getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)\n    {\n        StorageUnitEntity storageUnitEntity = storageUnitDao.getStorageUnitByBusinessObjectDataAndStorage(businessObjectDataEntity, storageEntity);\n\n        if (storageUnitEntity == null)\n        {\n            throw new ObjectNotFoundException(String\n                .format(\"Could not find storage unit in \\\"%s\\\" storage for the business object data {%s}.\", storageEntity.getName(),\n                    businessObjectDataHelper.businessObjectDataEntityAltKeyToString(businessObjectDataEntity)));\n        }\n\n        return storageUnitEntity;\n    }", "signature": "StorageUnitEntity getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "full_signature": "public StorageUnitEntity getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "class_method_signature": "StorageUnitDaoHelper.getStorageUnitEntityByBusinessObjectDataAndStorage(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "testcase": false, "constructor": false, "invocations": ["getStorageUnitByBusinessObjectDataAndStorage", "format", "getName", "businessObjectDataEntityAltKeyToString"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}