{"test_class": {"identifier": "RepositoryErrorBundleTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private RepositoryErrorBundle repositoryErrorBundle;", "modifier": "@InjectMocks\n    private", "type": "RepositoryErrorBundle", "declarator": "repositoryErrorBundle", "var_name": "repositoryErrorBundle"}, {"original_string": "@Mock\n    private Exception mockException;", "modifier": "@Mock\n    private", "type": "Exception", "declarator": "mockException", "var_name": "mockException"}], "file": "Data/src/test/java/com/example/data/exception/RepositoryErrorBundleTest.java"}, "test_case": {"identifier": "testGetErrorMessageInteraction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetErrorMessageInteraction() {\n        repositoryErrorBundle.getErrorMessage();\n\n        verify(mockException).getMessage();\n    }", "signature": "void testGetErrorMessageInteraction()", "full_signature": "@Test public void testGetErrorMessageInteraction()", "class_method_signature": "RepositoryErrorBundleTest.testGetErrorMessageInteraction()", "testcase": true, "constructor": false, "invocations": ["getErrorMessage", "getMessage", "verify"]}, "focal_class": {"identifier": "RepositoryErrorBundle", "superclass": "", "interfaces": "implements ErrorBundle", "fields": [{"original_string": "private Error error;", "modifier": "private", "type": "Error", "declarator": "error", "var_name": "error"}, {"original_string": "private Exception exception;", "modifier": "private", "type": "Exception", "declarator": "exception", "var_name": "exception"}], "methods": [{"identifier": "RepositoryErrorBundle", "parameters": "(Error error)", "modifiers": "public", "return": "", "signature": " RepositoryErrorBundle(Error error)", "full_signature": "public  RepositoryErrorBundle(Error error)", "class_method_signature": "RepositoryErrorBundle.RepositoryErrorBundle(Error error)", "testcase": false, "constructor": true}, {"identifier": "RepositoryErrorBundle", "parameters": "(Error error, Exception exception)", "modifiers": "public", "return": "", "signature": " RepositoryErrorBundle(Error error, Exception exception)", "full_signature": "public  RepositoryErrorBundle(Error error, Exception exception)", "class_method_signature": "RepositoryErrorBundle.RepositoryErrorBundle(Error error, Exception exception)", "testcase": false, "constructor": true}, {"identifier": "getException", "parameters": "()", "modifiers": "public", "return": "Exception", "signature": "Exception getException()", "full_signature": "public Exception getException()", "class_method_signature": "RepositoryErrorBundle.getException()", "testcase": false, "constructor": false}, {"identifier": "getError", "parameters": "()", "modifiers": "@Override public", "return": "Error", "signature": "Error getError()", "full_signature": "@Override public Error getError()", "class_method_signature": "RepositoryErrorBundle.getError()", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "RepositoryErrorBundle.getErrorMessage()", "testcase": false, "constructor": false}], "file": "Data/src/main/java/com/example/data/exception/RepositoryErrorBundle.java"}, "focal_method": {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getErrorMessage() {\n    String message = \"\";\n    if (this.exception != null) {\n      this.exception.getMessage();\n    }\n    return message;\n  }", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "RepositoryErrorBundle.getErrorMessage()", "testcase": false, "constructor": false, "invocations": ["getMessage"]}, "repository": {"repo_id": 27030629, "url": "https://github.com/nenick/AndroidAppDevelopment", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 6155, "license": "licensed"}}