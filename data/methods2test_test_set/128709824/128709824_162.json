{"test_class": {"identifier": "AddressHolderFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/client/AddressHolderFactoryTest.java"}, "test_case": {"identifier": "getAddressHolder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAddressHolder() throws Exception {\n        ConsumerConfig consumerConfig = new ConsumerConfig().setBootstrap(\"test\").setAddressHolder(\"test\");\n        ConsumerBootstrap bootstrap = Bootstraps.from(consumerConfig);\n\n        Assert.assertEquals(AddressHolderFactory.getAddressHolder(bootstrap).getClass(), TestAddressHolder.class);\n\n        boolean error = false;\n        try {\n            consumerConfig.setAddressHolder(\"xasdsa\");\n            AddressHolderFactory.getAddressHolder(bootstrap);\n        } catch (Exception e) {\n            error = true;\n        }\n        Assert.assertTrue(error);\n    }", "signature": "void getAddressHolder()", "full_signature": "@Test public void getAddressHolder()", "class_method_signature": "AddressHolderFactoryTest.getAddressHolder()", "testcase": true, "constructor": false, "invocations": ["setAddressHolder", "setBootstrap", "from", "assertEquals", "getClass", "getAddressHolder", "setAddressHolder", "getAddressHolder", "assertTrue"]}, "focal_class": {"identifier": "AddressHolderFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getAddressHolder", "parameters": "(ConsumerBootstrap consumerBootstrap)", "modifiers": "public static", "return": "AddressHolder", "signature": "AddressHolder getAddressHolder(ConsumerBootstrap consumerBootstrap)", "full_signature": "public static AddressHolder getAddressHolder(ConsumerBootstrap consumerBootstrap)", "class_method_signature": "AddressHolderFactory.getAddressHolder(ConsumerBootstrap consumerBootstrap)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/client/AddressHolderFactory.java"}, "focal_method": {"identifier": "getAddressHolder", "parameters": "(ConsumerBootstrap consumerBootstrap)", "modifiers": "public static", "return": "AddressHolder", "body": "public static AddressHolder getAddressHolder(ConsumerBootstrap consumerBootstrap) {\n        String addressHolder = null;\n        try {\n            addressHolder = consumerBootstrap.getConsumerConfig().getAddressHolder();\n            ExtensionClass<AddressHolder> ext = ExtensionLoaderFactory.getExtensionLoader(AddressHolder.class)\n                .getExtensionClass(addressHolder);\n            if (ext == null) {\n                throw new SofaRpcRuntimeException(LogCodes.getLog(LogCodes.ERROR_LOAD_ADDRESS_HOLDER, addressHolder));\n            }\n            return ext.getExtInstance(new Class[] { ConsumerBootstrap.class }, new Object[] { consumerBootstrap });\n        } catch (SofaRpcRuntimeException e) {\n            throw e;\n        } catch (Throwable e) {\n            throw new SofaRpcRuntimeException(LogCodes.getLog(LogCodes.ERROR_LOAD_ADDRESS_HOLDER, addressHolder), e);\n        }\n    }", "signature": "AddressHolder getAddressHolder(ConsumerBootstrap consumerBootstrap)", "full_signature": "public static AddressHolder getAddressHolder(ConsumerBootstrap consumerBootstrap)", "class_method_signature": "AddressHolderFactory.getAddressHolder(ConsumerBootstrap consumerBootstrap)", "testcase": false, "constructor": false, "invocations": ["getAddressHolder", "getConsumerConfig", "getExtensionClass", "getExtensionLoader", "getLog", "getExtInstance", "getLog"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}