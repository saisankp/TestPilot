{"test_class": {"identifier": "CSSFileProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CssFileProcessor proc;", "modifier": "private", "type": "CssFileProcessor", "declarator": "proc", "var_name": "proc"}, {"original_string": "private FileRetrieve retriever;", "modifier": "private", "type": "FileRetrieve", "declarator": "retriever", "var_name": "retriever"}], "file": "xmlworker/src/test/java/com/itextpdf/tool/xml/css/CSSFileProcessorTest.java"}, "test_case": {"identifier": "parseCSS", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseCSS() throws IOException {\n        retriever.processFromStream(CSSFileProcessorTest.class.getResourceAsStream(\"/css/test.css\"), proc);\n        CssFile file = proc.getCss();\n        List<CssRule> rules = file.get(new Tag(\"body\"));\n        Assert.assertTrue(rules.size() == 1);\n        Assert.assertTrue(\"margin not found.\", rules.get(0).getNormalDeclarations().containsKey(\"margin\"));\n        Assert.assertEquals(\"Value for margin not correct.\", \"20px\", rules.get(0).getNormalDeclarations().get(\"margin\"));\n    }", "signature": "void parseCSS()", "full_signature": "@Test public void parseCSS()", "class_method_signature": "CSSFileProcessorTest.parseCSS()", "testcase": true, "constructor": false, "invocations": ["processFromStream", "getResourceAsStream", "getCss", "get", "assertTrue", "size", "assertTrue", "containsKey", "getNormalDeclarations", "get", "assertEquals", "get", "getNormalDeclarations", "get"]}, "focal_class": {"identifier": "CssFileProcessor", "superclass": "", "interfaces": "implements ReadingProcessor", "fields": [{"original_string": "private final CssFile css;", "modifier": "private final", "type": "CssFile", "declarator": "css", "var_name": "css"}, {"original_string": "private final CssStateController controller;", "modifier": "private final", "type": "CssStateController", "declarator": "controller", "var_name": "controller"}], "methods": [{"identifier": "CssFileProcessor", "parameters": "()", "modifiers": "public", "return": "", "signature": " CssFileProcessor()", "full_signature": "public  CssFileProcessor()", "class_method_signature": "CssFileProcessor.CssFileProcessor()", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(final int i)", "modifiers": "public", "return": "void", "signature": "void process(final int i)", "full_signature": "public void process(final int i)", "class_method_signature": "CssFileProcessor.process(final int i)", "testcase": false, "constructor": false}, {"identifier": "getCss", "parameters": "()", "modifiers": "public", "return": "CssFile", "signature": "CssFile getCss()", "full_signature": "public CssFile getCss()", "class_method_signature": "CssFileProcessor.getCss()", "testcase": false, "constructor": false}], "file": "xmlworker/src/main/java/com/itextpdf/tool/xml/css/CssFileProcessor.java"}, "focal_method": {"identifier": "getCss", "parameters": "()", "modifiers": "public", "return": "CssFile", "body": "public CssFile getCss() {\n        return css;\n    }", "signature": "CssFile getCss()", "full_signature": "public CssFile getCss()", "class_method_signature": "CssFileProcessor.getCss()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}