{"test_class": {"identifier": "IdentityRoleByIdentityDeduplicationBulkActionTest", "superclass": "extends AbstractBulkActionTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate IdmIdentityRoleService identityRoleService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityRoleService", "declarator": "identityRoleService", "var_name": "identityRoleService"}, {"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}, {"original_string": "@Autowired\n\tprivate IdmRoleRequestService roleRequestService;", "modifier": "@Autowired\n\tprivate", "type": "IdmRoleRequestService", "declarator": "roleRequestService", "var_name": "roleRequestService"}], "file": "Realization/backend/core/core-impl/src/test/java/eu/bcvsolutions/idm/core/bulk/action/impl/IdentityRoleByIdentityDeduplicationBulkActionTest.java"}, "test_case": {"identifier": "testAutomaticAndManuallyAndContractCombination", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAutomaticAndManuallyAndContractCombination() {\n\t\tString automaticRoleValue = \"test\" + System.currentTimeMillis();\n\n\t\tIdmIdentityDto identity = getHelper().createIdentity(new GuardedString());\n\t\tIdmIdentityContractDto primary = getHelper().getPrimeContract(identity);\n\t\tIdmIdentityContractDto identityContactOne = getHelper().createContract(identity);\n\t\tIdmIdentityContractDto identityContactTwo = getHelper().createContract(identity);\n\n\t\tidentity.setDescription(automaticRoleValue);\n\t\tidentity.setTitleAfter(automaticRoleValue);\n\t\tidentity.setTitleBefore(automaticRoleValue);\n\t\tidentity = identityService.save(identity);\n\n\t\tIdmRoleDto role = getHelper().createRole();\n\t\t\n\t\tIdmIdentityRoleDto primaryOne = getHelper().createIdentityRole(primary, role);\n\t\tIdmIdentityRoleDto contractOneOne = getHelper().createIdentityRole(identityContactOne, role);\n\t\tIdmIdentityRoleDto contractOneTwo = getHelper().createIdentityRole(identityContactOne, role);\n\t\tIdmIdentityRoleDto contractOneThree = getHelper().createIdentityRole(identityContactOne, role);\n\t\tIdmIdentityRoleDto contractOneFour = getHelper().createIdentityRole(identityContactOne, role);\n\t\tIdmIdentityRoleDto contractTwoOne = getHelper().createIdentityRole(identityContactTwo, role);\n\t\tIdmIdentityRoleDto contractTwoTwo = getHelper().createIdentityRole(identityContactTwo, role);\n\n\t\tIdmAutomaticRoleAttributeDto automaticRoleOne = getHelper().createAutomaticRole(role.getId());\n\t\tgetHelper().createAutomaticRoleRule(\n\t\t\t\tautomaticRoleOne.getId(),\n\t\t\t\tAutomaticRoleAttributeRuleComparison.EQUALS,\n\t\t\t\tAutomaticRoleAttributeRuleType.IDENTITY,\n\t\t\t\tIdmIdentity_.description.getName(), null, automaticRoleValue);\n\t\t\n\t\tIdmAutomaticRoleAttributeDto automaticRoleTwo = getHelper().createAutomaticRole(role.getId());\n\t\tgetHelper().createAutomaticRoleRule(\n\t\t\t\tautomaticRoleTwo.getId(),\n\t\t\t\tAutomaticRoleAttributeRuleComparison.EQUALS,\n\t\t\t\tAutomaticRoleAttributeRuleType.IDENTITY,\n\t\t\t\tIdmIdentity_.titleAfter.getName(), null, automaticRoleValue);\n\t\t\n\t\tIdmAutomaticRoleAttributeDto automaticRoleThree = getHelper().createAutomaticRole(role.getId());\n\t\tgetHelper().createAutomaticRoleRule(\n\t\t\t\tautomaticRoleThree.getId(),\n\t\t\t\tAutomaticRoleAttributeRuleComparison.EQUALS,\n\t\t\t\tAutomaticRoleAttributeRuleType.IDENTITY,\n\t\t\t\tIdmIdentity_.titleBefore.getName(), null, automaticRoleValue);\n\n\t\tgetHelper().recalculateAutomaticRoleByAttribute(automaticRoleOne.getId());\n\t\tgetHelper().recalculateAutomaticRoleByAttribute(automaticRoleTwo.getId());\n\t\tgetHelper().recalculateAutomaticRoleByAttribute(automaticRoleThree.getId());\n\n\t\t// 7 manually added and 9 automatically\n\t\tList<IdmIdentityRoleDto> roles = identityRoleService.findAllByIdentity(identity.getId());\n\t\tassertEquals(16, roles.size());\n\n\t\tIdmBulkActionDto bulkAction = this.findBulkAction(IdmIdentity.class, IdentityRoleByIdentityDeduplicationBulkAction.NAME);\n\t\tbulkAction.setIdentifiers(Sets.newHashSet(identity.getId()));\n\t\t\n\t\tIdmBulkActionDto processAction = bulkActionManager.processAction(bulkAction);\n\t\tcheckResultLrt(processAction, 1l, null, null);\n\n\t\troles = identityRoleService.findAllByIdentity(identity.getId());\n\t\tassertEquals(9, roles.size());\n\n\t\troles = identityRoleService.findAllByContract(primary.getId());\n\t\tassertEquals(3, roles.size());\n\t\tfor (IdmIdentityRoleDto identityRole : roles) {\n\t\t\tassertNotEquals(primaryOne.getId(), identityRole.getId());\n\t\t}\n\n\t\troles = identityRoleService.findAllByContract(primary.getId());\n\t\tassertEquals(3, roles.size());\n\t\tfor (IdmIdentityRoleDto identityRole : roles) {\n\t\t\tassertNotEquals(primaryOne.getId(), identityRole.getId());\n\t\t}\n\n\t\troles = identityRoleService.findAllByContract(identityContactOne.getId());\n\t\tassertEquals(3, roles.size());\n\t\tfor (IdmIdentityRoleDto identityRole : roles) {\n\t\t\tassertNotEquals(contractOneOne.getId(), identityRole.getId());\n\t\t\tassertNotEquals(contractOneTwo.getId(), identityRole.getId());\n\t\t\tassertNotEquals(contractOneThree.getId(), identityRole.getId());\n\t\t\tassertNotEquals(contractOneFour.getId(), identityRole.getId());\n\t\t}\n\n\t\troles = identityRoleService.findAllByContract(identityContactTwo.getId());\n\t\tassertEquals(3, roles.size());\n\t\tfor (IdmIdentityRoleDto identityRole : roles) {\n\t\t\tassertNotEquals(contractTwoOne.getId(), identityRole.getId());\n\t\t\tassertNotEquals(contractTwoTwo.getId(), identityRole.getId());\n\t\t}\n\t}", "signature": "void testAutomaticAndManuallyAndContractCombination()", "full_signature": "@Test public void testAutomaticAndManuallyAndContractCombination()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkActionTest.testAutomaticAndManuallyAndContractCombination()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "createIdentity", "getHelper", "getPrimeContract", "getHelper", "createContract", "getHelper", "createContract", "getHelper", "setDescription", "setTitleAfter", "setTitleBefore", "save", "createRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createIdentityRole", "getHelper", "createAutomaticRole", "getHelper", "getId", "createAutomaticRoleRule", "getHelper", "getId", "getName", "createAutomaticRole", "getHelper", "getId", "createAutomaticRoleRule", "getHelper", "getId", "getName", "createAutomaticRole", "getHelper", "getId", "createAutomaticRoleRule", "getHelper", "getId", "getName", "recalculateAutomaticRoleByAttribute", "getHelper", "getId", "recalculateAutomaticRoleByAttribute", "getHelper", "getId", "recalculateAutomaticRoleByAttribute", "getHelper", "getId", "findAllByIdentity", "getId", "assertEquals", "size", "findBulkAction", "setIdentifiers", "newHashSet", "getId", "processAction", "checkResultLrt", "findAllByIdentity", "getId", "assertEquals", "size", "findAllByContract", "getId", "assertEquals", "size", "assertNotEquals", "getId", "getId", "findAllByContract", "getId", "assertEquals", "size", "assertNotEquals", "getId", "getId", "findAllByContract", "getId", "assertEquals", "size", "assertNotEquals", "getId", "getId", "assertNotEquals", "getId", "getId", "assertNotEquals", "getId", "getId", "assertNotEquals", "getId", "getId", "findAllByContract", "getId", "assertEquals", "size", "assertNotEquals", "getId", "getId", "assertNotEquals", "getId", "getId"]}, "focal_class": {"identifier": "IdentityRoleByIdentityDeduplicationBulkAction", "superclass": "extends AbstractBulkAction<IdmIdentityDto, IdmIdentityFilter>", "interfaces": "", "fields": [{"original_string": "public static final String NAME = \"core-identity-role-by-identity-deduplication-bulk-action\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"core-identity-role-by-identity-deduplication-bulk-action\"", "var_name": "NAME"}, {"original_string": "public static final String CHECK_SUBDEFINITION_CODE = \"checkSubdefinition\";", "modifier": "public static final", "type": "String", "declarator": "CHECK_SUBDEFINITION_CODE = \"checkSubdefinition\"", "var_name": "CHECK_SUBDEFINITION_CODE"}, {"original_string": "public static final String APPROVE_CODE = \"approve\";", "modifier": "public static final", "type": "String", "declarator": "APPROVE_CODE = \"approve\"", "var_name": "APPROVE_CODE"}, {"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}, {"original_string": "@Autowired\n\tprivate IdmIdentityRoleService identityRoleService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityRoleService", "declarator": "identityRoleService", "var_name": "identityRoleService"}, {"original_string": "@Autowired\n\tprivate IdmIdentityContractService identityContractService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityContractService", "declarator": "identityContractService", "var_name": "identityContractService"}, {"original_string": "@Autowired\n\tprivate IdmRoleRequestService roleRequestService;", "modifier": "@Autowired\n\tprivate", "type": "IdmRoleRequestService", "declarator": "roleRequestService", "var_name": "roleRequestService"}, {"original_string": "@Autowired\n\tprivate IdmConceptRoleRequestService conceptRoleRequestService;", "modifier": "@Autowired\n\tprivate", "type": "IdmConceptRoleRequestService", "declarator": "conceptRoleRequestService", "var_name": "conceptRoleRequestService"}], "methods": [{"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter>", "signature": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "full_signature": "@Override public ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getService()", "testcase": false, "constructor": false}, {"identifier": "getFormAttributes", "parameters": "()", "modifiers": "@Override public", "return": "List<IdmFormAttributeDto>", "signature": "List<IdmFormAttributeDto> getFormAttributes()", "full_signature": "@Override public List<IdmFormAttributeDto> getFormAttributes()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getFormAttributes()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getName()", "testcase": false, "constructor": false}, {"identifier": "processDto", "parameters": "(IdmIdentityDto dto)", "modifiers": "@Override protected", "return": "OperationResult", "signature": "OperationResult processDto(IdmIdentityDto dto)", "full_signature": "@Override protected OperationResult processDto(IdmIdentityDto dto)", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.processDto(IdmIdentityDto dto)", "testcase": false, "constructor": false}, {"identifier": "getAuthoritiesForEntity", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getAuthoritiesForEntity()", "full_signature": "@Override protected List<String> getAuthoritiesForEntity()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getAuthoritiesForEntity()", "testcase": false, "constructor": false}, {"identifier": "getAuthoritiesForIdentityRole", "parameters": "()", "modifiers": "private", "return": "List<String>", "signature": "List<String> getAuthoritiesForIdentityRole()", "full_signature": "private List<String> getAuthoritiesForIdentityRole()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getAuthoritiesForIdentityRole()", "testcase": false, "constructor": false}, {"identifier": "getAuthoritiesForIdentityContract", "parameters": "()", "modifiers": "private", "return": "List<String>", "signature": "List<String> getAuthoritiesForIdentityContract()", "full_signature": "private List<String> getAuthoritiesForIdentityContract()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getAuthoritiesForIdentityContract()", "testcase": false, "constructor": false}, {"identifier": "processDuplicitiesForContract", "parameters": "(IdmIdentityContractDto contract)", "modifiers": "private", "return": "List<IdmConceptRoleRequestDto>", "signature": "List<IdmConceptRoleRequestDto> processDuplicitiesForContract(IdmIdentityContractDto contract)", "full_signature": "private List<IdmConceptRoleRequestDto> processDuplicitiesForContract(IdmIdentityContractDto contract)", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.processDuplicitiesForContract(IdmIdentityContractDto contract)", "testcase": false, "constructor": false}, {"identifier": "getDuplicatesIdentityRoleForContract", "parameters": "(IdmIdentityContractDto contract)", "modifiers": "public", "return": "List<IdmIdentityRoleDto>", "signature": "List<IdmIdentityRoleDto> getDuplicatesIdentityRoleForContract(IdmIdentityContractDto contract)", "full_signature": "public List<IdmIdentityRoleDto> getDuplicatesIdentityRoleForContract(IdmIdentityContractDto contract)", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getDuplicatesIdentityRoleForContract(IdmIdentityContractDto contract)", "testcase": false, "constructor": false}, {"identifier": "isApprove", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isApprove()", "full_signature": "private boolean isApprove()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.isApprove()", "testcase": false, "constructor": false}, {"identifier": "isCheckSubdefinition", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isCheckSubdefinition()", "full_signature": "private boolean isCheckSubdefinition()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.isCheckSubdefinition()", "testcase": false, "constructor": false}, {"identifier": "getApproveAttribute", "parameters": "()", "modifiers": "private", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getApproveAttribute()", "full_signature": "private IdmFormAttributeDto getApproveAttribute()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getApproveAttribute()", "testcase": false, "constructor": false}, {"identifier": "getCheckSubdefinition", "parameters": "()", "modifiers": "private", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getCheckSubdefinition()", "full_signature": "private IdmFormAttributeDto getCheckSubdefinition()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getCheckSubdefinition()", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getLevel", "parameters": "()", "modifiers": "@Override public", "return": "NotificationLevel", "signature": "NotificationLevel getLevel()", "full_signature": "@Override public NotificationLevel getLevel()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getLevel()", "testcase": false, "constructor": false}], "file": "Realization/backend/core/core-impl/src/main/java/eu/bcvsolutions/idm/core/bulk/action/impl/IdentityRoleByIdentityDeduplicationBulkAction.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String getName() {\n\t\treturn IdentityRoleByIdentityDeduplicationBulkAction.NAME;\n\t}", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityRoleByIdentityDeduplicationBulkAction.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}