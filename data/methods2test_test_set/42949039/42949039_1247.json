{"test_class": {"identifier": "BusinessObjectDefinitionSubjectMatterExpertRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private BusinessObjectDefinitionSubjectMatterExpertRestController businessObjectDefinitionSubjectMatterExpertRestController;", "modifier": "@InjectMocks\n    private", "type": "BusinessObjectDefinitionSubjectMatterExpertRestController", "declarator": "businessObjectDefinitionSubjectMatterExpertRestController", "var_name": "businessObjectDefinitionSubjectMatterExpertRestController"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionSubjectMatterExpertService businessObjectDefinitionSubjectMatterExpertService;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionSubjectMatterExpertService", "declarator": "businessObjectDefinitionSubjectMatterExpertService", "var_name": "businessObjectDefinitionSubjectMatterExpertService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/BusinessObjectDefinitionSubjectMatterExpertRestControllerTest.java"}, "test_case": {"identifier": "testCreateBusinessObjectDefinitionSubjectMatterExpert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateBusinessObjectDefinitionSubjectMatterExpert()\n    {\n        // Create a business object definition subject matter expert key.\n        BusinessObjectDefinitionSubjectMatterExpertKey key = new BusinessObjectDefinitionSubjectMatterExpertKey(BDEF_NAMESPACE, BDEF_NAME, USER_ID);\n\n        BusinessObjectDefinitionSubjectMatterExpertCreateRequest request = new BusinessObjectDefinitionSubjectMatterExpertCreateRequest(key);\n\n        BusinessObjectDefinitionSubjectMatterExpert businessObjectDefinitionSubjectMatterExpert = new BusinessObjectDefinitionSubjectMatterExpert(ID, key);\n\n        when(businessObjectDefinitionSubjectMatterExpertService.createBusinessObjectDefinitionSubjectMatterExpert(request))\n            .thenReturn(businessObjectDefinitionSubjectMatterExpert);\n        // Create a business object definition subject matter expert.\n        BusinessObjectDefinitionSubjectMatterExpert resultBusinessObjectDefinitionSubjectMatterExpert =\n            businessObjectDefinitionSubjectMatterExpertRestController.createBusinessObjectDefinitionSubjectMatterExpert(request);\n\n        // Verify the external calls.\n        verify(businessObjectDefinitionSubjectMatterExpertService).createBusinessObjectDefinitionSubjectMatterExpert(request);\n        verifyNoMoreInteractions(businessObjectDefinitionSubjectMatterExpertService);\n        // Validate the returned object.\n        assertEquals(businessObjectDefinitionSubjectMatterExpert, resultBusinessObjectDefinitionSubjectMatterExpert);\n    }", "signature": "void testCreateBusinessObjectDefinitionSubjectMatterExpert()", "full_signature": "@Test public void testCreateBusinessObjectDefinitionSubjectMatterExpert()", "class_method_signature": "BusinessObjectDefinitionSubjectMatterExpertRestControllerTest.testCreateBusinessObjectDefinitionSubjectMatterExpert()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createBusinessObjectDefinitionSubjectMatterExpert", "createBusinessObjectDefinitionSubjectMatterExpert", "createBusinessObjectDefinitionSubjectMatterExpert", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "BusinessObjectDefinitionSubjectMatterExpertRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX = \"/businessObjectDefinitionSubjectMatterExperts\";", "modifier": "public static final", "type": "String", "declarator": "BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX = \"/businessObjectDefinitionSubjectMatterExperts\"", "var_name": "BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionSubjectMatterExpertService businessObjectDefinitionSubjectMatterExpertService;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionSubjectMatterExpertService", "declarator": "businessObjectDefinitionSubjectMatterExpertService", "var_name": "businessObjectDefinitionSubjectMatterExpertService"}], "methods": [{"identifier": "createBusinessObjectDefinitionSubjectMatterExpert", "parameters": "(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "modifiers": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_POST) public", "return": "BusinessObjectDefinitionSubjectMatterExpert", "signature": "BusinessObjectDefinitionSubjectMatterExpert createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "full_signature": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_POST) public BusinessObjectDefinitionSubjectMatterExpert createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "class_method_signature": "BusinessObjectDefinitionSubjectMatterExpertRestController.createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteBusinessObjectDefinitionSubjectMatterExpert", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName, @PathVariable(\"userId\") String userId)", "modifiers": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX + \"/namespaces/{namespace}\" + \"/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/userIds/{userId}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_DELETE) public", "return": "BusinessObjectDefinitionSubjectMatterExpert", "signature": "BusinessObjectDefinitionSubjectMatterExpert deleteBusinessObjectDefinitionSubjectMatterExpert(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName, @PathVariable(\"userId\") String userId)", "full_signature": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX + \"/namespaces/{namespace}\" + \"/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/userIds/{userId}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_DELETE) public BusinessObjectDefinitionSubjectMatterExpert deleteBusinessObjectDefinitionSubjectMatterExpert(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName, @PathVariable(\"userId\") String userId)", "class_method_signature": "BusinessObjectDefinitionSubjectMatterExpertRestController.deleteBusinessObjectDefinitionSubjectMatterExpert(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName, @PathVariable(\"userId\") String userId)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDefinitionSubjectMatterExpertsByBusinessObjectDefinition", "parameters": "(\n        @PathVariable(\"namespace\") String namespace, @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName)", "modifiers": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX + \"/namespaces/{namespace}\" + \"/businessObjectDefinitionNames/{businessObjectDefinitionName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_BY_BUSINESS_OBJECT_DEFINITION_GET) public", "return": "BusinessObjectDefinitionSubjectMatterExpertKeys", "signature": "BusinessObjectDefinitionSubjectMatterExpertKeys getBusinessObjectDefinitionSubjectMatterExpertsByBusinessObjectDefinition(\n        @PathVariable(\"namespace\") String namespace, @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName)", "full_signature": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX + \"/namespaces/{namespace}\" + \"/businessObjectDefinitionNames/{businessObjectDefinitionName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_BY_BUSINESS_OBJECT_DEFINITION_GET) public BusinessObjectDefinitionSubjectMatterExpertKeys getBusinessObjectDefinitionSubjectMatterExpertsByBusinessObjectDefinition(\n        @PathVariable(\"namespace\") String namespace, @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName)", "class_method_signature": "BusinessObjectDefinitionSubjectMatterExpertRestController.getBusinessObjectDefinitionSubjectMatterExpertsByBusinessObjectDefinition(\n        @PathVariable(\"namespace\") String namespace, @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/BusinessObjectDefinitionSubjectMatterExpertRestController.java"}, "focal_method": {"identifier": "createBusinessObjectDefinitionSubjectMatterExpert", "parameters": "(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "modifiers": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_POST) public", "return": "BusinessObjectDefinitionSubjectMatterExpert", "body": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX, method = RequestMethod.POST,\n        consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_POST)\n    public BusinessObjectDefinitionSubjectMatterExpert createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)\n    {\n        return businessObjectDefinitionSubjectMatterExpertService.createBusinessObjectDefinitionSubjectMatterExpert(request);\n    }", "signature": "BusinessObjectDefinitionSubjectMatterExpert createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "full_signature": "@RequestMapping(value = BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_BUSINESS_OBJECT_DEFINITION_SUBJECT_MATTER_EXPERTS_POST) public BusinessObjectDefinitionSubjectMatterExpert createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "class_method_signature": "BusinessObjectDefinitionSubjectMatterExpertRestController.createBusinessObjectDefinitionSubjectMatterExpert(\n        @RequestBody BusinessObjectDefinitionSubjectMatterExpertCreateRequest request)", "testcase": false, "constructor": false, "invocations": ["createBusinessObjectDefinitionSubjectMatterExpert"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}