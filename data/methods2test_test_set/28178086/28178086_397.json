{"test_class": {"identifier": "ChangeOfRegimeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static TsVariable var;", "modifier": "static", "type": "TsVariable", "declarator": "var", "var_name": "var"}], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/regression/ChangeOfRegimeTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        TsPeriod p = var.getDefinitionDomain().getStart().plus(var.getDefinitionDomain().getLength() / 2);\n        ChangeOfRegime x1 = new ChangeOfRegime(var, ChangeOfRegimeType.ZeroStarted, p.firstday());\n        ChangeOfRegime x2 = new ChangeOfRegime(var, ChangeOfRegimeType.ZeroEnded, p.firstday());\n        TsVariableGroup group = new TsVariableGroup(\"test\", new ITsVariable[]{var, x1, x2});\n        Matrix matrix = RegressionUtilities.matrix(group, var.getDefinitionDomain());\n        DataBlock c=matrix.column(0).deepClone();\n        c.sub(matrix.column(1));\n        c.sub(matrix.column(2));\n        assertTrue(c.isZero());\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ChangeOfRegimeTest.test()", "testcase": true, "constructor": false, "invocations": ["plus", "getStart", "getDefinitionDomain", "getLength", "getDefinitionDomain", "firstday", "firstday", "matrix", "getDefinitionDomain", "deepClone", "column", "sub", "column", "sub", "column", "assertTrue", "isZero"]}, "focal_class": {"identifier": "ChangeOfRegime", "superclass": "extends AbstractTsModifier", "interfaces": "", "fields": [{"original_string": "private final ChangeOfRegimeType regime;", "modifier": "private final", "type": "ChangeOfRegimeType", "declarator": "regime", "var_name": "regime"}, {"original_string": "private final Day day;", "modifier": "private final", "type": "Day", "declarator": "day", "var_name": "day"}], "methods": [{"identifier": "ChangeOfRegime", "parameters": "(final ITsVariable var,\n            final ChangeOfRegimeType regime, final Day day)", "modifiers": "public", "return": "", "signature": " ChangeOfRegime(final ITsVariable var,\n            final ChangeOfRegimeType regime, final Day day)", "full_signature": "public  ChangeOfRegime(final ITsVariable var,\n            final ChangeOfRegimeType regime, final Day day)", "class_method_signature": "ChangeOfRegime.ChangeOfRegime(final ITsVariable var,\n            final ChangeOfRegimeType regime, final Day day)", "testcase": false, "constructor": true}, {"identifier": "data", "parameters": "(TsDomain domain, List<DataBlock> data)", "modifiers": "@Override public", "return": "void", "signature": "void data(TsDomain domain, List<DataBlock> data)", "full_signature": "@Override public void data(TsDomain domain, List<DataBlock> data)", "class_method_signature": "ChangeOfRegime.data(TsDomain domain, List<DataBlock> data)", "testcase": false, "constructor": false}, {"identifier": "description", "parameters": "(String desc, TsFrequency freq)", "modifiers": "private", "return": "String", "signature": "String description(String desc, TsFrequency freq)", "full_signature": "private String description(String desc, TsFrequency freq)", "class_method_signature": "ChangeOfRegime.description(String desc, TsFrequency freq)", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "()", "modifiers": "public", "return": "Day", "signature": "Day getDay()", "full_signature": "public Day getDay()", "class_method_signature": "ChangeOfRegime.getDay()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionDomain", "parameters": "()", "modifiers": "@Override public", "return": "TsDomain", "signature": "TsDomain getDefinitionDomain()", "full_signature": "@Override public TsDomain getDefinitionDomain()", "class_method_signature": "ChangeOfRegime.getDefinitionDomain()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionFrequency", "parameters": "()", "modifiers": "@Override public", "return": "TsFrequency", "signature": "TsFrequency getDefinitionFrequency()", "full_signature": "@Override public TsFrequency getDefinitionFrequency()", "class_method_signature": "ChangeOfRegime.getDefinitionFrequency()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(TsFrequency context)", "full_signature": "@Override public String getDescription(TsFrequency context)", "class_method_signature": "ChangeOfRegime.getDescription(TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "getDim", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDim()", "full_signature": "@Override public int getDim()", "class_method_signature": "ChangeOfRegime.getDim()", "testcase": false, "constructor": false}, {"identifier": "getItemDescription", "parameters": "(int idx, TsFrequency context)", "modifiers": "@Override public", "return": "String", "signature": "String getItemDescription(int idx, TsFrequency context)", "full_signature": "@Override public String getItemDescription(int idx, TsFrequency context)", "class_method_signature": "ChangeOfRegime.getItemDescription(int idx, TsFrequency context)", "testcase": false, "constructor": false}, {"identifier": "getRegime", "parameters": "()", "modifiers": "public", "return": "ChangeOfRegimeType", "signature": "ChangeOfRegimeType getRegime()", "full_signature": "public ChangeOfRegimeType getRegime()", "class_method_signature": "ChangeOfRegime.getRegime()", "testcase": false, "constructor": false}, {"identifier": "getVariable", "parameters": "()", "modifiers": "@Override public", "return": "ITsVariable", "signature": "ITsVariable getVariable()", "full_signature": "@Override public ITsVariable getVariable()", "class_method_signature": "ChangeOfRegime.getVariable()", "testcase": false, "constructor": false}, {"identifier": "isSignificant", "parameters": "(TsDomain domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSignificant(TsDomain domain)", "full_signature": "@Override public boolean isSignificant(TsDomain domain)", "class_method_signature": "ChangeOfRegime.isSignificant(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ChangeOfRegime.getName()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/regression/ChangeOfRegime.java"}, "focal_method": {"identifier": "getDefinitionDomain", "parameters": "()", "modifiers": "@Override public", "return": "TsDomain", "body": "@Override\n    public TsDomain getDefinitionDomain() {\n        return var.getDefinitionDomain();\n    }", "signature": "TsDomain getDefinitionDomain()", "full_signature": "@Override public TsDomain getDefinitionDomain()", "class_method_signature": "ChangeOfRegime.getDefinitionDomain()", "testcase": false, "constructor": false, "invocations": ["getDefinitionDomain"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}