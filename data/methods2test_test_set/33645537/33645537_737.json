{"test_class": {"identifier": "MessageUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/baidu/unbiz/common/MessageUtilTest.java"}, "test_case": {"identifier": "formatMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void formatMessage() {\n        assertNull(MessageUtil.formatMessage(null, (Object[]) null));\n\n        String message = \"message {0}, {1}, {2}, {3}, {4}\";\n\n        assertSame(message, MessageUtil.formatMessage(message, (Object[]) null));\n        assertSame(message, MessageUtil.formatMessage(message, new Object[0]));\n\n        assertEquals(\"message aa, {1}, {2}, {3}, {4}\", MessageUtil.formatMessage(message, \"aa\"));\n        assertEquals(\"message aa, bb, {2}, {3}, {4}\", MessageUtil.formatMessage(message, \"aa\", \"bb\"));\n        assertEquals(\"message aa, bb, cc, {3}, {4}\", MessageUtil.formatMessage(message, \"aa\", \"bb\", \"cc\"));\n        assertEquals(\"message aa, bb, cc, dd, {4}\", MessageUtil.formatMessage(message, \"aa\", \"bb\", \"cc\", \"dd\"));\n        assertEquals(\"message aa, bb, cc, dd, ee\", MessageUtil.formatMessage(message, \"aa\", \"bb\", \"cc\", \"dd\", \"ee\"));\n    }", "signature": "void formatMessage()", "full_signature": "@Test public void formatMessage()", "class_method_signature": "MessageUtilTest.formatMessage()", "testcase": true, "constructor": false, "invocations": ["assertNull", "formatMessage", "assertSame", "formatMessage", "assertSame", "formatMessage", "assertEquals", "formatMessage", "assertEquals", "formatMessage", "assertEquals", "formatMessage", "assertEquals", "formatMessage", "assertEquals", "formatMessage"]}, "focal_class": {"identifier": "MessageUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getMessage", "parameters": "(ResourceBundle bundle, String key, Object...params)", "modifiers": "public static", "return": "String", "signature": "String getMessage(ResourceBundle bundle, String key, Object...params)", "full_signature": "public static String getMessage(ResourceBundle bundle, String key, Object...params)", "class_method_signature": "MessageUtil.getMessage(ResourceBundle bundle, String key, Object...params)", "testcase": false, "constructor": false}, {"identifier": "formatMessage", "parameters": "(String message, Object...params)", "modifiers": "public static", "return": "String", "signature": "String formatMessage(String message, Object...params)", "full_signature": "public static String formatMessage(String message, Object...params)", "class_method_signature": "MessageUtil.formatMessage(String message, Object...params)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/MessageUtil.java"}, "focal_method": {"identifier": "formatMessage", "parameters": "(String message, Object...params)", "modifiers": "public static", "return": "String", "body": "public static String formatMessage(String message, Object...params) {\n        if (message == null || params == null || params.length == 0) {\n            return message;\n        }\n\n        return MessageFormat.format(message, params);\n    }", "signature": "String formatMessage(String message, Object...params)", "full_signature": "public static String formatMessage(String message, Object...params)", "class_method_signature": "MessageUtil.formatMessage(String message, Object...params)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}