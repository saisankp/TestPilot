{"test_class": {"identifier": "TestConsumerRegistration", "superclass": "", "interfaces": "", "fields": [], "file": "databus-client/databus-client-common/src/test/java/com/linkedin/databus/client/consumer/TestConsumerRegistration.java"}, "test_case": {"identifier": "testSingleConsumer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSingleConsumer() throws Exception\n  {\n    DatabusCombinedConsumer logConsumer = new LoggingConsumer();\n    List<String> sources = new ArrayList<String>();\n    ConsumerRegistration consumerReg = new ConsumerRegistration(logConsumer, sources, null);\n\n    Assert.assertEquals(logConsumer, consumerReg.getConsumer());\n    return;\n  }", "signature": "void testSingleConsumer()", "full_signature": "@Test public void testSingleConsumer()", "class_method_signature": "TestConsumerRegistration.testSingleConsumer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getConsumer"]}, "focal_class": {"identifier": "ConsumerRegistration", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final List<DatabusCombinedConsumer> _consumers;", "modifier": "protected final", "type": "List<DatabusCombinedConsumer>", "declarator": "_consumers", "var_name": "_consumers"}, {"original_string": "protected final List<DatabusSubscription> _subs;", "modifier": "protected final", "type": "List<DatabusSubscription>", "declarator": "_subs", "var_name": "_subs"}, {"original_string": "protected final Random _rng;", "modifier": "protected final", "type": "Random", "declarator": "_rng", "var_name": "_rng"}, {"original_string": "protected  final DbusKeyCompositeFilterConfig _filterConfig;", "modifier": "protected  final", "type": "DbusKeyCompositeFilterConfig", "declarator": "_filterConfig", "var_name": "_filterConfig"}], "methods": [{"identifier": "ConsumerRegistration", "parameters": "(DatabusCombinedConsumer consumer, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "modifiers": "public", "return": "", "signature": " ConsumerRegistration(DatabusCombinedConsumer consumer, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "full_signature": "public  ConsumerRegistration(DatabusCombinedConsumer consumer, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "class_method_signature": "ConsumerRegistration.ConsumerRegistration(DatabusCombinedConsumer consumer, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "testcase": false, "constructor": true}, {"identifier": "ConsumerRegistration", "parameters": "(List<DatabusCombinedConsumer> consumers, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "modifiers": "public", "return": "", "signature": " ConsumerRegistration(List<DatabusCombinedConsumer> consumers, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "full_signature": "public  ConsumerRegistration(List<DatabusCombinedConsumer> consumers, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "class_method_signature": "ConsumerRegistration.ConsumerRegistration(List<DatabusCombinedConsumer> consumers, List<String> sources, DbusKeyCompositeFilterConfig filterConfig)", "testcase": false, "constructor": true}, {"identifier": "getConsumer", "parameters": "()", "modifiers": "public", "return": "DatabusCombinedConsumer", "signature": "DatabusCombinedConsumer getConsumer()", "full_signature": "public DatabusCombinedConsumer getConsumer()", "class_method_signature": "ConsumerRegistration.getConsumer()", "testcase": false, "constructor": false}, {"identifier": "getConsumers", "parameters": "()", "modifiers": "public", "return": "List<DatabusCombinedConsumer>", "signature": "List<DatabusCombinedConsumer> getConsumers()", "full_signature": "public List<DatabusCombinedConsumer> getConsumers()", "class_method_signature": "ConsumerRegistration.getConsumers()", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSources()", "full_signature": "public List<String> getSources()", "class_method_signature": "ConsumerRegistration.getSources()", "testcase": false, "constructor": false}, {"identifier": "getSubscriptions", "parameters": "()", "modifiers": "public", "return": "List<DatabusSubscription>", "signature": "List<DatabusSubscription> getSubscriptions()", "full_signature": "public List<DatabusSubscription> getSubscriptions()", "class_method_signature": "ConsumerRegistration.getSubscriptions()", "testcase": false, "constructor": false}, {"identifier": "checkSourceSubscription", "parameters": "(DatabusSubscription sub)", "modifiers": "public", "return": "boolean", "signature": "boolean checkSourceSubscription(DatabusSubscription sub)", "full_signature": "public boolean checkSourceSubscription(DatabusSubscription sub)", "class_method_signature": "ConsumerRegistration.checkSourceSubscription(DatabusSubscription sub)", "testcase": false, "constructor": false}, {"identifier": "getFilterConfig", "parameters": "()", "modifiers": "public", "return": "DbusKeyCompositeFilterConfig", "signature": "DbusKeyCompositeFilterConfig getFilterConfig()", "full_signature": "public DbusKeyCompositeFilterConfig getFilterConfig()", "class_method_signature": "ConsumerRegistration.getFilterConfig()", "testcase": false, "constructor": false}, {"identifier": "ConsumerRegistration", "parameters": "(DatabusCombinedConsumer consumer, List<DatabusCombinedConsumer> consumers,\n\t\t  List<DatabusSubscription> subs,\n\t\t  DbusKeyCompositeFilterConfig filterConfig)", "modifiers": "protected", "return": "", "signature": " ConsumerRegistration(DatabusCombinedConsumer consumer, List<DatabusCombinedConsumer> consumers,\n\t\t  List<DatabusSubscription> subs,\n\t\t  DbusKeyCompositeFilterConfig filterConfig)", "full_signature": "protected  ConsumerRegistration(DatabusCombinedConsumer consumer, List<DatabusCombinedConsumer> consumers,\n\t\t  List<DatabusSubscription> subs,\n\t\t  DbusKeyCompositeFilterConfig filterConfig)", "class_method_signature": "ConsumerRegistration.ConsumerRegistration(DatabusCombinedConsumer consumer, List<DatabusCombinedConsumer> consumers,\n\t\t  List<DatabusSubscription> subs,\n\t\t  DbusKeyCompositeFilterConfig filterConfig)", "testcase": false, "constructor": true}, {"identifier": "createStringFromAllSubscriptionFromRegistration", "parameters": "(ConsumerRegistration reg)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> createStringFromAllSubscriptionFromRegistration(ConsumerRegistration reg)", "full_signature": "public static List<String> createStringFromAllSubscriptionFromRegistration(ConsumerRegistration reg)", "class_method_signature": "ConsumerRegistration.createStringFromAllSubscriptionFromRegistration(ConsumerRegistration reg)", "testcase": false, "constructor": false}], "file": "databus-client/databus-client-common/src/main/java/com/linkedin/databus/client/consumer/ConsumerRegistration.java"}, "focal_method": {"identifier": "getConsumer", "parameters": "()", "modifiers": "public", "return": "DatabusCombinedConsumer", "body": "public DatabusCombinedConsumer getConsumer()\n  {\n\t  /**\n\t   * A single consumer is a trivial case of a multi-consumer with num consumers = 1\n\t   */\n      int index = _rng.nextInt(_consumers.size());\n      return _consumers.get(index);\n  }", "signature": "DatabusCombinedConsumer getConsumer()", "full_signature": "public DatabusCombinedConsumer getConsumer()", "class_method_signature": "ConsumerRegistration.getConsumer()", "testcase": false, "constructor": false, "invocations": ["nextInt", "size", "get"]}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}