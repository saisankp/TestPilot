{"test_class": {"identifier": "OSGIServiceComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/OSGIServiceComparatorTest.java"}, "test_case": {"identifier": "testCompare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompare() {\n        ServiceReference low = new MockLowPriorityServiceReference();\n        ServiceReference nullPriority = new MockServiceReference();\n        ServiceReference high = new MockHighPriorityServiceReference();\n        OSGIServiceComparator instance = new OSGIServiceComparator();\n        assertThat(1).isEqualTo(instance.compare(low, high));\n        assertThat(-1).isEqualTo(instance.compare(high, low));\n        assertThat(0).isEqualTo(instance.compare(low, low));\n\n        assertThat(1).isEqualTo(instance.compare(nullPriority, high));\n        assertThat(-1).isEqualTo(instance.compare(high, nullPriority));\n        assertThat(0).isEqualTo(instance.compare(nullPriority, low));\n    }", "signature": "void testCompare()", "full_signature": "@Test public void testCompare()", "class_method_signature": "OSGIServiceComparatorTest.testCompare()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "compare", "isEqualTo", "assertThat", "compare", "isEqualTo", "assertThat", "compare", "isEqualTo", "assertThat", "compare", "isEqualTo", "assertThat", "compare", "isEqualTo", "assertThat", "compare"]}, "focal_class": {"identifier": "OSGIServiceComparator", "superclass": "", "interfaces": "implements Comparator<ServiceReference>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(ServiceReference o1, ServiceReference o2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(ServiceReference o1, ServiceReference o2)", "full_signature": "@Override public int compare(ServiceReference o1, ServiceReference o2)", "class_method_signature": "OSGIServiceComparator.compare(ServiceReference o1, ServiceReference o2)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "(Object o)", "modifiers": "public static", "return": "int", "signature": "int getPriority(Object o)", "full_signature": "public static int getPriority(Object o)", "class_method_signature": "OSGIServiceComparator.getPriority(Object o)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "(Class<? extends Object> type)", "modifiers": "public static", "return": "int", "signature": "int getPriority(Class<? extends Object> type)", "full_signature": "public static int getPriority(Class<? extends Object> type)", "class_method_signature": "OSGIServiceComparator.getPriority(Class<? extends Object> type)", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/OSGIServiceComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(ServiceReference o1, ServiceReference o2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(ServiceReference o1, ServiceReference o2) {\n        int prio = getPriority(o1) - getPriority(o2);\n        if (prio < 0) {\n            return 1;\n        } else if (prio > 0) {\n            return -1;\n        } else {\n            return 0; //o1.getClass().getSimpleName().compareTo(o2.getClass().getSimpleName());\n        }\n    }", "signature": "int compare(ServiceReference o1, ServiceReference o2)", "full_signature": "@Override public int compare(ServiceReference o1, ServiceReference o2)", "class_method_signature": "OSGIServiceComparator.compare(ServiceReference o1, ServiceReference o2)", "testcase": false, "constructor": false, "invocations": ["getPriority", "getPriority"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}