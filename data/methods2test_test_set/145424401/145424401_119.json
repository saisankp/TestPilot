{"test_class": {"identifier": "JarAnalyzerTest", "superclass": "", "interfaces": "", "fields": [], "file": "lang-java/src/test/java/org/eclipse/steady/java/JarAnalyzerTest.java"}, "test_case": {"identifier": "testGetFqClassname", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetFqClassname() {\n    String je = \"Foo.class\";\n    String fqn = JarAnalyzer.getFqClassname(je);\n    assertEquals(\"Foo\", fqn);\n\n    je = \"1.0/com/sun/tools/xjc/grammar/IgnoreItem.class\";\n    fqn = JarAnalyzer.getFqClassname(je);\n    assertEquals(null, fqn);\n\n    je = \"com/sun/tools/xjc/grammar/IgnoreItem.class\";\n    fqn = JarAnalyzer.getFqClassname(je);\n    assertEquals(\"com.sun.tools.xjc.grammar.IgnoreItem\", fqn);\n  }", "signature": "void testGetFqClassname()", "full_signature": "@Test public void testGetFqClassname()", "class_method_signature": "JarAnalyzerTest.testGetFqClassname()", "testcase": true, "constructor": false, "invocations": ["getFqClassname", "assertEquals", "getFqClassname", "assertEquals", "getFqClassname", "assertEquals"]}, "focal_class": {"identifier": "JarAnalyzer", "superclass": "", "interfaces": "implements Callable<FileAnalyzer>, JarEntryWriter, FileAnalyzer", "fields": [{"original_string": "private static final Logger log = org.apache.logging.log4j.LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = org.apache.logging.log4j.LogManager.getLogger()", "var_name": "log"}, {"original_string": "private static final ClassPool CLASSPOOL = ClassPool.getDefault();", "modifier": "private static final", "type": "ClassPool", "declarator": "CLASSPOOL = ClassPool.getDefault()", "var_name": "CLASSPOOL"}, {"original_string": "private static Application APP_CTX = null;", "modifier": "private static", "type": "Application", "declarator": "APP_CTX = null", "var_name": "APP_CTX"}, {"original_string": "protected Set<ConstructId> constructs = null;", "modifier": "protected", "type": "Set<ConstructId>", "declarator": "constructs = null", "var_name": "constructs"}, {"original_string": "private Map<ConstructId, Construct> constructBodies = null;", "modifier": "private", "type": "Map<ConstructId, Construct>", "declarator": "constructBodies = null", "var_name": "constructBodies"}, {"original_string": "private Set<String> classNames = new HashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "classNames = new HashSet<String>()", "var_name": "classNames"}, {"original_string": "protected String url = null;", "modifier": "protected", "type": "String", "declarator": "url = null", "var_name": "url"}, {"original_string": "protected JarFile jar = null;", "modifier": "protected", "type": "JarFile", "declarator": "jar = null", "var_name": "jar"}, {"original_string": "protected boolean instrument =\n      false;", "modifier": "protected", "type": "boolean", "declarator": "instrument =\n      false", "var_name": "instrument"}, {"original_string": "protected boolean rename = false;", "modifier": "protected", "type": "boolean", "declarator": "rename = false", "var_name": "rename"}, {"original_string": "protected int classCount = 0;", "modifier": "protected", "type": "int", "declarator": "classCount = 0", "var_name": "classCount"}, {"original_string": "protected int enumCount = 0;", "modifier": "protected", "type": "int", "declarator": "enumCount = 0", "var_name": "enumCount"}, {"original_string": "protected int interfaceCount = 0;", "modifier": "protected", "type": "int", "declarator": "interfaceCount = 0", "var_name": "interfaceCount"}, {"original_string": "private Map<JavaId, ClassVisitor> instrumentedClasses = new HashMap<JavaId, ClassVisitor>();", "modifier": "private", "type": "Map<JavaId, ClassVisitor>", "declarator": "instrumentedClasses = new HashMap<JavaId, ClassVisitor>()", "var_name": "instrumentedClasses"}, {"original_string": "protected Path workDir = null;", "modifier": "protected", "type": "Path", "declarator": "workDir = null", "var_name": "workDir"}, {"original_string": "private LibraryId libraryId = null;", "modifier": "private", "type": "LibraryId", "declarator": "libraryId = null", "var_name": "libraryId"}, {"original_string": "private Set<LibraryId> bundledLibraryIds = new HashSet<LibraryId>();", "modifier": "private", "type": "Set<LibraryId>", "declarator": "bundledLibraryIds = new HashSet<LibraryId>()", "var_name": "bundledLibraryIds"}, {"original_string": "protected JarWriter jarWriter = null;", "modifier": "protected", "type": "JarWriter", "declarator": "jarWriter = null", "var_name": "jarWriter"}, {"original_string": "private JarAnalyzer parent = null;", "modifier": "private", "type": "JarAnalyzer", "declarator": "parent = null", "var_name": "parent"}, {"original_string": "protected InstrumentationControl instrControl = null;", "modifier": "protected", "type": "InstrumentationControl", "declarator": "instrControl = null", "var_name": "instrControl"}], "methods": [{"identifier": "getSupportedFileExtensions", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getSupportedFileExtensions()", "full_signature": "@Override public String[] getSupportedFileExtensions()", "class_method_signature": "JarAnalyzer.getSupportedFileExtensions()", "testcase": false, "constructor": false}, {"identifier": "canAnalyze", "parameters": "(File _file)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean canAnalyze(File _file)", "full_signature": "@Override public final boolean canAnalyze(File _file)", "class_method_signature": "JarAnalyzer.canAnalyze(File _file)", "testcase": false, "constructor": false}, {"identifier": "analyze", "parameters": "(final File _file)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void analyze(final File _file)", "full_signature": "@Override public synchronized void analyze(final File _file)", "class_method_signature": "JarAnalyzer.analyze(final File _file)", "testcase": false, "constructor": false}, {"identifier": "setInstrument", "parameters": "(boolean _instrument)", "modifiers": "public", "return": "void", "signature": "void setInstrument(boolean _instrument)", "full_signature": "public void setInstrument(boolean _instrument)", "class_method_signature": "JarAnalyzer.setInstrument(boolean _instrument)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getPath()", "full_signature": "public Path getPath()", "class_method_signature": "JarAnalyzer.getPath()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(JarAnalyzer ja)", "modifiers": "public", "return": "void", "signature": "void setParent(JarAnalyzer ja)", "full_signature": "public void setParent(JarAnalyzer ja)", "class_method_signature": "JarAnalyzer.setParent(JarAnalyzer ja)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "JarAnalyzer", "signature": "JarAnalyzer getParent()", "full_signature": "public JarAnalyzer getParent()", "class_method_signature": "JarAnalyzer.getParent()", "testcase": false, "constructor": false}, {"identifier": "getFileSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFileSize()", "full_signature": "public long getFileSize()", "class_method_signature": "JarAnalyzer.getFileSize()", "testcase": false, "constructor": false}, {"identifier": "getInstrumentedFileSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getInstrumentedFileSize()", "full_signature": "public long getInstrumentedFileSize()", "class_method_signature": "JarAnalyzer.getInstrumentedFileSize()", "testcase": false, "constructor": false}, {"identifier": "setWorkDir", "parameters": "(Path _p)", "modifiers": "public", "return": "void", "signature": "void setWorkDir(Path _p)", "full_signature": "public void setWorkDir(Path _p)", "class_method_signature": "JarAnalyzer.setWorkDir(Path _p)", "testcase": false, "constructor": false}, {"identifier": "setRename", "parameters": "(boolean _b)", "modifiers": "public", "return": "void", "signature": "void setRename(boolean _b)", "full_signature": "public void setRename(boolean _b)", "class_method_signature": "JarAnalyzer.setRename(boolean _b)", "testcase": false, "constructor": false}, {"identifier": "setLibraryId", "parameters": "(LibraryId _id)", "modifiers": "public", "return": "void", "signature": "void setLibraryId(LibraryId _id)", "full_signature": "public void setLibraryId(LibraryId _id)", "class_method_signature": "JarAnalyzer.setLibraryId(LibraryId _id)", "testcase": false, "constructor": false}, {"identifier": "getLibrary", "parameters": "()", "modifiers": "public", "return": "Library", "signature": "Library getLibrary()", "full_signature": "public Library getLibrary()", "class_method_signature": "JarAnalyzer.getLibrary()", "testcase": false, "constructor": false}, {"identifier": "getSHA1", "parameters": "()", "modifiers": "public synchronized", "return": "String", "signature": "String getSHA1()", "full_signature": "public synchronized String getSHA1()", "class_method_signature": "JarAnalyzer.getSHA1()", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileName()", "full_signature": "public String getFileName()", "class_method_signature": "JarAnalyzer.getFileName()", "testcase": false, "constructor": false}, {"identifier": "call", "parameters": "()", "modifiers": "public", "return": "FileAnalyzer", "signature": "FileAnalyzer call()", "full_signature": "public FileAnalyzer call()", "class_method_signature": "JarAnalyzer.call()", "testcase": false, "constructor": false}, {"identifier": "createInstrumentedArchive", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void createInstrumentedArchive()", "full_signature": "protected void createInstrumentedArchive()", "class_method_signature": "JarAnalyzer.createInstrumentedArchive()", "testcase": false, "constructor": false}, {"identifier": "getInstrumentedArchive", "parameters": "()", "modifiers": "public final", "return": "File", "signature": "File getInstrumentedArchive()", "full_signature": "public final File getInstrumentedArchive()", "class_method_signature": "JarAnalyzer.getInstrumentedArchive()", "testcase": false, "constructor": false}, {"identifier": "getClassNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getClassNames()", "full_signature": "public Set<String> getClassNames()", "class_method_signature": "JarAnalyzer.getClassNames()", "testcase": false, "constructor": false}, {"identifier": "hasJARConstructs", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasJARConstructs()", "full_signature": "public boolean hasJARConstructs()", "class_method_signature": "JarAnalyzer.hasJARConstructs()", "testcase": false, "constructor": false}, {"identifier": "hasChilds", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasChilds()", "full_signature": "@Override public boolean hasChilds()", "class_method_signature": "JarAnalyzer.hasChilds()", "testcase": false, "constructor": false}, {"identifier": "getChilds", "parameters": "(boolean _recursive)", "modifiers": "@Override public", "return": "Set<FileAnalyzer>", "signature": "Set<FileAnalyzer> getChilds(boolean _recursive)", "full_signature": "@Override public Set<FileAnalyzer> getChilds(boolean _recursive)", "class_method_signature": "JarAnalyzer.getChilds(boolean _recursive)", "testcase": false, "constructor": false}, {"identifier": "getConstructIds", "parameters": "()", "modifiers": "public synchronized", "return": "Set<ConstructId>", "signature": "Set<ConstructId> getConstructIds()", "full_signature": "public synchronized Set<ConstructId> getConstructIds()", "class_method_signature": "JarAnalyzer.getConstructIds()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "JarAnalyzer.toString()", "testcase": false, "constructor": false}, {"identifier": "getInstrumentationControl", "parameters": "()", "modifiers": "public", "return": "InstrumentationControl", "signature": "InstrumentationControl getInstrumentationControl()", "full_signature": "public InstrumentationControl getInstrumentationControl()", "class_method_signature": "JarAnalyzer.getInstrumentationControl()", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "(String _regex, JarEntry _entry)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getInputStream(String _regex, JarEntry _entry)", "full_signature": "@Override public InputStream getInputStream(String _regex, JarEntry _entry)", "class_method_signature": "JarAnalyzer.getInputStream(String _regex, JarEntry _entry)", "testcase": false, "constructor": false}, {"identifier": "getConstructs", "parameters": "()", "modifiers": "@Override public", "return": "Map<ConstructId, Construct>", "signature": "Map<ConstructId, Construct> getConstructs()", "full_signature": "@Override public Map<ConstructId, Construct> getConstructs()", "class_method_signature": "JarAnalyzer.getConstructs()", "testcase": false, "constructor": false}, {"identifier": "getSharedConstructs", "parameters": "()", "modifiers": "public", "return": "List<org.eclipse.steady.shared.json.model.ConstructId>", "signature": "List<org.eclipse.steady.shared.json.model.ConstructId> getSharedConstructs()", "full_signature": "public List<org.eclipse.steady.shared.json.model.ConstructId> getSharedConstructs()", "class_method_signature": "JarAnalyzer.getSharedConstructs()", "testcase": false, "constructor": false}, {"identifier": "containsConstruct", "parameters": "(ConstructId _id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsConstruct(ConstructId _id)", "full_signature": "@Override public boolean containsConstruct(ConstructId _id)", "class_method_signature": "JarAnalyzer.containsConstruct(ConstructId _id)", "testcase": false, "constructor": false}, {"identifier": "getConstruct", "parameters": "(ConstructId _id)", "modifiers": "@Override public", "return": "Construct", "signature": "Construct getConstruct(ConstructId _id)", "full_signature": "@Override public Construct getConstruct(ConstructId _id)", "class_method_signature": "JarAnalyzer.getConstruct(ConstructId _id)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "JarAnalyzer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JarAnalyzer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isJavaIdentifier", "parameters": "(String _name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isJavaIdentifier(String _name)", "full_signature": "public static boolean isJavaIdentifier(String _name)", "class_method_signature": "JarAnalyzer.isJavaIdentifier(String _name)", "testcase": false, "constructor": false}, {"identifier": "getFqClassname", "parameters": "(String _jar_entry_name)", "modifiers": "public static", "return": "String", "signature": "String getFqClassname(String _jar_entry_name)", "full_signature": "public static String getFqClassname(String _jar_entry_name)", "class_method_signature": "JarAnalyzer.getFqClassname(String _jar_entry_name)", "testcase": false, "constructor": false}, {"identifier": "setAppContext", "parameters": "(Application _ctx)", "modifiers": "public static", "return": "void", "signature": "void setAppContext(Application _ctx)", "full_signature": "public static void setAppContext(Application _ctx)", "class_method_signature": "JarAnalyzer.setAppContext(Application _ctx)", "testcase": false, "constructor": false}, {"identifier": "getAppContext", "parameters": "()", "modifiers": "public static", "return": "Application", "signature": "Application getAppContext()", "full_signature": "public static Application getAppContext()", "class_method_signature": "JarAnalyzer.getAppContext()", "testcase": false, "constructor": false}, {"identifier": "insertClasspath", "parameters": "(String _url)", "modifiers": "public static", "return": "void", "signature": "void insertClasspath(String _url)", "full_signature": "public static void insertClasspath(String _url)", "class_method_signature": "JarAnalyzer.insertClasspath(String _url)", "testcase": false, "constructor": false}, {"identifier": "getClassPool", "parameters": "()", "modifiers": "protected static", "return": "ClassPool", "signature": "ClassPool getClassPool()", "full_signature": "protected static ClassPool getClassPool()", "class_method_signature": "JarAnalyzer.getClassPool()", "testcase": false, "constructor": false}], "file": "lang-java/src/main/java/org/eclipse/steady/java/JarAnalyzer.java"}, "focal_method": {"identifier": "getFqClassname", "parameters": "(String _jar_entry_name)", "modifiers": "public static", "return": "String", "body": "public static String getFqClassname(String _jar_entry_name) {\n    String cn = null;\n    if (_jar_entry_name.endsWith(\".class\")) {\n      // 18.11.2014: Ignore \"package-info.class\" files, which can contain annotations and\n      // documentation\n      // 05.12.2017: Ignore \"module-info.class\" files, which can contain annotations and\n      // documentation\n      if (!_jar_entry_name.endsWith(\"package-info.class\")\n          && !_jar_entry_name.endsWith(\"module-info.class\")) {\n        final StringBuffer fqn = new StringBuffer();\n\n        final Path p = Paths.get(_jar_entry_name);\n        final Iterator<Path> i = p.iterator();\n\n        while (i.hasNext()) {\n          String element = i.next().toString();\n          if (element.endsWith(\".class\"))\n            element = element.substring(0, element.length() - 6); // \".class\"\n          if (JarAnalyzer.isJavaIdentifier(element)) {\n            if (fqn.length() != 0) fqn.append('.');\n            fqn.append(element);\n          } else {\n            JarAnalyzer.log.warn(\n                \"JAR entry [\"\n                    + _jar_entry_name\n                    + \"] cannot be transformed to a fully-qualified Java class identifier, because\"\n                    + \" [\"\n                    + element\n                    + \"] is not a valid identifier\");\n            return null;\n          }\n        }\n        cn = fqn.toString();\n      }\n    }\n    return cn;\n  }", "signature": "String getFqClassname(String _jar_entry_name)", "full_signature": "public static String getFqClassname(String _jar_entry_name)", "class_method_signature": "JarAnalyzer.getFqClassname(String _jar_entry_name)", "testcase": false, "constructor": false, "invocations": ["endsWith", "endsWith", "endsWith", "get", "iterator", "hasNext", "toString", "next", "endsWith", "substring", "length", "isJavaIdentifier", "length", "append", "append", "warn", "toString"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}