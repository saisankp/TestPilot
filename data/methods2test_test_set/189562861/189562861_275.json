{"test_class": {"identifier": "DubboAppenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoggingEvent event;", "modifier": "private", "type": "LoggingEvent", "declarator": "event", "var_name": "event"}], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/utils/DubboAppenderTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClear() throws Exception {\n        DubboAppender.doStart();\n        DubboAppender appender = new DubboAppender();\n        appender.append(event);\n        assertThat(DubboAppender.logList, hasSize(1));\n        DubboAppender.clear();\n        assertThat(DubboAppender.logList, hasSize(0));\n    }", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "DubboAppenderTest.testClear()", "testcase": true, "constructor": false, "invocations": ["doStart", "append", "assertThat", "hasSize", "clear", "assertThat", "hasSize"]}, "focal_class": {"identifier": "DubboAppender", "superclass": "extends ConsoleAppender", "interfaces": "", "fields": [{"original_string": "public static boolean available = false;", "modifier": "public static", "type": "boolean", "declarator": "available = false", "var_name": "available"}, {"original_string": "public static List<Log> logList = new ArrayList<Log>();", "modifier": "public static", "type": "List<Log>", "declarator": "logList = new ArrayList<Log>()", "var_name": "logList"}], "methods": [{"identifier": "doStart", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void doStart()", "full_signature": "public static void doStart()", "class_method_signature": "DubboAppender.doStart()", "testcase": false, "constructor": false}, {"identifier": "doStop", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void doStop()", "full_signature": "public static void doStop()", "class_method_signature": "DubboAppender.doStop()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clear()", "full_signature": "public static void clear()", "class_method_signature": "DubboAppender.clear()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(LoggingEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void append(LoggingEvent event)", "full_signature": "@Override public void append(LoggingEvent event)", "class_method_signature": "DubboAppender.append(LoggingEvent event)", "testcase": false, "constructor": false}, {"identifier": "parseLog", "parameters": "(LoggingEvent event)", "modifiers": "private", "return": "Log", "signature": "Log parseLog(LoggingEvent event)", "full_signature": "private Log parseLog(LoggingEvent event)", "class_method_signature": "DubboAppender.parseLog(LoggingEvent event)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/DubboAppender.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void clear() {\n        logList.clear();\n    }", "signature": "void clear()", "full_signature": "public static void clear()", "class_method_signature": "DubboAppender.clear()", "testcase": false, "constructor": false, "invocations": ["clear"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}