{"test_class": {"identifier": "JsonLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib-json/src/test/java/com/nhl/dflib/json/JsonLoaderTest.java"}, "test_case": {"identifier": "testListOfObjects_Sparse", "parameters": "()", "modifiers": "@Test @DisplayName(\"$.* : root is list, objects are rows, different property names\") public", "return": "void", "body": "@Test\n    @DisplayName(\"$.* : root is list, objects are rows, different property names\")\n    public void testListOfObjects_Sparse() {\n        String json = \"[{\\\"a\\\":1, \\\"b\\\":\\\"B\\\"},{\\\"b\\\":\\\"C\\\"},{\\\"a\\\":3, \\\"c\\\":\\\"D\\\"}]\";\n\n        DataFrame df = Json.loader().load(json);\n        new DataFrameAsserts(df, \"a\", \"b\", \"c\")\n                .expectHeight(3)\n                .expectRow(0, 1, \"B\", null)\n                .expectRow(1, null, \"C\", null)\n                .expectRow(2, 3, null, \"D\");\n    }", "signature": "void testListOfObjects_Sparse()", "full_signature": "@Test @DisplayName(\"$.* : root is list, objects are rows, different property names\") public void testListOfObjects_Sparse()", "class_method_signature": "JsonLoaderTest.testListOfObjects_Sparse()", "testcase": true, "constructor": false, "invocations": ["load", "loader", "expectRow", "expectRow", "expectRow", "expectHeight"]}, "focal_class": {"identifier": "JsonLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String DEFAULT_SCALAR_COLUMN = \"_val\";", "modifier": "private static", "type": "String", "declarator": "DEFAULT_SCALAR_COLUMN = \"_val\"", "var_name": "DEFAULT_SCALAR_COLUMN"}, {"original_string": "private Set<Option> options;", "modifier": "private", "type": "Set<Option>", "declarator": "options", "var_name": "options"}, {"original_string": "private String pathExpression;", "modifier": "private", "type": "String", "declarator": "pathExpression", "var_name": "pathExpression"}], "methods": [{"identifier": "JsonLoader", "parameters": "()", "modifiers": "public", "return": "", "signature": " JsonLoader()", "full_signature": "public  JsonLoader()", "class_method_signature": "JsonLoader.JsonLoader()", "testcase": false, "constructor": true}, {"identifier": "pathExpression", "parameters": "(String pathExpression)", "modifiers": "public", "return": "JsonLoader", "signature": "JsonLoader pathExpression(String pathExpression)", "full_signature": "public JsonLoader pathExpression(String pathExpression)", "class_method_signature": "JsonLoader.pathExpression(String pathExpression)", "testcase": false, "constructor": false}, {"identifier": "nullsForMissingLeafs", "parameters": "()", "modifiers": "public", "return": "JsonLoader", "signature": "JsonLoader nullsForMissingLeafs()", "full_signature": "public JsonLoader nullsForMissingLeafs()", "class_method_signature": "JsonLoader.nullsForMissingLeafs()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(String json)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame load(String json)", "full_signature": "public DataFrame load(String json)", "class_method_signature": "JsonLoader.load(String json)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Reader reader)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame load(Reader reader)", "full_signature": "public DataFrame load(Reader reader)", "class_method_signature": "JsonLoader.load(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "buildJSONPathConfiguration", "parameters": "()", "modifiers": "protected", "return": "Configuration", "signature": "Configuration buildJSONPathConfiguration()", "full_signature": "protected Configuration buildJSONPathConfiguration()", "class_method_signature": "JsonLoader.buildJSONPathConfiguration()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(DocumentContext context)", "modifiers": "protected", "return": "DataFrame", "signature": "DataFrame load(DocumentContext context)", "full_signature": "protected DataFrame load(DocumentContext context)", "class_method_signature": "JsonLoader.load(DocumentContext context)", "testcase": false, "constructor": false}, {"identifier": "loadColumns", "parameters": "(List<Map<String, Object>> parsed)", "modifiers": "protected", "return": "LinkedHashMap<String, Accumulator<Object>>", "signature": "LinkedHashMap<String, Accumulator<Object>> loadColumns(List<Map<String, Object>> parsed)", "full_signature": "protected LinkedHashMap<String, Accumulator<Object>> loadColumns(List<Map<String, Object>> parsed)", "class_method_signature": "JsonLoader.loadColumns(List<Map<String, Object>> parsed)", "testcase": false, "constructor": false}, {"identifier": "loadRowAsScalar", "parameters": "(Object row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "modifiers": "protected", "return": "void", "signature": "void loadRowAsScalar(Object row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "full_signature": "protected void loadRowAsScalar(Object row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "class_method_signature": "JsonLoader.loadRowAsScalar(Object row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "testcase": false, "constructor": false}, {"identifier": "loadRowAsMap", "parameters": "(Map<String, Object> row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "modifiers": "protected", "return": "void", "signature": "void loadRowAsMap(Map<String, Object> row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "full_signature": "protected void loadRowAsMap(Map<String, Object> row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "class_method_signature": "JsonLoader.loadRowAsMap(Map<String, Object> row, LinkedHashMap<String, Accumulator<Object>> columns, int height, int offset)", "testcase": false, "constructor": false}, {"identifier": "toDataFrame", "parameters": "(LinkedHashMap<String, Accumulator<Object>> columnData)", "modifiers": "protected", "return": "DataFrame", "signature": "DataFrame toDataFrame(LinkedHashMap<String, Accumulator<Object>> columnData)", "full_signature": "protected DataFrame toDataFrame(LinkedHashMap<String, Accumulator<Object>> columnData)", "class_method_signature": "JsonLoader.toDataFrame(LinkedHashMap<String, Accumulator<Object>> columnData)", "testcase": false, "constructor": false}, {"identifier": "createdColumnAccumulator", "parameters": "(int length, int offset)", "modifiers": "protected", "return": "Accumulator<Object>", "signature": "Accumulator<Object> createdColumnAccumulator(int length, int offset)", "full_signature": "protected Accumulator<Object> createdColumnAccumulator(int length, int offset)", "class_method_signature": "JsonLoader.createdColumnAccumulator(int length, int offset)", "testcase": false, "constructor": false}], "file": "dflib-json/src/main/java/com/nhl/dflib/json/JsonLoader.java"}, "focal_method": {"identifier": "load", "parameters": "(String json)", "modifiers": "public", "return": "DataFrame", "body": "public DataFrame load(String json) {\n        DocumentContext context = JsonPath.parse(json, buildJSONPathConfiguration());\n        return load(context);\n    }", "signature": "DataFrame load(String json)", "full_signature": "public DataFrame load(String json)", "class_method_signature": "JsonLoader.load(String json)", "testcase": false, "constructor": false, "invocations": ["parse", "buildJSONPathConfiguration", "load"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}