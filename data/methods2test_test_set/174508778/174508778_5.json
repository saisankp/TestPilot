{"test_class": {"identifier": "TestMysqlService", "superclass": "extends TestAbstractService", "interfaces": "", "fields": [], "file": "web-manager/src/test/java/com/threathunter/web/manager/service/TestMysqlService.java"}, "test_case": {"identifier": "testMySql_getAllSlotNotice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMySql_getAllSlotNotice() {\n        log.debug(\"======start to delete query from mysql=====\");\n        SqlSessionFactory sqlSessionFactory = (SqlSessionFactory) applicationContext.getBean(\"sqlSessionFactory\");\n        SqlSession sqlSession = SqlSessionUtils.getSqlSession(sqlSessionFactory);\n        List<SlotNotice> allSlotNotice = mysqlService.querySlotNotice();\n        assertThat(allSlotNotice).isNotNull();\n        assertThat(allSlotNotice.size()).isNotEqualTo(0);\n    }", "signature": "void testMySql_getAllSlotNotice()", "full_signature": "@Test public void testMySql_getAllSlotNotice()", "class_method_signature": "TestMysqlService.testMySql_getAllSlotNotice()", "testcase": true, "constructor": false, "invocations": ["debug", "getBean", "getSqlSession", "querySlotNotice", "isNotNull", "assertThat", "isNotEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "MysqlService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private TrunkMapper trunkMapper;", "modifier": "@Autowired\n    private", "type": "TrunkMapper", "declarator": "trunkMapper", "var_name": "trunkMapper"}, {"original_string": "@Autowired\n    private NoticeMapper noticeMapper;", "modifier": "@Autowired\n    private", "type": "NoticeMapper", "declarator": "noticeMapper", "var_name": "noticeMapper"}, {"original_string": "@Autowired\n    private PorterMapper porterMapper;", "modifier": "@Autowired\n    private", "type": "PorterMapper", "declarator": "porterMapper", "var_name": "porterMapper"}, {"original_string": "@Autowired\n    private LogQueryMapper logQueryMapper;", "modifier": "@Autowired\n    private", "type": "LogQueryMapper", "declarator": "logQueryMapper", "var_name": "logQueryMapper"}, {"original_string": "@Autowired\n    private SlotNoticeMapper slotNoticeMapper;", "modifier": "@Autowired\n    private", "type": "SlotNoticeMapper", "declarator": "slotNoticeMapper", "var_name": "slotNoticeMapper"}, {"original_string": "@Autowired\n    private StrategyCustMapper strategyCustMapper;", "modifier": "@Autowired\n    private", "type": "StrategyCustMapper", "declarator": "strategyCustMapper", "var_name": "strategyCustMapper"}], "methods": [{"identifier": "trunkSave", "parameters": "(Trunk trunk)", "modifiers": "public", "return": "void", "signature": "void trunkSave(Trunk trunk)", "full_signature": "public void trunkSave(Trunk trunk)", "class_method_signature": "MysqlService.trunkSave(Trunk trunk)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "()", "modifiers": "public", "return": "List<Trunk>", "signature": "List<Trunk> list()", "full_signature": "public List<Trunk> list()", "class_method_signature": "MysqlService.list()", "testcase": false, "constructor": false}, {"identifier": "batchDelete", "parameters": "(List<String> trunks)", "modifiers": "public", "return": "void", "signature": "void batchDelete(List<String> trunks)", "full_signature": "public void batchDelete(List<String> trunks)", "class_method_signature": "MysqlService.batchDelete(List<String> trunks)", "testcase": false, "constructor": false}, {"identifier": "getNotice", "parameters": "()", "modifiers": "public", "return": "Notice", "signature": "Notice getNotice()", "full_signature": "public Notice getNotice()", "class_method_signature": "MysqlService.getNotice()", "testcase": false, "constructor": false}, {"identifier": "insertPorter", "parameters": "(Porter porter)", "modifiers": "public", "return": "int", "signature": "int insertPorter(Porter porter)", "full_signature": "public int insertPorter(Porter porter)", "class_method_signature": "MysqlService.insertPorter(Porter porter)", "testcase": false, "constructor": false}, {"identifier": "queryPorter", "parameters": "(int id)", "modifiers": "public", "return": "Porter", "signature": "Porter queryPorter(int id)", "full_signature": "public Porter queryPorter(int id)", "class_method_signature": "MysqlService.queryPorter(int id)", "testcase": false, "constructor": false}, {"identifier": "queryPorters", "parameters": "()", "modifiers": "public", "return": "List<Porter>", "signature": "List<Porter> queryPorters()", "full_signature": "public List<Porter> queryPorters()", "class_method_signature": "MysqlService.queryPorters()", "testcase": false, "constructor": false}, {"identifier": "deletePorter", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void deletePorter(int id)", "full_signature": "public void deletePorter(int id)", "class_method_signature": "MysqlService.deletePorter(int id)", "testcase": false, "constructor": false}, {"identifier": "queryLogQuery", "parameters": "(int id)", "modifiers": "public", "return": "LogQuery", "signature": "LogQuery queryLogQuery(int id)", "full_signature": "public LogQuery queryLogQuery(int id)", "class_method_signature": "MysqlService.queryLogQuery(int id)", "testcase": false, "constructor": false}, {"identifier": "queryLogQuery", "parameters": "()", "modifiers": "public", "return": "List<LogQuery>", "signature": "List<LogQuery> queryLogQuery()", "full_signature": "public List<LogQuery> queryLogQuery()", "class_method_signature": "MysqlService.queryLogQuery()", "testcase": false, "constructor": false}, {"identifier": "insertLogQuery", "parameters": "(LogQuery query)", "modifiers": "public", "return": "int", "signature": "int insertLogQuery(LogQuery query)", "full_signature": "public int insertLogQuery(LogQuery query)", "class_method_signature": "MysqlService.insertLogQuery(LogQuery query)", "testcase": false, "constructor": false}, {"identifier": "updateLogQuery", "parameters": "(LogQuery query)", "modifiers": "public", "return": "void", "signature": "void updateLogQuery(LogQuery query)", "full_signature": "public void updateLogQuery(LogQuery query)", "class_method_signature": "MysqlService.updateLogQuery(LogQuery query)", "testcase": false, "constructor": false}, {"identifier": "deleteLogQuery", "parameters": "(LogQuery query)", "modifiers": "public", "return": "void", "signature": "void deleteLogQuery(LogQuery query)", "full_signature": "public void deleteLogQuery(LogQuery query)", "class_method_signature": "MysqlService.deleteLogQuery(LogQuery query)", "testcase": false, "constructor": false}, {"identifier": "deleteLogQuery", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void deleteLogQuery(int id)", "full_signature": "public void deleteLogQuery(int id)", "class_method_signature": "MysqlService.deleteLogQuery(int id)", "testcase": false, "constructor": false}, {"identifier": "queryLogQueryIdsByNonSuccessStatus", "parameters": "()", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> queryLogQueryIdsByNonSuccessStatus()", "full_signature": "public List<Integer> queryLogQueryIdsByNonSuccessStatus()", "class_method_signature": "MysqlService.queryLogQueryIdsByNonSuccessStatus()", "testcase": false, "constructor": false}, {"identifier": "queryLogQueryIdsBySuccessStatus", "parameters": "()", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> queryLogQueryIdsBySuccessStatus()", "full_signature": "public List<Integer> queryLogQueryIdsBySuccessStatus()", "class_method_signature": "MysqlService.queryLogQueryIdsBySuccessStatus()", "testcase": false, "constructor": false}, {"identifier": "querySlotNotice", "parameters": "()", "modifiers": "public", "return": "List<SlotNotice>", "signature": "List<SlotNotice> querySlotNotice()", "full_signature": "public List<SlotNotice> querySlotNotice()", "class_method_signature": "MysqlService.querySlotNotice()", "testcase": false, "constructor": false}, {"identifier": "selectStaticCount", "parameters": "(Long startTime, Long endTime, Integer test)", "modifiers": "public", "return": "Map<Long, Integer>", "signature": "Map<Long, Integer> selectStaticCount(Long startTime, Long endTime, Integer test)", "full_signature": "public Map<Long, Integer> selectStaticCount(Long startTime, Long endTime, Integer test)", "class_method_signature": "MysqlService.selectStaticCount(Long startTime, Long endTime, Integer test)", "testcase": false, "constructor": false}, {"identifier": "filterSlotNoticeByExpireAndDecision", "parameters": "(Long expire, String decision)", "modifiers": "public", "return": "List<SlotNotice>", "signature": "List<SlotNotice> filterSlotNoticeByExpireAndDecision(Long expire, String decision)", "full_signature": "public List<SlotNotice> filterSlotNoticeByExpireAndDecision(Long expire, String decision)", "class_method_signature": "MysqlService.filterSlotNoticeByExpireAndDecision(Long expire, String decision)", "testcase": false, "constructor": false}, {"identifier": "queryStrategyCust", "parameters": "()", "modifiers": "public", "return": "List<StrategyCust>", "signature": "List<StrategyCust> queryStrategyCust()", "full_signature": "public List<StrategyCust> queryStrategyCust()", "class_method_signature": "MysqlService.queryStrategyCust()", "testcase": false, "constructor": false}, {"identifier": "queryStrategyCust", "parameters": "(int id)", "modifiers": "public", "return": "StrategyCust", "signature": "StrategyCust queryStrategyCust(int id)", "full_signature": "public StrategyCust queryStrategyCust(int id)", "class_method_signature": "MysqlService.queryStrategyCust(int id)", "testcase": false, "constructor": false}, {"identifier": "selectStrategyCustNameByTags", "parameters": "(List<String> tags)", "modifiers": "public", "return": "List<String>", "signature": "List<String> selectStrategyCustNameByTags(List<String> tags)", "full_signature": "public List<String> selectStrategyCustNameByTags(List<String> tags)", "class_method_signature": "MysqlService.selectStrategyCustNameByTags(List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "querySlotNoticeAtAggregate", "parameters": "(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "modifiers": "public", "return": "List<SlotNotice>", "signature": "List<SlotNotice> querySlotNoticeAtAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "full_signature": "public List<SlotNotice> querySlotNoticeAtAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "class_method_signature": "MysqlService.querySlotNoticeAtAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "testcase": false, "constructor": false}, {"identifier": "querySlotNoticeAtNonAggregate", "parameters": "(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "modifiers": "public", "return": "List<SlotNotice>", "signature": "List<SlotNotice> querySlotNoticeAtNonAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "full_signature": "public List<SlotNotice> querySlotNoticeAtNonAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "class_method_signature": "MysqlService.querySlotNoticeAtNonAggregate(SlotNoticeService.Criteria criteria, int offset, Integer rowCount)", "testcase": false, "constructor": false}, {"identifier": "selectSlotNoticeCountAtAggregate", "parameters": "(SlotNoticeService.Criteria criteria)", "modifiers": "public", "return": "int", "signature": "int selectSlotNoticeCountAtAggregate(SlotNoticeService.Criteria criteria)", "full_signature": "public int selectSlotNoticeCountAtAggregate(SlotNoticeService.Criteria criteria)", "class_method_signature": "MysqlService.selectSlotNoticeCountAtAggregate(SlotNoticeService.Criteria criteria)", "testcase": false, "constructor": false}, {"identifier": "selectSlotNoticeCountAtNonAggregate", "parameters": "(SlotNoticeService.Criteria criteria)", "modifiers": "public", "return": "int", "signature": "int selectSlotNoticeCountAtNonAggregate(SlotNoticeService.Criteria criteria)", "full_signature": "public int selectSlotNoticeCountAtNonAggregate(SlotNoticeService.Criteria criteria)", "class_method_signature": "MysqlService.selectSlotNoticeCountAtNonAggregate(SlotNoticeService.Criteria criteria)", "testcase": false, "constructor": false}, {"identifier": "SelectSlotNoticeIdByExpireAndDecision", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> SelectSlotNoticeIdByExpireAndDecision()", "full_signature": "public List<Long> SelectSlotNoticeIdByExpireAndDecision()", "class_method_signature": "MysqlService.SelectSlotNoticeIdByExpireAndDecision()", "testcase": false, "constructor": false}, {"identifier": "addSlotNotice", "parameters": "(final List<SlotNotice> notices)", "modifiers": "public", "return": "void", "signature": "void addSlotNotice(final List<SlotNotice> notices)", "full_signature": "public void addSlotNotice(final List<SlotNotice> notices)", "class_method_signature": "MysqlService.addSlotNotice(final List<SlotNotice> notices)", "testcase": false, "constructor": false}, {"identifier": "addSlotNotice", "parameters": "(final SlotNotice notice)", "modifiers": "public", "return": "void", "signature": "void addSlotNotice(final SlotNotice notice)", "full_signature": "public void addSlotNotice(final SlotNotice notice)", "class_method_signature": "MysqlService.addSlotNotice(final SlotNotice notice)", "testcase": false, "constructor": false}, {"identifier": "deleteNotice", "parameters": "(final String key, final Long fromtime, final Long endtime)", "modifiers": "public", "return": "void", "signature": "void deleteNotice(final String key, final Long fromtime, final Long endtime)", "full_signature": "public void deleteNotice(final String key, final Long fromtime, final Long endtime)", "class_method_signature": "MysqlService.deleteNotice(final String key, final Long fromtime, final Long endtime)", "testcase": false, "constructor": false}], "file": "web-manager/src/main/java/com/threathunter/web/manager/service/MysqlService.java"}, "focal_method": {"identifier": "querySlotNotice", "parameters": "()", "modifiers": "public", "return": "List<SlotNotice>", "body": "public List<SlotNotice> querySlotNotice() {\n        return slotNoticeMapper.getAll();\n    }", "signature": "List<SlotNotice> querySlotNotice()", "full_signature": "public List<SlotNotice> querySlotNotice()", "class_method_signature": "MysqlService.querySlotNotice()", "testcase": false, "constructor": false, "invocations": ["getAll"]}, "repository": {"repo_id": 174508778, "url": "https://github.com/threathunterX/apiserver", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 7, "size": 170, "license": "licensed"}}