{"test_class": {"identifier": "DataEventAttrBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/kogito-services/src/test/java/org/kie/kogito/services/event/DataEventAttrBuilderTest.java"}, "test_case": {"identifier": "verifyEventTypeBeingGeneratedWithProcessInstance", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void verifyEventTypeBeingGeneratedWithProcessInstance() {\n        final String channelName = \"github\";\n        final String processId = \"COOL_PROJECT\";\n        ProcessInstance pi = mock(ProcessInstance.class);\n        when(pi.getProcessId()).thenReturn(processId);\n        final String type = DataEventAttrBuilder.toType(channelName, pi);\n        assertThat(type)\n                .isNotBlank()\n                .doesNotContain(processId)\n                .contains(processId.toLowerCase())\n                .contains(channelName)\n                .startsWith(AbstractDataEvent.TYPE_PREFIX);\n    }", "signature": "void verifyEventTypeBeingGeneratedWithProcessInstance()", "full_signature": "@Test void verifyEventTypeBeingGeneratedWithProcessInstance()", "class_method_signature": "DataEventAttrBuilderTest.verifyEventTypeBeingGeneratedWithProcessInstance()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getProcessId", "toType", "startsWith", "contains", "contains", "doesNotContain", "isNotBlank", "assertThat", "toLowerCase"]}, "focal_class": {"identifier": "DataEventAttrBuilder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "DataEventAttrBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " DataEventAttrBuilder()", "full_signature": "private  DataEventAttrBuilder()", "class_method_signature": "DataEventAttrBuilder.DataEventAttrBuilder()", "testcase": false, "constructor": true}, {"identifier": "toSource", "parameters": "(final ProcessInstance process)", "modifiers": "public static", "return": "String", "signature": "String toSource(final ProcessInstance process)", "full_signature": "public static String toSource(final ProcessInstance process)", "class_method_signature": "DataEventAttrBuilder.toSource(final ProcessInstance process)", "testcase": false, "constructor": false}, {"identifier": "toType", "parameters": "(final String channelName, final ProcessInstance process)", "modifiers": "public static", "return": "String", "signature": "String toType(final String channelName, final ProcessInstance process)", "full_signature": "public static String toType(final String channelName, final ProcessInstance process)", "class_method_signature": "DataEventAttrBuilder.toType(final String channelName, final ProcessInstance process)", "testcase": false, "constructor": false}, {"identifier": "toType", "parameters": "(final String channelName, final String processId)", "modifiers": "public static", "return": "String", "signature": "String toType(final String channelName, final String processId)", "full_signature": "public static String toType(final String channelName, final String processId)", "class_method_signature": "DataEventAttrBuilder.toType(final String channelName, final String processId)", "testcase": false, "constructor": false}], "file": "api/kogito-services/src/main/java/org/kie/kogito/services/event/DataEventAttrBuilder.java"}, "focal_method": {"identifier": "toType", "parameters": "(final String channelName, final ProcessInstance process)", "modifiers": "public static", "return": "String", "body": "public static String toType(final String channelName, final ProcessInstance process) {\n        Objects.requireNonNull(process);\n        Objects.requireNonNull(channelName);\n        return String.format(AbstractDataEvent.TYPE_FORMAT, process.getProcessId().toLowerCase(), channelName.toLowerCase());\n    }", "signature": "String toType(final String channelName, final ProcessInstance process)", "full_signature": "public static String toType(final String channelName, final ProcessInstance process)", "class_method_signature": "DataEventAttrBuilder.toType(final String channelName, final ProcessInstance process)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "format", "toLowerCase", "getProcessId", "toLowerCase"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}