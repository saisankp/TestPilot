{"test_class": {"identifier": "SimpleCrlCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HTTP_TEST_URL = \"http://test-url.de\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_TEST_URL = \"http://test-url.de\"", "var_name": "HTTP_TEST_URL"}], "file": "poseidas/src/test/java/de/governikus/eumw/poseidas/eidserver/crl/SimpleCrlCacheTest.java"}, "test_case": {"identifier": "crlCacheReturnsNullWhenCRLNotCached", "parameters": "()", "modifiers": "@Test @DisplayName(\"returns null when the CRL is not in the cache\")", "return": "void", "body": "@Test\n  @DisplayName(\"returns null when the CRL is not in the cache\")\n  void crlCacheReturnsNullWhenCRLNotCached()\n  {\n    SimpleCrlCache simpleCrlCache = new SimpleCrlCache();\n    CrlDao x509CRL = simpleCrlCache.get(HTTP_TEST_URL);\n\n    Assertions.assertNull(x509CRL);\n  }", "signature": "void crlCacheReturnsNullWhenCRLNotCached()", "full_signature": "@Test @DisplayName(\"returns null when the CRL is not in the cache\") void crlCacheReturnsNullWhenCRLNotCached()", "class_method_signature": "SimpleCrlCacheTest.crlCacheReturnsNullWhenCRLNotCached()", "testcase": true, "constructor": false, "invocations": ["get", "assertNull"]}, "focal_class": {"identifier": "SimpleCrlCache", "superclass": "", "interfaces": "implements CrlCache", "fields": [{"original_string": "private final Map<String, CrlDao> storage = new TreeMap<>();", "modifier": "private final", "type": "Map<String, CrlDao>", "declarator": "storage = new TreeMap<>()", "var_name": "storage"}], "methods": [{"identifier": "get", "parameters": "(String url)", "modifiers": "@Override public", "return": "CrlDao", "signature": "CrlDao get(String url)", "full_signature": "@Override public CrlDao get(String url)", "class_method_signature": "SimpleCrlCache.get(String url)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String url, X509CRL crl)", "modifiers": "@Override public", "return": "void", "signature": "void set(String url, X509CRL crl)", "full_signature": "@Override public void set(String url, X509CRL crl)", "class_method_signature": "SimpleCrlCache.set(String url, X509CRL crl)", "testcase": false, "constructor": false}, {"identifier": "getAvailableUrls", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAvailableUrls()", "full_signature": "@Override public Set<String> getAvailableUrls()", "class_method_signature": "SimpleCrlCache.getAvailableUrls()", "testcase": false, "constructor": false}], "file": "poseidas/src/main/java/de/governikus/eumw/poseidas/eidserver/crl/SimpleCrlCache.java"}, "focal_method": {"identifier": "get", "parameters": "(String url)", "modifiers": "@Override public", "return": "CrlDao", "body": "@Override\n  public CrlDao get(String url)\n  {\n    return storage.get(url);\n  }", "signature": "CrlDao get(String url)", "full_signature": "@Override public CrlDao get(String url)", "class_method_signature": "SimpleCrlCache.get(String url)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 133799133, "url": "https://github.com/Governikus/eidas-middleware", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 15, "size": 2286, "license": "licensed"}}