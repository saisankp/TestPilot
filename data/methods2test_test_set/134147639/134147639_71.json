{"test_class": {"identifier": "OriginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectConverter objectConverter = new ObjectConverter();", "modifier": "private final", "type": "ObjectConverter", "declarator": "objectConverter = new ObjectConverter()", "var_name": "objectConverter"}, {"original_string": "private final JsonConverter jsonConverter = objectConverter.getJsonConverter();", "modifier": "private final", "type": "JsonConverter", "declarator": "jsonConverter = objectConverter.getJsonConverter()", "var_name": "jsonConverter"}], "file": "webauthn4j-core/src/test/java/com/webauthn4j/data/client/OriginTest.java"}, "test_case": {"identifier": "hashCode_test", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"deprecation\")", "return": "void", "body": "@Test\n    @SuppressWarnings(\"deprecation\")\n    void hashCode_test() {\n        Origin originA = new Origin(\"https://example.com\");\n        Origin originB = new Origin(\"https\", \"example.com\", 443);\n        Origin originC = new Origin(\"http://localhost:8080\");\n        Origin originD = new Origin(\"http\", \"localhost\", 8080);\n        Origin android_apk_key_hash_abc123_a = new Origin(\"android:apk-key-hash:abc123\");\n        Origin android_apk_key_hash_abc123_b = new Origin(\"android:apk-key-hash:abc123\");\n        Origin android_apk_key_hash_def456 = new Origin(\"android:apk-key-hash:def\");\n        Origin invalid_data = new Origin(\"invalid:data\");\n\n        assertThat(originA).hasSameHashCodeAs(originB);\n        assertThat(originC).hasSameHashCodeAs(originD);\n        assertThat(android_apk_key_hash_abc123_a).hasSameHashCodeAs(android_apk_key_hash_abc123_b);\n        assertThat(android_apk_key_hash_abc123_a.hashCode()).isNotEqualTo(android_apk_key_hash_def456.hashCode());\n        assertThat(android_apk_key_hash_abc123_a.hashCode()).isNotEqualTo(invalid_data.hashCode());\n    }", "signature": "void hashCode_test()", "full_signature": "@Test @SuppressWarnings(\"deprecation\") void hashCode_test()", "class_method_signature": "OriginTest.hashCode_test()", "testcase": true, "constructor": false, "invocations": ["hasSameHashCodeAs", "assertThat", "hasSameHashCodeAs", "assertThat", "hasSameHashCodeAs", "assertThat", "isNotEqualTo", "assertThat", "hashCode", "hashCode", "isNotEqualTo", "assertThat", "hashCode", "hashCode"]}, "focal_class": {"identifier": "Origin", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final String SCHEME_HTTPS = \"https\";", "modifier": "private static final", "type": "String", "declarator": "SCHEME_HTTPS = \"https\"", "var_name": "SCHEME_HTTPS"}, {"original_string": "private static final String SCHEME_HTTP = \"http\";", "modifier": "private static final", "type": "String", "declarator": "SCHEME_HTTP = \"http\"", "var_name": "SCHEME_HTTP"}, {"original_string": "private static final String SCHEME_ERROR_MESSAGE = \"scheme must be 'http' or 'https'\";", "modifier": "private static final", "type": "String", "declarator": "SCHEME_ERROR_MESSAGE = \"scheme must be 'http' or 'https'\"", "var_name": "SCHEME_ERROR_MESSAGE"}, {"original_string": "private String scheme;", "modifier": "private", "type": "String", "declarator": "scheme", "var_name": "scheme"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private Integer port;", "modifier": "private", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "private String schemeSpecificPart;", "modifier": "private", "type": "String", "declarator": "schemeSpecificPart", "var_name": "schemeSpecificPart"}, {"original_string": "private boolean explicitPortNotation;", "modifier": "private", "type": "boolean", "declarator": "explicitPortNotation", "var_name": "explicitPortNotation"}], "methods": [{"identifier": "Origin", "parameters": "(String scheme, String host, int port)", "modifiers": "@Deprecated public", "return": "", "signature": " Origin(String scheme, String host, int port)", "full_signature": "@Deprecated public  Origin(String scheme, String host, int port)", "class_method_signature": "Origin.Origin(String scheme, String host, int port)", "testcase": false, "constructor": true}, {"identifier": "toLowerCase", "parameters": "(String s)", "modifiers": "private static", "return": "String", "signature": "String toLowerCase(String s)", "full_signature": "private static String toLowerCase(String s)", "class_method_signature": "Origin.toLowerCase(String s)", "testcase": false, "constructor": false}, {"identifier": "Origin", "parameters": "(String originUrl)", "modifiers": "public", "return": "", "signature": " Origin(String originUrl)", "full_signature": "public  Origin(String originUrl)", "class_method_signature": "Origin.Origin(String originUrl)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(String value)", "modifiers": "public static", "return": "Origin", "signature": "Origin create(String value)", "full_signature": "public static Origin create(String value)", "class_method_signature": "Origin.create(String value)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(String value)", "modifiers": "@JsonCreator private static", "return": "Origin", "signature": "Origin deserialize(String value)", "full_signature": "@JsonCreator private static Origin deserialize(String value)", "class_method_signature": "Origin.deserialize(String value)", "testcase": false, "constructor": false}, {"identifier": "getScheme", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getScheme()", "full_signature": "public String getScheme()", "class_method_signature": "Origin.getScheme()", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHost()", "full_signature": "public String getHost()", "class_method_signature": "Origin.getHost()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getPort()", "full_signature": "public Integer getPort()", "class_method_signature": "Origin.getPort()", "testcase": false, "constructor": false}, {"identifier": "getSchemeSpecificPart", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSchemeSpecificPart()", "full_signature": "public String getSchemeSpecificPart()", "class_method_signature": "Origin.getSchemeSpecificPart()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@JsonValue @Override public", "return": "String", "signature": "String toString()", "full_signature": "@JsonValue @Override public String toString()", "class_method_signature": "Origin.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Origin.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Origin.hashCode()", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/data/client/Origin.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        // explicitPortNotation is not taken into count\n        if(SCHEME_HTTPS.equals(this.scheme) || SCHEME_HTTP.equals(this.scheme)){\n            return Objects.hash(scheme, host, port);\n        }\n        else {\n            return Objects.hash(scheme, schemeSpecificPart);\n        }\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Origin.hashCode()", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "hash", "hash"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}