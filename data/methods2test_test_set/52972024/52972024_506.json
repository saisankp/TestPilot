{"test_class": {"identifier": "SaveTimestampReceiverTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private ITime timeMock;", "modifier": "private", "type": "ITime", "declarator": "timeMock", "var_name": "timeMock"}, {"original_string": "private IFieldName timeFieldMock;", "modifier": "private", "type": "IFieldName", "declarator": "timeFieldMock", "var_name": "timeFieldMock"}], "file": "CoreFeatures/Statistics/EmbeddedSensor/src/test/java/info/smart_tools/smartactors/statistics/sensors/embedded_sensor/utils/SaveTimestampReceiverTest.java"}, "test_case": {"identifier": "Should_wrapExceptions", "parameters": "()", "modifiers": "@Test(expected = MessageReceiveException.class) public", "return": "void", "body": "@Test(expected = MessageReceiveException.class)\n    public void Should_wrapExceptions()\n            throws Exception {\n        IMessageProcessor mp = mock(IMessageProcessor.class);\n        IObject context = mock(IObject.class);\n        when(mp.getContext()).thenReturn(context);\n        doThrow(ChangeValueException.class).when(context).setValue(any(), any());\n        new SaveTimestampReceiver(timeFieldMock).receive(mp);\n    }", "signature": "void Should_wrapExceptions()", "full_signature": "@Test(expected = MessageReceiveException.class) public void Should_wrapExceptions()", "class_method_signature": "SaveTimestampReceiverTest.Should_wrapExceptions()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getContext", "setValue", "when", "doThrow", "any", "any", "receive"]}, "focal_class": {"identifier": "SaveTimestampReceiver", "superclass": "", "interfaces": "implements IMessageReceiver", "fields": [{"original_string": "private final ITime systemTime;", "modifier": "private final", "type": "ITime", "declarator": "systemTime", "var_name": "systemTime"}, {"original_string": "private final IFieldName timeContextField;", "modifier": "private final", "type": "IFieldName", "declarator": "timeContextField", "var_name": "timeContextField"}], "methods": [{"identifier": "SaveTimestampReceiver", "parameters": "(final IFieldName fieldName)", "modifiers": "public", "return": "", "signature": " SaveTimestampReceiver(final IFieldName fieldName)", "full_signature": "public  SaveTimestampReceiver(final IFieldName fieldName)", "class_method_signature": "SaveTimestampReceiver.SaveTimestampReceiver(final IFieldName fieldName)", "testcase": false, "constructor": true}, {"identifier": "receive", "parameters": "(final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void receive(final IMessageProcessor processor)", "full_signature": "@Override public void receive(final IMessageProcessor processor)", "class_method_signature": "SaveTimestampReceiver.receive(final IMessageProcessor processor)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Statistics/EmbeddedSensor/src/main/java/info/smart_tools/smartactors/statistics/sensors/embedded_sensor/utils/SaveTimestampReceiver.java"}, "focal_method": {"identifier": "receive", "parameters": "(final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void receive(final IMessageProcessor processor) throws MessageReceiveException, AsynchronousOperationException {\n        try {\n            processor.getContext().setValue(timeContextField, systemTime.currentTimeMillis());\n        } catch (ChangeValueException | InvalidArgumentException e) {\n            throw new MessageReceiveException(\"Could not save current time in message context.\", e);\n        }\n    }", "signature": "void receive(final IMessageProcessor processor)", "full_signature": "@Override public void receive(final IMessageProcessor processor)", "class_method_signature": "SaveTimestampReceiver.receive(final IMessageProcessor processor)", "testcase": false, "constructor": false, "invocations": ["setValue", "getContext", "currentTimeMillis"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}