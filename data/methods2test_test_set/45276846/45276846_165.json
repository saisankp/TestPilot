{"test_class": {"identifier": "TestOperationJoin", "superclass": "extends BasicReusableHostTestCase", "interfaces": "", "fields": [{"original_string": "private List<Service> services;", "modifier": "private", "type": "List<Service>", "declarator": "services", "var_name": "services"}, {"original_string": "private final int numberOfServices = 3;", "modifier": "private final", "type": "int", "declarator": "numberOfServices = 3", "var_name": "numberOfServices"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestOperationJoin.java"}, "test_case": {"identifier": "testSetOperations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetOperations() throws Throwable {\n        OperationJoin operationJoin = OperationJoin.create();\n        Operation op1 = createServiceOperation(this.services.get(0));\n        Operation op2 = createServiceOperation(this.services.get(1));\n        Operation op3 = createServiceOperation(this.services.get(2));\n\n        host.testStart(1);\n        operationJoin\n            .setOperations(op1, op2, op3)\n            .setCompletion((ops, exs) -> {\n                if (exs != null) {\n                    host.failIteration(exs.values().iterator().next());\n                } else {\n                    host.completeIteration();\n                }\n            }).sendWith(host);\n        host.testWait();\n    }", "signature": "void testSetOperations()", "full_signature": "@Test public void testSetOperations()", "class_method_signature": "TestOperationJoin.testSetOperations()", "testcase": true, "constructor": false, "invocations": ["create", "createServiceOperation", "get", "createServiceOperation", "get", "createServiceOperation", "get", "testStart", "sendWith", "setCompletion", "setOperations", "failIteration", "next", "iterator", "values", "completeIteration", "testWait"]}, "focal_class": {"identifier": "OperationJoin", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int APPROXIMATE_EXPECTED_CAPACITY = 4;", "modifier": "private static final", "type": "int", "declarator": "APPROXIMATE_EXPECTED_CAPACITY = 4", "var_name": "APPROXIMATE_EXPECTED_CAPACITY"}, {"original_string": "public static final String ERROR_MSG_BATCH_LIMIT_VIOLATED = \"batch limit violated\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_MSG_BATCH_LIMIT_VIOLATED = \"batch limit violated\"", "var_name": "ERROR_MSG_BATCH_LIMIT_VIOLATED"}, {"original_string": "public static final String ERROR_MSG_INVALID_BATCH_SIZE = \"batch size must be greater than 0\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_MSG_INVALID_BATCH_SIZE = \"batch size must be greater than 0\"", "var_name": "ERROR_MSG_INVALID_BATCH_SIZE"}, {"original_string": "public static final String ERROR_MSG_OPERATIONS_ALREADY_SET = \"operations have already been set\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_MSG_OPERATIONS_ALREADY_SET = \"operations have already been set\"", "var_name": "ERROR_MSG_OPERATIONS_ALREADY_SET"}, {"original_string": "private final ConcurrentHashMap<Long, Operation> operations;", "modifier": "private final", "type": "ConcurrentHashMap<Long, Operation>", "declarator": "operations", "var_name": "operations"}, {"original_string": "private ConcurrentHashMap<Long, Throwable> failures;", "modifier": "private", "type": "ConcurrentHashMap<Long, Throwable>", "declarator": "failures", "var_name": "failures"}, {"original_string": "JoinedCompletionHandler joinedCompletion;", "modifier": "", "type": "JoinedCompletionHandler", "declarator": "joinedCompletion", "var_name": "joinedCompletion"}, {"original_string": "private OperationContext opContext;", "modifier": "private", "type": "OperationContext", "declarator": "opContext", "var_name": "opContext"}, {"original_string": "private final AtomicInteger pendingCount = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "pendingCount = new AtomicInteger()", "var_name": "pendingCount"}, {"original_string": "private final AtomicInteger batchSizeGuard = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "batchSizeGuard = new AtomicInteger()", "var_name": "batchSizeGuard"}, {"original_string": "private int batchSize = 0;", "modifier": "private", "type": "int", "declarator": "batchSize = 0", "var_name": "batchSize"}, {"original_string": "private Iterator<Operation> operationIterator;", "modifier": "private", "type": "Iterator<Operation>", "declarator": "operationIterator", "var_name": "operationIterator"}, {"original_string": "private ServiceRequestSender sender;", "modifier": "private", "type": "ServiceRequestSender", "declarator": "sender", "var_name": "sender"}, {"original_string": "private final Object failuresLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "failuresLock = new Object()", "var_name": "failuresLock"}, {"original_string": "private String transactionId;", "modifier": "private", "type": "String", "declarator": "transactionId", "var_name": "transactionId"}], "methods": [{"identifier": "OperationJoin", "parameters": "()", "modifiers": "private", "return": "", "signature": " OperationJoin()", "full_signature": "private  OperationJoin()", "class_method_signature": "OperationJoin.OperationJoin()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "OperationJoin", "signature": "OperationJoin create()", "full_signature": "public static OperationJoin create()", "class_method_signature": "OperationJoin.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Operation... ops)", "modifiers": "public static", "return": "OperationJoin", "signature": "OperationJoin create(Operation... ops)", "full_signature": "public static OperationJoin create(Operation... ops)", "class_method_signature": "OperationJoin.create(Operation... ops)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Collection<Operation> ops)", "modifiers": "public static", "return": "OperationJoin", "signature": "OperationJoin create(Collection<Operation> ops)", "full_signature": "public static OperationJoin create(Collection<Operation> ops)", "class_method_signature": "OperationJoin.create(Collection<Operation> ops)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Stream<Operation> ops)", "modifiers": "public static", "return": "OperationJoin", "signature": "OperationJoin create(Stream<Operation> ops)", "full_signature": "public static OperationJoin create(Stream<Operation> ops)", "class_method_signature": "OperationJoin.create(Stream<Operation> ops)", "testcase": false, "constructor": false}, {"identifier": "setOperations", "parameters": "(Operation... ops)", "modifiers": "public", "return": "OperationJoin", "signature": "OperationJoin setOperations(Operation... ops)", "full_signature": "public OperationJoin setOperations(Operation... ops)", "class_method_signature": "OperationJoin.setOperations(Operation... ops)", "testcase": false, "constructor": false}, {"identifier": "setOperations", "parameters": "(Collection<Operation> ops)", "modifiers": "public", "return": "OperationJoin", "signature": "OperationJoin setOperations(Collection<Operation> ops)", "full_signature": "public OperationJoin setOperations(Collection<Operation> ops)", "class_method_signature": "OperationJoin.setOperations(Collection<Operation> ops)", "testcase": false, "constructor": false}, {"identifier": "setOperations", "parameters": "(Stream<Operation> ops)", "modifiers": "public", "return": "OperationJoin", "signature": "OperationJoin setOperations(Stream<Operation> ops)", "full_signature": "public OperationJoin setOperations(Stream<Operation> ops)", "class_method_signature": "OperationJoin.setOperations(Stream<Operation> ops)", "testcase": false, "constructor": false}, {"identifier": "prepareOperation", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void prepareOperation(Operation op)", "full_signature": "private void prepareOperation(Operation op)", "class_method_signature": "OperationJoin.prepareOperation(Operation op)", "testcase": false, "constructor": false}, {"identifier": "parentCompletion", "parameters": "(Operation o, Throwable e)", "modifiers": "private", "return": "void", "signature": "void parentCompletion(Operation o, Throwable e)", "full_signature": "private void parentCompletion(Operation o, Throwable e)", "class_method_signature": "OperationJoin.parentCompletion(Operation o, Throwable e)", "testcase": false, "constructor": false}, {"identifier": "sendWithBatch", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendWithBatch()", "full_signature": "private void sendWithBatch()", "class_method_signature": "OperationJoin.sendWithBatch()", "testcase": false, "constructor": false}, {"identifier": "sendOperation", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void sendOperation(Operation op)", "full_signature": "private void sendOperation(Operation op)", "class_method_signature": "OperationJoin.sendOperation(Operation op)", "testcase": false, "constructor": false}, {"identifier": "sendNext", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendNext()", "full_signature": "private void sendNext()", "class_method_signature": "OperationJoin.sendNext()", "testcase": false, "constructor": false}, {"identifier": "sendWith", "parameters": "(ServiceRequestSender sender, int batchSize)", "modifiers": "public", "return": "void", "signature": "void sendWith(ServiceRequestSender sender, int batchSize)", "full_signature": "public void sendWith(ServiceRequestSender sender, int batchSize)", "class_method_signature": "OperationJoin.sendWith(ServiceRequestSender sender, int batchSize)", "testcase": false, "constructor": false}, {"identifier": "sendWith", "parameters": "(ServiceRequestSender sender)", "modifiers": "public", "return": "void", "signature": "void sendWith(ServiceRequestSender sender)", "full_signature": "public void sendWith(ServiceRequestSender sender)", "class_method_signature": "OperationJoin.sendWith(ServiceRequestSender sender)", "testcase": false, "constructor": false}, {"identifier": "setCompletion", "parameters": "(JoinedCompletionHandler joinedCompletion)", "modifiers": "public", "return": "OperationJoin", "signature": "OperationJoin setCompletion(JoinedCompletionHandler joinedCompletion)", "full_signature": "public OperationJoin setCompletion(JoinedCompletionHandler joinedCompletion)", "class_method_signature": "OperationJoin.setCompletion(JoinedCompletionHandler joinedCompletion)", "testcase": false, "constructor": false}, {"identifier": "getOperationContext", "parameters": "()", "modifiers": "", "return": "OperationContext", "signature": "OperationContext getOperationContext()", "full_signature": " OperationContext getOperationContext()", "class_method_signature": "OperationJoin.getOperationContext()", "testcase": false, "constructor": false}, {"identifier": "setOperationContext", "parameters": "(OperationContext opContext)", "modifiers": "", "return": "void", "signature": "void setOperationContext(OperationContext opContext)", "full_signature": " void setOperationContext(OperationContext opContext)", "class_method_signature": "OperationJoin.setOperationContext(OperationContext opContext)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "OperationJoin.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getOperations", "parameters": "()", "modifiers": "public", "return": "Collection<Operation>", "signature": "Collection<Operation> getOperations()", "full_signature": "public Collection<Operation> getOperations()", "class_method_signature": "OperationJoin.getOperations()", "testcase": false, "constructor": false}, {"identifier": "getFailures", "parameters": "()", "modifiers": "public", "return": "Map<Long, Throwable>", "signature": "Map<Long, Throwable> getFailures()", "full_signature": "public Map<Long, Throwable> getFailures()", "class_method_signature": "OperationJoin.getFailures()", "testcase": false, "constructor": false}, {"identifier": "getOperation", "parameters": "(long id)", "modifiers": "public", "return": "Operation", "signature": "Operation getOperation(long id)", "full_signature": "public Operation getOperation(long id)", "class_method_signature": "OperationJoin.getOperation(long id)", "testcase": false, "constructor": false}, {"identifier": "getTransactionId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTransactionId()", "full_signature": "public String getTransactionId()", "class_method_signature": "OperationJoin.getTransactionId()", "testcase": false, "constructor": false}, {"identifier": "setTransactionId", "parameters": "(String transactionId)", "modifiers": "public", "return": "OperationJoin", "signature": "OperationJoin setTransactionId(String transactionId)", "full_signature": "public OperationJoin setTransactionId(String transactionId)", "class_method_signature": "OperationJoin.setTransactionId(String transactionId)", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(Throwable t)", "modifiers": "", "return": "void", "signature": "void fail(Throwable t)", "full_signature": " void fail(Throwable t)", "class_method_signature": "OperationJoin.fail(Throwable t)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/OperationJoin.java"}, "focal_method": {"identifier": "setOperations", "parameters": "(Operation... ops)", "modifiers": "public", "return": "OperationJoin", "body": "public OperationJoin setOperations(Operation... ops) {\n        if (ops.length == 0) {\n            throw new IllegalArgumentException(\"At least one operation to join expected\");\n        }\n\n        if (this.operationIterator != null) {\n            throw new IllegalStateException(ERROR_MSG_OPERATIONS_ALREADY_SET);\n        }\n\n        for (Operation op : ops) {\n            prepareOperation(op);\n        }\n\n        this.operationIterator = this.operations.values().iterator();\n        return this;\n    }", "signature": "OperationJoin setOperations(Operation... ops)", "full_signature": "public OperationJoin setOperations(Operation... ops)", "class_method_signature": "OperationJoin.setOperations(Operation... ops)", "testcase": false, "constructor": false, "invocations": ["prepareOperation", "iterator", "values"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}