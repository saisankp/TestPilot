{"test_class": {"identifier": "RemoteChunkingWorkerBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private ItemProcessor<String, String> itemProcessor = new PassThroughItemProcessor<>();", "modifier": "private", "type": "ItemProcessor<String, String>", "declarator": "itemProcessor = new PassThroughItemProcessor<>()", "var_name": "itemProcessor"}, {"original_string": "private ItemWriter<String> itemWriter = items -> { };", "modifier": "private", "type": "ItemWriter<String>", "declarator": "itemWriter = items -> { }", "var_name": "itemWriter"}], "file": "spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/RemoteChunkingWorkerBuilderTest.java"}, "test_case": {"identifier": "testMandatoryItemWriter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testMandatoryItemWriter() {\n\t\t// given\n\t\tRemoteChunkingWorkerBuilder<String, String> builder = new RemoteChunkingWorkerBuilder<>();\n\n\t\tthis.expectedException.expect(IllegalArgumentException.class);\n\t\tthis.expectedException.expectMessage(\"An ItemWriter must be provided\");\n\n\t\t// when\n\t\tbuilder.build();\n\n\t\t// then\n\t\t// expected exception\n\t}", "signature": "void testMandatoryItemWriter()", "full_signature": "@Test public void testMandatoryItemWriter()", "class_method_signature": "RemoteChunkingWorkerBuilderTest.testMandatoryItemWriter()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "build"]}, "focal_class": {"identifier": "RemoteChunkingWorkerBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SERVICE_ACTIVATOR_METHOD_NAME = \"handleChunk\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_ACTIVATOR_METHOD_NAME = \"handleChunk\"", "var_name": "SERVICE_ACTIVATOR_METHOD_NAME"}, {"original_string": "private ItemProcessor<I, O> itemProcessor;", "modifier": "private", "type": "ItemProcessor<I, O>", "declarator": "itemProcessor", "var_name": "itemProcessor"}, {"original_string": "private ItemWriter<O> itemWriter;", "modifier": "private", "type": "ItemWriter<O>", "declarator": "itemWriter", "var_name": "itemWriter"}, {"original_string": "private MessageChannel inputChannel;", "modifier": "private", "type": "MessageChannel", "declarator": "inputChannel", "var_name": "inputChannel"}, {"original_string": "private MessageChannel outputChannel;", "modifier": "private", "type": "MessageChannel", "declarator": "outputChannel", "var_name": "outputChannel"}], "methods": [{"identifier": "itemProcessor", "parameters": "(ItemProcessor<I, O> itemProcessor)", "modifiers": "public", "return": "RemoteChunkingWorkerBuilder<I, O>", "signature": "RemoteChunkingWorkerBuilder<I, O> itemProcessor(ItemProcessor<I, O> itemProcessor)", "full_signature": "public RemoteChunkingWorkerBuilder<I, O> itemProcessor(ItemProcessor<I, O> itemProcessor)", "class_method_signature": "RemoteChunkingWorkerBuilder.itemProcessor(ItemProcessor<I, O> itemProcessor)", "testcase": false, "constructor": false}, {"identifier": "itemWriter", "parameters": "(ItemWriter<O> itemWriter)", "modifiers": "public", "return": "RemoteChunkingWorkerBuilder<I, O>", "signature": "RemoteChunkingWorkerBuilder<I, O> itemWriter(ItemWriter<O> itemWriter)", "full_signature": "public RemoteChunkingWorkerBuilder<I, O> itemWriter(ItemWriter<O> itemWriter)", "class_method_signature": "RemoteChunkingWorkerBuilder.itemWriter(ItemWriter<O> itemWriter)", "testcase": false, "constructor": false}, {"identifier": "inputChannel", "parameters": "(MessageChannel inputChannel)", "modifiers": "public", "return": "RemoteChunkingWorkerBuilder<I, O>", "signature": "RemoteChunkingWorkerBuilder<I, O> inputChannel(MessageChannel inputChannel)", "full_signature": "public RemoteChunkingWorkerBuilder<I, O> inputChannel(MessageChannel inputChannel)", "class_method_signature": "RemoteChunkingWorkerBuilder.inputChannel(MessageChannel inputChannel)", "testcase": false, "constructor": false}, {"identifier": "outputChannel", "parameters": "(MessageChannel outputChannel)", "modifiers": "public", "return": "RemoteChunkingWorkerBuilder<I, O>", "signature": "RemoteChunkingWorkerBuilder<I, O> outputChannel(MessageChannel outputChannel)", "full_signature": "public RemoteChunkingWorkerBuilder<I, O> outputChannel(MessageChannel outputChannel)", "class_method_signature": "RemoteChunkingWorkerBuilder.outputChannel(MessageChannel outputChannel)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) public", "return": "IntegrationFlow", "signature": "IntegrationFlow build()", "full_signature": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) public IntegrationFlow build()", "class_method_signature": "RemoteChunkingWorkerBuilder.build()", "testcase": false, "constructor": false}], "file": "spring-batch-integration/src/main/java/org/springframework/batch/integration/chunk/RemoteChunkingWorkerBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) public", "return": "IntegrationFlow", "body": "@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n\tpublic IntegrationFlow build() {\n\t\tAssert.notNull(this.itemWriter, \"An ItemWriter must be provided\");\n\t\tAssert.notNull(this.inputChannel, \"An InputChannel must be provided\");\n\t\tAssert.notNull(this.outputChannel, \"An OutputChannel must be provided\");\n\n\t\tif(this.itemProcessor == null) {\n\t\t\tthis.itemProcessor = new PassThroughItemProcessor();\n\t\t}\n\t\tSimpleChunkProcessor<I, O> chunkProcessor = new SimpleChunkProcessor<>(this.itemProcessor, this.itemWriter);\n\n\t\tChunkProcessorChunkHandler<I> chunkProcessorChunkHandler = new ChunkProcessorChunkHandler<>();\n\t\tchunkProcessorChunkHandler.setChunkProcessor(chunkProcessor);\n\n\t\treturn IntegrationFlows\n\t\t\t\t.from(this.inputChannel)\n\t\t\t\t.handle(chunkProcessorChunkHandler, SERVICE_ACTIVATOR_METHOD_NAME)\n\t\t\t\t.channel(this.outputChannel)\n\t\t\t\t.get();\n\t}", "signature": "IntegrationFlow build()", "full_signature": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) public IntegrationFlow build()", "class_method_signature": "RemoteChunkingWorkerBuilder.build()", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "notNull", "setChunkProcessor", "get", "channel", "handle", "from"]}, "repository": {"repo_id": 1089149, "url": "https://github.com/spring-projects/spring-batch", "stars": 1446, "created": "11/17/2010 5:53:45 PM +00:00", "updates": "2020-01-27T04:10:58+00:00", "fork": "False", "license": "licensed"}}