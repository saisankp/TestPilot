{"test_class": {"identifier": "PersistenceGsonProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PersistenceGsonProvider provider = new PersistenceGsonProvider(MockEncryptorProviderService.create());", "modifier": "private final", "type": "PersistenceGsonProvider", "declarator": "provider = new PersistenceGsonProvider(MockEncryptorProviderService.create())", "var_name": "provider"}], "file": "services/src/test/java/com/greensopinion/finance/services/persistence/PersistenceGsonProviderTest.java"}, "test_case": {"identifier": "categoriesTypeAdapter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void categoriesTypeAdapter() {\n\t\tGson gson = provider.get();\n\t\tassertEquals(CategoriesTypeAdapter.class, gson.getAdapter(Categories.class).getClass());\n\t}", "signature": "void categoriesTypeAdapter()", "full_signature": "@Test public void categoriesTypeAdapter()", "class_method_signature": "PersistenceGsonProviderTest.categoriesTypeAdapter()", "testcase": true, "constructor": false, "invocations": ["get", "assertEquals", "getClass", "getAdapter"]}, "focal_class": {"identifier": "PersistenceGsonProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final EncryptorProviderService encryptorProviderService;", "modifier": "private final", "type": "EncryptorProviderService", "declarator": "encryptorProviderService", "var_name": "encryptorProviderService"}], "methods": [{"identifier": "PersistenceGsonProvider", "parameters": "(EncryptorProviderService encryptorProviderService)", "modifiers": "@Inject", "return": "", "signature": " PersistenceGsonProvider(EncryptorProviderService encryptorProviderService)", "full_signature": "@Inject  PersistenceGsonProvider(EncryptorProviderService encryptorProviderService)", "class_method_signature": "PersistenceGsonProvider.PersistenceGsonProvider(EncryptorProviderService encryptorProviderService)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "Gson", "signature": "Gson get()", "full_signature": "public Gson get()", "class_method_signature": "PersistenceGsonProvider.get()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "", "return": "GsonBuilder", "signature": "GsonBuilder builder()", "full_signature": " GsonBuilder builder()", "class_method_signature": "PersistenceGsonProvider.builder()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/persistence/PersistenceGsonProvider.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "Gson", "body": "public Gson get() {\n\t\tGsonBuilder gsonBuilder = builder();\n\t\tgsonBuilder.registerTypeAdapter(Date.class, new DateTypeAdapter());\n\t\tgsonBuilder.registerTypeAdapterFactory(TransactionsTypeAdapter.factory(encryptorProviderService));\n\t\tgsonBuilder.registerTypeAdapterFactory(CategoriesTypeAdapter.factory(encryptorProviderService));\n\t\treturn gsonBuilder.create();\n\t}", "signature": "Gson get()", "full_signature": "public Gson get()", "class_method_signature": "PersistenceGsonProvider.get()", "testcase": false, "constructor": false, "invocations": ["builder", "registerTypeAdapter", "registerTypeAdapterFactory", "factory", "registerTypeAdapterFactory", "factory", "create"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}