{"test_class": {"identifier": "ServiceSentenceFetchExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServiceSentenceFetchExecutor mServiceSentenceFetchExecutor;", "modifier": "private", "type": "ServiceSentenceFetchExecutor", "declarator": "mServiceSentenceFetchExecutor", "var_name": "mServiceSentenceFetchExecutor"}, {"original_string": "@Mock\n    private Context mContext;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "@Captor\n    private ArgumentCaptor<Intent> mIntentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Intent>", "declarator": "mIntentCaptor", "var_name": "mIntentCaptor"}], "file": "app/src/test/java/com/xixicm/de/infrastructure/service/ServiceSentenceFetchExecutorTest.java"}, "test_case": {"identifier": "testFetchTodaysSentence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFetchTodaysSentence() {\n        mServiceSentenceFetchExecutor.fetchTodaysSentence(false);\n        verify(mContext).startService(mIntentCaptor.capture());\n        Intent intent = mIntentCaptor.getValue();\n        assertTrue(intent != null);\n        // assertTrue(intent.getComponent().getClassName().equals(DEFetchService.class.getCanonicalName()));\n    }", "signature": "void testFetchTodaysSentence()", "full_signature": "@Test public void testFetchTodaysSentence()", "class_method_signature": "ServiceSentenceFetchExecutorTest.testFetchTodaysSentence()", "testcase": true, "constructor": false, "invocations": ["fetchTodaysSentence", "startService", "verify", "capture", "getValue", "assertTrue"]}, "focal_class": {"identifier": "ServiceSentenceFetchExecutor", "superclass": "", "interfaces": "implements SentenceFetchExecutor", "fields": [{"original_string": "private static ServiceSentenceFetchExecutor sInstance;", "modifier": "private static", "type": "ServiceSentenceFetchExecutor", "declarator": "sInstance", "var_name": "sInstance"}, {"original_string": "Context mContext;", "modifier": "", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "ServiceSentenceFetchExecutor", "parameters": "(Context context)", "modifiers": "@VisibleForTesting", "return": "", "signature": " ServiceSentenceFetchExecutor(Context context)", "full_signature": "@VisibleForTesting  ServiceSentenceFetchExecutor(Context context)", "class_method_signature": "ServiceSentenceFetchExecutor.ServiceSentenceFetchExecutor(Context context)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(Context context)", "modifiers": "public static synchronized", "return": "ServiceSentenceFetchExecutor", "signature": "ServiceSentenceFetchExecutor getInstance(Context context)", "full_signature": "public static synchronized ServiceSentenceFetchExecutor getInstance(Context context)", "class_method_signature": "ServiceSentenceFetchExecutor.getInstance(Context context)", "testcase": false, "constructor": false}, {"identifier": "fetchTodaysSentence", "parameters": "(boolean manual)", "modifiers": "@Override public", "return": "void", "signature": "void fetchTodaysSentence(boolean manual)", "full_signature": "@Override public void fetchTodaysSentence(boolean manual)", "class_method_signature": "ServiceSentenceFetchExecutor.fetchTodaysSentence(boolean manual)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/infrastructure/service/ServiceSentenceFetchExecutor.java"}, "focal_method": {"identifier": "fetchTodaysSentence", "parameters": "(boolean manual)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void fetchTodaysSentence(boolean manual) {\n        LogUtils.v(Constants.TAG, ServiceSentenceFetchExecutor.class.getCanonicalName() + \" fetchTodaysSentence\");\n        mContext.startService(new Intent(mContext, DEFetchService.class));\n    }", "signature": "void fetchTodaysSentence(boolean manual)", "full_signature": "@Override public void fetchTodaysSentence(boolean manual)", "class_method_signature": "ServiceSentenceFetchExecutor.fetchTodaysSentence(boolean manual)", "testcase": false, "constructor": false, "invocations": ["v", "getCanonicalName", "startService"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}