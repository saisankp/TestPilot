{"test_class": {"identifier": "HeaderParameterCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTENT_TYPE_HEADER = \"Content-Type\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE_HEADER = \"Content-Type\"", "var_name": "CONTENT_TYPE_HEADER"}, {"original_string": "private static final String CONTENT_ENCODING_HEADER = \"Content-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_ENCODING_HEADER = \"Content-Encoding\"", "var_name": "CONTENT_ENCODING_HEADER"}, {"original_string": "private static final String XML_CONTENT = \"application/xml\";", "modifier": "private static final", "type": "String", "declarator": "XML_CONTENT = \"application/xml\"", "var_name": "XML_CONTENT"}, {"original_string": "private static final String GZIP_CONTENT = \"gzip\";", "modifier": "private static final", "type": "String", "declarator": "GZIP_CONTENT = \"gzip\"", "var_name": "GZIP_CONTENT"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private HeaderParameterChecker underTest;", "modifier": "private", "type": "HeaderParameterChecker", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private ParameterList parameterList;", "modifier": "private", "type": "ParameterList", "declarator": "parameterList", "var_name": "parameterList"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/condition/checker/general/header/HeaderParameterCheckerTest.java"}, "test_case": {"identifier": "testCheckConditionWhenOneConditionIsFulfilledShouldReturnFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConditionWhenOneConditionIsFulfilledShouldReturnFalse() {\n        //GIVEN\n        parameterList.addParameter(new Parameter(CONTENT_TYPE_HEADER, XML_CONTENT));\n        parameterList.addParameter(new Parameter(CONTENT_ENCODING_HEADER, GZIP_CONTENT));\n        given(request.getHeader(CONTENT_TYPE_HEADER)).willReturn(XML_CONTENT);\n        given(request.getHeader(CONTENT_ENCODING_HEADER)).willReturn(\"something else\");\n        //WHEN\n        boolean actual = underTest.checkCondition(request, parameterList);\n        //THEN\n        assertEquals(actual, false);\n    }", "signature": "void testCheckConditionWhenOneConditionIsFulfilledShouldReturnFalse()", "full_signature": "@Test public void testCheckConditionWhenOneConditionIsFulfilledShouldReturnFalse()", "class_method_signature": "HeaderParameterCheckerTest.testCheckConditionWhenOneConditionIsFulfilledShouldReturnFalse()", "testcase": true, "constructor": false, "invocations": ["addParameter", "addParameter", "willReturn", "given", "getHeader", "willReturn", "given", "getHeader", "checkCondition", "assertEquals"]}, "focal_class": {"identifier": "HeaderParameterChecker", "superclass": "", "interfaces": "implements ConditionChecker", "fields": [], "methods": [{"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "HeaderParameterChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/condition/checker/general/header/HeaderParameterChecker.java"}, "focal_method": {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList) {\n        List<Parameter> params = parameterList.getAllParameters();\n        Iterator<Parameter> iterator = params.iterator();\n        boolean result = !params.isEmpty();\n        while (iterator.hasNext() && result) {\n            Parameter parameter = iterator.next();\n            String header = request.getHeader(parameter.getName());\n            if (header != null) {\n                result = result && header.contains(parameter.getValue());\n            } else {\n                result = false;\n            }\n\n        }\n        return result;\n    }", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "HeaderParameterChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "iterator", "isEmpty", "hasNext", "next", "getHeader", "getName", "contains", "getValue"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}