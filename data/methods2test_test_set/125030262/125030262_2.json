{"test_class": {"identifier": "CommentServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n    private CommentRepository commentRepository;", "modifier": "@MockBean\n    private", "type": "CommentRepository", "declarator": "commentRepository", "var_name": "commentRepository"}, {"original_string": "private CommentService commentService;", "modifier": "private", "type": "CommentService", "declarator": "commentService", "var_name": "commentService"}], "file": "Chapter02/spring-boot-2-web-app/src/test/java/com/packtpub/springboot2webapp/service/CommentServiceTest.java"}, "test_case": {"identifier": "saveAll_HappyPath_ShouldSave2Comments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveAll_HappyPath_ShouldSave2Comments() {\n        // Given\n        Comment comment = new Comment();\n        comment.setComment(\"Test Plus\");\n        comment.setType(CommentType.PLUS);\n        comment.setCreatedBy(\"Shazin\");\n        comment.setCreatedDate(new Timestamp(System.currentTimeMillis()));\n\n        Comment comment2 = new Comment();\n        comment2.setComment(\"Test Star\");\n        comment2.setType(CommentType.STAR);\n        comment2.setCreatedBy(\"Shahim\");\n        comment2.setCreatedDate(new Timestamp(System.currentTimeMillis()));\n        List<Comment> comments = Arrays.asList(comment, comment2);\n        when(commentRepository.saveAll(comments)).thenReturn(comments);\n\n        // When\n        List<Comment> saved = commentService.saveAll(comments);\n\n        // Then\n        assertThat(saved).isNotEmpty();\n        verify(commentRepository, times(1)).saveAll(comments);\n\n    }", "signature": "void saveAll_HappyPath_ShouldSave2Comments()", "full_signature": "@Test public void saveAll_HappyPath_ShouldSave2Comments()", "class_method_signature": "CommentServiceTest.saveAll_HappyPath_ShouldSave2Comments()", "testcase": true, "constructor": false, "invocations": ["setComment", "setType", "setCreatedBy", "setCreatedDate", "currentTimeMillis", "setComment", "setType", "setCreatedBy", "setCreatedDate", "currentTimeMillis", "asList", "thenReturn", "when", "saveAll", "saveAll", "isNotEmpty", "assertThat", "saveAll", "verify", "times"]}, "focal_class": {"identifier": "CommentService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CommentService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CommentService.class)", "var_name": "LOGGER"}, {"original_string": "private final CommentRepository commentRepository;", "modifier": "private final", "type": "CommentRepository", "declarator": "commentRepository", "var_name": "commentRepository"}], "methods": [{"identifier": "CommentService", "parameters": "(CommentRepository commentRepository)", "modifiers": "public", "return": "", "signature": " CommentService(CommentRepository commentRepository)", "full_signature": "public  CommentService(CommentRepository commentRepository)", "class_method_signature": "CommentService.CommentService(CommentRepository commentRepository)", "testcase": false, "constructor": true}, {"identifier": "saveAll", "parameters": "(List<Comment> comments)", "modifiers": "@Transactional(rollbackFor = Exception.class) public", "return": "List<Comment>", "signature": "List<Comment> saveAll(List<Comment> comments)", "full_signature": "@Transactional(rollbackFor = Exception.class) public List<Comment> saveAll(List<Comment> comments)", "class_method_signature": "CommentService.saveAll(List<Comment> comments)", "testcase": false, "constructor": false}, {"identifier": "getAllCommentsForToday", "parameters": "()", "modifiers": "public", "return": "List<Comment>", "signature": "List<Comment> getAllCommentsForToday()", "full_signature": "public List<Comment> getAllCommentsForToday()", "class_method_signature": "CommentService.getAllCommentsForToday()", "testcase": false, "constructor": false}], "file": "Chapter02/spring-boot-2-web-app/src/main/java/com/packtpub/springboot2webapp/service/CommentService.java"}, "focal_method": {"identifier": "saveAll", "parameters": "(List<Comment> comments)", "modifiers": "@Transactional(rollbackFor = Exception.class) public", "return": "List<Comment>", "body": "@Transactional(rollbackFor = Exception.class)\n    public List<Comment> saveAll(List<Comment> comments) {\n        LOGGER.info(\"Saving {}\", comments);\n        return commentRepository.saveAll(comments);\n    }", "signature": "List<Comment> saveAll(List<Comment> comments)", "full_signature": "@Transactional(rollbackFor = Exception.class) public List<Comment> saveAll(List<Comment> comments)", "class_method_signature": "CommentService.saveAll(List<Comment> comments)", "testcase": false, "constructor": false, "invocations": ["info", "saveAll"]}, "repository": {"repo_id": 125030262, "url": "https://github.com/PacktPublishing/Spring-Boot-2.0-Projects", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 60, "size": 1848, "license": "licensed"}}