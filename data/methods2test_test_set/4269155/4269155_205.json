{"test_class": {"identifier": "HeaderValuesMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EnumeratedValuesExtractor extractor;", "modifier": "private", "type": "EnumeratedValuesExtractor", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private HeaderValuesMap map;", "modifier": "private", "type": "HeaderValuesMap", "declarator": "map", "var_name": "map"}], "file": "tiles-request-api/src/test/java/org/apache/tiles/request/collection/HeaderValuesMapTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test\n    public void testGet() {\n        Enumeration<String> values2 = createMock(Enumeration.class);\n\n        expect(extractor.getValues(\"two\")).andReturn(values2);\n        expect(values2.hasMoreElements()).andReturn(true);\n        expect(values2.nextElement()).andReturn(\"value2\");\n        expect(values2.hasMoreElements()).andReturn(true);\n        expect(values2.nextElement()).andReturn(\"value3\");\n        expect(values2.hasMoreElements()).andReturn(false);\n\n        replay(extractor, values2);\n        assertArrayEquals(new String[] {\"value2\", \"value3\"}, map.get(\"two\"));\n        verify(extractor, values2);\n    }", "signature": "void testGet()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testGet()", "class_method_signature": "HeaderValuesMapTest.testGet()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "getValues", "andReturn", "expect", "hasMoreElements", "andReturn", "expect", "nextElement", "andReturn", "expect", "hasMoreElements", "andReturn", "expect", "nextElement", "andReturn", "expect", "hasMoreElements", "replay", "assertArrayEquals", "get", "verify"]}, "focal_class": {"identifier": "HeaderValuesMap", "superclass": "", "interfaces": "implements Map<String, String[]>", "fields": [{"original_string": "private EnumeratedValuesExtractor request;", "modifier": "private", "type": "EnumeratedValuesExtractor", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "HeaderValuesMap", "parameters": "(EnumeratedValuesExtractor request)", "modifiers": "public", "return": "", "signature": " HeaderValuesMap(EnumeratedValuesExtractor request)", "full_signature": "public  HeaderValuesMap(EnumeratedValuesExtractor request)", "class_method_signature": "HeaderValuesMap.HeaderValuesMap(EnumeratedValuesExtractor request)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "HeaderValuesMap.clear()", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey(Object key)", "full_signature": "public boolean containsKey(Object key)", "class_method_signature": "HeaderValuesMap.containsKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "containsValue", "parameters": "(Object value)", "modifiers": "public", "return": "boolean", "signature": "boolean containsValue(Object value)", "full_signature": "public boolean containsValue(Object value)", "class_method_signature": "HeaderValuesMap.containsValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "entrySet", "parameters": "()", "modifiers": "public", "return": "Set<Map.Entry<String, String[]>>", "signature": "Set<Map.Entry<String, String[]>> entrySet()", "full_signature": "public Set<Map.Entry<String, String[]>> entrySet()", "class_method_signature": "HeaderValuesMap.entrySet()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "HeaderValuesMap.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "public", "return": "String[]", "signature": "String[] get(Object key)", "full_signature": "public String[] get(Object key)", "class_method_signature": "HeaderValuesMap.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HeaderValuesMap.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "HeaderValuesMap.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> keySet()", "full_signature": "public Set<String> keySet()", "class_method_signature": "HeaderValuesMap.keySet()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String key, String[] value)", "modifiers": "public", "return": "String[]", "signature": "String[] put(String key, String[] value)", "full_signature": "public String[] put(String key, String[] value)", "class_method_signature": "HeaderValuesMap.put(String key, String[] value)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Map<? extends String, ? extends String[]> map)", "modifiers": "public", "return": "void", "signature": "void putAll(Map<? extends String, ? extends String[]> map)", "full_signature": "public void putAll(Map<? extends String, ? extends String[]> map)", "class_method_signature": "HeaderValuesMap.putAll(Map<? extends String, ? extends String[]> map)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object key)", "modifiers": "public", "return": "String[]", "signature": "String[] remove(Object key)", "full_signature": "public String[] remove(Object key)", "class_method_signature": "HeaderValuesMap.remove(Object key)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "HeaderValuesMap.size()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "public", "return": "Collection<String[]>", "signature": "Collection<String[]> values()", "full_signature": "public Collection<String[]> values()", "class_method_signature": "HeaderValuesMap.values()", "testcase": false, "constructor": false}, {"identifier": "getHeaderValues", "parameters": "(String key)", "modifiers": "private", "return": "String[]", "signature": "String[] getHeaderValues(String key)", "full_signature": "private String[] getHeaderValues(String key)", "class_method_signature": "HeaderValuesMap.getHeaderValues(String key)", "testcase": false, "constructor": false}, {"identifier": "enumeration2set", "parameters": "(Enumeration<String> enumeration)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> enumeration2set(Enumeration<String> enumeration)", "full_signature": "private Set<String> enumeration2set(Enumeration<String> enumeration)", "class_method_signature": "HeaderValuesMap.enumeration2set(Enumeration<String> enumeration)", "testcase": false, "constructor": false}, {"identifier": "array2set", "parameters": "(String[] valueArray)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> array2set(String[] valueArray)", "full_signature": "private Set<String> array2set(String[] valueArray)", "class_method_signature": "HeaderValuesMap.array2set(String[] valueArray)", "testcase": false, "constructor": false}, {"identifier": "compareHeaders", "parameters": "(String name, Set<String> testSet)", "modifiers": "private", "return": "boolean", "signature": "boolean compareHeaders(String name, Set<String> testSet)", "full_signature": "private boolean compareHeaders(String name, Set<String> testSet)", "class_method_signature": "HeaderValuesMap.compareHeaders(String name, Set<String> testSet)", "testcase": false, "constructor": false}], "file": "tiles-request-api/src/main/java/org/apache/tiles/request/collection/HeaderValuesMap.java"}, "focal_method": {"identifier": "get", "parameters": "(Object key)", "modifiers": "public", "return": "String[]", "body": "public String[] get(Object key) {\n        return getHeaderValues(key(key));\n    }", "signature": "String[] get(Object key)", "full_signature": "public String[] get(Object key)", "class_method_signature": "HeaderValuesMap.get(Object key)", "testcase": false, "constructor": false, "invocations": ["getHeaderValues", "key"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}