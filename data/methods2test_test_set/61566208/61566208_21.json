{"test_class": {"identifier": "HttpUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/hms-util/src/test/java/com/vmware/vrack/hms/common/util/HttpUtilTest.java"}, "test_case": {"identifier": "testExecutePostWithBasicAuth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecutePostWithBasicAuth()\n    {\n        final String url = \"https://api.github.com/authorizations\";\n        HttpResponse httpResponse = HttpUtil.executePostWithBasicAuth( url, \"userName\", \"password\" );\n        assertNotNull( httpResponse );\n        StatusLine statusLine = httpResponse.getStatusLine();\n        assertNotNull( statusLine );\n        assertTrue( statusLine.getStatusCode() == HttpStatus.SC_UNAUTHORIZED );\n    }", "signature": "void testExecutePostWithBasicAuth()", "full_signature": "@Test public void testExecutePostWithBasicAuth()", "class_method_signature": "HttpUtilTest.testExecutePostWithBasicAuth()", "testcase": true, "constructor": false, "invocations": ["executePostWithBasicAuth", "assertNotNull", "getStatusLine", "assertNotNull", "assertTrue", "getStatusCode"]}, "focal_class": {"identifier": "HttpUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger( HttpUtil.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( HttpUtil.class )", "var_name": "logger"}, {"original_string": "public static final String RESP_CODE = \"responseCode\";", "modifier": "public static final", "type": "String", "declarator": "RESP_CODE = \"responseCode\"", "var_name": "RESP_CODE"}, {"original_string": "public static final String RESP_BODY = \"responseBody\";", "modifier": "public static final", "type": "String", "declarator": "RESP_BODY = \"responseBody\"", "var_name": "RESP_BODY"}], "methods": [{"identifier": "executeRequest", "parameters": "( String url, RequestMethod requestMethod,\n                                                                           String requestBody )", "modifiers": "public static", "return": "com.vmware.vrack.hms.common.HttpResponse", "signature": "com.vmware.vrack.hms.common.HttpResponse executeRequest( String url, RequestMethod requestMethod,\n                                                                           String requestBody )", "full_signature": "public static com.vmware.vrack.hms.common.HttpResponse executeRequest( String url, RequestMethod requestMethod,\n                                                                           String requestBody )", "class_method_signature": "HttpUtil.executeRequest( String url, RequestMethod requestMethod,\n                                                                           String requestBody )", "testcase": false, "constructor": false}, {"identifier": "buildUrl", "parameters": "( List<String> list )", "modifiers": "public static", "return": "String", "signature": "String buildUrl( List<String> list )", "full_signature": "public static String buildUrl( List<String> list )", "class_method_signature": "HttpUtil.buildUrl( List<String> list )", "testcase": false, "constructor": false}, {"identifier": "getResponseHandler", "parameters": "( final Class<T> valueType )", "modifiers": "private static", "return": "ResponseHandler<T>", "signature": "ResponseHandler<T> getResponseHandler( final Class<T> valueType )", "full_signature": "private static ResponseHandler<T> getResponseHandler( final Class<T> valueType )", "class_method_signature": "HttpUtil.getResponseHandler( final Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "getResponseHandler", "parameters": "( final TypeReference<T> typeRef )", "modifiers": "private static", "return": "ResponseHandler<T>", "signature": "ResponseHandler<T> getResponseHandler( final TypeReference<T> typeRef )", "full_signature": "private static ResponseHandler<T> getResponseHandler( final TypeReference<T> typeRef )", "class_method_signature": "HttpUtil.getResponseHandler( final TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "executeGet", "parameters": "( final String url, final Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T executeGet( final String url, final Class<T> valueType )", "full_signature": "public static T executeGet( final String url, final Class<T> valueType )", "class_method_signature": "HttpUtil.executeGet( final String url, final Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "executeGet", "parameters": "( final String url, final TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T executeGet( final String url, final TypeReference<T> typeRef )", "full_signature": "public static T executeGet( final String url, final TypeReference<T> typeRef )", "class_method_signature": "HttpUtil.executeGet( final String url, final TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "executeGet", "parameters": "( final String url )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executeGet( final String url )", "full_signature": "public static HttpResponse executeGet( final String url )", "class_method_signature": "HttpUtil.executeGet( final String url )", "testcase": false, "constructor": false}, {"identifier": "executeGet", "parameters": "( final String url, final HttpClient httpClient )", "modifiers": "private static", "return": "HttpResponse", "signature": "HttpResponse executeGet( final String url, final HttpClient httpClient )", "full_signature": "private static HttpResponse executeGet( final String url, final HttpClient httpClient )", "class_method_signature": "HttpUtil.executeGet( final String url, final HttpClient httpClient )", "testcase": false, "constructor": false}, {"identifier": "executeGet", "parameters": "( final String url, final ResponseHandler<T> responseHandler,\n                                     final HttpClient httpClient )", "modifiers": "private static", "return": "T", "signature": "T executeGet( final String url, final ResponseHandler<T> responseHandler,\n                                     final HttpClient httpClient )", "full_signature": "private static T executeGet( final String url, final ResponseHandler<T> responseHandler,\n                                     final HttpClient httpClient )", "class_method_signature": "HttpUtil.executeGet( final String url, final ResponseHandler<T> responseHandler,\n                                     final HttpClient httpClient )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final Object requestBody, final Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T executePost( final String url, final Object requestBody, final Class<T> valueType )", "full_signature": "public static T executePost( final String url, final Object requestBody, final Class<T> valueType )", "class_method_signature": "HttpUtil.executePost( final String url, final Object requestBody, final Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final Object requestBody, final TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T executePost( final String url, final Object requestBody, final TypeReference<T> typeRef )", "full_signature": "public static T executePost( final String url, final Object requestBody, final TypeReference<T> typeRef )", "class_method_signature": "HttpUtil.executePost( final String url, final Object requestBody, final TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T executePost( final String url, final Class<T> valueType )", "full_signature": "public static T executePost( final String url, final Class<T> valueType )", "class_method_signature": "HttpUtil.executePost( final String url, final Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T executePost( final String url, final TypeReference<T> typeRef )", "full_signature": "public static T executePost( final String url, final TypeReference<T> typeRef )", "class_method_signature": "HttpUtil.executePost( final String url, final TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final HttpEntity httpEntity,\n                                      final ResponseHandler<T> responseHandler )", "modifiers": "private static", "return": "T", "signature": "T executePost( final String url, final HttpEntity httpEntity,\n                                      final ResponseHandler<T> responseHandler )", "full_signature": "private static T executePost( final String url, final HttpEntity httpEntity,\n                                      final ResponseHandler<T> responseHandler )", "class_method_signature": "HttpUtil.executePost( final String url, final HttpEntity httpEntity,\n                                      final ResponseHandler<T> responseHandler )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executePost( final String url )", "full_signature": "public static HttpResponse executePost( final String url )", "class_method_signature": "HttpUtil.executePost( final String url )", "testcase": false, "constructor": false}, {"identifier": "executePost", "parameters": "( final String url, final Object requestBody )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executePost( final String url, final Object requestBody )", "full_signature": "public static HttpResponse executePost( final String url, final Object requestBody )", "class_method_signature": "HttpUtil.executePost( final String url, final Object requestBody )", "testcase": false, "constructor": false}, {"identifier": "executePostWithBasicAuth", "parameters": "( final String url, final String userName,\n                                                         final String password )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "full_signature": "public static HttpResponse executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "class_method_signature": "HttpUtil.executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "testcase": false, "constructor": false}, {"identifier": "executePostWithBasicAuth", "parameters": "( final String url, final String userName, final String password,\n                                                  final TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final TypeReference<T> typeRef )", "full_signature": "public static T executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final TypeReference<T> typeRef )", "class_method_signature": "HttpUtil.executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "executePostWithBasicAuth", "parameters": "( final String url, final String userName, final String password,\n                                                  final Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final Class<T> valueType )", "full_signature": "public static T executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final Class<T> valueType )", "class_method_signature": "HttpUtil.executePostWithBasicAuth( final String url, final String userName, final String password,\n                                                  final Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "getHttpClientWithBasicAuth", "parameters": "( final String userName, final String password )", "modifiers": "private static", "return": "HttpClient", "signature": "HttpClient getHttpClientWithBasicAuth( final String userName, final String password )", "full_signature": "private static HttpClient getHttpClientWithBasicAuth( final String userName, final String password )", "class_method_signature": "HttpUtil.getHttpClientWithBasicAuth( final String userName, final String password )", "testcase": false, "constructor": false}, {"identifier": "getHttpClient", "parameters": "()", "modifiers": "public static", "return": "HttpClient", "signature": "HttpClient getHttpClient()", "full_signature": "public static HttpClient getHttpClient()", "class_method_signature": "HttpUtil.getHttpClient()", "testcase": false, "constructor": false}, {"identifier": "getStringEntity", "parameters": "( final Object requestBody )", "modifiers": "private static", "return": "StringEntity", "signature": "StringEntity getStringEntity( final Object requestBody )", "full_signature": "private static StringEntity getStringEntity( final Object requestBody )", "class_method_signature": "HttpUtil.getStringEntity( final Object requestBody )", "testcase": false, "constructor": false}, {"identifier": "executePut", "parameters": "( final String url )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executePut( final String url )", "full_signature": "public static HttpResponse executePut( final String url )", "class_method_signature": "HttpUtil.executePut( final String url )", "testcase": false, "constructor": false}, {"identifier": "executePut", "parameters": "( final String apiUrl, final String requestBody )", "modifiers": "public static", "return": "HttpResponse", "signature": "HttpResponse executePut( final String apiUrl, final String requestBody )", "full_signature": "public static HttpResponse executePut( final String apiUrl, final String requestBody )", "class_method_signature": "HttpUtil.executePut( final String apiUrl, final String requestBody )", "testcase": false, "constructor": false}, {"identifier": "executePut", "parameters": "( final String url, final HttpClient httpClient, final HttpEntity httpEntity )", "modifiers": "private static", "return": "HttpResponse", "signature": "HttpResponse executePut( final String url, final HttpClient httpClient, final HttpEntity httpEntity )", "full_signature": "private static HttpResponse executePut( final String url, final HttpClient httpClient, final HttpEntity httpEntity )", "class_method_signature": "HttpUtil.executePut( final String url, final HttpClient httpClient, final HttpEntity httpEntity )", "testcase": false, "constructor": false}], "file": "modules/hms-util/src/main/java/com/vmware/vrack/hms/common/util/HttpUtil.java"}, "focal_method": {"identifier": "executePostWithBasicAuth", "parameters": "( final String url, final String userName,\n                                                         final String password )", "modifiers": "public static", "return": "HttpResponse", "body": "public static HttpResponse executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )\n    {\n        // check that url is not null\n        if ( StringUtils.isBlank( url ) )\n        {\n            logger.warn( \"In executePostWithBasicAuth, URL is either null or blank.\" );\n            return null;\n        }\n        HttpClient httpClient = HttpUtil.getHttpClientWithBasicAuth( userName, password );\n        if ( httpClient == null )\n        {\n            logger.warn( \"In executePostWithBasicAuth, unable to get HttpClient with BasicAuth.\" );\n            return null;\n        }\n        try\n        {\n            return httpClient.execute( new HttpPost( url ) );\n        }\n        catch ( IOException e )\n        {\n            logger.error( \"In executePostWithBasicAuth, error invoking POST on '{}'\", url, e );\n            return null;\n        }\n    }", "signature": "HttpResponse executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "full_signature": "public static HttpResponse executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "class_method_signature": "HttpUtil.executePostWithBasicAuth( final String url, final String userName,\n                                                         final String password )", "testcase": false, "constructor": false, "invocations": ["isBlank", "warn", "getHttpClientWithBasicAuth", "warn", "execute", "error"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}