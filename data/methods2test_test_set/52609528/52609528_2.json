{"test_class": {"identifier": "ValidationResourceManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Vertx vertx;", "modifier": "private", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private ValidationResourceManager validationResourceManager;", "modifier": "private", "type": "ValidationResourceManager", "declarator": "validationResourceManager", "var_name": "validationResourceManager"}, {"original_string": "private final String VALIDATION_URI = \"/gateleen/server/validation\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_URI = \"/gateleen/server/validation\"", "var_name": "VALIDATION_URI"}, {"original_string": "private final String VALIDATION_RESOURCE_VALID = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_VALID = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "VALIDATION_RESOURCE_VALID"}, {"original_string": "private final String VALIDATION_RESOURCE_INVALID = \"{\\n\" +\n            \"  \\\"wrongProperty\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_INVALID = \"{\\n\" +\n            \"  \\\"wrongProperty\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "VALIDATION_RESOURCE_INVALID"}, {"original_string": "private final String VALIDATION_RESOURCE_INVALID_2 = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"notAllowedProperty\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_INVALID_2 = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"notAllowedProperty\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "VALIDATION_RESOURCE_INVALID_2"}, {"original_string": "private final String VALIDATION_RESOURCE_VALID_3 = \"{\\n\"\n            + \"  \\\"resources\\\": [\\n\"\n            + \"    {\\n\"\n            + \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\"\\n\"\n            + \"    }\\n\"\n            + \"  ]\\n\"\n            + \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_VALID_3 = \"{\\n\"\n            + \"  \\\"resources\\\": [\\n\"\n            + \"    {\\n\"\n            + \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\"\\n\"\n            + \"    }\\n\"\n            + \"  ]\\n\"\n            + \"}\"", "var_name": "VALIDATION_RESOURCE_VALID_3"}, {"original_string": "private final String VALIDATION_RESOURCE_UPDATE = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someOtherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_UPDATE = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someOtherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "VALIDATION_RESOURCE_UPDATE"}, {"original_string": "private final String VALIDATION_RESOURCE_UPDATE_INVALID = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"notURL\\\": \\\"/gateleen/resources/someOtherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private final", "type": "String", "declarator": "VALIDATION_RESOURCE_UPDATE_INVALID = \"{\\n\" +\n            \"  \\\"resources\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"url\\\": \\\"/gateleen/resources/someResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    },\\n\" +\n            \"    {\\n\" +\n            \"      \\\"notURL\\\": \\\"/gateleen/resources/someOtherResource\\\",\\n\" +\n            \"      \\\"method\\\": \\\"GET|PUT\\\"\\n\" +\n            \"    }    \\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "VALIDATION_RESOURCE_UPDATE_INVALID"}], "file": "gateleen-validation/src/test/java/org/swisspush/gateleen/validation/ValidationResourceManagerTest.java"}, "test_case": {"identifier": "testHandleValidationResourceWithGETRequests", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleValidationResourceWithGETRequests(TestContext context){\n        validationResourceManager = new ValidationResourceManager(vertx, new MockResourceStorage(ImmutableMap.of(VALIDATION_URI, VALIDATION_RESOURCE_VALID)), VALIDATION_URI);\n\n        class GETValidationResourceRequest extends HttpServerRequestMock{\n            @Override public HttpMethod method() {\n                return HttpMethod.GET;\n            }\n\n            @Override public String uri() {\n                return VALIDATION_URI;\n            }\n\n            @Override public String path() {\n                return VALIDATION_URI;\n            }\n\n        }\n        boolean handled = validationResourceManager.handleValidationResource(new GETValidationResourceRequest());\n        context.assertFalse(handled, \"GET Request to validationUri should not be handled\");\n\n        class GETOtherResourceRequest extends HttpServerRequestMock{\n            @Override public HttpMethod method() {\n                return HttpMethod.GET;\n            }\n\n            @Override public String uri() {\n                return \"/some/other/resource\";\n            }\n\n            @Override public String path() {\n                return \"/some/other/resource\";\n            }\n        }\n        handled = validationResourceManager.handleValidationResource(new GETOtherResourceRequest());\n        context.assertFalse(handled, \"GET Request to some other resource should not be handled\");\n    }", "signature": "void testHandleValidationResourceWithGETRequests(TestContext context)", "full_signature": "@Test public void testHandleValidationResourceWithGETRequests(TestContext context)", "class_method_signature": "ValidationResourceManagerTest.testHandleValidationResourceWithGETRequests(TestContext context)", "testcase": true, "constructor": false, "invocations": ["of", "handleValidationResource", "assertFalse", "handleValidationResource", "assertFalse"]}, "focal_class": {"identifier": "ValidationResourceManager", "superclass": "", "interfaces": "implements LoggableResource", "fields": [{"original_string": "private static final String UPDATE_ADDRESS = \"gateleen.validation-updated\";", "modifier": "private static final", "type": "String", "declarator": "UPDATE_ADDRESS = \"gateleen.validation-updated\"", "var_name": "UPDATE_ADDRESS"}, {"original_string": "private final String validationUri;", "modifier": "private final", "type": "String", "declarator": "validationUri", "var_name": "validationUri"}, {"original_string": "private final ResourceStorage storage;", "modifier": "private final", "type": "ResourceStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private final Logger log = LoggerFactory.getLogger(ValidationResourceManager.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ValidationResourceManager.class)", "var_name": "log"}, {"original_string": "private final Vertx vertx;", "modifier": "private final", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private ValidationResource validationResource;", "modifier": "private", "type": "ValidationResource", "declarator": "validationResource", "var_name": "validationResource"}, {"original_string": "private String validationResourceSchema;", "modifier": "private", "type": "String", "declarator": "validationResourceSchema", "var_name": "validationResourceSchema"}, {"original_string": "private boolean logConfigurationResourceChanges = false;", "modifier": "private", "type": "boolean", "declarator": "logConfigurationResourceChanges = false", "var_name": "logConfigurationResourceChanges"}], "methods": [{"identifier": "getValidationResource", "parameters": "()", "modifiers": "public", "return": "ValidationResource", "signature": "ValidationResource getValidationResource()", "full_signature": "public ValidationResource getValidationResource()", "class_method_signature": "ValidationResourceManager.getValidationResource()", "testcase": false, "constructor": false}, {"identifier": "ValidationResourceManager", "parameters": "(Vertx vertx, final ResourceStorage storage, String validationUri)", "modifiers": "public", "return": "", "signature": " ValidationResourceManager(Vertx vertx, final ResourceStorage storage, String validationUri)", "full_signature": "public  ValidationResourceManager(Vertx vertx, final ResourceStorage storage, String validationUri)", "class_method_signature": "ValidationResourceManager.ValidationResourceManager(Vertx vertx, final ResourceStorage storage, String validationUri)", "testcase": false, "constructor": true}, {"identifier": "enableResourceLogging", "parameters": "(boolean resourceLoggingEnabled)", "modifiers": "@Override public", "return": "void", "signature": "void enableResourceLogging(boolean resourceLoggingEnabled)", "full_signature": "@Override public void enableResourceLogging(boolean resourceLoggingEnabled)", "class_method_signature": "ValidationResourceManager.enableResourceLogging(boolean resourceLoggingEnabled)", "testcase": false, "constructor": false}, {"identifier": "updateValidationResource", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateValidationResource()", "full_signature": "private void updateValidationResource()", "class_method_signature": "ValidationResourceManager.updateValidationResource()", "testcase": false, "constructor": false}, {"identifier": "updateValidationResource", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void updateValidationResource(Buffer buffer)", "full_signature": "private void updateValidationResource(Buffer buffer)", "class_method_signature": "ValidationResourceManager.updateValidationResource(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "handleValidationResource", "parameters": "(final HttpServerRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean handleValidationResource(final HttpServerRequest request)", "full_signature": "public boolean handleValidationResource(final HttpServerRequest request)", "class_method_signature": "ValidationResourceManager.handleValidationResource(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "extractValidationValues", "parameters": "(Buffer validationResourceBuffer)", "modifiers": "private", "return": "void", "signature": "void extractValidationValues(Buffer validationResourceBuffer)", "full_signature": "private void extractValidationValues(Buffer validationResourceBuffer)", "class_method_signature": "ValidationResourceManager.extractValidationValues(Buffer validationResourceBuffer)", "testcase": false, "constructor": false}], "file": "gateleen-validation/src/main/java/org/swisspush/gateleen/validation/ValidationResourceManager.java"}, "focal_method": {"identifier": "handleValidationResource", "parameters": "(final HttpServerRequest request)", "modifiers": "public", "return": "boolean", "body": "public boolean handleValidationResource(final HttpServerRequest request) {\n        if (request.uri().equals(validationUri) && HttpMethod.PUT == request.method()) {\n            request.bodyHandler(validationResourceBuffer -> {\n                try {\n                    extractValidationValues(validationResourceBuffer);\n                } catch (ValidationException validationException) {\n                    updateValidationResource();\n                    log.error(\"Could not parse validation resource: \" + validationException.toString());\n                    ResponseStatusCodeLogUtil.info(request, StatusCode.BAD_REQUEST, ValidationResourceManager.class);\n                    request.response().setStatusCode(StatusCode.BAD_REQUEST.getStatusCode());\n                    request.response().setStatusMessage(StatusCode.BAD_REQUEST.getStatusMessage());\n                    if(validationException.getValidationDetails() != null){\n                        request.response().headers().add(\"content-type\", \"application/json\");\n                        request.response().end(validationException.getValidationDetails().encode());\n                    } else {\n                        request.response().end(validationException.getMessage());\n                    }\n                    return;\n                }\n                storage.put(validationUri, validationResourceBuffer, status -> {\n                    if (status == StatusCode.OK.getStatusCode()) {\n                        if(logConfigurationResourceChanges){\n                            RequestLogger.logRequest(vertx.eventBus(), request, status, validationResourceBuffer);\n                        }\n                        vertx.eventBus().publish(UPDATE_ADDRESS, true);\n                    } else {\n                        request.response().setStatusCode(status);\n                    }\n                    ResponseStatusCodeLogUtil.info(request, StatusCode.fromCode(status), ValidationResourceManager.class);\n                    request.response().end();\n                });\n            });\n            return true;\n        }\n\n        if (request.uri().equals(validationUri) && HttpMethod.DELETE == request.method()) {\n            getValidationResource().reset();\n            log.info(\"Reset ValidationResource\");\n        }\n\n        return false;\n    }", "signature": "boolean handleValidationResource(final HttpServerRequest request)", "full_signature": "public boolean handleValidationResource(final HttpServerRequest request)", "class_method_signature": "ValidationResourceManager.handleValidationResource(final HttpServerRequest request)", "testcase": false, "constructor": false, "invocations": ["equals", "uri", "method", "bodyHandler", "extractValidationValues", "updateValidationResource", "error", "toString", "info", "setStatusCode", "response", "getStatusCode", "setStatusMessage", "response", "getStatusMessage", "getValidationDetails", "add", "headers", "response", "end", "response", "encode", "getValidationDetails", "end", "response", "getMessage", "put", "getStatusCode", "logRequest", "eventBus", "publish", "eventBus", "setStatusCode", "response", "info", "fromCode", "end", "response", "equals", "uri", "method", "reset", "getValidationResource", "info"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}