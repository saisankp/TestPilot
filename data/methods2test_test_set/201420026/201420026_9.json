{"test_class": {"identifier": "LideaMethodDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaMethodDAO lideaMethodDAO;", "modifier": "@Resource\n    private", "type": "LideaMethodDAO", "declarator": "lideaMethodDAO", "var_name": "lideaMethodDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaMethodDAOTest.java"}, "test_case": {"identifier": "put", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void put() {\n\n        LideaMethodBO bo = new LideaMethodBO();\n        bo.setTime(TimeUtil.dateToString(LocalDateTime.now()));\n        bo.setAppName(\"cabinet-base-server\");\n        bo.setServiceName(\"com.fcbox.edms.terminal.api.CabinetServiceFacade\");\n        bo.setMethodName(\"getCabinetInfo\");\n        bo.setCount(\"100\");\n\n        bo = lideaMethodDAO.put(bo);\n\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(bo));\n    }", "signature": "void put()", "full_signature": "@Test public void put()", "class_method_signature": "LideaMethodDAOTest.put()", "testcase": true, "constructor": false, "invocations": ["setTime", "dateToString", "now", "setAppName", "setServiceName", "setMethodName", "setCount", "put", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaMethodDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaMethodBO bo)", "modifiers": "public", "return": "LideaMethodBO", "signature": "LideaMethodBO put(LideaMethodBO bo)", "full_signature": "public LideaMethodBO put(LideaMethodBO bo)", "class_method_signature": "LideaMethodDAO.put(LideaMethodBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "List<LideaMethodBO>", "signature": "List<LideaMethodBO> scan(LideaMethodReq req)", "full_signature": "public List<LideaMethodBO> scan(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.scan(LideaMethodReq req)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "LideaMethodResp", "signature": "LideaMethodResp get(LideaMethodReq req)", "full_signature": "public LideaMethodResp get(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.get(LideaMethodReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaMethodDAO.java"}, "focal_method": {"identifier": "put", "parameters": "(LideaMethodBO bo)", "modifiers": "public", "return": "LideaMethodBO", "body": "public LideaMethodBO put(LideaMethodBO bo) {\n\n        Put put = LideaMethodEntry.of(bo);\n\n        return hbaseTemplate.execute(Const.LIDEA_METHOD_TABLE, (htable) -> {\n\n            htable.put(put);\n            return bo;\n\n        });\n\n    }", "signature": "LideaMethodBO put(LideaMethodBO bo)", "full_signature": "public LideaMethodBO put(LideaMethodBO bo)", "class_method_signature": "LideaMethodDAO.put(LideaMethodBO bo)", "testcase": false, "constructor": false, "invocations": ["of", "execute", "put"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}