{"test_class": {"identifier": "DateUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/baidu/unbiz/common/DateUtilTest.java"}, "test_case": {"identifier": "getCurrentCalendar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCurrentCalendar() {\n\n    }", "signature": "void getCurrentCalendar()", "full_signature": "@Test public void getCurrentCalendar()", "class_method_signature": "DateUtilTest.getCurrentCalendar()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "DateUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final long SECOND = 1000;", "modifier": "public static final", "type": "long", "declarator": "SECOND = 1000", "var_name": "SECOND"}, {"original_string": "public static final long MINUTE = SECOND * 60;", "modifier": "public static final", "type": "long", "declarator": "MINUTE = SECOND * 60", "var_name": "MINUTE"}, {"original_string": "public static final long HOUR = MINUTE * 60;", "modifier": "public static final", "type": "long", "declarator": "HOUR = MINUTE * 60", "var_name": "HOUR"}, {"original_string": "public static final long DAY = 24 * HOUR;", "modifier": "public static final", "type": "long", "declarator": "DAY = 24 * HOUR", "var_name": "DAY"}, {"original_string": "public static final String TIME_BEGIN = \" 00:00:00\";", "modifier": "public static final", "type": "String", "declarator": "TIME_BEGIN = \" 00:00:00\"", "var_name": "TIME_BEGIN"}, {"original_string": "public static final String TIME_END = \" 23:59:59\";", "modifier": "public static final", "type": "String", "declarator": "TIME_END = \" 23:59:59\"", "var_name": "TIME_END"}, {"original_string": "public static final String MONTH_PATTERN = \"yyyy-MM\";", "modifier": "public static final", "type": "String", "declarator": "MONTH_PATTERN = \"yyyy-MM\"", "var_name": "MONTH_PATTERN"}, {"original_string": "public static final String DEFAULT_PATTERN = \"yyyyMMdd\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_PATTERN = \"yyyyMMdd\"", "var_name": "DEFAULT_PATTERN"}, {"original_string": "public static final String DOT_PATTERN = \"yyyy.MM.dd\";", "modifier": "public static final", "type": "String", "declarator": "DOT_PATTERN = \"yyyy.MM.dd\"", "var_name": "DOT_PATTERN"}, {"original_string": "public static final String FULL_PATTERN = \"yyyyMMddHHmmss\";", "modifier": "public static final", "type": "String", "declarator": "FULL_PATTERN = \"yyyyMMddHHmmss\"", "var_name": "FULL_PATTERN"}, {"original_string": "public static final String FULL_STANDARD_PATTERN = \"yyyyMMdd HH:mm:ss\";", "modifier": "public static final", "type": "String", "declarator": "FULL_STANDARD_PATTERN = \"yyyyMMdd HH:mm:ss\"", "var_name": "FULL_STANDARD_PATTERN"}, {"original_string": "public static final String CHINESE_PATTERN = \"yyyy-MM-dd\";", "modifier": "public static final", "type": "String", "declarator": "CHINESE_PATTERN = \"yyyy-MM-dd\"", "var_name": "CHINESE_PATTERN"}, {"original_string": "public static final String FULL_CHINESE_PATTERN = \"yyyy-MM-dd HH:mm:ss\";", "modifier": "public static final", "type": "String", "declarator": "FULL_CHINESE_PATTERN = \"yyyy-MM-dd HH:mm:ss\"", "var_name": "FULL_CHINESE_PATTERN"}], "methods": [{"identifier": "getCurrentCalendar", "parameters": "()", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCurrentCalendar()", "full_signature": "public static Calendar getCurrentCalendar()", "class_method_signature": "DateUtil.getCurrentCalendar()", "testcase": false, "constructor": false}, {"identifier": "getCurrentTimestamp", "parameters": "()", "modifiers": "public static", "return": "Timestamp", "signature": "Timestamp getCurrentTimestamp()", "full_signature": "public static Timestamp getCurrentTimestamp()", "class_method_signature": "DateUtil.getCurrentTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getCurrentDatetime", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getCurrentDatetime()", "full_signature": "public static Date getCurrentDatetime()", "class_method_signature": "DateUtil.getCurrentDatetime()", "testcase": false, "constructor": false}, {"identifier": "getCurrentDate", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getCurrentDate()", "full_signature": "public static Date getCurrentDate()", "class_method_signature": "DateUtil.getCurrentDate()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getYear()", "full_signature": "public static String getYear()", "class_method_signature": "DateUtil.getYear()", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getMonth()", "full_signature": "public static String getMonth()", "class_method_signature": "DateUtil.getMonth()", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getDay()", "full_signature": "public static String getDay()", "class_method_signature": "DateUtil.getDay()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "(Date date)", "modifiers": "public static final", "return": "int", "signature": "int getYear(Date date)", "full_signature": "public static final int getYear(Date date)", "class_method_signature": "DateUtil.getYear(Date date)", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "(long millis)", "modifiers": "public static final", "return": "int", "signature": "int getYear(long millis)", "full_signature": "public static final int getYear(long millis)", "class_method_signature": "DateUtil.getYear(long millis)", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "(Date date)", "modifiers": "public static final", "return": "int", "signature": "int getMonth(Date date)", "full_signature": "public static final int getMonth(Date date)", "class_method_signature": "DateUtil.getMonth(Date date)", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "(long millis)", "modifiers": "public static final", "return": "int", "signature": "int getMonth(long millis)", "full_signature": "public static final int getMonth(long millis)", "class_method_signature": "DateUtil.getMonth(long millis)", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "(Date date)", "modifiers": "public static final", "return": "int", "signature": "int getDay(Date date)", "full_signature": "public static final int getDay(Date date)", "class_method_signature": "DateUtil.getDay(Date date)", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "(long millis)", "modifiers": "public static final", "return": "int", "signature": "int getDay(long millis)", "full_signature": "public static final int getDay(long millis)", "class_method_signature": "DateUtil.getDay(long millis)", "testcase": false, "constructor": false}, {"identifier": "getHour", "parameters": "(Date date)", "modifiers": "public static final", "return": "int", "signature": "int getHour(Date date)", "full_signature": "public static final int getHour(Date date)", "class_method_signature": "DateUtil.getHour(Date date)", "testcase": false, "constructor": false}, {"identifier": "getHour", "parameters": "(long millis)", "modifiers": "public static final", "return": "int", "signature": "int getHour(long millis)", "full_signature": "public static final int getHour(long millis)", "class_method_signature": "DateUtil.getHour(long millis)", "testcase": false, "constructor": false}, {"identifier": "getChinesePatternNow", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getChinesePatternNow()", "full_signature": "public static String getChinesePatternNow()", "class_method_signature": "DateUtil.getChinesePatternNow()", "testcase": false, "constructor": false}, {"identifier": "getFullChinesePatternNow", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getFullChinesePatternNow()", "full_signature": "public static String getFullChinesePatternNow()", "class_method_signature": "DateUtil.getFullChinesePatternNow()", "testcase": false, "constructor": false}, {"identifier": "getChinesePatternNow", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String getChinesePatternNow(Date date)", "full_signature": "public static String getChinesePatternNow(Date date)", "class_method_signature": "DateUtil.getChinesePatternNow(Date date)", "testcase": false, "constructor": false}, {"identifier": "getFullCNPatternNow", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String getFullCNPatternNow(Date date)", "full_signature": "public static String getFullCNPatternNow(Date date)", "class_method_signature": "DateUtil.getFullCNPatternNow(Date date)", "testcase": false, "constructor": false}, {"identifier": "formatDate", "parameters": "(final Date date)", "modifiers": "public static", "return": "String", "signature": "String formatDate(final Date date)", "full_signature": "public static String formatDate(final Date date)", "class_method_signature": "DateUtil.formatDate(final Date date)", "testcase": false, "constructor": false}, {"identifier": "formatDate", "parameters": "(final Date date, String format)", "modifiers": "public static", "return": "String", "signature": "String formatDate(final Date date, String format)", "full_signature": "public static String formatDate(final Date date, String format)", "class_method_signature": "DateUtil.formatDate(final Date date, String format)", "testcase": false, "constructor": false}, {"identifier": "formatDate", "parameters": "(String format)", "modifiers": "public static", "return": "String", "signature": "String formatDate(String format)", "full_signature": "public static String formatDate(String format)", "class_method_signature": "DateUtil.formatDate(String format)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(String sDate)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(String sDate)", "full_signature": "public static Date parseDate(String sDate)", "class_method_signature": "DateUtil.parseDate(String sDate)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(String sDate, String format)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(String sDate, String format)", "full_signature": "public static Date parseDate(String sDate, String format)", "class_method_signature": "DateUtil.parseDate(String sDate, String format)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(String sDate, String format, Date defaultValue)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(String sDate, String format, Date defaultValue)", "full_signature": "public static Date parseDate(String sDate, String format, Date defaultValue)", "class_method_signature": "DateUtil.parseDate(String sDate, String format, Date defaultValue)", "testcase": false, "constructor": false}, {"identifier": "addMonths", "parameters": "(Date date, int months)", "modifiers": "public static", "return": "Date", "signature": "Date addMonths(Date date, int months)", "full_signature": "public static Date addMonths(Date date, int months)", "class_method_signature": "DateUtil.addMonths(Date date, int months)", "testcase": false, "constructor": false}, {"identifier": "addDays", "parameters": "(final Date date, int days)", "modifiers": "public static", "return": "Date", "signature": "Date addDays(final Date date, int days)", "full_signature": "public static Date addDays(final Date date, int days)", "class_method_signature": "DateUtil.addDays(final Date date, int days)", "testcase": false, "constructor": false}, {"identifier": "addMins", "parameters": "(final Date date, int mins)", "modifiers": "public static", "return": "Date", "signature": "Date addMins(final Date date, int mins)", "full_signature": "public static Date addMins(final Date date, int mins)", "class_method_signature": "DateUtil.addMins(final Date date, int mins)", "testcase": false, "constructor": false}, {"identifier": "compareDate", "parameters": "(Date first, Date second)", "modifiers": "public static", "return": "int", "signature": "int compareDate(Date first, Date second)", "full_signature": "public static int compareDate(Date first, Date second)", "class_method_signature": "DateUtil.compareDate(Date first, Date second)", "testcase": false, "constructor": false}, {"identifier": "getSmaller", "parameters": "(Date first, Date second)", "modifiers": "public static", "return": "Date", "signature": "Date getSmaller(Date first, Date second)", "full_signature": "public static Date getSmaller(Date first, Date second)", "class_method_signature": "DateUtil.getSmaller(Date first, Date second)", "testcase": false, "constructor": false}, {"identifier": "getLarger", "parameters": "(Date first, Date second)", "modifiers": "public static", "return": "Date", "signature": "Date getLarger(Date first, Date second)", "full_signature": "public static Date getLarger(Date first, Date second)", "class_method_signature": "DateUtil.getLarger(Date first, Date second)", "testcase": false, "constructor": false}, {"identifier": "isDateBetween", "parameters": "(Date date, Date begin, Date end)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDateBetween(Date date, Date begin, Date end)", "full_signature": "public static boolean isDateBetween(Date date, Date begin, Date end)", "class_method_signature": "DateUtil.isDateBetween(Date date, Date begin, Date end)", "testcase": false, "constructor": false}, {"identifier": "isSameMonth", "parameters": "(Date date1, Date date2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSameMonth(Date date1, Date date2)", "full_signature": "public static boolean isSameMonth(Date date1, Date date2)", "class_method_signature": "DateUtil.isSameMonth(Date date1, Date date2)", "testcase": false, "constructor": false}, {"identifier": "isSameDay", "parameters": "(Date date1, Date date2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSameDay(Date date1, Date date2)", "full_signature": "public static boolean isSameDay(Date date1, Date date2)", "class_method_signature": "DateUtil.isSameDay(Date date1, Date date2)", "testcase": false, "constructor": false}, {"identifier": "isSameMonth", "parameters": "(Calendar cal1, Calendar cal2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSameMonth(Calendar cal1, Calendar cal2)", "full_signature": "public static boolean isSameMonth(Calendar cal1, Calendar cal2)", "class_method_signature": "DateUtil.isSameMonth(Calendar cal1, Calendar cal2)", "testcase": false, "constructor": false}, {"identifier": "getStartOfDate", "parameters": "(final Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getStartOfDate(final Date date)", "full_signature": "public static Date getStartOfDate(final Date date)", "class_method_signature": "DateUtil.getStartOfDate(final Date date)", "testcase": false, "constructor": false}, {"identifier": "getPreviousMonday", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getPreviousMonday()", "full_signature": "public static Date getPreviousMonday()", "class_method_signature": "DateUtil.getPreviousMonday()", "testcase": false, "constructor": false}, {"identifier": "getMondayBefore4Week", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getMondayBefore4Week()", "full_signature": "public static Date getMondayBefore4Week()", "class_method_signature": "DateUtil.getMondayBefore4Week()", "testcase": false, "constructor": false}, {"identifier": "getCurrentMonday", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getCurrentMonday()", "full_signature": "public static Date getCurrentMonday()", "class_method_signature": "DateUtil.getCurrentMonday()", "testcase": false, "constructor": false}, {"identifier": "getEndOfMonth", "parameters": "(final Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getEndOfMonth(final Date date)", "full_signature": "public static Date getEndOfMonth(final Date date)", "class_method_signature": "DateUtil.getEndOfMonth(final Date date)", "testcase": false, "constructor": false}, {"identifier": "getFirstOfMonth", "parameters": "(final Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getFirstOfMonth(final Date date)", "full_signature": "public static Date getFirstOfMonth(final Date date)", "class_method_signature": "DateUtil.getFirstOfMonth(final Date date)", "testcase": false, "constructor": false}, {"identifier": "getWeekBegin", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getWeekBegin(Date date)", "full_signature": "public static Date getWeekBegin(Date date)", "class_method_signature": "DateUtil.getWeekBegin(Date date)", "testcase": false, "constructor": false}, {"identifier": "getWeekEnd", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getWeekEnd(Date date)", "full_signature": "public static Date getWeekEnd(Date date)", "class_method_signature": "DateUtil.getWeekEnd(Date date)", "testcase": false, "constructor": false}, {"identifier": "inFormat", "parameters": "(String sourceDate, String format)", "modifiers": "public static", "return": "boolean", "signature": "boolean inFormat(String sourceDate, String format)", "full_signature": "public static boolean inFormat(String sourceDate, String format)", "class_method_signature": "DateUtil.inFormat(String sourceDate, String format)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfSecondsBetween", "parameters": "(final double d1, final double d2)", "modifiers": "public static", "return": "int", "signature": "int getNumberOfSecondsBetween(final double d1, final double d2)", "full_signature": "public static int getNumberOfSecondsBetween(final double d1, final double d2)", "class_method_signature": "DateUtil.getNumberOfSecondsBetween(final double d1, final double d2)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfMonthsBetween", "parameters": "(final Date begin, final Date end)", "modifiers": "public static", "return": "int", "signature": "int getNumberOfMonthsBetween(final Date begin, final Date end)", "full_signature": "public static int getNumberOfMonthsBetween(final Date begin, final Date end)", "class_method_signature": "DateUtil.getNumberOfMonthsBetween(final Date begin, final Date end)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfMinuteBetween", "parameters": "(final Date begin, final Date end)", "modifiers": "public static", "return": "long", "signature": "long getNumberOfMinuteBetween(final Date begin, final Date end)", "full_signature": "public static long getNumberOfMinuteBetween(final Date begin, final Date end)", "class_method_signature": "DateUtil.getNumberOfMinuteBetween(final Date begin, final Date end)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfHoursBetween", "parameters": "(final Date begin, final Date end)", "modifiers": "public static", "return": "long", "signature": "long getNumberOfHoursBetween(final Date begin, final Date end)", "full_signature": "public static long getNumberOfHoursBetween(final Date begin, final Date end)", "class_method_signature": "DateUtil.getNumberOfHoursBetween(final Date begin, final Date end)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfDaysBetween", "parameters": "(final Date begin, final Date end)", "modifiers": "public static", "return": "long", "signature": "long getNumberOfDaysBetween(final Date begin, final Date end)", "full_signature": "public static long getNumberOfDaysBetween(final Date begin, final Date end)", "class_method_signature": "DateUtil.getNumberOfDaysBetween(final Date begin, final Date end)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfDaysBetween", "parameters": "(Calendar before, Calendar after)", "modifiers": "public static", "return": "long", "signature": "long getNumberOfDaysBetween(Calendar before, Calendar after)", "full_signature": "public static long getNumberOfDaysBetween(Calendar before, Calendar after)", "class_method_signature": "DateUtil.getNumberOfDaysBetween(Calendar before, Calendar after)", "testcase": false, "constructor": false}, {"identifier": "getRemoteDate", "parameters": "(String url)", "modifiers": "public static", "return": "Date", "signature": "Date getRemoteDate(String url)", "full_signature": "public static Date getRemoteDate(String url)", "class_method_signature": "DateUtil.getRemoteDate(String url)", "testcase": false, "constructor": false}, {"identifier": "getCurDateCeil", "parameters": "()", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCurDateCeil()", "full_signature": "public static Calendar getCurDateCeil()", "class_method_signature": "DateUtil.getCurDateCeil()", "testcase": false, "constructor": false}, {"identifier": "getCurDateFloor", "parameters": "()", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCurDateFloor()", "full_signature": "public static Calendar getCurDateFloor()", "class_method_signature": "DateUtil.getCurDateFloor()", "testcase": false, "constructor": false}, {"identifier": "getWeekBegin", "parameters": "(Calendar tmp)", "modifiers": "public static", "return": "Date", "signature": "Date getWeekBegin(Calendar tmp)", "full_signature": "public static Date getWeekBegin(Calendar tmp)", "class_method_signature": "DateUtil.getWeekBegin(Calendar tmp)", "testcase": false, "constructor": false}, {"identifier": "getWeekEnd", "parameters": "(Calendar tmp)", "modifiers": "public static", "return": "Date", "signature": "Date getWeekEnd(Calendar tmp)", "full_signature": "public static Date getWeekEnd(Calendar tmp)", "class_method_signature": "DateUtil.getWeekEnd(Calendar tmp)", "testcase": false, "constructor": false}, {"identifier": "getQuarterBegin", "parameters": "(Calendar tmp)", "modifiers": "public static", "return": "Date", "signature": "Date getQuarterBegin(Calendar tmp)", "full_signature": "public static Date getQuarterBegin(Calendar tmp)", "class_method_signature": "DateUtil.getQuarterBegin(Calendar tmp)", "testcase": false, "constructor": false}, {"identifier": "getQuarterEnd", "parameters": "(Calendar tmp)", "modifiers": "public static", "return": "Date", "signature": "Date getQuarterEnd(Calendar tmp)", "full_signature": "public static Date getQuarterEnd(Calendar tmp)", "class_method_signature": "DateUtil.getQuarterEnd(Calendar tmp)", "testcase": false, "constructor": false}, {"identifier": "getQuarterBegin", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getQuarterBegin(Date date)", "full_signature": "public static Date getQuarterBegin(Date date)", "class_method_signature": "DateUtil.getQuarterBegin(Date date)", "testcase": false, "constructor": false}, {"identifier": "getQuarterEnd", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getQuarterEnd(Date date)", "full_signature": "public static Date getQuarterEnd(Date date)", "class_method_signature": "DateUtil.getQuarterEnd(Date date)", "testcase": false, "constructor": false}, {"identifier": "getYearBegin", "parameters": "(final Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getYearBegin(final Date date)", "full_signature": "public static Date getYearBegin(final Date date)", "class_method_signature": "DateUtil.getYearBegin(final Date date)", "testcase": false, "constructor": false}, {"identifier": "getYearEnd", "parameters": "(final Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getYearEnd(final Date date)", "full_signature": "public static Date getYearEnd(final Date date)", "class_method_signature": "DateUtil.getYearEnd(final Date date)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "DateUtil.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(int year, int month, int day)", "modifiers": "public static", "return": "Date", "signature": "Date getDate(int year, int month, int day)", "full_signature": "public static Date getDate(int year, int month, int day)", "class_method_signature": "DateUtil.getDate(int year, int month, int day)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/DateUtil.java"}, "focal_method": {"identifier": "getCurrentCalendar", "parameters": "()", "modifiers": "public static", "return": "Calendar", "body": "public static Calendar getCurrentCalendar() {\n        return Calendar.getInstance();\n    }", "signature": "Calendar getCurrentCalendar()", "full_signature": "public static Calendar getCurrentCalendar()", "class_method_signature": "DateUtil.getCurrentCalendar()", "testcase": false, "constructor": false, "invocations": ["getInstance"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}