{"test_class": {"identifier": "AISBBasedBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/ais/model/aisb2/AISBBasedBuilderTest.java"}, "test_case": {"identifier": "exampleWithGroupIndexes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exampleWithGroupIndexes() {\n        NewAISBuilder builder = AISBBasedBuilder.create(typesTranslator());\n        AkibanInformationSchema ais =\n                builder.defaultSchema(\"sch\")\n                        .table(\"customer\").colInt(\"cid\").colString(\"name\", 32).pk(\"cid\")\n                        .table(\"order\").colInt(\"oid\").colInt(\"c2\").colInt(\"c_id\").pk(\"oid\", \"c2\").key(\"c_id\", \"c_id\").joinTo(\"customer\").on(\"c_id\", \"cid\")\n                        .table(\"item\").colInt(\"iid\").colInt(\"o_id\").colInt(\"o_c2\").key(\"o_id\", \"o_id\", \"o_c2\").joinTo(\"order\").on(\"o_id\", \"oid\").and(\"o_c2\", \"c2\")\n                        .table(\"address\").colInt(\"aid\").colInt(\"c_id\").key(\"c_id\", \"c_id\").joinTo(\"customer\").on(\"c_id\", \"cid\")\n                .groupIndex(\"name_c2\", Index.JoinType.LEFT).on(\"customer\", \"name\").and(\"order\", \"c2\")\n                .groupIndex(\"iid_name_c2\", Index.JoinType.LEFT).on(\"item\", \"iid\").and(\"customer\", \"name\").and(\"order\", \"c2\")\n                        .ais();\n\n        Group cGroup = ais.getGroup(new TableName(\"sch\", \"customer\"));\n        Table cTable = ais.getTable(\"sch\", \"customer\");\n        Table aTable = ais.getTable(\"sch\", \"address\");\n        Table oTable = ais.getTable(\"sch\", \"order\");\n        Table iTable = ais.getTable(\"sch\", \"item\");\n\n        assertNotNull(\"customer group\", cGroup);\n        assertEquals(\"customer group root\", cGroup.getRoot(), cTable);\n\n        assertEquals(\"address parent\", cTable, aTable.getParentJoin().getParent());\n        assertEquals(\"address join\", \"[JoinColumn(c_id -> cid)]\", aTable.getParentJoin().getJoinColumns().toString());\n\n        assertEquals(\"order parent\", cTable, oTable.getParentJoin().getParent());\n        assertEquals(\"order join\", \"[JoinColumn(c_id -> cid)]\", oTable.getParentJoin().getJoinColumns().toString());\n\n        assertEquals(\"item parent\", oTable, iTable.getParentJoin().getParent());\n        assertEquals(\"item join\", \"[JoinColumn(o_id -> oid), JoinColumn(o_c2 -> c2)]\", iTable.getParentJoin().getJoinColumns().toString());\n    }", "signature": "void exampleWithGroupIndexes()", "full_signature": "@Test public void exampleWithGroupIndexes()", "class_method_signature": "AISBBasedBuilderTest.exampleWithGroupIndexes()", "testcase": true, "constructor": false, "invocations": ["create", "typesTranslator", "ais", "and", "and", "on", "groupIndex", "and", "on", "groupIndex", "on", "joinTo", "key", "colInt", "colInt", "table", "and", "on", "joinTo", "key", "colInt", "colInt", "colInt", "table", "on", "joinTo", "key", "pk", "colInt", "colInt", "colInt", "table", "pk", "colString", "colInt", "table", "defaultSchema", "getGroup", "getTable", "getTable", "getTable", "getTable", "assertNotNull", "assertEquals", "getRoot", "assertEquals", "getParent", "getParentJoin", "assertEquals", "toString", "getJoinColumns", "getParentJoin", "assertEquals", "getParent", "getParentJoin", "assertEquals", "toString", "getJoinColumns", "getParentJoin", "assertEquals", "getParent", "getParentJoin", "assertEquals", "toString", "getJoinColumns", "getParentJoin"]}, "focal_class": {"identifier": "AISBBasedBuilder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(TypesTranslator typesTranslator)", "modifiers": "public static", "return": "NewAISBuilder", "signature": "NewAISBuilder create(TypesTranslator typesTranslator)", "full_signature": "public static NewAISBuilder create(TypesTranslator typesTranslator)", "class_method_signature": "AISBBasedBuilder.create(TypesTranslator typesTranslator)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String defaultSchema,\n                                       TypesTranslator typesTranslator)", "modifiers": "public static", "return": "NewAISBuilder", "signature": "NewAISBuilder create(String defaultSchema,\n                                       TypesTranslator typesTranslator)", "full_signature": "public static NewAISBuilder create(String defaultSchema,\n                                       TypesTranslator typesTranslator)", "class_method_signature": "AISBBasedBuilder.create(String defaultSchema,\n                                       TypesTranslator typesTranslator)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/ais/model/aisb2/AISBBasedBuilder.java"}, "focal_method": {"identifier": "create", "parameters": "(TypesTranslator typesTranslator)", "modifiers": "public static", "return": "NewAISBuilder", "body": "public static NewAISBuilder create(TypesTranslator typesTranslator) {\n        return new ActualBuilder(typesTranslator);\n    }", "signature": "NewAISBuilder create(TypesTranslator typesTranslator)", "full_signature": "public static NewAISBuilder create(TypesTranslator typesTranslator)", "class_method_signature": "AISBBasedBuilder.create(TypesTranslator typesTranslator)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}