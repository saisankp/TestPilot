{"test_class": {"identifier": "XMLNameConstraintTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private XMLNameConstraint constraint;", "modifier": "private", "type": "XMLNameConstraint", "declarator": "constraint", "var_name": "constraint"}], "file": "core/inputoutput/src/test/java/org/arakhne/afc/inputoutput/xml/XMLNameConstraintTest.java"}, "test_case": {"identifier": "isValidElement_invalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void isValidElement_invalid() {\n\t\tElement element = mock(Element.class);\n\t\twhen(element.getAttribute(anyString())).then((inv) -> {\n\t\t\tif (XMLUtil.ATTR_NAME.equals(inv.getArgument(0))) {\n\t\t\t\treturn UUID.randomUUID().toString();\n\t\t\t}\n\t\t\tfail(\"Invalid attribute name\"); //$NON-NLS-1$\n\t\t\treturn null;\n\t\t});\n\t\tassertFalse(this.constraint.isValidElement(element));\n\t}", "signature": "void isValidElement_invalid()", "full_signature": "@Test public void isValidElement_invalid()", "class_method_signature": "XMLNameConstraintTest.isValidElement_invalid()", "testcase": true, "constructor": false, "invocations": ["mock", "then", "when", "getAttribute", "anyString", "equals", "getArgument", "toString", "randomUUID", "fail", "assertFalse", "isValidElement"]}, "focal_class": {"identifier": "XMLNameConstraint", "superclass": "", "interfaces": "implements XMLConstraint", "fields": [{"original_string": "private final String value;", "modifier": "private final", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "XMLNameConstraint", "parameters": "(String value)", "modifiers": "public", "return": "", "signature": " XMLNameConstraint(String value)", "full_signature": "public  XMLNameConstraint(String value)", "class_method_signature": "XMLNameConstraint.XMLNameConstraint(String value)", "testcase": false, "constructor": true}, {"identifier": "isValidElement", "parameters": "(Element element)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValidElement(Element element)", "full_signature": "@Override public boolean isValidElement(Element element)", "class_method_signature": "XMLNameConstraint.isValidElement(Element element)", "testcase": false, "constructor": false}], "file": "core/inputoutput/src/main/java/org/arakhne/afc/inputoutput/xml/XMLNameConstraint.java"}, "focal_method": {"identifier": "isValidElement", "parameters": "(Element element)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean isValidElement(Element element) {\n\t\tfinal String v = XMLUtil.getAttributeValueWithDefault(element, null, XMLUtil.ATTR_NAME);\n\t\treturn v == this.value || (v != null && v.equals(this.value));\n\t}", "signature": "boolean isValidElement(Element element)", "full_signature": "@Override public boolean isValidElement(Element element)", "class_method_signature": "XMLNameConstraint.isValidElement(Element element)", "testcase": false, "constructor": false, "invocations": ["getAttributeValueWithDefault", "equals"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}