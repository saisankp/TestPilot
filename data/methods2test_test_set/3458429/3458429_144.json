{"test_class": {"identifier": "QuoteUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/websocket/common/utils/QuoteUtilTest.java"}, "test_case": {"identifier": "testQuoteIfNeeded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQuoteIfNeeded() {\n        StringBuilder buf = new StringBuilder();\n        QuoteUtil.quoteIfNeeded(buf, \"key\", \",\");\n        assertEquals(\"key\", buf.toString());\n    }", "signature": "void testQuoteIfNeeded()", "full_signature": "@Test public void testQuoteIfNeeded()", "class_method_signature": "QuoteUtilTest.testQuoteIfNeeded()", "testcase": true, "constructor": false, "invocations": ["quoteIfNeeded", "assertEquals", "toString"]}, "focal_class": {"identifier": "QuoteUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ABNF_REQUIRED_QUOTING = \"\\\"'\\\\\\n\\r\\t\\f\\b%+ ;=\";", "modifier": "public static final", "type": "String", "declarator": "ABNF_REQUIRED_QUOTING = \"\\\"'\\\\\\n\\r\\t\\f\\b%+ ;=\"", "var_name": "ABNF_REQUIRED_QUOTING"}, {"original_string": "private static final char UNICODE_TAG = 0xFFFF;", "modifier": "private static final", "type": "char", "declarator": "UNICODE_TAG = 0xFFFF", "var_name": "UNICODE_TAG"}, {"original_string": "private static final char[] escapes = new char[32];", "modifier": "private static final", "type": "char[]", "declarator": "escapes = new char[32]", "var_name": "escapes"}], "methods": [{"identifier": "dehex", "parameters": "(byte b)", "modifiers": "private static", "return": "int", "signature": "int dehex(byte b)", "full_signature": "private static int dehex(byte b)", "class_method_signature": "QuoteUtil.dehex(byte b)", "testcase": false, "constructor": false}, {"identifier": "dequote", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String dequote(String str)", "full_signature": "public static String dequote(String str)", "class_method_signature": "QuoteUtil.dequote(String str)", "testcase": false, "constructor": false}, {"identifier": "escape", "parameters": "(StringBuilder buf, String str)", "modifiers": "public static", "return": "void", "signature": "void escape(StringBuilder buf, String str)", "full_signature": "public static void escape(StringBuilder buf, String str)", "class_method_signature": "QuoteUtil.escape(StringBuilder buf, String str)", "testcase": false, "constructor": false}, {"identifier": "quote", "parameters": "(StringBuilder buf, String str)", "modifiers": "public static", "return": "void", "signature": "void quote(StringBuilder buf, String str)", "full_signature": "public static void quote(StringBuilder buf, String str)", "class_method_signature": "QuoteUtil.quote(StringBuilder buf, String str)", "testcase": false, "constructor": false}, {"identifier": "quoteIfNeeded", "parameters": "(StringBuilder buf, String str, String delim)", "modifiers": "public static", "return": "void", "signature": "void quoteIfNeeded(StringBuilder buf, String str, String delim)", "full_signature": "public static void quoteIfNeeded(StringBuilder buf, String str, String delim)", "class_method_signature": "QuoteUtil.quoteIfNeeded(StringBuilder buf, String str, String delim)", "testcase": false, "constructor": false}, {"identifier": "splitAt", "parameters": "(String str, String delims)", "modifiers": "public static", "return": "Iterator<String>", "signature": "Iterator<String> splitAt(String str, String delims)", "full_signature": "public static Iterator<String> splitAt(String str, String delims)", "class_method_signature": "QuoteUtil.splitAt(String str, String delims)", "testcase": false, "constructor": false}, {"identifier": "unescape", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String unescape(String str)", "full_signature": "public static String unescape(String str)", "class_method_signature": "QuoteUtil.unescape(String str)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Object[] objs, String delim)", "modifiers": "public static", "return": "String", "signature": "String join(Object[] objs, String delim)", "full_signature": "public static String join(Object[] objs, String delim)", "class_method_signature": "QuoteUtil.join(Object[] objs, String delim)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Collection<?> objs, String delim)", "modifiers": "public static", "return": "String", "signature": "String join(Collection<?> objs, String delim)", "full_signature": "public static String join(Collection<?> objs, String delim)", "class_method_signature": "QuoteUtil.join(Collection<?> objs, String delim)", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/websocket/common/utils/QuoteUtil.java"}, "focal_method": {"identifier": "quoteIfNeeded", "parameters": "(StringBuilder buf, String str, String delim)", "modifiers": "public static", "return": "void", "body": "public static void quoteIfNeeded(StringBuilder buf, String str, String delim) {\n        if (str == null) {\n            return;\n        }\n        // check for delimiters in input string\n        int len = str.length();\n        if (len == 0) {\n            return;\n        }\n        int ch;\n        for (int i = 0; i < len; i++) {\n            ch = str.codePointAt(i);\n            if (delim.indexOf(ch) >= 0) {\n                // found a delimiter codepoint. we need to quote it.\n                quote(buf, str);\n                return;\n            }\n        }\n\n        // no special delimiters used, no quote needed.\n        buf.append(str);\n    }", "signature": "void quoteIfNeeded(StringBuilder buf, String str, String delim)", "full_signature": "public static void quoteIfNeeded(StringBuilder buf, String str, String delim)", "class_method_signature": "QuoteUtil.quoteIfNeeded(StringBuilder buf, String str, String delim)", "testcase": false, "constructor": false, "invocations": ["length", "codePointAt", "indexOf", "quote", "append"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}