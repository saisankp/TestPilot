{"test_class": {"identifier": "EightQueensTest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2015/2015-04-16-EightQueens-Java/src/test/java/game/EightQueensTest.java"}, "test_case": {"identifier": "it_generates_a_solution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void\n    it_generates_a_solution() {\n       System.out.print(EightQueens.findSolution(8).toString());\n\n    }", "signature": "void it_generates_a_solution()", "full_signature": "@Test public void it_generates_a_solution()", "class_method_signature": "EightQueensTest.it_generates_a_solution()", "testcase": true, "constructor": false, "invocations": ["print", "toString", "findSolution"]}, "focal_class": {"identifier": "EightQueens", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isSolution", "parameters": "(List<Position> board)", "modifiers": "static", "return": "boolean", "signature": "boolean isSolution(List<Position> board)", "full_signature": "static boolean isSolution(List<Position> board)", "class_method_signature": "EightQueens.isSolution(List<Position> board)", "testcase": false, "constructor": false}, {"identifier": "findSolution", "parameters": "(int boardSize)", "modifiers": "public static", "return": "List<Position>", "signature": "List<Position> findSolution(int boardSize)", "full_signature": "public static List<Position> findSolution(int boardSize)", "class_method_signature": "EightQueens.findSolution(int boardSize)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(int size)", "modifiers": "private static", "return": "List<Position>", "signature": "List<Position> generate(int size)", "full_signature": "private static List<Position> generate(int size)", "class_method_signature": "EightQueens.generate(int size)", "testcase": false, "constructor": false}], "file": "Paris/2015/2015-04-16-EightQueens-Java/src/main/java/game/EightQueens.java"}, "focal_method": {"identifier": "findSolution", "parameters": "(int boardSize)", "modifiers": "public static", "return": "List<Position>", "body": "public static List<Position> findSolution(int boardSize) {\n        List<Position> generated;\n        while (true) {\n            generated = generate(boardSize);\n            if (isSolution(generated))\n                return generated;\n        }\n    }", "signature": "List<Position> findSolution(int boardSize)", "full_signature": "public static List<Position> findSolution(int boardSize)", "class_method_signature": "EightQueens.findSolution(int boardSize)", "testcase": false, "constructor": false, "invocations": ["generate", "isSolution"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}