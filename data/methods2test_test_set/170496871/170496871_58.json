{"test_class": {"identifier": "DiagnosticProcessorTest", "superclass": "extends GridCommonAbstractTest", "interfaces": "", "fields": [{"original_string": "private static final String CACHE_NAME = \"cache0\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_NAME = \"cache0\"", "var_name": "CACHE_NAME"}, {"original_string": "private static final String TEST_DUMP_PAGE_FILE = \"testDumpPage\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DUMP_PAGE_FILE = \"testDumpPage\"", "var_name": "TEST_DUMP_PAGE_FILE"}, {"original_string": "private static DiagnosticProcessor diagnosticProcessor;", "modifier": "private static", "type": "DiagnosticProcessor", "declarator": "diagnosticProcessor", "var_name": "diagnosticProcessor"}, {"original_string": "private static T2<Integer, Long> expectedPageId;", "modifier": "private static", "type": "T2<Integer, Long>", "declarator": "expectedPageId", "var_name": "expectedPageId"}], "file": "modules/core/src/test/java/org/apache/ignite/internal/processors/diagnostic/DiagnosticProcessorTest.java"}, "test_case": {"identifier": "dumpPageHistoryToCustomAbsoluteDir", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void dumpPageHistoryToCustomAbsoluteDir() throws Exception {\n        Path path = Paths.get(U.defaultWorkDirectory(), TEST_DUMP_PAGE_FILE);\n        try {\n            diagnosticProcessor.dumpPageHistory(new PageHistoryDiagnoster.DiagnosticPageBuilder()\n                .pageIds(expectedPageId)\n                .folderForDump(path.toFile())\n                .addAction(PRINT_TO_FILE)\n            );\n\n            File dumpFile = path.toFile().listFiles((dir, name) -> name.endsWith(FILE_FORMAT))[0];\n\n            List<String> records = Files.readAllLines(dumpFile.toPath());\n\n            assertTrue(!records.isEmpty());\n\n            assertTrue(records.stream().anyMatch(line -> line.contains(\"CheckpointRecord\")));\n        }\n        finally {\n            U.delete(U.resolveWorkDirectory(U.defaultWorkDirectory(), TEST_DUMP_PAGE_FILE, false));\n        }\n    }", "signature": "void dumpPageHistoryToCustomAbsoluteDir()", "full_signature": "@Test public void dumpPageHistoryToCustomAbsoluteDir()", "class_method_signature": "DiagnosticProcessorTest.dumpPageHistoryToCustomAbsoluteDir()", "testcase": true, "constructor": false, "invocations": ["get", "defaultWorkDirectory", "dumpPageHistory", "addAction", "folderForDump", "pageIds", "toFile", "listFiles", "toFile", "endsWith", "readAllLines", "toPath", "assertTrue", "isEmpty", "assertTrue", "anyMatch", "stream", "contains", "delete", "resolveWorkDirectory", "defaultWorkDirectory"]}, "focal_class": {"identifier": "DiagnosticProcessor", "superclass": "extends GridProcessorAdapter", "interfaces": "", "fields": [{"original_string": "private static final boolean IGNITE_DUMP_PAGE_LOCK_ON_FAILURE =\n        IgniteSystemProperties.getBoolean(IgniteSystemProperties.IGNITE_DUMP_PAGE_LOCK_ON_FAILURE, true);", "modifier": "private static final", "type": "boolean", "declarator": "IGNITE_DUMP_PAGE_LOCK_ON_FAILURE =\n        IgniteSystemProperties.getBoolean(IgniteSystemProperties.IGNITE_DUMP_PAGE_LOCK_ON_FAILURE, true)", "var_name": "IGNITE_DUMP_PAGE_LOCK_ON_FAILURE"}, {"original_string": "private static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH-mm-ss_SSS\");", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "TIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH-mm-ss_SSS\")", "var_name": "TIME_FORMATTER"}, {"original_string": "public static final String DEFAULT_TARGET_FOLDER = \"diagnostic\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_TARGET_FOLDER = \"diagnostic\"", "var_name": "DEFAULT_TARGET_FOLDER"}, {"original_string": "static final String FILE_FORMAT = \".txt\";", "modifier": "static final", "type": "String", "declarator": "FILE_FORMAT = \".txt\"", "var_name": "FILE_FORMAT"}, {"original_string": "static final String RAW_FILE_FORMAT = \".raw\";", "modifier": "static final", "type": "String", "declarator": "RAW_FILE_FORMAT = \".raw\"", "var_name": "RAW_FILE_FORMAT"}, {"original_string": "private final Path diagnosticPath;", "modifier": "private final", "type": "Path", "declarator": "diagnosticPath", "var_name": "diagnosticPath"}, {"original_string": "private final PageHistoryDiagnoster pageHistoryDiagnoster;", "modifier": "private final", "type": "PageHistoryDiagnoster", "declarator": "pageHistoryDiagnoster", "var_name": "pageHistoryDiagnoster"}, {"original_string": "private final ReconciliationExecutionContext reconciliationExecutionContext;", "modifier": "private final", "type": "ReconciliationExecutionContext", "declarator": "reconciliationExecutionContext", "var_name": "reconciliationExecutionContext"}], "methods": [{"identifier": "DiagnosticProcessor", "parameters": "(GridKernalContext ctx)", "modifiers": "public", "return": "", "signature": " DiagnosticProcessor(GridKernalContext ctx)", "full_signature": "public  DiagnosticProcessor(GridKernalContext ctx)", "class_method_signature": "DiagnosticProcessor.DiagnosticProcessor(GridKernalContext ctx)", "testcase": false, "constructor": true}, {"identifier": "onKernalStart", "parameters": "(boolean active)", "modifiers": "@Override public", "return": "void", "signature": "void onKernalStart(boolean active)", "full_signature": "@Override public void onKernalStart(boolean active)", "class_method_signature": "DiagnosticProcessor.onKernalStart(boolean active)", "testcase": false, "constructor": false}, {"identifier": "dumpPageHistory", "parameters": "(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "modifiers": "public", "return": "void", "signature": "void dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "full_signature": "public void dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "class_method_signature": "DiagnosticProcessor.dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "testcase": false, "constructor": false}, {"identifier": "onFailure", "parameters": "(Ignite ignite, FailureContext failureCtx)", "modifiers": "public", "return": "void", "signature": "void onFailure(Ignite ignite, FailureContext failureCtx)", "full_signature": "public void onFailure(Ignite ignite, FailureContext failureCtx)", "class_method_signature": "DiagnosticProcessor.onFailure(Ignite ignite, FailureContext failureCtx)", "testcase": false, "constructor": false}, {"identifier": "reconciliationExecutionContext", "parameters": "()", "modifiers": "public", "return": "ReconciliationExecutionContext", "signature": "ReconciliationExecutionContext reconciliationExecutionContext()", "full_signature": "public ReconciliationExecutionContext reconciliationExecutionContext()", "class_method_signature": "DiagnosticProcessor.reconciliationExecutionContext()", "testcase": false, "constructor": false}, {"identifier": "diagnosticFile", "parameters": "(File customFile, DiagnosticFileWriteMode writeMode)", "modifiers": "private", "return": "File", "signature": "File diagnosticFile(File customFile, DiagnosticFileWriteMode writeMode)", "full_signature": "private File diagnosticFile(File customFile, DiagnosticFileWriteMode writeMode)", "class_method_signature": "DiagnosticProcessor.diagnosticFile(File customFile, DiagnosticFileWriteMode writeMode)", "testcase": false, "constructor": false}, {"identifier": "finalizeFile", "parameters": "(Path diagnosticPath, DiagnosticFileWriteMode writeMode)", "modifiers": "private static", "return": "File", "signature": "File finalizeFile(Path diagnosticPath, DiagnosticFileWriteMode writeMode)", "full_signature": "private static File finalizeFile(Path diagnosticPath, DiagnosticFileWriteMode writeMode)", "class_method_signature": "DiagnosticProcessor.finalizeFile(Path diagnosticPath, DiagnosticFileWriteMode writeMode)", "testcase": false, "constructor": false}, {"identifier": "getFileExtension", "parameters": "(DiagnosticFileWriteMode writeMode)", "modifiers": "private static", "return": "String", "signature": "String getFileExtension(DiagnosticFileWriteMode writeMode)", "full_signature": "private static String getFileExtension(DiagnosticFileWriteMode writeMode)", "class_method_signature": "DiagnosticProcessor.getFileExtension(DiagnosticFileWriteMode writeMode)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/processors/diagnostic/DiagnosticProcessor.java"}, "focal_method": {"identifier": "dumpPageHistory", "parameters": "(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "modifiers": "public", "return": "void", "body": "public void dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    ) throws IgniteCheckedException {\n        logTime(log, \"DiagnosticPageHistory\", () -> pageHistoryDiagnoster.dumpPageHistory(builder));\n    }", "signature": "void dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "full_signature": "public void dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "class_method_signature": "DiagnosticProcessor.dumpPageHistory(\n        @NotNull PageHistoryDiagnoster.DiagnosticPageBuilder builder\n    )", "testcase": false, "constructor": false, "invocations": ["logTime", "dumpPageHistory"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}