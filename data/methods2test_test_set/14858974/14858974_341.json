{"test_class": {"identifier": "CommentHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/core/CommentHandlerTest.java"}, "test_case": {"identifier": "getComments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getComments() throws Exception {\n\n        final String entityId = \"com.axway.test:1.0.0::jar\";\n        final String entityType = \"DbArtifact\";\n        DbComment dbComment = new DbComment();\n        dbComment.setEntityId(entityId);\n        dbComment.setEntityType(entityType);\n        dbComment.setDbCommentText(\"test comment\");\n        dbComment.setDbCommentedBy(\"testUser\");\n        dbComment.setDbCreatedDateTime(new Date());\n\n        DbComment dbCommentSecond = new DbComment();\n        dbCommentSecond.setEntityId(entityId);\n        dbCommentSecond.setEntityType(entityType);\n        dbCommentSecond.setDbCommentText(\"test comment second\");\n        dbCommentSecond.setDbCommentedBy(\"testUser\");\n        dbCommentSecond.setDbCreatedDateTime(new Date());\n\n        final RepositoryHandler repo = mock(RepositoryHandler.class);\n        final CommentHandler commentHandler = new CommentHandler(repo);\n        commentHandler.store(dbComment);\n        commentHandler.store(dbCommentSecond);\n\n        List<DbComment> commentList = new ArrayList<>();\n        commentList.add(dbComment);\n        commentList.add(dbCommentSecond);\n\n        when(repo.getComments(entityId, entityType)).thenReturn(commentList);\n\n        assertEquals(repo.getComments(entityId, entityType), commentList);\n    }", "signature": "void getComments()", "full_signature": "@Test public void getComments()", "class_method_signature": "CommentHandlerTest.getComments()", "testcase": true, "constructor": false, "invocations": ["setEntityId", "setEntityType", "setDbCommentText", "setDbCommentedBy", "setDbCreatedDateTime", "setEntityId", "setEntityType", "setDbCommentText", "setDbCommentedBy", "setDbCreatedDateTime", "mock", "store", "store", "add", "add", "thenReturn", "when", "getComments", "assertEquals", "getComments"]}, "focal_class": {"identifier": "CommentHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "methods": [{"identifier": "CommentHandler", "parameters": "(final RepositoryHandler repositoryHandler)", "modifiers": "public", "return": "", "signature": " CommentHandler(final RepositoryHandler repositoryHandler)", "full_signature": "public  CommentHandler(final RepositoryHandler repositoryHandler)", "class_method_signature": "CommentHandler.CommentHandler(final RepositoryHandler repositoryHandler)", "testcase": false, "constructor": true}, {"identifier": "store", "parameters": "(DbComment comment)", "modifiers": "public", "return": "void", "signature": "void store(DbComment comment)", "full_signature": "public void store(DbComment comment)", "class_method_signature": "CommentHandler.store(DbComment comment)", "testcase": false, "constructor": false}, {"identifier": "getComments", "parameters": "(String entityId, String entityType)", "modifiers": "public", "return": "List<DbComment>", "signature": "List<DbComment> getComments(String entityId, String entityType)", "full_signature": "public List<DbComment> getComments(String entityId, String entityType)", "class_method_signature": "CommentHandler.getComments(String entityId, String entityType)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(String gavc,\n                      String action,\n                      String commentText,\n                      DbCredential credential,\n                      String entityType)", "modifiers": "public", "return": "void", "signature": "void store(String gavc,\n                      String action,\n                      String commentText,\n                      DbCredential credential,\n                      String entityType)", "full_signature": "public void store(String gavc,\n                      String action,\n                      String commentText,\n                      DbCredential credential,\n                      String entityType)", "class_method_signature": "CommentHandler.store(String gavc,\n                      String action,\n                      String commentText,\n                      DbCredential credential,\n                      String entityType)", "testcase": false, "constructor": false}, {"identifier": "getLatestComment", "parameters": "(String entityId, String entityType)", "modifiers": "public", "return": "DbComment", "signature": "DbComment getLatestComment(String entityId, String entityType)", "full_signature": "public DbComment getLatestComment(String entityId, String entityType)", "class_method_signature": "CommentHandler.getLatestComment(String entityId, String entityType)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/core/CommentHandler.java"}, "focal_method": {"identifier": "getComments", "parameters": "(String entityId, String entityType)", "modifiers": "public", "return": "List<DbComment>", "body": "public List<DbComment> getComments(String entityId, String entityType) {\n        return repositoryHandler.getComments(entityId, entityType);\n    }", "signature": "List<DbComment> getComments(String entityId, String entityType)", "full_signature": "public List<DbComment> getComments(String entityId, String entityType)", "class_method_signature": "CommentHandler.getComments(String entityId, String entityType)", "testcase": false, "constructor": false, "invocations": ["getComments"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}