{"test_class": {"identifier": "DemoPluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DemoPlugin plugin = new DemoPlugin();", "modifier": "", "type": "DemoPlugin", "declarator": "plugin = new DemoPlugin()", "var_name": "plugin"}, {"original_string": "private Map<String, String> properties;", "modifier": "private", "type": "Map<String, String>", "declarator": "properties", "var_name": "properties"}], "file": "component/core/src/test/java/fr/norad/visuwall/plugin/demo/DemoPluginTest.java"}, "test_case": {"identifier": "should_get_null_for_invalid_url", "parameters": "()", "modifiers": "@Test(expected = SoftwareNotFoundException.class) public", "return": "void", "body": "@Test(expected = SoftwareNotFoundException.class)\n    public void should_get_null_for_invalid_url() throws Exception {\n        assertNull(plugin.getSoftwareId(new URL(\"http://something.else\"), properties));\n    }", "signature": "void should_get_null_for_invalid_url()", "full_signature": "@Test(expected = SoftwareNotFoundException.class) public void should_get_null_for_invalid_url()", "class_method_signature": "DemoPluginTest.should_get_null_for_invalid_url()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getSoftwareId"]}, "focal_class": {"identifier": "DemoPlugin", "superclass": "", "interfaces": "implements VisuwallPlugin<DemoConnection>", "fields": [{"original_string": "private static final String DEMO_VISUWALL_CI = \"http://demo.visuwall.ci\";", "modifier": "private static final", "type": "String", "declarator": "DEMO_VISUWALL_CI = \"http://demo.visuwall.ci\"", "var_name": "DEMO_VISUWALL_CI"}], "methods": [{"identifier": "getConnection", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "DemoConnection", "signature": "DemoConnection getConnection(URL url, Map<String, String> properties)", "full_signature": "@Override public DemoConnection getConnection(URL url, Map<String, String> properties)", "class_method_signature": "DemoPlugin.getConnection(URL url, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getPropertiesWithDefaultValue", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getPropertiesWithDefaultValue()", "full_signature": "@Override public Map<String, String> getPropertiesWithDefaultValue()", "class_method_signature": "DemoPlugin.getPropertiesWithDefaultValue()", "testcase": false, "constructor": false}, {"identifier": "getConnectionClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<DemoConnection>", "signature": "Class<DemoConnection> getConnectionClass()", "full_signature": "@Override public Class<DemoConnection> getConnectionClass()", "class_method_signature": "DemoPlugin.getConnectionClass()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getVersion()", "full_signature": "@Override public float getVersion()", "class_method_signature": "DemoPlugin.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DemoPlugin.getName()", "testcase": false, "constructor": false}, {"identifier": "getSoftwareId", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "SoftwareId", "signature": "SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "full_signature": "@Override public SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "class_method_signature": "DemoPlugin.getSoftwareId(URL url, Map<String, String> properties)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/plugin/demo/DemoPlugin.java"}, "focal_method": {"identifier": "getSoftwareId", "parameters": "(URL url, Map<String, String> properties)", "modifiers": "@Override public", "return": "SoftwareId", "body": "@Override\n    public SoftwareId getSoftwareId(URL url, Map<String, String> properties) throws SoftwareNotFoundException {\n        if (url == null || !DEMO_VISUWALL_CI.equals(url.toString())) {\n            throw new SoftwareNotFoundException(getName() + \" is not compatible with url : \" + url);\n        }\n        SoftwareId softwareId = new SoftwareId();\n        softwareId.setName(\"demo\");\n        softwareId.setCompatible(true);\n        softwareId.setVersion(\"1.0\");\n        softwareId.setWarnings(\"This is a demo plugin\");\n        return softwareId;\n    }", "signature": "SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "full_signature": "@Override public SoftwareId getSoftwareId(URL url, Map<String, String> properties)", "class_method_signature": "DemoPlugin.getSoftwareId(URL url, Map<String, String> properties)", "testcase": false, "constructor": false, "invocations": ["equals", "toString", "getName", "setName", "setCompatible", "setVersion", "setWarnings"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}