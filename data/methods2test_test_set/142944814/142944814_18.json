{"test_class": {"identifier": "QueryApiImplTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "client/wallet/src/test/java/hera/wallet/QueryApiImplTest.java"}, "test_case": {"identifier": "testGetAccountState", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAccountState() {\n    // given\n    final AccountOperation mockOperation = mock(AccountOperation.class);\n    when(mockOperation.getState(any(AccountAddress.class)))\n        .thenReturn(AccountState.newBuilder().build());\n    final AergoClient mockClient = mock(AergoClient.class);\n    when(mockClient.getAccountOperation()).thenReturn(mockOperation);\n    final ClientProvider mockClientProvider = mock(ClientProvider.class);\n    when(mockClientProvider.getClient()).thenReturn(mockClient);\n\n    // then\n    final QueryApi queryApi = new QueryApiImpl(mockClientProvider);\n    final AccountState accountState = queryApi.getAccountState(anyAccountAddress);\n    assertNotNull(accountState);\n  }", "signature": "void testGetAccountState()", "full_signature": "@Test public void testGetAccountState()", "class_method_signature": "QueryApiImplTest.testGetAccountState()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getState", "any", "build", "newBuilder", "mock", "thenReturn", "when", "getAccountOperation", "mock", "thenReturn", "when", "getClient", "getAccountState", "assertNotNull"]}, "focal_class": {"identifier": "QueryApiImpl", "superclass": "extends AbstractApi", "interfaces": "implements QueryApi", "fields": [{"original_string": "@NonNull\n  protected final ClientProvider clientProvider;", "modifier": "@NonNull\n  protected final", "type": "ClientProvider", "declarator": "clientProvider", "var_name": "clientProvider"}], "methods": [{"identifier": "getAccountState", "parameters": "(final AccountAddress accountAddress)", "modifiers": "@Override public", "return": "AccountState", "signature": "AccountState getAccountState(final AccountAddress accountAddress)", "full_signature": "@Override public AccountState getAccountState(final AccountAddress accountAddress)", "class_method_signature": "QueryApiImpl.getAccountState(final AccountAddress accountAddress)", "testcase": false, "constructor": false}, {"identifier": "getNameOwner", "parameters": "(final String name)", "modifiers": "@Override public", "return": "AccountAddress", "signature": "AccountAddress getNameOwner(final String name)", "full_signature": "@Override public AccountAddress getNameOwner(final String name)", "class_method_signature": "QueryApiImpl.getNameOwner(final String name)", "testcase": false, "constructor": false}, {"identifier": "getNameOwner", "parameters": "(final Name name)", "modifiers": "@Override public", "return": "AccountAddress", "signature": "AccountAddress getNameOwner(final Name name)", "full_signature": "@Override public AccountAddress getNameOwner(final Name name)", "class_method_signature": "QueryApiImpl.getNameOwner(final Name name)", "testcase": false, "constructor": false}, {"identifier": "getNameOwner", "parameters": "(final String name, final long blockNumber)", "modifiers": "@Override public", "return": "AccountAddress", "signature": "AccountAddress getNameOwner(final String name, final long blockNumber)", "full_signature": "@Override public AccountAddress getNameOwner(final String name, final long blockNumber)", "class_method_signature": "QueryApiImpl.getNameOwner(final String name, final long blockNumber)", "testcase": false, "constructor": false}, {"identifier": "getNameOwner", "parameters": "(final Name name, final long blockNumber)", "modifiers": "@Override public", "return": "AccountAddress", "signature": "AccountAddress getNameOwner(final Name name, final long blockNumber)", "full_signature": "@Override public AccountAddress getNameOwner(final Name name, final long blockNumber)", "class_method_signature": "QueryApiImpl.getNameOwner(final Name name, final long blockNumber)", "testcase": false, "constructor": false}, {"identifier": "getStakingInfo", "parameters": "(final AccountAddress accountAddress)", "modifiers": "@Override public", "return": "StakeInfo", "signature": "StakeInfo getStakingInfo(final AccountAddress accountAddress)", "full_signature": "@Override public StakeInfo getStakingInfo(final AccountAddress accountAddress)", "class_method_signature": "QueryApiImpl.getStakingInfo(final AccountAddress accountAddress)", "testcase": false, "constructor": false}, {"identifier": "getStakeInfo", "parameters": "(AccountAddress accountAddress)", "modifiers": "@Override public", "return": "StakeInfo", "signature": "StakeInfo getStakeInfo(AccountAddress accountAddress)", "full_signature": "@Override public StakeInfo getStakeInfo(AccountAddress accountAddress)", "class_method_signature": "QueryApiImpl.getStakeInfo(AccountAddress accountAddress)", "testcase": false, "constructor": false}, {"identifier": "listElectedBps", "parameters": "(final int showCount)", "modifiers": "@Override public", "return": "List<ElectedCandidate>", "signature": "List<ElectedCandidate> listElectedBps(final int showCount)", "full_signature": "@Override public List<ElectedCandidate> listElectedBps(final int showCount)", "class_method_signature": "QueryApiImpl.listElectedBps(final int showCount)", "testcase": false, "constructor": false}, {"identifier": "listElected", "parameters": "(final String voteId, final int showCount)", "modifiers": "@Override public", "return": "List<ElectedCandidate>", "signature": "List<ElectedCandidate> listElected(final String voteId, final int showCount)", "full_signature": "@Override public List<ElectedCandidate> listElected(final String voteId, final int showCount)", "class_method_signature": "QueryApiImpl.listElected(final String voteId, final int showCount)", "testcase": false, "constructor": false}, {"identifier": "getVotesOf", "parameters": "(final AccountAddress accountAddress)", "modifiers": "@Override public", "return": "AccountTotalVote", "signature": "AccountTotalVote getVotesOf(final AccountAddress accountAddress)", "full_signature": "@Override public AccountTotalVote getVotesOf(final AccountAddress accountAddress)", "class_method_signature": "QueryApiImpl.getVotesOf(final AccountAddress accountAddress)", "testcase": false, "constructor": false}, {"identifier": "getBestBlockHash", "parameters": "()", "modifiers": "@Override public", "return": "BlockHash", "signature": "BlockHash getBestBlockHash()", "full_signature": "@Override public BlockHash getBestBlockHash()", "class_method_signature": "QueryApiImpl.getBestBlockHash()", "testcase": false, "constructor": false}, {"identifier": "getBestBlockHeight", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getBestBlockHeight()", "full_signature": "@Override public long getBestBlockHeight()", "class_method_signature": "QueryApiImpl.getBestBlockHeight()", "testcase": false, "constructor": false}, {"identifier": "getChainIdHash", "parameters": "()", "modifiers": "@Override public", "return": "ChainIdHash", "signature": "ChainIdHash getChainIdHash()", "full_signature": "@Override public ChainIdHash getChainIdHash()", "class_method_signature": "QueryApiImpl.getChainIdHash()", "testcase": false, "constructor": false}, {"identifier": "getBlockchainStatus", "parameters": "()", "modifiers": "@Override public", "return": "BlockchainStatus", "signature": "BlockchainStatus getBlockchainStatus()", "full_signature": "@Override public BlockchainStatus getBlockchainStatus()", "class_method_signature": "QueryApiImpl.getBlockchainStatus()", "testcase": false, "constructor": false}, {"identifier": "getChainInfo", "parameters": "()", "modifiers": "@Override public", "return": "ChainInfo", "signature": "ChainInfo getChainInfo()", "full_signature": "@Override public ChainInfo getChainInfo()", "class_method_signature": "QueryApiImpl.getChainInfo()", "testcase": false, "constructor": false}, {"identifier": "getChainStats", "parameters": "()", "modifiers": "@Override public", "return": "ChainStats", "signature": "ChainStats getChainStats()", "full_signature": "@Override public ChainStats getChainStats()", "class_method_signature": "QueryApiImpl.getChainStats()", "testcase": false, "constructor": false}, {"identifier": "listPeers", "parameters": "()", "modifiers": "@Override public", "return": "List<Peer>", "signature": "List<Peer> listPeers()", "full_signature": "@Override public List<Peer> listPeers()", "class_method_signature": "QueryApiImpl.listPeers()", "testcase": false, "constructor": false}, {"identifier": "listPeers", "parameters": "(final boolean showHidden, final boolean showSelf)", "modifiers": "@Override public", "return": "List<Peer>", "signature": "List<Peer> listPeers(final boolean showHidden, final boolean showSelf)", "full_signature": "@Override public List<Peer> listPeers(final boolean showHidden, final boolean showSelf)", "class_method_signature": "QueryApiImpl.listPeers(final boolean showHidden, final boolean showSelf)", "testcase": false, "constructor": false}, {"identifier": "listPeerMetrics", "parameters": "()", "modifiers": "@Override public", "return": "List<PeerMetric>", "signature": "List<PeerMetric> listPeerMetrics()", "full_signature": "@Override public List<PeerMetric> listPeerMetrics()", "class_method_signature": "QueryApiImpl.listPeerMetrics()", "testcase": false, "constructor": false}, {"identifier": "getServerInfo", "parameters": "(final List<String> categories)", "modifiers": "@Override public", "return": "ServerInfo", "signature": "ServerInfo getServerInfo(final List<String> categories)", "full_signature": "@Override public ServerInfo getServerInfo(final List<String> categories)", "class_method_signature": "QueryApiImpl.getServerInfo(final List<String> categories)", "testcase": false, "constructor": false}, {"identifier": "getNodeStatus", "parameters": "()", "modifiers": "@Override public", "return": "NodeStatus", "signature": "NodeStatus getNodeStatus()", "full_signature": "@Override public NodeStatus getNodeStatus()", "class_method_signature": "QueryApiImpl.getNodeStatus()", "testcase": false, "constructor": false}, {"identifier": "getBlockMetadata", "parameters": "(final BlockHash blockHash)", "modifiers": "@Override public", "return": "BlockMetadata", "signature": "BlockMetadata getBlockMetadata(final BlockHash blockHash)", "full_signature": "@Override public BlockMetadata getBlockMetadata(final BlockHash blockHash)", "class_method_signature": "QueryApiImpl.getBlockMetadata(final BlockHash blockHash)", "testcase": false, "constructor": false}, {"identifier": "getBlockMetadata", "parameters": "(final long height)", "modifiers": "@Override public", "return": "BlockMetadata", "signature": "BlockMetadata getBlockMetadata(final long height)", "full_signature": "@Override public BlockMetadata getBlockMetadata(final long height)", "class_method_signature": "QueryApiImpl.getBlockMetadata(final long height)", "testcase": false, "constructor": false}, {"identifier": "listBlockMetadatas", "parameters": "(final BlockHash blockHash, final int size)", "modifiers": "@Override public", "return": "List<BlockMetadata>", "signature": "List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "full_signature": "@Override public List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "class_method_signature": "QueryApiImpl.listBlockMetadatas(final BlockHash blockHash, final int size)", "testcase": false, "constructor": false}, {"identifier": "listBlockMetadatas", "parameters": "(final long height, final int size)", "modifiers": "@Override public", "return": "List<BlockMetadata>", "signature": "List<BlockMetadata> listBlockMetadatas(final long height, final int size)", "full_signature": "@Override public List<BlockMetadata> listBlockMetadatas(final long height, final int size)", "class_method_signature": "QueryApiImpl.listBlockMetadatas(final long height, final int size)", "testcase": false, "constructor": false}, {"identifier": "getBlock", "parameters": "(final BlockHash blockHash)", "modifiers": "@Override public", "return": "Block", "signature": "Block getBlock(final BlockHash blockHash)", "full_signature": "@Override public Block getBlock(final BlockHash blockHash)", "class_method_signature": "QueryApiImpl.getBlock(final BlockHash blockHash)", "testcase": false, "constructor": false}, {"identifier": "getBlock", "parameters": "(final long height)", "modifiers": "@Override public", "return": "Block", "signature": "Block getBlock(final long height)", "full_signature": "@Override public Block getBlock(final long height)", "class_method_signature": "QueryApiImpl.getBlock(final long height)", "testcase": false, "constructor": false}, {"identifier": "subscribeNewBlockMetadata", "parameters": "(\n      final StreamObserver<BlockMetadata> observer)", "modifiers": "@Override public", "return": "Subscription<BlockMetadata>", "signature": "Subscription<BlockMetadata> subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "full_signature": "@Override public Subscription<BlockMetadata> subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "class_method_signature": "QueryApiImpl.subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeNewBlock", "parameters": "(final StreamObserver<Block> observer)", "modifiers": "@Override public", "return": "Subscription<Block>", "signature": "Subscription<Block> subscribeNewBlock(final StreamObserver<Block> observer)", "full_signature": "@Override public Subscription<Block> subscribeNewBlock(final StreamObserver<Block> observer)", "class_method_signature": "QueryApiImpl.subscribeNewBlock(final StreamObserver<Block> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeBlockMetadata", "parameters": "(\n      final StreamObserver<BlockMetadata> observer)", "modifiers": "@Override public", "return": "Subscription<BlockMetadata>", "signature": "Subscription<BlockMetadata> subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "full_signature": "@Override public Subscription<BlockMetadata> subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "class_method_signature": "QueryApiImpl.subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeBlock", "parameters": "(final StreamObserver<Block> observer)", "modifiers": "@Override public", "return": "Subscription<Block>", "signature": "Subscription<Block> subscribeBlock(final StreamObserver<Block> observer)", "full_signature": "@Override public Subscription<Block> subscribeBlock(final StreamObserver<Block> observer)", "class_method_signature": "QueryApiImpl.subscribeBlock(final StreamObserver<Block> observer)", "testcase": false, "constructor": false}, {"identifier": "getTransaction", "parameters": "(final TxHash txHash)", "modifiers": "@Override public", "return": "Transaction", "signature": "Transaction getTransaction(final TxHash txHash)", "full_signature": "@Override public Transaction getTransaction(final TxHash txHash)", "class_method_signature": "QueryApiImpl.getTransaction(final TxHash txHash)", "testcase": false, "constructor": false}, {"identifier": "getTxReceipt", "parameters": "(final TxHash txHash)", "modifiers": "@Override public", "return": "TxReceipt", "signature": "TxReceipt getTxReceipt(final TxHash txHash)", "full_signature": "@Override public TxReceipt getTxReceipt(final TxHash txHash)", "class_method_signature": "QueryApiImpl.getTxReceipt(final TxHash txHash)", "testcase": false, "constructor": false}, {"identifier": "getContractTxReceipt", "parameters": "(final TxHash contractTxHash)", "modifiers": "@Override public", "return": "ContractTxReceipt", "signature": "ContractTxReceipt getContractTxReceipt(final TxHash contractTxHash)", "full_signature": "@Override public ContractTxReceipt getContractTxReceipt(final TxHash contractTxHash)", "class_method_signature": "QueryApiImpl.getContractTxReceipt(final TxHash contractTxHash)", "testcase": false, "constructor": false}, {"identifier": "getContractInterface", "parameters": "(final ContractAddress contractAddress)", "modifiers": "@Override public", "return": "ContractInterface", "signature": "ContractInterface getContractInterface(final ContractAddress contractAddress)", "full_signature": "@Override public ContractInterface getContractInterface(final ContractAddress contractAddress)", "class_method_signature": "QueryApiImpl.getContractInterface(final ContractAddress contractAddress)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(final ContractInvocation contractInvocation)", "modifiers": "@Override public", "return": "ContractResult", "signature": "ContractResult query(final ContractInvocation contractInvocation)", "full_signature": "@Override public ContractResult query(final ContractInvocation contractInvocation)", "class_method_signature": "QueryApiImpl.query(final ContractInvocation contractInvocation)", "testcase": false, "constructor": false}, {"identifier": "queryContract", "parameters": "(ContractInvocation contractInvocation)", "modifiers": "@Override public", "return": "ContractResult", "signature": "ContractResult queryContract(ContractInvocation contractInvocation)", "full_signature": "@Override public ContractResult queryContract(ContractInvocation contractInvocation)", "class_method_signature": "QueryApiImpl.queryContract(ContractInvocation contractInvocation)", "testcase": false, "constructor": false}, {"identifier": "listEvents", "parameters": "(final EventFilter filter)", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> listEvents(final EventFilter filter)", "full_signature": "@Override public List<Event> listEvents(final EventFilter filter)", "class_method_signature": "QueryApiImpl.listEvents(final EventFilter filter)", "testcase": false, "constructor": false}, {"identifier": "subscribeEvent", "parameters": "(final EventFilter filter,\n      final StreamObserver<Event> observer)", "modifiers": "@Override public", "return": "Subscription<Event>", "signature": "Subscription<Event> subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "full_signature": "@Override public Subscription<Event> subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "class_method_signature": "QueryApiImpl.subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "protected", "return": "AergoClient", "signature": "AergoClient getClient()", "full_signature": "protected AergoClient getClient()", "class_method_signature": "QueryApiImpl.getClient()", "testcase": false, "constructor": false}], "file": "client/wallet/src/main/java/hera/wallet/QueryApiImpl.java"}, "focal_method": {"identifier": "getAccountState", "parameters": "(final AccountAddress accountAddress)", "modifiers": "@Override public", "return": "AccountState", "body": "@Override\n  public AccountState getAccountState(final AccountAddress accountAddress) {\n    try {\n      return getClient().getAccountOperation().getState(accountAddress);\n    } catch (Exception e) {\n      throw converter.convert(e);\n    }\n  }", "signature": "AccountState getAccountState(final AccountAddress accountAddress)", "full_signature": "@Override public AccountState getAccountState(final AccountAddress accountAddress)", "class_method_signature": "QueryApiImpl.getAccountState(final AccountAddress accountAddress)", "testcase": false, "constructor": false, "invocations": ["getState", "getAccountOperation", "getClient", "convert"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}