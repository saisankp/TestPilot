{"test_class": {"identifier": "JobRuntimePredictionSelectorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JobDescriptor JOB_DESCRIPTOR = JobDescriptorGenerator.oneTaskBatchJobDescriptor();", "modifier": "private static final", "type": "JobDescriptor", "declarator": "JOB_DESCRIPTOR = JobDescriptorGenerator.oneTaskBatchJobDescriptor()", "var_name": "JOB_DESCRIPTOR"}, {"original_string": "private static final JobRuntimePredictions JOB_PREDICTIONS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.05, 5),\n                    new JobRuntimePrediction(0.25, 10),\n                    new JobRuntimePrediction(0.95, 20)\n            )));", "modifier": "private static final", "type": "JobRuntimePredictions", "declarator": "JOB_PREDICTIONS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.05, 5),\n                    new JobRuntimePrediction(0.25, 10),\n                    new JobRuntimePrediction(0.95, 20)\n            )))", "var_name": "JOB_PREDICTIONS"}, {"original_string": "private static final JobRuntimePredictions BAD_CONFIDENCE_LEVELS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.1, 5),\n                    new JobRuntimePrediction(0.5, 10),\n                    new JobRuntimePrediction(0.9, 20)\n            )));", "modifier": "private static final", "type": "JobRuntimePredictions", "declarator": "BAD_CONFIDENCE_LEVELS = new JobRuntimePredictions(\"v1\", \"m1\",\n            new TreeSet<>(Arrays.asList(\n                    new JobRuntimePrediction(0.1, 5),\n                    new JobRuntimePrediction(0.5, 10),\n                    new JobRuntimePrediction(0.9, 20)\n            )))", "var_name": "BAD_CONFIDENCE_LEVELS"}, {"original_string": "private static final Map<String, String> METADATA = Collections.singletonMap(\"key\", \"value\");", "modifier": "private static final", "type": "Map<String, String>", "declarator": "METADATA = Collections.singletonMap(\"key\", \"value\")", "var_name": "METADATA"}], "file": "titus-server-runtime/src/test/java/com/netflix/titus/runtime/endpoint/admission/JobRuntimePredictionSelectorsTest.java"}, "test_case": {"identifier": "testCustomQuantile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCustomQuantile() {\n        JobRuntimePredictionSelector selector = aboveThreshold(60, 10, 0.25, METADATA);\n        checkSelection(selector.apply(JOB_DESCRIPTOR, JOB_PREDICTIONS), 0.25);\n    }", "signature": "void testCustomQuantile()", "full_signature": "@Test public void testCustomQuantile()", "class_method_signature": "JobRuntimePredictionSelectorsTest.testCustomQuantile()", "testcase": true, "constructor": false, "invocations": ["aboveThreshold", "checkSelection", "apply"]}, "focal_class": {"identifier": "JobRuntimePredictionSelectors", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(JobRuntimePredictionSelectors.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JobRuntimePredictionSelectors.class)", "var_name": "logger"}, {"original_string": "private static final JobRuntimePredictionSelector NEVER_SELECTOR = (jobDescriptor, predictions) -> Optional.empty();", "modifier": "private static final", "type": "JobRuntimePredictionSelector", "declarator": "NEVER_SELECTOR = (jobDescriptor, predictions) -> Optional.empty()", "var_name": "NEVER_SELECTOR"}], "methods": [{"identifier": "JobRuntimePredictionSelectors", "parameters": "()", "modifiers": "private", "return": "", "signature": " JobRuntimePredictionSelectors()", "full_signature": "private  JobRuntimePredictionSelectors()", "class_method_signature": "JobRuntimePredictionSelectors.JobRuntimePredictionSelectors()", "testcase": false, "constructor": true}, {"identifier": "never", "parameters": "()", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector never()", "full_signature": "public static JobRuntimePredictionSelector never()", "class_method_signature": "JobRuntimePredictionSelectors.never()", "testcase": false, "constructor": false}, {"identifier": "best", "parameters": "()", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector best()", "full_signature": "public static JobRuntimePredictionSelector best()", "class_method_signature": "JobRuntimePredictionSelectors.best()", "testcase": false, "constructor": false}, {"identifier": "best", "parameters": "(Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector best(Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector best(Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.best(Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThreshold", "parameters": "(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThreshold", "parameters": "(Config config, Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector aboveThreshold(Config config, Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector aboveThreshold(Config config, Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThreshold(Config config, Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "aboveThresholds", "parameters": "(Config config, Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "Map<String, JobRuntimePredictionSelector>", "signature": "Map<String, JobRuntimePredictionSelector> aboveThresholds(Config config, Map<String, String> selectionMetadata)", "full_signature": "public static Map<String, JobRuntimePredictionSelector> aboveThresholds(Config config, Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThresholds(Config config, Map<String, String> selectionMetadata)", "testcase": false, "constructor": false}, {"identifier": "reloadedOnConfigurationUpdate", "parameters": "(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "modifiers": "public static", "return": "CloseableReference<JobRuntimePredictionSelector>", "signature": "CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "full_signature": "public static CloseableReference<JobRuntimePredictionSelector> reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "class_method_signature": "JobRuntimePredictionSelectors.reloadedOnConfigurationUpdate(Config config, Function<Config, JobRuntimePredictionSelector> factory)", "testcase": false, "constructor": false}, {"identifier": "abTestRandom", "parameters": "(Map<String, JobRuntimePredictionSelector> selectors)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "signature": "JobRuntimePredictionSelector abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "full_signature": "public static JobRuntimePredictionSelector abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "class_method_signature": "JobRuntimePredictionSelectors.abTestRandom(Map<String, JobRuntimePredictionSelector> selectors)", "testcase": false, "constructor": false}, {"identifier": "appendSelectorInfoIfMissing", "parameters": "(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "full_signature": "private static Map<String, String> appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "class_method_signature": "JobRuntimePredictionSelectors.appendSelectorInfoIfMissing(Map<String, String> selectionMetadata, Supplier<String> infoSupplier)", "testcase": false, "constructor": false}], "file": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/endpoint/admission/JobRuntimePredictionSelectors.java"}, "focal_method": {"identifier": "aboveThreshold", "parameters": "(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "modifiers": "public static", "return": "JobRuntimePredictionSelector", "body": "public static JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata) {\n        Map<String, String> allMetadata = appendSelectorInfoIfMissing(\n                selectionMetadata,\n                () -> String.format(\"aboveThreshold{runtimeThresholdInSeconds=%s, sigmaThreshold=%s}, createdAt: %s\",\n                        runtimeThresholdInSeconds, sigmaThreshold,\n                        DateTimeExt.toLocalDateTimeString(System.currentTimeMillis())\n                )\n        );\n\n        return (jobDescriptor, predictions) -> {\n            SortedSet<JobRuntimePrediction> predictionsSet = predictions.getPredictions();\n            if (CollectionsExt.isNullOrEmpty(predictionsSet) || predictionsSet.size() < 2) {\n                return Optional.empty();\n            }\n\n            JobRuntimePrediction first = predictionsSet.first();\n            if (!JobRuntimePredictionUtil.expectedLowest(first)) {\n                return Optional.empty();\n            }\n            JobRuntimePrediction requested = JobRuntimePredictionUtil.findRequested(predictionsSet, quantile).orElse(null);\n            if (requested == null || requested.getRuntimeInSeconds() > runtimeThresholdInSeconds) {\n                return Optional.empty();\n            }\n\n            double sigma = (requested.getRuntimeInSeconds() - first.getRuntimeInSeconds()) / JobRuntimePredictionUtil.NORM_SIGMA;\n            if (sigma > sigmaThreshold) {\n                return Optional.empty();\n            }\n            return Optional.of(JobRuntimePredictionSelection.newBuilder()\n                    .withPrediction(requested)\n                    .withMetadata(allMetadata)\n                    .build()\n            );\n        };\n    }", "signature": "JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "full_signature": "public static JobRuntimePredictionSelector aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "class_method_signature": "JobRuntimePredictionSelectors.aboveThreshold(double runtimeThresholdInSeconds,\n                                                              double sigmaThreshold,\n                                                              double quantile,\n                                                              Map<String, String> selectionMetadata)", "testcase": false, "constructor": false, "invocations": ["appendSelectorInfoIfMissing", "format", "toLocalDateTimeString", "currentTimeMillis", "getPredictions", "isNullOrEmpty", "size", "empty", "first", "expectedLowest", "empty", "orElse", "findRequested", "getRuntimeInSeconds", "empty", "getRuntimeInSeconds", "getRuntimeInSeconds", "empty", "of", "build", "withMetadata", "withPrediction", "newBuilder"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}