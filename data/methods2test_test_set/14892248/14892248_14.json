{"test_class": {"identifier": "GetBufferedRandomAccessSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "itext/src/test/java/com/itextpdf/text/io/GetBufferedRandomAccessSourceTest.java"}, "test_case": {"identifier": "testSmallSizedFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSmallSizedFile() throws Exception { \n\t\t// we had a problem if source was less than 4 characters in length - would result in array index out of bounds problems on get()\n\t\tbyte[] data = new byte[]{42};\n\t\tArrayRandomAccessSource arrayRAS = new ArrayRandomAccessSource(data);\n\t\tGetBufferedRandomAccessSource bufferedRAS = new GetBufferedRandomAccessSource(arrayRAS);\n\t\tAssert.assertEquals(42, bufferedRAS.get(0));\n\t}", "signature": "void testSmallSizedFile()", "full_signature": "@Test public void testSmallSizedFile()", "class_method_signature": "GetBufferedRandomAccessSourceTest.testSmallSizedFile()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "get"]}, "focal_class": {"identifier": "GetBufferedRandomAccessSource", "superclass": "", "interfaces": "implements RandomAccessSource", "fields": [{"original_string": "private final RandomAccessSource source;", "modifier": "private final", "type": "RandomAccessSource", "declarator": "source", "var_name": "source"}, {"original_string": "private final byte[] getBuffer;", "modifier": "private final", "type": "byte[]", "declarator": "getBuffer", "var_name": "getBuffer"}, {"original_string": "private long getBufferStart = -1;", "modifier": "private", "type": "long", "declarator": "getBufferStart = -1", "var_name": "getBufferStart"}, {"original_string": "private long getBufferEnd = -1;", "modifier": "private", "type": "long", "declarator": "getBufferEnd = -1", "var_name": "getBufferEnd"}], "methods": [{"identifier": "GetBufferedRandomAccessSource", "parameters": "(RandomAccessSource source)", "modifiers": "public", "return": "", "signature": " GetBufferedRandomAccessSource(RandomAccessSource source)", "full_signature": "public  GetBufferedRandomAccessSource(RandomAccessSource source)", "class_method_signature": "GetBufferedRandomAccessSource.GetBufferedRandomAccessSource(RandomAccessSource source)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(long position)", "modifiers": "public", "return": "int", "signature": "int get(long position)", "full_signature": "public int get(long position)", "class_method_signature": "GetBufferedRandomAccessSource.get(long position)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long position, byte[] bytes, int off, int len)", "modifiers": "public", "return": "int", "signature": "int get(long position, byte[] bytes, int off, int len)", "full_signature": "public int get(long position, byte[] bytes, int off, int len)", "class_method_signature": "GetBufferedRandomAccessSource.get(long position, byte[] bytes, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long length()", "full_signature": "public long length()", "class_method_signature": "GetBufferedRandomAccessSource.length()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "GetBufferedRandomAccessSource.close()", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/io/GetBufferedRandomAccessSource.java"}, "focal_method": {"identifier": "get", "parameters": "(long position)", "modifiers": "public", "return": "int", "body": "public int get(long position) throws IOException {\n\t\tif (position < getBufferStart || position > getBufferEnd){\n\t\t\tint count = source.get(position, getBuffer, 0, getBuffer.length);\n\t\t\tif (count == -1)\n\t\t\t\treturn -1;\n\t\t\tgetBufferStart = position;\n\t\t\tgetBufferEnd = position + count - 1;\n\t\t}\n\t\tint bufPos = (int)(position-getBufferStart);\n\t\treturn 0xff & getBuffer[bufPos];\n\t}", "signature": "int get(long position)", "full_signature": "public int get(long position)", "class_method_signature": "GetBufferedRandomAccessSource.get(long position)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}