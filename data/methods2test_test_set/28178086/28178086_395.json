{"test_class": {"identifier": "DayClusteringTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/DayClusteringTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        DayClustering cl0 = DayClustering.create(new int[]{1,1,1,1,1,0,0});\n        DayClustering cl1 = DayClustering.create(new int[]{1,1,1,1,1,2,0});\n        DayClustering cl2 = DayClustering.create(new int[]{1,2,3,4,5,6,0});\n        assertTrue(cl0.toString().equalsIgnoreCase(\"td2\"));\n        assertTrue(cl1.toString().equalsIgnoreCase(\"td3\"));\n        assertTrue(cl2.toString().equalsIgnoreCase(\"td7\"));\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "DayClusteringTest.testToString()", "testcase": true, "constructor": false, "invocations": ["create", "create", "create", "assertTrue", "equalsIgnoreCase", "toString", "assertTrue", "equalsIgnoreCase", "toString", "assertTrue", "equalsIgnoreCase", "toString"]}, "focal_class": {"identifier": "DayClustering", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int[] groups;", "modifier": "private final", "type": "int[]", "declarator": "groups", "var_name": "groups"}, {"original_string": "private static final int[] TD7_IDX = new int[]{1, 2, 3, 4, 5, 6, 0}, \n            TD2_IDX = new int[]{1, 1, 1, 1, 1, 0, 0}, \n            TD3_IDX = new int[]{1, 1, 1, 1, 1, 2, 0},\n            TD3C_IDX = new int[]{1, 1, 1, 1, 2, 2, 0},\n            TD4_IDX = new int[]{1, 1, 1, 1, 2, 3, 0}\n            ;", "modifier": "private static final", "type": "int[]", "declarator": "TD7_IDX = new int[]{1, 2, 3, 4, 5, 6, 0}", "var_name": "TD7_IDX"}, {"original_string": "private static final String[] SHORTNAMES = new String[]{\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"};", "modifier": "private static final", "type": "String[]", "declarator": "SHORTNAMES = new String[]{\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"}", "var_name": "SHORTNAMES"}, {"original_string": "public static final DayClustering TD2 = new DayClustering(TD2_IDX), TD3 = new DayClustering(TD3_IDX)\n            , TD3c = new DayClustering(TD3C_IDX)\n            , TD4 = new DayClustering(TD4_IDX), TD7 = new DayClustering(TD7_IDX);", "modifier": "public static final", "type": "DayClustering", "declarator": "TD2 = new DayClustering(TD2_IDX)", "var_name": "TD2"}], "methods": [{"identifier": "create", "parameters": "(int[] groups)", "modifiers": "public static", "return": "DayClustering", "signature": "DayClustering create(int[] groups)", "full_signature": "public static DayClustering create(int[] groups)", "class_method_signature": "DayClustering.create(int[] groups)", "testcase": false, "constructor": false}, {"identifier": "checkGroups", "parameters": "(int[] groups)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkGroups(int[] groups)", "full_signature": "private static boolean checkGroups(int[] groups)", "class_method_signature": "DayClustering.checkGroups(int[] groups)", "testcase": false, "constructor": false}, {"identifier": "DayClustering", "parameters": "(final int[] groups)", "modifiers": "", "return": "", "signature": " DayClustering(final int[] groups)", "full_signature": "  DayClustering(final int[] groups)", "class_method_signature": "DayClustering.DayClustering(final int[] groups)", "testcase": false, "constructor": true}, {"identifier": "getGroup", "parameters": "(java.time.DayOfWeek dw)", "modifiers": "public", "return": "int", "signature": "int getGroup(java.time.DayOfWeek dw)", "full_signature": "public int getGroup(java.time.DayOfWeek dw)", "class_method_signature": "DayClustering.getGroup(java.time.DayOfWeek dw)", "testcase": false, "constructor": false}, {"identifier": "getGroupsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getGroupsCount()", "full_signature": "public int getGroupsCount()", "class_method_signature": "DayClustering.getGroupsCount()", "testcase": false, "constructor": false}, {"identifier": "getGroupCount", "parameters": "(int idx)", "modifiers": "public", "return": "int", "signature": "int getGroupCount(int idx)", "full_signature": "public int getGroupCount(int idx)", "class_method_signature": "DayClustering.getGroupCount(int idx)", "testcase": false, "constructor": false}, {"identifier": "group", "parameters": "(int idx)", "modifiers": "public", "return": "java.time.DayOfWeek[]", "signature": "java.time.DayOfWeek[] group(int idx)", "full_signature": "public java.time.DayOfWeek[] group(int idx)", "class_method_signature": "DayClustering.group(int idx)", "testcase": false, "constructor": false}, {"identifier": "positions", "parameters": "(int idx)", "modifiers": "public", "return": "int[]", "signature": "int[] positions(int idx)", "full_signature": "public int[] positions(int idx)", "class_method_signature": "DayClustering.positions(int idx)", "testcase": false, "constructor": false}, {"identifier": "allPositions", "parameters": "()", "modifiers": "public", "return": "int[][]", "signature": "int[][] allPositions()", "full_signature": "public int[][] allPositions()", "class_method_signature": "DayClustering.allPositions()", "testcase": false, "constructor": false}, {"identifier": "isInside", "parameters": "(DayClustering dc)", "modifiers": "public", "return": "boolean", "signature": "boolean isInside(DayClustering dc)", "full_signature": "public boolean isInside(DayClustering dc)", "class_method_signature": "DayClustering.isInside(DayClustering dc)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DayClustering.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int i)", "modifiers": "public", "return": "String", "signature": "String toString(int i)", "full_signature": "public String toString(int i)", "class_method_signature": "DayClustering.toString(int i)", "testcase": false, "constructor": false}, {"identifier": "getGroupsDefinition", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getGroupsDefinition()", "full_signature": "public int[] getGroupsDefinition()", "class_method_signature": "DayClustering.getGroupsDefinition()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/DayClustering.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        if (Arrays.equals(groups, TD7_IDX)) {\n            return \"TD7\";\n        }\n        if (Arrays.equals(groups, TD2_IDX)) {\n            return \"TD2\";\n        }\n        if (Arrays.equals(groups, TD3_IDX)) {\n            return \"TD3\";\n        }\n        if (Arrays.equals(groups, TD3C_IDX)) {\n            return \"TD3c\";\n        }\n        if (Arrays.equals(groups, TD4_IDX)) {\n            return \"TD4\";\n        }\n        StringBuilder builder = new StringBuilder();\n        int ng = getGroupsCount();\n        for (int i = 0; i < ng; ++i) {\n            builder.append('{').append(toString(i)).append('}');\n        }\n        return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DayClustering.toString()", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equals", "equals", "getGroupsCount", "append", "append", "append", "toString", "toString"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}