{"test_class": {"identifier": "Gen0Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<Integer, Number> m = new HashMap<Integer, Number>() {\n    {\n      put(5, 6L);\n    }\n  };", "modifier": "private final", "type": "Map<Integer, Number>", "declarator": "m = new HashMap<Integer, Number>() {\n    {\n      put(5, 6L);\n    }\n  }", "var_name": "m"}], "file": "examples/basic/src/test/java/net/zerobuilder/examples/generics/Gen0Test.java"}, "test_case": {"identifier": "bar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void bar() throws Exception {\n    Gen0<Number, Integer> gen = new Gen0<>(1L, 2f, 3d, 4);\n    Gen0.Bar<Number, Integer> bar = barBuilder(gen).map0(emptyMap())\n        .map1(emptyMap())\n        .map2(emptyMap())\n        .map3(emptyMap());\n    Gen0.Bar<Number, Integer> updated = barUpdaterFactory(gen).updater(bar).map0(m).done();\n    assertThat(updated.aa0, is(1L));\n    assertThat(updated.aa1, is(2f));\n    assertThat(updated.aa2, is(3d));\n    assertThat(updated.ab0, is(4));\n    assertThat(updated.map0, is(m));\n    assertThat(updated.map1, is(emptyMap()));\n    assertThat(updated.map2, is(emptyMap()));\n    assertThat(updated.map3, is(emptyMap()));\n    assertThat(bar.aa0, is(1L));\n    assertThat(bar.aa1, is(2f));\n    assertThat(bar.aa2, is(3d));\n    assertThat(bar.ab0, is(4));\n    assertThat(bar.map0, is(emptyMap()));\n    assertThat(bar.map1, is(emptyMap()));\n    assertThat(bar.map2, is(emptyMap()));\n    assertThat(bar.map3, is(emptyMap()));\n  }", "signature": "void bar()", "full_signature": "@Test public void bar()", "class_method_signature": "Gen0Test.bar()", "testcase": true, "constructor": false, "invocations": ["map3", "map2", "map1", "map0", "barBuilder", "emptyMap", "emptyMap", "emptyMap", "emptyMap", "done", "map0", "updater", "barUpdaterFactory", "assertThat", "is", "assertThat", "is", "assertThat", "is", "assertThat", "is", "assertThat", "is", "assertThat", "is", "emptyMap", "assertThat", "is", "emptyMap", "assertThat", "is", "emptyMap", "assertThat", "is", "assertThat", "is", "assertThat", "is", "assertThat", "is", "assertThat", "is", "emptyMap", "assertThat", "is", "emptyMap", "assertThat", "is", "emptyMap", "assertThat", "is", "emptyMap"]}, "focal_class": {"identifier": "Gen0", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final A aa0;", "modifier": "private final", "type": "A", "declarator": "aa0", "var_name": "aa0"}, {"original_string": "private final A aa1;", "modifier": "private final", "type": "A", "declarator": "aa1", "var_name": "aa1"}, {"original_string": "private final A aa2;", "modifier": "private final", "type": "A", "declarator": "aa2", "var_name": "aa2"}, {"original_string": "private final B ab0;", "modifier": "private final", "type": "B", "declarator": "ab0", "var_name": "ab0"}], "methods": [{"identifier": "Gen0", "parameters": "(A aa0, A aa1, A aa2, B ab0)", "modifiers": "", "return": "", "signature": " Gen0(A aa0, A aa1, A aa2, B ab0)", "full_signature": "  Gen0(A aa0, A aa1, A aa2, B ab0)", "class_method_signature": "Gen0.Gen0(A aa0, A aa1, A aa2, B ab0)", "testcase": false, "constructor": true}, {"identifier": "bar", "parameters": "(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "modifiers": "@Updater @Builder", "return": "Bar<A, B>", "signature": "Bar<A, B> bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "full_signature": "@Updater @Builder Bar<A, B> bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "class_method_signature": "Gen0.bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "testcase": false, "constructor": false}], "file": "examples/basic/src/main/java/net/zerobuilder/examples/generics/Gen0.java"}, "focal_method": {"identifier": "bar", "parameters": "(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "modifiers": "@Updater @Builder", "return": "Bar<A, B>", "body": "@Updater\n  @Builder\n  Bar<A, B> bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3) {\n    return new Bar<>(aa0, aa1, aa2, ab0, map0, map1, map2, map3);\n  }", "signature": "Bar<A, B> bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "full_signature": "@Updater @Builder Bar<A, B> bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "class_method_signature": "Gen0.bar(Map<B, A> map0,\n                Map<B, A> map1,\n                Map<Map<B, A>, B> map2,\n                Map<Map<B, A>, B> map3)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66055507, "url": "https://github.com/h908714124/zerobuilder", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 19, "size": 1962, "license": "licensed"}}