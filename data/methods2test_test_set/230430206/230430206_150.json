{"test_class": {"identifier": "LocalPeerBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LocalPeerBeanTest.java"}, "test_case": {"identifier": "testClientAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClientAddress() throws Exception {\n        QuorumPeer quorumPeer = new QuorumPeer();\n        LocalPeerBean remotePeerBean = new LocalPeerBean(quorumPeer);\n\n        /**\n         * Case 1: When cnxnFactory is null\n         */\n        String result = remotePeerBean.getClientAddress();\n        assertNotNull(result);\n        assertEquals(0, result.length());\n\n        /**\n         * Case 2: When only client port is configured\n         */\n        ServerCnxnFactory cnxnFactory = ServerCnxnFactory.createFactory();\n        int clientPort = PortAssignment.unique();\n        InetSocketAddress address = new InetSocketAddress(clientPort);\n        cnxnFactory.configure(address, 5, false);\n        quorumPeer.setCnxnFactory(cnxnFactory);\n\n        result = remotePeerBean.getClientAddress();\n        String ipv4 = \"0.0.0.0:\" + clientPort;\n        String ipv6 = \"0:0:0:0:0:0:0:0:\" + clientPort;\n        assertTrue(result.equals(ipv4) || result.equals(ipv6));\n        // cleanup\n        cnxnFactory.shutdown();\n\n        /**\n         * Case 3: When both client port and client address is configured\n         */\n        clientPort = PortAssignment.unique();\n        InetAddress clientIP = InetAddress.getLoopbackAddress();\n        address = new InetSocketAddress(clientIP, clientPort);\n        cnxnFactory = ServerCnxnFactory.createFactory();\n        cnxnFactory.configure(address, 5, false);\n        quorumPeer.setCnxnFactory(cnxnFactory);\n\n        result = remotePeerBean.getClientAddress();\n        String expectedResult = clientIP.getHostAddress() + \":\" + clientPort;\n        assertEquals(expectedResult, result);\n        // cleanup\n        cnxnFactory.shutdown();\n    }", "signature": "void testClientAddress()", "full_signature": "@Test public void testClientAddress()", "class_method_signature": "LocalPeerBeanTest.testClientAddress()", "testcase": true, "constructor": false, "invocations": ["getClientAddress", "assertNotNull", "assertEquals", "length", "createFactory", "unique", "configure", "setCnxnFactory", "getClientAddress", "assertTrue", "equals", "equals", "shutdown", "unique", "getLoopbackAddress", "createFactory", "configure", "setCnxnFactory", "getClientAddress", "getHostAddress", "assertEquals", "shutdown"]}, "focal_class": {"identifier": "LocalPeerBean", "superclass": "extends ServerBean", "interfaces": "implements LocalPeerMXBean", "fields": [{"original_string": "private final QuorumPeer peer;", "modifier": "private final", "type": "QuorumPeer", "declarator": "peer", "var_name": "peer"}], "methods": [{"identifier": "LocalPeerBean", "parameters": "(QuorumPeer peer)", "modifiers": "public", "return": "", "signature": " LocalPeerBean(QuorumPeer peer)", "full_signature": "public  LocalPeerBean(QuorumPeer peer)", "class_method_signature": "LocalPeerBean.LocalPeerBean(QuorumPeer peer)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "LocalPeerBean.getName()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "public boolean isHidden()", "class_method_signature": "LocalPeerBean.isHidden()", "testcase": false, "constructor": false}, {"identifier": "getTickTime", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTickTime()", "full_signature": "public int getTickTime()", "class_method_signature": "LocalPeerBean.getTickTime()", "testcase": false, "constructor": false}, {"identifier": "getMaxClientCnxnsPerHost", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxClientCnxnsPerHost()", "full_signature": "public int getMaxClientCnxnsPerHost()", "class_method_signature": "LocalPeerBean.getMaxClientCnxnsPerHost()", "testcase": false, "constructor": false}, {"identifier": "getMinSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinSessionTimeout()", "full_signature": "public int getMinSessionTimeout()", "class_method_signature": "LocalPeerBean.getMinSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getMaxSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxSessionTimeout()", "full_signature": "public int getMaxSessionTimeout()", "class_method_signature": "LocalPeerBean.getMaxSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getInitLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInitLimit()", "full_signature": "public int getInitLimit()", "class_method_signature": "LocalPeerBean.getInitLimit()", "testcase": false, "constructor": false}, {"identifier": "getSyncLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSyncLimit()", "full_signature": "public int getSyncLimit()", "class_method_signature": "LocalPeerBean.getSyncLimit()", "testcase": false, "constructor": false}, {"identifier": "getTick", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTick()", "full_signature": "public int getTick()", "class_method_signature": "LocalPeerBean.getTick()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getState()", "full_signature": "public String getState()", "class_method_signature": "LocalPeerBean.getState()", "testcase": false, "constructor": false}, {"identifier": "getQuorumAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQuorumAddress()", "full_signature": "public String getQuorumAddress()", "class_method_signature": "LocalPeerBean.getQuorumAddress()", "testcase": false, "constructor": false}, {"identifier": "getElectionType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getElectionType()", "full_signature": "public int getElectionType()", "class_method_signature": "LocalPeerBean.getElectionType()", "testcase": false, "constructor": false}, {"identifier": "getElectionAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getElectionAddress()", "full_signature": "public String getElectionAddress()", "class_method_signature": "LocalPeerBean.getElectionAddress()", "testcase": false, "constructor": false}, {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientAddress()", "full_signature": "public String getClientAddress()", "class_method_signature": "LocalPeerBean.getClientAddress()", "testcase": false, "constructor": false}, {"identifier": "getLearnerType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLearnerType()", "full_signature": "public String getLearnerType()", "class_method_signature": "LocalPeerBean.getLearnerType()", "testcase": false, "constructor": false}, {"identifier": "getConfigVersion", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getConfigVersion()", "full_signature": "public long getConfigVersion()", "class_method_signature": "LocalPeerBean.getConfigVersion()", "testcase": false, "constructor": false}, {"identifier": "getQuorumSystemInfo", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getQuorumSystemInfo()", "full_signature": "@Override public String getQuorumSystemInfo()", "class_method_signature": "LocalPeerBean.getQuorumSystemInfo()", "testcase": false, "constructor": false}, {"identifier": "isPartOfEnsemble", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPartOfEnsemble()", "full_signature": "@Override public boolean isPartOfEnsemble()", "class_method_signature": "LocalPeerBean.isPartOfEnsemble()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLeader()", "full_signature": "@Override public boolean isLeader()", "class_method_signature": "LocalPeerBean.isLeader()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LocalPeerBean.java"}, "focal_method": {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getClientAddress() {\n        if (null != peer.cnxnFactory) {\n            return String.format(\"%s:%d\", peer.cnxnFactory.getLocalAddress()\n                    .getHostString(), peer.getClientPort());\n        } else {\n            return \"\";\n        }\n    }", "signature": "String getClientAddress()", "full_signature": "public String getClientAddress()", "class_method_signature": "LocalPeerBean.getClientAddress()", "testcase": false, "constructor": false, "invocations": ["format", "getHostString", "getLocalAddress", "getClientPort"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}