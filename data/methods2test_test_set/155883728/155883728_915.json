{"test_class": {"identifier": "EmbeddedPackageInstallableParamsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/sling/EmbeddedPackageInstallableParamsTest.java"}, "test_case": {"identifier": "testCreateInstallable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateInstallable() {\n        final PackageId expectParentId = PackageId.fromString(\"test\");\n        final String expectJcrPath = \"/some/package/path.zip\";\n        final PackageId expectEmbeddedId = PackageId.fromString(\"testtest\");\n        EmbeddedPackageInstallableParams params = new EmbeddedPackageInstallableParams(expectEmbeddedId);\n        EmbeddedPackageInstallable installable = params.createInstallable(expectParentId, expectJcrPath);\n\n        assertSame(\"expect same parentId\", expectParentId, installable.getParentId());\n        assertSame(\"expect same jcrPath\", expectJcrPath, installable.getJcrPath());\n        assertSame(\"expect same embeddedId\", expectEmbeddedId, installable.getEmbeddedId());\n    }", "signature": "void testCreateInstallable()", "full_signature": "@Test public void testCreateInstallable()", "class_method_signature": "EmbeddedPackageInstallableParamsTest.testCreateInstallable()", "testcase": true, "constructor": false, "invocations": ["fromString", "fromString", "createInstallable", "assertSame", "getParentId", "assertSame", "getJcrPath", "assertSame", "getEmbeddedId"]}, "focal_class": {"identifier": "EmbeddedPackageInstallableParams", "superclass": "", "interfaces": "implements SlingInstallableParams<EmbeddedPackageInstallable>", "fields": [{"original_string": "private final @NotNull PackageId embeddedId;", "modifier": "private final @NotNull", "type": "PackageId", "declarator": "embeddedId", "var_name": "embeddedId"}], "methods": [{"identifier": "EmbeddedPackageInstallableParams", "parameters": "(@NotNull final PackageId embeddedId)", "modifiers": "public", "return": "", "signature": " EmbeddedPackageInstallableParams(@NotNull final PackageId embeddedId)", "full_signature": "public  EmbeddedPackageInstallableParams(@NotNull final PackageId embeddedId)", "class_method_signature": "EmbeddedPackageInstallableParams.EmbeddedPackageInstallableParams(@NotNull final PackageId embeddedId)", "testcase": false, "constructor": true}, {"identifier": "getEmbeddedId", "parameters": "()", "modifiers": "public", "return": "PackageId", "signature": "PackageId getEmbeddedId()", "full_signature": "public PackageId getEmbeddedId()", "class_method_signature": "EmbeddedPackageInstallableParams.getEmbeddedId()", "testcase": false, "constructor": false}, {"identifier": "createInstallable", "parameters": "(final PackageId parentPackageId, final String jcrPath)", "modifiers": "@NotNull @Override public", "return": "EmbeddedPackageInstallable", "signature": "EmbeddedPackageInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "full_signature": "@NotNull @Override public EmbeddedPackageInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "class_method_signature": "EmbeddedPackageInstallableParams.createInstallable(final PackageId parentPackageId, final String jcrPath)", "testcase": false, "constructor": false}, {"identifier": "getInstallableType", "parameters": "()", "modifiers": "@Override public @NotNull", "return": "Class<EmbeddedPackageInstallable>", "signature": "Class<EmbeddedPackageInstallable> getInstallableType()", "full_signature": "@Override public @NotNull Class<EmbeddedPackageInstallable> getInstallableType()", "class_method_signature": "EmbeddedPackageInstallableParams.getInstallableType()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/sling/EmbeddedPackageInstallableParams.java"}, "focal_method": {"identifier": "createInstallable", "parameters": "(final PackageId parentPackageId, final String jcrPath)", "modifiers": "@NotNull @Override public", "return": "EmbeddedPackageInstallable", "body": "@NotNull\n    @Override\n    public EmbeddedPackageInstallable createInstallable(final PackageId parentPackageId, final String jcrPath) {\n        return new EmbeddedPackageInstallable(parentPackageId, jcrPath, embeddedId);\n    }", "signature": "EmbeddedPackageInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "full_signature": "@NotNull @Override public EmbeddedPackageInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "class_method_signature": "EmbeddedPackageInstallableParams.createInstallable(final PackageId parentPackageId, final String jcrPath)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}