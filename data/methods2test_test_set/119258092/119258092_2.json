{"test_class": {"identifier": "ExternalServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "implementations/java/src/test/java/com/lord/rahl/landon/web/service/ExternalServiceTest.java"}, "test_case": {"identifier": "getToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getToken() {\n        ExternalService service=new ExternalService();\n        String token=service.getToken();\n\n        System.out.println(\"Token is: \"+token);\n    }", "signature": "void getToken()", "full_signature": "@Test public void getToken()", "class_method_signature": "ExternalServiceTest.getToken()", "testcase": true, "constructor": false, "invocations": ["getToken", "println"]}, "focal_class": {"identifier": "ExternalService", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sendGetRequest", "parameters": "(String url)", "modifiers": "public", "return": "String", "signature": "String sendGetRequest(String url)", "full_signature": "public String sendGetRequest(String url)", "class_method_signature": "ExternalService.sendGetRequest(String url)", "testcase": false, "constructor": false}, {"identifier": "sendPostRequest", "parameters": "(String body)", "modifiers": "public", "return": "String", "signature": "String sendPostRequest(String body)", "full_signature": "public String sendPostRequest(String body)", "class_method_signature": "ExternalService.sendPostRequest(String body)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToken()", "full_signature": "public String getToken()", "class_method_signature": "ExternalService.getToken()", "testcase": false, "constructor": false}, {"identifier": "getLeagueStanding", "parameters": "(int leagueID)", "modifiers": "public", "return": "String", "signature": "String getLeagueStanding(int leagueID)", "full_signature": "public String getLeagueStanding(int leagueID)", "class_method_signature": "ExternalService.getLeagueStanding(int leagueID)", "testcase": false, "constructor": false}, {"identifier": "getLeagueFixture", "parameters": "(int leagueID, int matchDay)", "modifiers": "public", "return": "String", "signature": "String getLeagueFixture(int leagueID, int matchDay)", "full_signature": "public String getLeagueFixture(int leagueID, int matchDay)", "class_method_signature": "ExternalService.getLeagueFixture(int leagueID, int matchDay)", "testcase": false, "constructor": false}], "file": "implementations/java/src/main/java/com/lord/rahl/landon/web/service/ExternalService.java"}, "focal_method": {"identifier": "getToken", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getToken(){\n        String token=\"\";\n        ObjectMapper objectMapper=new ObjectMapper();\n        try{\n            File file=new ClassPathResource(\"env.json\").getFile();\n            if(!file.exists()){\n                System.out.println(\"Invalid Access Token Provided... Copy the content of env.example.json to env.json and update the access token\");\n                return \"An error occurred with the Access Token Provided\";\n            }\n\n            Map<String,Object> dataMap=objectMapper.readValue(file,HashMap.class);\n            token=(String)dataMap.get(\"token\");\n        }\n        catch (Exception ex){\n            ex.printStackTrace();\n        }\n\n        return token;\n    }", "signature": "String getToken()", "full_signature": "public String getToken()", "class_method_signature": "ExternalService.getToken()", "testcase": false, "constructor": false, "invocations": ["getFile", "exists", "println", "readValue", "get", "printStackTrace"]}, "repository": {"repo_id": 119258092, "url": "https://github.com/FBDevCLagos/soccergist", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 8, "size": 5346, "license": "licensed"}}