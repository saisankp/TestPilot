{"test_class": {"identifier": "DataSetProviderTypeWorkflowTest", "superclass": "extends AbstractDataSetWorkflowTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    EventSourceMock<SaveRequestEvent> saveRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<SaveRequestEvent>", "declarator": "saveRequestEvent", "var_name": "saveRequestEvent"}, {"original_string": "@Mock\n    EventSourceMock<TestDataSetRequestEvent> testDataSetEvent;", "modifier": "@Mock", "type": "EventSourceMock<TestDataSetRequestEvent>", "declarator": "testDataSetEvent", "var_name": "testDataSetEvent"}, {"original_string": "@Mock\n    EventSourceMock<CancelRequestEvent> cancelRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<CancelRequestEvent>", "declarator": "cancelRequestEvent", "var_name": "cancelRequestEvent"}, {"original_string": "@Mock\n    DataSetClientServices clientServices;", "modifier": "@Mock", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "@Mock\n    DataSetDefProviderTypeEditor providerTypeEditor;", "modifier": "@Mock", "type": "DataSetDefProviderTypeEditor", "declarator": "providerTypeEditor", "var_name": "providerTypeEditor"}, {"original_string": "@Mock\n    DataSetDefProviderTypeDriver dataSetDefProviderTypeDriver;", "modifier": "@Mock", "type": "DataSetDefProviderTypeDriver", "declarator": "dataSetDefProviderTypeDriver", "var_name": "dataSetDefProviderTypeDriver"}, {"original_string": "@Mock\n    SyncBeanDef<DataSetDefProviderTypeDriver> simpleBeanEditorDriverSyncBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<DataSetDefProviderTypeDriver>", "declarator": "simpleBeanEditorDriverSyncBeanDef", "var_name": "simpleBeanEditorDriverSyncBeanDef"}, {"original_string": "@Mock\n    HorizImageListEditor<DataSetProviderType> provider;", "modifier": "@Mock", "type": "HorizImageListEditor<DataSetProviderType>", "declarator": "provider", "var_name": "provider"}, {"original_string": "@Mock\n    DataSetEditorWorkflow.View view;", "modifier": "@Mock", "type": "DataSetEditorWorkflow.View", "declarator": "view", "var_name": "view"}, {"original_string": "private DataSetProviderTypeWorkflow presenter;", "modifier": "private", "type": "DataSetProviderTypeWorkflow", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-widgets/src/test/java/org/dashbuilder/client/widgets/dataset/editor/workflow/create/DataSetProviderTypeWorkflowTest.java"}, "test_case": {"identifier": "testProviderTypeValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProviderTypeValue() {\n        when( provider.getValue() ).thenReturn( DataSetProviderType.SQL );\n        assertEquals( DataSetProviderType.SQL, presenter.getProviderType() );\n    }", "signature": "void testProviderTypeValue()", "full_signature": "@Test public void testProviderTypeValue()", "class_method_signature": "DataSetProviderTypeWorkflowTest.testProviderTypeValue()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getValue", "assertEquals", "getProviderType"]}, "focal_class": {"identifier": "DataSetProviderTypeWorkflow", "superclass": "extends DataSetEditorWorkflow<DataSetDef>", "interfaces": "", "fields": [{"original_string": "DataSetDefProviderTypeEditor providerTypeEditor;", "modifier": "", "type": "DataSetDefProviderTypeEditor", "declarator": "providerTypeEditor", "var_name": "providerTypeEditor"}, {"original_string": "DataSetDefProviderTypeDriver dataSetDefProviderTypeDriver;", "modifier": "", "type": "DataSetDefProviderTypeDriver", "declarator": "dataSetDefProviderTypeDriver", "var_name": "dataSetDefProviderTypeDriver"}], "methods": [{"identifier": "DataSetProviderTypeWorkflow", "parameters": "(final DataSetClientServices clientServices,\n                                       final DataSetValidatorProvider validatorProvider,\n                                       final SyncBeanManager beanManager,\n                                       final DataSetDefProviderTypeEditor providerTypeEditor,\n                                       final Event<SaveRequestEvent> saveRequestEvent,\n                                       final Event<CancelRequestEvent> cancelRequestEvent,\n                                       final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                       final View view)", "modifiers": "@Inject public", "return": "", "signature": " DataSetProviderTypeWorkflow(final DataSetClientServices clientServices,\n                                       final DataSetValidatorProvider validatorProvider,\n                                       final SyncBeanManager beanManager,\n                                       final DataSetDefProviderTypeEditor providerTypeEditor,\n                                       final Event<SaveRequestEvent> saveRequestEvent,\n                                       final Event<CancelRequestEvent> cancelRequestEvent,\n                                       final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                       final View view)", "full_signature": "@Inject public  DataSetProviderTypeWorkflow(final DataSetClientServices clientServices,\n                                       final DataSetValidatorProvider validatorProvider,\n                                       final SyncBeanManager beanManager,\n                                       final DataSetDefProviderTypeEditor providerTypeEditor,\n                                       final Event<SaveRequestEvent> saveRequestEvent,\n                                       final Event<CancelRequestEvent> cancelRequestEvent,\n                                       final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                       final View view)", "class_method_signature": "DataSetProviderTypeWorkflow.DataSetProviderTypeWorkflow(final DataSetClientServices clientServices,\n                                       final DataSetValidatorProvider validatorProvider,\n                                       final SyncBeanManager beanManager,\n                                       final DataSetDefProviderTypeEditor providerTypeEditor,\n                                       final Event<SaveRequestEvent> saveRequestEvent,\n                                       final Event<CancelRequestEvent> cancelRequestEvent,\n                                       final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                       final View view)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "DataSetProviderTypeWorkflow.init()", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "(final DataSetDef def)", "modifiers": "public", "return": "DataSetProviderTypeWorkflow", "signature": "DataSetProviderTypeWorkflow edit(final DataSetDef def)", "full_signature": "public DataSetProviderTypeWorkflow edit(final DataSetDef def)", "class_method_signature": "DataSetProviderTypeWorkflow.edit(final DataSetDef def)", "testcase": false, "constructor": false}, {"identifier": "getProviderType", "parameters": "()", "modifiers": "public", "return": "DataSetProviderType", "signature": "DataSetProviderType getProviderType()", "full_signature": "public DataSetProviderType getProviderType()", "class_method_signature": "DataSetProviderTypeWorkflow.getProviderType()", "testcase": false, "constructor": false}, {"identifier": "providerTypeEdition", "parameters": "()", "modifiers": "public", "return": "DataSetProviderTypeWorkflow", "signature": "DataSetProviderTypeWorkflow providerTypeEdition()", "full_signature": "public DataSetProviderTypeWorkflow providerTypeEdition()", "class_method_signature": "DataSetProviderTypeWorkflow.providerTypeEdition()", "testcase": false, "constructor": false}, {"identifier": "onProviderTypeSelected", "parameters": "(@Observes DataSetDefCreationRequestEvent event)", "modifiers": "", "return": "void", "signature": "void onProviderTypeSelected(@Observes DataSetDefCreationRequestEvent event)", "full_signature": " void onProviderTypeSelected(@Observes DataSetDefCreationRequestEvent event)", "class_method_signature": "DataSetProviderTypeWorkflow.onProviderTypeSelected(@Observes DataSetDefCreationRequestEvent event)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-widgets/src/main/java/org/dashbuilder/client/widgets/dataset/editor/workflow/create/DataSetProviderTypeWorkflow.java"}, "focal_method": {"identifier": "getProviderType", "parameters": "()", "modifiers": "public", "return": "DataSetProviderType", "body": "public DataSetProviderType getProviderType() {\n        return providerTypeEditor.provider().getValue();\n    }", "signature": "DataSetProviderType getProviderType()", "full_signature": "public DataSetProviderType getProviderType()", "class_method_signature": "DataSetProviderTypeWorkflow.getProviderType()", "testcase": false, "constructor": false, "invocations": ["getValue", "provider"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}