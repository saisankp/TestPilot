{"test_class": {"identifier": "ProviderBinderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private ProviderBinder providers;", "modifier": "private", "type": "ProviderBinder", "declarator": "providers", "var_name": "providers"}, {"original_string": "private static ContextResolverText     contextResolverText     = new ContextResolverText();", "modifier": "private static", "type": "ContextResolverText", "declarator": "contextResolverText     = new ContextResolverText()", "var_name": "contextResolverText"}, {"original_string": "private static ContextResolverWildcard contextResolverWildcard = new ContextResolverWildcard();", "modifier": "private static", "type": "ContextResolverWildcard", "declarator": "contextResolverWildcard = new ContextResolverWildcard()", "var_name": "contextResolverWildcard"}, {"original_string": "private static ContextResolverXml      contextResolverXml      = new ContextResolverXml();", "modifier": "private static", "type": "ContextResolverXml", "declarator": "contextResolverXml      = new ContextResolverXml()", "var_name": "contextResolverXml"}, {"original_string": "private static ContextResolverAnyText  contextResolverAnyText  = new ContextResolverAnyText();", "modifier": "private static", "type": "ContextResolverAnyText", "declarator": "contextResolverAnyText  = new ContextResolverAnyText()", "var_name": "contextResolverAnyText"}, {"original_string": "private static RuntimeExceptionMapper runtimeExceptionMapper = new RuntimeExceptionMapper();", "modifier": "private static", "type": "RuntimeExceptionMapper", "declarator": "runtimeExceptionMapper = new RuntimeExceptionMapper()", "var_name": "runtimeExceptionMapper"}, {"original_string": "private static DefaultExceptionMapper defaultExceptionMapper = new DefaultExceptionMapper();", "modifier": "private static", "type": "DefaultExceptionMapper", "declarator": "defaultExceptionMapper = new DefaultExceptionMapper()", "var_name": "defaultExceptionMapper"}, {"original_string": "private static MessageBodyReader<String> stringMessageBodyReader = new StringEntityProvider();", "modifier": "private static", "type": "MessageBodyReader<String>", "declarator": "stringMessageBodyReader = new StringEntityProvider()", "var_name": "stringMessageBodyReader"}, {"original_string": "private static MessageBodyReader<byte[]> byteMessageBodyReader   = new ByteEntityProvider();", "modifier": "private static", "type": "MessageBodyReader<byte[]>", "declarator": "byteMessageBodyReader   = new ByteEntityProvider()", "var_name": "byteMessageBodyReader"}, {"original_string": "private static MessageBodyWriter<String> stringMessageBodyWriter = new StringEntityProvider();", "modifier": "private static", "type": "MessageBodyWriter<String>", "declarator": "stringMessageBodyWriter = new StringEntityProvider()", "var_name": "stringMessageBodyWriter"}, {"original_string": "private static MessageBodyWriter<byte[]> byteMessageBodyWriter   = new ByteEntityProvider();", "modifier": "private static", "type": "MessageBodyWriter<byte[]>", "declarator": "byteMessageBodyWriter   = new ByteEntityProvider()", "var_name": "byteMessageBodyWriter"}, {"original_string": "private static RequestFilter allMatchesRequestFilter  = new AllMatchesRequestFilter();", "modifier": "private static", "type": "RequestFilter", "declarator": "allMatchesRequestFilter  = new AllMatchesRequestFilter()", "var_name": "allMatchesRequestFilter"}, {"original_string": "private static RequestFilter pathMatchesRequestFilter = new PathMatchesRequestFilter();", "modifier": "private static", "type": "RequestFilter", "declarator": "pathMatchesRequestFilter = new PathMatchesRequestFilter()", "var_name": "pathMatchesRequestFilter"}, {"original_string": "private static ResponseFilter allMatchesResponseFilter  = new AllMatchesResponseFilter();", "modifier": "private static", "type": "ResponseFilter", "declarator": "allMatchesResponseFilter  = new AllMatchesResponseFilter()", "var_name": "allMatchesResponseFilter"}, {"original_string": "private static ResponseFilter pathMatchesResponseFilter = new PathMatchesResponseFilter();", "modifier": "private static", "type": "ResponseFilter", "declarator": "pathMatchesResponseFilter = new PathMatchesResponseFilter()", "var_name": "pathMatchesResponseFilter"}, {"original_string": "private static MethodInvokerFilter allMatchesMethodInvokerFilter  = new AllMatchesMethodInvokerFilter();", "modifier": "private static", "type": "MethodInvokerFilter", "declarator": "allMatchesMethodInvokerFilter  = new AllMatchesMethodInvokerFilter()", "var_name": "allMatchesMethodInvokerFilter"}, {"original_string": "private static MethodInvokerFilter pathMatchesMethodInvokerFilter = new PathMatchesMethodInvokerFilter();", "modifier": "private static", "type": "MethodInvokerFilter", "declarator": "pathMatchesMethodInvokerFilter = new PathMatchesMethodInvokerFilter()", "var_name": "pathMatchesMethodInvokerFilter"}, {"original_string": "private static final boolean SINGLETON = true;", "modifier": "private static final", "type": "boolean", "declarator": "SINGLETON = true", "var_name": "SINGLETON"}, {"original_string": "private static final boolean PER_REQUEST = false;", "modifier": "private static final", "type": "boolean", "declarator": "PER_REQUEST = false", "var_name": "PER_REQUEST"}, {"original_string": "private Appender<ILoggingEvent> mockLogbackAppender;", "modifier": "private", "type": "Appender<ILoggingEvent>", "declarator": "mockLogbackAppender", "var_name": "mockLogbackAppender"}, {"original_string": "private ApplicationContext context;", "modifier": "private", "type": "ApplicationContext", "declarator": "context", "var_name": "context"}, {"original_string": "private SecurityManager defaultSecurityManager;", "modifier": "private", "type": "SecurityManager", "declarator": "defaultSecurityManager", "var_name": "defaultSecurityManager"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/ProviderBinderTest.java"}, "test_case": {"identifier": "logsErrorWhenTryRegisterSingletonDuplicateContextResolver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void logsErrorWhenTryRegisterSingletonDuplicateContextResolver() throws Exception {\n        providers.addContextResolver(contextResolverAnyText);\n\n        providers.addContextResolver(contextResolverAnyText);\n\n        assertThatErrorLoggingEventWithThrowableAppended(DuplicateProviderException.class);\n    }", "signature": "void logsErrorWhenTryRegisterSingletonDuplicateContextResolver()", "full_signature": "@Test public void logsErrorWhenTryRegisterSingletonDuplicateContextResolver()", "class_method_signature": "ProviderBinderTest.logsErrorWhenTryRegisterSingletonDuplicateContextResolver()", "testcase": true, "constructor": false, "invocations": ["addContextResolver", "addContextResolver", "assertThatErrorLoggingEventWithThrowableAppended"]}, "focal_class": {"identifier": "ProviderBinder", "superclass": "", "interfaces": "implements Providers", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ProviderBinder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ProviderBinder.class)", "var_name": "LOG"}, {"original_string": "private static final RuntimePermission PROVIDERS_PERMISSIONS = new RuntimePermission(\"providersManagePermission\");", "modifier": "private static final", "type": "RuntimePermission", "declarator": "PROVIDERS_PERMISSIONS = new RuntimePermission(\"providersManagePermission\")", "var_name": "PROVIDERS_PERMISSIONS"}, {"original_string": "private static final AtomicReference<ProviderBinder> INSTANCE = new AtomicReference<>();", "modifier": "private static final", "type": "AtomicReference<ProviderBinder>", "declarator": "INSTANCE = new AtomicReference<>()", "var_name": "INSTANCE"}, {"original_string": "protected final MediaTypeComparator mediaTypeComparator = new MediaTypeComparator();", "modifier": "protected final", "type": "MediaTypeComparator", "declarator": "mediaTypeComparator = new MediaTypeComparator()", "var_name": "mediaTypeComparator"}, {"original_string": "protected final ConcurrentNavigableMap<MediaType, List<ObjectFactory<ProviderDescriptor>>> writeProviders = new ConcurrentSkipListMap<>(mediaTypeComparator);", "modifier": "protected final", "type": "ConcurrentNavigableMap<MediaType, List<ObjectFactory<ProviderDescriptor>>>", "declarator": "writeProviders = new ConcurrentSkipListMap<>(mediaTypeComparator)", "var_name": "writeProviders"}, {"original_string": "protected final ConcurrentNavigableMap<MediaType, List<ObjectFactory<ProviderDescriptor>>> readProviders = new ConcurrentSkipListMap<>(mediaTypeComparator);", "modifier": "protected final", "type": "ConcurrentNavigableMap<MediaType, List<ObjectFactory<ProviderDescriptor>>>", "declarator": "readProviders = new ConcurrentSkipListMap<>(mediaTypeComparator)", "var_name": "readProviders"}, {"original_string": "protected final ConcurrentMap<Class<? extends Throwable>, ObjectFactory<ProviderDescriptor>> exceptionMappers = new ConcurrentHashMap<>();", "modifier": "protected final", "type": "ConcurrentMap<Class<? extends Throwable>, ObjectFactory<ProviderDescriptor>>", "declarator": "exceptionMappers = new ConcurrentHashMap<>()", "var_name": "exceptionMappers"}, {"original_string": "protected final ConcurrentMap<Class<?>, NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>>> contextResolvers = new ConcurrentHashMap<>();", "modifier": "protected final", "type": "ConcurrentMap<Class<?>, NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>>>", "declarator": "contextResolvers = new ConcurrentHashMap<>()", "var_name": "contextResolvers"}, {"original_string": "protected final ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>> requestFilters = new ConcurrentHashMap<>();", "modifier": "protected final", "type": "ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>>", "declarator": "requestFilters = new ConcurrentHashMap<>()", "var_name": "requestFilters"}, {"original_string": "protected final ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>> responseFilters = new ConcurrentHashMap<>();", "modifier": "protected final", "type": "ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>>", "declarator": "responseFilters = new ConcurrentHashMap<>()", "var_name": "responseFilters"}, {"original_string": "protected final ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>> invokerFilters = new ConcurrentHashMap<>();", "modifier": "protected final", "type": "ConcurrentMap<UriPattern, List<ObjectFactory<FilterDescriptor>>>", "declarator": "invokerFilters = new ConcurrentHashMap<>()", "var_name": "invokerFilters"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "ProviderBinder", "signature": "ProviderBinder getInstance()", "full_signature": "public static ProviderBinder getInstance()", "class_method_signature": "ProviderBinder.getInstance()", "testcase": false, "constructor": false}, {"identifier": "setInstance", "parameters": "(ProviderBinder providerBinder)", "modifiers": "public static", "return": "void", "signature": "void setInstance(ProviderBinder providerBinder)", "full_signature": "public static void setInstance(ProviderBinder providerBinder)", "class_method_signature": "ProviderBinder.setInstance(ProviderBinder providerBinder)", "testcase": false, "constructor": false}, {"identifier": "ProviderBinder", "parameters": "()", "modifiers": "protected", "return": "", "signature": " ProviderBinder()", "full_signature": "protected  ProviderBinder()", "class_method_signature": "ProviderBinder.ProviderBinder()", "testcase": false, "constructor": true}, {"identifier": "addContextResolver", "parameters": "(Class<? extends ContextResolver> contextResolverClass)", "modifiers": "public", "return": "void", "signature": "void addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "full_signature": "public void addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "class_method_signature": "ProviderBinder.addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "testcase": false, "constructor": false}, {"identifier": "addContextResolver", "parameters": "(ContextResolver contextResolver)", "modifiers": "public", "return": "void", "signature": "void addContextResolver(ContextResolver contextResolver)", "full_signature": "public void addContextResolver(ContextResolver contextResolver)", "class_method_signature": "ProviderBinder.addContextResolver(ContextResolver contextResolver)", "testcase": false, "constructor": false}, {"identifier": "addExceptionMapper", "parameters": "(Class<? extends ExceptionMapper> exceptionMapperClass)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addExceptionMapper(Class<? extends ExceptionMapper> exceptionMapperClass)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addExceptionMapper(Class<? extends ExceptionMapper> exceptionMapperClass)", "class_method_signature": "ProviderBinder.addExceptionMapper(Class<? extends ExceptionMapper> exceptionMapperClass)", "testcase": false, "constructor": false}, {"identifier": "addExceptionMapper", "parameters": "(ExceptionMapper exceptionMapper)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addExceptionMapper(ExceptionMapper exceptionMapper)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addExceptionMapper(ExceptionMapper exceptionMapper)", "class_method_signature": "ProviderBinder.addExceptionMapper(ExceptionMapper exceptionMapper)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyReader", "parameters": "(Class<? extends MessageBodyReader> messageBodyReaderClass)", "modifiers": "public", "return": "void", "signature": "void addMessageBodyReader(Class<? extends MessageBodyReader> messageBodyReaderClass)", "full_signature": "public void addMessageBodyReader(Class<? extends MessageBodyReader> messageBodyReaderClass)", "class_method_signature": "ProviderBinder.addMessageBodyReader(Class<? extends MessageBodyReader> messageBodyReaderClass)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyReader", "parameters": "(MessageBodyReader messageBodyReader)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addMessageBodyReader(MessageBodyReader messageBodyReader)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addMessageBodyReader(MessageBodyReader messageBodyReader)", "class_method_signature": "ProviderBinder.addMessageBodyReader(MessageBodyReader messageBodyReader)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyWriter", "parameters": "(Class<? extends MessageBodyWriter> messageBodyWriter)", "modifiers": "public", "return": "void", "signature": "void addMessageBodyWriter(Class<? extends MessageBodyWriter> messageBodyWriter)", "full_signature": "public void addMessageBodyWriter(Class<? extends MessageBodyWriter> messageBodyWriter)", "class_method_signature": "ProviderBinder.addMessageBodyWriter(Class<? extends MessageBodyWriter> messageBodyWriter)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyWriter", "parameters": "(MessageBodyWriter messageBodyWriter)", "modifiers": "public", "return": "void", "signature": "void addMessageBodyWriter(MessageBodyWriter messageBodyWriter)", "full_signature": "public void addMessageBodyWriter(MessageBodyWriter messageBodyWriter)", "class_method_signature": "ProviderBinder.addMessageBodyWriter(MessageBodyWriter messageBodyWriter)", "testcase": false, "constructor": false}, {"identifier": "addMethodInvokerFilter", "parameters": "(Class<? extends MethodInvokerFilter> methodInvokerFilterClass)", "modifiers": "public", "return": "void", "signature": "void addMethodInvokerFilter(Class<? extends MethodInvokerFilter> methodInvokerFilterClass)", "full_signature": "public void addMethodInvokerFilter(Class<? extends MethodInvokerFilter> methodInvokerFilterClass)", "class_method_signature": "ProviderBinder.addMethodInvokerFilter(Class<? extends MethodInvokerFilter> methodInvokerFilterClass)", "testcase": false, "constructor": false}, {"identifier": "addMethodInvokerFilter", "parameters": "(MethodInvokerFilter methodInvokerFilter)", "modifiers": "public", "return": "void", "signature": "void addMethodInvokerFilter(MethodInvokerFilter methodInvokerFilter)", "full_signature": "public void addMethodInvokerFilter(MethodInvokerFilter methodInvokerFilter)", "class_method_signature": "ProviderBinder.addMethodInvokerFilter(MethodInvokerFilter methodInvokerFilter)", "testcase": false, "constructor": false}, {"identifier": "addRequestFilter", "parameters": "(Class<? extends RequestFilter> requestFilterClass)", "modifiers": "public", "return": "void", "signature": "void addRequestFilter(Class<? extends RequestFilter> requestFilterClass)", "full_signature": "public void addRequestFilter(Class<? extends RequestFilter> requestFilterClass)", "class_method_signature": "ProviderBinder.addRequestFilter(Class<? extends RequestFilter> requestFilterClass)", "testcase": false, "constructor": false}, {"identifier": "addRequestFilter", "parameters": "(RequestFilter requestFilter)", "modifiers": "public", "return": "void", "signature": "void addRequestFilter(RequestFilter requestFilter)", "full_signature": "public void addRequestFilter(RequestFilter requestFilter)", "class_method_signature": "ProviderBinder.addRequestFilter(RequestFilter requestFilter)", "testcase": false, "constructor": false}, {"identifier": "addResponseFilter", "parameters": "(Class<? extends ResponseFilter> responseFilterClass)", "modifiers": "public", "return": "void", "signature": "void addResponseFilter(Class<? extends ResponseFilter> responseFilterClass)", "full_signature": "public void addResponseFilter(Class<? extends ResponseFilter> responseFilterClass)", "class_method_signature": "ProviderBinder.addResponseFilter(Class<? extends ResponseFilter> responseFilterClass)", "testcase": false, "constructor": false}, {"identifier": "addResponseFilter", "parameters": "(ResponseFilter responseFilter)", "modifiers": "public", "return": "void", "signature": "void addResponseFilter(ResponseFilter responseFilter)", "full_signature": "public void addResponseFilter(ResponseFilter responseFilter)", "class_method_signature": "ProviderBinder.addResponseFilter(ResponseFilter responseFilter)", "testcase": false, "constructor": false}, {"identifier": "getAcceptableWriterMediaTypes", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations)", "modifiers": "public", "return": "List<MediaType>", "signature": "List<MediaType> getAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "full_signature": "public List<MediaType> getAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "class_method_signature": "ProviderBinder.getAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "testcase": false, "constructor": false}, {"identifier": "getContextResolver", "parameters": "(Class<T> contextType, MediaType mediaType)", "modifiers": "@Override public", "return": "ContextResolver<T>", "signature": "ContextResolver<T> getContextResolver(Class<T> contextType, MediaType mediaType)", "full_signature": "@Override public ContextResolver<T> getContextResolver(Class<T> contextType, MediaType mediaType)", "class_method_signature": "ProviderBinder.getContextResolver(Class<T> contextType, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getExceptionMapper", "parameters": "(Class<T> errorType)", "modifiers": "@Override public", "return": "ExceptionMapper<T>", "signature": "ExceptionMapper<T> getExceptionMapper(Class<T> errorType)", "full_signature": "@Override public ExceptionMapper<T> getExceptionMapper(Class<T> errorType)", "class_method_signature": "ProviderBinder.getExceptionMapper(Class<T> errorType)", "testcase": false, "constructor": false}, {"identifier": "getMessageBodyReader", "parameters": "(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "MessageBodyReader<T>", "signature": "MessageBodyReader<T> getMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public MessageBodyReader<T> getMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ProviderBinder.getMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getMessageBodyWriter", "parameters": "(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "MessageBodyWriter<T>", "signature": "MessageBodyWriter<T> getMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public MessageBodyWriter<T> getMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ProviderBinder.getMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getMethodInvokerFilters", "parameters": "(String path)", "modifiers": "public", "return": "List<MethodInvokerFilter>", "signature": "List<MethodInvokerFilter> getMethodInvokerFilters(String path)", "full_signature": "public List<MethodInvokerFilter> getMethodInvokerFilters(String path)", "class_method_signature": "ProviderBinder.getMethodInvokerFilters(String path)", "testcase": false, "constructor": false}, {"identifier": "getRequestFilters", "parameters": "(String path)", "modifiers": "public", "return": "List<RequestFilter>", "signature": "List<RequestFilter> getRequestFilters(String path)", "full_signature": "public List<RequestFilter> getRequestFilters(String path)", "class_method_signature": "ProviderBinder.getRequestFilters(String path)", "testcase": false, "constructor": false}, {"identifier": "getResponseFilters", "parameters": "(String path)", "modifiers": "public", "return": "List<ResponseFilter>", "signature": "List<ResponseFilter> getResponseFilters(String path)", "full_signature": "public List<ResponseFilter> getResponseFilters(String path)", "class_method_signature": "ProviderBinder.getResponseFilters(String path)", "testcase": false, "constructor": false}, {"identifier": "addContextResolver", "parameters": "(ObjectFactory<ProviderDescriptor> contextResolverFactory)", "modifiers": "public", "return": "void", "signature": "void addContextResolver(ObjectFactory<ProviderDescriptor> contextResolverFactory)", "full_signature": "public void addContextResolver(ObjectFactory<ProviderDescriptor> contextResolverFactory)", "class_method_signature": "ProviderBinder.addContextResolver(ObjectFactory<ProviderDescriptor> contextResolverFactory)", "testcase": false, "constructor": false}, {"identifier": "addExceptionMapper", "parameters": "(ObjectFactory<ProviderDescriptor> exceptionMapperFactory)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void addExceptionMapper(ObjectFactory<ProviderDescriptor> exceptionMapperFactory)", "full_signature": "@SuppressWarnings(\"unchecked\") public void addExceptionMapper(ObjectFactory<ProviderDescriptor> exceptionMapperFactory)", "class_method_signature": "ProviderBinder.addExceptionMapper(ObjectFactory<ProviderDescriptor> exceptionMapperFactory)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyReader", "parameters": "(ObjectFactory<ProviderDescriptor> readerFactory)", "modifiers": "public", "return": "void", "signature": "void addMessageBodyReader(ObjectFactory<ProviderDescriptor> readerFactory)", "full_signature": "public void addMessageBodyReader(ObjectFactory<ProviderDescriptor> readerFactory)", "class_method_signature": "ProviderBinder.addMessageBodyReader(ObjectFactory<ProviderDescriptor> readerFactory)", "testcase": false, "constructor": false}, {"identifier": "addMessageBodyWriter", "parameters": "(ObjectFactory<ProviderDescriptor> writerFactory)", "modifiers": "public", "return": "void", "signature": "void addMessageBodyWriter(ObjectFactory<ProviderDescriptor> writerFactory)", "full_signature": "public void addMessageBodyWriter(ObjectFactory<ProviderDescriptor> writerFactory)", "class_method_signature": "ProviderBinder.addMessageBodyWriter(ObjectFactory<ProviderDescriptor> writerFactory)", "testcase": false, "constructor": false}, {"identifier": "addMethodInvokerFilter", "parameters": "(ObjectFactory<FilterDescriptor> filterFactory)", "modifiers": "public", "return": "void", "signature": "void addMethodInvokerFilter(ObjectFactory<FilterDescriptor> filterFactory)", "full_signature": "public void addMethodInvokerFilter(ObjectFactory<FilterDescriptor> filterFactory)", "class_method_signature": "ProviderBinder.addMethodInvokerFilter(ObjectFactory<FilterDescriptor> filterFactory)", "testcase": false, "constructor": false}, {"identifier": "addRequestFilter", "parameters": "(ObjectFactory<FilterDescriptor> filterFactory)", "modifiers": "public", "return": "void", "signature": "void addRequestFilter(ObjectFactory<FilterDescriptor> filterFactory)", "full_signature": "public void addRequestFilter(ObjectFactory<FilterDescriptor> filterFactory)", "class_method_signature": "ProviderBinder.addRequestFilter(ObjectFactory<FilterDescriptor> filterFactory)", "testcase": false, "constructor": false}, {"identifier": "addResponseFilter", "parameters": "(ObjectFactory<FilterDescriptor> filterFactory)", "modifiers": "public", "return": "void", "signature": "void addResponseFilter(ObjectFactory<FilterDescriptor> filterFactory)", "full_signature": "public void addResponseFilter(ObjectFactory<FilterDescriptor> filterFactory)", "class_method_signature": "ProviderBinder.addResponseFilter(ObjectFactory<FilterDescriptor> filterFactory)", "testcase": false, "constructor": false}, {"identifier": "addProviderFactory", "parameters": "(ConcurrentMap<K, List<ObjectFactory<PF>>> providersFactoryMap,\n                                                                K key,\n                                                                ObjectFactory<PF> providerFactory)", "modifiers": "private", "return": "void", "signature": "void addProviderFactory(ConcurrentMap<K, List<ObjectFactory<PF>>> providersFactoryMap,\n                                                                K key,\n                                                                ObjectFactory<PF> providerFactory)", "full_signature": "private void addProviderFactory(ConcurrentMap<K, List<ObjectFactory<PF>>> providersFactoryMap,\n                                                                K key,\n                                                                ObjectFactory<PF> providerFactory)", "class_method_signature": "ProviderBinder.addProviderFactory(ConcurrentMap<K, List<ObjectFactory<PF>>> providersFactoryMap,\n                                                                K key,\n                                                                ObjectFactory<PF> providerFactory)", "testcase": false, "constructor": false}, {"identifier": "doGetAcceptableWriterMediaTypes", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations)", "modifiers": "@SuppressWarnings({\"unchecked\"}) protected", "return": "List<MediaType>", "signature": "List<MediaType> doGetAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "full_signature": "@SuppressWarnings({\"unchecked\"}) protected List<MediaType> doGetAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "class_method_signature": "ProviderBinder.doGetAcceptableWriterMediaTypes(Class<?> type, Type genericType, Annotation[] annotations)", "testcase": false, "constructor": false}, {"identifier": "doGetContextResolver", "parameters": "(Class<T> contextType, MediaType mediaType)", "modifiers": "protected", "return": "ContextResolver<T>", "signature": "ContextResolver<T> doGetContextResolver(Class<T> contextType, MediaType mediaType)", "full_signature": "protected ContextResolver<T> doGetContextResolver(Class<T> contextType, MediaType mediaType)", "class_method_signature": "ProviderBinder.doGetContextResolver(Class<T> contextType, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "doGetContextResolver", "parameters": "(NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>> mediaTypeToContextResolverMap, MediaType mediaType)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "ContextResolver<T>", "signature": "ContextResolver<T> doGetContextResolver(NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>> mediaTypeToContextResolverMap, MediaType mediaType)", "full_signature": "@SuppressWarnings(\"unchecked\") private ContextResolver<T> doGetContextResolver(NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>> mediaTypeToContextResolverMap, MediaType mediaType)", "class_method_signature": "ProviderBinder.doGetContextResolver(NavigableMap<MediaType, ObjectFactory<ProviderDescriptor>> mediaTypeToContextResolverMap, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "doGetExceptionMapper", "parameters": "(Class<T> errorType)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "ExceptionMapper<T>", "signature": "ExceptionMapper<T> doGetExceptionMapper(Class<T> errorType)", "full_signature": "@SuppressWarnings(\"unchecked\") protected ExceptionMapper<T> doGetExceptionMapper(Class<T> errorType)", "class_method_signature": "ProviderBinder.doGetExceptionMapper(Class<T> errorType)", "testcase": false, "constructor": false}, {"identifier": "doGetMessageBodyReader", "parameters": "(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@SuppressWarnings({\"unchecked\"}) protected", "return": "MessageBodyReader<T>", "signature": "MessageBodyReader<T> doGetMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@SuppressWarnings({\"unchecked\"}) protected MessageBodyReader<T> doGetMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ProviderBinder.doGetMessageBodyReader(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getTypeSupportedByReader", "parameters": "(MessageBodyReader<?> reader)", "modifiers": "private static", "return": "Type", "signature": "Type getTypeSupportedByReader(MessageBodyReader<?> reader)", "full_signature": "private static Type getTypeSupportedByReader(MessageBodyReader<?> reader)", "class_method_signature": "ProviderBinder.getTypeSupportedByReader(MessageBodyReader<?> reader)", "testcase": false, "constructor": false}, {"identifier": "doGetMessageBodyWriter", "parameters": "(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@SuppressWarnings({\"unchecked\"}) protected", "return": "MessageBodyWriter<T>", "signature": "MessageBodyWriter<T> doGetMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@SuppressWarnings({\"unchecked\"}) protected MessageBodyWriter<T> doGetMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ProviderBinder.doGetMessageBodyWriter(Class<T> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getTypeSupportedByWriter", "parameters": "(MessageBodyWriter writer)", "modifiers": "private static", "return": "Type", "signature": "Type getTypeSupportedByWriter(MessageBodyWriter writer)", "full_signature": "private static Type getTypeSupportedByWriter(MessageBodyWriter writer)", "class_method_signature": "ProviderBinder.getTypeSupportedByWriter(MessageBodyWriter writer)", "testcase": false, "constructor": false}, {"identifier": "calculateInheritanceDepth", "parameters": "(Class<?> inherited, Class<?> inheritor)", "modifiers": "private static", "return": "int", "signature": "int calculateInheritanceDepth(Class<?> inherited, Class<?> inheritor)", "full_signature": "private static int calculateInheritanceDepth(Class<?> inherited, Class<?> inheritor)", "class_method_signature": "ProviderBinder.calculateInheritanceDepth(Class<?> inherited, Class<?> inheritor)", "testcase": false, "constructor": false}, {"identifier": "doGetMatchedFilters", "parameters": "(String path, Map<UriPattern, List<ObjectFactory<FilterDescriptor>>> filtersMap)", "modifiers": "protected", "return": "List<ObjectFactory<FilterDescriptor>>", "signature": "List<ObjectFactory<FilterDescriptor>> doGetMatchedFilters(String path, Map<UriPattern, List<ObjectFactory<FilterDescriptor>>> filtersMap)", "full_signature": "protected List<ObjectFactory<FilterDescriptor>> doGetMatchedFilters(String path, Map<UriPattern, List<ObjectFactory<FilterDescriptor>>> filtersMap)", "class_method_signature": "ProviderBinder.doGetMatchedFilters(String path, Map<UriPattern, List<ObjectFactory<FilterDescriptor>>> filtersMap)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void init()", "full_signature": "protected void init()", "class_method_signature": "ProviderBinder.init()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/ProviderBinder.java"}, "focal_method": {"identifier": "addContextResolver", "parameters": "(Class<? extends ContextResolver> contextResolverClass)", "modifiers": "public", "return": "void", "body": "public void addContextResolver(Class<? extends ContextResolver> contextResolverClass) {\n        try {\n            ProviderDescriptor descriptor = new ProviderDescriptorImpl(contextResolverClass);\n            addContextResolver(new PerRequestObjectFactory<>(descriptor));\n        } catch (Exception e) {\n            LOG.error(String.format(\"Failed add ContextResolver %s. %s\", contextResolverClass.getName(), e.getMessage()), e);\n        }\n    }", "signature": "void addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "full_signature": "public void addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "class_method_signature": "ProviderBinder.addContextResolver(Class<? extends ContextResolver> contextResolverClass)", "testcase": false, "constructor": false, "invocations": ["addContextResolver", "error", "format", "getName", "getMessage"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}