{"test_class": {"identifier": "TestPercentileTracker", "superclass": "", "interfaces": "", "fields": [{"original_string": "ArrayList<Double> normalizedTestArray;", "modifier": "", "type": "ArrayList<Double>", "declarator": "normalizedTestArray", "var_name": "normalizedTestArray"}], "file": "jrugged-examples/src/test/java/org/fishwife/jrugged/examples/TestPercentileTracker.java"}, "test_case": {"identifier": "test90ithPercentile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test90ithPercentile () {\n        PercentileTracker pt = new PercentileTracker(5000);\n        double value = pt.getPercentile(90, normalizedTestArray);\n        Assert.assertEquals(9d, value, 0);\n    }", "signature": "void test90ithPercentile()", "full_signature": "@Test public void test90ithPercentile()", "class_method_signature": "TestPercentileTracker.test90ithPercentile()", "testcase": true, "constructor": false, "invocations": ["getPercentile", "assertEquals"]}, "focal_class": {"identifier": "PercentileTracker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long windowMillis;", "modifier": "private", "type": "long", "declarator": "windowMillis", "var_name": "windowMillis"}, {"original_string": "protected ConcurrentSkipListMap<Long, Double> cslm = new ConcurrentSkipListMap<Long, Double>();", "modifier": "protected", "type": "ConcurrentSkipListMap<Long, Double>", "declarator": "cslm = new ConcurrentSkipListMap<Long, Double>()", "var_name": "cslm"}], "methods": [{"identifier": "PercentileTracker", "parameters": "(long windowMillis)", "modifiers": "public", "return": "", "signature": " PercentileTracker(long windowMillis)", "full_signature": "public  PercentileTracker(long windowMillis)", "class_method_signature": "PercentileTracker.PercentileTracker(long windowMillis)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(double sample)", "modifiers": "public synchronized", "return": "void", "signature": "void update(double sample)", "full_signature": "public synchronized void update(double sample)", "class_method_signature": "PercentileTracker.update(double sample)", "testcase": false, "constructor": false}, {"identifier": "getPercentile", "parameters": "(int requestedPercentile)", "modifiers": "public", "return": "double", "signature": "double getPercentile(int requestedPercentile)", "full_signature": "public double getPercentile(int requestedPercentile)", "class_method_signature": "PercentileTracker.getPercentile(int requestedPercentile)", "testcase": false, "constructor": false}, {"identifier": "getPercentile", "parameters": "(int requestedPercentile, ArrayList<Double> values)", "modifiers": "protected", "return": "double", "signature": "double getPercentile(int requestedPercentile, ArrayList<Double> values)", "full_signature": "protected double getPercentile(int requestedPercentile, ArrayList<Double> values)", "class_method_signature": "PercentileTracker.getPercentile(int requestedPercentile, ArrayList<Double> values)", "testcase": false, "constructor": false}, {"identifier": "removeOutOfTimeWindowEntries", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void removeOutOfTimeWindowEntries()", "full_signature": "private void removeOutOfTimeWindowEntries()", "class_method_signature": "PercentileTracker.removeOutOfTimeWindowEntries()", "testcase": false, "constructor": false}], "file": "jrugged-examples/src/main/java/org/fishwife/jrugged/examples/PercentileTracker.java"}, "focal_method": {"identifier": "getPercentile", "parameters": "(int requestedPercentile)", "modifiers": "public", "return": "double", "body": "public double getPercentile(int requestedPercentile) {\n        return getPercentile(requestedPercentile, new ArrayList<Double>(cslm.values()));\n    }", "signature": "double getPercentile(int requestedPercentile)", "full_signature": "public double getPercentile(int requestedPercentile)", "class_method_signature": "PercentileTracker.getPercentile(int requestedPercentile)", "testcase": false, "constructor": false, "invocations": ["getPercentile", "values"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}