{"test_class": {"identifier": "AggregatingValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JobDescriptor MOCK_JOB = mock(JobDescriptor.class);", "modifier": "private static final", "type": "JobDescriptor", "declarator": "MOCK_JOB = mock(JobDescriptor.class)", "var_name": "MOCK_JOB"}, {"original_string": "private final TitusValidatorConfiguration configuration = mock(TitusValidatorConfiguration.class);", "modifier": "private final", "type": "TitusValidatorConfiguration", "declarator": "configuration = mock(TitusValidatorConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final Registry registry = new DefaultRegistry();", "modifier": "private final", "type": "Registry", "declarator": "registry = new DefaultRegistry()", "var_name": "registry"}], "file": "titus-server-runtime/src/test/java/com/netflix/titus/runtime/endpoint/admission/AggregatingValidatorTest.java"}, "test_case": {"identifier": "validateHardPassFail", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateHardPassFail() {\n        AdmissionValidator pass = new PassJobValidator();\n        AdmissionValidator fail = new FailJobValidator(ValidationError.Type.HARD);\n        AggregatingValidator validator = new AggregatingValidator(\n                configuration,\n                registry,\n                Arrays.asList(pass, fail));\n        Mono<Set<ValidationError>> mono = validator.validate(MOCK_JOB);\n\n        StepVerifier.create(mono)\n                .expectNextMatches(errors -> errors.size() == 1)\n                .verifyComplete();\n\n        Set<ValidationError> errors = mono.block();\n        validateFailErrors(errors);\n        validateErrorType(errors, ValidationError.Type.HARD);\n    }", "signature": "void validateHardPassFail()", "full_signature": "@Test public void validateHardPassFail()", "class_method_signature": "AggregatingValidatorTest.validateHardPassFail()", "testcase": true, "constructor": false, "invocations": ["asList", "validate", "verifyComplete", "expectNextMatches", "create", "size", "block", "validateFailErrors", "validateErrorType"]}, "focal_class": {"identifier": "AggregatingValidator", "superclass": "", "interfaces": "implements AdmissionValidator<JobDescriptor>", "fields": [{"original_string": "private final TitusValidatorConfiguration configuration;", "modifier": "private final", "type": "TitusValidatorConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final Duration timeout;", "modifier": "private final", "type": "Duration", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final Collection<? extends AdmissionValidator<JobDescriptor>> validators;", "modifier": "private final", "type": "Collection<? extends AdmissionValidator<JobDescriptor>>", "declarator": "validators", "var_name": "validators"}, {"original_string": "private final ValidatorMetrics validatorMetrics;", "modifier": "private final", "type": "ValidatorMetrics", "declarator": "validatorMetrics", "var_name": "validatorMetrics"}], "methods": [{"identifier": "AggregatingValidator", "parameters": "(\n            TitusValidatorConfiguration configuration,\n            Registry registry,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "modifiers": "@Inject public", "return": "", "signature": " AggregatingValidator(\n            TitusValidatorConfiguration configuration,\n            Registry registry,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "full_signature": "@Inject public  AggregatingValidator(\n            TitusValidatorConfiguration configuration,\n            Registry registry,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "class_method_signature": "AggregatingValidator.AggregatingValidator(\n            TitusValidatorConfiguration configuration,\n            Registry registry,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(JobDescriptor jobDescriptor)", "modifiers": "@Override public", "return": "Mono<Set<ValidationError>>", "signature": "Mono<Set<ValidationError>> validate(JobDescriptor jobDescriptor)", "full_signature": "@Override public Mono<Set<ValidationError>> validate(JobDescriptor jobDescriptor)", "class_method_signature": "AggregatingValidator.validate(JobDescriptor jobDescriptor)", "testcase": false, "constructor": false}, {"identifier": "getErrorType", "parameters": "()", "modifiers": "@Override public", "return": "ValidationError.Type", "signature": "ValidationError.Type getErrorType()", "full_signature": "@Override public ValidationError.Type getErrorType()", "class_method_signature": "AggregatingValidator.getErrorType()", "testcase": false, "constructor": false}, {"identifier": "getMonos", "parameters": "(\n            JobDescriptor jobDescriptor,\n            Duration timeout,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "modifiers": "private", "return": "Collection<Mono<Set<ValidationError>>>", "signature": "Collection<Mono<Set<ValidationError>>> getMonos(\n            JobDescriptor jobDescriptor,\n            Duration timeout,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "full_signature": "private Collection<Mono<Set<ValidationError>>> getMonos(\n            JobDescriptor jobDescriptor,\n            Duration timeout,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "class_method_signature": "AggregatingValidator.getMonos(\n            JobDescriptor jobDescriptor,\n            Duration timeout,\n            Collection<? extends AdmissionValidator<JobDescriptor>> validators)", "testcase": false, "constructor": false}, {"identifier": "registerMetrics", "parameters": "(Collection<ValidationError> validationErrors,\n                                 Throwable throwable)", "modifiers": "private", "return": "void", "signature": "void registerMetrics(Collection<ValidationError> validationErrors,\n                                 Throwable throwable)", "full_signature": "private void registerMetrics(Collection<ValidationError> validationErrors,\n                                 Throwable throwable)", "class_method_signature": "AggregatingValidator.registerMetrics(Collection<ValidationError> validationErrors,\n                                 Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "getTimeoutMsg", "parameters": "(Duration timeout)", "modifiers": "public static", "return": "String", "signature": "String getTimeoutMsg(Duration timeout)", "full_signature": "public static String getTimeoutMsg(Duration timeout)", "class_method_signature": "AggregatingValidator.getTimeoutMsg(Duration timeout)", "testcase": false, "constructor": false}], "file": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/endpoint/admission/AggregatingValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(JobDescriptor jobDescriptor)", "modifiers": "@Override public", "return": "Mono<Set<ValidationError>>", "body": "@Override\n    public Mono<Set<ValidationError>> validate(JobDescriptor jobDescriptor) {\n        return Mono.zip(\n                getMonos(jobDescriptor, timeout, validators),\n                objects -> Arrays.stream(objects)\n                        .map(objectSet -> (Set<ValidationError>) objectSet)\n                        .flatMap(Set::stream)\n                        .collect(Collectors.toSet()))\n                .defaultIfEmpty(Collections.emptySet());\n    }", "signature": "Mono<Set<ValidationError>> validate(JobDescriptor jobDescriptor)", "full_signature": "@Override public Mono<Set<ValidationError>> validate(JobDescriptor jobDescriptor)", "class_method_signature": "AggregatingValidator.validate(JobDescriptor jobDescriptor)", "testcase": false, "constructor": false, "invocations": ["defaultIfEmpty", "zip", "getMonos", "collect", "flatMap", "map", "stream", "toSet", "emptySet"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}