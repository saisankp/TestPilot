{"test_class": {"identifier": "FunctionEvaluatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean INITIALIZED = false;", "modifier": "private static", "type": "boolean", "declarator": "INITIALIZED = false", "var_name": "INITIALIZED"}, {"original_string": "@Resource(name = \"alien-es-dao\")\n    private IGenericSearchDAO alienDAO;", "modifier": "@Resource(name = \"alien-es-dao\")\n    private", "type": "IGenericSearchDAO", "declarator": "alienDAO", "var_name": "alienDAO"}, {"original_string": "@Resource\n    private ArchiveUploadService archiveUploadService;", "modifier": "@Resource\n    private", "type": "ArchiveUploadService", "declarator": "archiveUploadService", "var_name": "archiveUploadService"}, {"original_string": "@Resource\n    private TopologyTreeBuilderService treeBuilder;", "modifier": "@Resource\n    private", "type": "TopologyTreeBuilderService", "declarator": "treeBuilder", "var_name": "treeBuilder"}, {"original_string": "@Resource\n    private ApplicationUtil applicationUtil;", "modifier": "@Resource\n    private", "type": "ApplicationUtil", "declarator": "applicationUtil", "var_name": "applicationUtil"}, {"original_string": "@Value(\"${directories.alien}/${directories.csar_repository}\")\n    private String alienRepoDir;", "modifier": "@Value(\"${directories.alien}/${directories.csar_repository}\")\n    private", "type": "String", "declarator": "alienRepoDir", "var_name": "alienRepoDir"}, {"original_string": "private Path artifactsDirectory = Paths.get(\"target/git-artifacts\");", "modifier": "private", "type": "Path", "declarator": "artifactsDirectory = Paths.get(\"target/git-artifacts\")", "var_name": "artifactsDirectory"}, {"original_string": "private RepositoryManager repositoryManager = new RepositoryManager();", "modifier": "private", "type": "RepositoryManager", "declarator": "repositoryManager = new RepositoryManager()", "var_name": "repositoryManager"}, {"original_string": "private Map<String, PaaSNodeTemplate> builtPaaSNodeTemplates;", "modifier": "private", "type": "Map<String, PaaSNodeTemplate>", "declarator": "builtPaaSNodeTemplates", "var_name": "builtPaaSNodeTemplates"}], "file": "alien4cloud-core/src/test/java/alien4cloud/paas/function/FunctionEvaluatorTest.java"}, "test_case": {"identifier": "parseComplexProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseComplexProperty() {\n        String complexPropName = \"complex_prop\";\n        PaaSNodeTemplate complexPropNode = builtPaaSNodeTemplates.get(complexPropName);\n        Operation configOp = complexPropNode.getIndexedToscaElement().getInterfaces().get(ToscaNodeLifecycleConstants.STANDARD).getOperations()\n                .get(ToscaNodeLifecycleConstants.CREATE);\n        Assert.assertEquals(\n                \"{\\n\" + \"  \\\"nested_map\\\" : {\\n\" + \"    \\\"tutu\\\" : \\\"tata\\\",\\n\" + \"    \\\"toctoc\\\" : \\\"tactac\\\"\\n\" + \"  },\\n\" + \"  \\\"nested\\\" : \\\"toto\\\",\\n\"\n                        + \"  \\\"nested_array\\\" : [ \\\"titi\\\", \\\"tuctuc\\\" ]\\n\" + \"}\",\n                FunctionEvaluator.evaluateGetPropertyFunction((FunctionPropertyValue) configOp.getInputParameters().get(\"COMPLEX\"), complexPropNode,\n                        builtPaaSNodeTemplates));\n        Assert.assertEquals(\"toto\", FunctionEvaluator.evaluateGetPropertyFunction((FunctionPropertyValue) configOp.getInputParameters().get(\"NESTED\"),\n                complexPropNode, builtPaaSNodeTemplates));\n        Assert.assertEquals(\"titi\", FunctionEvaluator.evaluateGetPropertyFunction(\n                (FunctionPropertyValue) configOp.getInputParameters().get(\"NESTED_ARRAY_ELEMENT\"), complexPropNode, builtPaaSNodeTemplates));\n        Assert.assertEquals(\"tata\", FunctionEvaluator.evaluateGetPropertyFunction(\n                (FunctionPropertyValue) configOp.getInputParameters().get(\"NESTED_MAP_ELEMENT\"), complexPropNode, builtPaaSNodeTemplates));\n    }", "signature": "void parseComplexProperty()", "full_signature": "@Test public void parseComplexProperty()", "class_method_signature": "FunctionEvaluatorTest.parseComplexProperty()", "testcase": true, "constructor": false, "invocations": ["get", "get", "getOperations", "get", "getInterfaces", "getIndexedToscaElement", "assertEquals", "evaluateGetPropertyFunction", "get", "getInputParameters", "assertEquals", "evaluateGetPropertyFunction", "get", "getInputParameters", "assertEquals", "evaluateGetPropertyFunction", "get", "getInputParameters", "assertEquals", "evaluateGetPropertyFunction", "get", "getInputParameters"]}, "focal_class": {"identifier": "FunctionEvaluator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseAttribute", "parameters": "(String attributeId, IValue attributeValue, Topology topology,\n            Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "public static", "return": "String", "signature": "String parseAttribute(String attributeId, IValue attributeValue, Topology topology,\n            Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "public static String parseAttribute(String attributeId, IValue attributeValue, Topology topology,\n            Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.parseAttribute(String attributeId, IValue attributeValue, Topology topology,\n            Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "extractRuntimeInformationOperationOutput", "parameters": "(Map<String, Map<String, InstanceInformation>> runtimeInformations, String instanceId,\n            List<? extends IPaaSTemplate> nodes, FunctionPropertyValue function, String defaultValue)", "modifiers": "private static", "return": "String", "signature": "String extractRuntimeInformationOperationOutput(Map<String, Map<String, InstanceInformation>> runtimeInformations, String instanceId,\n            List<? extends IPaaSTemplate> nodes, FunctionPropertyValue function, String defaultValue)", "full_signature": "private static String extractRuntimeInformationOperationOutput(Map<String, Map<String, InstanceInformation>> runtimeInformations, String instanceId,\n            List<? extends IPaaSTemplate> nodes, FunctionPropertyValue function, String defaultValue)", "class_method_signature": "FunctionEvaluator.extractRuntimeInformationOperationOutput(Map<String, Map<String, InstanceInformation>> runtimeInformations, String instanceId,\n            List<? extends IPaaSTemplate> nodes, FunctionPropertyValue function, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "extractRuntimeInformationProperty", "parameters": "(Topology topology, String propertyOrAttributeName, List<? extends IPaaSTemplate> nodes)", "modifiers": "private static", "return": "String", "signature": "String extractRuntimeInformationProperty(Topology topology, String propertyOrAttributeName, List<? extends IPaaSTemplate> nodes)", "full_signature": "private static String extractRuntimeInformationProperty(Topology topology, String propertyOrAttributeName, List<? extends IPaaSTemplate> nodes)", "class_method_signature": "FunctionEvaluator.extractRuntimeInformationProperty(Topology topology, String propertyOrAttributeName, List<? extends IPaaSTemplate> nodes)", "testcase": false, "constructor": false}, {"identifier": "extractRuntimeInformationAttribute", "parameters": "(Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            List<? extends IPaaSTemplate> nodes, String propertyOrAttributeName)", "modifiers": "private static", "return": "String", "signature": "String extractRuntimeInformationAttribute(Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            List<? extends IPaaSTemplate> nodes, String propertyOrAttributeName)", "full_signature": "private static String extractRuntimeInformationAttribute(Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            List<? extends IPaaSTemplate> nodes, String propertyOrAttributeName)", "class_method_signature": "FunctionEvaluator.extractRuntimeInformationAttribute(Map<String, Map<String, InstanceInformation>> runtimeInformations, String currentInstance,\n            List<? extends IPaaSTemplate> nodes, String propertyOrAttributeName)", "testcase": false, "constructor": false}, {"identifier": "getPaaSTemplatesFromKeyword", "parameters": "(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, String keyword,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "public static", "return": "List<? extends IPaaSTemplate>", "signature": "List<? extends IPaaSTemplate> getPaaSTemplatesFromKeyword(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, String keyword,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "public static List<? extends IPaaSTemplate> getPaaSTemplatesFromKeyword(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, String keyword,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.getPaaSTemplatesFromKeyword(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate, String keyword,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "evaluateGetPropertyFunction", "parameters": "(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "public static", "return": "String", "signature": "String evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "public static String evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "processGetPropertyFunction", "parameters": "(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "public static", "return": "AbstractPropertyValue", "signature": "AbstractPropertyValue processGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "public static AbstractPropertyValue processGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.processGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "getPropertyValue", "parameters": "(Map<String, AbstractPropertyValue> properties, Map<String, PropertyDefinition> propertyDefinitions,\n            String propertyAccessPath)", "modifiers": "private static", "return": "AbstractPropertyValue", "signature": "AbstractPropertyValue getPropertyValue(Map<String, AbstractPropertyValue> properties, Map<String, PropertyDefinition> propertyDefinitions,\n            String propertyAccessPath)", "full_signature": "private static AbstractPropertyValue getPropertyValue(Map<String, AbstractPropertyValue> properties, Map<String, PropertyDefinition> propertyDefinitions,\n            String propertyAccessPath)", "class_method_signature": "FunctionEvaluator.getPropertyValue(Map<String, AbstractPropertyValue> properties, Map<String, PropertyDefinition> propertyDefinitions,\n            String propertyAccessPath)", "testcase": false, "constructor": false}, {"identifier": "getPropertyFromTemplateOrCapability", "parameters": "(IPaaSTemplate<? extends AbstractInheritableToscaType> paaSTemplate,\n            String capabilityOrRequirementName, String elementName)", "modifiers": "private static", "return": "AbstractPropertyValue", "signature": "AbstractPropertyValue getPropertyFromTemplateOrCapability(IPaaSTemplate<? extends AbstractInheritableToscaType> paaSTemplate,\n            String capabilityOrRequirementName, String elementName)", "full_signature": "private static AbstractPropertyValue getPropertyFromTemplateOrCapability(IPaaSTemplate<? extends AbstractInheritableToscaType> paaSTemplate,\n            String capabilityOrRequirementName, String elementName)", "class_method_signature": "FunctionEvaluator.getPropertyFromTemplateOrCapability(IPaaSTemplate<? extends AbstractInheritableToscaType> paaSTemplate,\n            String capabilityOrRequirementName, String elementName)", "testcase": false, "constructor": false}, {"identifier": "getPaaSNodeOrFail", "parameters": "(String nodeId, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "private static", "return": "PaaSNodeTemplate", "signature": "PaaSNodeTemplate getPaaSNodeOrFail(String nodeId, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "private static PaaSNodeTemplate getPaaSNodeOrFail(String nodeId, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.getPaaSNodeOrFail(String nodeId, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "getHostNode", "parameters": "(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate)", "modifiers": "private static", "return": "PaaSNodeTemplate", "signature": "PaaSNodeTemplate getHostNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate)", "full_signature": "private static PaaSNodeTemplate getHostNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate)", "class_method_signature": "FunctionEvaluator.getHostNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate)", "testcase": false, "constructor": false}, {"identifier": "getSourceNode", "parameters": "(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "private static", "return": "PaaSNodeTemplate", "signature": "PaaSNodeTemplate getSourceNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "private static PaaSNodeTemplate getSourceNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.getSourceNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "getTargetNode", "parameters": "(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "private static", "return": "PaaSNodeTemplate", "signature": "PaaSNodeTemplate getTargetNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "private static PaaSNodeTemplate getTargetNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.getTargetNode(IPaaSTemplate<? extends AbstractToscaType> basePaaSTemplate,\n            Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false}, {"identifier": "getWithParentsNodes", "parameters": "(final PaaSNodeTemplate paaSNodeTemplate)", "modifiers": "private static", "return": "List<PaaSNodeTemplate>", "signature": "List<PaaSNodeTemplate> getWithParentsNodes(final PaaSNodeTemplate paaSNodeTemplate)", "full_signature": "private static List<PaaSNodeTemplate> getWithParentsNodes(final PaaSNodeTemplate paaSNodeTemplate)", "class_method_signature": "FunctionEvaluator.getWithParentsNodes(final PaaSNodeTemplate paaSNodeTemplate)", "testcase": false, "constructor": false}, {"identifier": "getScalarValues", "parameters": "(Map<String, AbstractPropertyValue> propertyValues)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getScalarValues(Map<String, AbstractPropertyValue> propertyValues)", "full_signature": "public static Map<String, String> getScalarValues(Map<String, AbstractPropertyValue> propertyValues)", "class_method_signature": "FunctionEvaluator.getScalarValues(Map<String, AbstractPropertyValue> propertyValues)", "testcase": false, "constructor": false}, {"identifier": "isGetAttribute", "parameters": "(FunctionPropertyValue function)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetAttribute(FunctionPropertyValue function)", "full_signature": "public static boolean isGetAttribute(FunctionPropertyValue function)", "class_method_signature": "FunctionEvaluator.isGetAttribute(FunctionPropertyValue function)", "testcase": false, "constructor": false}, {"identifier": "isGetOperationOutput", "parameters": "(FunctionPropertyValue function)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetOperationOutput(FunctionPropertyValue function)", "full_signature": "public static boolean isGetOperationOutput(FunctionPropertyValue function)", "class_method_signature": "FunctionEvaluator.isGetOperationOutput(FunctionPropertyValue function)", "testcase": false, "constructor": false}, {"identifier": "isGetInput", "parameters": "(AbstractPropertyValue propertyValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetInput(AbstractPropertyValue propertyValue)", "full_signature": "public static boolean isGetInput(AbstractPropertyValue propertyValue)", "class_method_signature": "FunctionEvaluator.isGetInput(AbstractPropertyValue propertyValue)", "testcase": false, "constructor": false}, {"identifier": "isGetInput", "parameters": "(FunctionPropertyValue function)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetInput(FunctionPropertyValue function)", "full_signature": "public static boolean isGetInput(FunctionPropertyValue function)", "class_method_signature": "FunctionEvaluator.isGetInput(FunctionPropertyValue function)", "testcase": false, "constructor": false}, {"identifier": "isGetSecret", "parameters": "(AbstractPropertyValue propertyValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetSecret(AbstractPropertyValue propertyValue)", "full_signature": "public static boolean isGetSecret(AbstractPropertyValue propertyValue)", "class_method_signature": "FunctionEvaluator.isGetSecret(AbstractPropertyValue propertyValue)", "testcase": false, "constructor": false}, {"identifier": "isGetSecret", "parameters": "(FunctionPropertyValue function)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGetSecret(FunctionPropertyValue function)", "full_signature": "public static boolean isGetSecret(FunctionPropertyValue function)", "class_method_signature": "FunctionEvaluator.isGetSecret(FunctionPropertyValue function)", "testcase": false, "constructor": false}], "file": "alien4cloud-core/src/main/java/alien4cloud/paas/function/FunctionEvaluator.java"}, "focal_method": {"identifier": "evaluateGetPropertyFunction", "parameters": "(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "modifiers": "public static", "return": "String", "body": "public static String evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates) {\n        AbstractPropertyValue propertyValue = processGetPropertyFunction(functionParam, basePaaSTemplate, builtPaaSTemplates);\n        if (propertyValue == null) {\n            return null;\n        } else if (!(propertyValue instanceof PropertyValue)) {\n            throw new NotSupportedException(\"Not a property value \" + propertyValue);\n        } else {\n            return PropertyUtil.serializePropertyValue(propertyValue);\n        }\n    }", "signature": "String evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "full_signature": "public static String evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "class_method_signature": "FunctionEvaluator.evaluateGetPropertyFunction(FunctionPropertyValue functionParam,\n            IPaaSTemplate<? extends AbstractInheritableToscaType> basePaaSTemplate, Map<String, PaaSNodeTemplate> builtPaaSTemplates)", "testcase": false, "constructor": false, "invocations": ["processGetPropertyFunction", "serializePropertyValue"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}