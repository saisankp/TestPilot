{"test_class": {"identifier": "IntentArgumentResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IntentArgumentResolver resolver = new IntentArgumentResolver();", "modifier": "private", "type": "IntentArgumentResolver", "declarator": "resolver = new IntentArgumentResolver()", "var_name": "resolver"}, {"original_string": "@Mock\n    SkillContext mockSkillContext;", "modifier": "@Mock", "type": "SkillContext", "declarator": "mockSkillContext", "var_name": "mockSkillContext"}], "file": "ask-sdk-mvc/src/test/java/com/amazon/ask/mvc/argument/IntentArgumentResolverTest.java"}, "test_case": {"identifier": "testSupportAndResolve", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSupportAndResolve() throws NoSuchMethodException {\n        MethodParameter methodParameter = new MethodParameter(\n                this.getClass().getMethod(\"testSupportAndResolve\"),\n                0,\n                Intent.class,\n                MethodParameter.EMPTY_ANNOTATIONS\n        );\n\n        RequestEnvelope envelope = Utils.buildSimpleEnvelope(\"intent\");\n        ArgumentResolverContext input = new ArgumentResolverContext(mockSkillContext, methodParameter, HandlerInput.builder().withRequestEnvelope(envelope).build());\n\n        assertSame(((IntentRequest) envelope.getRequest()).getIntent(), resolver.resolve(input).get());\n    }", "signature": "void testSupportAndResolve()", "full_signature": "@Test public void testSupportAndResolve()", "class_method_signature": "IntentArgumentResolverTest.testSupportAndResolve()", "testcase": true, "constructor": false, "invocations": ["getMethod", "getClass", "buildSimpleEnvelope", "build", "withRequestEnvelope", "builder", "assertSame", "getIntent", "getRequest", "get", "resolve"]}, "focal_class": {"identifier": "IntentArgumentResolver", "superclass": "", "interfaces": "implements ArgumentResolver", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(ArgumentResolverContext input)", "modifiers": "@Override public", "return": "Optional<Object>", "signature": "Optional<Object> resolve(ArgumentResolverContext input)", "full_signature": "@Override public Optional<Object> resolve(ArgumentResolverContext input)", "class_method_signature": "IntentArgumentResolver.resolve(ArgumentResolverContext input)", "testcase": false, "constructor": false}], "file": "ask-sdk-mvc/src/main/java/com/amazon/ask/mvc/argument/IntentArgumentResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(ArgumentResolverContext input)", "modifiers": "@Override public", "return": "Optional<Object>", "body": "@Override\n    public Optional<Object> resolve(ArgumentResolverContext input) {\n        if (input.requestTypeEquals(IntentRequest.class) && input.parameterTypeEquals(Intent.class)) {\n            return Optional.of(((IntentRequest) input.unwrapRequest()).getIntent())          ;\n        }\n        return Optional.empty();\n    }", "signature": "Optional<Object> resolve(ArgumentResolverContext input)", "full_signature": "@Override public Optional<Object> resolve(ArgumentResolverContext input)", "class_method_signature": "IntentArgumentResolver.resolve(ArgumentResolverContext input)", "testcase": false, "constructor": false, "invocations": ["requestTypeEquals", "parameterTypeEquals", "of", "getIntent", "unwrapRequest", "empty"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}