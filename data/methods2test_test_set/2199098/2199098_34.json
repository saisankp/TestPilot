{"test_class": {"identifier": "DocumentReferenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/test/java/org/xwiki/model/reference/DocumentReferenceTest.java"}, "test_case": {"identifier": "testSpaceReferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSpaceReferences()\n    {\n        DocumentReference reference1 = new DocumentReference(\"wiki\", \"space\", \"page\");\n        List<SpaceReference> spaceRefs = reference1.getSpaceReferences();\n        Assert.assertEquals(1, spaceRefs.size());\n        Assert.assertEquals(new SpaceReference(\"space\", new WikiReference(\"wiki\")), spaceRefs.get(0));\n\n        DocumentReference reference2 = new DocumentReference(\"wiki\", Arrays.asList(\"space1\", \"space2\"), \"page\");\n        List<SpaceReference> spaceRefs2 = reference2.getSpaceReferences();\n        Assert.assertEquals(2, spaceRefs2.size());\n        Assert.assertEquals(new SpaceReference(\"space1\", new WikiReference(\"wiki\")), spaceRefs2.get(0));\n        Assert.assertEquals(new SpaceReference(\"space2\", new SpaceReference(\"space1\", new WikiReference(\"wiki\"))),\n            spaceRefs2.get(1));\n    }", "signature": "void testSpaceReferences()", "full_signature": "@Test public void testSpaceReferences()", "class_method_signature": "DocumentReferenceTest.testSpaceReferences()", "testcase": true, "constructor": false, "invocations": ["getSpaceReferences", "assertEquals", "size", "assertEquals", "get", "asList", "getSpaceReferences", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "DocumentReference", "superclass": "extends EntityReference", "interfaces": "", "fields": [], "methods": [{"identifier": "DocumentReference", "parameters": "(EntityReference reference)", "modifiers": "public", "return": "", "signature": " DocumentReference(EntityReference reference)", "full_signature": "public  DocumentReference(EntityReference reference)", "class_method_signature": "DocumentReference.DocumentReference(EntityReference reference)", "testcase": false, "constructor": true}, {"identifier": "DocumentReference", "parameters": "(String wikiName, String spaceName, String pageName)", "modifiers": "public", "return": "", "signature": " DocumentReference(String wikiName, String spaceName, String pageName)", "full_signature": "public  DocumentReference(String wikiName, String spaceName, String pageName)", "class_method_signature": "DocumentReference.DocumentReference(String wikiName, String spaceName, String pageName)", "testcase": false, "constructor": true}, {"identifier": "DocumentReference", "parameters": "(String wikiName, List<String> spaceNames, String pageName)", "modifiers": "public", "return": "", "signature": " DocumentReference(String wikiName, List<String> spaceNames, String pageName)", "full_signature": "public  DocumentReference(String wikiName, List<String> spaceNames, String pageName)", "class_method_signature": "DocumentReference.DocumentReference(String wikiName, List<String> spaceNames, String pageName)", "testcase": false, "constructor": true}, {"identifier": "DocumentReference", "parameters": "(String pageName, SpaceReference parent)", "modifiers": "public", "return": "", "signature": " DocumentReference(String pageName, SpaceReference parent)", "full_signature": "public  DocumentReference(String pageName, SpaceReference parent)", "class_method_signature": "DocumentReference.DocumentReference(String pageName, SpaceReference parent)", "testcase": false, "constructor": true}, {"identifier": "setParent", "parameters": "(EntityReference parent)", "modifiers": "@Override public", "return": "void", "signature": "void setParent(EntityReference parent)", "full_signature": "@Override public void setParent(EntityReference parent)", "class_method_signature": "DocumentReference.setParent(EntityReference parent)", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(EntityType type)", "modifiers": "@Override public", "return": "void", "signature": "void setType(EntityType type)", "full_signature": "@Override public void setType(EntityType type)", "class_method_signature": "DocumentReference.setType(EntityType type)", "testcase": false, "constructor": false}, {"identifier": "getWikiReference", "parameters": "()", "modifiers": "public", "return": "WikiReference", "signature": "WikiReference getWikiReference()", "full_signature": "public WikiReference getWikiReference()", "class_method_signature": "DocumentReference.getWikiReference()", "testcase": false, "constructor": false}, {"identifier": "setWikiReference", "parameters": "(WikiReference newWikiReference)", "modifiers": "public", "return": "void", "signature": "void setWikiReference(WikiReference newWikiReference)", "full_signature": "public void setWikiReference(WikiReference newWikiReference)", "class_method_signature": "DocumentReference.setWikiReference(WikiReference newWikiReference)", "testcase": false, "constructor": false}, {"identifier": "getLastSpaceReference", "parameters": "()", "modifiers": "public", "return": "SpaceReference", "signature": "SpaceReference getLastSpaceReference()", "full_signature": "public SpaceReference getLastSpaceReference()", "class_method_signature": "DocumentReference.getLastSpaceReference()", "testcase": false, "constructor": false}, {"identifier": "getSpaceReferences", "parameters": "()", "modifiers": "public", "return": "List<SpaceReference>", "signature": "List<SpaceReference> getSpaceReferences()", "full_signature": "public List<SpaceReference> getSpaceReferences()", "class_method_signature": "DocumentReference.getSpaceReferences()", "testcase": false, "constructor": false}, {"identifier": "constructSpaceReference", "parameters": "(String wikiName, List<String> spaceNames)", "modifiers": "private static final", "return": "EntityReference", "signature": "EntityReference constructSpaceReference(String wikiName, List<String> spaceNames)", "full_signature": "private static final EntityReference constructSpaceReference(String wikiName, List<String> spaceNames)", "class_method_signature": "DocumentReference.constructSpaceReference(String wikiName, List<String> spaceNames)", "testcase": false, "constructor": false}], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/main/java/org/xwiki/model/reference/DocumentReference.java"}, "focal_method": {"identifier": "getSpaceReferences", "parameters": "()", "modifiers": "public", "return": "List<SpaceReference>", "body": "public List<SpaceReference> getSpaceReferences()\n    {\n        List<SpaceReference> references = new ArrayList<SpaceReference>();\n\n        EntityReference reference = this;\n        while (reference != null) {\n            if (reference.getType() == EntityType.SPACE) {\n                references.add((SpaceReference) reference);\n            }\n            reference = reference.getParent();\n        }\n        // Reverse the array so that the last entry is the parent of the Document Reference\n        Collections.reverse(references);\n\n        return references;\n    }", "signature": "List<SpaceReference> getSpaceReferences()", "full_signature": "public List<SpaceReference> getSpaceReferences()", "class_method_signature": "DocumentReference.getSpaceReferences()", "testcase": false, "constructor": false, "invocations": ["getType", "add", "getParent", "reverse"]}, "repository": {"repo_id": 2199098, "url": "https://github.com/xwiki-contrib/sandbox", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 8, "size": 14798, "license": "licensed"}}