{"test_class": {"identifier": "SharedUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "umlet-elements/src/test/java/com/baselet/control/SharedUtilsTest.java"}, "test_case": {"identifier": "testRealignToGridRoundToNearest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRealignToGridRoundToNearest() {\n\t\tassertEquals(10, SharedUtils.realignToGridRoundToNearest(false, 5.0));\n\t\tassertEquals(10, SharedUtils.realignToGridRoundToNearest(false, 9.0));\n\t\tassertEquals(0, SharedUtils.realignToGridRoundToNearest(false, 4.0));\n\t\tassertEquals(-10, SharedUtils.realignToGridRoundToNearest(false, -5.0));\n\t\tassertEquals(-10, SharedUtils.realignToGridRoundToNearest(false, -9.0));\n\t\tassertEquals(0, SharedUtils.realignToGridRoundToNearest(false, -3.0));\n\t\tassertEquals(0, SharedUtils.realignToGridRoundToNearest(false, 0));\n\t}", "signature": "void testRealignToGridRoundToNearest()", "full_signature": "@Test public void testRealignToGridRoundToNearest()", "class_method_signature": "SharedUtilsTest.testRealignToGridRoundToNearest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest", "assertEquals", "realignToGridRoundToNearest"]}, "focal_class": {"identifier": "SharedUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SharedUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SharedUtils.class)", "var_name": "log"}], "methods": [{"identifier": "realignToGrid", "parameters": "(double d)", "modifiers": "public static", "return": "int", "signature": "int realignToGrid(double d)", "full_signature": "public static int realignToGrid(double d)", "class_method_signature": "SharedUtils.realignToGrid(double d)", "testcase": false, "constructor": false}, {"identifier": "realignToGrid", "parameters": "(Rectangle rectangle, boolean realignHeightAndWidth)", "modifiers": "public static", "return": "Rectangle", "signature": "Rectangle realignToGrid(Rectangle rectangle, boolean realignHeightAndWidth)", "full_signature": "public static Rectangle realignToGrid(Rectangle rectangle, boolean realignHeightAndWidth)", "class_method_signature": "SharedUtils.realignToGrid(Rectangle rectangle, boolean realignHeightAndWidth)", "testcase": false, "constructor": false}, {"identifier": "realignToGridRoundToNearest", "parameters": "(boolean logRealign, double val)", "modifiers": "public static", "return": "int", "signature": "int realignToGridRoundToNearest(boolean logRealign, double val)", "full_signature": "public static int realignToGridRoundToNearest(boolean logRealign, double val)", "class_method_signature": "SharedUtils.realignToGridRoundToNearest(boolean logRealign, double val)", "testcase": false, "constructor": false}, {"identifier": "realignToGrid", "parameters": "(boolean logRealign, double val, boolean roundUp)", "modifiers": "public static", "return": "int", "signature": "int realignToGrid(boolean logRealign, double val, boolean roundUp)", "full_signature": "public static int realignToGrid(boolean logRealign, double val, boolean roundUp)", "class_method_signature": "SharedUtils.realignToGrid(boolean logRealign, double val, boolean roundUp)", "testcase": false, "constructor": false}, {"identifier": "realignTo", "parameters": "(boolean logRealign, double val, boolean roundUp, int gridSize)", "modifiers": "public static", "return": "int", "signature": "int realignTo(boolean logRealign, double val, boolean roundUp, int gridSize)", "full_signature": "public static int realignTo(boolean logRealign, double val, boolean roundUp, int gridSize)", "class_method_signature": "SharedUtils.realignTo(boolean logRealign, double val, boolean roundUp, int gridSize)", "testcase": false, "constructor": false}, {"identifier": "listToString", "parameters": "(String sep, Collection<?> list)", "modifiers": "public static", "return": "String", "signature": "String listToString(String sep, Collection<?> list)", "full_signature": "public static String listToString(String sep, Collection<?> list)", "class_method_signature": "SharedUtils.listToString(String sep, Collection<?> list)", "testcase": false, "constructor": false}, {"identifier": "listToStringHelper", "parameters": "(StringBuilder sb, String sep, Collection<?> list)", "modifiers": "private static", "return": "StringBuilder", "signature": "StringBuilder listToStringHelper(StringBuilder sb, String sep, Collection<?> list)", "full_signature": "private static StringBuilder listToStringHelper(StringBuilder sb, String sep, Collection<?> list)", "class_method_signature": "SharedUtils.listToStringHelper(StringBuilder sb, String sep, Collection<?> list)", "testcase": false, "constructor": false}, {"identifier": "mapToString", "parameters": "(Map<?, ?> map)", "modifiers": "public static", "return": "String", "signature": "String mapToString(Map<?, ?> map)", "full_signature": "public static String mapToString(Map<?, ?> map)", "class_method_signature": "SharedUtils.mapToString(Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "mapToString", "parameters": "(String mapSep, String listSep, Map<?, ?> map)", "modifiers": "public static", "return": "String", "signature": "String mapToString(String mapSep, String listSep, Map<?, ?> map)", "full_signature": "public static String mapToString(String mapSep, String listSep, Map<?, ?> map)", "class_method_signature": "SharedUtils.mapToString(String mapSep, String listSep, Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "mergeLists", "parameters": "(List<T> listA, List<T> listB, List<T> listC)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> mergeLists(List<T> listA, List<T> listB, List<T> listC)", "full_signature": "public static List<T> mergeLists(List<T> listA, List<T> listB, List<T> listC)", "class_method_signature": "SharedUtils.mergeLists(List<T> listA, List<T> listB, List<T> listC)", "testcase": false, "constructor": false}, {"identifier": "cloneArray", "parameters": "(Double[][] src)", "modifiers": "public static", "return": "Double[][]", "signature": "Double[][] cloneArray(Double[][] src)", "full_signature": "public static Double[][] cloneArray(Double[][] src)", "class_method_signature": "SharedUtils.cloneArray(Double[][] src)", "testcase": false, "constructor": false}, {"identifier": "cloneArray", "parameters": "(String[] src)", "modifiers": "public static", "return": "String[]", "signature": "String[] cloneArray(String[] src)", "full_signature": "public static String[] cloneArray(String[] src)", "class_method_signature": "SharedUtils.cloneArray(String[] src)", "testcase": false, "constructor": false}, {"identifier": "cloneArray", "parameters": "(int[] src)", "modifiers": "public static", "return": "int[]", "signature": "int[] cloneArray(int[] src)", "full_signature": "public static int[] cloneArray(int[] src)", "class_method_signature": "SharedUtils.cloneArray(int[] src)", "testcase": false, "constructor": false}, {"identifier": "splitAtLineEndChar", "parameters": "(String text)", "modifiers": "public static", "return": "String[]", "signature": "String[] splitAtLineEndChar(String text)", "full_signature": "public static String[] splitAtLineEndChar(String text)", "class_method_signature": "SharedUtils.splitAtLineEndChar(String text)", "testcase": false, "constructor": false}], "file": "umlet-elements/src/main/java/com/baselet/control/SharedUtils.java"}, "focal_method": {"identifier": "realignToGridRoundToNearest", "parameters": "(boolean logRealign, double val)", "modifiers": "public static", "return": "int", "body": "public static int realignToGridRoundToNearest(boolean logRealign, double val) {\n\t\tboolean roundUp;\n\t\tif (Math.abs(val % SharedConstants.DEFAULT_GRID_SIZE) < SharedConstants.DEFAULT_GRID_SIZE / 2) {\n\t\t\troundUp = val < 0;\n\t\t}\n\t\telse {\n\t\t\troundUp = val >= 0;\n\t\t}\n\t\treturn realignTo(logRealign, val, roundUp, SharedConstants.DEFAULT_GRID_SIZE);\n\t}", "signature": "int realignToGridRoundToNearest(boolean logRealign, double val)", "full_signature": "public static int realignToGridRoundToNearest(boolean logRealign, double val)", "class_method_signature": "SharedUtils.realignToGridRoundToNearest(boolean logRealign, double val)", "testcase": false, "constructor": false, "invocations": ["abs", "realignTo"]}, "repository": {"repo_id": 32446940, "url": "https://github.com/umlet/umlet", "language": "Java", "is_fork": false, "fork_count": 207, "stargazer_count": 848, "size": 59577, "license": "GNU General Public License v3.0"}}