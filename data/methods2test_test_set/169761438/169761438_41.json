{"test_class": {"identifier": "OadrSecurityRoleServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n\tprivate DigestAuthenticationProvider digestAuthenticationProvider;", "modifier": "@Resource\n\tprivate", "type": "DigestAuthenticationProvider", "declarator": "digestAuthenticationProvider", "var_name": "digestAuthenticationProvider"}, {"original_string": "@Resource\n\tprivate OadrSecurityRoleService oadrSecurityRoleService;", "modifier": "@Resource\n\tprivate", "type": "OadrSecurityRoleService", "declarator": "oadrSecurityRoleService", "var_name": "oadrSecurityRoleService"}, {"original_string": "@Resource\n\tprivate OadrUserService oadrUserService;", "modifier": "@Resource\n\tprivate", "type": "OadrUserService", "declarator": "oadrUserService", "var_name": "oadrUserService"}, {"original_string": "@Resource\n\tprivate OadrAppService oadrAppService;", "modifier": "@Resource\n\tprivate", "type": "OadrAppService", "declarator": "oadrAppService", "var_name": "oadrAppService"}, {"original_string": "@Resource\n\tprivate VenService venService;", "modifier": "@Resource\n\tprivate", "type": "VenService", "declarator": "venService", "var_name": "venService"}, {"original_string": "@Resource\n\tprivate VtnConfig vtnConfig;", "modifier": "@Resource\n\tprivate", "type": "VtnConfig", "declarator": "vtnConfig", "var_name": "vtnConfig"}, {"original_string": "private OadrUser adminUser = null;", "modifier": "private", "type": "OadrUser", "declarator": "adminUser = null", "var_name": "adminUser"}, {"original_string": "private OadrUser passwordUser = null;", "modifier": "private", "type": "OadrUser", "declarator": "passwordUser = null", "var_name": "passwordUser"}, {"original_string": "private OadrApp appUser = null;", "modifier": "private", "type": "OadrApp", "declarator": "appUser = null", "var_name": "appUser"}, {"original_string": "private Ven venUser = null;", "modifier": "private", "type": "Ven", "declarator": "venUser = null", "var_name": "venUser"}, {"original_string": "private Ven venX509 = null;", "modifier": "private", "type": "Ven", "declarator": "venX509 = null", "var_name": "venX509"}], "file": "OpenADRServerVTNCommon/src/test/java/com/avob/openadr/server/common/vtn/security/OadrSecurityRoleServiceTest.java"}, "test_case": {"identifier": "grantX509RoleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void grantX509RoleTest() throws OadrSecurityException {\n\t\tX509Certificate cert = OadrPKISecurity.parseCertificate(\"src/test/resources/cert/test.crt\");\n\t\tString fingerprint = OadrFingerprintSecurity.getOadr20bFingerprint(cert);\n\t\tUser grantX509Role = oadrSecurityRoleService.grantX509Role(fingerprint);\n\t\tList<GrantedAuthority> authorities = new ArrayList<>(grantX509Role.getAuthorities());\n\t\tassertEquals(1, authorities.size());\n\t\tassertEquals(\"ROLE_VEN\", authorities.get(0).getAuthority());\n\n\t\tvenX509.setRegistrationId(\"registrationId\");\n\t\tvenService.save(venX509);\n\n\t\tgrantX509Role = oadrSecurityRoleService.grantX509Role(fingerprint);\n\t\tauthorities = new ArrayList<>(grantX509Role.getAuthorities());\n\t\tassertEquals(2, authorities.size());\n\t\tassertTrue(authorities.get(1).getAuthority().equals(\"ROLE_VEN\")\n\t\t\t\t|| authorities.get(1).getAuthority().equals(\"ROLE_REGISTERED\"));\n\t\tassertTrue(authorities.get(0).getAuthority().equals(\"ROLE_VEN\")\n\t\t\t\t|| authorities.get(0).getAuthority().equals(\"ROLE_REGISTERED\"));\n\n\t\tgrantX509Role = oadrSecurityRoleService.grantX509Role(vtnConfig.getOadr20bFingerprint());\n\t\tauthorities = new ArrayList<>(grantX509Role.getAuthorities());\n\t\tassertEquals(1, authorities.size());\n\t\tassertEquals(\"ROLE_VTN\", authorities.get(0).getAuthority());\n\n\t\tboolean exception = false;\n\t\ttry {\n\t\t\toadrSecurityRoleService.grantX509Role(\"mouaiccool\");\n\t\t} catch (Exception e) {\n\t\t\texception = true;\n\t\t}\n\t\tassertTrue(exception);\n\t}", "signature": "void grantX509RoleTest()", "full_signature": "@Test public void grantX509RoleTest()", "class_method_signature": "OadrSecurityRoleServiceTest.grantX509RoleTest()", "testcase": true, "constructor": false, "invocations": ["parseCertificate", "getOadr20bFingerprint", "grantX509Role", "getAuthorities", "assertEquals", "size", "assertEquals", "getAuthority", "get", "setRegistrationId", "save", "grantX509Role", "getAuthorities", "assertEquals", "size", "assertTrue", "equals", "getAuthority", "get", "equals", "getAuthority", "get", "assertTrue", "equals", "getAuthority", "get", "equals", "getAuthority", "get", "grantX509Role", "getOadr20bFingerprint", "getAuthorities", "assertEquals", "size", "assertEquals", "getAuthority", "get", "grantX509Role", "assertTrue"]}, "focal_class": {"identifier": "OadrSecurityRoleService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n\tprivate VtnConfig vtnConfig;", "modifier": "@Resource\n\tprivate", "type": "VtnConfig", "declarator": "vtnConfig", "var_name": "vtnConfig"}, {"original_string": "@Resource\n\tprivate AbstractUserDao abstractUserDao;", "modifier": "@Resource\n\tprivate", "type": "AbstractUserDao", "declarator": "abstractUserDao", "var_name": "abstractUserDao"}, {"original_string": "private BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();", "modifier": "private", "type": "BCryptPasswordEncoder", "declarator": "encoder = new BCryptPasswordEncoder()", "var_name": "encoder"}], "methods": [{"identifier": "digestUserDetail", "parameters": "(String username)", "modifiers": "public", "return": "User", "signature": "User digestUserDetail(String username)", "full_signature": "public User digestUserDetail(String username)", "class_method_signature": "OadrSecurityRoleService.digestUserDetail(String username)", "testcase": false, "constructor": false}, {"identifier": "grantDigestRole", "parameters": "(String username, String password)", "modifiers": "public", "return": "User", "signature": "User grantDigestRole(String username, String password)", "full_signature": "public User grantDigestRole(String username, String password)", "class_method_signature": "OadrSecurityRoleService.grantDigestRole(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "grantBasicRole", "parameters": "(String username, CharSequence rawPassword)", "modifiers": "public", "return": "User", "signature": "User grantBasicRole(String username, CharSequence rawPassword)", "full_signature": "public User grantBasicRole(String username, CharSequence rawPassword)", "class_method_signature": "OadrSecurityRoleService.grantBasicRole(String username, CharSequence rawPassword)", "testcase": false, "constructor": false}, {"identifier": "grantX509Role", "parameters": "(String username)", "modifiers": "public", "return": "User", "signature": "User grantX509Role(String username)", "full_signature": "public User grantX509Role(String username)", "class_method_signature": "OadrSecurityRoleService.grantX509Role(String username)", "testcase": false, "constructor": false}, {"identifier": "saveFindUser", "parameters": "(String username)", "modifiers": "private", "return": "AbstractUser", "signature": "AbstractUser saveFindUser(String username)", "full_signature": "private AbstractUser saveFindUser(String username)", "class_method_signature": "OadrSecurityRoleService.saveFindUser(String username)", "testcase": false, "constructor": false}, {"identifier": "grantRole", "parameters": "(AbstractUser abstractUser, String password)", "modifiers": "private", "return": "User", "signature": "User grantRole(AbstractUser abstractUser, String password)", "full_signature": "private User grantRole(AbstractUser abstractUser, String password)", "class_method_signature": "OadrSecurityRoleService.grantRole(AbstractUser abstractUser, String password)", "testcase": false, "constructor": false}], "file": "OpenADRServerVTNCommon/src/main/java/com/avob/openadr/server/common/vtn/security/OadrSecurityRoleService.java"}, "focal_method": {"identifier": "grantX509Role", "parameters": "(String username)", "modifiers": "public", "return": "User", "body": "public User grantX509Role(String username) {\n\n\t\tif (username.equals(vtnConfig.getOadr20bFingerprint())) {\n\t\t\treturn new User(username, \"\", Lists.newArrayList(new SimpleGrantedAuthority(\"ROLE_VTN\")));\n\t\t}\n\t\treturn this.grantRole(saveFindUser(username), \"\");\n\t}", "signature": "User grantX509Role(String username)", "full_signature": "public User grantX509Role(String username)", "class_method_signature": "OadrSecurityRoleService.grantX509Role(String username)", "testcase": false, "constructor": false, "invocations": ["equals", "getOadr20bFingerprint", "newArrayList", "grantRole", "saveFindUser"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}