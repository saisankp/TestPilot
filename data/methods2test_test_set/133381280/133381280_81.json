{"test_class": {"identifier": "ClassUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-common/src/test/java/com/alipay/lookout/common/utils/ClassUtilTest.java"}, "test_case": {"identifier": "testNewInstanceException", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testNewInstanceException() {\n        ClassUtil.newInstance(ArrayList.class.getName() + \"x\", null, null);\n    }", "signature": "void testNewInstanceException()", "full_signature": "@Test(expected = IllegalStateException.class) public void testNewInstanceException()", "class_method_signature": "ClassUtilTest.testNewInstanceException()", "testcase": true, "constructor": false, "invocations": ["newInstance", "getName"]}, "focal_class": {"identifier": "ClassUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ClassUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ClassUtil()", "full_signature": "private  ClassUtil()", "class_method_signature": "ClassUtil.ClassUtil()", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(String className, Class[] argTyps, Object[] args)", "modifiers": "public static", "return": "T", "signature": "T newInstance(String className, Class[] argTyps, Object[] args)", "full_signature": "public static T newInstance(String className, Class[] argTyps, Object[] args)", "class_method_signature": "ClassUtil.newInstance(String className, Class[] argTyps, Object[] args)", "testcase": false, "constructor": false}], "file": "client/lookout-common/src/main/java/com/alipay/lookout/common/utils/ClassUtil.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(String className, Class[] argTyps, Object[] args)", "modifiers": "public static", "return": "T", "body": "public static <T> T newInstance(String className, Class[] argTyps, Object[] args) {\n        try {\n            Class clazz = ClassUtil.class.getClassLoader().loadClass(className);\n            Constructor constructor = clazz.getConstructor(argTyps);\n            return (T) constructor.newInstance(args);\n        } catch (Throwable e) {\n            throw new IllegalStateException(\"new an instance of \" + className + \" err!\", e);\n        }\n    }", "signature": "T newInstance(String className, Class[] argTyps, Object[] args)", "full_signature": "public static T newInstance(String className, Class[] argTyps, Object[] args)", "class_method_signature": "ClassUtil.newInstance(String className, Class[] argTyps, Object[] args)", "testcase": false, "constructor": false, "invocations": ["loadClass", "getClassLoader", "getConstructor", "newInstance"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}