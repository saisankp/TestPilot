{"test_class": {"identifier": "CountFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CountFunction countFunction;", "modifier": "private", "type": "CountFunction", "declarator": "countFunction", "var_name": "countFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/CountFunctionTest.java"}, "test_case": {"identifier": "invokeParamListEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeParamListEmpty() {\n        FunctionTestUtil.assertResult(countFunction.invoke(Collections.emptyList()), BigDecimal.ZERO);\n    }", "signature": "void invokeParamListEmpty()", "full_signature": "@Test public void invokeParamListEmpty()", "class_method_signature": "CountFunctionTest.invokeParamListEmpty()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "emptyList"]}, "focal_class": {"identifier": "CountFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "CountFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " CountFunction()", "full_signature": "public  CountFunction()", "class_method_signature": "CountFunction.CountFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list)", "modifiers": "public", "return": "FEELFnResult<BigDecimal>", "signature": "FEELFnResult<BigDecimal> invoke(@ParameterName( \"list\" ) List list)", "full_signature": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"list\" ) List list)", "class_method_signature": "CountFunction.invoke(@ParameterName( \"list\" ) List list)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName( \"c\" ) Object[] list)", "modifiers": "public", "return": "FEELFnResult<BigDecimal>", "signature": "FEELFnResult<BigDecimal> invoke(@ParameterName( \"c\" ) Object[] list)", "full_signature": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"c\" ) Object[] list)", "class_method_signature": "CountFunction.invoke(@ParameterName( \"c\" ) Object[] list)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/CountFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list)", "modifiers": "public", "return": "FEELFnResult<BigDecimal>", "body": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"list\" ) List list) {\n        if ( list == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"list\", \"cannot be null\"));\n        }\n        \n        return FEELFnResult.ofResult( BigDecimal.valueOf( list.size() ) );\n    }", "signature": "FEELFnResult<BigDecimal> invoke(@ParameterName( \"list\" ) List list)", "full_signature": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"list\" ) List list)", "class_method_signature": "CountFunction.invoke(@ParameterName( \"list\" ) List list)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofResult", "valueOf", "size"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}