{"test_class": {"identifier": "TPSMutatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<TPS> testData;", "modifier": "private static", "type": "List<TPS>", "declarator": "testData", "var_name": "testData"}, {"original_string": "private static long time;", "modifier": "private static", "type": "long", "declarator": "time", "var_name": "time"}], "file": "Plan/common/src/test/java/com/djrapitops/plan/delivery/domain/mutators/TPSMutatorTest.java"}, "test_case": {"identifier": "noDowntimeIsCorrect", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void noDowntimeIsCorrect() {\n        long expected = 0;\n        long result = new TPSMutator(testData).serverDownTime();\n        assertEquals(expected, result);\n    }", "signature": "void noDowntimeIsCorrect()", "full_signature": "@Test void noDowntimeIsCorrect()", "class_method_signature": "TPSMutatorTest.noDowntimeIsCorrect()", "testcase": true, "constructor": false, "invocations": ["serverDownTime", "assertEquals"]}, "focal_class": {"identifier": "TPSMutator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<TPS> tpsData;", "modifier": "private final", "type": "List<TPS>", "declarator": "tpsData", "var_name": "tpsData"}], "methods": [{"identifier": "TPSMutator", "parameters": "(List<TPS> tpsData)", "modifiers": "public", "return": "", "signature": " TPSMutator(List<TPS> tpsData)", "full_signature": "public  TPSMutator(List<TPS> tpsData)", "class_method_signature": "TPSMutator.TPSMutator(List<TPS> tpsData)", "testcase": false, "constructor": true}, {"identifier": "forContainer", "parameters": "(DataContainer container)", "modifiers": "public static", "return": "TPSMutator", "signature": "TPSMutator forContainer(DataContainer container)", "full_signature": "public static TPSMutator forContainer(DataContainer container)", "class_method_signature": "TPSMutator.forContainer(DataContainer container)", "testcase": false, "constructor": false}, {"identifier": "copyOf", "parameters": "(TPSMutator mutator)", "modifiers": "public static", "return": "TPSMutator", "signature": "TPSMutator copyOf(TPSMutator mutator)", "full_signature": "public static TPSMutator copyOf(TPSMutator mutator)", "class_method_signature": "TPSMutator.copyOf(TPSMutator mutator)", "testcase": false, "constructor": false}, {"identifier": "filterBy", "parameters": "(Predicate<TPS> filter)", "modifiers": "public", "return": "TPSMutator", "signature": "TPSMutator filterBy(Predicate<TPS> filter)", "full_signature": "public TPSMutator filterBy(Predicate<TPS> filter)", "class_method_signature": "TPSMutator.filterBy(Predicate<TPS> filter)", "testcase": false, "constructor": false}, {"identifier": "filterDataBetween", "parameters": "(long after, long before)", "modifiers": "public", "return": "TPSMutator", "signature": "TPSMutator filterDataBetween(long after, long before)", "full_signature": "public TPSMutator filterDataBetween(long after, long before)", "class_method_signature": "TPSMutator.filterDataBetween(long after, long before)", "testcase": false, "constructor": false}, {"identifier": "filterTPSBetween", "parameters": "(int above, int below)", "modifiers": "public", "return": "TPSMutator", "signature": "TPSMutator filterTPSBetween(int above, int below)", "full_signature": "public TPSMutator filterTPSBetween(int above, int below)", "class_method_signature": "TPSMutator.filterTPSBetween(int above, int below)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public", "return": "List<TPS>", "signature": "List<TPS> all()", "full_signature": "public List<TPS> all()", "class_method_signature": "TPSMutator.all()", "testcase": false, "constructor": false}, {"identifier": "playersOnlinePoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> playersOnlinePoints()", "full_signature": "public List<Point> playersOnlinePoints()", "class_method_signature": "TPSMutator.playersOnlinePoints()", "testcase": false, "constructor": false}, {"identifier": "tpsPoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> tpsPoints()", "full_signature": "public List<Point> tpsPoints()", "class_method_signature": "TPSMutator.tpsPoints()", "testcase": false, "constructor": false}, {"identifier": "cpuPoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> cpuPoints()", "full_signature": "public List<Point> cpuPoints()", "class_method_signature": "TPSMutator.cpuPoints()", "testcase": false, "constructor": false}, {"identifier": "ramUsagePoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> ramUsagePoints()", "full_signature": "public List<Point> ramUsagePoints()", "class_method_signature": "TPSMutator.ramUsagePoints()", "testcase": false, "constructor": false}, {"identifier": "entityPoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> entityPoints()", "full_signature": "public List<Point> entityPoints()", "class_method_signature": "TPSMutator.entityPoints()", "testcase": false, "constructor": false}, {"identifier": "chunkPoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> chunkPoints()", "full_signature": "public List<Point> chunkPoints()", "class_method_signature": "TPSMutator.chunkPoints()", "testcase": false, "constructor": false}, {"identifier": "freeDiskPoints", "parameters": "()", "modifiers": "public", "return": "List<Point>", "signature": "List<Point> freeDiskPoints()", "full_signature": "public List<Point> freeDiskPoints()", "class_method_signature": "TPSMutator.freeDiskPoints()", "testcase": false, "constructor": false}, {"identifier": "serverDownTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long serverDownTime()", "full_signature": "public long serverDownTime()", "class_method_signature": "TPSMutator.serverDownTime()", "testcase": false, "constructor": false}, {"identifier": "serverOccupiedTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long serverOccupiedTime()", "full_signature": "public long serverOccupiedTime()", "class_method_signature": "TPSMutator.serverOccupiedTime()", "testcase": false, "constructor": false}, {"identifier": "percentageTPSAboveThreshold", "parameters": "(int threshold)", "modifiers": "public", "return": "double", "signature": "double percentageTPSAboveThreshold(int threshold)", "full_signature": "public double percentageTPSAboveThreshold(int threshold)", "class_method_signature": "TPSMutator.percentageTPSAboveThreshold(int threshold)", "testcase": false, "constructor": false}, {"identifier": "lowTpsSpikeCount", "parameters": "(int threshold)", "modifiers": "public", "return": "int", "signature": "int lowTpsSpikeCount(int threshold)", "full_signature": "public int lowTpsSpikeCount(int threshold)", "class_method_signature": "TPSMutator.lowTpsSpikeCount(int threshold)", "testcase": false, "constructor": false}, {"identifier": "averageTPS", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageTPS()", "full_signature": "public double averageTPS()", "class_method_signature": "TPSMutator.averageTPS()", "testcase": false, "constructor": false}, {"identifier": "averageCPU", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageCPU()", "full_signature": "public double averageCPU()", "class_method_signature": "TPSMutator.averageCPU()", "testcase": false, "constructor": false}, {"identifier": "averageRAM", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageRAM()", "full_signature": "public double averageRAM()", "class_method_signature": "TPSMutator.averageRAM()", "testcase": false, "constructor": false}, {"identifier": "averageEntities", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageEntities()", "full_signature": "public double averageEntities()", "class_method_signature": "TPSMutator.averageEntities()", "testcase": false, "constructor": false}, {"identifier": "averageChunks", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageChunks()", "full_signature": "public double averageChunks()", "class_method_signature": "TPSMutator.averageChunks()", "testcase": false, "constructor": false}, {"identifier": "averageFreeDisk", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averageFreeDisk()", "full_signature": "public double averageFreeDisk()", "class_method_signature": "TPSMutator.averageFreeDisk()", "testcase": false, "constructor": false}, {"identifier": "maxFreeDisk", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long maxFreeDisk()", "full_signature": "public long maxFreeDisk()", "class_method_signature": "TPSMutator.maxFreeDisk()", "testcase": false, "constructor": false}, {"identifier": "minFreeDisk", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long minFreeDisk()", "full_signature": "public long minFreeDisk()", "class_method_signature": "TPSMutator.minFreeDisk()", "testcase": false, "constructor": false}, {"identifier": "averagePlayersOnline", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double averagePlayersOnline()", "full_signature": "public double averagePlayersOnline()", "class_method_signature": "TPSMutator.averagePlayersOnline()", "testcase": false, "constructor": false}, {"identifier": "getLast", "parameters": "()", "modifiers": "public", "return": "Optional<TPS>", "signature": "Optional<TPS> getLast()", "full_signature": "public Optional<TPS> getLast()", "class_method_signature": "TPSMutator.getLast()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/delivery/domain/mutators/TPSMutator.java"}, "focal_method": {"identifier": "serverDownTime", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long serverDownTime() {\n        long lastDate = -1;\n        long downTime = 0;\n        tpsData.sort(new TPSComparator());\n        for (TPS tps : tpsData) {\n            long date = tps.getDate();\n            if (lastDate == -1) {\n                lastDate = date;\n                continue;\n            }\n\n            long diff = date - lastDate;\n            if (diff > TimeUnit.MINUTES.toMillis(3L)) {\n                downTime += diff;\n            }\n            lastDate = date;\n        }\n\n        return downTime;\n    }", "signature": "long serverDownTime()", "full_signature": "public long serverDownTime()", "class_method_signature": "TPSMutator.serverDownTime()", "testcase": false, "constructor": false, "invocations": ["sort", "getDate", "toMillis"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}