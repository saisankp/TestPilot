{"test_class": {"identifier": "SslContextFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "ch-commons-ssl/src/test/java/com/cloudhopper/commons/ssl/SslContextFactoryTest.java"}, "test_case": {"identifier": "testNoTsNoKs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoTsNoKs() throws Exception {\n\tSslConfiguration cf = new SslConfiguration();\n\tSslContextFactory factory = new SslContextFactory(cf);\n        Assert.assertTrue(factory.getSslContext() != null);\n    }", "signature": "void testNoTsNoKs()", "full_signature": "@Test public void testNoTsNoKs()", "class_method_signature": "SslContextFactoryTest.testNoTsNoKs()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getSslContext"]}, "focal_class": {"identifier": "SslContextFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SslContextFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SslContextFactory.class)", "var_name": "logger"}, {"original_string": "private SSLContext sslContext;", "modifier": "private", "type": "SSLContext", "declarator": "sslContext", "var_name": "sslContext"}, {"original_string": "private InputStream keyStoreInputStream;", "modifier": "private", "type": "InputStream", "declarator": "keyStoreInputStream", "var_name": "keyStoreInputStream"}, {"original_string": "private InputStream trustStoreInputStream;", "modifier": "private", "type": "InputStream", "declarator": "trustStoreInputStream", "var_name": "trustStoreInputStream"}, {"original_string": "private final SslConfiguration sslConfig;", "modifier": "private final", "type": "SslConfiguration", "declarator": "sslConfig", "var_name": "sslConfig"}], "methods": [{"identifier": "SslContextFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " SslContextFactory()", "full_signature": "public  SslContextFactory()", "class_method_signature": "SslContextFactory.SslContextFactory()", "testcase": false, "constructor": true}, {"identifier": "SslContextFactory", "parameters": "(SslConfiguration sslConfig)", "modifiers": "public", "return": "", "signature": " SslContextFactory(SslConfiguration sslConfig)", "full_signature": "public  SslContextFactory(SslConfiguration sslConfig)", "class_method_signature": "SslContextFactory.SslContextFactory(SslConfiguration sslConfig)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "SslContextFactory.init()", "testcase": false, "constructor": false}, {"identifier": "getSslContext", "parameters": "()", "modifiers": "public", "return": "SSLContext", "signature": "SSLContext getSslContext()", "full_signature": "public SSLContext getSslContext()", "class_method_signature": "SslContextFactory.getSslContext()", "testcase": false, "constructor": false}, {"identifier": "loadKeyStore", "parameters": "()", "modifiers": "protected", "return": "KeyStore", "signature": "KeyStore loadKeyStore()", "full_signature": "protected KeyStore loadKeyStore()", "class_method_signature": "SslContextFactory.loadKeyStore()", "testcase": false, "constructor": false}, {"identifier": "loadTrustStore", "parameters": "()", "modifiers": "protected", "return": "KeyStore", "signature": "KeyStore loadTrustStore()", "full_signature": "protected KeyStore loadTrustStore()", "class_method_signature": "SslContextFactory.loadTrustStore()", "testcase": false, "constructor": false}, {"identifier": "loadCRL", "parameters": "(String crlPath)", "modifiers": "protected", "return": "Collection<? extends CRL>", "signature": "Collection<? extends CRL> loadCRL(String crlPath)", "full_signature": "protected Collection<? extends CRL> loadCRL(String crlPath)", "class_method_signature": "SslContextFactory.loadCRL(String crlPath)", "testcase": false, "constructor": false}, {"identifier": "getKeyStore", "parameters": "(InputStream storeStream, String storePath, String storeType, String storeProvider, String storePassword)", "modifiers": "protected", "return": "KeyStore", "signature": "KeyStore getKeyStore(InputStream storeStream, String storePath, String storeType, String storeProvider, String storePassword)", "full_signature": "protected KeyStore getKeyStore(InputStream storeStream, String storePath, String storeType, String storeProvider, String storePassword)", "class_method_signature": "SslContextFactory.getKeyStore(InputStream storeStream, String storePath, String storeType, String storeProvider, String storePassword)", "testcase": false, "constructor": false}, {"identifier": "getKeyManagers", "parameters": "(KeyStore keyStore)", "modifiers": "protected", "return": "KeyManager[]", "signature": "KeyManager[] getKeyManagers(KeyStore keyStore)", "full_signature": "protected KeyManager[] getKeyManagers(KeyStore keyStore)", "class_method_signature": "SslContextFactory.getKeyManagers(KeyStore keyStore)", "testcase": false, "constructor": false}, {"identifier": "getTrustManagers", "parameters": "(KeyStore trustStore, Collection<? extends CRL> crls)", "modifiers": "protected", "return": "TrustManager[]", "signature": "TrustManager[] getTrustManagers(KeyStore trustStore, Collection<? extends CRL> crls)", "full_signature": "protected TrustManager[] getTrustManagers(KeyStore trustStore, Collection<? extends CRL> crls)", "class_method_signature": "SslContextFactory.getTrustManagers(KeyStore trustStore, Collection<? extends CRL> crls)", "testcase": false, "constructor": false}, {"identifier": "checkKeyStore", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void checkKeyStore()", "full_signature": "public void checkKeyStore()", "class_method_signature": "SslContextFactory.checkKeyStore()", "testcase": false, "constructor": false}, {"identifier": "streamCopy", "parameters": "(InputStream is, OutputStream os, byte[] buf, boolean close)", "modifiers": "private static", "return": "void", "signature": "void streamCopy(InputStream is, OutputStream os, byte[] buf, boolean close)", "full_signature": "private static void streamCopy(InputStream is, OutputStream os, byte[] buf, boolean close)", "class_method_signature": "SslContextFactory.streamCopy(InputStream is, OutputStream os, byte[] buf, boolean close)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object[] arr, Object obj)", "modifiers": "private static", "return": "boolean", "signature": "boolean contains(Object[] arr, Object obj)", "full_signature": "private static boolean contains(Object[] arr, Object obj)", "class_method_signature": "SslContextFactory.contains(Object[] arr, Object obj)", "testcase": false, "constructor": false}, {"identifier": "selectProtocols", "parameters": "(String[] enabledProtocols, String[] supportedProtocols)", "modifiers": "public", "return": "String[]", "signature": "String[] selectProtocols(String[] enabledProtocols, String[] supportedProtocols)", "full_signature": "public String[] selectProtocols(String[] enabledProtocols, String[] supportedProtocols)", "class_method_signature": "SslContextFactory.selectProtocols(String[] enabledProtocols, String[] supportedProtocols)", "testcase": false, "constructor": false}, {"identifier": "selectCipherSuites", "parameters": "(String[] enabledCipherSuites, String[] supportedCipherSuites)", "modifiers": "public", "return": "String[]", "signature": "String[] selectCipherSuites(String[] enabledCipherSuites, String[] supportedCipherSuites)", "full_signature": "public String[] selectCipherSuites(String[] enabledCipherSuites, String[] supportedCipherSuites)", "class_method_signature": "SslContextFactory.selectCipherSuites(String[] enabledCipherSuites, String[] supportedCipherSuites)", "testcase": false, "constructor": false}, {"identifier": "newSslServerSocket", "parameters": "(String host,int port,int backlog)", "modifiers": "public", "return": "SSLServerSocket", "signature": "SSLServerSocket newSslServerSocket(String host,int port,int backlog)", "full_signature": "public SSLServerSocket newSslServerSocket(String host,int port,int backlog)", "class_method_signature": "SslContextFactory.newSslServerSocket(String host,int port,int backlog)", "testcase": false, "constructor": false}, {"identifier": "newSslSocket", "parameters": "()", "modifiers": "public", "return": "SSLSocket", "signature": "SSLSocket newSslSocket()", "full_signature": "public SSLSocket newSslSocket()", "class_method_signature": "SslContextFactory.newSslSocket()", "testcase": false, "constructor": false}, {"identifier": "newSslEngine", "parameters": "(String host,int port)", "modifiers": "public", "return": "SSLEngine", "signature": "SSLEngine newSslEngine(String host,int port)", "full_signature": "public SSLEngine newSslEngine(String host,int port)", "class_method_signature": "SslContextFactory.newSslEngine(String host,int port)", "testcase": false, "constructor": false}, {"identifier": "newSslEngine", "parameters": "()", "modifiers": "public", "return": "SSLEngine", "signature": "SSLEngine newSslEngine()", "full_signature": "public SSLEngine newSslEngine()", "class_method_signature": "SslContextFactory.newSslEngine()", "testcase": false, "constructor": false}, {"identifier": "customize", "parameters": "(SSLEngine sslEngine)", "modifiers": "private", "return": "void", "signature": "void customize(SSLEngine sslEngine)", "full_signature": "private void customize(SSLEngine sslEngine)", "class_method_signature": "SslContextFactory.customize(SSLEngine sslEngine)", "testcase": false, "constructor": false}], "file": "ch-commons-ssl/src/main/java/com/cloudhopper/commons/ssl/SslContextFactory.java"}, "focal_method": {"identifier": "getSslContext", "parameters": "()", "modifiers": "public", "return": "SSLContext", "body": "public SSLContext getSslContext() {\n\treturn sslContext;\n    }", "signature": "SSLContext getSslContext()", "full_signature": "public SSLContext getSslContext()", "class_method_signature": "SslContextFactory.getSslContext()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}