{"test_class": {"identifier": "VectorGeneratorPrimitivesTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/util/generators/primitives/vector/VectorGeneratorPrimitivesTest.java"}, "test_case": {"identifier": "testRing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRing() {\n        VectorGeneratorPrimitives.ring(1., 0, 2 * Math.PI)\n            .asDataStream().unlabeled().limit(1000)\n            .forEach(v -> assertEquals(v.getLengthSquared(), 1., 1e-7));\n\n        VectorGeneratorPrimitives.ring(1., 0, Math.PI / 2)\n            .asDataStream().unlabeled().limit(1000)\n            .forEach(v -> {\n                assertTrue(v.get(0) >= 0.);\n                assertTrue(v.get(1) >= 0.);\n            });\n    }", "signature": "void testRing()", "full_signature": "@Test public void testRing()", "class_method_signature": "VectorGeneratorPrimitivesTest.testRing()", "testcase": true, "constructor": false, "invocations": ["forEach", "limit", "unlabeled", "asDataStream", "ring", "assertEquals", "getLengthSquared", "forEach", "limit", "unlabeled", "asDataStream", "ring", "assertTrue", "get", "assertTrue", "get"]}, "focal_class": {"identifier": "VectorGeneratorPrimitives", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "gauss", "parameters": "(Vector means, Vector variances, Long seed)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator gauss(Vector means, Vector variances, Long seed)", "full_signature": "public static VectorGenerator gauss(Vector means, Vector variances, Long seed)", "class_method_signature": "VectorGeneratorPrimitives.gauss(Vector means, Vector variances, Long seed)", "testcase": false, "constructor": false}, {"identifier": "gauss", "parameters": "(Vector means, Vector variances)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator gauss(Vector means, Vector variances)", "full_signature": "public static VectorGenerator gauss(Vector means, Vector variances)", "class_method_signature": "VectorGeneratorPrimitives.gauss(Vector means, Vector variances)", "testcase": false, "constructor": false}, {"identifier": "ring", "parameters": "(double radius, double fromAngle, double toAngle)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator ring(double radius, double fromAngle, double toAngle)", "full_signature": "public static VectorGenerator ring(double radius, double fromAngle, double toAngle)", "class_method_signature": "VectorGeneratorPrimitives.ring(double radius, double fromAngle, double toAngle)", "testcase": false, "constructor": false}, {"identifier": "ring", "parameters": "(double radius, double fromAngle, double toAngle, long seed)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator ring(double radius, double fromAngle, double toAngle, long seed)", "full_signature": "public static VectorGenerator ring(double radius, double fromAngle, double toAngle, long seed)", "class_method_signature": "VectorGeneratorPrimitives.ring(double radius, double fromAngle, double toAngle, long seed)", "testcase": false, "constructor": false}, {"identifier": "parallelogram", "parameters": "(Vector bounds)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator parallelogram(Vector bounds)", "full_signature": "public static VectorGenerator parallelogram(Vector bounds)", "class_method_signature": "VectorGeneratorPrimitives.parallelogram(Vector bounds)", "testcase": false, "constructor": false}, {"identifier": "parallelogram", "parameters": "(Vector bounds, long seed)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator parallelogram(Vector bounds, long seed)", "full_signature": "public static VectorGenerator parallelogram(Vector bounds, long seed)", "class_method_signature": "VectorGeneratorPrimitives.parallelogram(Vector bounds, long seed)", "testcase": false, "constructor": false}, {"identifier": "circle", "parameters": "(double radius)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator circle(double radius)", "full_signature": "public static VectorGenerator circle(double radius)", "class_method_signature": "VectorGeneratorPrimitives.circle(double radius)", "testcase": false, "constructor": false}, {"identifier": "circle", "parameters": "(double radius, long seed)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator circle(double radius, long seed)", "full_signature": "public static VectorGenerator circle(double radius, long seed)", "class_method_signature": "VectorGeneratorPrimitives.circle(double radius, long seed)", "testcase": false, "constructor": false}, {"identifier": "zero", "parameters": "(int size)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator zero(int size)", "full_signature": "public static VectorGenerator zero(int size)", "class_method_signature": "VectorGeneratorPrimitives.zero(int size)", "testcase": false, "constructor": false}, {"identifier": "constant", "parameters": "(Vector v)", "modifiers": "public static", "return": "VectorGenerator", "signature": "VectorGenerator constant(Vector v)", "full_signature": "public static VectorGenerator constant(Vector v)", "class_method_signature": "VectorGeneratorPrimitives.constant(Vector v)", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/util/generators/primitives/vector/VectorGeneratorPrimitives.java"}, "focal_method": {"identifier": "ring", "parameters": "(double radius, double fromAngle, double toAngle)", "modifiers": "public static", "return": "VectorGenerator", "body": "public static VectorGenerator ring(double radius, double fromAngle, double toAngle) {\n        return ring(radius, fromAngle, toAngle, System.currentTimeMillis());\n    }", "signature": "VectorGenerator ring(double radius, double fromAngle, double toAngle)", "full_signature": "public static VectorGenerator ring(double radius, double fromAngle, double toAngle)", "class_method_signature": "VectorGeneratorPrimitives.ring(double radius, double fromAngle, double toAngle)", "testcase": false, "constructor": false, "invocations": ["ring", "currentTimeMillis"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}