{"test_class": {"identifier": "QuerySensorHandleTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/Statistics/ScheduledQuerySensor/src/test/java/info/smart_tools/smartactors/statistics/sensors/scheduled_query_sensor/QuerySensorHandleTest.java"}, "test_case": {"identifier": "Should_cancelEntryOnSensorShutdown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_cancelEntryOnSensorShutdown()\n            throws Exception {\n        ISchedulerEntry entry = mock(ISchedulerEntry.class);\n\n        ISensorHandle handle = new QuerySensorHandle(entry);\n\n        handle.shutdown();\n\n        verify(entry).cancel();\n    }", "signature": "void Should_cancelEntryOnSensorShutdown()", "full_signature": "@Test public void Should_cancelEntryOnSensorShutdown()", "class_method_signature": "QuerySensorHandleTest.Should_cancelEntryOnSensorShutdown()", "testcase": true, "constructor": false, "invocations": ["mock", "shutdown", "cancel", "verify"]}, "focal_class": {"identifier": "QuerySensorHandle", "superclass": "", "interfaces": "implements ISensorHandle", "fields": [{"original_string": "private final ISchedulerEntry entry;", "modifier": "private final", "type": "ISchedulerEntry", "declarator": "entry", "var_name": "entry"}], "methods": [{"identifier": "QuerySensorHandle", "parameters": "(final ISchedulerEntry entry)", "modifiers": "public", "return": "", "signature": " QuerySensorHandle(final ISchedulerEntry entry)", "full_signature": "public  QuerySensorHandle(final ISchedulerEntry entry)", "class_method_signature": "QuerySensorHandle.QuerySensorHandle(final ISchedulerEntry entry)", "testcase": false, "constructor": true}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "QuerySensorHandle.shutdown()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Statistics/ScheduledQuerySensor/src/main/java/info/smart_tools/smartactors/statistics/sensors/scheduled_query_sensor/QuerySensorHandle.java"}, "focal_method": {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void shutdown() throws SensorShutdownException {\n        try {\n            entry.cancel();\n        } catch (EntryStorageAccessException | EntryScheduleException e) {\n            throw new SensorShutdownException(\"Could not cancel sensor entry.\", e);\n        }\n    }", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "QuerySensorHandle.shutdown()", "testcase": false, "constructor": false, "invocations": ["cancel"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}