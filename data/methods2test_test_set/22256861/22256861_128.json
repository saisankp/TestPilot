{"test_class": {"identifier": "SensorCoefficientManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Path auxdataDir;", "modifier": "private", "type": "Path", "declarator": "auxdataDir", "var_name": "auxdataDir"}], "file": "s3tbx-meris-smac/src/test/java/org/esa/s3tbx/smac/SensorCoefficientManagerTest.java"}, "test_case": {"identifier": "testGetCoefficientFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCoefficientFile() throws IOException {\n        SensorCoefficientManager mgr = new SensorCoefficientManager(auxdataDir.toUri().toURL());\n        assertNotNull(mgr.getCoefficientFile(\"MERIS\", \"radiance_2\", AEROSOL_TYPE.DESERT));\n    }", "signature": "void testGetCoefficientFile()", "full_signature": "@Test public void testGetCoefficientFile()", "class_method_signature": "SensorCoefficientManagerTest.testGetCoefficientFile()", "testcase": true, "constructor": false, "invocations": ["toURL", "toUri", "assertNotNull", "getCoefficientFile"]}, "focal_class": {"identifier": "SensorCoefficientManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String AER_DES_NAME = \"DES\";", "modifier": "public static final", "type": "String", "declarator": "AER_DES_NAME = \"DES\"", "var_name": "AER_DES_NAME"}, {"original_string": "public static final String AER_CONT_NAME = \"CONT\";", "modifier": "public static final", "type": "String", "declarator": "AER_CONT_NAME = \"CONT\"", "var_name": "AER_CONT_NAME"}, {"original_string": "public static final String MERIS_NAME = \"MERIS\";", "modifier": "public static final", "type": "String", "declarator": "MERIS_NAME = \"MERIS\"", "var_name": "MERIS_NAME"}, {"original_string": "public static final String AATSR_NAME = \"AATSR\";", "modifier": "public static final", "type": "String", "declarator": "AATSR_NAME = \"AATSR\"", "var_name": "AATSR_NAME"}, {"original_string": "private static final char[] fieldSeparators = {'|'};", "modifier": "private static final", "type": "char[]", "declarator": "fieldSeparators = {'|'}", "var_name": "fieldSeparators"}, {"original_string": "private static final String mapFileName = \"SensorMap.txt\";", "modifier": "private static final", "type": "String", "declarator": "mapFileName = \"SensorMap.txt\"", "var_name": "mapFileName"}, {"original_string": "private List<SensorDb> sensors;", "modifier": "private", "type": "List<SensorDb>", "declarator": "sensors", "var_name": "sensors"}, {"original_string": "private String locationPath;", "modifier": "private", "type": "String", "declarator": "locationPath", "var_name": "locationPath"}, {"original_string": "private Map<AEROSOL_TYPE, String> aerosolTypeMap;", "modifier": "private", "type": "Map<AEROSOL_TYPE, String>", "declarator": "aerosolTypeMap", "var_name": "aerosolTypeMap"}], "methods": [{"identifier": "SensorCoefficientManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " SensorCoefficientManager()", "full_signature": "public  SensorCoefficientManager()", "class_method_signature": "SensorCoefficientManager.SensorCoefficientManager()", "testcase": false, "constructor": true}, {"identifier": "SensorCoefficientManager", "parameters": "(URL location)", "modifiers": "public", "return": "", "signature": " SensorCoefficientManager(URL location)", "full_signature": "public  SensorCoefficientManager(URL location)", "class_method_signature": "SensorCoefficientManager.SensorCoefficientManager(URL location)", "testcase": false, "constructor": true}, {"identifier": "setURL", "parameters": "(URL location)", "modifiers": "public", "return": "void", "signature": "void setURL(URL location)", "full_signature": "public void setURL(URL location)", "class_method_signature": "SensorCoefficientManager.setURL(URL location)", "testcase": false, "constructor": false}, {"identifier": "getCoefficientFile", "parameters": "(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "modifiers": "public", "return": "URL", "signature": "URL getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "full_signature": "public URL getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "class_method_signature": "SensorCoefficientManager.getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "SensorCoefficientManager.init()", "testcase": false, "constructor": false}, {"identifier": "getSensorDb", "parameters": "(String name)", "modifiers": "private", "return": "SensorDb", "signature": "SensorDb getSensorDb(String name)", "full_signature": "private SensorDb getSensorDb(String name)", "class_method_signature": "SensorCoefficientManager.getSensorDb(String name)", "testcase": false, "constructor": false}, {"identifier": "setLocationPath", "parameters": "(URL location)", "modifiers": "private", "return": "void", "signature": "void setLocationPath(URL location)", "full_signature": "private void setLocationPath(URL location)", "class_method_signature": "SensorCoefficientManager.setLocationPath(URL location)", "testcase": false, "constructor": false}], "file": "s3tbx-meris-smac/src/main/java/org/esa/s3tbx/smac/SensorCoefficientManager.java"}, "focal_method": {"identifier": "getCoefficientFile", "parameters": "(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "modifiers": "public", "return": "URL", "body": "public URL getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType) {\n        URL url = null;\n        SensorDb sensorDb;\n\n        sensorDb = getSensorDb(sensor);\n        if (sensorDb != null) {\n            BandDb bandDb;\n\n            bandDb = sensorDb.getBand(bandName, aerosolTypeMap.get(aerosolType));\n            if (bandDb == null) {\n                return null;\n            }\n\n            try {\n                url = new URL(bandDb.getCoefficientFileName());\n            } catch (MalformedURLException e) {\n                try {\n                    url = new URL(locationPath + bandDb.getCoefficientFileName());\n                } catch (MalformedURLException ignored) {\n                }\n            }\n        }\n\n        return url;\n    }", "signature": "URL getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "full_signature": "public URL getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "class_method_signature": "SensorCoefficientManager.getCoefficientFile(String sensor, String bandName, AEROSOL_TYPE aerosolType)", "testcase": false, "constructor": false, "invocations": ["getSensorDb", "getBand", "get", "getCoefficientFileName", "getCoefficientFileName"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}