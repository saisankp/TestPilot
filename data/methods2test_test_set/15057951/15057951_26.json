{"test_class": {"identifier": "JdbcParameterEntryMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-repository-jdbc/src/test/java/org/smartparam/repository/jdbc/dao/JdbcParameterEntryMapperTest.java"}, "test_case": {"identifier": "shouldReturnEntryWithLevelsExtractedFromSplitLastLevelWhenLevelCountGreaterThanLimit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnEntryWithLevelsExtractedFromSplitLastLevelWhenLevelCountGreaterThanLimit() throws SQLException {\n        // given\n        DefaultJdbcConfig configuration = jdbcConfig()\n                .withLevelColumnCount(3).withExcessLevelSeparator('|').build();\n        JdbcParameterEntryMapper mapper = new JdbcParameterEntryMapper(configuration);\n        ResultSet resultSet = resultSet().withLong(\"id\", 1).withLong(\"fk_parameter\", 1)\n                .withString(\"level0\", \"1\").withString(\"level1\", \"2\")\n                .withString(\"level2\", \"3|4|5\")\n                .build();\n\n        // when\n        JdbcParameterEntry entry = mapper.createObject(resultSet);\n\n        // then\n        ParamEngineAssertions.assertThat(entry).hasLevels(5);\n    }", "signature": "void shouldReturnEntryWithLevelsExtractedFromSplitLastLevelWhenLevelCountGreaterThanLimit()", "full_signature": "@Test public void shouldReturnEntryWithLevelsExtractedFromSplitLastLevelWhenLevelCountGreaterThanLimit()", "class_method_signature": "JdbcParameterEntryMapperTest.shouldReturnEntryWithLevelsExtractedFromSplitLastLevelWhenLevelCountGreaterThanLimit()", "testcase": true, "constructor": false, "invocations": ["build", "withExcessLevelSeparator", "withLevelColumnCount", "jdbcConfig", "build", "withString", "withString", "withString", "withLong", "withLong", "resultSet", "createObject", "hasLevels", "assertThat"]}, "focal_class": {"identifier": "JdbcParameterEntryMapper", "superclass": "", "interfaces": "implements ObjectMapper<JdbcParameterEntry>", "fields": [{"original_string": "private final DefaultJdbcConfig configuration;", "modifier": "private final", "type": "DefaultJdbcConfig", "declarator": "configuration", "var_name": "configuration"}], "methods": [{"identifier": "JdbcParameterEntryMapper", "parameters": "(DefaultJdbcConfig configuration)", "modifiers": "public", "return": "", "signature": " JdbcParameterEntryMapper(DefaultJdbcConfig configuration)", "full_signature": "public  JdbcParameterEntryMapper(DefaultJdbcConfig configuration)", "class_method_signature": "JdbcParameterEntryMapper.JdbcParameterEntryMapper(DefaultJdbcConfig configuration)", "testcase": false, "constructor": true}, {"identifier": "createObject", "parameters": "(ResultSet resultSet)", "modifiers": "@Override public", "return": "JdbcParameterEntry", "signature": "JdbcParameterEntry createObject(ResultSet resultSet)", "full_signature": "@Override public JdbcParameterEntry createObject(ResultSet resultSet)", "class_method_signature": "JdbcParameterEntryMapper.createObject(ResultSet resultSet)", "testcase": false, "constructor": false}], "file": "smartparam-repository-jdbc/src/main/java/org/smartparam/repository/jdbc/dao/JdbcParameterEntryMapper.java"}, "focal_method": {"identifier": "createObject", "parameters": "(ResultSet resultSet)", "modifiers": "@Override public", "return": "JdbcParameterEntry", "body": "@Override\n    public JdbcParameterEntry createObject(ResultSet resultSet) throws SQLException {\n        List<String> levels = new ArrayList<String>();\n        String currentLevelValue;\n        boolean doneBeforeLimit = false;\n        for (int levelIndex = 0; levelIndex < configuration.levelColumnCount() - 1; ++levelIndex) {\n            currentLevelValue = resultSet.getString(\"level\" + levelIndex);\n            if (currentLevelValue == null) {\n                doneBeforeLimit = true;\n                break;\n            }\n            levels.add(currentLevelValue);\n        }\n\n        if (!doneBeforeLimit) {\n            String lastLevelValue = resultSet.getString(\"level\" + (configuration.levelColumnCount() - 1));\n            if (lastLevelValue != null) {\n                levels.addAll(Arrays.asList(lastLevelValue.split(\"\\\\\" + configuration.excessLevelsSeparator())));\n            }\n        }\n\n        String[] levelValues = levels.toArray(new String[levels.size()]);\n        JdbcParameterEntry entry = new JdbcParameterEntry(resultSet.getLong(\"id\"), levelValues);\n\n        return entry;\n    }", "signature": "JdbcParameterEntry createObject(ResultSet resultSet)", "full_signature": "@Override public JdbcParameterEntry createObject(ResultSet resultSet)", "class_method_signature": "JdbcParameterEntryMapper.createObject(ResultSet resultSet)", "testcase": false, "constructor": false, "invocations": ["levelColumnCount", "getString", "add", "getString", "levelColumnCount", "addAll", "asList", "split", "excessLevelsSeparator", "toArray", "size", "getLong"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}