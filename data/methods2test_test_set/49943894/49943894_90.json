{"test_class": {"identifier": "DbUpgradeUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Connection connectionMock;", "modifier": "@Mock\n    private", "type": "Connection", "declarator": "connectionMock", "var_name": "connectionMock"}, {"original_string": "@Mock\n    private DatabaseAccessObject daoMock;", "modifier": "@Mock\n    private", "type": "DatabaseAccessObject", "declarator": "daoMock", "var_name": "daoMock"}], "file": "engine/schema/src/test/java/com/cloud/upgrade/dao/DbUpgradeUtilsTest.java"}, "test_case": {"identifier": "testDropTableColumnsIfExistWhenNoKeysAreSupplied", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDropTableColumnsIfExistWhenNoKeysAreSupplied() throws Exception {\n        Connection conn = connectionMock;\n        String tableName = \"tableName\";\n        List<String> columns = new ArrayList<String>();\n\n        DbUpgradeUtils.dropTableColumnsIfExist(conn, tableName, columns);\n\n        verify(daoMock, times(0)).columnExists(eq(conn), eq(tableName), anyString());\n        verify(daoMock, times(0)).dropColumn(eq(conn), eq(tableName), anyString());\n    }", "signature": "void testDropTableColumnsIfExistWhenNoKeysAreSupplied()", "full_signature": "@Test public void testDropTableColumnsIfExistWhenNoKeysAreSupplied()", "class_method_signature": "DbUpgradeUtilsTest.testDropTableColumnsIfExistWhenNoKeysAreSupplied()", "testcase": true, "constructor": false, "invocations": ["dropTableColumnsIfExist", "columnExists", "verify", "times", "eq", "eq", "anyString", "dropColumn", "verify", "times", "eq", "eq", "anyString"]}, "focal_class": {"identifier": "DbUpgradeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static DatabaseAccessObject dao = new DatabaseAccessObject();", "modifier": "private static", "type": "DatabaseAccessObject", "declarator": "dao = new DatabaseAccessObject()", "var_name": "dao"}], "methods": [{"identifier": "dropKeysIfExist", "parameters": "(Connection conn, String tableName, List<String> keys, boolean isForeignKey)", "modifiers": "public static", "return": "void", "signature": "void dropKeysIfExist(Connection conn, String tableName, List<String> keys, boolean isForeignKey)", "full_signature": "public static void dropKeysIfExist(Connection conn, String tableName, List<String> keys, boolean isForeignKey)", "class_method_signature": "DbUpgradeUtils.dropKeysIfExist(Connection conn, String tableName, List<String> keys, boolean isForeignKey)", "testcase": false, "constructor": false}, {"identifier": "dropPrimaryKeyIfExists", "parameters": "(Connection conn, String tableName)", "modifiers": "public static", "return": "void", "signature": "void dropPrimaryKeyIfExists(Connection conn, String tableName)", "full_signature": "public static void dropPrimaryKeyIfExists(Connection conn, String tableName)", "class_method_signature": "DbUpgradeUtils.dropPrimaryKeyIfExists(Connection conn, String tableName)", "testcase": false, "constructor": false}, {"identifier": "dropTableColumnsIfExist", "parameters": "(Connection conn, String tableName, List<String> columns)", "modifiers": "public static", "return": "void", "signature": "void dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "full_signature": "public static void dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "class_method_signature": "DbUpgradeUtils.dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "testcase": false, "constructor": false}], "file": "engine/schema/src/main/java/com/cloud/upgrade/dao/DbUpgradeUtils.java"}, "focal_method": {"identifier": "dropTableColumnsIfExist", "parameters": "(Connection conn, String tableName, List<String> columns)", "modifiers": "public static", "return": "void", "body": "public static void dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns) {\n        for (String columnName : columns) {\n            if (dao.columnExists(conn, tableName, columnName)) {\n                dao.dropColumn(conn, tableName, columnName);\n            }\n        }\n    }", "signature": "void dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "full_signature": "public static void dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "class_method_signature": "DbUpgradeUtils.dropTableColumnsIfExist(Connection conn, String tableName, List<String> columns)", "testcase": false, "constructor": false, "invocations": ["columnExists", "dropColumn"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}