{"test_class": {"identifier": "XmlHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(XmlHandlerTest.class\n\t\t\t.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(XmlHandlerTest.class\n\t\t\t.getName())", "var_name": "LOGGER"}, {"original_string": "private static final int EXPECTED_IMAGE_WIDTH = 8192;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE_WIDTH = 8192", "var_name": "EXPECTED_IMAGE_WIDTH"}, {"original_string": "private static final int EXPECTED_IMAGE_RESOLUTION = 564;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE_RESOLUTION = 564", "var_name": "EXPECTED_IMAGE_RESOLUTION"}, {"original_string": "private static final int EXPECTED_LAST_BYTE = 255;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_LAST_BYTE = 255", "var_name": "EXPECTED_LAST_BYTE"}, {"original_string": "private static final int EXPECTED_BYTE_SIZE = 8;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_BYTE_SIZE = 8", "var_name": "EXPECTED_BYTE_SIZE"}, {"original_string": "private static final int EXPECTED_NUMBER_OF_BYTES = 3;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_NUMBER_OF_BYTES = 3", "var_name": "EXPECTED_NUMBER_OF_BYTES"}, {"original_string": "private static final long EXPECTED_DENOMINATOR = 4294967295L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_DENOMINATOR = 4294967295L", "var_name": "EXPECTED_DENOMINATOR"}, {"original_string": "private static final long EXPECTED_WP_NUMENATOR = 1343036288L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_WP_NUMENATOR = 1343036288L", "var_name": "EXPECTED_WP_NUMENATOR"}, {"original_string": "private static final long EXPECTED_REDX_NUMENATOR = 2748779008L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_REDX_NUMENATOR = 2748779008L", "var_name": "EXPECTED_REDX_NUMENATOR"}, {"original_string": "private static final long EXPECTED_REDY_NUMENATOR = 1417339264L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_REDY_NUMENATOR = 1417339264L", "var_name": "EXPECTED_REDY_NUMENATOR"}, {"original_string": "private static final long EXPECTED_GREENX_NUMENATOR = 1288490240L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_GREENX_NUMENATOR = 1288490240L", "var_name": "EXPECTED_GREENX_NUMENATOR"}, {"original_string": "private static final long EXPECTED_GREENY_NUMENATOR = 2576980480L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_GREENY_NUMENATOR = 2576980480L", "var_name": "EXPECTED_GREENY_NUMENATOR"}, {"original_string": "private static final long EXPECTED_BLUEX_NUMENATOR = 644245120L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_BLUEX_NUMENATOR = 644245120L", "var_name": "EXPECTED_BLUEX_NUMENATOR"}, {"original_string": "private static final long EXPECTED_BLUEY_NUMENATOR = 257698032L;", "modifier": "private static final", "type": "long", "declarator": "EXPECTED_BLUEY_NUMENATOR = 257698032L", "var_name": "EXPECTED_BLUEY_NUMENATOR"}, {"original_string": "private static final int EXPECTED_IMAGE2_WIDTH = 1136;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_WIDTH = 1136", "var_name": "EXPECTED_IMAGE2_WIDTH"}, {"original_string": "private static final int EXPECTED_IMAGE2_LENGTH = 1846;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_LENGTH = 1846", "var_name": "EXPECTED_IMAGE2_LENGTH"}, {"original_string": "private static final double EXPECTED_IMAGE2_FNUMBER = 7.1;", "modifier": "private static final", "type": "double", "declarator": "EXPECTED_IMAGE2_FNUMBER = 7.1", "var_name": "EXPECTED_IMAGE2_FNUMBER"}, {"original_string": "private static final double EXPECTED_IMAGE2_EXPOSURE_TIME = 0.167;", "modifier": "private static final", "type": "double", "declarator": "EXPECTED_IMAGE2_EXPOSURE_TIME = 0.167", "var_name": "EXPECTED_IMAGE2_EXPOSURE_TIME"}, {"original_string": "private static final int EXPECTED_IMAGE2_EXPOSURE_PROGRAM = 3;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_EXPOSURE_PROGRAM = 3", "var_name": "EXPECTED_IMAGE2_EXPOSURE_PROGRAM"}, {"original_string": "private static final int EXPECTED_IMAGE2_APERTURE_NUM = 925;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_APERTURE_NUM = 925", "var_name": "EXPECTED_IMAGE2_APERTURE_NUM"}, {"original_string": "private static final int EXPECTED_IMAGE2_APERTURE_DEN = 256;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_APERTURE_DEN = 256", "var_name": "EXPECTED_IMAGE2_APERTURE_DEN"}, {"original_string": "private static final double EXPECTED_IMAGE2_FOCAL = 14;", "modifier": "private static final", "type": "double", "declarator": "EXPECTED_IMAGE2_FOCAL = 14", "var_name": "EXPECTED_IMAGE2_FOCAL"}, {"original_string": "private static final int EXPECTED_IMAGE2_FLASH_NUM = 15;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_FLASH_NUM = 15", "var_name": "EXPECTED_IMAGE2_FLASH_NUM"}, {"original_string": "private static final int EXPECTED_IMAGE2_FLASH_DEN = 100;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_FLASH_DEN = 100", "var_name": "EXPECTED_IMAGE2_FLASH_DEN"}, {"original_string": "private static final int EXPECTED_IMAGE2_IMAGE_RESOLUTION = 180;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_IMAGE2_IMAGE_RESOLUTION = 180", "var_name": "EXPECTED_IMAGE2_IMAGE_RESOLUTION"}, {"original_string": "private static final int EXPECTED_JPEG_COMPRESSION = 6;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_JPEG_COMPRESSION = 6", "var_name": "EXPECTED_JPEG_COMPRESSION"}, {"original_string": "private static final int EXPECTED_EXIF_COLORSPACE = 6;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_COLORSPACE = 6", "var_name": "EXPECTED_EXIF_COLORSPACE"}, {"original_string": "private static final int EXPECTED_EXIF_IMAGE_LENGTH = 2322;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_IMAGE_LENGTH = 2322", "var_name": "EXPECTED_EXIF_IMAGE_LENGTH"}, {"original_string": "private static final int EXPECTED_EXIF_IMAGE_WIDTH = 4128;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_IMAGE_WIDTH = 4128", "var_name": "EXPECTED_EXIF_IMAGE_WIDTH"}, {"original_string": "private static final int EXPECTED_EXIF_IMAGE_RESOLUTION = 72;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_IMAGE_RESOLUTION = 72", "var_name": "EXPECTED_EXIF_IMAGE_RESOLUTION"}, {"original_string": "private static final String EXPECTED_EXIF_VERSION = \"0220\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_EXIF_VERSION = \"0220\"", "var_name": "EXPECTED_EXIF_VERSION"}, {"original_string": "private static final double EXPECTED_EXIF_FOCAL = 4.13;", "modifier": "private static final", "type": "double", "declarator": "EXPECTED_EXIF_FOCAL = 4.13", "var_name": "EXPECTED_EXIF_FOCAL"}, {"original_string": "private static final int EXPECTED_EXIF_APERTURE_NUM = 228;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_APERTURE_NUM = 228", "var_name": "EXPECTED_EXIF_APERTURE_NUM"}, {"original_string": "private static final int EXPECTED_EXIF_APERTURE_DEN = 100;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_EXIF_APERTURE_DEN = 100", "var_name": "EXPECTED_EXIF_APERTURE_DEN"}, {"original_string": "private static final double EXPECTED_EXIT_FNUMBER = 2.2;", "modifier": "private static final", "type": "double", "declarator": "EXPECTED_EXIT_FNUMBER = 2.2", "var_name": "EXPECTED_EXIT_FNUMBER"}, {"original_string": "protected static NisoImageMetadata TEST_NISO_IMAGE_MD;", "modifier": "protected static", "type": "NisoImageMetadata", "declarator": "TEST_NISO_IMAGE_MD", "var_name": "TEST_NISO_IMAGE_MD"}, {"original_string": "protected static NisoImageMetadata TEST_NISO_IMAGE2_MD;", "modifier": "protected static", "type": "NisoImageMetadata", "declarator": "TEST_NISO_IMAGE2_MD", "var_name": "TEST_NISO_IMAGE2_MD"}, {"original_string": "protected static NisoImageMetadata TEST_NISO_EXIF_MD;", "modifier": "protected static", "type": "NisoImageMetadata", "declarator": "TEST_NISO_EXIF_MD", "var_name": "TEST_NISO_EXIF_MD"}, {"original_string": "protected static TextMDMetadata TEST_TEXTMD;", "modifier": "protected static", "type": "TextMDMetadata", "declarator": "TEST_TEXTMD", "var_name": "TEST_TEXTMD"}, {"original_string": "private File outputFile;", "modifier": "private", "type": "File", "declarator": "outputFile", "var_name": "outputFile"}, {"original_string": "private XmlHandler handler;", "modifier": "private", "type": "XmlHandler", "declarator": "handler", "var_name": "handler"}], "file": "jhove-core/src/test/java/edu/harvard/hul/ois/jhove/handler/XmlHandlerTest.java"}, "test_case": {"identifier": "testShowNisoImage2Issue502", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShowNisoImage2Issue502() throws IOException {\n\t\tFile mix20File = new File(this.getClass()\n\t\t\t\t.getResource(\"mix20_output3.xml\").getPath());\n\t\tLOGGER.info(\"testShowNisoImage2Issue502 with file \" + mix20File);\n\t\tassertTrue(mix20File.isFile());\n\t\tString expectedMix20 = readXmlFile(mix20File);\n\t\tTEST_NISO_IMAGE2_MD.setBrightness(null);\n\t\tthis.handler.showNisoImageMetadata20(TEST_NISO_IMAGE2_MD);\n\t\tthis.handler.close();\n\n\t\tString generatedMix = readXmlFile(outputFile);\n\t\tassertEquals(\"Mix v2.0 generated not conformant\", expectedMix20,\n\t\t\t\tgeneratedMix);\n\t}", "signature": "void testShowNisoImage2Issue502()", "full_signature": "@Test public void testShowNisoImage2Issue502()", "class_method_signature": "XmlHandlerTest.testShowNisoImage2Issue502()", "testcase": true, "constructor": false, "invocations": ["getPath", "getResource", "getClass", "info", "assertTrue", "isFile", "readXmlFile", "setBrightness", "showNisoImageMetadata20", "close", "readXmlFile", "assertEquals"]}, "focal_class": {"identifier": "XmlHandler", "superclass": "extends edu.harvard.hul.ois.jhove.HandlerBase", "interfaces": "", "fields": [{"original_string": "private static final ThreadLocal<NumberFormat> formatters = new ThreadLocal<NumberFormat>() {\n\t\t@Override\n\t\tprotected NumberFormat initialValue() {\n\t\t\tNumberFormat _format = NumberFormat.getInstance(Locale.ROOT);\n\t\t\t_format.setGroupingUsed(false);\n\t\t\t_format.setMinimumFractionDigits(0);\n\n\t\t\treturn _format;\n\t\t}\n\t};", "modifier": "private static final", "type": "ThreadLocal<NumberFormat>", "declarator": "formatters = new ThreadLocal<NumberFormat>() {\n\t\t@Override\n\t\tprotected NumberFormat initialValue() {\n\t\t\tNumberFormat _format = NumberFormat.getInstance(Locale.ROOT);\n\t\t\t_format.setGroupingUsed(false);\n\t\t\t_format.setMinimumFractionDigits(0);\n\n\t\t\treturn _format;\n\t\t}\n\t}", "var_name": "formatters"}, {"original_string": "private static final String NAME = \"XML\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"XML\"", "var_name": "NAME"}, {"original_string": "private static final String RELEASE = \"1.9\";", "modifier": "private static final", "type": "String", "declarator": "RELEASE = \"1.9\"", "var_name": "RELEASE"}, {"original_string": "private static final int[] DATE = { 2019, 10, 18 };", "modifier": "private static final", "type": "int[]", "declarator": "DATE = { 2019, 10, 18 }", "var_name": "DATE"}, {"original_string": "private static final String NOTE = \"This output handler is defined by the XML Schema \"\n\t\t\t+ \"https://schema.openpreservation.org/ois/xml/xsd/jhove/jhove.xsd\";", "modifier": "private static final", "type": "String", "declarator": "NOTE = \"This output handler is defined by the XML Schema \"\n\t\t\t+ \"https://schema.openpreservation.org/ois/xml/xsd/jhove/jhove.xsd\"", "var_name": "NOTE"}, {"original_string": "private static final String RIGHTS = \"Derived from software Copyright 2004-2011 \"\n\t\t\t+ \"by the President and Fellows of Harvard College. \"\n\t\t\t+ \"Version 1.8 release by Open Preservation Foundation. \"\n\t\t\t+ \"Released under the GNU Lesser General Public License.\";", "modifier": "private static final", "type": "String", "declarator": "RIGHTS = \"Derived from software Copyright 2004-2011 \"\n\t\t\t+ \"by the President and Fellows of Harvard College. \"\n\t\t\t+ \"Version 1.8 release by Open Preservation Foundation. \"\n\t\t\t+ \"Released under the GNU Lesser General Public License.\"", "var_name": "RIGHTS"}, {"original_string": "private final static String EOL = System.getProperty(\"line.separator\");", "modifier": "private final static", "type": "String", "declarator": "EOL = System.getProperty(\"line.separator\")", "var_name": "EOL"}, {"original_string": "private static final String SCHEMA_VERSION = \"1.8\";", "modifier": "private static final", "type": "String", "declarator": "SCHEMA_VERSION = \"1.8\"", "var_name": "SCHEMA_VERSION"}, {"original_string": "private double _sampleRate;", "modifier": "private", "type": "double", "declarator": "_sampleRate", "var_name": "_sampleRate"}], "methods": [{"identifier": "XmlHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " XmlHandler()", "full_signature": "public  XmlHandler()", "class_method_signature": "XmlHandler.XmlHandler()", "testcase": false, "constructor": true}, {"identifier": "XmlHandler", "parameters": "(String name, String release, int[] date, String note,\n\t\t\tString rights)", "modifiers": "public", "return": "", "signature": " XmlHandler(String name, String release, int[] date, String note,\n\t\t\tString rights)", "full_signature": "public  XmlHandler(String name, String release, int[] date, String note,\n\t\t\tString rights)", "class_method_signature": "XmlHandler.XmlHandler(String name, String release, int[] date, String note,\n\t\t\tString rights)", "testcase": false, "constructor": true}, {"identifier": "show", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void show()", "full_signature": "@Override public void show()", "class_method_signature": "XmlHandler.show()", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(App app)", "modifiers": "@Override public", "return": "void", "signature": "void show(App app)", "full_signature": "@Override public void show(App app)", "class_method_signature": "XmlHandler.show(App app)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(OutputHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void show(OutputHandler handler)", "full_signature": "@Override public void show(OutputHandler handler)", "class_method_signature": "XmlHandler.show(OutputHandler handler)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(Module module)", "modifiers": "@Override public", "return": "void", "signature": "void show(Module module)", "full_signature": "@Override public void show(Module module)", "class_method_signature": "XmlHandler.show(Module module)", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "(RepInfo info)", "modifiers": "@Override public", "return": "void", "signature": "void show(RepInfo info)", "full_signature": "@Override public void show(RepInfo info)", "class_method_signature": "XmlHandler.show(RepInfo info)", "testcase": false, "constructor": false}, {"identifier": "showAgent", "parameters": "(Agent agent, String label)", "modifiers": "protected", "return": "void", "signature": "void showAgent(Agent agent, String label)", "full_signature": "protected void showAgent(Agent agent, String label)", "class_method_signature": "XmlHandler.showAgent(Agent agent, String label)", "testcase": false, "constructor": false}, {"identifier": "showChecksum", "parameters": "(Checksum checksum)", "modifiers": "protected", "return": "void", "signature": "void showChecksum(Checksum checksum)", "full_signature": "protected void showChecksum(Checksum checksum)", "class_method_signature": "XmlHandler.showChecksum(Checksum checksum)", "testcase": false, "constructor": false}, {"identifier": "showDocument", "parameters": "(Document document)", "modifiers": "protected", "return": "void", "signature": "void showDocument(Document document)", "full_signature": "protected void showDocument(Document document)", "class_method_signature": "XmlHandler.showDocument(Document document)", "testcase": false, "constructor": false}, {"identifier": "showFooter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showFooter()", "full_signature": "@Override public void showFooter()", "class_method_signature": "XmlHandler.showFooter()", "testcase": false, "constructor": false}, {"identifier": "showHeader", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showHeader()", "full_signature": "@Override public void showHeader()", "class_method_signature": "XmlHandler.showHeader()", "testcase": false, "constructor": false}, {"identifier": "showIdentifier", "parameters": "(Identifier identifier)", "modifiers": "protected", "return": "void", "signature": "void showIdentifier(Identifier identifier)", "full_signature": "protected void showIdentifier(Identifier identifier)", "class_method_signature": "XmlHandler.showIdentifier(Identifier identifier)", "testcase": false, "constructor": false}, {"identifier": "showMessage", "parameters": "(Message message)", "modifiers": "protected", "return": "void", "signature": "void showMessage(Message message)", "full_signature": "protected void showMessage(Message message)", "class_method_signature": "XmlHandler.showMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "showSignature", "parameters": "(Signature signature)", "modifiers": "protected", "return": "void", "signature": "void showSignature(Signature signature)", "full_signature": "protected void showSignature(Signature signature)", "class_method_signature": "XmlHandler.showSignature(Signature signature)", "testcase": false, "constructor": false}, {"identifier": "valueToString", "parameters": "(Object obj)", "modifiers": "protected", "return": "String", "signature": "String valueToString(Object obj)", "full_signature": "protected String valueToString(Object obj)", "class_method_signature": "XmlHandler.valueToString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "showProperty", "parameters": "(Property property)", "modifiers": "protected", "return": "void", "signature": "void showProperty(Property property)", "full_signature": "protected void showProperty(Property property)", "class_method_signature": "XmlHandler.showProperty(Property property)", "testcase": false, "constructor": false}, {"identifier": "showArrayProperty", "parameters": "(Property property, String margin)", "modifiers": "protected", "return": "void", "signature": "void showArrayProperty(Property property, String margin)", "full_signature": "protected void showArrayProperty(Property property, String margin)", "class_method_signature": "XmlHandler.showArrayProperty(Property property, String margin)", "testcase": false, "constructor": false}, {"identifier": "showTextMDMetadata", "parameters": "(TextMDMetadata textMD)", "modifiers": "protected", "return": "void", "signature": "void showTextMDMetadata(TextMDMetadata textMD)", "full_signature": "protected void showTextMDMetadata(TextMDMetadata textMD)", "class_method_signature": "XmlHandler.showTextMDMetadata(TextMDMetadata textMD)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageMetadata(NisoImageMetadata niso)", "full_signature": "protected void showNisoImageMetadata(NisoImageMetadata niso)", "class_method_signature": "XmlHandler.showNisoImageMetadata(NisoImageMetadata niso)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata02", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageMetadata02(NisoImageMetadata niso)", "full_signature": "protected void showNisoImageMetadata02(NisoImageMetadata niso)", "class_method_signature": "XmlHandler.showNisoImageMetadata02(NisoImageMetadata niso)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicImageParameters02", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoBasicImageParameters02(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoBasicImageParameters02(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoBasicImageParameters02(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageCreation02", "parameters": "(NisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageCreation02(NisoImageMetadata niso, String margin)", "full_signature": "protected void showNisoImageCreation02(NisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showNisoImageCreation02(NisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImagingPerformanceAssessment02", "parameters": "(\n\t\t\tNisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImagingPerformanceAssessment02(\n\t\t\tNisoImageMetadata niso, String margin)", "full_signature": "protected void showNisoImagingPerformanceAssessment02(\n\t\t\tNisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showNisoImagingPerformanceAssessment02(\n\t\t\tNisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoChangeHistory02", "parameters": "(NisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoChangeHistory02(NisoImageMetadata niso, String margin)", "full_signature": "protected void showNisoChangeHistory02(NisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showNisoChangeHistory02(NisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata10", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageMetadata10(NisoImageMetadata niso)", "full_signature": "protected void showNisoImageMetadata10(NisoImageMetadata niso)", "class_method_signature": "XmlHandler.showNisoImageMetadata10(NisoImageMetadata niso)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicDigitalObjectInformation10", "parameters": "(\n\t\t\tNisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoBasicDigitalObjectInformation10(\n\t\t\tNisoImageMetadata niso, String margin)", "full_signature": "protected void showNisoBasicDigitalObjectInformation10(\n\t\t\tNisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showNisoBasicDigitalObjectInformation10(\n\t\t\tNisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicImageInformation10", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoBasicImageInformation10(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoBasicImageInformation10(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoBasicImageInformation10(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageCaptureMetadata10", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageCaptureMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoImageCaptureMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoImageCaptureMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageAssessmentMetadata10", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageAssessmentMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoImageAssessmentMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoImageAssessmentMetadata10(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showChangeHistory10", "parameters": "(NisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showChangeHistory10(NisoImageMetadata niso, String margin)", "full_signature": "protected void showChangeHistory10(NisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showChangeHistory10(NisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageMetadata20", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageMetadata20(NisoImageMetadata niso)", "full_signature": "protected void showNisoImageMetadata20(NisoImageMetadata niso)", "class_method_signature": "XmlHandler.showNisoImageMetadata20(NisoImageMetadata niso)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicDigitalObjectInformation20", "parameters": "(\n\t\t\tNisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoBasicDigitalObjectInformation20(\n\t\t\tNisoImageMetadata niso, String margin)", "full_signature": "protected void showNisoBasicDigitalObjectInformation20(\n\t\t\tNisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showNisoBasicDigitalObjectInformation20(\n\t\t\tNisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoBasicImageInformation20", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoBasicImageInformation20(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoBasicImageInformation20(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoBasicImageInformation20(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageCaptureMetadata20", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageCaptureMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoImageCaptureMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoImageCaptureMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showNisoImageAssessmentMetadata20", "parameters": "(NisoImageMetadata niso,\n\t\t\tString margin)", "modifiers": "protected", "return": "void", "signature": "void showNisoImageAssessmentMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "full_signature": "protected void showNisoImageAssessmentMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "class_method_signature": "XmlHandler.showNisoImageAssessmentMetadata20(NisoImageMetadata niso,\n\t\t\tString margin)", "testcase": false, "constructor": false}, {"identifier": "showChangeHistory20", "parameters": "(NisoImageMetadata niso, String margin)", "modifiers": "protected", "return": "void", "signature": "void showChangeHistory20(NisoImageMetadata niso, String margin)", "full_signature": "protected void showChangeHistory20(NisoImageMetadata niso, String margin)", "class_method_signature": "XmlHandler.showChangeHistory20(NisoImageMetadata niso, String margin)", "testcase": false, "constructor": false}, {"identifier": "meteringModeToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String meteringModeToString(int n)", "full_signature": "private String meteringModeToString(int n)", "class_method_signature": "XmlHandler.meteringModeToString(int n)", "testcase": false, "constructor": false}, {"identifier": "photometricInterpretationToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String photometricInterpretationToString(int n)", "full_signature": "private String photometricInterpretationToString(int n)", "class_method_signature": "XmlHandler.photometricInterpretationToString(int n)", "testcase": false, "constructor": false}, {"identifier": "compressionSchemeToString", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String compressionSchemeToString(int n)", "full_signature": "private String compressionSchemeToString(int n)", "class_method_signature": "XmlHandler.compressionSchemeToString(int n)", "testcase": false, "constructor": false}, {"identifier": "showAESAudioMetadata", "parameters": "(AESAudioMetadata aes)", "modifiers": "protected", "return": "void", "signature": "void showAESAudioMetadata(AESAudioMetadata aes)", "full_signature": "protected void showAESAudioMetadata(AESAudioMetadata aes)", "class_method_signature": "XmlHandler.showAESAudioMetadata(AESAudioMetadata aes)", "testcase": false, "constructor": false}, {"identifier": "writeAESTimeRange", "parameters": "(String baseIndent,\n        AESAudioMetadata.TimeDesc start,\n        AESAudioMetadata.TimeDesc duration)", "modifiers": "private", "return": "void", "signature": "void writeAESTimeRange(String baseIndent,\n        AESAudioMetadata.TimeDesc start,\n        AESAudioMetadata.TimeDesc duration)", "full_signature": "private void writeAESTimeRange(String baseIndent,\n        AESAudioMetadata.TimeDesc start,\n        AESAudioMetadata.TimeDesc duration)", "class_method_signature": "XmlHandler.writeAESTimeRange(String baseIndent,\n        AESAudioMetadata.TimeDesc start,\n        AESAudioMetadata.TimeDesc duration)", "testcase": false, "constructor": false}, {"identifier": "cleanURIString", "parameters": "(String uri)", "modifiers": "private", "return": "String", "signature": "String cleanURIString(String uri)", "full_signature": "private String cleanURIString(String uri)", "class_method_signature": "XmlHandler.cleanURIString(String uri)", "testcase": false, "constructor": false}, {"identifier": "rationalToString", "parameters": "(StringBuffer buf, String tag, String margin,\n\t\t\tRational r)", "modifiers": "public", "return": "void", "signature": "void rationalToString(StringBuffer buf, String tag, String margin,\n\t\t\tRational r)", "full_signature": "public void rationalToString(StringBuffer buf, String tag, String margin,\n\t\t\tRational r)", "class_method_signature": "XmlHandler.rationalToString(StringBuffer buf, String tag, String margin,\n\t\t\tRational r)", "testcase": false, "constructor": false}], "file": "jhove-core/src/main/java/edu/harvard/hul/ois/jhove/handler/XmlHandler.java"}, "focal_method": {"identifier": "showNisoImageMetadata20", "parameters": "(NisoImageMetadata niso)", "modifiers": "protected", "return": "void", "body": "protected void showNisoImageMetadata20(NisoImageMetadata niso) {\n\t\tString margin = getIndent(++_level);\n\n\t\tString[][] attrs = {\n\t\t\t\t{ \"xmlns:mix\", \"http://www.loc.gov/mix/v20\" },\n\t\t\t\t{ \"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\" },\n\t\t\t\t{ \"xsi:schemaLocation\",\n\t\t\t\t\t\t\"http://www.loc.gov/mix/v20 http://www.loc.gov/standards/mix/mix20/mix20.xsd\" } };\n\t\t_writer.println(margin + elementStart(\"mix:mix\", attrs));\n\n\t\tshowNisoBasicDigitalObjectInformation20(niso, margin);\n\t\tshowNisoBasicImageInformation20(niso, margin);\n\t\tshowNisoImageCaptureMetadata20(niso, margin);\n\t\tshowNisoImageAssessmentMetadata20(niso, margin);\n\t\tshowChangeHistory20(niso, margin);\n\n\t\t_writer.println(margin + elementEnd(\"mix:mix\"));\n\n\t\t_level--;\n\n\t}", "signature": "void showNisoImageMetadata20(NisoImageMetadata niso)", "full_signature": "protected void showNisoImageMetadata20(NisoImageMetadata niso)", "class_method_signature": "XmlHandler.showNisoImageMetadata20(NisoImageMetadata niso)", "testcase": false, "constructor": false, "invocations": ["getIndent", "println", "elementStart", "showNisoBasicDigitalObjectInformation20", "showNisoBasicImageInformation20", "showNisoImageCaptureMetadata20", "showNisoImageAssessmentMetadata20", "showChangeHistory20", "println", "elementEnd"]}, "repository": {"repo_id": 17627031, "url": "https://github.com/openpreserve/jhove", "stars": 91, "created": "3/11/2014 10:47:10 AM +00:00", "updates": "2020-01-24T19:19:11+00:00", "fork": "False", "license": "licensed"}}