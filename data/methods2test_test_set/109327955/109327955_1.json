{"test_class": {"identifier": "SessionSettingsLocatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "quickfixj-spring-boot-starter/src/test/java/io/allune/quickfixj/spring/boot/starter/connection/SessionSettingsLocatorTest.java"}, "test_case": {"identifier": "shouldThrowSettingsNotFoundExceptionIfNoneFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldThrowSettingsNotFoundExceptionIfNoneFound() {\n\t\tthrown.expect(SettingsNotFoundException.class);\n\t\tloadSettings(null, null, null, null);\n\t}", "signature": "void shouldThrowSettingsNotFoundExceptionIfNoneFound()", "full_signature": "@Test public void shouldThrowSettingsNotFoundExceptionIfNoneFound()", "class_method_signature": "SessionSettingsLocatorTest.shouldThrowSettingsNotFoundExceptionIfNoneFound()", "testcase": true, "constructor": false, "invocations": ["expect", "loadSettings"]}, "focal_class": {"identifier": "SessionSettingsLocator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SessionSettingsLocator", "parameters": "()", "modifiers": "private", "return": "", "signature": " SessionSettingsLocator()", "full_signature": "private  SessionSettingsLocator()", "class_method_signature": "SessionSettingsLocator.SessionSettingsLocator()", "testcase": false, "constructor": true}, {"identifier": "loadSettings", "parameters": "(String... locations)", "modifiers": "public static", "return": "SessionSettings", "signature": "SessionSettings loadSettings(String... locations)", "full_signature": "public static SessionSettings loadSettings(String... locations)", "class_method_signature": "SessionSettingsLocator.loadSettings(String... locations)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(String location)", "modifiers": "private static", "return": "Optional<Resource>", "signature": "Optional<Resource> load(String location)", "full_signature": "private static Optional<Resource> load(String location)", "class_method_signature": "SessionSettingsLocator.load(String location)", "testcase": false, "constructor": false}], "file": "quickfixj-spring-boot-starter/src/main/java/io/allune/quickfixj/spring/boot/starter/connection/SessionSettingsLocator.java"}, "focal_method": {"identifier": "loadSettings", "parameters": "(String... locations)", "modifiers": "public static", "return": "SessionSettings", "body": "public static SessionSettings loadSettings(String... locations) {\n\n\t\ttry {\n\t\t\tfor (String location : locations) {\n\t\t\t\tOptional<Resource> resource = load(location);\n\n\t\t\t\tif (resource.isPresent()) {\n\t\t\t\t\tlog.info(\"Loading settings from '{}'\", location);\n\n\t\t\t\t\treturn new SessionSettings(resource.get().getInputStream());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new SettingsNotFoundException(\"Settings file not found\");\n\t\t} catch (RuntimeException | ConfigError | IOException e) {\n\t\t\tthrow new SettingsNotFoundException(e.getMessage(), e);\n\t\t}\n\t}", "signature": "SessionSettings loadSettings(String... locations)", "full_signature": "public static SessionSettings loadSettings(String... locations)", "class_method_signature": "SessionSettingsLocator.loadSettings(String... locations)", "testcase": false, "constructor": false, "invocations": ["load", "isPresent", "info", "getInputStream", "get", "getMessage"]}, "repository": {"repo_id": 109327955, "url": "https://github.com/esanchezros/quickfixj-spring-boot-starter", "stars": 27, "created": "11/2/2017 11:06:07 PM +00:00", "updates": "2020-01-15T15:51:21+00:00", "fork": "False", "license": "licensed"}}