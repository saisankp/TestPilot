{"test_class": {"identifier": "InvalidDocumentFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked private MetricRegistry registry;", "modifier": "@Mocked private", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "@Mocked private DataSource source;", "modifier": "@Mocked private", "type": "DataSource", "declarator": "source", "var_name": "source"}], "file": "server/src/test/java/org/jvalue/ods/processor/filter/InvalidDocumentFilterTest.java"}, "test_case": {"identifier": "testRemoval", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRemoval() {\n\t\tObjectNode jsonObject = new ObjectNode(JsonNodeFactory.instance);\n\t\tjsonObject.put(\"key\", \"value\");\n\t\tjsonObject.put(\"hello\", \"world\");\n\n\t\tArrayNode jsonArray = new ArrayNode(JsonNodeFactory.instance);\n\t\tjsonArray.add(new TextNode(\"Hello there\"));\n\t\tjsonArray.add(new IntNode(42));\n\t\tjsonArray.add(jsonObject);\n\n\t\tInvalidDocumentFilter filter = new InvalidDocumentFilter(source, registry);\n\t\tArrayNode jsonResult = filter.doFilter(jsonArray);\n\n\t\tAssert.assertEquals(1, jsonResult.size());\n\t\tAssert.assertEquals(jsonResult.get(0), jsonObject);\n\t}", "signature": "void testRemoval()", "full_signature": "@Test public void testRemoval()", "class_method_signature": "InvalidDocumentFilterTest.testRemoval()", "testcase": true, "constructor": false, "invocations": ["put", "put", "add", "add", "add", "doFilter", "assertEquals", "size", "assertEquals", "get"]}, "focal_class": {"identifier": "InvalidDocumentFilter", "superclass": "extends AbstractFilter<ArrayNode, ArrayNode>", "interfaces": "", "fields": [], "methods": [{"identifier": "InvalidDocumentFilter", "parameters": "(@Assisted DataSource source, MetricRegistry registry)", "modifiers": "@Inject", "return": "", "signature": " InvalidDocumentFilter(@Assisted DataSource source, MetricRegistry registry)", "full_signature": "@Inject  InvalidDocumentFilter(@Assisted DataSource source, MetricRegistry registry)", "class_method_signature": "InvalidDocumentFilter.InvalidDocumentFilter(@Assisted DataSource source, MetricRegistry registry)", "testcase": false, "constructor": true}, {"identifier": "doFilter", "parameters": "(ArrayNode data)", "modifiers": "@Override protected", "return": "ArrayNode", "signature": "ArrayNode doFilter(ArrayNode data)", "full_signature": "@Override protected ArrayNode doFilter(ArrayNode data)", "class_method_signature": "InvalidDocumentFilter.doFilter(ArrayNode data)", "testcase": false, "constructor": false}, {"identifier": "doOnComplete", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void doOnComplete()", "full_signature": "@Override protected void doOnComplete()", "class_method_signature": "InvalidDocumentFilter.doOnComplete()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/filter/InvalidDocumentFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ArrayNode data)", "modifiers": "@Override protected", "return": "ArrayNode", "body": "@Override\n\tprotected ArrayNode doFilter(ArrayNode data) {\n\t\tIterator<JsonNode> iterator = data.elements();\n\t\twhile (iterator.hasNext()) {\n\t\t\tif (!iterator.next().isObject()) iterator.remove();\n\t\t}\n\t\treturn data;\n\t}", "signature": "ArrayNode doFilter(ArrayNode data)", "full_signature": "@Override protected ArrayNode doFilter(ArrayNode data)", "class_method_signature": "InvalidDocumentFilter.doFilter(ArrayNode data)", "testcase": false, "constructor": false, "invocations": ["elements", "hasNext", "isObject", "next", "remove"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}