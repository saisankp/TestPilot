{"test_class": {"identifier": "ConstraintsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Constraint ENGAGE = Constraint.executable(AddressTemplate.of(\"j/l/p\"), \"engage\");", "modifier": "private static final", "type": "Constraint", "declarator": "ENGAGE = Constraint.executable(AddressTemplate.of(\"j/l/p\"), \"engage\")", "var_name": "ENGAGE"}, {"original_string": "private static final Constraint NCC = Constraint.writable(AddressTemplate.of(\"da/ta\"), \"NCC-1701-D\");", "modifier": "private static final", "type": "Constraint", "declarator": "NCC = Constraint.writable(AddressTemplate.of(\"da/ta\"), \"NCC-1701-D\")", "var_name": "NCC"}, {"original_string": "private static final String ENGAGE_DATA = \"executable(j/l/p:engage)\";", "modifier": "private static final", "type": "String", "declarator": "ENGAGE_DATA = \"executable(j/l/p:engage)\"", "var_name": "ENGAGE_DATA"}, {"original_string": "private static final String NCC_DATA = \"writable(da/ta@NCC-1701-D)\";", "modifier": "private static final", "type": "String", "declarator": "NCC_DATA = \"writable(da/ta@NCC-1701-D)\"", "var_name": "NCC_DATA"}, {"original_string": "private static final String AND_DATA = ENGAGE_DATA + \"&\" + NCC_DATA;", "modifier": "private static final", "type": "String", "declarator": "AND_DATA = ENGAGE_DATA + \"&\" + NCC_DATA", "var_name": "AND_DATA"}, {"original_string": "private static final String OR_DATA = ENGAGE_DATA + \"|\" + NCC_DATA;", "modifier": "private static final", "type": "String", "declarator": "OR_DATA = ENGAGE_DATA + \"|\" + NCC_DATA", "var_name": "OR_DATA"}], "file": "meta/src/test/java/org/jboss/hal/meta/security/ConstraintsTest.java"}, "test_case": {"identifier": "parseBlank", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseBlank() {\n        Constraints constraints = Constraints.parse(\"   \");\n        assertEmpty(constraints);\n    }", "signature": "void parseBlank()", "full_signature": "@Test public void parseBlank()", "class_method_signature": "ConstraintsTest.parseBlank()", "testcase": true, "constructor": false, "invocations": ["parse", "assertEmpty"]}, "focal_class": {"identifier": "Constraints", "superclass": "", "interfaces": "implements Iterable<Constraint>", "fields": [{"original_string": "private final LinkedHashSet<Constraint> constraints;", "modifier": "private final", "type": "LinkedHashSet<Constraint>", "declarator": "constraints", "var_name": "constraints"}, {"original_string": "private final Operator operator;", "modifier": "private final", "type": "Operator", "declarator": "operator", "var_name": "operator"}], "methods": [{"identifier": "single", "parameters": "(Constraint constraint)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints single(Constraint constraint)", "full_signature": "public static Constraints single(Constraint constraint)", "class_method_signature": "Constraints.single(Constraint constraint)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(Constraint first, Constraint... rest)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints and(Constraint first, Constraint... rest)", "full_signature": "public static Constraints and(Constraint first, Constraint... rest)", "class_method_signature": "Constraints.and(Constraint first, Constraint... rest)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(Iterable<Constraint> constraints)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints and(Iterable<Constraint> constraints)", "full_signature": "public static Constraints and(Iterable<Constraint> constraints)", "class_method_signature": "Constraints.and(Iterable<Constraint> constraints)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(Constraint first, Constraint... rest)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints or(Constraint first, Constraint... rest)", "full_signature": "public static Constraints or(Constraint first, Constraint... rest)", "class_method_signature": "Constraints.or(Constraint first, Constraint... rest)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(Iterable<Constraint> constraints)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints or(Iterable<Constraint> constraints)", "full_signature": "public static Constraints or(Iterable<Constraint> constraints)", "class_method_signature": "Constraints.or(Iterable<Constraint> constraints)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "Constraints", "signature": "Constraints empty()", "full_signature": "public static Constraints empty()", "class_method_signature": "Constraints.empty()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String input)", "modifiers": "public static", "return": "Constraints", "signature": "Constraints parse(String input)", "full_signature": "public static Constraints parse(String input)", "class_method_signature": "Constraints.parse(String input)", "testcase": false, "constructor": false}, {"identifier": "Constraints", "parameters": "(LinkedHashSet<Constraint> constraints, Operator operator)", "modifiers": "private", "return": "", "signature": " Constraints(LinkedHashSet<Constraint> constraints, Operator operator)", "full_signature": "private  Constraints(LinkedHashSet<Constraint> constraints, Operator operator)", "class_method_signature": "Constraints.Constraints(LinkedHashSet<Constraint> constraints, Operator operator)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Constraints.toString()", "testcase": false, "constructor": false}, {"identifier": "data", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String data()", "full_signature": "public String data()", "class_method_signature": "Constraints.data()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Constraint>", "signature": "Iterator<Constraint> iterator()", "full_signature": "@Override public Iterator<Constraint> iterator()", "class_method_signature": "Constraints.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Constraints.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Constraints.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Object o)", "full_signature": "public boolean contains(Object o)", "class_method_signature": "Constraints.contains(Object o)", "testcase": false, "constructor": false}, {"identifier": "getConstraints", "parameters": "()", "modifiers": "public", "return": "Set<Constraint>", "signature": "Set<Constraint> getConstraints()", "full_signature": "public Set<Constraint> getConstraints()", "class_method_signature": "Constraints.getConstraints()", "testcase": false, "constructor": false}, {"identifier": "getOperator", "parameters": "()", "modifiers": "public", "return": "Operator", "signature": "Operator getOperator()", "full_signature": "public Operator getOperator()", "class_method_signature": "Constraints.getOperator()", "testcase": false, "constructor": false}], "file": "meta/src/main/java/org/jboss/hal/meta/security/Constraints.java"}, "focal_method": {"identifier": "parse", "parameters": "(String input)", "modifiers": "public static", "return": "Constraints", "body": "public static Constraints parse(String input) {\n        if (emptyToNull(input) != null) {\n            Operator operator;\n            if (input.contains(AND.operator)) {\n                operator = AND;\n            } else if (input.contains(OR.operator)) {\n                operator = OR;\n            } else {\n                operator = AND;\n            }\n            Iterable<String> values = Splitter.on(operator.operator)\n                    .omitEmptyStrings()\n                    .trimResults()\n                    .split(input);\n            LinkedHashSet<Constraint> constraints = new LinkedHashSet<>();\n            for (String value : values) {\n                try {\n                    constraints.add(Constraint.parse(value));\n                } catch (IllegalArgumentException ignored) {\n                }\n            }\n            return new Constraints(constraints, operator);\n\n        } else {\n            return empty();\n        }\n    }", "signature": "Constraints parse(String input)", "full_signature": "public static Constraints parse(String input)", "class_method_signature": "Constraints.parse(String input)", "testcase": false, "constructor": false, "invocations": ["emptyToNull", "contains", "contains", "split", "trimResults", "omitEmptyStrings", "on", "add", "parse", "empty"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}