{"test_class": {"identifier": "PatternUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int LIST_ATTRIBUTE_SIZE = 3;", "modifier": "private static final", "type": "int", "declarator": "LIST_ATTRIBUTE_SIZE = 3", "var_name": "LIST_ATTRIBUTE_SIZE"}], "file": "tiles-core/src/test/java/org/apache/tiles/definition/pattern/PatternUtilTest.java"}, "test_case": {"identifier": "testReplacePlaceholdersEL_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReplacePlaceholdersEL_1() {\n        Map<String, Attribute> attributes = new HashMap<String, Attribute>();\n        Attribute attribute = new Attribute(\"some-{1}-${requestScope.someVariable}-other-{2}.jsp\");\n        attribute.setExpressionObject(new Expression((String)attribute.getValue()));\n        attributes.put(\"something\", attribute);\n        Definition definition = new Definition(\"definitionName\", new Attribute(\"template\"), attributes);\n        Definition nudef = PatternUtil.replacePlaceholders(definition, \"nudef\", \"value0\", \"value1\", \"value2\", \"value3\");\n        assertEquals(\"nudef\", nudef.getName());\n\n        assertEquals(\n                \"some-value1-${requestScope.someVariable}-other-value2.jsp\",\n                nudef.getAttribute(\"something\").getValue());\n\n        assertEquals(\n                \"some-value1-${requestScope.someVariable}-other-value2.jsp\",\n                nudef.getAttribute(\"something\").getExpressionObject().getExpression());\n    }", "signature": "void testReplacePlaceholdersEL_1()", "full_signature": "@Test public void testReplacePlaceholdersEL_1()", "class_method_signature": "PatternUtilTest.testReplacePlaceholdersEL_1()", "testcase": true, "constructor": false, "invocations": ["setExpressionObject", "getValue", "put", "replacePlaceholders", "assertEquals", "getName", "assertEquals", "getValue", "getAttribute", "assertEquals", "getExpression", "getExpressionObject", "getAttribute"]}, "focal_class": {"identifier": "PatternUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Locale ROOT_LOCALE = new Locale(\"\", \"\");", "modifier": "private static final", "type": "Locale", "declarator": "ROOT_LOCALE = new Locale(\"\", \"\")", "var_name": "ROOT_LOCALE"}, {"original_string": "private static final Pattern INVALID_FORMAT_ELEMENT = Pattern.compile(\"\\\\{[^}0-9]+\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "INVALID_FORMAT_ELEMENT = Pattern.compile(\"\\\\{[^}0-9]+\\\\}\")", "var_name": "INVALID_FORMAT_ELEMENT"}], "methods": [{"identifier": "PatternUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " PatternUtil()", "full_signature": "private  PatternUtil()", "class_method_signature": "PatternUtil.PatternUtil()", "testcase": false, "constructor": true}, {"identifier": "replacePlaceholders", "parameters": "(Definition d, String name,\n            Object... varsOrig)", "modifiers": "public static", "return": "Definition", "signature": "Definition replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "full_signature": "public static Definition replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "class_method_signature": "PatternUtil.replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "testcase": false, "constructor": false}, {"identifier": "createExtractedMap", "parameters": "(Map<K, V> map, Set<K> keys)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> createExtractedMap(Map<K, V> map, Set<K> keys)", "full_signature": "public static Map<K, V> createExtractedMap(Map<K, V> map, Set<K> keys)", "class_method_signature": "PatternUtil.createExtractedMap(Map<K, V> map, Set<K> keys)", "testcase": false, "constructor": false}, {"identifier": "replaceVarsInAttribute", "parameters": "(Attribute attr,\n            Object... vars)", "modifiers": "private static", "return": "Attribute", "signature": "Attribute replaceVarsInAttribute(Attribute attr,\n            Object... vars)", "full_signature": "private static Attribute replaceVarsInAttribute(Attribute attr,\n            Object... vars)", "class_method_signature": "PatternUtil.replaceVarsInAttribute(Attribute attr,\n            Object... vars)", "testcase": false, "constructor": false}, {"identifier": "replaceVarsInSimpleAttribute", "parameters": "(Attribute attr,\n            Object... vars)", "modifiers": "private static", "return": "Attribute", "signature": "Attribute replaceVarsInSimpleAttribute(Attribute attr,\n            Object... vars)", "full_signature": "private static Attribute replaceVarsInSimpleAttribute(Attribute attr,\n            Object... vars)", "class_method_signature": "PatternUtil.replaceVarsInSimpleAttribute(Attribute attr,\n            Object... vars)", "testcase": false, "constructor": false}, {"identifier": "replaceVarsInListAttribute", "parameters": "(ListAttribute listAttr,\n            Object... vars)", "modifiers": "private static", "return": "Attribute", "signature": "Attribute replaceVarsInListAttribute(ListAttribute listAttr,\n            Object... vars)", "full_signature": "private static Attribute replaceVarsInListAttribute(ListAttribute listAttr,\n            Object... vars)", "class_method_signature": "PatternUtil.replaceVarsInListAttribute(ListAttribute listAttr,\n            Object... vars)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String st, Object... vars)", "modifiers": "private static", "return": "String", "signature": "String replace(String st, Object... vars)", "full_signature": "private static String replace(String st, Object... vars)", "class_method_signature": "PatternUtil.replace(String st, Object... vars)", "testcase": false, "constructor": false}, {"identifier": "replaceNullsWithBlank", "parameters": "(Object[] varsOrig)", "modifiers": "private static", "return": "Object[]", "signature": "Object[] replaceNullsWithBlank(Object[] varsOrig)", "full_signature": "private static Object[] replaceNullsWithBlank(Object[] varsOrig)", "class_method_signature": "PatternUtil.replaceNullsWithBlank(Object[] varsOrig)", "testcase": false, "constructor": false}], "file": "tiles-core/src/main/java/org/apache/tiles/definition/pattern/PatternUtil.java"}, "focal_method": {"identifier": "replacePlaceholders", "parameters": "(Definition d, String name,\n            Object... varsOrig)", "modifiers": "public static", "return": "Definition", "body": "public static Definition replacePlaceholders(Definition d, String name,\n            Object... varsOrig) {\n\n        Object[] vars = replaceNullsWithBlank(varsOrig);\n\n        Definition nudef = new Definition();\n\n        nudef.setExtends(replace(d.getExtends(), vars));\n        nudef.setName(name);\n        nudef.setPreparer(replace(d.getPreparer(), vars));\n        Attribute templateAttribute = d.getTemplateAttribute();\n        if (templateAttribute != null) {\n            nudef.setTemplateAttribute(replaceVarsInAttribute(\n                    templateAttribute, vars));\n        }\n\n        Set<String> attributeNames = d.getLocalAttributeNames();\n        if (attributeNames != null && !attributeNames.isEmpty()) {\n            for (String attributeName : attributeNames) {\n                Attribute attr = d.getLocalAttribute(attributeName);\n                Attribute nuattr = replaceVarsInAttribute(attr, vars);\n\n                nudef.putAttribute(replace(attributeName, vars), nuattr);\n            }\n        }\n\n        attributeNames = d.getCascadedAttributeNames();\n        if (attributeNames != null && !attributeNames.isEmpty()) {\n            for (String attributeName : attributeNames) {\n                Attribute attr = d.getCascadedAttribute(attributeName);\n                Attribute nuattr = replaceVarsInAttribute(attr, vars);\n\n                nudef.putAttribute(replace(attributeName, vars), nuattr, true);\n            }\n        }\n\n        return nudef;\n    }", "signature": "Definition replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "full_signature": "public static Definition replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "class_method_signature": "PatternUtil.replacePlaceholders(Definition d, String name,\n            Object... varsOrig)", "testcase": false, "constructor": false, "invocations": ["replaceNullsWithBlank", "setExtends", "replace", "getExtends", "setName", "setPreparer", "replace", "getPreparer", "getTemplateAttribute", "setTemplateAttribute", "replaceVarsInAttribute", "getLocalAttributeNames", "isEmpty", "getLocalAttribute", "replaceVarsInAttribute", "putAttribute", "replace", "getCascadedAttributeNames", "isEmpty", "getCascadedAttribute", "replaceVarsInAttribute", "putAttribute", "replace"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}