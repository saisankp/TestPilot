{"test_class": {"identifier": "CommentServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n    private CommentRepository commentRepository;", "modifier": "@MockBean\n    private", "type": "CommentRepository", "declarator": "commentRepository", "var_name": "commentRepository"}, {"original_string": "private CommentService commentService;", "modifier": "private", "type": "CommentService", "declarator": "commentService", "var_name": "commentService"}], "file": "Chapter02/spring-boot-2-web-app/src/test/java/com/packtpub/springboot2webapp/service/CommentServiceTest.java"}, "test_case": {"identifier": "getAllCommentsForToday_HappyPath_ShouldReturn1Comment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllCommentsForToday_HappyPath_ShouldReturn1Comment() {\n        // Given\n        Comment comment = new Comment();\n        comment.setComment(\"Test\");\n        comment.setType(CommentType.PLUS);\n        comment.setCreatedDate(new Timestamp(System.currentTimeMillis()));\n        List<Comment> comments = Arrays.asList(comment);\n        LocalDate now = LocalDate.now();\n        when(commentRepository.findByCreatedYearAndMonthAndDay(now.getYear(), now.getMonth().getValue(), now.getDayOfMonth())).thenReturn(comments);\n\n        // When\n        List<Comment> actualComments = commentService.getAllCommentsForToday();\n\n        // Then\n        verify(commentRepository, times(1)).findByCreatedYearAndMonthAndDay(now.getYear(), now.getMonth().getValue(), now.getDayOfMonth());\n        assertThat(comments).isEqualTo(actualComments);\n    }", "signature": "void getAllCommentsForToday_HappyPath_ShouldReturn1Comment()", "full_signature": "@Test public void getAllCommentsForToday_HappyPath_ShouldReturn1Comment()", "class_method_signature": "CommentServiceTest.getAllCommentsForToday_HappyPath_ShouldReturn1Comment()", "testcase": true, "constructor": false, "invocations": ["setComment", "setType", "setCreatedDate", "currentTimeMillis", "asList", "now", "thenReturn", "when", "findByCreatedYearAndMonthAndDay", "getYear", "getValue", "getMonth", "getDayOfMonth", "getAllCommentsForToday", "findByCreatedYearAndMonthAndDay", "verify", "times", "getYear", "getValue", "getMonth", "getDayOfMonth", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "CommentService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CommentService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CommentService.class)", "var_name": "LOGGER"}, {"original_string": "private final CommentRepository commentRepository;", "modifier": "private final", "type": "CommentRepository", "declarator": "commentRepository", "var_name": "commentRepository"}], "methods": [{"identifier": "CommentService", "parameters": "(CommentRepository commentRepository)", "modifiers": "public", "return": "", "signature": " CommentService(CommentRepository commentRepository)", "full_signature": "public  CommentService(CommentRepository commentRepository)", "class_method_signature": "CommentService.CommentService(CommentRepository commentRepository)", "testcase": false, "constructor": true}, {"identifier": "saveAll", "parameters": "(List<Comment> comments)", "modifiers": "@Transactional(rollbackFor = Exception.class) public", "return": "List<Comment>", "signature": "List<Comment> saveAll(List<Comment> comments)", "full_signature": "@Transactional(rollbackFor = Exception.class) public List<Comment> saveAll(List<Comment> comments)", "class_method_signature": "CommentService.saveAll(List<Comment> comments)", "testcase": false, "constructor": false}, {"identifier": "getAllCommentsForToday", "parameters": "()", "modifiers": "public", "return": "List<Comment>", "signature": "List<Comment> getAllCommentsForToday()", "full_signature": "public List<Comment> getAllCommentsForToday()", "class_method_signature": "CommentService.getAllCommentsForToday()", "testcase": false, "constructor": false}], "file": "Chapter02/spring-boot-2-web-app/src/main/java/com/packtpub/springboot2webapp/service/CommentService.java"}, "focal_method": {"identifier": "getAllCommentsForToday", "parameters": "()", "modifiers": "public", "return": "List<Comment>", "body": "public List<Comment> getAllCommentsForToday() {\n        LocalDate localDate = LocalDate.now();\n        return commentRepository.findByCreatedYearAndMonthAndDay(localDate.getYear(), localDate.getMonth().getValue(), localDate.getDayOfMonth());\n    }", "signature": "List<Comment> getAllCommentsForToday()", "full_signature": "public List<Comment> getAllCommentsForToday()", "class_method_signature": "CommentService.getAllCommentsForToday()", "testcase": false, "constructor": false, "invocations": ["now", "findByCreatedYearAndMonthAndDay", "getYear", "getValue", "getMonth", "getDayOfMonth"]}, "repository": {"repo_id": 125030262, "url": "https://github.com/PacktPublishing/Spring-Boot-2.0-Projects", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 60, "size": 1848, "license": "licensed"}}