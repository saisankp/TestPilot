{"test_class": {"identifier": "GatewayJobServiceGatewayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int PAGE_SIZE = 2;", "modifier": "private static final", "type": "int", "declarator": "PAGE_SIZE = 2", "var_name": "PAGE_SIZE"}, {"original_string": "private static final Page FIRST_PAGE = Page.newBuilder().setPageSize(PAGE_SIZE).build();", "modifier": "private static final", "type": "Page", "declarator": "FIRST_PAGE = Page.newBuilder().setPageSize(PAGE_SIZE).build()", "var_name": "FIRST_PAGE"}, {"original_string": "private static final int JOB_SIZE = 6;", "modifier": "private static final", "type": "int", "declarator": "JOB_SIZE = 6", "var_name": "JOB_SIZE"}, {"original_string": "private static final int ARCHIVED_TASKS_COUNT = JOB_SIZE * 2;", "modifier": "private static final", "type": "int", "declarator": "ARCHIVED_TASKS_COUNT = JOB_SIZE * 2", "var_name": "ARCHIVED_TASKS_COUNT"}, {"original_string": "private static final int ALL_TASKS_COUNT = JOB_SIZE + ARCHIVED_TASKS_COUNT;", "modifier": "private static final", "type": "int", "declarator": "ALL_TASKS_COUNT = JOB_SIZE + ARCHIVED_TASKS_COUNT", "var_name": "ALL_TASKS_COUNT"}, {"original_string": "private static final Job<BatchJobExt> JOB = JobGenerator.batchJobsOfSize(JOB_SIZE).getValue();", "modifier": "private static final", "type": "Job<BatchJobExt>", "declarator": "JOB = JobGenerator.batchJobsOfSize(JOB_SIZE).getValue()", "var_name": "JOB"}, {"original_string": "private static final List<Task> ARCHIVED_TASKS = evaluateTimes(ARCHIVED_TASKS_COUNT, i -> newGrpcTask(i, TaskState.Finished));", "modifier": "private static final", "type": "List<Task>", "declarator": "ARCHIVED_TASKS = evaluateTimes(ARCHIVED_TASKS_COUNT, i -> newGrpcTask(i, TaskState.Finished))", "var_name": "ARCHIVED_TASKS"}, {"original_string": "private static final List<Task> ACTIVE_TASKS = evaluateTimes(JOB_SIZE, i -> newGrpcTask(ARCHIVED_TASKS_COUNT + i, TaskState.Started));", "modifier": "private static final", "type": "List<Task>", "declarator": "ACTIVE_TASKS = evaluateTimes(JOB_SIZE, i -> newGrpcTask(ARCHIVED_TASKS_COUNT + i, TaskState.Started))", "var_name": "ACTIVE_TASKS"}], "file": "titus-server-gateway/src/test/java/com/netflix/titus/gateway/service/v3/internal/GatewayJobServiceGatewayTest.java"}, "test_case": {"identifier": "verifyDeDupTaskIds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyDeDupTaskIds() {\n        List<String> expectedIdList = new ArrayList<String>() {{\n            add(\"task1\");\n            add(\"task2\");\n            add(\"task3\");\n            add(\"task4\");\n        }};\n\n        // with duplicate ids\n        List<Task> activeTasks = new ArrayList<>();\n        activeTasks.add(Task.newBuilder().setId(\"task1\").build());\n        activeTasks.add(Task.newBuilder().setId(\"task2\").build());\n        activeTasks.add(Task.newBuilder().setId(\"task3\").build());\n\n        List<Task> archivedTasks = new ArrayList<>();\n        archivedTasks.add(Task.newBuilder().setId(\"task2\").build());\n        archivedTasks.add(Task.newBuilder().setId(\"task3\").build());\n        archivedTasks.add(Task.newBuilder().setId(\"task4\").build());\n\n        List<Task> tasks = GatewayJobServiceGateway.deDupTasks(activeTasks, archivedTasks);\n        assertThat(tasks.size()).isEqualTo(4);\n\n        List<String> taskIds = tasks.stream().map(Task::getId).sorted().collect(Collectors.toList());\n        assertThat(taskIds).isEqualTo(expectedIdList);\n\n        // disjoint lists\n        activeTasks = new ArrayList<>();\n        activeTasks.add(Task.newBuilder().setId(\"task1\").build());\n        activeTasks.add(Task.newBuilder().setId(\"task2\").build());\n\n        archivedTasks = new ArrayList<>();\n        archivedTasks.add(Task.newBuilder().setId(\"task3\").build());\n        archivedTasks.add(Task.newBuilder().setId(\"task4\").build());\n\n        tasks = GatewayJobServiceGateway.deDupTasks(activeTasks, archivedTasks);\n        assertThat(tasks.size()).isEqualTo(4);\n        taskIds = tasks.stream().map(Task::getId).collect(Collectors.toList());\n        Collections.sort(taskIds);\n        assertThat(taskIds).isEqualTo(expectedIdList);\n    }", "signature": "void verifyDeDupTaskIds()", "full_signature": "@Test public void verifyDeDupTaskIds()", "class_method_signature": "GatewayJobServiceGatewayTest.verifyDeDupTaskIds()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "deDupTasks", "isEqualTo", "assertThat", "size", "collect", "sorted", "map", "stream", "toList", "isEqualTo", "assertThat", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "add", "build", "setId", "newBuilder", "deDupTasks", "isEqualTo", "assertThat", "size", "collect", "map", "stream", "toList", "sort", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "GatewayJobServiceGateway", "superclass": "extends JobServiceGatewayDelegate", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(GatewayJobServiceGateway.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(GatewayJobServiceGateway.class)", "var_name": "logger"}, {"original_string": "private static final int MAX_CONCURRENT_JOBS_TO_RETRIEVE = 10;", "modifier": "private static final", "type": "int", "declarator": "MAX_CONCURRENT_JOBS_TO_RETRIEVE = 10", "var_name": "MAX_CONCURRENT_JOBS_TO_RETRIEVE"}, {"original_string": "private final GrpcRequestConfiguration tunablesConfiguration;", "modifier": "private final", "type": "GrpcRequestConfiguration", "declarator": "tunablesConfiguration", "var_name": "tunablesConfiguration"}, {"original_string": "private final GatewayConfiguration gatewayConfiguration;", "modifier": "private final", "type": "GatewayConfiguration", "declarator": "gatewayConfiguration", "var_name": "gatewayConfiguration"}, {"original_string": "private final JobManagementServiceStub client;", "modifier": "private final", "type": "JobManagementServiceStub", "declarator": "client", "var_name": "client"}, {"original_string": "private final JobStore store;", "modifier": "private final", "type": "JobStore", "declarator": "store", "var_name": "store"}, {"original_string": "private final LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task> logStorageInfo;", "modifier": "private final", "type": "LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task>", "declarator": "logStorageInfo", "var_name": "logStorageInfo"}, {"original_string": "private final TaskRelocationDataInjector taskRelocationDataInjector;", "modifier": "private final", "type": "TaskRelocationDataInjector", "declarator": "taskRelocationDataInjector", "var_name": "taskRelocationDataInjector"}, {"original_string": "private final NeedsMigrationQueryHandler needsMigrationQueryHandler;", "modifier": "private final", "type": "NeedsMigrationQueryHandler", "declarator": "needsMigrationQueryHandler", "var_name": "needsMigrationQueryHandler"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}], "methods": [{"identifier": "GatewayJobServiceGateway", "parameters": "(GrpcRequestConfiguration tunablesConfiguration,\n                                    GatewayConfiguration gatewayConfiguration,\n                                    JobManagerConfiguration jobManagerConfiguration,\n                                    JobManagementServiceStub client,\n                                    JobStore store,\n                                    LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task> logStorageInfo,\n                                    TaskRelocationDataInjector taskRelocationDataInjector,\n                                    NeedsMigrationQueryHandler needsMigrationQueryHandler,\n                                    @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                    DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                    @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> securityGroupsRequiredPredicate,\n                                    @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                    JobAssertions jobAssertions,\n                                    AdmissionValidator<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> validator,\n                                    AdmissionSanitizer<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> sanitizer,\n                                    TitusRuntime titusRuntime)", "modifiers": "@Inject public", "return": "", "signature": " GatewayJobServiceGateway(GrpcRequestConfiguration tunablesConfiguration,\n                                    GatewayConfiguration gatewayConfiguration,\n                                    JobManagerConfiguration jobManagerConfiguration,\n                                    JobManagementServiceStub client,\n                                    JobStore store,\n                                    LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task> logStorageInfo,\n                                    TaskRelocationDataInjector taskRelocationDataInjector,\n                                    NeedsMigrationQueryHandler needsMigrationQueryHandler,\n                                    @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                    DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                    @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> securityGroupsRequiredPredicate,\n                                    @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                    JobAssertions jobAssertions,\n                                    AdmissionValidator<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> validator,\n                                    AdmissionSanitizer<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> sanitizer,\n                                    TitusRuntime titusRuntime)", "full_signature": "@Inject public  GatewayJobServiceGateway(GrpcRequestConfiguration tunablesConfiguration,\n                                    GatewayConfiguration gatewayConfiguration,\n                                    JobManagerConfiguration jobManagerConfiguration,\n                                    JobManagementServiceStub client,\n                                    JobStore store,\n                                    LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task> logStorageInfo,\n                                    TaskRelocationDataInjector taskRelocationDataInjector,\n                                    NeedsMigrationQueryHandler needsMigrationQueryHandler,\n                                    @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                    DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                    @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> securityGroupsRequiredPredicate,\n                                    @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                    JobAssertions jobAssertions,\n                                    AdmissionValidator<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> validator,\n                                    AdmissionSanitizer<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> sanitizer,\n                                    TitusRuntime titusRuntime)", "class_method_signature": "GatewayJobServiceGateway.GatewayJobServiceGateway(GrpcRequestConfiguration tunablesConfiguration,\n                                    GatewayConfiguration gatewayConfiguration,\n                                    JobManagerConfiguration jobManagerConfiguration,\n                                    JobManagementServiceStub client,\n                                    JobStore store,\n                                    LogStorageInfo<com.netflix.titus.api.jobmanager.model.job.Task> logStorageInfo,\n                                    TaskRelocationDataInjector taskRelocationDataInjector,\n                                    NeedsMigrationQueryHandler needsMigrationQueryHandler,\n                                    @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                    DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                    @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> securityGroupsRequiredPredicate,\n                                    @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                    JobAssertions jobAssertions,\n                                    AdmissionValidator<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> validator,\n                                    AdmissionSanitizer<com.netflix.titus.api.jobmanager.model.job.JobDescriptor> sanitizer,\n                                    TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "findJob", "parameters": "(String jobId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<Job>", "signature": "Observable<Job> findJob(String jobId, CallMetadata callMetadata)", "full_signature": "@Override public Observable<Job> findJob(String jobId, CallMetadata callMetadata)", "class_method_signature": "GatewayJobServiceGateway.findJob(String jobId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTask", "parameters": "(String taskId, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<Task>", "signature": "Observable<Task> findTask(String taskId, CallMetadata callMetadata)", "full_signature": "@Override public Observable<Task> findTask(String taskId, CallMetadata callMetadata)", "class_method_signature": "GatewayJobServiceGateway.findTask(String taskId, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "findTasks", "parameters": "(TaskQuery taskQuery, CallMetadata callMetadata)", "modifiers": "@Override public", "return": "Observable<TaskQueryResult>", "signature": "Observable<TaskQueryResult> findTasks(TaskQuery taskQuery, CallMetadata callMetadata)", "full_signature": "@Override public Observable<TaskQueryResult> findTasks(TaskQuery taskQuery, CallMetadata callMetadata)", "class_method_signature": "GatewayJobServiceGateway.findTasks(TaskQuery taskQuery, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "newActiveTaskQueryAction", "parameters": "(TaskQuery taskQuery, CallMetadata callMetadata)", "modifiers": "private", "return": "Observable<TaskQueryResult>", "signature": "Observable<TaskQueryResult> newActiveTaskQueryAction(TaskQuery taskQuery, CallMetadata callMetadata)", "full_signature": "private Observable<TaskQueryResult> newActiveTaskQueryAction(TaskQuery taskQuery, CallMetadata callMetadata)", "class_method_signature": "GatewayJobServiceGateway.newActiveTaskQueryAction(TaskQuery taskQuery, CallMetadata callMetadata)", "testcase": false, "constructor": false}, {"identifier": "retrieveArchivedJob", "parameters": "(String jobId)", "modifiers": "private", "return": "Observable<Job>", "signature": "Observable<Job> retrieveArchivedJob(String jobId)", "full_signature": "private Observable<Job> retrieveArchivedJob(String jobId)", "class_method_signature": "GatewayJobServiceGateway.retrieveArchivedJob(String jobId)", "testcase": false, "constructor": false}, {"identifier": "retrieveArchivedTasksForJobs", "parameters": "(Set<String> jobIds, TaskQuery taskQuery)", "modifiers": "private", "return": "Observable<List<Task>>", "signature": "Observable<List<Task>> retrieveArchivedTasksForJobs(Set<String> jobIds, TaskQuery taskQuery)", "full_signature": "private Observable<List<Task>> retrieveArchivedTasksForJobs(Set<String> jobIds, TaskQuery taskQuery)", "class_method_signature": "GatewayJobServiceGateway.retrieveArchivedTasksForJobs(Set<String> jobIds, TaskQuery taskQuery)", "testcase": false, "constructor": false}, {"identifier": "retrieveArchivedTask", "parameters": "(String taskId)", "modifiers": "private", "return": "Observable<Task>", "signature": "Observable<Task> retrieveArchivedTask(String taskId)", "full_signature": "private Observable<Task> retrieveArchivedTask(String taskId)", "class_method_signature": "GatewayJobServiceGateway.retrieveArchivedTask(String taskId)", "testcase": false, "constructor": false}, {"identifier": "combineTaskResults", "parameters": "(TaskQuery taskQuery,\n                                              TaskQueryResult activeTasksResult,\n                                              List<Task> archivedTasks)", "modifiers": "@VisibleForTesting static", "return": "TaskQueryResult", "signature": "TaskQueryResult combineTaskResults(TaskQuery taskQuery,\n                                              TaskQueryResult activeTasksResult,\n                                              List<Task> archivedTasks)", "full_signature": "@VisibleForTesting static TaskQueryResult combineTaskResults(TaskQuery taskQuery,\n                                              TaskQueryResult activeTasksResult,\n                                              List<Task> archivedTasks)", "class_method_signature": "GatewayJobServiceGateway.combineTaskResults(TaskQuery taskQuery,\n                                              TaskQueryResult activeTasksResult,\n                                              List<Task> archivedTasks)", "testcase": false, "constructor": false}, {"identifier": "deDupTasks", "parameters": "(List<Task> activeTasks, List<Task> archivedTasks)", "modifiers": "@VisibleForTesting static", "return": "List<Task>", "signature": "List<Task> deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "full_signature": "@VisibleForTesting static List<Task> deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "class_method_signature": "GatewayJobServiceGateway.deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "testcase": false, "constructor": false}], "file": "titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/GatewayJobServiceGateway.java"}, "focal_method": {"identifier": "deDupTasks", "parameters": "(List<Task> activeTasks, List<Task> archivedTasks)", "modifiers": "@VisibleForTesting static", "return": "List<Task>", "body": "@VisibleForTesting\n    static List<Task> deDupTasks(List<Task> activeTasks, List<Task> archivedTasks) {\n        Map<String, Task> archivedTasksMap = archivedTasks.stream().collect(Collectors.toMap(Task::getId, Function.identity()));\n        List<Task> uniqueActiveTasks = activeTasks.stream().filter(activeTask -> {\n            if (archivedTasksMap.containsKey(activeTask.getId())) {\n                logger.warn(\"Duplicate Task detected (archived) {} - (active) {}\", archivedTasksMap.get(activeTask.getId()), activeTask);\n                return false;\n            }\n            return true;\n        }).collect(Collectors.toList());\n        uniqueActiveTasks.addAll(archivedTasks);\n        return uniqueActiveTasks;\n    }", "signature": "List<Task> deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "full_signature": "@VisibleForTesting static List<Task> deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "class_method_signature": "GatewayJobServiceGateway.deDupTasks(List<Task> activeTasks, List<Task> archivedTasks)", "testcase": false, "constructor": false, "invocations": ["collect", "stream", "toMap", "identity", "collect", "filter", "stream", "containsKey", "getId", "warn", "get", "getId", "toList", "addAll"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}