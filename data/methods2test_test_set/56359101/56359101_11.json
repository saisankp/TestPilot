{"test_class": {"identifier": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironmentTest", "superclass": "extends ConsolidationAlgorithmsTest", "interfaces": "", "fields": [{"original_string": "private ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment consolidationAlgorithm;", "modifier": "private", "type": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment", "declarator": "consolidationAlgorithm", "var_name": "consolidationAlgorithm"}], "file": "autonomic-administration-algorithms/src/test/java/br/com/autonomiccs/autonomic/administration/algorithms/impl/ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironmentTest.java"}, "test_case": {"identifier": "removeOneIfPossibleTestListNotEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeOneIfPossibleTestListNotEmpty() {\n        List<HostResources> hosts = createClusterHomogeneousHosts(2);\n        consolidationAlgorithm.removeOneIfPossible(hosts);\n        Assert.assertEquals(1, hosts.size());\n    }", "signature": "void removeOneIfPossibleTestListNotEmpty()", "full_signature": "@Test public void removeOneIfPossibleTestListNotEmpty()", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironmentTest.removeOneIfPossibleTestListNotEmpty()", "testcase": true, "constructor": false, "invocations": ["createClusterHomogeneousHosts", "removeOneIfPossible", "assertEquals", "size"]}, "focal_class": {"identifier": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment", "superclass": "extends ConsolidationScoredPreferenceForBigHosts", "interfaces": "", "fields": [{"original_string": "protected VmsDispersionAlgorithmForHomogeneousEnvironment vmsDispersionHomogeneousHosts = new VmsDispersionAlgorithmForHomogeneousEnvironment();", "modifier": "protected", "type": "VmsDispersionAlgorithmForHomogeneousEnvironment", "declarator": "vmsDispersionHomogeneousHosts = new VmsDispersionAlgorithmForHomogeneousEnvironment()", "var_name": "vmsDispersionHomogeneousHosts"}, {"original_string": "protected long totalNumbersOfHostsInCluster = 0;", "modifier": "protected", "type": "long", "declarator": "totalNumbersOfHostsInCluster = 0", "var_name": "totalNumbersOfHostsInCluster"}], "methods": [{"identifier": "rankHosts", "parameters": "(List<HostResources> hostsList)", "modifiers": "@Override public", "return": "List<HostResources>", "signature": "List<HostResources> rankHosts(List<HostResources> hostsList)", "full_signature": "@Override public List<HostResources> rankHosts(List<HostResources> hostsList)", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.rankHosts(List<HostResources> hostsList)", "testcase": false, "constructor": false}, {"identifier": "mapVMsToHost", "parameters": "(List<HostResources> rankedHosts)", "modifiers": "@Override public", "return": "Map<Long, HostResources>", "signature": "Map<Long, HostResources> mapVMsToHost(List<HostResources> rankedHosts)", "full_signature": "@Override public Map<Long, HostResources> mapVMsToHost(List<HostResources> rankedHosts)", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.mapVMsToHost(List<HostResources> rankedHosts)", "testcase": false, "constructor": false}, {"identifier": "rankHostToPowerOff", "parameters": "(List<HostResources> idleHosts)", "modifiers": "@Override public", "return": "List<HostResources>", "signature": "List<HostResources> rankHostToPowerOff(List<HostResources> idleHosts)", "full_signature": "@Override public List<HostResources> rankHostToPowerOff(List<HostResources> idleHosts)", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.rankHostToPowerOff(List<HostResources> idleHosts)", "testcase": false, "constructor": false}, {"identifier": "removeOneIfPossible", "parameters": "(List<HostResources> rankedHostToPowerOff)", "modifiers": "protected", "return": "void", "signature": "void removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "full_signature": "protected void removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "testcase": false, "constructor": false}], "file": "autonomic-administration-algorithms/src/main/java/br/com/autonomiccs/autonomic/administration/algorithms/impl/ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.java"}, "focal_method": {"identifier": "removeOneIfPossible", "parameters": "(List<HostResources> rankedHostToPowerOff)", "modifiers": "protected", "return": "void", "body": "protected void removeOneIfPossible(List<HostResources> rankedHostToPowerOff) {\n        if (rankedHostToPowerOff.isEmpty()) {\n            return;\n        }\n        rankedHostToPowerOff.remove(rankedHostToPowerOff.size() - 1);\n    }", "signature": "void removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "full_signature": "protected void removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "class_method_signature": "ConsolidationXenHaPreferenceForBigHostsHomogeneousEnvironment.removeOneIfPossible(List<HostResources> rankedHostToPowerOff)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "remove", "size"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}