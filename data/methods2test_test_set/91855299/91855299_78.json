{"test_class": {"identifier": "MapsTest", "superclass": "extends UtilityClassTest<Maps>", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/util/MapsTest.java"}, "test_case": {"identifier": "builderTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void builderTest() {\n    Map<String, String> map = Maps.<String, String>builder().put(\"A Key\", \"A Value\").build();\n\n    assertEquals(\"A Value\", map.get(\"A Key\"));\n  }", "signature": "void builderTest()", "full_signature": "@Test public void builderTest()", "class_method_signature": "MapsTest.builderTest()", "testcase": true, "constructor": false, "invocations": ["build", "put", "builder", "assertEquals", "get"]}, "focal_class": {"identifier": "Maps", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Maps", "parameters": "()", "modifiers": "private", "return": "", "signature": " Maps()", "full_signature": "private  Maps()", "class_method_signature": "Maps.Maps()", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "MapBuilder<K, V>", "signature": "MapBuilder<K, V> builder()", "full_signature": "public static MapBuilder<K, V> builder()", "class_method_signature": "Maps.builder()", "testcase": false, "constructor": false}, {"identifier": "computeIfAbsent", "parameters": "(\n      Map<K, V> map, K key, ThrowingFunction<? super K, ? extends V, ? extends X> function)", "modifiers": "public static", "return": "V", "signature": "V computeIfAbsent(\n      Map<K, V> map, K key, ThrowingFunction<? super K, ? extends V, ? extends X> function)", "full_signature": "public static V computeIfAbsent(\n      Map<K, V> map, K key, ThrowingFunction<? super K, ? extends V, ? extends X> function)", "class_method_signature": "Maps.computeIfAbsent(\n      Map<K, V> map, K key, ThrowingFunction<? super K, ? extends V, ? extends X> function)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Map<? super K, ?> map, K key)", "modifiers": "public static", "return": "T", "signature": "T get(Map<? super K, ?> map, K key)", "full_signature": "public static T get(Map<? super K, ?> map, K key)", "class_method_signature": "Maps.get(Map<? super K, ?> map, K key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Map<? super K, V> map, K key, T defaultValue)", "modifiers": "public static", "return": "T", "signature": "T getOrDefault(Map<? super K, V> map, K key, T defaultValue)", "full_signature": "public static T getOrDefault(Map<? super K, V> map, K key, T defaultValue)", "class_method_signature": "Maps.getOrDefault(Map<? super K, V> map, K key, T defaultValue)", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/util/Maps.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "MapBuilder<K, V>", "body": "public static <K, V> MapBuilder<K, V> builder() {\n    return new MapBuilder<>();\n  }", "signature": "MapBuilder<K, V> builder()", "full_signature": "public static MapBuilder<K, V> builder()", "class_method_signature": "Maps.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}