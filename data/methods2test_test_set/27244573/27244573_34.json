{"test_class": {"identifier": "CrossSectionerTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/org/hwyl/sexytopo/control/util/CrossSectionerTest.java"}, "test_case": {"identifier": "testStraightNorthCrossSection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStraightNorthCrossSection() {\n        Survey testSurvey = BasicTestSurveyCreator.createStraightNorth();\n\n        Station s2 = testSurvey.getStationByName(\"2\");\n        double angle = CrossSectioner.getAngleOfSection(testSurvey, s2);\n        Assert.assertEquals(0.0, angle);\n    }", "signature": "void testStraightNorthCrossSection()", "full_signature": "@Test public void testStraightNorthCrossSection()", "class_method_signature": "CrossSectionerTest.testStraightNorthCrossSection()", "testcase": true, "constructor": false, "invocations": ["createStraightNorth", "getStationByName", "getAngleOfSection", "assertEquals"]}, "focal_class": {"identifier": "CrossSectioner", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "section", "parameters": "(Survey survey, final Station station)", "modifiers": "public static", "return": "CrossSection", "signature": "CrossSection section(Survey survey, final Station station)", "full_signature": "public static CrossSection section(Survey survey, final Station station)", "class_method_signature": "CrossSectioner.section(Survey survey, final Station station)", "testcase": false, "constructor": false}, {"identifier": "getAngleOfSection", "parameters": "(Survey survey, Station station)", "modifiers": "public static", "return": "double", "signature": "double getAngleOfSection(Survey survey, Station station)", "full_signature": "public static double getAngleOfSection(Survey survey, Station station)", "class_method_signature": "CrossSectioner.getAngleOfSection(Survey survey, Station station)", "testcase": false, "constructor": false}, {"identifier": "getIncomingAzimuth", "parameters": "(Survey survey, Station station)", "modifiers": "private static", "return": "double", "signature": "double getIncomingAzimuth(Survey survey, Station station)", "full_signature": "private static double getIncomingAzimuth(Survey survey, Station station)", "class_method_signature": "CrossSectioner.getIncomingAzimuth(Survey survey, Station station)", "testcase": false, "constructor": false}, {"identifier": "getOutgoingAzimuth", "parameters": "(Station station)", "modifiers": "private static", "return": "double", "signature": "double getOutgoingAzimuth(Station station)", "full_signature": "private static double getOutgoingAzimuth(Station station)", "class_method_signature": "CrossSectioner.getOutgoingAzimuth(Station station)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/util/CrossSectioner.java"}, "focal_method": {"identifier": "getAngleOfSection", "parameters": "(Survey survey, Station station)", "modifiers": "public static", "return": "double", "body": "public static double getAngleOfSection(Survey survey, Station station) {\n\n        int numIncomingLegs = station == survey.getOrigin()? 0 : 1;\n        int numOutgoingLegs = station.getConnectedOnwardLegs().size();\n\n        double angle;\n        if (numIncomingLegs == 1 && numOutgoingLegs == 1) {\n            double incomingAzimuth = getIncomingAzimuth(survey, station);\n            double outgoingAzimuth = getOutgoingAzimuth(station);\n            angle = (incomingAzimuth + outgoingAzimuth) / 2;\n        } else if (numIncomingLegs == 1) {\n            // just consider the incoming leg (end of a passage or, lots of ways on)\n            double incomingAzimuth = getIncomingAzimuth(survey, station);\n            angle = incomingAzimuth;\n        } else if (numOutgoingLegs == 1) {\n            // just consider the outgoing leg (must be doing X-section at the origin)\n            double outgoingAzimuth = getOutgoingAzimuth(station);\n            angle = outgoingAzimuth;\n        } else {\n            // at the origin with no or lots of outgoing legs?? No idea....\n            angle = 0;\n        }\n\n        return angle;\n    }", "signature": "double getAngleOfSection(Survey survey, Station station)", "full_signature": "public static double getAngleOfSection(Survey survey, Station station)", "class_method_signature": "CrossSectioner.getAngleOfSection(Survey survey, Station station)", "testcase": false, "constructor": false, "invocations": ["getOrigin", "size", "getConnectedOnwardLegs", "getIncomingAzimuth", "getOutgoingAzimuth", "getIncomingAzimuth", "getOutgoingAzimuth"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}