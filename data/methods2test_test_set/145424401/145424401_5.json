{"test_class": {"identifier": "ApplicationControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MediaType contentTypeJson =\n      new MediaType(\n          MediaType.APPLICATION_JSON.getType(),\n          MediaType.APPLICATION_JSON.getSubtype(),\n          Charset.forName(\"utf8\"));", "modifier": "private", "type": "MediaType", "declarator": "contentTypeJson =\n      new MediaType(\n          MediaType.APPLICATION_JSON.getType(),\n          MediaType.APPLICATION_JSON.getSubtype(),\n          Charset.forName(\"utf8\"))", "var_name": "contentTypeJson"}, {"original_string": "private MediaType contentTypeCsv = new MediaType(\"text\", \"csv\", Charset.forName(\"utf8\"));", "modifier": "private", "type": "MediaType", "declarator": "contentTypeCsv = new MediaType(\"text\", \"csv\", Charset.forName(\"utf8\"))", "var_name": "contentTypeCsv"}, {"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private HttpMessageConverter<?> mappingJackson2HttpMessageConverter;", "modifier": "private", "type": "HttpMessageConverter<?>", "declarator": "mappingJackson2HttpMessageConverter", "var_name": "mappingJackson2HttpMessageConverter"}, {"original_string": "public static final String TEST_DEFAULT_SPACE = \"public\";", "modifier": "public static final", "type": "String", "declarator": "TEST_DEFAULT_SPACE = \"public\"", "var_name": "TEST_DEFAULT_SPACE"}, {"original_string": "public static final String TEST_DEFAULT_TENANT = \"default\";", "modifier": "public static final", "type": "String", "declarator": "TEST_DEFAULT_TENANT = \"default\"", "var_name": "TEST_DEFAULT_TENANT"}, {"original_string": "public static final String ENV_VARS =\n      \"PROCESSOR_IDENTIFIER, NUMBER_OF_PROCESSORS, PROCESSOR_LEVEL, PROCESSOR_ARCHITECTURE,\"\n          + \" PROCESSOR_REVISION, JAVA_HOME, COMPUTERNAME, MAVEN_PROJECTBASEDIR, MAVEN_HOME,\"\n          + \" MAVEN_CONFIG, MAVEN_OPTS, BUILD_URL, BUILD_TAG, BUILD_TIMESTAMP, BUILD_DISPLAY_NAME,\"\n          + \" BUILD_ID, BUILD_NUMBER, BUILD_VERSION\";", "modifier": "public static final", "type": "String", "declarator": "ENV_VARS =\n      \"PROCESSOR_IDENTIFIER, NUMBER_OF_PROCESSORS, PROCESSOR_LEVEL, PROCESSOR_ARCHITECTURE,\"\n          + \" PROCESSOR_REVISION, JAVA_HOME, COMPUTERNAME, MAVEN_PROJECTBASEDIR, MAVEN_HOME,\"\n          + \" MAVEN_CONFIG, MAVEN_OPTS, BUILD_URL, BUILD_TAG, BUILD_TIMESTAMP, BUILD_DISPLAY_NAME,\"\n          + \" BUILD_ID, BUILD_NUMBER, BUILD_VERSION\"", "var_name": "ENV_VARS"}, {"original_string": "public static final String SYS_PROPS = \"user., os., java., runtime., maven., sun.\";", "modifier": "public static final", "type": "String", "declarator": "SYS_PROPS = \"user., os., java., runtime., maven., sun.\"", "var_name": "SYS_PROPS"}, {"original_string": "public static final StringList ENV_WL = new StringList();", "modifier": "public static final", "type": "StringList", "declarator": "ENV_WL = new StringList()", "var_name": "ENV_WL"}, {"original_string": "public static final StringList SYS_WL = new StringList();", "modifier": "public static final", "type": "StringList", "declarator": "SYS_WL = new StringList()", "var_name": "SYS_WL"}, {"original_string": "@Autowired private ApplicationRepository appRepository;", "modifier": "@Autowired private", "type": "ApplicationRepository", "declarator": "appRepository", "var_name": "appRepository"}, {"original_string": "@Autowired private LibraryRepository libRepository;", "modifier": "@Autowired private", "type": "LibraryRepository", "declarator": "libRepository", "var_name": "libRepository"}, {"original_string": "@Autowired private LibraryIdRepository lidRepository;", "modifier": "@Autowired private", "type": "LibraryIdRepository", "declarator": "lidRepository", "var_name": "lidRepository"}, {"original_string": "@Autowired private ConstructIdRepository cidRepository;", "modifier": "@Autowired private", "type": "ConstructIdRepository", "declarator": "cidRepository", "var_name": "cidRepository"}, {"original_string": "@Autowired private GoalExecutionRepository gexeRepository;", "modifier": "@Autowired private", "type": "GoalExecutionRepository", "declarator": "gexeRepository", "var_name": "gexeRepository"}, {"original_string": "@Autowired private WebApplicationContext webApplicationContext;", "modifier": "@Autowired private", "type": "WebApplicationContext", "declarator": "webApplicationContext", "var_name": "webApplicationContext"}, {"original_string": "@Autowired private BugRepository bugRepository;", "modifier": "@Autowired private", "type": "BugRepository", "declarator": "bugRepository", "var_name": "bugRepository"}, {"original_string": "@Autowired private TenantRepository tenantRepository;", "modifier": "@Autowired private", "type": "TenantRepository", "declarator": "tenantRepository", "var_name": "tenantRepository"}, {"original_string": "@Autowired private SpaceRepository spaceRepository;", "modifier": "@Autowired private", "type": "SpaceRepository", "declarator": "spaceRepository", "var_name": "spaceRepository"}, {"original_string": "@Autowired private AffectedLibraryRepository affLibRepository;", "modifier": "@Autowired private", "type": "AffectedLibraryRepository", "declarator": "affLibRepository", "var_name": "affLibRepository"}, {"original_string": "@Autowired private DependencyRepository depRepository;", "modifier": "@Autowired private", "type": "DependencyRepository", "declarator": "depRepository", "var_name": "depRepository"}, {"original_string": "private static final String APP_GROUP = \"com.acme\";", "modifier": "private static final", "type": "String", "declarator": "APP_GROUP = \"com.acme\"", "var_name": "APP_GROUP"}, {"original_string": "private static final String APP_ARTIFACT = \"vulas\";", "modifier": "private static final", "type": "String", "declarator": "APP_ARTIFACT = \"vulas\"", "var_name": "APP_ARTIFACT"}, {"original_string": "private static int APP_VERSION = 1;", "modifier": "private static", "type": "int", "declarator": "APP_VERSION = 1", "var_name": "APP_VERSION"}, {"original_string": "private static final String AFF_LIB_JSON =\n      \"{\\\"libraryId\\\": { \\\"group\\\":\\\"com.acme\\\",\\\"artifact\\\":\\\"Foo\\\",\\\"version\\\":\\\"1.0.0\\\"\"\n          + \" },\\\"source\\\":\\\"MANUAL\\\",\\\"affected\\\":\\\"true\\\" }\";", "modifier": "private static final", "type": "String", "declarator": "AFF_LIB_JSON =\n      \"{\\\"libraryId\\\": { \\\"group\\\":\\\"com.acme\\\",\\\"artifact\\\":\\\"Foo\\\",\\\"version\\\":\\\"1.0.0\\\"\"\n          + \" },\\\"source\\\":\\\"MANUAL\\\",\\\"affected\\\":\\\"true\\\" }\"", "var_name": "AFF_LIB_JSON"}], "file": "rest-backend/src/test/java/org/eclipse/steady/backend/rest/ApplicationControllerTest.java"}, "test_case": {"identifier": "testCleanApp", "parameters": "()", "modifiers": "@Test @Transactional public", "return": "void", "body": "@Test\n  @Transactional\n  public void testCleanApp() throws Exception {\n    final Library lib = this.createExampleLibrary();\n    this.libRepository.customSave(lib);\n    Application app = this.createExampleApplication();\n    app = this.appRepository.customSave(app);\n\n    // Repo must contain 1\n    assertEquals(1, this.appRepository.count());\n\n    // Rest-post\n    final MockHttpServletRequestBuilder post_builder =\n        post(getAppUri(app)).param(\"clean\", \"true\").accept(MediaType.APPLICATION_JSON);\n    mockMvc\n        .perform(post_builder)\n        .andExpect(status().isOk())\n        .andExpect(content().contentType(contentTypeJson));\n\n    // Repo must contain 1\n    assertEquals(1, this.appRepository.count());\n\n    // Check that there are no constructs and dependencies any more\n    final Application managed_app = this.appRepository.findOne(app.getId());\n    final Boolean isEmpty =\n        (managed_app.getConstructs() == null || managed_app.getConstructs().isEmpty())\n            && (managed_app.getDependencies() == null || managed_app.getDependencies().isEmpty());\n    assertEquals(true, isEmpty);\n  }", "signature": "void testCleanApp()", "full_signature": "@Test @Transactional public void testCleanApp()", "class_method_signature": "ApplicationControllerTest.testCleanApp()", "testcase": true, "constructor": false, "invocations": ["createExampleLibrary", "customSave", "createExampleApplication", "customSave", "assertEquals", "count", "accept", "param", "post", "getAppUri", "andExpect", "andExpect", "perform", "isOk", "status", "contentType", "content", "assertEquals", "count", "findOne", "getId", "getConstructs", "isEmpty", "getConstructs", "getDependencies", "isEmpty", "getDependencies", "assertEquals"]}, "focal_class": {"identifier": "ApplicationController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(ApplicationController.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ApplicationController.class)", "var_name": "log"}, {"original_string": "private final ApplicationRepository appRepository;", "modifier": "private final", "type": "ApplicationRepository", "declarator": "appRepository", "var_name": "appRepository"}, {"original_string": "private final DependencyRepository depRepository;", "modifier": "private final", "type": "DependencyRepository", "declarator": "depRepository", "var_name": "depRepository"}, {"original_string": "private final GoalExecutionRepository gexeRepository;", "modifier": "private final", "type": "GoalExecutionRepository", "declarator": "gexeRepository", "var_name": "gexeRepository"}, {"original_string": "private final TracesRepository traceRepository;", "modifier": "private final", "type": "TracesRepository", "declarator": "traceRepository", "var_name": "traceRepository"}, {"original_string": "private final LibraryRepository libRepository;", "modifier": "private final", "type": "LibraryRepository", "declarator": "libRepository", "var_name": "libRepository"}, {"original_string": "private final AffectedLibraryRepository affLibRepository;", "modifier": "private final", "type": "AffectedLibraryRepository", "declarator": "affLibRepository", "var_name": "affLibRepository"}, {"original_string": "private final PathRepository pathRepository;", "modifier": "private final", "type": "PathRepository", "declarator": "pathRepository", "var_name": "pathRepository"}, {"original_string": "private final BugRepository bugRepository;", "modifier": "private final", "type": "BugRepository", "declarator": "bugRepository", "var_name": "bugRepository"}, {"original_string": "private final SpaceRepository spaceRepository;", "modifier": "private final", "type": "SpaceRepository", "declarator": "spaceRepository", "var_name": "spaceRepository"}, {"original_string": "private final TenantRepository tenantRepository;", "modifier": "private final", "type": "TenantRepository", "declarator": "tenantRepository", "var_name": "tenantRepository"}, {"original_string": "private final ConstructIdRepository cidRepository;", "modifier": "private final", "type": "ConstructIdRepository", "declarator": "cidRepository", "var_name": "cidRepository"}, {"original_string": "private final V_AppVulndepRepository appVulDepRepository;", "modifier": "private final", "type": "V_AppVulndepRepository", "declarator": "appVulDepRepository", "var_name": "appVulDepRepository"}, {"original_string": "private final ApplicationExporter appExporter;", "modifier": "private final", "type": "ApplicationExporter", "declarator": "appExporter", "var_name": "appExporter"}, {"original_string": "private final Filter cacheFilter;", "modifier": "private final", "type": "Filter", "declarator": "cacheFilter", "var_name": "cacheFilter"}, {"original_string": "public static final String SENDER_EMAIL = \"vulas.backend.smtp.sender\";", "modifier": "public static final", "type": "String", "declarator": "SENDER_EMAIL = \"vulas.backend.smtp.sender\"", "var_name": "SENDER_EMAIL"}, {"original_string": "public static final String ALL_APPS_CSV_SUBJECT = \"vulas.backend.allApps.mailSubject\";", "modifier": "public static final", "type": "String", "declarator": "ALL_APPS_CSV_SUBJECT = \"vulas.backend.allApps.mailSubject\"", "var_name": "ALL_APPS_CSV_SUBJECT"}], "methods": [{"identifier": "dispatcherServlet", "parameters": "()", "modifiers": "@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) public", "return": "DispatcherServlet", "signature": "DispatcherServlet dispatcherServlet()", "full_signature": "@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) public DispatcherServlet dispatcherServlet()", "class_method_signature": "ApplicationController.dispatcherServlet()", "testcase": false, "constructor": false}, {"identifier": "ApplicationController", "parameters": "(\n      ApplicationRepository appRepository,\n      GoalExecutionRepository gexeRepository,\n      DependencyRepository depRepository,\n      TracesRepository traceRepository,\n      LibraryRepository libRepository,\n      PathRepository pathRepository,\n      BugRepository bugRepository,\n      SpaceRepository tokenRepository,\n      ConstructIdRepository cidRepository,\n      AffectedLibraryRepository affLibRepository,\n      TenantRepository tenantRepository,\n      V_AppVulndepRepository appVulDepRepository,\n      ApplicationExporter appExporter,\n      Filter cacheFilter)", "modifiers": "@Autowired", "return": "", "signature": " ApplicationController(\n      ApplicationRepository appRepository,\n      GoalExecutionRepository gexeRepository,\n      DependencyRepository depRepository,\n      TracesRepository traceRepository,\n      LibraryRepository libRepository,\n      PathRepository pathRepository,\n      BugRepository bugRepository,\n      SpaceRepository tokenRepository,\n      ConstructIdRepository cidRepository,\n      AffectedLibraryRepository affLibRepository,\n      TenantRepository tenantRepository,\n      V_AppVulndepRepository appVulDepRepository,\n      ApplicationExporter appExporter,\n      Filter cacheFilter)", "full_signature": "@Autowired  ApplicationController(\n      ApplicationRepository appRepository,\n      GoalExecutionRepository gexeRepository,\n      DependencyRepository depRepository,\n      TracesRepository traceRepository,\n      LibraryRepository libRepository,\n      PathRepository pathRepository,\n      BugRepository bugRepository,\n      SpaceRepository tokenRepository,\n      ConstructIdRepository cidRepository,\n      AffectedLibraryRepository affLibRepository,\n      TenantRepository tenantRepository,\n      V_AppVulndepRepository appVulDepRepository,\n      ApplicationExporter appExporter,\n      Filter cacheFilter)", "class_method_signature": "ApplicationController.ApplicationController(\n      ApplicationRepository appRepository,\n      GoalExecutionRepository gexeRepository,\n      DependencyRepository depRepository,\n      TracesRepository traceRepository,\n      LibraryRepository libRepository,\n      PathRepository pathRepository,\n      BugRepository bugRepository,\n      SpaceRepository tokenRepository,\n      ConstructIdRepository cidRepository,\n      AffectedLibraryRepository affLibRepository,\n      TenantRepository tenantRepository,\n      V_AppVulndepRepository appVulDepRepository,\n      ApplicationExporter appExporter,\n      Filter cacheFilter)", "testcase": false, "constructor": true}, {"identifier": "createApplication", "parameters": "(\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<Application>", "signature": "ResponseEntity<Application> createApplication(\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<Application> createApplication(\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createApplication(\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "purgeApplicationVersions", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"keep\", required = false, defaultValue = \"3\") Integer keep,\n      @RequestParam(value = \"mode\", required = false, defaultValue = \"versions\") String mode,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping(value = \"/{mvnGroup:.+}/{artifact:.+}\", method = RequestMethod.DELETE) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Application>>", "signature": "ResponseEntity<List<Application>> purgeApplicationVersions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"keep\", required = false, defaultValue = \"3\") Integer keep,\n      @RequestParam(value = \"mode\", required = false, defaultValue = \"versions\") String mode,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping(value = \"/{mvnGroup:.+}/{artifact:.+}\", method = RequestMethod.DELETE) @JsonView(Views.Default.class) public ResponseEntity<List<Application>> purgeApplicationVersions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"keep\", required = false, defaultValue = \"3\") Integer keep,\n      @RequestParam(value = \"mode\", required = false, defaultValue = \"versions\") String mode,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.purgeApplicationVersions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"keep\", required = false, defaultValue = \"3\") Integer keep,\n      @RequestParam(value = \"mode\", required = false, defaultValue = \"versions\") String mode,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "updateApplication", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<Application>", "signature": "ResponseEntity<Application> updateApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<Application> updateApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.updateApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Application application,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "(\n      @RequestParam(value = \"skipEmpty\", required = false, defaultValue = \"false\")\n          Boolean skipEmpty,\n      //\t\t\t@RequestParam(value=\"includeVulnerableFlag\", required=false, defaultValue=\"false\")\n      // Boolean includeVulnerableFlag,\n      @RequestParam(value = \"group\", required = false, defaultValue = \"*\") String g,\n      @RequestParam(value = \"artifact\", required = false, defaultValue = \"*\") String a,\n      @RequestParam(value = \"version\", required = false, defaultValue = \"*\") String v,\n      @RequestParam(value = \"asOf\", required = false, defaultValue = \"0\") String asOfTimestamp,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<Collection<Application>>", "signature": "ResponseEntity<Collection<Application>> getApplications(\n      @RequestParam(value = \"skipEmpty\", required = false, defaultValue = \"false\")\n          Boolean skipEmpty,\n      //\t\t\t@RequestParam(value=\"includeVulnerableFlag\", required=false, defaultValue=\"false\")\n      // Boolean includeVulnerableFlag,\n      @RequestParam(value = \"group\", required = false, defaultValue = \"*\") String g,\n      @RequestParam(value = \"artifact\", required = false, defaultValue = \"*\") String a,\n      @RequestParam(value = \"version\", required = false, defaultValue = \"*\") String v,\n      @RequestParam(value = \"asOf\", required = false, defaultValue = \"0\") String asOfTimestamp,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<Collection<Application>> getApplications(\n      @RequestParam(value = \"skipEmpty\", required = false, defaultValue = \"false\")\n          Boolean skipEmpty,\n      //\t\t\t@RequestParam(value=\"includeVulnerableFlag\", required=false, defaultValue=\"false\")\n      // Boolean includeVulnerableFlag,\n      @RequestParam(value = \"group\", required = false, defaultValue = \"*\") String g,\n      @RequestParam(value = \"artifact\", required = false, defaultValue = \"*\") String a,\n      @RequestParam(value = \"version\", required = false, defaultValue = \"*\") String v,\n      @RequestParam(value = \"asOf\", required = false, defaultValue = \"0\") String asOfTimestamp,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getApplications(\n      @RequestParam(value = \"skipEmpty\", required = false, defaultValue = \"false\")\n          Boolean skipEmpty,\n      //\t\t\t@RequestParam(value=\"includeVulnerableFlag\", required=false, defaultValue=\"false\")\n      // Boolean includeVulnerableFlag,\n      @RequestParam(value = \"group\", required = false, defaultValue = \"*\") String g,\n      @RequestParam(value = \"artifact\", required = false, defaultValue = \"*\") String a,\n      @RequestParam(value = \"version\", required = false, defaultValue = \"*\") String v,\n      @RequestParam(value = \"asOf\", required = false, defaultValue = \"0\") String asOfTimestamp,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "exportApplications", "parameters": "(\n      @RequestParam(value = \"separator\", required = false, defaultValue = \";\")\n          final String separator,\n      @RequestParam(value = \"includeSpaceProperties\", required = false, defaultValue = \"\")\n          final String[] includeSpaceProperties,\n      @RequestParam(value = \"includeGoalConfiguration\", required = false, defaultValue = \"\")\n          final String[] includeGoalConfiguration,\n      @RequestParam(value = \"includeGoalSystemInfo\", required = false, defaultValue = \"\")\n          final String[] includeGoalSystemInfo,\n      @RequestParam(value = \"vuln\", required = false, defaultValue = \"\") final String[] vuln,\n      @RequestParam(value = \"to\", required = false, defaultValue = \"\") final String[] to,\n      @RequestParam(value = \"format\", required = false, defaultValue = \"csv\") final String format,\n      @RequestHeader(value = Constants.HTTP_TENANT_HEADER, required = false) final String tenant,\n      HttpServletRequest request,\n      HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/export\", method = RequestMethod.GET) public", "return": "void", "signature": "void exportApplications(\n      @RequestParam(value = \"separator\", required = false, defaultValue = \";\")\n          final String separator,\n      @RequestParam(value = \"includeSpaceProperties\", required = false, defaultValue = \"\")\n          final String[] includeSpaceProperties,\n      @RequestParam(value = \"includeGoalConfiguration\", required = false, defaultValue = \"\")\n          final String[] includeGoalConfiguration,\n      @RequestParam(value = \"includeGoalSystemInfo\", required = false, defaultValue = \"\")\n          final String[] includeGoalSystemInfo,\n      @RequestParam(value = \"vuln\", required = false, defaultValue = \"\") final String[] vuln,\n      @RequestParam(value = \"to\", required = false, defaultValue = \"\") final String[] to,\n      @RequestParam(value = \"format\", required = false, defaultValue = \"csv\") final String format,\n      @RequestHeader(value = Constants.HTTP_TENANT_HEADER, required = false) final String tenant,\n      HttpServletRequest request,\n      HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/export\", method = RequestMethod.GET) public void exportApplications(\n      @RequestParam(value = \"separator\", required = false, defaultValue = \";\")\n          final String separator,\n      @RequestParam(value = \"includeSpaceProperties\", required = false, defaultValue = \"\")\n          final String[] includeSpaceProperties,\n      @RequestParam(value = \"includeGoalConfiguration\", required = false, defaultValue = \"\")\n          final String[] includeGoalConfiguration,\n      @RequestParam(value = \"includeGoalSystemInfo\", required = false, defaultValue = \"\")\n          final String[] includeGoalSystemInfo,\n      @RequestParam(value = \"vuln\", required = false, defaultValue = \"\") final String[] vuln,\n      @RequestParam(value = \"to\", required = false, defaultValue = \"\") final String[] to,\n      @RequestParam(value = \"format\", required = false, defaultValue = \"csv\") final String format,\n      @RequestHeader(value = Constants.HTTP_TENANT_HEADER, required = false) final String tenant,\n      HttpServletRequest request,\n      HttpServletResponse response)", "class_method_signature": "ApplicationController.exportApplications(\n      @RequestParam(value = \"separator\", required = false, defaultValue = \";\")\n          final String separator,\n      @RequestParam(value = \"includeSpaceProperties\", required = false, defaultValue = \"\")\n          final String[] includeSpaceProperties,\n      @RequestParam(value = \"includeGoalConfiguration\", required = false, defaultValue = \"\")\n          final String[] includeGoalConfiguration,\n      @RequestParam(value = \"includeGoalSystemInfo\", required = false, defaultValue = \"\")\n          final String[] includeGoalSystemInfo,\n      @RequestParam(value = \"vuln\", required = false, defaultValue = \"\") final String[] vuln,\n      @RequestParam(value = \"to\", required = false, defaultValue = \"\") final String[] to,\n      @RequestParam(value = \"format\", required = false, defaultValue = \"csv\") final String format,\n      @RequestHeader(value = Constants.HTTP_TENANT_HEADER, required = false) final String tenant,\n      HttpServletRequest request,\n      HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "cleanApplication", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"clean\", required = true) Boolean clean,\n      @RequestParam(value = \"cleanGoalHistory\", required = false, defaultValue = \"false\")\n          Boolean cleanGoalHistory,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.POST, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Application>", "signature": "ResponseEntity<Application> cleanApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"clean\", required = true) Boolean clean,\n      @RequestParam(value = \"cleanGoalHistory\", required = false, defaultValue = \"false\")\n          Boolean cleanGoalHistory,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.POST, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Application> cleanApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"clean\", required = true) Boolean clean,\n      @RequestParam(value = \"cleanGoalHistory\", required = false, defaultValue = \"false\")\n          Boolean cleanGoalHistory,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.cleanApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"clean\", required = true) Boolean clean,\n      @RequestParam(value = \"cleanGoalHistory\", required = false, defaultValue = \"false\")\n          Boolean cleanGoalHistory,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "searchConstructsInAppDependencies", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"searchString\", required = true, defaultValue = \"\") String searchString,\n      @RequestParam(value = \"constructTypes\", required = false, defaultValue = \"\")\n          ConstructType[] constructTypes,\n      @RequestParam(value = \"wildcardSearch\", required = false, defaultValue = \"true\")\n          boolean wildcardSearch,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/search\", method = RequestMethod.GET) @JsonView(Views.Default.class) public", "return": "ResponseEntity<Set<ConstructSearchResult>>", "signature": "ResponseEntity<Set<ConstructSearchResult>> searchConstructsInAppDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"searchString\", required = true, defaultValue = \"\") String searchString,\n      @RequestParam(value = \"constructTypes\", required = false, defaultValue = \"\")\n          ConstructType[] constructTypes,\n      @RequestParam(value = \"wildcardSearch\", required = false, defaultValue = \"true\")\n          boolean wildcardSearch,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/search\", method = RequestMethod.GET) @JsonView(Views.Default.class) public ResponseEntity<Set<ConstructSearchResult>> searchConstructsInAppDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"searchString\", required = true, defaultValue = \"\") String searchString,\n      @RequestParam(value = \"constructTypes\", required = false, defaultValue = \"\")\n          ConstructType[] constructTypes,\n      @RequestParam(value = \"wildcardSearch\", required = false, defaultValue = \"true\")\n          boolean wildcardSearch,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.searchConstructsInAppDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"searchString\", required = true, defaultValue = \"\") String searchString,\n      @RequestParam(value = \"constructTypes\", required = false, defaultValue = \"\")\n          ConstructType[] constructTypes,\n      @RequestParam(value = \"wildcardSearch\", required = false, defaultValue = \"true\")\n          boolean wildcardSearch,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "isApplicationExisting", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.OPTIONS) public", "return": "ResponseEntity<Application>", "signature": "ResponseEntity<Application> isApplicationExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.OPTIONS) public ResponseEntity<Application> isApplicationExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.isApplicationExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"inclTraces\", required = false, defaultValue = \"true\")\n          Boolean inclTraces,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.CountDetails.class) public", "return": "ResponseEntity<Application>", "signature": "ResponseEntity<Application> getApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"inclTraces\", required = false, defaultValue = \"true\")\n          Boolean inclTraces,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.CountDetails.class) public ResponseEntity<Application> getApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"inclTraces\", required = false, defaultValue = \"true\")\n          Boolean inclTraces,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getApplication(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"inclTraces\", required = false, defaultValue = \"true\")\n          Boolean inclTraces,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getApplicationConstructIds", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/constructIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Collection<ConstructId>>", "signature": "ResponseEntity<Collection<ConstructId>> getApplicationConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/constructIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Collection<ConstructId>> getApplicationConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getApplicationConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "createGoalExecution", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<GoalExecution>", "signature": "ResponseEntity<GoalExecution> createGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<GoalExecution> createGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "updateGoalExecution", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{executionId}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<GoalExecution>", "signature": "ResponseEntity<GoalExecution> updateGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{executionId}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<GoalExecution> updateGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.updateGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @RequestBody GoalExecution goalExecution,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "isGoalExecutionExisting", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{executionId}\", method = RequestMethod.OPTIONS) public", "return": "ResponseEntity<GoalExecution>", "signature": "ResponseEntity<GoalExecution> isGoalExecutionExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{executionId}\", method = RequestMethod.OPTIONS) public ResponseEntity<GoalExecution> isGoalExecutionExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.isGoalExecutionExisting(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String executionId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getGoalExecution", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable Long id,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{id}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.GoalDetails.class) public", "return": "ResponseEntity<GoalExecution>", "signature": "ResponseEntity<GoalExecution> getGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable Long id,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/{id}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.GoalDetails.class) public ResponseEntity<GoalExecution> getGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable Long id,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable Long id,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getLatestGoalExecution", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"type\", required = false, defaultValue = \"\") String type,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/latest\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.GoalDetails.class) public", "return": "ResponseEntity<GoalExecution>", "signature": "ResponseEntity<GoalExecution> getLatestGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"type\", required = false, defaultValue = \"\") String type,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals/latest\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.GoalDetails.class) public ResponseEntity<GoalExecution> getLatestGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"type\", required = false, defaultValue = \"\") String type,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getLatestGoalExecution(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"type\", required = false, defaultValue = \"\") String type,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getGoalExecutions", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<GoalExecution>>", "signature": "ResponseEntity<List<GoalExecution>> getGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<GoalExecution>> getGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "deleteGoalExecutions", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.DELETE) public", "return": "ResponseEntity<List<GoalExecution>>", "signature": "ResponseEntity<List<GoalExecution>> deleteGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/goals\", method = RequestMethod.DELETE) public ResponseEntity<List<GoalExecution>> deleteGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.deleteGoalExecutions(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getApplicationBugs", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"historical\", required = false, defaultValue = \"false\")\n          Boolean historical,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/bugs\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public", "return": "ResponseEntity<List<Bug>>", "signature": "ResponseEntity<List<Bug>> getApplicationBugs(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"historical\", required = false, defaultValue = \"false\")\n          Boolean historical,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/bugs\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public ResponseEntity<List<Bug>> getApplicationBugs(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"historical\", required = false, defaultValue = \"false\")\n          Boolean historical,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getApplicationBugs(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"historical\", required = false, defaultValue = \"false\")\n          Boolean historical,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "findDependencyIntersections", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/intersect\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<DependencyIntersection>>", "signature": "ResponseEntity<List<DependencyIntersection>> findDependencyIntersections(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/intersect\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<DependencyIntersection>> findDependencyIntersections(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.findDependencyIntersections(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Dependency>>", "signature": "ResponseEntity<List<Dependency>> getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Dependency>> getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getDependency", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public", "return": "ResponseEntity<Dependency>", "signature": "ResponseEntity<Dependency> getDependency(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public ResponseEntity<Dependency> getDependency(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getDependency(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getApplicationMetrics", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"excludedScopes\", required = false, defaultValue = \"\")\n          Scope[] excludedScopes,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/metrics\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Metrics>", "signature": "ResponseEntity<Metrics> getApplicationMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"excludedScopes\", required = false, defaultValue = \"\")\n          Scope[] excludedScopes,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/metrics\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Metrics> getApplicationMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"excludedScopes\", required = false, defaultValue = \"\")\n          Scope[] excludedScopes,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getApplicationMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"excludedScopes\", required = false, defaultValue = \"\")\n          Scope[] excludedScopes,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getUpdateMetrics", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/updateMetrics\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public", "return": "ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate>", "signature": "ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate> getUpdateMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/updateMetrics\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate> getUpdateMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getUpdateMetrics(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getUpdateChanges", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/updateChanges\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public", "return": "ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate>", "signature": "ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate> getUpdateChanges(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/updateChanges\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) // extends View LibDetails that allows to see the properties public ResponseEntity<org.eclipse.steady.backend.model.DependencyUpdate> getUpdateChanges(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getUpdateChanges(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody LibraryId otherVersion,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getAppVulnerableDependencies", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"includeHistorical\", required = false, defaultValue = \"false\")\n          Boolean historical, // affected==0\n      @RequestParam(value = \"includeAffected\", required = false, defaultValue = \"true\")\n          Boolean affected, // affected==1\n      @RequestParam(value = \"includeAffectedUnconfirmed\", required = false, defaultValue = \"true\")\n          Boolean includeAffectedUnconfirmed, // affectedConfirmed==0\n      @RequestParam(value = \"addExcemptionInfo\", required = false, defaultValue = \"false\")\n          Boolean addExcemptionInfo, // consider configuration setting\n      // \"vulas.report.exceptionScopeBlacklist\" and\n      // \"vulas.report.exceptionExcludeBugs\"\n      @RequestParam(value = \"lastChange\", required = false, defaultValue = \"\")\n          String lastChange, // a timestamp identifier which is used to cache the response or not\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/vulndeps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<TreeSet<VulnerableDependency>>", "signature": "ResponseEntity<TreeSet<VulnerableDependency>> getAppVulnerableDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"includeHistorical\", required = false, defaultValue = \"false\")\n          Boolean historical, // affected==0\n      @RequestParam(value = \"includeAffected\", required = false, defaultValue = \"true\")\n          Boolean affected, // affected==1\n      @RequestParam(value = \"includeAffectedUnconfirmed\", required = false, defaultValue = \"true\")\n          Boolean includeAffectedUnconfirmed, // affectedConfirmed==0\n      @RequestParam(value = \"addExcemptionInfo\", required = false, defaultValue = \"false\")\n          Boolean addExcemptionInfo, // consider configuration setting\n      // \"vulas.report.exceptionScopeBlacklist\" and\n      // \"vulas.report.exceptionExcludeBugs\"\n      @RequestParam(value = \"lastChange\", required = false, defaultValue = \"\")\n          String lastChange, // a timestamp identifier which is used to cache the response or not\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/vulndeps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<TreeSet<VulnerableDependency>> getAppVulnerableDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"includeHistorical\", required = false, defaultValue = \"false\")\n          Boolean historical, // affected==0\n      @RequestParam(value = \"includeAffected\", required = false, defaultValue = \"true\")\n          Boolean affected, // affected==1\n      @RequestParam(value = \"includeAffectedUnconfirmed\", required = false, defaultValue = \"true\")\n          Boolean includeAffectedUnconfirmed, // affectedConfirmed==0\n      @RequestParam(value = \"addExcemptionInfo\", required = false, defaultValue = \"false\")\n          Boolean addExcemptionInfo, // consider configuration setting\n      // \"vulas.report.exceptionScopeBlacklist\" and\n      // \"vulas.report.exceptionExcludeBugs\"\n      @RequestParam(value = \"lastChange\", required = false, defaultValue = \"\")\n          String lastChange, // a timestamp identifier which is used to cache the response or not\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getAppVulnerableDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"includeHistorical\", required = false, defaultValue = \"false\")\n          Boolean historical, // affected==0\n      @RequestParam(value = \"includeAffected\", required = false, defaultValue = \"true\")\n          Boolean affected, // affected==1\n      @RequestParam(value = \"includeAffectedUnconfirmed\", required = false, defaultValue = \"true\")\n          Boolean includeAffectedUnconfirmed, // affectedConfirmed==0\n      @RequestParam(value = \"addExcemptionInfo\", required = false, defaultValue = \"false\")\n          Boolean addExcemptionInfo, // consider configuration setting\n      // \"vulas.report.exceptionScopeBlacklist\" and\n      // \"vulas.report.exceptionExcludeBugs\"\n      @RequestParam(value = \"lastChange\", required = false, defaultValue = \"\")\n          String lastChange, // a timestamp identifier which is used to cache the response or not\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getVulnerableDependencies", "parameters": "(\n      @RequestParam(value = \"unconfirmedOnly\", required = false, defaultValue = \"true\")\n          Boolean unconfirmedOnly)", "modifiers": "@RequestMapping( value = \"/vulndeps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<TreeSet<VulnerableDependency>>", "signature": "ResponseEntity<TreeSet<VulnerableDependency>> getVulnerableDependencies(\n      @RequestParam(value = \"unconfirmedOnly\", required = false, defaultValue = \"true\")\n          Boolean unconfirmedOnly)", "full_signature": "@RequestMapping( value = \"/vulndeps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<TreeSet<VulnerableDependency>> getVulnerableDependencies(\n      @RequestParam(value = \"unconfirmedOnly\", required = false, defaultValue = \"true\")\n          Boolean unconfirmedOnly)", "class_method_signature": "ApplicationController.getVulnerableDependencies(\n      @RequestParam(value = \"unconfirmedOnly\", required = false, defaultValue = \"true\")\n          Boolean unconfirmedOnly)", "testcase": false, "constructor": false}, {"identifier": "getVulnerableDependencyBugDetails", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugid,\n      @RequestParam(value = \"origin\", required = true, defaultValue = \"CC\")\n          VulnDepOrigin vulnDepOrigin,\n      @RequestParam(value = \"bundledGroup\", required = false, defaultValue = \"\")\n          String bundledGroup,\n      @RequestParam(value = \"bundledArtifact\", required = false, defaultValue = \"\")\n          String bundledArtifact,\n      @RequestParam(value = \"bundledVersion\", required = false, defaultValue = \"\")\n          String bundledVersion,\n      @RequestParam(value = \"bundledLibrary\", required = false, defaultValue = \"\")\n          String bundledLibrary,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/vulndeps/{digest}/bugs/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.VulnDepDetails.class) public", "return": "ResponseEntity<VulnerableDependency>", "signature": "ResponseEntity<VulnerableDependency> getVulnerableDependencyBugDetails(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugid,\n      @RequestParam(value = \"origin\", required = true, defaultValue = \"CC\")\n          VulnDepOrigin vulnDepOrigin,\n      @RequestParam(value = \"bundledGroup\", required = false, defaultValue = \"\")\n          String bundledGroup,\n      @RequestParam(value = \"bundledArtifact\", required = false, defaultValue = \"\")\n          String bundledArtifact,\n      @RequestParam(value = \"bundledVersion\", required = false, defaultValue = \"\")\n          String bundledVersion,\n      @RequestParam(value = \"bundledLibrary\", required = false, defaultValue = \"\")\n          String bundledLibrary,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/vulndeps/{digest}/bugs/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.VulnDepDetails.class) public ResponseEntity<VulnerableDependency> getVulnerableDependencyBugDetails(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugid,\n      @RequestParam(value = \"origin\", required = true, defaultValue = \"CC\")\n          VulnDepOrigin vulnDepOrigin,\n      @RequestParam(value = \"bundledGroup\", required = false, defaultValue = \"\")\n          String bundledGroup,\n      @RequestParam(value = \"bundledArtifact\", required = false, defaultValue = \"\")\n          String bundledArtifact,\n      @RequestParam(value = \"bundledVersion\", required = false, defaultValue = \"\")\n          String bundledVersion,\n      @RequestParam(value = \"bundledLibrary\", required = false, defaultValue = \"\")\n          String bundledLibrary,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getVulnerableDependencyBugDetails(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugid,\n      @RequestParam(value = \"origin\", required = true, defaultValue = \"CC\")\n          VulnDepOrigin vulnDepOrigin,\n      @RequestParam(value = \"bundledGroup\", required = false, defaultValue = \"\")\n          String bundledGroup,\n      @RequestParam(value = \"bundledArtifact\", required = false, defaultValue = \"\")\n          String bundledArtifact,\n      @RequestParam(value = \"bundledVersion\", required = false, defaultValue = \"\")\n          String bundledVersion,\n      @RequestParam(value = \"bundledLibrary\", required = false, defaultValue = \"\")\n          String bundledLibrary,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "createTraces", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Trace[] traces,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/traces\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Trace>>", "signature": "ResponseEntity<List<Trace>> createTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Trace[] traces,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/traces\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Trace>> createTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Trace[] traces,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Trace[] traces,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getTraces", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/traces\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Trace>>", "signature": "ResponseEntity<List<Trace>> getTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/traces\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Trace>> getTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getTraces(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getReachableContructIds", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/reachableConstructIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) public", "return": "ResponseEntity<Collection<Dependency>>", "signature": "ResponseEntity<Collection<Dependency>> getReachableContructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/reachableConstructIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.DepDetails.class) public ResponseEntity<Collection<Dependency>> getReachableContructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getReachableContructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "createPaths", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Path[] paths,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/paths\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Path>>", "signature": "ResponseEntity<List<Path>> createPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Path[] paths,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/paths\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Path>> createPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Path[] paths,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestBody Path[] paths,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getPaths", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/paths\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Path>>", "signature": "ResponseEntity<List<Path>> getPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/paths\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Path>> getPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getVulndepPaths", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/paths/{bugId}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Path>>", "signature": "ResponseEntity<List<Path>> getVulndepPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/paths/{bugId}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Path>> getVulndepPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getVulndepPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "getVulndepConstructPaths", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @PathVariable String qname,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/paths/{bugId}/{qname}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Path>>", "signature": "ResponseEntity<List<Path>> getVulndepConstructPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @PathVariable String qname,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/paths/{bugId}/{qname}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Path>> getVulndepConstructPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @PathVariable String qname,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getVulndepConstructPaths(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @PathVariable String bugId,\n      @PathVariable String qname,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "createReachableConstructIds", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody ConstructId[] constructIds,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/reachableConstructIds\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Set<ConstructId>>", "signature": "ResponseEntity<Set<ConstructId>> createReachableConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody ConstructId[] constructIds,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/reachableConstructIds\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Set<ConstructId>> createReachableConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody ConstructId[] constructIds,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createReachableConstructIds(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody ConstructId[] constructIds,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}, {"identifier": "createTouchPoints", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody TouchPoint[] touchPoints,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/touchPoints\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Set<TouchPoint>>", "signature": "ResponseEntity<Set<TouchPoint>> createTouchPoints(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody TouchPoint[] touchPoints,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps/{digest}/touchPoints\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Set<TouchPoint>> createTouchPoints(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody TouchPoint[] touchPoints,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.createTouchPoints(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @PathVariable String digest,\n      @RequestBody TouchPoint[] touchPoints,\n      @RequestParam(value = \"skipResponseBody\", required = false, defaultValue = \"false\")\n          Boolean skipResponseBody,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false}], "file": "rest-backend/src/main/java/org/eclipse/steady/backend/rest/ApplicationController.java"}, "focal_method": {"identifier": "getDependencies", "parameters": "(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "modifiers": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Dependency>>", "body": "@RequestMapping(\n      value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps\",\n      method = RequestMethod.GET,\n      produces = {\"application/json;charset=UTF-8\"})\n  @JsonView(Views.Default.class)\n  public ResponseEntity<List<Dependency>> getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space) {\n\n    Space s = null;\n    try {\n      s = this.spaceRepository.getSpace(space);\n    } catch (Exception e) {\n      log.error(\"Error retrieving space: \" + e);\n      return new ResponseEntity<List<Dependency>>(HttpStatus.NOT_FOUND);\n    }\n    try {\n      final StopWatch sw =\n          new StopWatch(\n                  \"Query dependencies for application: \"\n                      + mvnGroup\n                      + \":\"\n                      + artifact\n                      + \":\"\n                      + version)\n              .start();\n\n      final List<Dependency> deps = depRepository.findByGAV(mvnGroup, artifact, version, s);\n\n      for (Dependency dep : deps) {\n        dep.setTotalTracedExecConstructCount(\n            this.traceRepository.countTracesOfExecConstructLibrary(\n                dep.getApp(), dep.getLib().getDigest()));\n        dep.setTotalReachExecConstructCount(\n            this.cidRepository.countReachableExecConstructsLibrary(dep));\n      }\n      sw.stop();\n      return new ResponseEntity<List<Dependency>>(deps, HttpStatus.OK);\n    } catch (EntityNotFoundException enfe) {\n      return new ResponseEntity<List<Dependency>>(HttpStatus.NOT_FOUND);\n    }\n  }", "signature": "ResponseEntity<List<Dependency>> getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "full_signature": "@RequestMapping( value = \"/{mvnGroup:.+}/{artifact:.+}/{version:.+}/deps\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Dependency>> getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "class_method_signature": "ApplicationController.getDependencies(\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @ApiIgnore @RequestHeader(value = Constants.HTTP_SPACE_HEADER, required = false)\n          String space)", "testcase": false, "constructor": false, "invocations": ["getSpace", "error", "start", "findByGAV", "setTotalTracedExecConstructCount", "countTracesOfExecConstructLibrary", "getApp", "getDigest", "getLib", "setTotalReachExecConstructCount", "countReachableExecConstructsLibrary", "stop"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}