{"test_class": {"identifier": "SearchIndexHelperServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionHelper businessObjectDefinitionHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionHelper", "declarator": "businessObjectDefinitionHelper", "var_name": "businessObjectDefinitionHelper"}, {"original_string": "@Mock\n    private SearchIndexDaoHelper searchIndexDaoHelper;", "modifier": "@Mock\n    private", "type": "SearchIndexDaoHelper", "declarator": "searchIndexDaoHelper", "var_name": "searchIndexDaoHelper"}, {"original_string": "@InjectMocks\n    private SearchIndexHelperServiceImpl searchIndexHelperServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "SearchIndexHelperServiceImpl", "declarator": "searchIndexHelperServiceImpl", "var_name": "searchIndexHelperServiceImpl"}, {"original_string": "@Mock\n    private IndexFunctionsDao indexFunctionsDao;", "modifier": "@Mock\n    private", "type": "IndexFunctionsDao", "declarator": "indexFunctionsDao", "var_name": "indexFunctionsDao"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/SearchIndexHelperServiceImplTest.java"}, "test_case": {"identifier": "testValidateSearchIndexSizeValidationFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateSearchIndexSizeValidationFails()\n    {\n        // Mock the external calls. Please note that we mock index size not to be equal to the business object definition entity list size.\n        when(indexFunctionsDao.getNumberOfTypesInIndex(SEARCH_INDEX_NAME)).thenReturn(1L);\n\n        // Index all business object definitions defined in the system.\n        boolean response = searchIndexHelperServiceImpl.validateSearchIndexSize(SEARCH_INDEX_NAME, 2);\n\n        // Verify the external calls.\n        verify(indexFunctionsDao).getNumberOfTypesInIndex(SEARCH_INDEX_NAME);\n        verifyNoMoreInteractions(businessObjectDefinitionDao, businessObjectDefinitionHelper, indexFunctionsDao, searchIndexDaoHelper);\n\n        // Validate the results.\n        assertFalse(response);\n    }", "signature": "void testValidateSearchIndexSizeValidationFails()", "full_signature": "@Test public void testValidateSearchIndexSizeValidationFails()", "class_method_signature": "SearchIndexHelperServiceImplTest.testValidateSearchIndexSizeValidationFails()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getNumberOfTypesInIndex", "validateSearchIndexSize", "getNumberOfTypesInIndex", "verify", "verifyNoMoreInteractions", "assertFalse"]}, "focal_class": {"identifier": "SearchIndexHelperServiceImpl", "superclass": "", "interfaces": "implements SearchIndexHelperService", "fields": [{"original_string": "public static final int BUSINESS_OBJECT_DEFINITIONS_CHUNK_SIZE = 100;", "modifier": "public static final", "type": "int", "declarator": "BUSINESS_OBJECT_DEFINITIONS_CHUNK_SIZE = 100", "var_name": "BUSINESS_OBJECT_DEFINITIONS_CHUNK_SIZE"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SearchIndexHelperServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SearchIndexHelperServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionHelper businessObjectDefinitionHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionHelper", "declarator": "businessObjectDefinitionHelper", "var_name": "businessObjectDefinitionHelper"}, {"original_string": "@Autowired\n    private SearchIndexDaoHelper searchIndexDaoHelper;", "modifier": "@Autowired\n    private", "type": "SearchIndexDaoHelper", "declarator": "searchIndexDaoHelper", "var_name": "searchIndexDaoHelper"}, {"original_string": "@Autowired\n    private TagDao tagDao;", "modifier": "@Autowired\n    private", "type": "TagDao", "declarator": "tagDao", "var_name": "tagDao"}, {"original_string": "@Autowired\n    private TagHelper tagHelper;", "modifier": "@Autowired\n    private", "type": "TagHelper", "declarator": "tagHelper", "var_name": "tagHelper"}, {"original_string": "@Autowired\n    private IndexFunctionsDao indexFunctionsDao;", "modifier": "@Autowired\n    private", "type": "IndexFunctionsDao", "declarator": "indexFunctionsDao", "var_name": "indexFunctionsDao"}], "methods": [{"identifier": "indexAllBusinessObjectDefinitions", "parameters": "(SearchIndexKey searchIndexKey)", "modifiers": "@Override @Async public", "return": "Future<Void>", "signature": "Future<Void> indexAllBusinessObjectDefinitions(SearchIndexKey searchIndexKey)", "full_signature": "@Override @Async public Future<Void> indexAllBusinessObjectDefinitions(SearchIndexKey searchIndexKey)", "class_method_signature": "SearchIndexHelperServiceImpl.indexAllBusinessObjectDefinitions(SearchIndexKey searchIndexKey)", "testcase": false, "constructor": false}, {"identifier": "indexAllTags", "parameters": "(SearchIndexKey searchIndexKey)", "modifiers": "@Override @Async public", "return": "Future<Void>", "signature": "Future<Void> indexAllTags(SearchIndexKey searchIndexKey)", "full_signature": "@Override @Async public Future<Void> indexAllTags(SearchIndexKey searchIndexKey)", "class_method_signature": "SearchIndexHelperServiceImpl.indexAllTags(SearchIndexKey searchIndexKey)", "testcase": false, "constructor": false}, {"identifier": "validateSearchIndexSize", "parameters": "(String indexName, int expectedIndexSize)", "modifiers": "protected", "return": "boolean", "signature": "boolean validateSearchIndexSize(String indexName, int expectedIndexSize)", "full_signature": "protected boolean validateSearchIndexSize(String indexName, int expectedIndexSize)", "class_method_signature": "SearchIndexHelperServiceImpl.validateSearchIndexSize(String indexName, int expectedIndexSize)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/SearchIndexHelperServiceImpl.java"}, "focal_method": {"identifier": "validateSearchIndexSize", "parameters": "(String indexName, int expectedIndexSize)", "modifiers": "protected", "return": "boolean", "body": "protected boolean validateSearchIndexSize(String indexName, int expectedIndexSize)\n    {\n        final long indexSize = indexFunctionsDao.getNumberOfTypesInIndex(indexName);\n\n        boolean result = true;\n        if (indexSize != expectedIndexSize)\n        {\n            LOGGER.error(\"Index validation failed, expected index size {}, does not equal actual index size {}.\", expectedIndexSize, indexSize);\n            result = false;\n        }\n\n        return result;\n    }", "signature": "boolean validateSearchIndexSize(String indexName, int expectedIndexSize)", "full_signature": "protected boolean validateSearchIndexSize(String indexName, int expectedIndexSize)", "class_method_signature": "SearchIndexHelperServiceImpl.validateSearchIndexSize(String indexName, int expectedIndexSize)", "testcase": false, "constructor": false, "invocations": ["getNumberOfTypesInIndex", "error"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}