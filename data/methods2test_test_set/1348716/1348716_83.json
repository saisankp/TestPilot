{"test_class": {"identifier": "LoanServiceFacadeWebTierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoanServiceFacade loanServiceFacade;", "modifier": "private", "type": "LoanServiceFacade", "declarator": "loanServiceFacade", "var_name": "loanServiceFacade"}, {"original_string": "@Mock\n    private LoanDao loanDao;", "modifier": "@Mock\n    private", "type": "LoanDao", "declarator": "loanDao", "var_name": "loanDao"}, {"original_string": "@Mock\n    private LoanBusinessService loanBusinessService;", "modifier": "@Mock\n    private", "type": "LoanBusinessService", "declarator": "loanBusinessService", "var_name": "loanBusinessService"}, {"original_string": "@Mock\n    private LoanBO loanBO;", "modifier": "@Mock\n    private", "type": "LoanBO", "declarator": "loanBO", "var_name": "loanBO"}, {"original_string": "private RepaymentScheduleInstallmentBuilder installmentBuilder;", "modifier": "private", "type": "RepaymentScheduleInstallmentBuilder", "declarator": "installmentBuilder", "var_name": "installmentBuilder"}, {"original_string": "private MifosCurrency rupee;", "modifier": "private", "type": "MifosCurrency", "declarator": "rupee", "var_name": "rupee"}, {"original_string": "private Locale locale;", "modifier": "private", "type": "Locale", "declarator": "locale", "var_name": "locale"}], "file": "application/src/test/java/org/mifos/application/servicefacade/LoanServiceFacadeWebTierTest.java"}, "test_case": {"identifier": "retrieveOriginalLoanSchedule", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void retrieveOriginalLoanSchedule() throws PersistenceException {\n        Integer accountId = new Integer(1);\n        List<OriginalLoanScheduleEntity> loanScheduleEntities = new ArrayList<OriginalLoanScheduleEntity>();\n        OriginalLoanScheduleEntity originalLoanScheduleEntity1 = mock(OriginalLoanScheduleEntity.class);\n        OriginalLoanScheduleEntity originalLoanScheduleEntity2 = mock(OriginalLoanScheduleEntity.class);\n        loanScheduleEntities.add(originalLoanScheduleEntity1);\n        loanScheduleEntities.add(originalLoanScheduleEntity2);\n        RepaymentScheduleInstallment installment1 = new RepaymentScheduleInstallment();\n        RepaymentScheduleInstallment installment2 = new RepaymentScheduleInstallment();\n        when(originalLoanScheduleEntity1.toDto()).thenReturn(installment1);\n        when(originalLoanScheduleEntity2.toDto()).thenReturn(installment2);\n\n        List<RepaymentScheduleInstallment> expected = new ArrayList<RepaymentScheduleInstallment>();\n        expected.add(installment1);\n        expected.add(installment2);\n        Date date = new Date();\n        when(loanBO.getDisbursementDate()).thenReturn(date);\n        Money money = new Money(rupee, \"4.9\");\n        when(loanBO.getLoanAmount()).thenReturn(money);\n        when(loanBusinessService.retrieveOriginalLoanSchedule(accountId)).thenReturn(loanScheduleEntities);\n        when(loanDao.findById(accountId)).thenReturn(loanBO);\n        OriginalScheduleInfoDto expectedOriginalScheduleInfoDto = new OriginalScheduleInfoDto(money.toString(), date,expected);\n        OriginalScheduleInfoDto originalScheduleInfoDto = loanServiceFacade.retrieveOriginalLoanSchedule(accountId);\n        assertThat(originalScheduleInfoDto, is(new OriginalScheduleInfoDtoMatcher(expectedOriginalScheduleInfoDto)));\n    }", "signature": "void retrieveOriginalLoanSchedule()", "full_signature": "@Test public void retrieveOriginalLoanSchedule()", "class_method_signature": "LoanServiceFacadeWebTierTest.retrieveOriginalLoanSchedule()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "add", "add", "thenReturn", "when", "toDto", "thenReturn", "when", "toDto", "add", "add", "thenReturn", "when", "getDisbursementDate", "thenReturn", "when", "getLoanAmount", "thenReturn", "when", "retrieveOriginalLoanSchedule", "thenReturn", "when", "findById", "toString", "retrieveOriginalLoanSchedule", "assertThat", "is"]}, "focal_class": {"identifier": "LoanServiceFacadeWebTier", "superclass": "", "interfaces": "implements LoanServiceFacade", "fields": [{"original_string": "private final LoanDao loanDao;", "modifier": "private final", "type": "LoanDao", "declarator": "loanDao", "var_name": "loanDao"}, {"original_string": "private final LoanBusinessService loanBusinessService;", "modifier": "private final", "type": "LoanBusinessService", "declarator": "loanBusinessService", "var_name": "loanBusinessService"}], "methods": [{"identifier": "LoanServiceFacadeWebTier", "parameters": "(final LoanDao loanDao, LoanBusinessService loanBusinessService)", "modifiers": "@Autowired public", "return": "", "signature": " LoanServiceFacadeWebTier(final LoanDao loanDao, LoanBusinessService loanBusinessService)", "full_signature": "@Autowired public  LoanServiceFacadeWebTier(final LoanDao loanDao, LoanBusinessService loanBusinessService)", "class_method_signature": "LoanServiceFacadeWebTier.LoanServiceFacadeWebTier(final LoanDao loanDao, LoanBusinessService loanBusinessService)", "testcase": false, "constructor": true}, {"identifier": "retrieveOriginalLoanSchedule", "parameters": "(Integer accountId)", "modifiers": "@Override public", "return": "OriginalScheduleInfoDto", "signature": "OriginalScheduleInfoDto retrieveOriginalLoanSchedule(Integer accountId)", "full_signature": "@Override public OriginalScheduleInfoDto retrieveOriginalLoanSchedule(Integer accountId)", "class_method_signature": "LoanServiceFacadeWebTier.retrieveOriginalLoanSchedule(Integer accountId)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/mifos/application/servicefacade/LoanServiceFacadeWebTier.java"}, "focal_method": {"identifier": "retrieveOriginalLoanSchedule", "parameters": "(Integer accountId)", "modifiers": "@Override public", "return": "OriginalScheduleInfoDto", "body": "@Override\n    public OriginalScheduleInfoDto retrieveOriginalLoanSchedule(Integer accountId) {\n        try {\n            List<OriginalLoanScheduleEntity> loanScheduleEntities = loanBusinessService.retrieveOriginalLoanSchedule(accountId);\n            ArrayList<RepaymentScheduleInstallment> repaymentScheduleInstallments = new ArrayList<RepaymentScheduleInstallment>();\n            for (OriginalLoanScheduleEntity loanScheduleEntity : loanScheduleEntities) {\n                  repaymentScheduleInstallments.add(loanScheduleEntity.toDto());\n            }\n\n            LoanBO loan = this.loanDao.findById(accountId);\n            return new OriginalScheduleInfoDto(loan.getLoanAmount().toString(),loan.getDisbursementDate(),repaymentScheduleInstallments);\n        } catch (PersistenceException e) {\n            throw new MifosRuntimeException(e);\n        }\n    }", "signature": "OriginalScheduleInfoDto retrieveOriginalLoanSchedule(Integer accountId)", "full_signature": "@Override public OriginalScheduleInfoDto retrieveOriginalLoanSchedule(Integer accountId)", "class_method_signature": "LoanServiceFacadeWebTier.retrieveOriginalLoanSchedule(Integer accountId)", "testcase": false, "constructor": false, "invocations": ["retrieveOriginalLoanSchedule", "add", "toDto", "findById", "toString", "getLoanAmount", "getDisbursementDate"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}