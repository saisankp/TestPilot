{"test_class": {"identifier": "SeSelectionTest", "superclass": "extends CoreBaseTest", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SeSelectionTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SeSelectionTest.class)", "var_name": "logger"}], "file": "java/component/keyple-core/src/test/java/org/eclipse/keyple/core/selection/SeSelectionTest.java"}, "test_case": {"identifier": "processDefaultSelectionEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void processDefaultSelectionEmpty() {\n    SeSelection seSelection = createSeSelection();\n\n    AbstractDefaultSelectionsResponse defaultSelectionsResponse;\n    List<SeResponse> seResponses = new ArrayList<SeResponse>();\n\n    defaultSelectionsResponse = new DefaultSelectionsResponse(seResponses);\n\n    SelectionsResult selectionsResult = null;\n    try {\n      selectionsResult = seSelection.processDefaultSelection(defaultSelectionsResponse);\n    } catch (KeypleException e) {\n      Assert.fail(\"Exception raised: \" + e.getMessage());\n    }\n\n    Assert.assertFalse(selectionsResult.hasActiveSelection());\n    Assert.assertEquals(0, selectionsResult.getMatchingSelections().size());\n  }", "signature": "void processDefaultSelectionEmpty()", "full_signature": "@Test public void processDefaultSelectionEmpty()", "class_method_signature": "SeSelectionTest.processDefaultSelectionEmpty()", "testcase": true, "constructor": false, "invocations": ["createSeSelection", "processDefaultSelection", "fail", "getMessage", "assertFalse", "hasActiveSelection", "assertEquals", "size", "getMatchingSelections"]}, "focal_class": {"identifier": "SeSelection", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SeSelection.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SeSelection.class)", "var_name": "logger"}, {"original_string": "private final List<AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder>>\n      seSelectionRequests =\n          new ArrayList<AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder>>();", "modifier": "private final", "type": "List<AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder>>", "declarator": "seSelectionRequests =\n          new ArrayList<AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder>>()", "var_name": "seSelectionRequests"}, {"original_string": "private final MultiSeRequestProcessing multiSeRequestProcessing;", "modifier": "private final", "type": "MultiSeRequestProcessing", "declarator": "multiSeRequestProcessing", "var_name": "multiSeRequestProcessing"}, {"original_string": "private ChannelControl channelControl = ChannelControl.KEEP_OPEN;", "modifier": "private", "type": "ChannelControl", "declarator": "channelControl = ChannelControl.KEEP_OPEN", "var_name": "channelControl"}], "methods": [{"identifier": "SeSelection", "parameters": "(MultiSeRequestProcessing multiSeRequestProcessing)", "modifiers": "public", "return": "", "signature": " SeSelection(MultiSeRequestProcessing multiSeRequestProcessing)", "full_signature": "public  SeSelection(MultiSeRequestProcessing multiSeRequestProcessing)", "class_method_signature": "SeSelection.SeSelection(MultiSeRequestProcessing multiSeRequestProcessing)", "testcase": false, "constructor": true}, {"identifier": "SeSelection", "parameters": "()", "modifiers": "public", "return": "", "signature": " SeSelection()", "full_signature": "public  SeSelection()", "class_method_signature": "SeSelection.SeSelection()", "testcase": false, "constructor": true}, {"identifier": "prepareSelection", "parameters": "(\n      AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder> seSelectionRequest)", "modifiers": "public", "return": "int", "signature": "int prepareSelection(\n      AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder> seSelectionRequest)", "full_signature": "public int prepareSelection(\n      AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder> seSelectionRequest)", "class_method_signature": "SeSelection.prepareSelection(\n      AbstractSeSelectionRequest<? extends AbstractApduCommandBuilder> seSelectionRequest)", "testcase": false, "constructor": false}, {"identifier": "prepareReleaseSeChannel", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void prepareReleaseSeChannel()", "full_signature": "public final void prepareReleaseSeChannel()", "class_method_signature": "SeSelection.prepareReleaseSeChannel()", "testcase": false, "constructor": false}, {"identifier": "processSelection", "parameters": "(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "modifiers": "private", "return": "SelectionsResult", "signature": "SelectionsResult processSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "full_signature": "private SelectionsResult processSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "class_method_signature": "SeSelection.processSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "testcase": false, "constructor": false}, {"identifier": "processDefaultSelection", "parameters": "(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "modifiers": "public", "return": "SelectionsResult", "signature": "SelectionsResult processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "full_signature": "public SelectionsResult processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "class_method_signature": "SeSelection.processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "testcase": false, "constructor": false}, {"identifier": "processExplicitSelection", "parameters": "(SeReader seReader)", "modifiers": "public", "return": "SelectionsResult", "signature": "SelectionsResult processExplicitSelection(SeReader seReader)", "full_signature": "public SelectionsResult processExplicitSelection(SeReader seReader)", "class_method_signature": "SeSelection.processExplicitSelection(SeReader seReader)", "testcase": false, "constructor": false}, {"identifier": "getSelectionOperation", "parameters": "()", "modifiers": "public", "return": "AbstractDefaultSelectionsRequest", "signature": "AbstractDefaultSelectionsRequest getSelectionOperation()", "full_signature": "public AbstractDefaultSelectionsRequest getSelectionOperation()", "class_method_signature": "SeSelection.getSelectionOperation()", "testcase": false, "constructor": false}], "file": "java/component/keyple-core/src/main/java/org/eclipse/keyple/core/selection/SeSelection.java"}, "focal_method": {"identifier": "processDefaultSelection", "parameters": "(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "modifiers": "public", "return": "SelectionsResult", "body": "public SelectionsResult processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse) {\n\n    /* null pointer exception protection */\n    if (defaultSelectionsResponse == null) {\n      logger.error(\"defaultSelectionsResponse shouldn't be null in processSelection.\");\n      return null;\n    }\n\n    if (logger.isTraceEnabled()) {\n      logger.trace(\n          \"Process default SELECTIONRESPONSE ({} response(s))\",\n          ((DefaultSelectionsResponse) defaultSelectionsResponse).getSelectionSeResponses().size());\n    }\n\n    return processSelection(defaultSelectionsResponse);\n  }", "signature": "SelectionsResult processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "full_signature": "public SelectionsResult processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "class_method_signature": "SeSelection.processDefaultSelection(\n      AbstractDefaultSelectionsResponse defaultSelectionsResponse)", "testcase": false, "constructor": false, "invocations": ["error", "isTraceEnabled", "trace", "size", "getSelectionSeResponses", "processSelection"]}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}