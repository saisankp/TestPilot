{"test_class": {"identifier": "ElasticsearchDependenciesJobTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule public MockWebServer es = new MockWebServer();", "modifier": "@Rule public", "type": "MockWebServer", "declarator": "es = new MockWebServer()", "var_name": "es"}], "file": "elasticsearch/src/test/java/zipkin2/dependencies/elasticsearch/ElasticsearchDependenciesJobTest.java"}, "test_case": {"identifier": "buildAuth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void buildAuth() {\n    ElasticsearchDependenciesJob job =\n        ElasticsearchDependenciesJob.builder().username(\"foo\").password(\"bar\").build();\n    assertThat(job.conf.get(\"es.net.http.auth.user\")).isEqualTo(\"foo\");\n    assertThat(job.conf.get(\"es.net.http.auth.pass\")).isEqualTo(\"bar\");\n  }", "signature": "void buildAuth()", "full_signature": "@Test public void buildAuth()", "class_method_signature": "ElasticsearchDependenciesJobTest.buildAuth()", "testcase": true, "constructor": false, "invocations": ["build", "password", "username", "builder", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "ElasticsearchDependenciesJob", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Charset UTF_8 = Charset.forName(\"UTF-8\");", "modifier": "static final", "type": "Charset", "declarator": "UTF_8 = Charset.forName(\"UTF-8\")", "var_name": "UTF_8"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(ElasticsearchDependenciesJob.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ElasticsearchDependenciesJob.class)", "var_name": "log"}, {"original_string": "final String index;", "modifier": "final", "type": "String", "declarator": "index", "var_name": "index"}, {"original_string": "final String dateStamp;", "modifier": "final", "type": "String", "declarator": "dateStamp", "var_name": "dateStamp"}, {"original_string": "final SparkConf conf;", "modifier": "final", "type": "SparkConf", "declarator": "conf", "var_name": "conf"}, {"original_string": "@Nullable final Runnable logInitializer;", "modifier": "@Nullable final", "type": "Runnable", "declarator": "logInitializer", "var_name": "logInitializer"}, {"original_string": "static final Function<DependencyLink, Map<String, Object>> DEPENDENCY_LINK_JSON = l -> {\n    Map<String, Object> result = new LinkedHashMap<>();\n    result.put(\"id\", l.parent() + \"|\" + l.child());\n    result.put(\"parent\", l.parent());\n    result.put(\"child\", l.child());\n    result.put(\"callCount\", l.callCount());\n    result.put(\"errorCount\", l.errorCount());\n    return result;\n  };", "modifier": "static final", "type": "Function<DependencyLink, Map<String, Object>>", "declarator": "DEPENDENCY_LINK_JSON = l -> {\n    Map<String, Object> result = new LinkedHashMap<>();\n    result.put(\"id\", l.parent() + \"|\" + l.child());\n    result.put(\"parent\", l.parent());\n    result.put(\"child\", l.child());\n    result.put(\"callCount\", l.callCount());\n    result.put(\"errorCount\", l.errorCount());\n    return result;\n  }", "var_name": "DEPENDENCY_LINK_JSON"}, {"original_string": "static final Function<Tuple2<String, String>, String> JSON_TRACE_ID = new Function<Tuple2<String, String>, String>() {\n    /** returns the lower 64 bits of the trace ID */\n    @Override public String call(Tuple2<String, String> pair) throws IOException {\n      JsonReader reader = new JsonReader(new StringReader(pair._2));\n      reader.beginObject();\n      while (reader.hasNext()) {\n        String nextName = reader.nextName();\n        if (nextName.equals(\"traceId\")) {\n          String traceId = reader.nextString();\n          return traceId.length() > 16 ? traceId.substring(traceId.length() - 16) : traceId;\n        } else {\n          reader.skipValue();\n        }\n      }\n      throw new MalformedJsonException(\"no traceId in \" + pair);\n    }\n\n    @Override public String toString() {\n      return \"pair._2.traceId\";\n    }\n  };", "modifier": "static final", "type": "Function<Tuple2<String, String>, String>", "declarator": "JSON_TRACE_ID = new Function<Tuple2<String, String>, String>() {\n    /** returns the lower 64 bits of the trace ID */\n    @Override public String call(Tuple2<String, String> pair) throws IOException {\n      JsonReader reader = new JsonReader(new StringReader(pair._2));\n      reader.beginObject();\n      while (reader.hasNext()) {\n        String nextName = reader.nextName();\n        if (nextName.equals(\"traceId\")) {\n          String traceId = reader.nextString();\n          return traceId.length() > 16 ? traceId.substring(traceId.length() - 16) : traceId;\n        } else {\n          reader.skipValue();\n        }\n      }\n      throw new MalformedJsonException(\"no traceId in \" + pair);\n    }\n\n    @Override public String toString() {\n      return \"pair._2.traceId\";\n    }\n  }", "var_name": "JSON_TRACE_ID"}], "methods": [{"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "ElasticsearchDependenciesJob.builder()", "testcase": false, "constructor": false}, {"identifier": "getSystemPropertyAsFileResource", "parameters": "(String key)", "modifiers": "private static", "return": "String", "signature": "String getSystemPropertyAsFileResource(String key)", "full_signature": "private static String getSystemPropertyAsFileResource(String key)", "class_method_signature": "ElasticsearchDependenciesJob.getSystemPropertyAsFileResource(String key)", "testcase": false, "constructor": false}, {"identifier": "ElasticsearchDependenciesJob", "parameters": "(Builder builder)", "modifiers": "", "return": "", "signature": " ElasticsearchDependenciesJob(Builder builder)", "full_signature": "  ElasticsearchDependenciesJob(Builder builder)", "class_method_signature": "ElasticsearchDependenciesJob.ElasticsearchDependenciesJob(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "ElasticsearchDependenciesJob.run()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(String spanResource, String dependencyLinkResource, SpanBytesDecoder decoder)", "modifiers": "", "return": "void", "signature": "void run(String spanResource, String dependencyLinkResource, SpanBytesDecoder decoder)", "full_signature": " void run(String spanResource, String dependencyLinkResource, SpanBytesDecoder decoder)", "class_method_signature": "ElasticsearchDependenciesJob.run(String spanResource, String dependencyLinkResource, SpanBytesDecoder decoder)", "testcase": false, "constructor": false}, {"identifier": "getEnv", "parameters": "(String key, String defaultValue)", "modifiers": "private static", "return": "String", "signature": "String getEnv(String key, String defaultValue)", "full_signature": "private static String getEnv(String key, String defaultValue)", "class_method_signature": "ElasticsearchDependenciesJob.getEnv(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "parseHosts", "parameters": "(String hosts)", "modifiers": "static", "return": "String", "signature": "String parseHosts(String hosts)", "full_signature": "static String parseHosts(String hosts)", "class_method_signature": "ElasticsearchDependenciesJob.parseHosts(String hosts)", "testcase": false, "constructor": false}], "file": "elasticsearch/src/main/java/zipkin2/dependencies/elasticsearch/ElasticsearchDependenciesJob.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "ElasticsearchDependenciesJob.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 44637917, "url": "https://github.com/openzipkin/zipkin-dependencies", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 139, "size": 975, "license": "licensed"}}