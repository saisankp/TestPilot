{"test_class": {"identifier": "StringsHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/util/StringsHelperTest.java"}, "test_case": {"identifier": "normalizeString", "parameters": "()", "modifiers": "@Test /** * Normalized a string to */ public", "return": "void", "body": "@Test\n    /**\n     * Normalized a string to\n     */\n    public void normalizeString() throws Exception {\n        // Unicode: 'v' 118, 'i' 105, 's' 115, 'i' 105, 't' 116, 'e' 101, '\u0301' 769, 's' 115\n        final String initialString = \"visite\u0301s\";\n        // Unicode: 'v' 118, 'i' 105, 's' 115, 'i' 105, 't' 116, '\u00e9' 233, 's' 115\n        final String expected = \"visit\u00e9s\";\n\n        assertNotEquals(initialString, expected);\n\n        assertEquals(expected, StringsHelper.normalizeString(initialString));\n        assertEquals(expected, StringsHelper.normalizeString(expected));\n        assertEquals(expected, StringsHelper.normalizeString(StringsHelper.normalizeString(initialString)));\n    }", "signature": "void normalizeString()", "full_signature": "@Test /** * Normalized a string to */ public void normalizeString()", "class_method_signature": "StringsHelperTest.normalizeString()", "testcase": true, "constructor": false, "invocations": ["assertNotEquals", "assertEquals", "normalizeString", "assertEquals", "normalizeString", "assertEquals", "normalizeString", "normalizeString"]}, "focal_class": {"identifier": "StringsHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "match", "parameters": "(final String reference, final String value, final boolean strict)", "modifiers": "public static", "return": "boolean", "signature": "boolean match(final String reference, final String value, final boolean strict)", "full_signature": "public static boolean match(final String reference, final String value, final boolean strict)", "class_method_signature": "StringsHelper.match(final String reference, final String value, final boolean strict)", "testcase": false, "constructor": false}, {"identifier": "normalizeString", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String normalizeString(String s)", "full_signature": "public static String normalizeString(String s)", "class_method_signature": "StringsHelper.normalizeString(String s)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/util/StringsHelper.java"}, "focal_method": {"identifier": "normalizeString", "parameters": "(String s)", "modifiers": "public static", "return": "String", "body": "public static String normalizeString(String s) {\n        if (!Normalizer.isNormalized(s, Normalizer.Form.NFC)) {\n            return Normalizer.normalize(s, Normalizer.Form.NFC);\n        } else {\n            return s;\n        }\n    }", "signature": "String normalizeString(String s)", "full_signature": "public static String normalizeString(String s)", "class_method_signature": "StringsHelper.normalizeString(String s)", "testcase": false, "constructor": false, "invocations": ["isNormalized", "normalize"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}