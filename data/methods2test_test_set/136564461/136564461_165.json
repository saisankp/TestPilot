{"test_class": {"identifier": "HashesTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/HashesTest.java"}, "test_case": {"identifier": "success_4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_4() {\n        String seed = \"ab4195d4123f0594e5341c45134c5938cc5913d34aa951234c5938cc2a6eb487\";\n\n        byte[] result3 = Hashes.hash(HashAlgorithm.SHA_512, HexEncoder.getBytes(seed));\n\n        String result3Str = HexEncoder.getString(result3);\n\n        assertThat(result3Str, is(\"fb51bcb380697c0fd1e1817b4faefff56d780f2609169d69aa7db8e7ae4bc830c2c2b0487bbe69be5f8ce1e3c52abd1ac81e99af98bab15f73b18469376dd375\"));\n    }", "signature": "void success_4()", "full_signature": "@Test public void success_4()", "class_method_signature": "HashesTest.success_4()", "testcase": true, "constructor": false, "invocations": ["hash", "getBytes", "getString", "assertThat", "is"]}, "focal_class": {"identifier": "Hashes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(String algorithm, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(String algorithm, byte[]... inputs)", "full_signature": "private static byte[] hash(String algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(String algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hashVariableOutput", "parameters": "(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "full_signature": "private static byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "class_method_signature": "Hashes.hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/Hashes.java"}, "focal_method": {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs) {\n        return hash(algorithm, algorithm.getDefaultBitLength() / 8, inputs);\n    }", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false, "invocations": ["hash", "getDefaultBitLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}