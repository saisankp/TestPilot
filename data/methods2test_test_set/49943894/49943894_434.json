{"test_class": {"identifier": "ConsoleProxyServletTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/com/cloud/servlet/ConsoleProxyServletTest.java"}, "test_case": {"identifier": "escapeHTML", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void escapeHTML() {\n        Assert.assertNull(ConsoleProxyServlet.escapeHTML(null));\n        Assert.assertEquals(\"\", ConsoleProxyServlet.escapeHTML(\"\"));\n        Assert.assertEquals(\"&lt;strangevmname&gt;\",\n                ConsoleProxyServlet.escapeHTML(\"<strangevmname>\"));\n        Assert.assertEquals(\"&quot;strange&nbsp;vm&quot;\",\n                ConsoleProxyServlet.escapeHTML(\"\\\"strange vm\\\"\"));\n        Assert.assertEquals(\"Nothing-extraordinary-anyway.\",\n                ConsoleProxyServlet.escapeHTML(\"Nothing-extraordinary-anyway.\"));\n    }", "signature": "void escapeHTML()", "full_signature": "@Test public void escapeHTML()", "class_method_signature": "ConsoleProxyServletTest.escapeHTML()", "testcase": true, "constructor": false, "invocations": ["assertNull", "escapeHTML", "assertEquals", "escapeHTML", "assertEquals", "escapeHTML", "assertEquals", "escapeHTML", "assertEquals", "escapeHTML"]}, "focal_class": {"identifier": "ConsoleProxyServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -5515382620323808168L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -5515382620323808168L", "var_name": "serialVersionUID"}, {"original_string": "public static final Logger s_logger = LoggerFactory.getLogger(ConsoleProxyServlet.class.getName());", "modifier": "public static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(ConsoleProxyServlet.class.getName())", "var_name": "s_logger"}, {"original_string": "private static final int DEFAULT_THUMBNAIL_WIDTH = 144;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_THUMBNAIL_WIDTH = 144", "var_name": "DEFAULT_THUMBNAIL_WIDTH"}, {"original_string": "private static final int DEFAULT_THUMBNAIL_HEIGHT = 110;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_THUMBNAIL_HEIGHT = 110", "var_name": "DEFAULT_THUMBNAIL_HEIGHT"}, {"original_string": "@Inject\n    AccountManager _accountMgr;", "modifier": "@Inject", "type": "AccountManager", "declarator": "_accountMgr", "var_name": "_accountMgr"}, {"original_string": "@Inject\n    VirtualMachineManager _vmMgr;", "modifier": "@Inject", "type": "VirtualMachineManager", "declarator": "_vmMgr", "var_name": "_vmMgr"}, {"original_string": "@Inject\n    ManagementServer _ms;", "modifier": "@Inject", "type": "ManagementServer", "declarator": "_ms", "var_name": "_ms"}, {"original_string": "@Inject\n    EntityManager _entityMgr;", "modifier": "@Inject", "type": "EntityManager", "declarator": "_entityMgr", "var_name": "_entityMgr"}, {"original_string": "@Inject\n    UserVmDetailsDao _userVmDetailsDao;", "modifier": "@Inject", "type": "UserVmDetailsDao", "declarator": "_userVmDetailsDao", "var_name": "_userVmDetailsDao"}, {"original_string": "@Inject\n    KeysManager _keysMgr;", "modifier": "@Inject", "type": "KeysManager", "declarator": "_keysMgr", "var_name": "_keysMgr"}, {"original_string": "static KeysManager s_keysMgr;", "modifier": "static", "type": "KeysManager", "declarator": "s_keysMgr", "var_name": "s_keysMgr"}, {"original_string": "private final Gson _gson = new GsonBuilder().create();", "modifier": "private final", "type": "Gson", "declarator": "_gson = new GsonBuilder().create()", "var_name": "_gson"}], "methods": [{"identifier": "ConsoleProxyServlet", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConsoleProxyServlet()", "full_signature": "public  ConsoleProxyServlet()", "class_method_signature": "ConsoleProxyServlet.ConsoleProxyServlet()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(ServletConfig config)", "modifiers": "@Override public", "return": "void", "signature": "void init(ServletConfig config)", "full_signature": "@Override public void init(ServletConfig config)", "class_method_signature": "ConsoleProxyServlet.init(ServletConfig config)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(HttpServletRequest req, HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(HttpServletRequest req, HttpServletResponse resp)", "full_signature": "@Override protected void doPost(HttpServletRequest req, HttpServletResponse resp)", "class_method_signature": "ConsoleProxyServlet.doPost(HttpServletRequest req, HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "(HttpServletRequest req, HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(HttpServletRequest req, HttpServletResponse resp)", "full_signature": "@Override protected void doGet(HttpServletRequest req, HttpServletResponse resp)", "class_method_signature": "ConsoleProxyServlet.doGet(HttpServletRequest req, HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "handleThumbnailRequest", "parameters": "(HttpServletRequest req, HttpServletResponse resp, long vmId)", "modifiers": "private", "return": "void", "signature": "void handleThumbnailRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "full_signature": "private void handleThumbnailRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "class_method_signature": "ConsoleProxyServlet.handleThumbnailRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "testcase": false, "constructor": false}, {"identifier": "handleAccessRequest", "parameters": "(HttpServletRequest req, HttpServletResponse resp, long vmId)", "modifiers": "private", "return": "void", "signature": "void handleAccessRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "full_signature": "private void handleAccessRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "class_method_signature": "ConsoleProxyServlet.handleAccessRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "testcase": false, "constructor": false}, {"identifier": "handleAuthRequest", "parameters": "(HttpServletRequest req, HttpServletResponse resp, long vmId)", "modifiers": "private", "return": "void", "signature": "void handleAuthRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "full_signature": "private void handleAuthRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "class_method_signature": "ConsoleProxyServlet.handleAuthRequest(HttpServletRequest req, HttpServletResponse resp, long vmId)", "testcase": false, "constructor": false}, {"identifier": "parseHostInfo", "parameters": "(String hostInfo)", "modifiers": "static public", "return": "Ternary<String, String, String>", "signature": "Ternary<String, String, String> parseHostInfo(String hostInfo)", "full_signature": "static public Ternary<String, String, String> parseHostInfo(String hostInfo)", "class_method_signature": "ConsoleProxyServlet.parseHostInfo(String hostInfo)", "testcase": false, "constructor": false}, {"identifier": "getEncryptorPassword", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getEncryptorPassword()", "full_signature": "private String getEncryptorPassword()", "class_method_signature": "ConsoleProxyServlet.getEncryptorPassword()", "testcase": false, "constructor": false}, {"identifier": "composeThumbnailUrl", "parameters": "(String rootUrl, VirtualMachine vm, HostVO hostVo, int w, int h)", "modifiers": "private", "return": "String", "signature": "String composeThumbnailUrl(String rootUrl, VirtualMachine vm, HostVO hostVo, int w, int h)", "full_signature": "private String composeThumbnailUrl(String rootUrl, VirtualMachine vm, HostVO hostVo, int w, int h)", "class_method_signature": "ConsoleProxyServlet.composeThumbnailUrl(String rootUrl, VirtualMachine vm, HostVO hostVo, int w, int h)", "testcase": false, "constructor": false}, {"identifier": "composeConsoleAccessUrl", "parameters": "(String rootUrl, VirtualMachine vm, HostVO hostVo)", "modifiers": "private", "return": "String", "signature": "String composeConsoleAccessUrl(String rootUrl, VirtualMachine vm, HostVO hostVo)", "full_signature": "private String composeConsoleAccessUrl(String rootUrl, VirtualMachine vm, HostVO hostVo)", "class_method_signature": "ConsoleProxyServlet.composeConsoleAccessUrl(String rootUrl, VirtualMachine vm, HostVO hostVo)", "testcase": false, "constructor": false}, {"identifier": "genAccessTicket", "parameters": "(String host, String port, String sid, String tag)", "modifiers": "public static", "return": "String", "signature": "String genAccessTicket(String host, String port, String sid, String tag)", "full_signature": "public static String genAccessTicket(String host, String port, String sid, String tag)", "class_method_signature": "ConsoleProxyServlet.genAccessTicket(String host, String port, String sid, String tag)", "testcase": false, "constructor": false}, {"identifier": "genAccessTicket", "parameters": "(String host, String port, String sid, String tag, Date normalizedHashTime)", "modifiers": "public static", "return": "String", "signature": "String genAccessTicket(String host, String port, String sid, String tag, Date normalizedHashTime)", "full_signature": "public static String genAccessTicket(String host, String port, String sid, String tag, Date normalizedHashTime)", "class_method_signature": "ConsoleProxyServlet.genAccessTicket(String host, String port, String sid, String tag, Date normalizedHashTime)", "testcase": false, "constructor": false}, {"identifier": "sendResponse", "parameters": "(HttpServletResponse resp, String content)", "modifiers": "private", "return": "void", "signature": "void sendResponse(HttpServletResponse resp, String content)", "full_signature": "private void sendResponse(HttpServletResponse resp, String content)", "class_method_signature": "ConsoleProxyServlet.sendResponse(HttpServletResponse resp, String content)", "testcase": false, "constructor": false}, {"identifier": "checkSessionPermision", "parameters": "(HttpServletRequest req, long vmId, Account accountObj)", "modifiers": "private", "return": "boolean", "signature": "boolean checkSessionPermision(HttpServletRequest req, long vmId, Account accountObj)", "full_signature": "private boolean checkSessionPermision(HttpServletRequest req, long vmId, Account accountObj)", "class_method_signature": "ConsoleProxyServlet.checkSessionPermision(HttpServletRequest req, long vmId, Account accountObj)", "testcase": false, "constructor": false}, {"identifier": "isValidCmd", "parameters": "(String cmd)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidCmd(String cmd)", "full_signature": "private boolean isValidCmd(String cmd)", "class_method_signature": "ConsoleProxyServlet.isValidCmd(String cmd)", "testcase": false, "constructor": false}, {"identifier": "verifyUser", "parameters": "(Long userId)", "modifiers": "public", "return": "boolean", "signature": "boolean verifyUser(Long userId)", "full_signature": "public boolean verifyUser(Long userId)", "class_method_signature": "ConsoleProxyServlet.verifyUser(Long userId)", "testcase": false, "constructor": false}, {"identifier": "verifyRequest", "parameters": "(Map<String, Object[]> requestParameters)", "modifiers": "private", "return": "boolean", "signature": "boolean verifyRequest(Map<String, Object[]> requestParameters)", "full_signature": "private boolean verifyRequest(Map<String, Object[]> requestParameters)", "class_method_signature": "ConsoleProxyServlet.verifyRequest(Map<String, Object[]> requestParameters)", "testcase": false, "constructor": false}, {"identifier": "escapeHTML", "parameters": "(String content)", "modifiers": "public static final", "return": "String", "signature": "String escapeHTML(String content)", "full_signature": "public static final String escapeHTML(String content)", "class_method_signature": "ConsoleProxyServlet.escapeHTML(String content)", "testcase": false, "constructor": false}], "file": "server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java"}, "focal_method": {"identifier": "escapeHTML", "parameters": "(String content)", "modifiers": "public static final", "return": "String", "body": "public static final String escapeHTML(String content) {\n        if (content == null || content.isEmpty())\n            return content;\n\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < content.length(); i++) {\n            char c = content.charAt(i);\n            switch (c) {\n                case '<':\n                    sb.append(\"&lt;\");\n                    break;\n                case '>':\n                    sb.append(\"&gt;\");\n                    break;\n                case '&':\n                    sb.append(\"&amp;\");\n                    break;\n                case '\"':\n                    sb.append(\"&quot;\");\n                    break;\n                case ' ':\n                    sb.append(\"&nbsp;\");\n                    break;\n                default:\n                    sb.append(c);\n                    break;\n            }\n        }\n        return sb.toString();\n    }", "signature": "String escapeHTML(String content)", "full_signature": "public static final String escapeHTML(String content)", "class_method_signature": "ConsoleProxyServlet.escapeHTML(String content)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "length", "charAt", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}