{"test_class": {"identifier": "PermissionParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Environment<Class<?>> environment = StubEnvironment.of(Project.EMPTY);", "modifier": "", "type": "Environment<Class<?>>", "declarator": "environment = StubEnvironment.of(Project.EMPTY)", "var_name": "environment"}, {"original_string": "PermissionParser<Class<?>> parser = new PermissionParser<>(environment);", "modifier": "", "type": "PermissionParser<Class<?>>", "declarator": "parser = new PermissionParser<>(environment)", "var_name": "parser"}], "file": "scribe/core/src/test/java/com/karuslabs/scribe/core/parsers/PermissionParserTest.java"}, "test_case": {"identifier": "clear", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void clear() {\n        parser.names.add(\"name\");\n        parser.clear();\n        \n        assertTrue(parser.names.isEmpty());\n    }", "signature": "void clear()", "full_signature": "@Test void clear()", "class_method_signature": "PermissionParserTest.clear()", "testcase": true, "constructor": false, "invocations": ["add", "clear", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "PermissionParser", "superclass": "extends Parser<T>", "interfaces": "", "fields": [{"original_string": "Set<String> names;", "modifier": "", "type": "Set<String>", "declarator": "names", "var_name": "names"}, {"original_string": "Matcher matcher;", "modifier": "", "type": "Matcher", "declarator": "matcher", "var_name": "matcher"}], "methods": [{"identifier": "PermissionParser", "parameters": "(Environment<T> environment)", "modifiers": "public", "return": "", "signature": " PermissionParser(Environment<T> environment)", "full_signature": "public  PermissionParser(Environment<T> environment)", "class_method_signature": "PermissionParser.PermissionParser(Environment<T> environment)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(T type)", "modifiers": "@Override protected", "return": "void", "signature": "void parse(T type)", "full_signature": "@Override protected void parse(T type)", "class_method_signature": "PermissionParser.parse(T type)", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(T type, Permission permission)", "modifiers": "protected", "return": "void", "signature": "void check(T type, Permission permission)", "full_signature": "protected void check(T type, Permission permission)", "class_method_signature": "PermissionParser.check(T type, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "checkMalformed", "parameters": "(T type, Permission permission)", "modifiers": "protected", "return": "void", "signature": "void checkMalformed(T type, Permission permission)", "full_signature": "protected void checkMalformed(T type, Permission permission)", "class_method_signature": "PermissionParser.checkMalformed(T type, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(Permission permission, Map<String, Object> permissions)", "modifiers": "protected", "return": "void", "signature": "void parse(Permission permission, Map<String, Object> permissions)", "full_signature": "protected void parse(Permission permission, Map<String, Object> permissions)", "class_method_signature": "PermissionParser.parse(Permission permission, Map<String, Object> permissions)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "PermissionParser.clear()", "testcase": false, "constructor": false}], "file": "scribe/core/src/main/java/com/karuslabs/scribe/core/parsers/PermissionParser.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void clear() {\n        names.clear();\n    }", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "PermissionParser.clear()", "testcase": false, "constructor": false, "invocations": ["clear"]}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}