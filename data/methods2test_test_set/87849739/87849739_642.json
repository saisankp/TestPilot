{"test_class": {"identifier": "SecretFromPathReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SECRETS_DIR = \"/secrets/\";", "modifier": "private static final", "type": "String", "declarator": "SECRETS_DIR = \"/secrets/\"", "var_name": "SECRETS_DIR"}, {"original_string": "private static final String PASSWORD_FILE_SUFFIX = \"_password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD_FILE_SUFFIX = \"_password\"", "var_name": "PASSWORD_FILE_SUFFIX"}, {"original_string": "private static final String PLUMBUS_SECRET_FILE_NAME = \"plumbus\" + PASSWORD_FILE_SUFFIX;", "modifier": "private static final", "type": "String", "declarator": "PLUMBUS_SECRET_FILE_NAME = \"plumbus\" + PASSWORD_FILE_SUFFIX", "var_name": "PLUMBUS_SECRET_FILE_NAME"}, {"original_string": "private static final String PLUMBUS_SECRET_FILE_PATH = SECRETS_DIR + PLUMBUS_SECRET_FILE_NAME;", "modifier": "private static final", "type": "String", "declarator": "PLUMBUS_SECRET_FILE_PATH = SECRETS_DIR + PLUMBUS_SECRET_FILE_NAME", "var_name": "PLUMBUS_SECRET_FILE_PATH"}, {"original_string": "private static final String EMPTY_SECRET_FILE_NAME = \"empty\" + PASSWORD_FILE_SUFFIX;", "modifier": "private static final", "type": "String", "declarator": "EMPTY_SECRET_FILE_NAME = \"empty\" + PASSWORD_FILE_SUFFIX", "var_name": "EMPTY_SECRET_FILE_NAME"}, {"original_string": "private static final String EMPTY_SECRET_FILE_PATH = SECRETS_DIR + EMPTY_SECRET_FILE_NAME;", "modifier": "private static final", "type": "String", "declarator": "EMPTY_SECRET_FILE_PATH = SECRETS_DIR + EMPTY_SECRET_FILE_NAME", "var_name": "EMPTY_SECRET_FILE_PATH"}, {"original_string": "private static Path knownPlumbusSecretPath;", "modifier": "private static", "type": "Path", "declarator": "knownPlumbusSecretPath", "var_name": "knownPlumbusSecretPath"}, {"original_string": "private static Path knownEmptySecretPath;", "modifier": "private static", "type": "Path", "declarator": "knownEmptySecretPath", "var_name": "knownEmptySecretPath"}], "file": "services/utils/config/src/test/java/org/eclipse/ditto/services/utils/config/raw/SecretFromPathReaderTest.java"}, "test_case": {"identifier": "tryToGetInstanceWithNullPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToGetInstanceWithNullPath() {\n        assertThatNullPointerException()\n                .isThrownBy(() -> SecretFromPathReader.of(null))\n                .withMessage(\"The Secret path must not be null!\")\n                .withNoCause();\n    }", "signature": "void tryToGetInstanceWithNullPath()", "full_signature": "@Test public void tryToGetInstanceWithNullPath()", "class_method_signature": "SecretFromPathReaderTest.tryToGetInstanceWithNullPath()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatNullPointerException", "of"]}, "focal_class": {"identifier": "SecretFromPathReader", "superclass": "", "interfaces": "implements Supplier<Optional<Secret>>", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SecretFromPathReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SecretFromPathReader.class)", "var_name": "LOGGER"}, {"original_string": "private final String secretName;", "modifier": "private final", "type": "String", "declarator": "secretName", "var_name": "secretName"}, {"original_string": "private final Path path;", "modifier": "private final", "type": "Path", "declarator": "path", "var_name": "path"}], "methods": [{"identifier": "SecretFromPathReader", "parameters": "(final String theSecretName, final Path thePath)", "modifiers": "private", "return": "", "signature": " SecretFromPathReader(final String theSecretName, final Path thePath)", "full_signature": "private  SecretFromPathReader(final String theSecretName, final Path thePath)", "class_method_signature": "SecretFromPathReader.SecretFromPathReader(final String theSecretName, final Path thePath)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Path path)", "modifiers": "static", "return": "SecretFromPathReader", "signature": "SecretFromPathReader of(final Path path)", "full_signature": "static SecretFromPathReader of(final Path path)", "class_method_signature": "SecretFromPathReader.of(final Path path)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String secretName, final Path path)", "modifiers": "static", "return": "SecretFromPathReader", "signature": "SecretFromPathReader of(final String secretName, final Path path)", "full_signature": "static SecretFromPathReader of(final String secretName, final Path path)", "class_method_signature": "SecretFromPathReader.of(final String secretName, final Path path)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Secret>", "signature": "Optional<Secret> get()", "full_signature": "@Override public Optional<Secret> get()", "class_method_signature": "SecretFromPathReader.get()", "testcase": false, "constructor": false}, {"identifier": "tryToReadSecretFromPath", "parameters": "()", "modifiers": "@Nullable private", "return": "Secret", "signature": "Secret tryToReadSecretFromPath()", "full_signature": "@Nullable private Secret tryToReadSecretFromPath()", "class_method_signature": "SecretFromPathReader.tryToReadSecretFromPath()", "testcase": false, "constructor": false}, {"identifier": "readSecretFromPath", "parameters": "()", "modifiers": "private", "return": "Secret", "signature": "Secret readSecretFromPath()", "full_signature": "private Secret readSecretFromPath()", "class_method_signature": "SecretFromPathReader.readSecretFromPath()", "testcase": false, "constructor": false}], "file": "services/utils/config/src/main/java/org/eclipse/ditto/services/utils/config/raw/SecretFromPathReader.java"}, "focal_method": {"identifier": "of", "parameters": "(final Path path)", "modifiers": "static", "return": "SecretFromPathReader", "body": "static SecretFromPathReader of(final Path path) {\n        checkNotNull(path, \"Secret path\");\n        final String secretName = String.valueOf(path.getName(path.getNameCount() - 1));\n        return of(checkNotNull(secretName, \"Secret name\"), path);\n    }", "signature": "SecretFromPathReader of(final Path path)", "full_signature": "static SecretFromPathReader of(final Path path)", "class_method_signature": "SecretFromPathReader.of(final Path path)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "valueOf", "getName", "getNameCount", "of", "checkNotNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}