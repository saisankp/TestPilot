{"test_class": {"identifier": "CinemaEntityToCinemaTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private Cinema cinemaMock;", "modifier": "@Mock private", "type": "Cinema", "declarator": "cinemaMock", "var_name": "cinemaMock"}, {"original_string": "@Mock private CinemaEntity cinemaEntityMock;", "modifier": "@Mock private", "type": "CinemaEntity", "declarator": "cinemaEntityMock", "var_name": "cinemaEntityMock"}, {"original_string": "private CinemaEntityToCinema mapper;", "modifier": "private", "type": "CinemaEntityToCinema", "declarator": "mapper", "var_name": "mapper"}], "file": "app/src/test/java/com/ru/devit/mediateka/models/mapper/CinemaEntityToCinemaTest.java"}, "test_case": {"identifier": "testReverseMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReverseMap() {\n        doReturn(20).when(cinemaEntityMock).getCinemaId();\n        doReturn(\"Avengers\").when(cinemaEntityMock).getTitle();\n        doReturn(\"Avengers:description\").when(cinemaEntityMock).getDescription();\n        doReturn(\"Stan Lee\").when(cinemaEntityMock).getDirectorName();\n        doReturn(\"2004.12.03\").when(cinemaEntityMock).getReleaseDate();\n\n        final Cinema cinema = mapper.reverseMap(cinemaEntityMock);\n        assertThat(cinema.getId() , is(20));\n        assertThat(cinema.getTitle() , is(\"Avengers\"));\n        assertThat(cinema.getDescription() , is(\"Avengers:description\"));\n        assertThat(cinema.getDirectorName() , is(\"Stan Lee\"));\n        assertThat(cinema.getReleaseDate() , is(\"2004.12.03\"));\n    }", "signature": "void testReverseMap()", "full_signature": "@Test public void testReverseMap()", "class_method_signature": "CinemaEntityToCinemaTest.testReverseMap()", "testcase": true, "constructor": false, "invocations": ["getCinemaId", "when", "doReturn", "getTitle", "when", "doReturn", "getDescription", "when", "doReturn", "getDirectorName", "when", "doReturn", "getReleaseDate", "when", "doReturn", "reverseMap", "assertThat", "getId", "is", "assertThat", "getTitle", "is", "assertThat", "getDescription", "is", "assertThat", "getDirectorName", "is", "assertThat", "getReleaseDate", "is"]}, "focal_class": {"identifier": "CinemaEntityToCinema", "superclass": "extends Mapper<Cinema, CinemaEntity>", "interfaces": "", "fields": [], "methods": [{"identifier": "map", "parameters": "(final Cinema cinema)", "modifiers": "@Override public", "return": "CinemaEntity", "signature": "CinemaEntity map(final Cinema cinema)", "full_signature": "@Override public CinemaEntity map(final Cinema cinema)", "class_method_signature": "CinemaEntityToCinema.map(final Cinema cinema)", "testcase": false, "constructor": false}, {"identifier": "reverseMap", "parameters": "(final CinemaEntity cinemaEntity)", "modifiers": "@Override public", "return": "Cinema", "signature": "Cinema reverseMap(final CinemaEntity cinemaEntity)", "full_signature": "@Override public Cinema reverseMap(final CinemaEntity cinemaEntity)", "class_method_signature": "CinemaEntityToCinema.reverseMap(final CinemaEntity cinemaEntity)", "testcase": false, "constructor": false}, {"identifier": "mapCinemaDetail", "parameters": "(CinemaEntity cinemaEntity , List<ActorEntity> actorEntities)", "modifiers": "public", "return": "Cinema", "signature": "Cinema mapCinemaDetail(CinemaEntity cinemaEntity , List<ActorEntity> actorEntities)", "full_signature": "public Cinema mapCinemaDetail(CinemaEntity cinemaEntity , List<ActorEntity> actorEntities)", "class_method_signature": "CinemaEntityToCinema.mapCinemaDetail(CinemaEntity cinemaEntity , List<ActorEntity> actorEntities)", "testcase": false, "constructor": false}, {"identifier": "mapActors", "parameters": "(List<Actor> actors)", "modifiers": "public", "return": "List<ActorEntity>", "signature": "List<ActorEntity> mapActors(List<Actor> actors)", "full_signature": "public List<ActorEntity> mapActors(List<Actor> actors)", "class_method_signature": "CinemaEntityToCinema.mapActors(List<Actor> actors)", "testcase": false, "constructor": false}, {"identifier": "fillActorEntity", "parameters": "(ActorEntity actorEntity, Actor actor)", "modifiers": "private", "return": "void", "signature": "void fillActorEntity(ActorEntity actorEntity, Actor actor)", "full_signature": "private void fillActorEntity(ActorEntity actorEntity, Actor actor)", "class_method_signature": "CinemaEntityToCinema.fillActorEntity(ActorEntity actorEntity, Actor actor)", "testcase": false, "constructor": false}, {"identifier": "fillActor", "parameters": "(Actor actor, ActorEntity actorEntity)", "modifiers": "private", "return": "void", "signature": "void fillActor(Actor actor, ActorEntity actorEntity)", "full_signature": "private void fillActor(Actor actor, ActorEntity actorEntity)", "class_method_signature": "CinemaEntityToCinema.fillActor(Actor actor, ActorEntity actorEntity)", "testcase": false, "constructor": false}, {"identifier": "fillCinema", "parameters": "(Cinema cinema , CinemaEntity cinemaEntity)", "modifiers": "private", "return": "void", "signature": "void fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "full_signature": "private void fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "class_method_signature": "CinemaEntityToCinema.fillCinema(Cinema cinema , CinemaEntity cinemaEntity)", "testcase": false, "constructor": false}, {"identifier": "fillCinemaEntity", "parameters": "(CinemaEntity cinemaEntity , Cinema cinema)", "modifiers": "private", "return": "void", "signature": "void fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "full_signature": "private void fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "class_method_signature": "CinemaEntityToCinema.fillCinemaEntity(CinemaEntity cinemaEntity , Cinema cinema)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/models/mapper/CinemaEntityToCinema.java"}, "focal_method": {"identifier": "reverseMap", "parameters": "(final CinemaEntity cinemaEntity)", "modifiers": "@Override public", "return": "Cinema", "body": "@Override\n    public Cinema reverseMap(final CinemaEntity cinemaEntity) {\n        final Cinema cinema = new Cinema();\n        fillCinema(cinema , cinemaEntity);\n        return cinema;\n    }", "signature": "Cinema reverseMap(final CinemaEntity cinemaEntity)", "full_signature": "@Override public Cinema reverseMap(final CinemaEntity cinemaEntity)", "class_method_signature": "CinemaEntityToCinema.reverseMap(final CinemaEntity cinemaEntity)", "testcase": false, "constructor": false, "invocations": ["fillCinema"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}