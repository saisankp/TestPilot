{"test_class": {"identifier": "BerksfileTest", "superclass": "", "interfaces": "", "fields": [], "file": "karamel-common/src/test/java/se/kth/karamel/common/cookbookmeta/BerksfileTest.java"}, "test_case": {"identifier": "testLinePatterns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testLinePatterns() throws CookbookUrlException {\n    Settings.CB_CLASSPATH_MODE = true;\n    String content = \"cookbook 'kagent', github: 'karamelchef/kagent-chef'\\n\"\n        + \"cookbook 'ark', github: 'burtlo/ark', tag: 'v0.8.2'\\n\"\n        + \"cookbook 'ark2', github: 'burtlo/ark2', branch: 'kitchen'\\n\"\n        + \"cookbook 'ark3', github: 'burtlo/ark3', version: 'v0.4.0'\\n\";\n    Berksfile berksfile = new Berksfile(content);\n    Assert.assertTrue(berksfile.getDeps().containsKey(\"kagent\"));\n    Assert.assertEquals(\"karamelchef/kagent-chef\", berksfile.getDeps().get(\"kagent\").getGithub());\n    Assert.assertEquals(\"master\", berksfile.getDeps().get(\"kagent\").getBranch());\n    Assert.assertTrue(berksfile.getDeps().containsKey(\"ark\"));\n    Assert.assertEquals(\"burtlo/ark\", berksfile.getDeps().get(\"ark\").getGithub());\n    Assert.assertEquals(\"v0.8.2\", berksfile.getDeps().get(\"ark\").getBranch());\n    Assert.assertTrue(berksfile.getDeps().containsKey(\"ark2\"));\n    Assert.assertEquals(\"burtlo/ark2\", berksfile.getDeps().get(\"ark2\").getGithub());\n    Assert.assertEquals(\"kitchen\", berksfile.getDeps().get(\"ark2\").getBranch());\n    Assert.assertTrue(berksfile.getDeps().containsKey(\"ark3\"));\n    Assert.assertEquals(\"burtlo/ark3\", berksfile.getDeps().get(\"ark3\").getGithub());\n    Assert.assertEquals(\"v0.4.0\", berksfile.getDeps().get(\"ark3\").getBranch());\n  }", "signature": "void testLinePatterns()", "full_signature": "@Test public void testLinePatterns()", "class_method_signature": "BerksfileTest.testLinePatterns()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "containsKey", "getDeps", "assertEquals", "getGithub", "get", "getDeps", "assertEquals", "getBranch", "get", "getDeps", "assertTrue", "containsKey", "getDeps", "assertEquals", "getGithub", "get", "getDeps", "assertEquals", "getBranch", "get", "getDeps", "assertTrue", "containsKey", "getDeps", "assertEquals", "getGithub", "get", "getDeps", "assertEquals", "getBranch", "get", "getDeps", "assertTrue", "containsKey", "getDeps", "assertEquals", "getGithub", "get", "getDeps", "assertEquals", "getBranch", "get", "getDeps"]}, "focal_class": {"identifier": "Berksfile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(Berksfile.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(Berksfile.class)", "var_name": "logger"}, {"original_string": "private final List<String> fileLines;", "modifier": "private final", "type": "List<String>", "declarator": "fileLines", "var_name": "fileLines"}, {"original_string": "private final Map<String, Cookbook> deps = new HashMap<>();", "modifier": "private final", "type": "Map<String, Cookbook>", "declarator": "deps = new HashMap<>()", "var_name": "deps"}, {"original_string": "public static Pattern LINE_PATTERN = Pattern.compile(\n      \"^cookbook\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*,\"\n      + \"\\\\s*github\\\\s*:\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*\"\n      + \"(,\\\\s*(branch|tag|version)\\\\s*:\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*)?$\");", "modifier": "public static", "type": "Pattern", "declarator": "LINE_PATTERN = Pattern.compile(\n      \"^cookbook\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*,\"\n      + \"\\\\s*github\\\\s*:\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*\"\n      + \"(,\\\\s*(branch|tag|version)\\\\s*:\\\\s*(\\\\'[^,^'^\\\\\\\"]+\\\\'|\\\\\\\"[^,^'^\\\\\\\"]+\\\\\\\")\\\\s*)?$\")", "var_name": "LINE_PATTERN"}, {"original_string": "public static Set<String> validUrls = new HashSet<>();", "modifier": "public static", "type": "Set<String>", "declarator": "validUrls = new HashSet<>()", "var_name": "validUrls"}], "methods": [{"identifier": "Berksfile", "parameters": "(String content)", "modifiers": "public", "return": "", "signature": " Berksfile(String content)", "full_signature": "public  Berksfile(String content)", "class_method_signature": "Berksfile.Berksfile(String content)", "testcase": false, "constructor": true}, {"identifier": "getDeps", "parameters": "()", "modifiers": "public", "return": "Map<String, Cookbook>", "signature": "Map<String, Cookbook> getDeps()", "full_signature": "public Map<String, Cookbook> getDeps()", "class_method_signature": "Berksfile.getDeps()", "testcase": false, "constructor": false}, {"identifier": "loadDependencies", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadDependencies()", "full_signature": "private void loadDependencies()", "class_method_signature": "Berksfile.loadDependencies()", "testcase": false, "constructor": false}, {"identifier": "validateGithubUrls", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateGithubUrls()", "full_signature": "private void validateGithubUrls()", "class_method_signature": "Berksfile.validateGithubUrls()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Berksfile.toString()", "testcase": false, "constructor": false}], "file": "karamel-common/src/main/java/se/kth/karamel/common/cookbookmeta/Berksfile.java"}, "focal_method": {"identifier": "getDeps", "parameters": "()", "modifiers": "public", "return": "Map<String, Cookbook>", "body": "public Map<String, Cookbook> getDeps() {\n    return deps;\n  }", "signature": "Map<String, Cookbook> getDeps()", "full_signature": "public Map<String, Cookbook> getDeps()", "class_method_signature": "Berksfile.getDeps()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29383909, "url": "https://github.com/karamelchef/karamel", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 30, "size": 12029, "license": "licensed"}}