{"test_class": {"identifier": "TradingSessionImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "series/src/test/java/com/barchart/feed/series/TradingSessionImplTest.java"}, "test_case": {"identifier": "testSessionMillis", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSessionMillis() {\n        long millisInHour = 3600000;\n        long millisInDay = millisInHour * 24;\n        \n        DateTime dt = new DateTime(2010, 9, 13, 0, 0, 0, 0);  //Monday\n        DateTime dt2 = new DateTime(2010, 9, 15, 0, 0, 0, 0); //Wednesday\n        \n        long sessionMillis = TradingSessionImpl.sessionMillis(\n                dt.dayOfWeek().get(), dt.toLocalTime(), dt2.dayOfWeek().get(), dt2.toLocalTime());\n        assertEquals(millisInDay * 2, sessionMillis);\n        \n        //Test rollover across Sunday boundary\n        dt = new DateTime(2010, 9, 12, 0, 0, 0, 0);     //Sunday\n        dt2 = new DateTime(2010, 9, 14, 0, 0, 0, 0);    //Tuesday\n        \n        sessionMillis = TradingSessionImpl.sessionMillis(\n                dt.dayOfWeek().get(), dt.toLocalTime(), dt2.dayOfWeek().get(), dt2.toLocalTime());\n        assertEquals(millisInDay * 2, sessionMillis);\n    }", "signature": "void testSessionMillis()", "full_signature": "@Test public void testSessionMillis()", "class_method_signature": "TradingSessionImplTest.testSessionMillis()", "testcase": true, "constructor": false, "invocations": ["sessionMillis", "get", "dayOfWeek", "toLocalTime", "get", "dayOfWeek", "toLocalTime", "assertEquals", "sessionMillis", "get", "dayOfWeek", "toLocalTime", "get", "dayOfWeek", "toLocalTime", "assertEquals"]}, "focal_class": {"identifier": "TradingSessionImpl", "superclass": "", "interfaces": "implements TradingSession", "fields": [{"original_string": "private int day;", "modifier": "private", "type": "int", "declarator": "day", "var_name": "day"}, {"original_string": "private int endDay;", "modifier": "private", "type": "int", "declarator": "endDay", "var_name": "endDay"}, {"original_string": "private LocalTime start;", "modifier": "private", "type": "LocalTime", "declarator": "start", "var_name": "start"}, {"original_string": "private LocalTime end;", "modifier": "private", "type": "LocalTime", "declarator": "end", "var_name": "end"}, {"original_string": "private static final int MILLIS_IN_DAY = 86400000;", "modifier": "private static final", "type": "int", "declarator": "MILLIS_IN_DAY = 86400000", "var_name": "MILLIS_IN_DAY"}, {"original_string": "private final long SESSION_MILLIS;", "modifier": "private final", "type": "long", "declarator": "SESSION_MILLIS", "var_name": "SESSION_MILLIS"}], "methods": [{"identifier": "TradingSessionImpl", "parameters": "(int day, int endDay, LocalTime start, LocalTime end)", "modifiers": "public", "return": "", "signature": " TradingSessionImpl(int day, int endDay, LocalTime start, LocalTime end)", "full_signature": "public  TradingSessionImpl(int day, int endDay, LocalTime start, LocalTime end)", "class_method_signature": "TradingSessionImpl.TradingSessionImpl(int day, int endDay, LocalTime start, LocalTime end)", "testcase": false, "constructor": true}, {"identifier": "hourCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hourCount()", "full_signature": "@Override public int hourCount()", "class_method_signature": "TradingSessionImpl.hourCount()", "testcase": false, "constructor": false}, {"identifier": "day", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int day()", "full_signature": "@Override public int day()", "class_method_signature": "TradingSessionImpl.day()", "testcase": false, "constructor": false}, {"identifier": "endDay", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int endDay()", "full_signature": "@Override public int endDay()", "class_method_signature": "TradingSessionImpl.endDay()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "LocalTime", "signature": "LocalTime start()", "full_signature": "@Override public LocalTime start()", "class_method_signature": "TradingSessionImpl.start()", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "()", "modifiers": "@Override public", "return": "LocalTime", "signature": "LocalTime end()", "full_signature": "@Override public LocalTime end()", "class_method_signature": "TradingSessionImpl.end()", "testcase": false, "constructor": false}, {"identifier": "sessionMillis", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long sessionMillis()", "full_signature": "@Override public long sessionMillis()", "class_method_signature": "TradingSessionImpl.sessionMillis()", "testcase": false, "constructor": false}, {"identifier": "sessionMillis", "parameters": "(DateTime startDate, DateTime endDate)", "modifiers": "public static", "return": "long", "signature": "long sessionMillis(DateTime startDate, DateTime endDate)", "full_signature": "public static long sessionMillis(DateTime startDate, DateTime endDate)", "class_method_signature": "TradingSessionImpl.sessionMillis(DateTime startDate, DateTime endDate)", "testcase": false, "constructor": false}, {"identifier": "sessionMillis", "parameters": "(int startDay, LocalTime startTime, int endDay, LocalTime endTime)", "modifiers": "public static", "return": "long", "signature": "long sessionMillis(int startDay, LocalTime startTime, int endDay, LocalTime endTime)", "full_signature": "public static long sessionMillis(int startDay, LocalTime startTime, int endDay, LocalTime endTime)", "class_method_signature": "TradingSessionImpl.sessionMillis(int startDay, LocalTime startTime, int endDay, LocalTime endTime)", "testcase": false, "constructor": false}, {"identifier": "dayToString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String dayToString()", "full_signature": "@Override public String dayToString()", "class_method_signature": "TradingSessionImpl.dayToString()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(DateTime date)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(DateTime date)", "full_signature": "@Override public boolean contains(DateTime date)", "class_method_signature": "TradingSessionImpl.contains(DateTime date)", "testcase": false, "constructor": false}, {"identifier": "dayIsWithinSessionDay", "parameters": "(int otherDay)", "modifiers": "private", "return": "boolean", "signature": "boolean dayIsWithinSessionDay(int otherDay)", "full_signature": "private boolean dayIsWithinSessionDay(int otherDay)", "class_method_signature": "TradingSessionImpl.dayIsWithinSessionDay(int otherDay)", "testcase": false, "constructor": false}, {"identifier": "dayIsBetweenStartEndDays", "parameters": "(int otherDay)", "modifiers": "private", "return": "boolean", "signature": "boolean dayIsBetweenStartEndDays(int otherDay)", "full_signature": "private boolean dayIsBetweenStartEndDays(int otherDay)", "class_method_signature": "TradingSessionImpl.dayIsBetweenStartEndDays(int otherDay)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(TradingSession other)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(TradingSession other)", "full_signature": "@Override public int compareTo(TradingSession other)", "class_method_signature": "TradingSessionImpl.compareTo(TradingSession other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TradingSessionImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TradingSessionImpl.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TradingSessionImpl.toString()", "testcase": false, "constructor": false}], "file": "series/src/main/java/com/barchart/feed/series/TradingSessionImpl.java"}, "focal_method": {"identifier": "sessionMillis", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n\tpublic long sessionMillis() {\n        return SESSION_MILLIS;\n    }", "signature": "long sessionMillis()", "full_signature": "@Override public long sessionMillis()", "class_method_signature": "TradingSessionImpl.sessionMillis()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}