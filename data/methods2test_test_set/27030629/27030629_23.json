{"test_class": {"identifier": "UserCacheImplTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private static final int FAKE_USER_ID = 123;", "modifier": "private static final", "type": "int", "declarator": "FAKE_USER_ID = 123", "var_name": "FAKE_USER_ID"}, {"original_string": "@InjectMocks\n    private UserCacheImpl userCache;", "modifier": "@InjectMocks\n    private", "type": "UserCacheImpl", "declarator": "userCache", "var_name": "userCache"}, {"original_string": "@Mock\n    private JsonSerializer mockJsonSerializer;", "modifier": "@Mock\n    private", "type": "JsonSerializer", "declarator": "mockJsonSerializer", "var_name": "mockJsonSerializer"}, {"original_string": "@Mock\n    private FileManager mockFileManager;", "modifier": "@Mock\n    private", "type": "FileManager", "declarator": "mockFileManager", "var_name": "mockFileManager"}, {"original_string": "@Mock\n    File cacheDir;", "modifier": "@Mock", "type": "File", "declarator": "cacheDir", "var_name": "cacheDir"}, {"original_string": "@Mock\n    private UserCache.UserCacheCallback mockUserCacheCallback;", "modifier": "@Mock\n    private", "type": "UserCache.UserCacheCallback", "declarator": "mockUserCacheCallback", "var_name": "mockUserCacheCallback"}, {"original_string": "@Mock\n    private UserEntity mockUserEntity;", "modifier": "@Mock\n    private", "type": "UserEntity", "declarator": "mockUserEntity", "var_name": "mockUserEntity"}], "file": "Data/src/test/java/com/example/data/cache/UserCacheImplTest.java"}, "test_case": {"identifier": "testGetFromCacheHappyCase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFromCacheHappyCase() {\n        given(mockJsonSerializer.deserialize(anyString())).willReturn(mockUserEntity);\n\n        userCache.get(FAKE_USER_ID, mockUserCacheCallback);\n\n        verify(mockFileManager).readFileContent(any(File.class));\n        verify(mockJsonSerializer).deserialize(anyString());\n        verify(mockUserCacheCallback).onUserEntityLoaded(mockUserEntity);\n    }", "signature": "void testGetFromCacheHappyCase()", "full_signature": "@Test public void testGetFromCacheHappyCase()", "class_method_signature": "UserCacheImplTest.testGetFromCacheHappyCase()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "deserialize", "anyString", "get", "readFileContent", "verify", "any", "deserialize", "verify", "anyString", "onUserEntityLoaded", "verify"]}, "focal_class": {"identifier": "UserCacheImpl", "superclass": "", "interfaces": "implements UserCache", "fields": [{"original_string": "private static final String SETTINGS_FILE_NAME = \"com.fernandocejas.android10.SETTINGS\";", "modifier": "private static final", "type": "String", "declarator": "SETTINGS_FILE_NAME = \"com.fernandocejas.android10.SETTINGS\"", "var_name": "SETTINGS_FILE_NAME"}, {"original_string": "private static final String SETTINGS_KEY_LAST_CACHE_UPDATE = \"last_cache_update\";", "modifier": "private static final", "type": "String", "declarator": "SETTINGS_KEY_LAST_CACHE_UPDATE = \"last_cache_update\"", "var_name": "SETTINGS_KEY_LAST_CACHE_UPDATE"}, {"original_string": "private static final String DEFAULT_FILE_NAME = \"user_\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FILE_NAME = \"user_\"", "var_name": "DEFAULT_FILE_NAME"}, {"original_string": "private static final long EXPIRATION_TIME = 60 * 10 * 1000;", "modifier": "private static final", "type": "long", "declarator": "EXPIRATION_TIME = 60 * 10 * 1000", "var_name": "EXPIRATION_TIME"}, {"original_string": "@RootContext\n    protected Context context;", "modifier": "@RootContext\n    protected", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "protected File cacheDir;", "modifier": "protected", "type": "File", "declarator": "cacheDir", "var_name": "cacheDir"}, {"original_string": "@Bean\n    protected JsonSerializer serializer;", "modifier": "@Bean\n    protected", "type": "JsonSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "@Bean\n    protected FileManager fileManager;", "modifier": "@Bean\n    protected", "type": "FileManager", "declarator": "fileManager", "var_name": "fileManager"}], "methods": [{"identifier": "initCacheDir", "parameters": "()", "modifiers": "@AfterInject", "return": "void", "signature": "void initCacheDir()", "full_signature": "@AfterInject void initCacheDir()", "class_method_signature": "UserCacheImpl.initCacheDir()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int userId, UserCacheCallback callback)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void get(int userId, UserCacheCallback callback)", "full_signature": "@Override public synchronized void get(int userId, UserCacheCallback callback)", "class_method_signature": "UserCacheImpl.get(int userId, UserCacheCallback callback)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(UserEntity userEntity)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void put(UserEntity userEntity)", "full_signature": "@Override public synchronized void put(UserEntity userEntity)", "class_method_signature": "UserCacheImpl.put(UserEntity userEntity)", "testcase": false, "constructor": false}, {"identifier": "isCached", "parameters": "(int userId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCached(int userId)", "full_signature": "@Override public boolean isCached(int userId)", "class_method_signature": "UserCacheImpl.isCached(int userId)", "testcase": false, "constructor": false}, {"identifier": "isExpired", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExpired()", "full_signature": "@Override public boolean isExpired()", "class_method_signature": "UserCacheImpl.isExpired()", "testcase": false, "constructor": false}, {"identifier": "evictAll", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void evictAll()", "full_signature": "@Override public synchronized void evictAll()", "class_method_signature": "UserCacheImpl.evictAll()", "testcase": false, "constructor": false}, {"identifier": "buildFile", "parameters": "(int userId)", "modifiers": "private", "return": "File", "signature": "File buildFile(int userId)", "full_signature": "private File buildFile(int userId)", "class_method_signature": "UserCacheImpl.buildFile(int userId)", "testcase": false, "constructor": false}, {"identifier": "setLastCacheUpdateTimeMillis", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setLastCacheUpdateTimeMillis()", "full_signature": "private void setLastCacheUpdateTimeMillis()", "class_method_signature": "UserCacheImpl.setLastCacheUpdateTimeMillis()", "testcase": false, "constructor": false}, {"identifier": "getLastCacheUpdateTimeMillis", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getLastCacheUpdateTimeMillis()", "full_signature": "private long getLastCacheUpdateTimeMillis()", "class_method_signature": "UserCacheImpl.getLastCacheUpdateTimeMillis()", "testcase": false, "constructor": false}], "file": "Data/src/main/java/com/example/data/cache/UserCacheImpl.java"}, "focal_method": {"identifier": "get", "parameters": "(int userId, UserCacheCallback callback)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void get(int userId, UserCacheCallback callback) {\n        File userEntitiyFile = this.buildFile(userId);\n        String fileContent = this.fileManager.readFileContent(userEntitiyFile);\n        UserEntity userEntity = this.serializer.deserialize(fileContent);\n\n        if (userEntity != null) {\n            callback.onUserEntityLoaded(userEntity);\n        } else {\n            callback.onError(new UserNotFoundException());\n        }\n    }", "signature": "void get(int userId, UserCacheCallback callback)", "full_signature": "@Override public synchronized void get(int userId, UserCacheCallback callback)", "class_method_signature": "UserCacheImpl.get(int userId, UserCacheCallback callback)", "testcase": false, "constructor": false, "invocations": ["buildFile", "readFileContent", "deserialize", "onUserEntityLoaded", "onError"]}, "repository": {"repo_id": 27030629, "url": "https://github.com/nenick/AndroidAppDevelopment", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 6155, "license": "licensed"}}