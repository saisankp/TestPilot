{"test_class": {"identifier": "ClusterSourcedExceptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "spark-job/src/test/java/org/apache/cassandra/diff/ClusterSourcedExceptionTest.java"}, "test_case": {"identifier": "testCatchesExceptionHasExceptionSourceInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCatchesExceptionHasExceptionSourceInfo() {\n        expectedException.expect(ClusterSourcedException.class);\n        expectedException.expectCause(CoreMatchers.isA(RuntimeException.class));\n        expectedException.expectMessage(\"from SOURCE\");\n        expectedException.expect(new CustomMatcher<ClusterSourcedException>(\"matches the expected exceptionSource: SOURCE\") {\n            @Override\n            public boolean matches(Object item) {\n                if (item instanceof ClusterSourcedException) {\n                    ClusterSourcedException ex = (ClusterSourcedException) item;\n                    return ex.exceptionSource == DiffCluster.Type.SOURCE;\n                }\n                return false;\n            }\n        });\n        ClusterSourcedException.catches(DiffCluster.Type.SOURCE, () -> {\n            throw new RuntimeException();\n        });\n    }", "signature": "void testCatchesExceptionHasExceptionSourceInfo()", "full_signature": "@Test public void testCatchesExceptionHasExceptionSourceInfo()", "class_method_signature": "ClusterSourcedExceptionTest.testCatchesExceptionHasExceptionSourceInfo()", "testcase": true, "constructor": false, "invocations": ["expect", "expectCause", "isA", "expectMessage", "expect", "catches"]}, "focal_class": {"identifier": "ClusterSourcedException", "superclass": "extends RuntimeException", "interfaces": "", "fields": [{"original_string": "public final Type exceptionSource;", "modifier": "public final", "type": "Type", "declarator": "exceptionSource", "var_name": "exceptionSource"}], "methods": [{"identifier": "ClusterSourcedException", "parameters": "(Type exceptionSource, Throwable cause)", "modifiers": "", "return": "", "signature": " ClusterSourcedException(Type exceptionSource, Throwable cause)", "full_signature": "  ClusterSourcedException(Type exceptionSource, Throwable cause)", "class_method_signature": "ClusterSourcedException.ClusterSourcedException(Type exceptionSource, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "catches", "parameters": "(Type exceptionSource, Callable<T> callable)", "modifiers": "public static", "return": "T", "signature": "T catches(Type exceptionSource, Callable<T> callable)", "full_signature": "public static T catches(Type exceptionSource, Callable<T> callable)", "class_method_signature": "ClusterSourcedException.catches(Type exceptionSource, Callable<T> callable)", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMessage()", "full_signature": "@Override public String getMessage()", "class_method_signature": "ClusterSourcedException.getMessage()", "testcase": false, "constructor": false}], "file": "spark-job/src/main/java/org/apache/cassandra/diff/ClusterSourcedException.java"}, "focal_method": {"identifier": "catches", "parameters": "(Type exceptionSource, Callable<T> callable)", "modifiers": "public static", "return": "T", "body": "public static <T> T catches(Type exceptionSource, Callable<T> callable) {\n        try {\n            return callable.call();\n        } catch (Exception ex) {\n            throw new ClusterSourcedException(exceptionSource, ex);\n        }\n    }", "signature": "T catches(Type exceptionSource, Callable<T> callable)", "full_signature": "public static T catches(Type exceptionSource, Callable<T> callable)", "class_method_signature": "ClusterSourcedException.catches(Type exceptionSource, Callable<T> callable)", "testcase": false, "constructor": false, "invocations": ["call"]}, "repository": {"repo_id": 204657216, "url": "https://github.com/apache/cassandra-diff", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 112, "license": "licensed"}}