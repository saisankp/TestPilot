{"test_class": {"identifier": "InfluxDbReporterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private InfluxDbSender influxDb;", "modifier": "@Mock\n    private", "type": "InfluxDbSender", "declarator": "influxDb", "var_name": "influxDb"}, {"original_string": "@Mock\n    private InfluxDbWriteObject writeObject;", "modifier": "@Mock\n    private", "type": "InfluxDbWriteObject", "declarator": "writeObject", "var_name": "writeObject"}, {"original_string": "@Mock\n    private MetricRegistry registry;", "modifier": "@Mock\n    private", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private InfluxDbReporter reporter;", "modifier": "private", "type": "InfluxDbReporter", "declarator": "reporter", "var_name": "reporter"}, {"original_string": "private Map<String, String> globalTags;", "modifier": "private", "type": "Map<String, String>", "declarator": "globalTags", "var_name": "globalTags"}], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/InfluxDbReporterTest.java"}, "test_case": {"identifier": "shouldCatchExceptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCatchExceptions() throws Exception {\n        doThrow(ConnectException.class).when(influxDb).writeData();\n        reporter.report(map(\"gauge\", gauge((byte) 1)), this.map(), this.map(), this.map(), this.map());\n        doThrow(IOException.class).when(influxDb).writeData();\n        reporter.report(map(\"gauge\", gauge((byte) 1)), this.map(), this.map(), this.map(), this.map());\n        doThrow(RuntimeException.class).when(influxDb).flush();\n        reporter.report(map(\"gauge\", gauge((byte) 1)), this.map(), this.map(), this.map(), this.map());\n    }", "signature": "void shouldCatchExceptions()", "full_signature": "@Test public void shouldCatchExceptions()", "class_method_signature": "InfluxDbReporterTest.shouldCatchExceptions()", "testcase": true, "constructor": false, "invocations": ["writeData", "when", "doThrow", "report", "map", "gauge", "map", "map", "map", "map", "writeData", "when", "doThrow", "report", "map", "gauge", "map", "map", "map", "map", "flush", "when", "doThrow", "report", "map", "gauge", "map", "map", "map", "map"]}, "focal_class": {"identifier": "InfluxDbReporter", "superclass": "extends ScheduledReporter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(InfluxDbReporter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(InfluxDbReporter.class)", "var_name": "LOGGER"}, {"original_string": "private final InfluxDbSender influxDb;", "modifier": "private final", "type": "InfluxDbSender", "declarator": "influxDb", "var_name": "influxDb"}, {"original_string": "private final boolean skipIdleMetrics;", "modifier": "private final", "type": "boolean", "declarator": "skipIdleMetrics", "var_name": "skipIdleMetrics"}, {"original_string": "private final Map<String, Long> previousValues;", "modifier": "private final", "type": "Map<String, Long>", "declarator": "previousValues", "var_name": "previousValues"}, {"original_string": "private final boolean groupGauges;", "modifier": "private final", "type": "boolean", "declarator": "groupGauges", "var_name": "groupGauges"}, {"original_string": "private final Set<String> includeTimerFields;", "modifier": "private final", "type": "Set<String>", "declarator": "includeTimerFields", "var_name": "includeTimerFields"}, {"original_string": "private final Set<String> includeMeterFields;", "modifier": "private final", "type": "Set<String>", "declarator": "includeMeterFields", "var_name": "includeMeterFields"}, {"original_string": "private final Map<String, Pattern> measurementMappings;", "modifier": "private final", "type": "Map<String, Pattern>", "declarator": "measurementMappings", "var_name": "measurementMappings"}, {"original_string": "private final Transformer tagsTransformer;", "modifier": "private final", "type": "Transformer", "declarator": "tagsTransformer", "var_name": "tagsTransformer"}], "methods": [{"identifier": "InfluxDbReporter", "parameters": "(\n        final MetricRegistry registry,\n        final InfluxDbSender influxDb,\n        final Map<String, String> tags,\n        final TimeUnit rateUnit,\n        final TimeUnit durationUnit,\n        final MetricFilter filter,\n        final boolean skipIdleMetrics,\n        final boolean groupGauges,\n        final Set<String> includeTimerFields,\n        final Set<String> includeMeterFields,\n        final Map<String, Pattern> measurementMappings,\n        final Transformer tagsTransformer\n    )", "modifiers": "private", "return": "", "signature": " InfluxDbReporter(\n        final MetricRegistry registry,\n        final InfluxDbSender influxDb,\n        final Map<String, String> tags,\n        final TimeUnit rateUnit,\n        final TimeUnit durationUnit,\n        final MetricFilter filter,\n        final boolean skipIdleMetrics,\n        final boolean groupGauges,\n        final Set<String> includeTimerFields,\n        final Set<String> includeMeterFields,\n        final Map<String, Pattern> measurementMappings,\n        final Transformer tagsTransformer\n    )", "full_signature": "private  InfluxDbReporter(\n        final MetricRegistry registry,\n        final InfluxDbSender influxDb,\n        final Map<String, String> tags,\n        final TimeUnit rateUnit,\n        final TimeUnit durationUnit,\n        final MetricFilter filter,\n        final boolean skipIdleMetrics,\n        final boolean groupGauges,\n        final Set<String> includeTimerFields,\n        final Set<String> includeMeterFields,\n        final Map<String, Pattern> measurementMappings,\n        final Transformer tagsTransformer\n    )", "class_method_signature": "InfluxDbReporter.InfluxDbReporter(\n        final MetricRegistry registry,\n        final InfluxDbSender influxDb,\n        final Map<String, String> tags,\n        final TimeUnit rateUnit,\n        final TimeUnit durationUnit,\n        final MetricFilter filter,\n        final boolean skipIdleMetrics,\n        final boolean groupGauges,\n        final Set<String> includeTimerFields,\n        final Set<String> includeMeterFields,\n        final Map<String, Pattern> measurementMappings,\n        final Transformer tagsTransformer\n    )", "testcase": false, "constructor": true}, {"identifier": "forRegistry", "parameters": "(MetricRegistry registry)", "modifiers": "public static", "return": "Builder", "signature": "Builder forRegistry(MetricRegistry registry)", "full_signature": "public static Builder forRegistry(MetricRegistry registry)", "class_method_signature": "InfluxDbReporter.forRegistry(MetricRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "report", "parameters": "(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "modifiers": "@Override public", "return": "void", "signature": "void report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "full_signature": "@Override public void report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "class_method_signature": "InfluxDbReporter.report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "testcase": false, "constructor": false}, {"identifier": "reportGauges", "parameters": "(SortedMap<String, Gauge> gauges, long now)", "modifiers": "private", "return": "void", "signature": "void reportGauges(SortedMap<String, Gauge> gauges, long now)", "full_signature": "private void reportGauges(SortedMap<String, Gauge> gauges, long now)", "class_method_signature": "InfluxDbReporter.reportGauges(SortedMap<String, Gauge> gauges, long now)", "testcase": false, "constructor": false}, {"identifier": "groupGauges", "parameters": "(SortedMap<String, Gauge> gauges)", "modifiers": "private", "return": "Map<String, Map<String, Gauge>>", "signature": "Map<String, Map<String, Gauge>> groupGauges(SortedMap<String, Gauge> gauges)", "full_signature": "private Map<String, Map<String, Gauge>> groupGauges(SortedMap<String, Gauge> gauges)", "class_method_signature": "InfluxDbReporter.groupGauges(SortedMap<String, Gauge> gauges)", "testcase": false, "constructor": false}, {"identifier": "reportGaugeGroup", "parameters": "(String name, Map<String, Gauge> gaugeGroup, long now)", "modifiers": "private", "return": "void", "signature": "void reportGaugeGroup(String name, Map<String, Gauge> gaugeGroup, long now)", "full_signature": "private void reportGaugeGroup(String name, Map<String, Gauge> gaugeGroup, long now)", "class_method_signature": "InfluxDbReporter.reportGaugeGroup(String name, Map<String, Gauge> gaugeGroup, long now)", "testcase": false, "constructor": false}, {"identifier": "sanitizeGauge", "parameters": "(Object value)", "modifiers": "private", "return": "Object", "signature": "Object sanitizeGauge(Object value)", "full_signature": "private Object sanitizeGauge(Object value)", "class_method_signature": "InfluxDbReporter.sanitizeGauge(Object value)", "testcase": false, "constructor": false}, {"identifier": "reportTimer", "parameters": "(String name, Timer timer, long now)", "modifiers": "private", "return": "void", "signature": "void reportTimer(String name, Timer timer, long now)", "full_signature": "private void reportTimer(String name, Timer timer, long now)", "class_method_signature": "InfluxDbReporter.reportTimer(String name, Timer timer, long now)", "testcase": false, "constructor": false}, {"identifier": "reportHistogram", "parameters": "(String name, Histogram histogram, long now)", "modifiers": "private", "return": "void", "signature": "void reportHistogram(String name, Histogram histogram, long now)", "full_signature": "private void reportHistogram(String name, Histogram histogram, long now)", "class_method_signature": "InfluxDbReporter.reportHistogram(String name, Histogram histogram, long now)", "testcase": false, "constructor": false}, {"identifier": "reportCounter", "parameters": "(String name, Counter counter, long now)", "modifiers": "private", "return": "void", "signature": "void reportCounter(String name, Counter counter, long now)", "full_signature": "private void reportCounter(String name, Counter counter, long now)", "class_method_signature": "InfluxDbReporter.reportCounter(String name, Counter counter, long now)", "testcase": false, "constructor": false}, {"identifier": "reportGauge", "parameters": "(String name, Gauge<?> gauge, long now)", "modifiers": "private", "return": "void", "signature": "void reportGauge(String name, Gauge<?> gauge, long now)", "full_signature": "private void reportGauge(String name, Gauge<?> gauge, long now)", "class_method_signature": "InfluxDbReporter.reportGauge(String name, Gauge<?> gauge, long now)", "testcase": false, "constructor": false}, {"identifier": "reportMeter", "parameters": "(String name, Metered meter, long now)", "modifiers": "private", "return": "void", "signature": "void reportMeter(String name, Metered meter, long now)", "full_signature": "private void reportMeter(String name, Metered meter, long now)", "class_method_signature": "InfluxDbReporter.reportMeter(String name, Metered meter, long now)", "testcase": false, "constructor": false}, {"identifier": "canSkipMetric", "parameters": "(String name, Counting counting)", "modifiers": "private", "return": "boolean", "signature": "boolean canSkipMetric(String name, Counting counting)", "full_signature": "private boolean canSkipMetric(String name, Counting counting)", "class_method_signature": "InfluxDbReporter.canSkipMetric(String name, Counting counting)", "testcase": false, "constructor": false}, {"identifier": "calculateDelta", "parameters": "(String name, long count)", "modifiers": "private", "return": "long", "signature": "long calculateDelta(String name, long count)", "full_signature": "private long calculateDelta(String name, long count)", "class_method_signature": "InfluxDbReporter.calculateDelta(String name, long count)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "(String name)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getTags(String name)", "full_signature": "private Map<String, String> getTags(String name)", "class_method_signature": "InfluxDbReporter.getTags(String name)", "testcase": false, "constructor": false}, {"identifier": "getMeasurementName", "parameters": "(final String name)", "modifiers": "private", "return": "String", "signature": "String getMeasurementName(final String name)", "full_signature": "private String getMeasurementName(final String name)", "class_method_signature": "InfluxDbReporter.getMeasurementName(final String name)", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/InfluxDbReporter.java"}, "focal_method": {"identifier": "report", "parameters": "(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers) {\n        final long now = System.currentTimeMillis();\n\n        try {\n            influxDb.flush();\n\n            reportGauges(gauges, now);\n\n            for (Map.Entry<String, Counter> entry : counters.entrySet()) {\n                reportCounter(entry.getKey(), entry.getValue(), now);\n            }\n\n            for (Map.Entry<String, Histogram> entry : histograms.entrySet()) {\n                reportHistogram(entry.getKey(), entry.getValue(), now);\n            }\n\n            for (Map.Entry<String, Meter> entry : meters.entrySet()) {\n                reportMeter(entry.getKey(), entry.getValue(), now);\n            }\n\n            for (Map.Entry<String, Timer> entry : timers.entrySet()) {\n                reportTimer(entry.getKey(), entry.getValue(), now);\n            }\n\n            if (influxDb.hasSeriesData()) {\n                influxDb.writeData();\n            }\n        } catch (ConnectException e) {\n            LOGGER.warn(\"Unable to connect to InfluxDB. Discarding data.\");\n        } catch (Exception e) {\n            LOGGER.warn(\"Unable to report to InfluxDB with error '{}'. Discarding data.\", e.getMessage());\n        }\n    }", "signature": "void report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "full_signature": "@Override public void report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "class_method_signature": "InfluxDbReporter.report(\n        final SortedMap<String, Gauge> gauges,\n        final SortedMap<String, Counter> counters,\n        final SortedMap<String, Histogram> histograms,\n        final SortedMap<String, Meter> meters,\n        final SortedMap<String, Timer> timers)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "flush", "reportGauges", "entrySet", "reportCounter", "getKey", "getValue", "entrySet", "reportHistogram", "getKey", "getValue", "entrySet", "reportMeter", "getKey", "getValue", "entrySet", "reportTimer", "getKey", "getValue", "hasSeriesData", "writeData", "warn", "warn", "getMessage"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}