{"test_class": {"identifier": "SubscriberResourceWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TestSubscriber<Integer> ts = new TestSubscriber<Integer>();", "modifier": "", "type": "TestSubscriber<Integer>", "declarator": "ts = new TestSubscriber<Integer>()", "var_name": "ts"}, {"original_string": "SubscriberResourceWrapper<Integer> s = new SubscriberResourceWrapper<Integer>(ts);", "modifier": "", "type": "SubscriberResourceWrapper<Integer>", "declarator": "s = new SubscriberResourceWrapper<Integer>(ts)", "var_name": "s"}], "file": "rxjava/src/test/java/io/reactivex/internal/subscribers/SubscriberResourceWrapperTest.java"}, "test_case": {"identifier": "cancel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cancel() {\n        BooleanSubscription bs = new BooleanSubscription();\n        Disposable d = Disposables.empty();\n\n        s.setResource(d);\n\n        s.onSubscribe(bs);\n\n        assertFalse(d.isDisposed());\n        assertFalse(s.isDisposed());\n\n        ts.cancel();\n\n        assertTrue(bs.isCancelled());\n        assertTrue(d.isDisposed());\n        assertTrue(s.isDisposed());\n    }", "signature": "void cancel()", "full_signature": "@Test public void cancel()", "class_method_signature": "SubscriberResourceWrapperTest.cancel()", "testcase": true, "constructor": false, "invocations": ["empty", "setResource", "onSubscribe", "assertFalse", "isDisposed", "assertFalse", "isDisposed", "cancel", "assertTrue", "isCancelled", "assertTrue", "isDisposed", "assertTrue", "isDisposed"]}, "focal_class": {"identifier": "SubscriberResourceWrapper", "superclass": "extends AtomicReference<Disposable>", "interfaces": "implements FlowableSubscriber<T>, Disposable, Subscription", "fields": [{"original_string": "private static final long serialVersionUID = -8612022020200669122L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8612022020200669122L", "var_name": "serialVersionUID"}, {"original_string": "final Subscriber<? super T> actual;", "modifier": "final", "type": "Subscriber<? super T>", "declarator": "actual", "var_name": "actual"}, {"original_string": "final AtomicReference<Subscription> subscription = new AtomicReference<Subscription>();", "modifier": "final", "type": "AtomicReference<Subscription>", "declarator": "subscription = new AtomicReference<Subscription>()", "var_name": "subscription"}], "methods": [{"identifier": "SubscriberResourceWrapper", "parameters": "(Subscriber<? super T> actual)", "modifiers": "public", "return": "", "signature": " SubscriberResourceWrapper(Subscriber<? super T> actual)", "full_signature": "public  SubscriberResourceWrapper(Subscriber<? super T> actual)", "class_method_signature": "SubscriberResourceWrapper.SubscriberResourceWrapper(Subscriber<? super T> actual)", "testcase": false, "constructor": true}, {"identifier": "onSubscribe", "parameters": "(Subscription s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Subscription s)", "full_signature": "@Override public void onSubscribe(Subscription s)", "class_method_signature": "SubscriberResourceWrapper.onSubscribe(Subscription s)", "testcase": false, "constructor": false}, {"identifier": "onNext", "parameters": "(T t)", "modifiers": "@Override public", "return": "void", "signature": "void onNext(T t)", "full_signature": "@Override public void onNext(T t)", "class_method_signature": "SubscriberResourceWrapper.onNext(T t)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "SubscriberResourceWrapper.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "SubscriberResourceWrapper.onComplete()", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "(long n)", "modifiers": "@Override public", "return": "void", "signature": "void request(long n)", "full_signature": "@Override public void request(long n)", "class_method_signature": "SubscriberResourceWrapper.request(long n)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "SubscriberResourceWrapper.dispose()", "testcase": false, "constructor": false}, {"identifier": "isDisposed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisposed()", "full_signature": "@Override public boolean isDisposed()", "class_method_signature": "SubscriberResourceWrapper.isDisposed()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "SubscriberResourceWrapper.cancel()", "testcase": false, "constructor": false}, {"identifier": "setResource", "parameters": "(Disposable resource)", "modifiers": "public", "return": "void", "signature": "void setResource(Disposable resource)", "full_signature": "public void setResource(Disposable resource)", "class_method_signature": "SubscriberResourceWrapper.setResource(Disposable resource)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/subscribers/SubscriberResourceWrapper.java"}, "focal_method": {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void cancel() {\n        dispose();\n    }", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "SubscriberResourceWrapper.cancel()", "testcase": false, "constructor": false, "invocations": ["dispose"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}