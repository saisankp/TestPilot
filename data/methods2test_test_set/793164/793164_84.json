{"test_class": {"identifier": "UriTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UriTransformer transformer;", "modifier": "private", "type": "UriTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private StringBuilder veryLongUriString;", "modifier": "private", "type": "StringBuilder", "declarator": "veryLongUriString", "var_name": "veryLongUriString"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/transform/ebxml/UriTransformerTest.java"}, "test_case": {"identifier": "testFromEbXMLWithSimpleUri", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFromEbXMLWithSimpleUri() {\n        String uri = \"http://localhost:8080\";        \n        assertEquals(uri, transformer.fromEbXML(Collections.singletonList(uri)));\n    }", "signature": "void testFromEbXMLWithSimpleUri()", "full_signature": "@Test public void testFromEbXMLWithSimpleUri()", "class_method_signature": "UriTransformerTest.testFromEbXMLWithSimpleUri()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "fromEbXML", "singletonList"]}, "focal_class": {"identifier": "UriTransformer", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "fromEbXML", "parameters": "(List<String> slotValues)", "modifiers": "public", "return": "String", "signature": "String fromEbXML(List<String> slotValues)", "full_signature": "public String fromEbXML(List<String> slotValues)", "class_method_signature": "UriTransformer.fromEbXML(List<String> slotValues)", "testcase": false, "constructor": false}, {"identifier": "toEbXML", "parameters": "(String uri)", "modifiers": "public", "return": "String[]", "signature": "String[] toEbXML(String uri)", "full_signature": "public String[] toEbXML(String uri)", "class_method_signature": "UriTransformer.toEbXML(String uri)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/ebxml/UriTransformer.java"}, "focal_method": {"identifier": "fromEbXML", "parameters": "(List<String> slotValues)", "modifiers": "public", "return": "String", "body": "public String fromEbXML(List<String> slotValues) {\n        if (slotValues.size() == 1) {\n            String slotValue = slotValues.get(0);\n            if (slotValue.indexOf('|') == -1) {\n                return slotValue;\n            }\n        }\n        \n        String[] uriParts = new String[10];\n        for (String slotValue : slotValues) {\n            int separatorIdx = slotValue.indexOf('|');\n            if (separatorIdx > 0) {\n                int uriIdx = Integer.parseInt(slotValue.substring(0, separatorIdx));\n                if (uriIdx < 10) {\n                    uriParts[uriIdx] = slotValue.substring(separatorIdx + 1);\n                }\n            }\n        }\n        \n        StringBuilder builder = new StringBuilder();\n        for (String uriPart : uriParts) {\n            if (uriPart != null) {\n                builder.append(uriPart);\n            }\n        }\n        \n        String uri = builder.toString();\n        return uri.isEmpty() ? null : uri;\n    }", "signature": "String fromEbXML(List<String> slotValues)", "full_signature": "public String fromEbXML(List<String> slotValues)", "class_method_signature": "UriTransformer.fromEbXML(List<String> slotValues)", "testcase": false, "constructor": false, "invocations": ["size", "get", "indexOf", "indexOf", "parseInt", "substring", "substring", "append", "toString", "isEmpty"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}