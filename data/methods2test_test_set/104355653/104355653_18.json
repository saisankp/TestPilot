{"test_class": {"identifier": "WaterControllerTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "service/settlement-service/src/test/java/com/meiduimall/service/settlement/api/WaterControllerTest.java"}, "test_case": {"identifier": "testGetRecMoney", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetRecMoney() throws Exception {\n\t\tResultActions results = mockMvc\n\t\t\t\t.perform(MockMvcRequestBuilders.post(\"/settlementservice/revenueservice/v1/getrecmoney\")\n\t\t\t\t\t\t.param(\"code\", \"440511\").param(\"recNo\", \"QTG440511161209001\"));\n\t\tresults.andDo(new ResultHandler(){\n\t\t\t@Override\n\t\t\tpublic void handle(MvcResult result) throws Exception {\n\t\t\t\tSystem.out.println(\"*********\"+result.getResponse().getContentAsString());\n\t\t\t}\n\t\t});\n\t}", "signature": "void testGetRecMoney()", "full_signature": "@Test public void testGetRecMoney()", "class_method_signature": "WaterControllerTest.testGetRecMoney()", "testcase": true, "constructor": false, "invocations": ["perform", "param", "param", "post", "andDo", "println", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "WaterController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(WaterController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(WaterController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate AgentService agentService;", "modifier": "@Autowired\n\tprivate", "type": "AgentService", "declarator": "agentService", "var_name": "agentService"}, {"original_string": "@Autowired\n\tprivate WaterService waterService;", "modifier": "@Autowired\n\tprivate", "type": "WaterService", "declarator": "waterService", "var_name": "waterService"}, {"original_string": "@Autowired\n\tprivate OrderService orderService;", "modifier": "@Autowired\n\tprivate", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}], "methods": [{"identifier": "queryWater", "parameters": "(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "modifiers": "@PostMapping(\"/querywater\") public", "return": "ResBodyData", "signature": "ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "full_signature": "@PostMapping(\"/querywater\") public ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "class_method_signature": "WaterController.queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "testcase": false, "constructor": false}, {"identifier": "queryWaterById", "parameters": "(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "modifiers": "@PostMapping(\"/querywaterbyid\") public", "return": "ResBodyData", "signature": "ResBodyData queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "full_signature": "@PostMapping(\"/querywaterbyid\") public ResBodyData queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "class_method_signature": "WaterController.queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "testcase": false, "constructor": false}, {"identifier": "getRecMoney", "parameters": "(@RequestParam Map<String, Object> params)", "modifiers": "@PostMapping(\"/getrecmoney\") public", "return": "ResBodyData", "signature": "ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "full_signature": "@PostMapping(\"/getrecmoney\") public ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "class_method_signature": "WaterController.getRecMoney(@RequestParam Map<String, Object> params)", "testcase": false, "constructor": false}], "file": "service/settlement-service/src/main/java/com/meiduimall/service/settlement/api/WaterController.java"}, "focal_method": {"identifier": "getRecMoney", "parameters": "(@RequestParam Map<String, Object> params)", "modifiers": "@PostMapping(\"/getrecmoney\") public", "return": "ResBodyData", "body": "@PostMapping(\"/getrecmoney\")\n\tpublic ResBodyData getRecMoney(@RequestParam Map<String, Object> params){\n\t\tString money = agentService.getRecommenderMoney(params);\n\t\treturn SettlementUtil.success(money);\n\t}", "signature": "ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "full_signature": "@PostMapping(\"/getrecmoney\") public ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "class_method_signature": "WaterController.getRecMoney(@RequestParam Map<String, Object> params)", "testcase": false, "constructor": false, "invocations": ["getRecommenderMoney", "success"]}, "repository": {"repo_id": 104355653, "url": "https://github.com/chenjy16/mall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 403, "license": "licensed"}}