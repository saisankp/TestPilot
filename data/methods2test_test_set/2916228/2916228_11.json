{"test_class": {"identifier": "ReferenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "propoid-db/src/test/java/propoid/db/ReferenceTest.java"}, "test_case": {"identifier": "testFromString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFromString() throws Exception {\n\t\tReference<Propoid> reference = Reference.from(\"propoid://propoid.db.operation/Foo/1\");\n\n\t\tassertEquals(Foo.class, reference.type);\n\t\tassertEquals(1l, reference.id);\n\t}", "signature": "void testFromString()", "full_signature": "@Test public void testFromString()", "class_method_signature": "ReferenceTest.testFromString()", "testcase": true, "constructor": false, "invocations": ["from", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "Reference", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ARGUMENT_KEY = \"propoid:reference\";", "modifier": "private static final", "type": "String", "declarator": "ARGUMENT_KEY = \"propoid:reference\"", "var_name": "ARGUMENT_KEY"}, {"original_string": "public final Class<? extends P> type;", "modifier": "public final", "type": "Class<? extends P>", "declarator": "type", "var_name": "type"}, {"original_string": "public final long id;", "modifier": "public final", "type": "long", "declarator": "id", "var_name": "id"}], "methods": [{"identifier": "Reference", "parameters": "(P propoid)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " Reference(P propoid)", "full_signature": "@SuppressWarnings(\"unchecked\") public  Reference(P propoid)", "class_method_signature": "Reference.Reference(P propoid)", "testcase": false, "constructor": true}, {"identifier": "Reference", "parameters": "(Class<? extends P> type, long id)", "modifiers": "public", "return": "", "signature": " Reference(Class<? extends P> type, long id)", "full_signature": "public  Reference(Class<? extends P> type, long id)", "class_method_signature": "Reference.Reference(Class<? extends P> type, long id)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Reference.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Reference.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toUri", "parameters": "()", "modifiers": "public", "return": "Uri", "signature": "Uri toUri()", "full_signature": "public Uri toUri()", "class_method_signature": "Reference.toUri()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Reference.toString()", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(String string)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Reference<P>", "signature": "Reference<P> from(String string)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Reference<P> from(String string)", "class_method_signature": "Reference.from(String string)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Uri uri)", "modifiers": "public static", "return": "Reference<P>", "signature": "Reference<P> from(Uri uri)", "full_signature": "public static Reference<P> from(Uri uri)", "class_method_signature": "Reference.from(Uri uri)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Intent intent)", "modifiers": "public static", "return": "Reference<P>", "signature": "Reference<P> from(Intent intent)", "full_signature": "public static Reference<P> from(Intent intent)", "class_method_signature": "Reference.from(Intent intent)", "testcase": false, "constructor": false}, {"identifier": "to", "parameters": "(Intent intent)", "modifiers": "public", "return": "Intent", "signature": "Intent to(Intent intent)", "full_signature": "public Intent to(Intent intent)", "class_method_signature": "Reference.to(Intent intent)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Bundle arguments)", "modifiers": "public static", "return": "Reference<P>", "signature": "Reference<P> from(Bundle arguments)", "full_signature": "public static Reference<P> from(Bundle arguments)", "class_method_signature": "Reference.from(Bundle arguments)", "testcase": false, "constructor": false}, {"identifier": "to", "parameters": "(Bundle arguments)", "modifiers": "public", "return": "Bundle", "signature": "Bundle to(Bundle arguments)", "full_signature": "public Bundle to(Bundle arguments)", "class_method_signature": "Reference.to(Bundle arguments)", "testcase": false, "constructor": false}], "file": "propoid-db/src/main/java/propoid/db/Reference.java"}, "focal_method": {"identifier": "from", "parameters": "(String string)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Reference<P>", "body": "@SuppressWarnings(\"unchecked\")\n\tpublic static <P extends Propoid> Reference<P> from(String string) {\n\t\ttry {\n\t\t\tMatcher matcher = Pattern.compile(\"propoid://(.*)/(.*)/(.*)\").matcher(\n\t\t\t\t\tstring);\n\t\t\tif (matcher.matches()) {\n\t\t\t\tClass<P> type = (Class<P>) Class.forName(matcher.group(1) + \".\" +\n\t\t\t\t\t\t matcher.group(2));\n\t\t\t\tlong id = Long.parseLong(matcher.group(3));\n\n\t\t\t\treturn new Reference<P>(type, id);\n\t\t\t}\n\t\t} catch (Exception noReference) {\n\t\t}\n\t\treturn null;\n\t}", "signature": "Reference<P> from(String string)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Reference<P> from(String string)", "class_method_signature": "Reference.from(String string)", "testcase": false, "constructor": false, "invocations": ["matcher", "compile", "matches", "forName", "group", "group", "parseLong", "group"]}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}