{"test_class": {"identifier": "FilterContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/api/src/test/java/org/apache/tamaya/spi/FilterContextTest.java"}, "test_case": {"identifier": "getConfigEntries", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConfigEntries() throws Exception {\n        Map<String,PropertyValue> config = new HashMap<>();\n        for(int i=0;i<10;i++) {\n            config.put(\"key-\"+i, new PropertyValue( \"key-\"+i, \"value-\"+i));\n        }\n        PropertyValue val = new PropertyValue( \"getConfigEntries\", \"v\");\n        FilterContext ctx = new FilterContext(val, config, ConfigurationContext.EMPTY);\n        assertThat(ctx.getConfigEntries()).isEqualTo(config);\n        assertThat(config != ctx.getConfigEntries()).isTrue();\n    }", "signature": "void getConfigEntries()", "full_signature": "@Test public void getConfigEntries()", "class_method_signature": "FilterContextTest.getConfigEntries()", "testcase": true, "constructor": false, "invocations": ["put", "isEqualTo", "assertThat", "getConfigEntries", "isTrue", "assertThat", "getConfigEntries"]}, "focal_class": {"identifier": "FilterContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<PropertyValue> values;", "modifier": "private final", "type": "List<PropertyValue>", "declarator": "values", "var_name": "values"}, {"original_string": "private final ConfigurationContext configurationContext;", "modifier": "private final", "type": "ConfigurationContext", "declarator": "configurationContext", "var_name": "configurationContext"}, {"original_string": "@Experimental\n    private Map<String, PropertyValue> configEntries = new HashMap<>();", "modifier": "@Experimental\n    private", "type": "Map<String, PropertyValue>", "declarator": "configEntries = new HashMap<>()", "var_name": "configEntries"}, {"original_string": "@Experimental\n    private boolean singlePropertyScoped;", "modifier": "@Experimental\n    private", "type": "boolean", "declarator": "singlePropertyScoped", "var_name": "singlePropertyScoped"}], "methods": [{"identifier": "FilterContext", "parameters": "(PropertyValue value, Map<String,PropertyValue> configEntries, ConfigurationContext configurationContext)", "modifiers": "public", "return": "", "signature": " FilterContext(PropertyValue value, Map<String,PropertyValue> configEntries, ConfigurationContext configurationContext)", "full_signature": "public  FilterContext(PropertyValue value, Map<String,PropertyValue> configEntries, ConfigurationContext configurationContext)", "class_method_signature": "FilterContext.FilterContext(PropertyValue value, Map<String,PropertyValue> configEntries, ConfigurationContext configurationContext)", "testcase": false, "constructor": true}, {"identifier": "FilterContext", "parameters": "(PropertyValue value, ConfigurationContext configurationContext)", "modifiers": "public", "return": "", "signature": " FilterContext(PropertyValue value, ConfigurationContext configurationContext)", "full_signature": "public  FilterContext(PropertyValue value, ConfigurationContext configurationContext)", "class_method_signature": "FilterContext.FilterContext(PropertyValue value, ConfigurationContext configurationContext)", "testcase": false, "constructor": true}, {"identifier": "FilterContext", "parameters": "(List<PropertyValue> values, ConfigurationContext configurationContext)", "modifiers": "public", "return": "", "signature": " FilterContext(List<PropertyValue> values, ConfigurationContext configurationContext)", "full_signature": "public  FilterContext(List<PropertyValue> values, ConfigurationContext configurationContext)", "class_method_signature": "FilterContext.FilterContext(List<PropertyValue> values, ConfigurationContext configurationContext)", "testcase": false, "constructor": true}, {"identifier": "getConfigurationContext", "parameters": "()", "modifiers": "public", "return": "ConfigurationContext", "signature": "ConfigurationContext getConfigurationContext()", "full_signature": "public ConfigurationContext getConfigurationContext()", "class_method_signature": "FilterContext.getConfigurationContext()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "()", "modifiers": "public", "return": "PropertyValue", "signature": "PropertyValue getProperty()", "full_signature": "public PropertyValue getProperty()", "class_method_signature": "FilterContext.getProperty()", "testcase": false, "constructor": false}, {"identifier": "getAllValues", "parameters": "()", "modifiers": "public", "return": "List<PropertyValue>", "signature": "List<PropertyValue> getAllValues()", "full_signature": "public List<PropertyValue> getAllValues()", "class_method_signature": "FilterContext.getAllValues()", "testcase": false, "constructor": false}, {"identifier": "isSinglePropertyScoped", "parameters": "()", "modifiers": "@Experimental public", "return": "boolean", "signature": "boolean isSinglePropertyScoped()", "full_signature": "@Experimental public boolean isSinglePropertyScoped()", "class_method_signature": "FilterContext.isSinglePropertyScoped()", "testcase": false, "constructor": false}, {"identifier": "getConfigEntries", "parameters": "()", "modifiers": "@Experimental public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> getConfigEntries()", "full_signature": "@Experimental public Map<String, PropertyValue> getConfigEntries()", "class_method_signature": "FilterContext.getConfigEntries()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FilterContext.toString()", "testcase": false, "constructor": false}], "file": "code/api/src/main/java/org/apache/tamaya/spi/FilterContext.java"}, "focal_method": {"identifier": "getConfigEntries", "parameters": "()", "modifiers": "@Experimental public", "return": "Map<String, PropertyValue>", "body": "@Experimental\n    public Map<String, PropertyValue> getConfigEntries() {\n        return configEntries;\n    }", "signature": "Map<String, PropertyValue> getConfigEntries()", "full_signature": "@Experimental public Map<String, PropertyValue> getConfigEntries()", "class_method_signature": "FilterContext.getConfigEntries()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}