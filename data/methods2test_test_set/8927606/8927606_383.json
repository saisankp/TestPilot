{"test_class": {"identifier": "SchedulerHelperTest", "superclass": "extends SchedulerTestBase", "interfaces": "", "fields": [], "file": "core/src/test/java/nl/nn/adapterframework/scheduler/SchedulerHelperTest.java"}, "test_case": {"identifier": "testScheduleDuplicateJob", "parameters": "()", "modifiers": "@Test(expected = SchedulerException.class) public", "return": "void", "body": "@Test(expected = SchedulerException.class)\n\tpublic void testScheduleDuplicateJob() throws SchedulerException, ParseException {\n\t\tJobDetail jobDetail = createServiceJob(\"testJob\"+Math.random());\n\n\t\tschedulerHelper.scheduleJob(jobDetail, \"0 0 1 * * ?\");\n\t\tschedulerHelper.scheduleJob(jobDetail, 0);\n\t}", "signature": "void testScheduleDuplicateJob()", "full_signature": "@Test(expected = SchedulerException.class) public void testScheduleDuplicateJob()", "class_method_signature": "SchedulerHelperTest.testScheduleDuplicateJob()", "testcase": true, "constructor": false, "invocations": ["createServiceJob", "random", "scheduleJob", "scheduleJob"]}, "focal_class": {"identifier": "SchedulerHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_GROUP = Scheduler.DEFAULT_GROUP;", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_GROUP = Scheduler.DEFAULT_GROUP", "var_name": "DEFAULT_GROUP"}, {"original_string": "protected static Logger log = LogUtil.getLogger(SchedulerHelper.class);", "modifier": "protected static", "type": "Logger", "declarator": "log = LogUtil.getLogger(SchedulerHelper.class)", "var_name": "log"}, {"original_string": "private Scheduler scheduler;", "modifier": "private", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}], "methods": [{"identifier": "scheduleJob", "parameters": "(IbisManager ibisManager, JobDef jobdef)", "modifiers": "public", "return": "void", "signature": "void scheduleJob(IbisManager ibisManager, JobDef jobdef)", "full_signature": "public void scheduleJob(IbisManager ibisManager, JobDef jobdef)", "class_method_signature": "SchedulerHelper.scheduleJob(IbisManager ibisManager, JobDef jobdef)", "testcase": false, "constructor": false}, {"identifier": "scheduleJob", "parameters": "(JobDetail jobDetail, String cronExpression)", "modifiers": "public", "return": "void", "signature": "void scheduleJob(JobDetail jobDetail, String cronExpression)", "full_signature": "public void scheduleJob(JobDetail jobDetail, String cronExpression)", "class_method_signature": "SchedulerHelper.scheduleJob(JobDetail jobDetail, String cronExpression)", "testcase": false, "constructor": false}, {"identifier": "scheduleJob", "parameters": "(JobDetail jobDetail, long interval)", "modifiers": "public", "return": "void", "signature": "void scheduleJob(JobDetail jobDetail, long interval)", "full_signature": "public void scheduleJob(JobDetail jobDetail, long interval)", "class_method_signature": "SchedulerHelper.scheduleJob(JobDetail jobDetail, long interval)", "testcase": false, "constructor": false}, {"identifier": "scheduleJob", "parameters": "(JobDetail jobDetail, String cronExpression, long interval, boolean overwrite)", "modifiers": "public", "return": "void", "signature": "void scheduleJob(JobDetail jobDetail, String cronExpression, long interval, boolean overwrite)", "full_signature": "public void scheduleJob(JobDetail jobDetail, String cronExpression, long interval, boolean overwrite)", "class_method_signature": "SchedulerHelper.scheduleJob(JobDetail jobDetail, String cronExpression, long interval, boolean overwrite)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String name)", "full_signature": "public boolean contains(String name)", "class_method_signature": "SchedulerHelper.contains(String name)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String name, String group)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String name, String group)", "full_signature": "public boolean contains(String name, String group)", "class_method_signature": "SchedulerHelper.contains(String name, String group)", "testcase": false, "constructor": false}, {"identifier": "getTrigger", "parameters": "(String name)", "modifiers": "public", "return": "Trigger", "signature": "Trigger getTrigger(String name)", "full_signature": "public Trigger getTrigger(String name)", "class_method_signature": "SchedulerHelper.getTrigger(String name)", "testcase": false, "constructor": false}, {"identifier": "getTrigger", "parameters": "(String name, String group)", "modifiers": "public", "return": "Trigger", "signature": "Trigger getTrigger(String name, String group)", "full_signature": "public Trigger getTrigger(String name, String group)", "class_method_signature": "SchedulerHelper.getTrigger(String name, String group)", "testcase": false, "constructor": false}, {"identifier": "getJobDetail", "parameters": "(String jobName)", "modifiers": "public", "return": "JobDetail", "signature": "JobDetail getJobDetail(String jobName)", "full_signature": "public JobDetail getJobDetail(String jobName)", "class_method_signature": "SchedulerHelper.getJobDetail(String jobName)", "testcase": false, "constructor": false}, {"identifier": "getJobDetail", "parameters": "(String jobName, String jobGroup)", "modifiers": "public", "return": "JobDetail", "signature": "JobDetail getJobDetail(String jobName, String jobGroup)", "full_signature": "public JobDetail getJobDetail(String jobName, String jobGroup)", "class_method_signature": "SchedulerHelper.getJobDetail(String jobName, String jobGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteTrigger", "parameters": "(JobDef jobDef)", "modifiers": "public", "return": "void", "signature": "void deleteTrigger(JobDef jobDef)", "full_signature": "public void deleteTrigger(JobDef jobDef)", "class_method_signature": "SchedulerHelper.deleteTrigger(JobDef jobDef)", "testcase": false, "constructor": false}, {"identifier": "deleteTrigger", "parameters": "(String jobName)", "modifiers": "public", "return": "void", "signature": "void deleteTrigger(String jobName)", "full_signature": "public void deleteTrigger(String jobName)", "class_method_signature": "SchedulerHelper.deleteTrigger(String jobName)", "testcase": false, "constructor": false}, {"identifier": "deleteTrigger", "parameters": "(String name, String group)", "modifiers": "public", "return": "void", "signature": "void deleteTrigger(String name, String group)", "full_signature": "public void deleteTrigger(String name, String group)", "class_method_signature": "SchedulerHelper.deleteTrigger(String name, String group)", "testcase": false, "constructor": false}, {"identifier": "getScheduler", "parameters": "()", "modifiers": "public", "return": "Scheduler", "signature": "Scheduler getScheduler()", "full_signature": "public Scheduler getScheduler()", "class_method_signature": "SchedulerHelper.getScheduler()", "testcase": false, "constructor": false}, {"identifier": "setScheduler", "parameters": "(Scheduler scheduler)", "modifiers": "public", "return": "void", "signature": "void setScheduler(Scheduler scheduler)", "full_signature": "public void setScheduler(Scheduler scheduler)", "class_method_signature": "SchedulerHelper.setScheduler(Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "startScheduler", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startScheduler()", "full_signature": "public void startScheduler()", "class_method_signature": "SchedulerHelper.startScheduler()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/scheduler/SchedulerHelper.java"}, "focal_method": {"identifier": "scheduleJob", "parameters": "(IbisManager ibisManager, JobDef jobdef)", "modifiers": "public", "return": "void", "body": "public void scheduleJob(IbisManager ibisManager, JobDef jobdef) throws SchedulerException {\n\t\tJobDetail jobDetail = jobdef.getJobDetail(ibisManager);\n\t\tscheduleJob(jobDetail, jobdef.getCronExpression(), jobdef.getInterval(), true);\n\t}", "signature": "void scheduleJob(IbisManager ibisManager, JobDef jobdef)", "full_signature": "public void scheduleJob(IbisManager ibisManager, JobDef jobdef)", "class_method_signature": "SchedulerHelper.scheduleJob(IbisManager ibisManager, JobDef jobdef)", "testcase": false, "constructor": false, "invocations": ["getJobDetail", "scheduleJob", "getCronExpression", "getInterval"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}