{"test_class": {"identifier": "PortfolioViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long AMOUNT_ITEMS = 100;", "modifier": "private static final", "type": "long", "declarator": "AMOUNT_ITEMS = 100", "var_name": "AMOUNT_ITEMS"}, {"original_string": "private static final long AMOUNT_RESERVED = 40;", "modifier": "private static final", "type": "long", "declarator": "AMOUNT_RESERVED = 40", "var_name": "AMOUNT_RESERVED"}, {"original_string": "private static final int AMOUNT_SELL = 10;", "modifier": "private static final", "type": "int", "declarator": "AMOUNT_SELL = 10", "var_name": "AMOUNT_SELL"}, {"original_string": "private static final String ORDER_BOOK_ID = \"item1\";", "modifier": "private static final", "type": "String", "declarator": "ORDER_BOOK_ID = \"item1\"", "var_name": "ORDER_BOOK_ID"}, {"original_string": "private static final int AMOUNT_OF_MONEY = 1000;", "modifier": "private static final", "type": "int", "declarator": "AMOUNT_OF_MONEY = 1000", "var_name": "AMOUNT_OF_MONEY"}, {"original_string": "private static final int RESERVED_AMOUNT_OF_MONEY = 200;", "modifier": "private static final", "type": "int", "declarator": "RESERVED_AMOUNT_OF_MONEY = 200", "var_name": "RESERVED_AMOUNT_OF_MONEY"}], "file": "query/src/test/java/org/axonframework/samples/trader/query/portfolio/PortfolioViewTest.java"}, "test_case": {"identifier": "testObtainAvailableItems", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testObtainAvailableItems() {\n        PortfolioView portfolio = createDefaultPortfolio();\n\n        assertEquals(AMOUNT_ITEMS - AMOUNT_RESERVED, portfolio.obtainAmountOfAvailableItemsFor(ORDER_BOOK_ID));\n    }", "signature": "void testObtainAvailableItems()", "full_signature": "@Test public void testObtainAvailableItems()", "class_method_signature": "PortfolioViewTest.testObtainAvailableItems()", "testcase": true, "constructor": false, "invocations": ["createDefaultPortfolio", "assertEquals", "obtainAmountOfAvailableItemsFor"]}, "focal_class": {"identifier": "PortfolioView", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Id\n    @javax.persistence.Id\n    private String identifier;", "modifier": "@Id\n    @javax.persistence.Id\n    private", "type": "String", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private String userIdentifier;", "modifier": "private", "type": "String", "declarator": "userIdentifier", "var_name": "userIdentifier"}, {"original_string": "private String userName;", "modifier": "private", "type": "String", "declarator": "userName", "var_name": "userName"}, {"original_string": "private long amountOfMoney;", "modifier": "private", "type": "long", "declarator": "amountOfMoney", "var_name": "amountOfMoney"}, {"original_string": "private long reservedAmountOfMoney;", "modifier": "private", "type": "long", "declarator": "reservedAmountOfMoney", "var_name": "reservedAmountOfMoney"}, {"original_string": "@OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n    @JoinTable(\n            name = \"PORTFOLIO_ITEM_POSSESSION\",\n            joinColumns = @JoinColumn(name = \"PORTFOLIO_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"ITEM_ID\")\n    )\n    private Map<String, ItemEntry> itemsInPossession = new HashMap<>();", "modifier": "@OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n    @JoinTable(\n            name = \"PORTFOLIO_ITEM_POSSESSION\",\n            joinColumns = @JoinColumn(name = \"PORTFOLIO_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"ITEM_ID\")\n    )\n    private", "type": "Map<String, ItemEntry>", "declarator": "itemsInPossession = new HashMap<>()", "var_name": "itemsInPossession"}, {"original_string": "@OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n    @JoinTable(\n            name = \"PORTFOLIO_ITEM_RESERVED\",\n            joinColumns = @JoinColumn(name = \"PORTFOLIO_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"ITEM_ID\")\n    )\n    private Map<String, ItemEntry> itemsReserved = new HashMap<>();", "modifier": "@OneToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n    @JoinTable(\n            name = \"PORTFOLIO_ITEM_RESERVED\",\n            joinColumns = @JoinColumn(name = \"PORTFOLIO_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"ITEM_ID\")\n    )\n    private", "type": "Map<String, ItemEntry>", "declarator": "itemsReserved = new HashMap<>()", "var_name": "itemsReserved"}], "methods": [{"identifier": "obtainAmountOfAvailableItemsFor", "parameters": "(String orderBookId)", "modifiers": "public", "return": "long", "signature": "long obtainAmountOfAvailableItemsFor(String orderBookId)", "full_signature": "public long obtainAmountOfAvailableItemsFor(String orderBookId)", "class_method_signature": "PortfolioView.obtainAmountOfAvailableItemsFor(String orderBookId)", "testcase": false, "constructor": false}, {"identifier": "obtainAmountOfReservedItemsFor", "parameters": "(String orderBookId)", "modifiers": "public", "return": "long", "signature": "long obtainAmountOfReservedItemsFor(String orderBookId)", "full_signature": "public long obtainAmountOfReservedItemsFor(String orderBookId)", "class_method_signature": "PortfolioView.obtainAmountOfReservedItemsFor(String orderBookId)", "testcase": false, "constructor": false}, {"identifier": "obtainAmountOfItemsInPossessionFor", "parameters": "(String orderBookId)", "modifiers": "public", "return": "long", "signature": "long obtainAmountOfItemsInPossessionFor(String orderBookId)", "full_signature": "public long obtainAmountOfItemsInPossessionFor(String orderBookId)", "class_method_signature": "PortfolioView.obtainAmountOfItemsInPossessionFor(String orderBookId)", "testcase": false, "constructor": false}, {"identifier": "obtainMoneyToSpend", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long obtainMoneyToSpend()", "full_signature": "public long obtainMoneyToSpend()", "class_method_signature": "PortfolioView.obtainMoneyToSpend()", "testcase": false, "constructor": false}, {"identifier": "findReservedItemByIdentifier", "parameters": "(String orderBookId)", "modifiers": "public", "return": "ItemEntry", "signature": "ItemEntry findReservedItemByIdentifier(String orderBookId)", "full_signature": "public ItemEntry findReservedItemByIdentifier(String orderBookId)", "class_method_signature": "PortfolioView.findReservedItemByIdentifier(String orderBookId)", "testcase": false, "constructor": false}, {"identifier": "findItemInPossession", "parameters": "(String orderBookId)", "modifiers": "public", "return": "ItemEntry", "signature": "ItemEntry findItemInPossession(String orderBookId)", "full_signature": "public ItemEntry findItemInPossession(String orderBookId)", "class_method_signature": "PortfolioView.findItemInPossession(String orderBookId)", "testcase": false, "constructor": false}, {"identifier": "addReservedItem", "parameters": "(ItemEntry itemEntry)", "modifiers": "public", "return": "void", "signature": "void addReservedItem(ItemEntry itemEntry)", "full_signature": "public void addReservedItem(ItemEntry itemEntry)", "class_method_signature": "PortfolioView.addReservedItem(ItemEntry itemEntry)", "testcase": false, "constructor": false}, {"identifier": "addItemInPossession", "parameters": "(ItemEntry itemEntry)", "modifiers": "public", "return": "void", "signature": "void addItemInPossession(ItemEntry itemEntry)", "full_signature": "public void addItemInPossession(ItemEntry itemEntry)", "class_method_signature": "PortfolioView.addItemInPossession(ItemEntry itemEntry)", "testcase": false, "constructor": false}, {"identifier": "removeReservedItem", "parameters": "(String itemIdentifier, long amount)", "modifiers": "public", "return": "void", "signature": "void removeReservedItem(String itemIdentifier, long amount)", "full_signature": "public void removeReservedItem(String itemIdentifier, long amount)", "class_method_signature": "PortfolioView.removeReservedItem(String itemIdentifier, long amount)", "testcase": false, "constructor": false}, {"identifier": "removeItemsInPossession", "parameters": "(String itemIdentifier, long amount)", "modifiers": "public", "return": "void", "signature": "void removeItemsInPossession(String itemIdentifier, long amount)", "full_signature": "public void removeItemsInPossession(String itemIdentifier, long amount)", "class_method_signature": "PortfolioView.removeItemsInPossession(String itemIdentifier, long amount)", "testcase": false, "constructor": false}, {"identifier": "getUserIdentifier", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserIdentifier()", "full_signature": "public String getUserIdentifier()", "class_method_signature": "PortfolioView.getUserIdentifier()", "testcase": false, "constructor": false}, {"identifier": "setUserIdentifier", "parameters": "(String userIdentifier)", "modifiers": "public", "return": "void", "signature": "void setUserIdentifier(String userIdentifier)", "full_signature": "public void setUserIdentifier(String userIdentifier)", "class_method_signature": "PortfolioView.setUserIdentifier(String userIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getAmountOfMoney", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getAmountOfMoney()", "full_signature": "public long getAmountOfMoney()", "class_method_signature": "PortfolioView.getAmountOfMoney()", "testcase": false, "constructor": false}, {"identifier": "setAmountOfMoney", "parameters": "(long amountOfMoney)", "modifiers": "public", "return": "void", "signature": "void setAmountOfMoney(long amountOfMoney)", "full_signature": "public void setAmountOfMoney(long amountOfMoney)", "class_method_signature": "PortfolioView.setAmountOfMoney(long amountOfMoney)", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIdentifier()", "full_signature": "public String getIdentifier()", "class_method_signature": "PortfolioView.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "setIdentifier", "parameters": "(String identifier)", "modifiers": "public", "return": "void", "signature": "void setIdentifier(String identifier)", "full_signature": "public void setIdentifier(String identifier)", "class_method_signature": "PortfolioView.setIdentifier(String identifier)", "testcase": false, "constructor": false}, {"identifier": "getReservedAmountOfMoney", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getReservedAmountOfMoney()", "full_signature": "public long getReservedAmountOfMoney()", "class_method_signature": "PortfolioView.getReservedAmountOfMoney()", "testcase": false, "constructor": false}, {"identifier": "setReservedAmountOfMoney", "parameters": "(long reservedAmountOfMoney)", "modifiers": "public", "return": "void", "signature": "void setReservedAmountOfMoney(long reservedAmountOfMoney)", "full_signature": "public void setReservedAmountOfMoney(long reservedAmountOfMoney)", "class_method_signature": "PortfolioView.setReservedAmountOfMoney(long reservedAmountOfMoney)", "testcase": false, "constructor": false}, {"identifier": "getItemsInPossession", "parameters": "()", "modifiers": "public", "return": "Map<String, ItemEntry>", "signature": "Map<String, ItemEntry> getItemsInPossession()", "full_signature": "public Map<String, ItemEntry> getItemsInPossession()", "class_method_signature": "PortfolioView.getItemsInPossession()", "testcase": false, "constructor": false}, {"identifier": "setItemsInPossession", "parameters": "(Map<String, ItemEntry> itemsInPossession)", "modifiers": "public", "return": "void", "signature": "void setItemsInPossession(Map<String, ItemEntry> itemsInPossession)", "full_signature": "public void setItemsInPossession(Map<String, ItemEntry> itemsInPossession)", "class_method_signature": "PortfolioView.setItemsInPossession(Map<String, ItemEntry> itemsInPossession)", "testcase": false, "constructor": false}, {"identifier": "getItemsReserved", "parameters": "()", "modifiers": "public", "return": "Map<String, ItemEntry>", "signature": "Map<String, ItemEntry> getItemsReserved()", "full_signature": "public Map<String, ItemEntry> getItemsReserved()", "class_method_signature": "PortfolioView.getItemsReserved()", "testcase": false, "constructor": false}, {"identifier": "setItemsReserved", "parameters": "(Map<String, ItemEntry> itemsReserved)", "modifiers": "public", "return": "void", "signature": "void setItemsReserved(Map<String, ItemEntry> itemsReserved)", "full_signature": "public void setItemsReserved(Map<String, ItemEntry> itemsReserved)", "class_method_signature": "PortfolioView.setItemsReserved(Map<String, ItemEntry> itemsReserved)", "testcase": false, "constructor": false}, {"identifier": "getUserName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserName()", "full_signature": "public String getUserName()", "class_method_signature": "PortfolioView.getUserName()", "testcase": false, "constructor": false}, {"identifier": "setUserName", "parameters": "(String userName)", "modifiers": "public", "return": "void", "signature": "void setUserName(String userName)", "full_signature": "public void setUserName(String userName)", "class_method_signature": "PortfolioView.setUserName(String userName)", "testcase": false, "constructor": false}, {"identifier": "handleAdd", "parameters": "(Map<String, ItemEntry> items, ItemEntry itemEntry)", "modifiers": "private", "return": "void", "signature": "void handleAdd(Map<String, ItemEntry> items, ItemEntry itemEntry)", "full_signature": "private void handleAdd(Map<String, ItemEntry> items, ItemEntry itemEntry)", "class_method_signature": "PortfolioView.handleAdd(Map<String, ItemEntry> items, ItemEntry itemEntry)", "testcase": false, "constructor": false}, {"identifier": "handleRemoveItem", "parameters": "(Map<String, ItemEntry> items, String itemIdentifier, long amount)", "modifiers": "private", "return": "void", "signature": "void handleRemoveItem(Map<String, ItemEntry> items, String itemIdentifier, long amount)", "full_signature": "private void handleRemoveItem(Map<String, ItemEntry> items, String itemIdentifier, long amount)", "class_method_signature": "PortfolioView.handleRemoveItem(Map<String, ItemEntry> items, String itemIdentifier, long amount)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PortfolioView.toString()", "testcase": false, "constructor": false}], "file": "query/src/main/java/org/axonframework/samples/trader/query/portfolio/PortfolioView.java"}, "focal_method": {"identifier": "obtainAmountOfAvailableItemsFor", "parameters": "(String orderBookId)", "modifiers": "public", "return": "long", "body": "public long obtainAmountOfAvailableItemsFor(String orderBookId) {\n        long possession = obtainAmountOfItemsInPossessionFor(orderBookId);\n        long reserved = obtainAmountOfReservedItemsFor(orderBookId);\n        return possession - reserved;\n    }", "signature": "long obtainAmountOfAvailableItemsFor(String orderBookId)", "full_signature": "public long obtainAmountOfAvailableItemsFor(String orderBookId)", "class_method_signature": "PortfolioView.obtainAmountOfAvailableItemsFor(String orderBookId)", "testcase": false, "constructor": false, "invocations": ["obtainAmountOfItemsInPossessionFor", "obtainAmountOfReservedItemsFor"]}, "repository": {"repo_id": 854559, "url": "https://github.com/AxonFramework/Axon-trader", "language": "Java", "is_fork": false, "fork_count": 178, "stargazer_count": 356, "size": 1455, "license": "licensed"}}