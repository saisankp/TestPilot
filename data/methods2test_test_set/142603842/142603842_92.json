{"test_class": {"identifier": "ReloadServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private VehicleRepository vehicleRepository;", "modifier": "@Mock\n    private", "type": "VehicleRepository", "declarator": "vehicleRepository", "var_name": "vehicleRepository"}, {"original_string": "@Mock\n    private VehicleService vehicleService;", "modifier": "@Mock\n    private", "type": "VehicleService", "declarator": "vehicleService", "var_name": "vehicleService"}, {"original_string": "@Mock\n    private LocationRepository locationRepository;", "modifier": "@Mock\n    private", "type": "LocationRepository", "declarator": "locationRepository", "var_name": "locationRepository"}, {"original_string": "@Mock\n    private LocationService locationService;", "modifier": "@Mock\n    private", "type": "LocationService", "declarator": "locationService", "var_name": "locationService"}, {"original_string": "@InjectMocks\n    private ReloadService reloadService;", "modifier": "@InjectMocks\n    private", "type": "ReloadService", "declarator": "reloadService", "var_name": "reloadService"}, {"original_string": "@Mock\n    ApplicationStartedEvent event;", "modifier": "@Mock", "type": "ApplicationStartedEvent", "declarator": "event", "var_name": "event"}, {"original_string": "private final Vehicle vehicle = VehicleFactory.createVehicle(193, \"Vehicle 193\", 100);", "modifier": "private final", "type": "Vehicle", "declarator": "vehicle = VehicleFactory.createVehicle(193, \"Vehicle 193\", 100)", "var_name": "vehicle"}, {"original_string": "private final List<Vehicle> persistedVehicles = Arrays.asList(vehicle, vehicle);", "modifier": "private final", "type": "List<Vehicle>", "declarator": "persistedVehicles = Arrays.asList(vehicle, vehicle)", "var_name": "persistedVehicles"}, {"original_string": "private final Coordinates coordinates = Coordinates.valueOf(0.0, 1.0);", "modifier": "private final", "type": "Coordinates", "declarator": "coordinates = Coordinates.valueOf(0.0, 1.0)", "var_name": "coordinates"}, {"original_string": "private final Location location = new Location(1, coordinates);", "modifier": "private final", "type": "Location", "declarator": "location = new Location(1, coordinates)", "var_name": "location"}, {"original_string": "private final List<Location> persistedLocations = Arrays.asList(location, location, location);", "modifier": "private final", "type": "List<Location>", "declarator": "persistedLocations = Arrays.asList(location, location, location)", "var_name": "persistedLocations"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/service/reload/ReloadServiceTest.java"}, "test_case": {"identifier": "should_reload_on_startup", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void should_reload_on_startup() {\n        when(vehicleRepository.vehicles()).thenReturn(persistedVehicles);\n        when(locationRepository.locations()).thenReturn(persistedLocations);\n\n        reloadService.reload(event);\n\n        verify(vehicleRepository).vehicles();\n        verify(vehicleService, times(persistedVehicles.size())).addVehicle(vehicle);\n        verify(locationRepository).locations();\n        verify(locationService, times(persistedLocations.size())).addLocation(location);\n    }", "signature": "void should_reload_on_startup()", "full_signature": "@Test void should_reload_on_startup()", "class_method_signature": "ReloadServiceTest.should_reload_on_startup()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "vehicles", "thenReturn", "when", "locations", "reload", "vehicles", "verify", "addVehicle", "verify", "times", "size", "locations", "verify", "addLocation", "verify", "times", "size"]}, "focal_class": {"identifier": "ReloadService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final VehicleRepository vehicleRepository;", "modifier": "private final", "type": "VehicleRepository", "declarator": "vehicleRepository", "var_name": "vehicleRepository"}, {"original_string": "private final VehicleService vehicleService;", "modifier": "private final", "type": "VehicleService", "declarator": "vehicleService", "var_name": "vehicleService"}, {"original_string": "private final LocationRepository locationRepository;", "modifier": "private final", "type": "LocationRepository", "declarator": "locationRepository", "var_name": "locationRepository"}, {"original_string": "private final LocationService locationService;", "modifier": "private final", "type": "LocationService", "declarator": "locationService", "var_name": "locationService"}], "methods": [{"identifier": "ReloadService", "parameters": "(\n            VehicleRepository vehicleRepository,\n            VehicleService vehicleService,\n            LocationRepository locationRepository,\n            LocationService locationService)", "modifiers": "@Autowired", "return": "", "signature": " ReloadService(\n            VehicleRepository vehicleRepository,\n            VehicleService vehicleService,\n            LocationRepository locationRepository,\n            LocationService locationService)", "full_signature": "@Autowired  ReloadService(\n            VehicleRepository vehicleRepository,\n            VehicleService vehicleService,\n            LocationRepository locationRepository,\n            LocationService locationService)", "class_method_signature": "ReloadService.ReloadService(\n            VehicleRepository vehicleRepository,\n            VehicleService vehicleService,\n            LocationRepository locationRepository,\n            LocationService locationService)", "testcase": false, "constructor": true}, {"identifier": "reload", "parameters": "(ApplicationStartedEvent event)", "modifiers": "@EventListener public synchronized", "return": "void", "signature": "void reload(ApplicationStartedEvent event)", "full_signature": "@EventListener public synchronized void reload(ApplicationStartedEvent event)", "class_method_signature": "ReloadService.reload(ApplicationStartedEvent event)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/service/reload/ReloadService.java"}, "focal_method": {"identifier": "reload", "parameters": "(ApplicationStartedEvent event)", "modifiers": "@EventListener public synchronized", "return": "void", "body": "@EventListener\n    public synchronized void reload(ApplicationStartedEvent event) {\n        vehicleRepository.vehicles().forEach(vehicleService::addVehicle);\n        locationRepository.locations().forEach(locationService::addLocation);\n    }", "signature": "void reload(ApplicationStartedEvent event)", "full_signature": "@EventListener public synchronized void reload(ApplicationStartedEvent event)", "class_method_signature": "ReloadService.reload(ApplicationStartedEvent event)", "testcase": false, "constructor": false, "invocations": ["forEach", "vehicles", "forEach", "locations"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}