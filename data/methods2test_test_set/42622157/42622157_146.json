{"test_class": {"identifier": "MultiRepositoryManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger LOGGER = LoggerFactory.getLogger(MultiRepositoryManagerTest.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MultiRepositoryManagerTest.class)", "var_name": "LOGGER"}, {"original_string": "static String workspaceRepositoryRoot;", "modifier": "static", "type": "String", "declarator": "workspaceRepositoryRoot", "var_name": "workspaceRepositoryRoot"}], "file": "org.eclipse.winery.repository/src/test/java/org/eclipse/winery/repository/backend/filebased/MultiRepositoryManagerTest.java"}, "test_case": {"identifier": "testRepositoryListImport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRepositoryListImport() throws UnsupportedEncodingException {\n        ArrayList<RepositoryProperties> repositoryList = new ArrayList<>();\n        repositoryList.add(new RepositoryProperties(\"mainTestRepository\",\n            \"https://github.com/winery/mulit-repo-test\"));\n        repositoryList.add(new RepositoryProperties(\"standardTestRepository\", \"https://github.com/winery/test-repository\", \"plain\"));\n        MultiRepositoryManager multiRepositoryManager = new MultiRepositoryManager();\n        multiRepositoryManager.addRepositoryToFile(repositoryList);\n        try {\n            assertTrue(Paths.get(Environments.getInstance().getRepositoryConfig().getRepositoryRoot(), URLEncoder.encode(\"https://github.com/winery\", \"UTF-8\")).toFile().exists());\n            assertTrue(Paths.get(Environments.getInstance().getRepositoryConfig().getRepositoryRoot(), URLEncoder.encode(\"https://github.com/winery\", \"UTF-8\"), \"mulit-repo-test\").toFile().exists());\n            assertTrue(Paths.get(Environments.getInstance().getRepositoryConfig().getRepositoryRoot(), URLEncoder.encode(\"https://github.com/winery\", \"UTF-8\"), \"multi-repo-dependency\").toFile().exists());\n            assertTrue(Paths.get(Environments.getInstance().getRepositoryConfig().getRepositoryRoot(), URLEncoder.encode(\"https://github.com/winery\", \"UTF-8\"), \"test-repository\").toFile().exists());\n        } catch (UnsupportedEncodingException e) {\n            LOGGER.error(\"Error while encoding.\");\n            throw e;\n        }\n    }", "signature": "void testRepositoryListImport()", "full_signature": "@Test public void testRepositoryListImport()", "class_method_signature": "MultiRepositoryManagerTest.testRepositoryListImport()", "testcase": true, "constructor": false, "invocations": ["add", "add", "addRepositoryToFile", "assertTrue", "exists", "toFile", "get", "getRepositoryRoot", "getRepositoryConfig", "getInstance", "encode", "assertTrue", "exists", "toFile", "get", "getRepositoryRoot", "getRepositoryConfig", "getInstance", "encode", "assertTrue", "exists", "toFile", "get", "getRepositoryRoot", "getRepositoryConfig", "getInstance", "encode", "assertTrue", "exists", "toFile", "get", "getRepositoryRoot", "getRepositoryConfig", "getInstance", "encode", "error"]}, "focal_class": {"identifier": "MultiRepositoryManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MultiRepositoryManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MultiRepositoryManager.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "initializeRepositoryListForMultiRepositoryAndReconfigureFactory", "parameters": "(List<RepositoryProperties> repositoryList)", "modifiers": "", "return": "void", "signature": "void initializeRepositoryListForMultiRepositoryAndReconfigureFactory(List<RepositoryProperties> repositoryList)", "full_signature": " void initializeRepositoryListForMultiRepositoryAndReconfigureFactory(List<RepositoryProperties> repositoryList)", "class_method_signature": "MultiRepositoryManager.initializeRepositoryListForMultiRepositoryAndReconfigureFactory(List<RepositoryProperties> repositoryList)", "testcase": false, "constructor": false}, {"identifier": "isMultiRepositoryFileStuctureEstablished", "parameters": "(Path repoPath)", "modifiers": "", "return": "boolean", "signature": "boolean isMultiRepositoryFileStuctureEstablished(Path repoPath)", "full_signature": " boolean isMultiRepositoryFileStuctureEstablished(Path repoPath)", "class_method_signature": "MultiRepositoryManager.isMultiRepositoryFileStuctureEstablished(Path repoPath)", "testcase": false, "constructor": false}, {"identifier": "createMultiRepositoryFileStructure", "parameters": "(Path oldPath, Path newPath)", "modifiers": "", "return": "void", "signature": "void createMultiRepositoryFileStructure(Path oldPath, Path newPath)", "full_signature": " void createMultiRepositoryFileStructure(Path oldPath, Path newPath)", "class_method_signature": "MultiRepositoryManager.createMultiRepositoryFileStructure(Path oldPath, Path newPath)", "testcase": false, "constructor": false}, {"identifier": "getRepositoriesAsList", "parameters": "()", "modifiers": "public", "return": "List<RepositoryProperties>", "signature": "List<RepositoryProperties> getRepositoriesAsList()", "full_signature": "public List<RepositoryProperties> getRepositoriesAsList()", "class_method_signature": "MultiRepositoryManager.getRepositoriesAsList()", "testcase": false, "constructor": false}, {"identifier": "addRepositoryToFile", "parameters": "(List<RepositoryProperties> repositories)", "modifiers": "public", "return": "void", "signature": "void addRepositoryToFile(List<RepositoryProperties> repositories)", "full_signature": "public void addRepositoryToFile(List<RepositoryProperties> repositories)", "class_method_signature": "MultiRepositoryManager.addRepositoryToFile(List<RepositoryProperties> repositories)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.repository/src/main/java/org/eclipse/winery/repository/backend/filebased/MultiRepositoryManager.java"}, "focal_method": {"identifier": "addRepositoryToFile", "parameters": "(List<RepositoryProperties> repositories)", "modifiers": "public", "return": "void", "body": "public void addRepositoryToFile(List<RepositoryProperties> repositories) {\n        IRepository repo = RepositoryFactory.getRepository();\n        if (!(repo instanceof MultiRepository)) {\n            initializeRepositoryListForMultiRepositoryAndReconfigureFactory(repositories);\n            repo = RepositoryFactory.getRepository();\n        }\n        ((MultiRepository) repo).addRepositoryToFile(repositories);\n    }", "signature": "void addRepositoryToFile(List<RepositoryProperties> repositories)", "full_signature": "public void addRepositoryToFile(List<RepositoryProperties> repositories)", "class_method_signature": "MultiRepositoryManager.addRepositoryToFile(List<RepositoryProperties> repositories)", "testcase": false, "constructor": false, "invocations": ["getRepository", "initializeRepositoryListForMultiRepositoryAndReconfigureFactory", "getRepository", "addRepositoryToFile"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}