{"test_class": {"identifier": "SecurityUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "Editor/src/test/java/ch/hsr/servicestoolkit/editor/security/SecurityUtilsTest.java"}, "test_case": {"identifier": "testAnonymousIsNotAuthenticated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAnonymousIsNotAuthenticated() {\n        SecurityContext securityContext = SecurityContextHolder.createEmptyContext();\n        Collection<GrantedAuthority> authorities = new ArrayList<>();\n        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.ANONYMOUS));\n        securityContext.setAuthentication(new UsernamePasswordAuthenticationToken(\"anonymous\", \"anonymous\", authorities));\n        SecurityContextHolder.setContext(securityContext);\n        boolean isAuthenticated = SecurityUtils.isAuthenticated();\n        assertThat(isAuthenticated).isFalse();\n    }", "signature": "void testAnonymousIsNotAuthenticated()", "full_signature": "@Test public void testAnonymousIsNotAuthenticated()", "class_method_signature": "SecurityUtilsTest.testAnonymousIsNotAuthenticated()", "testcase": true, "constructor": false, "invocations": ["createEmptyContext", "add", "setAuthentication", "setContext", "isAuthenticated", "isFalse", "assertThat"]}, "focal_class": {"identifier": "SecurityUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SecurityUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SecurityUtils()", "full_signature": "private  SecurityUtils()", "class_method_signature": "SecurityUtils.SecurityUtils()", "testcase": false, "constructor": true}, {"identifier": "getCurrentLogin", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getCurrentLogin()", "full_signature": "public static String getCurrentLogin()", "class_method_signature": "SecurityUtils.getCurrentLogin()", "testcase": false, "constructor": false}, {"identifier": "isAuthenticated", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isAuthenticated()", "full_signature": "public static boolean isAuthenticated()", "class_method_signature": "SecurityUtils.isAuthenticated()", "testcase": false, "constructor": false}, {"identifier": "isUserInRole", "parameters": "(String authority)", "modifiers": "public static", "return": "boolean", "signature": "boolean isUserInRole(String authority)", "full_signature": "public static boolean isUserInRole(String authority)", "class_method_signature": "SecurityUtils.isUserInRole(String authority)", "testcase": false, "constructor": false}], "file": "Editor/src/main/java/ch/hsr/servicestoolkit/editor/security/SecurityUtils.java"}, "focal_method": {"identifier": "isAuthenticated", "parameters": "()", "modifiers": "public static", "return": "boolean", "body": "public static boolean isAuthenticated() {\n        SecurityContext securityContext = SecurityContextHolder.getContext();\n        Collection<? extends GrantedAuthority> authorities = securityContext.getAuthentication().getAuthorities();\n        if (authorities != null) {\n            for (GrantedAuthority authority : authorities) {\n                if (authority.getAuthority().equals(AuthoritiesConstants.ANONYMOUS)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "signature": "boolean isAuthenticated()", "full_signature": "public static boolean isAuthenticated()", "class_method_signature": "SecurityUtils.isAuthenticated()", "testcase": false, "constructor": false, "invocations": ["getContext", "getAuthorities", "getAuthentication", "equals", "getAuthority"]}, "repository": {"repo_id": 42585709, "url": "https://github.com/ServiceCutter/ServiceCutter", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 29, "size": 8580, "license": "licensed"}}