{"test_class": {"identifier": "NewCookieHeaderDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NewCookieHeaderDelegate newCookieHeaderDelegate;", "modifier": "private", "type": "NewCookieHeaderDelegate", "declarator": "newCookieHeaderDelegate", "var_name": "newCookieHeaderDelegate"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/NewCookieHeaderDelegateTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() throws Exception {\n        NewCookie cookie = new NewCookie(\"foo\",\n                                         \"bar\",\n                                         \"/aaa\",\n                                         \"andrew.com\",\n                                         1,\n                                         \"comment\",\n                                         300,\n                                         date(2010, 1, 8, 2, 5, 0, \"EET\"),\n                                         true,\n                                         true);\n        assertEquals(\"foo=bar;Version=1;Comment=comment;Domain=andrew.com;Path=/aaa;Max-Age=300;Expires=Fri, 08 Jan 2010 00:05:00 GMT;Secure;HttpOnly\",\n                     newCookieHeaderDelegate.toString(cookie));\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "NewCookieHeaderDelegateTest.testToString()", "testcase": true, "constructor": false, "invocations": ["date", "assertEquals", "toString"]}, "focal_class": {"identifier": "NewCookieHeaderDelegate", "superclass": "", "interfaces": "implements RuntimeDelegate.HeaderDelegate<NewCookie>", "fields": [], "methods": [{"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "NewCookie", "signature": "NewCookie fromString(String header)", "full_signature": "@Override public NewCookie fromString(String header)", "class_method_signature": "NewCookieHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(NewCookie cookie)", "modifiers": "@Override public", "return": "String", "signature": "String toString(NewCookie cookie)", "full_signature": "@Override public String toString(NewCookie cookie)", "class_method_signature": "NewCookieHeaderDelegate.toString(NewCookie cookie)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/NewCookieHeaderDelegate.java"}, "focal_method": {"identifier": "toString", "parameters": "(NewCookie cookie)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString(NewCookie cookie) {\n        checkArgument(cookie != null);\n        StringBuilder sb = new StringBuilder();\n        sb.append(cookie.getName()).append('=').append(addQuotesIfHasWhitespace(cookie.getValue()));\n\n        sb.append(';').append(\"Version=\").append(cookie.getVersion());\n\n        if (cookie.getComment() != null) {\n            sb.append(';').append(\"Comment=\").append(addQuotesIfHasWhitespace(cookie.getComment()));\n        }\n\n        if (cookie.getDomain() != null) {\n            sb.append(';').append(\"Domain=\").append(addQuotesIfHasWhitespace(cookie.getDomain()));\n        }\n\n        if (cookie.getPath() != null) {\n            sb.append(';').append(\"Path=\").append(addQuotesIfHasWhitespace(cookie.getPath()));\n        }\n\n        if (cookie.getMaxAge() != -1) {\n            sb.append(';').append(\"Max-Age=\").append(addQuotesIfHasWhitespace(Integer.toString(cookie.getMaxAge())));\n        }\n\n        if (cookie.getExpiry() != null) {\n            sb.append(';').append(\"Expires=\");\n            sb.append(HeaderHelper.formatDate(cookie.getExpiry()));\n        }\n\n        if (cookie.isSecure()) {\n            sb.append(';').append(\"Secure\");\n        }\n\n        if (cookie.isHttpOnly()) {\n            sb.append(';').append(\"HttpOnly\");\n        }\n\n        return sb.toString();\n    }", "signature": "String toString(NewCookie cookie)", "full_signature": "@Override public String toString(NewCookie cookie)", "class_method_signature": "NewCookieHeaderDelegate.toString(NewCookie cookie)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "append", "append", "append", "getName", "addQuotesIfHasWhitespace", "getValue", "append", "append", "append", "getVersion", "getComment", "append", "append", "append", "addQuotesIfHasWhitespace", "getComment", "getDomain", "append", "append", "append", "addQuotesIfHasWhitespace", "getDomain", "getPath", "append", "append", "append", "addQuotesIfHasWhitespace", "getPath", "getMaxAge", "append", "append", "append", "addQuotesIfHasWhitespace", "toString", "getMaxAge", "getExpiry", "append", "append", "append", "formatDate", "getExpiry", "isSecure", "append", "append", "isHttpOnly", "append", "append", "toString"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}