{"test_class": {"identifier": "EventParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock RequestEvent event;", "modifier": "@Mock", "type": "RequestEvent", "declarator": "event", "var_name": "event"}, {"original_string": "@Mock ContainerRequest request;", "modifier": "@Mock", "type": "ContainerRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock ExtendedUriInfo uriInfo;", "modifier": "@Mock", "type": "ExtendedUriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "@Mock SpanCustomizer customizer;", "modifier": "@Mock", "type": "SpanCustomizer", "declarator": "customizer", "var_name": "customizer"}, {"original_string": "EventParser eventParser = new EventParser();", "modifier": "", "type": "EventParser", "declarator": "eventParser = new EventParser()", "var_name": "eventParser"}], "file": "instrumentation/jersey-server/src/test/java/brave/jersey/server/EventParserTest.java"}, "test_case": {"identifier": "requestMatched_missingResourceMethodOk", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void requestMatched_missingResourceMethodOk() {\n    when(event.getContainerRequest()).thenReturn(request);\n    when(request.getUriInfo()).thenReturn(uriInfo);\n\n    eventParser.requestMatched(event, customizer);\n\n    verifyNoMoreInteractions(customizer);\n  }", "signature": "void requestMatched_missingResourceMethodOk()", "full_signature": "@Test public void requestMatched_missingResourceMethodOk()", "class_method_signature": "EventParserTest.requestMatched_missingResourceMethodOk()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getContainerRequest", "thenReturn", "when", "getUriInfo", "requestMatched", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "EventParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final EventParser NOOP = new EventParser() {\n    @Override protected void requestMatched(RequestEvent event, SpanCustomizer customizer) {\n    }\n  };", "modifier": "public static final", "type": "EventParser", "declarator": "NOOP = new EventParser() {\n    @Override protected void requestMatched(RequestEvent event, SpanCustomizer customizer) {\n    }\n  }", "var_name": "NOOP"}, {"original_string": "public static final String RESOURCE_CLASS = \"jaxrs.resource.class\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_CLASS = \"jaxrs.resource.class\"", "var_name": "RESOURCE_CLASS"}, {"original_string": "public static final String RESOURCE_METHOD = \"jaxrs.resource.method\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_METHOD = \"jaxrs.resource.method\"", "var_name": "RESOURCE_METHOD"}], "methods": [{"identifier": "requestMatched", "parameters": "(RequestEvent event, SpanCustomizer customizer)", "modifiers": "protected", "return": "void", "signature": "void requestMatched(RequestEvent event, SpanCustomizer customizer)", "full_signature": "protected void requestMatched(RequestEvent event, SpanCustomizer customizer)", "class_method_signature": "EventParser.requestMatched(RequestEvent event, SpanCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "EventParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " EventParser()", "full_signature": "public  EventParser()", "class_method_signature": "EventParser.EventParser()", "testcase": false, "constructor": true}], "file": "instrumentation/jersey-server/src/main/java/brave/jersey/server/EventParser.java"}, "focal_method": {"identifier": "requestMatched", "parameters": "(RequestEvent event, SpanCustomizer customizer)", "modifiers": "protected", "return": "void", "body": "protected void requestMatched(RequestEvent event, SpanCustomizer customizer) {\n    ResourceMethod method = event.getContainerRequest().getUriInfo().getMatchedResourceMethod();\n    if (method == null) return; // This case is extremely odd as this is called on REQUEST_MATCHED!\n    Invocable i = method.getInvocable();\n    customizer.tag(RESOURCE_CLASS, i.getHandler().getHandlerClass().getSimpleName());\n    customizer.tag(RESOURCE_METHOD, i.getHandlingMethod().getName());\n  }", "signature": "void requestMatched(RequestEvent event, SpanCustomizer customizer)", "full_signature": "protected void requestMatched(RequestEvent event, SpanCustomizer customizer)", "class_method_signature": "EventParser.requestMatched(RequestEvent event, SpanCustomizer customizer)", "testcase": false, "constructor": false, "invocations": ["getMatchedResourceMethod", "getUriInfo", "getContainerRequest", "getInvocable", "tag", "getSimpleName", "getHandlerClass", "getHandler", "tag", "getName", "getHandlingMethod"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}