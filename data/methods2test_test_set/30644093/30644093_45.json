{"test_class": {"identifier": "DefinitionComponentTest", "superclass": "extends AbstractComponentTest", "interfaces": "", "fields": [{"original_string": "private static final String COMPONENT_NAME = \"definition\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_NAME = \"definition\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private Path outputDirectory;", "modifier": "private", "type": "Path", "declarator": "outputDirectory", "var_name": "outputDirectory"}], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/component/DefinitionComponentTest.java"}, "test_case": {"identifier": "testDefinitionComponent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefinitionComponent() throws URISyntaxException {\n        //Given\n        Path file = Paths.get(DefinitionComponentTest.class.getResource(\"/yaml/swagger_petstore.yaml\").toURI());\n        Swagger2MarkupConverter converter = Swagger2MarkupConverter.from(file).build();\n        Swagger swagger = converter.getContext().getSchema();\n\n        Model petModel = swagger.getDefinitions().get(\"Pet\");\n\n        Swagger2MarkupConverter.SwaggerContext context = converter.getContext();\n        MarkupDocBuilder markupDocBuilder = context.createMarkupDocBuilder();\n\n        //When\n        markupDocBuilder = new DefinitionComponent(context, new DefinitionDocumentResolverFromDefinition(context))\n                .apply(markupDocBuilder, DefinitionComponent.parameters(\"Pet\", petModel, 2));\n        markupDocBuilder.writeToFileWithoutExtension(outputDirectory, StandardCharsets.UTF_8);\n\n        //Then\n        Path expectedFile = getExpectedFile(COMPONENT_NAME);\n        DiffUtils.assertThatFileIsEqual(expectedFile, outputDirectory, getReportName(COMPONENT_NAME));\n\n    }", "signature": "void testDefinitionComponent()", "full_signature": "@Test public void testDefinitionComponent()", "class_method_signature": "DefinitionComponentTest.testDefinitionComponent()", "testcase": true, "constructor": false, "invocations": ["get", "toURI", "getResource", "build", "from", "getSchema", "getContext", "get", "getDefinitions", "getContext", "createMarkupDocBuilder", "apply", "parameters", "writeToFileWithoutExtension", "getExpectedFile", "assertThatFileIsEqual", "getReportName"]}, "focal_class": {"identifier": "DefinitionComponent", "superclass": "extends MarkupComponent<DefinitionComponent.Parameters>", "interfaces": "", "fields": [{"original_string": "private static final boolean ALWAYS_DISPLAY_DISCRIMINATOR = false;", "modifier": "private static final", "type": "boolean", "declarator": "ALWAYS_DISPLAY_DISCRIMINATOR = false", "var_name": "ALWAYS_DISPLAY_DISCRIMINATOR"}, {"original_string": "private final Map<String, Model> definitions;", "modifier": "private final", "type": "Map<String, Model>", "declarator": "definitions", "var_name": "definitions"}, {"original_string": "private final Map<ObjectTypePolymorphism.Nature, String> POLYMORPHISM_NATURE;", "modifier": "private final", "type": "Map<ObjectTypePolymorphism.Nature, String>", "declarator": "POLYMORPHISM_NATURE", "var_name": "POLYMORPHISM_NATURE"}, {"original_string": "private final DocumentResolver definitionsDocumentResolver;", "modifier": "private final", "type": "DocumentResolver", "declarator": "definitionsDocumentResolver", "var_name": "definitionsDocumentResolver"}, {"original_string": "private PropertiesTableComponent propertiesTableComponent;", "modifier": "private", "type": "PropertiesTableComponent", "declarator": "propertiesTableComponent", "var_name": "propertiesTableComponent"}], "methods": [{"identifier": "DefinitionComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "modifiers": "public", "return": "", "signature": " DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "full_signature": "public  DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "class_method_signature": "DefinitionComponent.DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "testcase": false, "constructor": true}, {"identifier": "parameters", "parameters": "(String definitionName,\n                                                            Model model,\n                                                            int titleLevel)", "modifiers": "public static", "return": "DefinitionComponent.Parameters", "signature": "DefinitionComponent.Parameters parameters(String definitionName,\n                                                            Model model,\n                                                            int titleLevel)", "full_signature": "public static DefinitionComponent.Parameters parameters(String definitionName,\n                                                            Model model,\n                                                            int titleLevel)", "class_method_signature": "DefinitionComponent.parameters(String definitionName,\n                                                            Model model,\n                                                            int titleLevel)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(MarkupDocBuilder markupDocBuilder, Parameters params)", "modifiers": "@Override public", "return": "MarkupDocBuilder", "signature": "MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "full_signature": "@Override public MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "class_method_signature": "DefinitionComponent.apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "testcase": false, "constructor": false}, {"identifier": "determineDefinitionTitle", "parameters": "(Parameters params)", "modifiers": "private", "return": "String", "signature": "String determineDefinitionTitle(Parameters params)", "full_signature": "private String determineDefinitionTitle(Parameters params)", "class_method_signature": "DefinitionComponent.determineDefinitionTitle(Parameters params)", "testcase": false, "constructor": false}, {"identifier": "addInlineDefinitionTitle", "parameters": "(String title, String anchor, MarkupDocBuilder docBuilder)", "modifiers": "private", "return": "void", "signature": "void addInlineDefinitionTitle(String title, String anchor, MarkupDocBuilder docBuilder)", "full_signature": "private void addInlineDefinitionTitle(String title, String anchor, MarkupDocBuilder docBuilder)", "class_method_signature": "DefinitionComponent.addInlineDefinitionTitle(String title, String anchor, MarkupDocBuilder docBuilder)", "testcase": false, "constructor": false}, {"identifier": "inlineDefinitions", "parameters": "(MarkupDocBuilder markupDocBuilder, List<ObjectType> definitions, String uniquePrefix)", "modifiers": "private", "return": "void", "signature": "void inlineDefinitions(MarkupDocBuilder markupDocBuilder, List<ObjectType> definitions, String uniquePrefix)", "full_signature": "private void inlineDefinitions(MarkupDocBuilder markupDocBuilder, List<ObjectType> definitions, String uniquePrefix)", "class_method_signature": "DefinitionComponent.inlineDefinitions(MarkupDocBuilder markupDocBuilder, List<ObjectType> definitions, String uniquePrefix)", "testcase": false, "constructor": false}, {"identifier": "typeSection", "parameters": "(MarkupDocBuilder markupDocBuilder, String definitionName, Model model)", "modifiers": "private", "return": "List<ObjectType>", "signature": "List<ObjectType> typeSection(MarkupDocBuilder markupDocBuilder, String definitionName, Model model)", "full_signature": "private List<ObjectType> typeSection(MarkupDocBuilder markupDocBuilder, String definitionName, Model model)", "class_method_signature": "DefinitionComponent.typeSection(MarkupDocBuilder markupDocBuilder, String definitionName, Model model)", "testcase": false, "constructor": false}, {"identifier": "applyDefinitionsDocumentExtension", "parameters": "(Context context)", "modifiers": "private", "return": "void", "signature": "void applyDefinitionsDocumentExtension(Context context)", "full_signature": "private void applyDefinitionsDocumentExtension(Context context)", "class_method_signature": "DefinitionComponent.applyDefinitionsDocumentExtension(Context context)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/component/DefinitionComponent.java"}, "focal_method": {"identifier": "DefinitionComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "modifiers": "public", "return": "", "body": "public DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver) {\n        super(context);\n        this.definitions = context.getSchema().getDefinitions();\n        this.definitionsDocumentResolver = definitionsDocumentResolver;\n        POLYMORPHISM_NATURE = new HashMap<ObjectTypePolymorphism.Nature, String>() {{\n            put(ObjectTypePolymorphism.Nature.COMPOSITION, labels.getLabel(POLYMORPHISM_NATURE_COMPOSITION));\n            put(ObjectTypePolymorphism.Nature.INHERITANCE, labels.getLabel(POLYMORPHISM_NATURE_INHERITANCE));\n        }};\n        propertiesTableComponent = new PropertiesTableComponent(context, definitionsDocumentResolver);\n    }", "signature": " DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "full_signature": "public  DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "class_method_signature": "DefinitionComponent.DefinitionComponent(Swagger2MarkupConverter.SwaggerContext context,\n                               DocumentResolver definitionsDocumentResolver)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}