{"test_class": {"identifier": "AesTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/security/AesTest.java"}, "test_case": {"identifier": "testAes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAes() {\n\n        SecretKey key = AES.generateKey();\n        \n        String encoded = AES.encodeSecretKey(key);\n        \n        SecretKey key1 = AES.decodeSecretKey(encoded);\n        \n        String encoded1 = AES.encodeSecretKey(key1);\n        \n        assertEquals(encoded, encoded1);\n    }", "signature": "void testAes()", "full_signature": "@Test public void testAes()", "class_method_signature": "AesTest.testAes()", "testcase": true, "constructor": false, "invocations": ["generateKey", "encodeSecretKey", "decodeSecretKey", "encodeSecretKey", "assertEquals"]}, "focal_class": {"identifier": "AES", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ALGORITHM    = \"AES\";", "modifier": "public static final", "type": "String", "declarator": "ALGORITHM    = \"AES\"", "var_name": "ALGORITHM"}, {"original_string": "public static final int    DEFAULT_SIZE = 256;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SIZE = 256", "var_name": "DEFAULT_SIZE"}, {"original_string": "private static final KeyGenerator g;", "modifier": "private static final", "type": "KeyGenerator", "declarator": "g", "var_name": "g"}], "methods": [{"identifier": "generateKey", "parameters": "()", "modifiers": "public static", "return": "SecretKey", "signature": "SecretKey generateKey()", "full_signature": "public static SecretKey generateKey()", "class_method_signature": "AES.generateKey()", "testcase": false, "constructor": false}, {"identifier": "encodeSecretKey", "parameters": "(SecretKey key)", "modifiers": "public static", "return": "String", "signature": "String encodeSecretKey(SecretKey key)", "full_signature": "public static String encodeSecretKey(SecretKey key)", "class_method_signature": "AES.encodeSecretKey(SecretKey key)", "testcase": false, "constructor": false}, {"identifier": "decodeSecretKey", "parameters": "(String encoded)", "modifiers": "public static", "return": "SecretKey", "signature": "SecretKey decodeSecretKey(String encoded)", "full_signature": "public static SecretKey decodeSecretKey(String encoded)", "class_method_signature": "AES.decodeSecretKey(String encoded)", "testcase": false, "constructor": false}, {"identifier": "AES", "parameters": "()", "modifiers": "protected", "return": "", "signature": " AES()", "full_signature": "protected  AES()", "class_method_signature": "AES.AES()", "testcase": false, "constructor": true}], "file": "base/lang/src/main/java/leap/lang/security/AES.java"}, "focal_method": {"identifier": "AES", "parameters": "()", "modifiers": "protected", "return": "", "body": "protected AES() {\n        \n    }", "signature": " AES()", "full_signature": "protected  AES()", "class_method_signature": "AES.AES()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}