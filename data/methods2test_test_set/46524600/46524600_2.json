{"test_class": {"identifier": "TestMediaType", "superclass": "", "interfaces": "", "fields": [], "file": "nuxeo-java-client/src/test/java/org/nuxeo/client/TestMediaType.java"}, "test_case": {"identifier": "testEqualsTypeSubTypeWithoutSuffix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsTypeSubTypeWithoutSuffix() {\n        MediaType mediaType1 = MediaType.parse(\"application/json; charset=UTF-8\");\n        MediaType mediaType2 = MediaType.parse(\"application/json+nxentity; charset=UTF-8\");\n        assertTrue(mediaType1.equalsTypeSubTypeWithoutSuffix(mediaType2));\n        assertTrue(mediaType2.equalsTypeSubTypeWithoutSuffix(mediaType1));\n    }", "signature": "void testEqualsTypeSubTypeWithoutSuffix()", "full_signature": "@Test public void testEqualsTypeSubTypeWithoutSuffix()", "class_method_signature": "TestMediaType.testEqualsTypeSubTypeWithoutSuffix()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "assertTrue", "equalsTypeSubTypeWithoutSuffix", "assertTrue", "equalsTypeSubTypeWithoutSuffix"]}, "focal_class": {"identifier": "MediaType", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TOKEN = \"([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN = \"([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)\"", "var_name": "TOKEN"}, {"original_string": "private static final String QUOTED = \"\\\"([^\\\"]*)\\\"\";", "modifier": "private static final", "type": "String", "declarator": "QUOTED = \"\\\"([^\\\"]*)\\\"\"", "var_name": "QUOTED"}, {"original_string": "private static final Pattern TYPE_SUBTYPE = Pattern.compile(TOKEN + \"/\" + TOKEN);", "modifier": "private static final", "type": "Pattern", "declarator": "TYPE_SUBTYPE = Pattern.compile(TOKEN + \"/\" + TOKEN)", "var_name": "TYPE_SUBTYPE"}, {"original_string": "private static final Pattern PARAMETER = Pattern.compile(\n            \";\\\\s*(?:\" + TOKEN + \"=(?:\" + TOKEN + \"|\" + QUOTED + \"))?\");", "modifier": "private static final", "type": "Pattern", "declarator": "PARAMETER = Pattern.compile(\n            \";\\\\s*(?:\" + TOKEN + \"=(?:\" + TOKEN + \"|\" + QUOTED + \"))?\")", "var_name": "PARAMETER"}, {"original_string": "protected static final String DEFAULT_STRING = \"application/octet-stream\";", "modifier": "protected static final", "type": "String", "declarator": "DEFAULT_STRING = \"application/octet-stream\"", "var_name": "DEFAULT_STRING"}, {"original_string": "protected static final MediaType DEFAULT = parse(DEFAULT_STRING);", "modifier": "protected static final", "type": "MediaType", "declarator": "DEFAULT = parse(DEFAULT_STRING)", "var_name": "DEFAULT"}, {"original_string": "private final String originalString;", "modifier": "private final", "type": "String", "declarator": "originalString", "var_name": "originalString"}, {"original_string": "private final String type;", "modifier": "private final", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private final String subtype;", "modifier": "private final", "type": "String", "declarator": "subtype", "var_name": "subtype"}, {"original_string": "private final String charset;", "modifier": "private final", "type": "String", "declarator": "charset", "var_name": "charset"}, {"original_string": "private final String nuxeoEntity;", "modifier": "private final", "type": "String", "declarator": "nuxeoEntity", "var_name": "nuxeoEntity"}], "methods": [{"identifier": "MediaType", "parameters": "(String originalString, String type, String subtype, String charset, String nuxeoEntity)", "modifiers": "private", "return": "", "signature": " MediaType(String originalString, String type, String subtype, String charset, String nuxeoEntity)", "full_signature": "private  MediaType(String originalString, String type, String subtype, String charset, String nuxeoEntity)", "class_method_signature": "MediaType.MediaType(String originalString, String type, String subtype, String charset, String nuxeoEntity)", "testcase": false, "constructor": true}, {"identifier": "type", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String type()", "full_signature": "public String type()", "class_method_signature": "MediaType.type()", "testcase": false, "constructor": false}, {"identifier": "subtype", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String subtype()", "full_signature": "public String subtype()", "class_method_signature": "MediaType.subtype()", "testcase": false, "constructor": false}, {"identifier": "charset", "parameters": "()", "modifiers": "public", "return": "Charset", "signature": "Charset charset()", "full_signature": "public Charset charset()", "class_method_signature": "MediaType.charset()", "testcase": false, "constructor": false}, {"identifier": "nuxeoEntity", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nuxeoEntity()", "full_signature": "public String nuxeoEntity()", "class_method_signature": "MediaType.nuxeoEntity()", "testcase": false, "constructor": false}, {"identifier": "charset", "parameters": "(Charset defaultValue)", "modifiers": "public", "return": "Charset", "signature": "Charset charset(Charset defaultValue)", "full_signature": "public Charset charset(Charset defaultValue)", "class_method_signature": "MediaType.charset(Charset defaultValue)", "testcase": false, "constructor": false}, {"identifier": "toOkHttpMediaType", "parameters": "()", "modifiers": "public", "return": "okhttp3.MediaType", "signature": "okhttp3.MediaType toOkHttpMediaType()", "full_signature": "public okhttp3.MediaType toOkHttpMediaType()", "class_method_signature": "MediaType.toOkHttpMediaType()", "testcase": false, "constructor": false}, {"identifier": "equalsType", "parameters": "(MediaType mediaType)", "modifiers": "public", "return": "boolean", "signature": "boolean equalsType(MediaType mediaType)", "full_signature": "public boolean equalsType(MediaType mediaType)", "class_method_signature": "MediaType.equalsType(MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "equalsTypeSubType", "parameters": "(MediaType mediaType)", "modifiers": "public", "return": "boolean", "signature": "boolean equalsTypeSubType(MediaType mediaType)", "full_signature": "public boolean equalsTypeSubType(MediaType mediaType)", "class_method_signature": "MediaType.equalsTypeSubType(MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "equalsTypeSubTypeWithoutSuffix", "parameters": "(MediaType mediaType)", "modifiers": "public", "return": "boolean", "signature": "boolean equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "full_signature": "public boolean equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "class_method_signature": "MediaType.equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MediaType.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "MediaType.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MediaType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "fromOkHttpMediaType", "parameters": "(okhttp3.MediaType mediaType)", "modifiers": "public static", "return": "MediaType", "signature": "MediaType fromOkHttpMediaType(okhttp3.MediaType mediaType)", "full_signature": "public static MediaType fromOkHttpMediaType(okhttp3.MediaType mediaType)", "class_method_signature": "MediaType.fromOkHttpMediaType(okhttp3.MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String string)", "modifiers": "public static", "return": "MediaType", "signature": "MediaType parse(String string)", "full_signature": "public static MediaType parse(String string)", "class_method_signature": "MediaType.parse(String string)", "testcase": false, "constructor": false}], "file": "nuxeo-java-client/src/main/java/org/nuxeo/client/MediaType.java"}, "focal_method": {"identifier": "equalsTypeSubTypeWithoutSuffix", "parameters": "(MediaType mediaType)", "modifiers": "public", "return": "boolean", "body": "public boolean equalsTypeSubTypeWithoutSuffix(MediaType mediaType) {\n        if (equalsType(mediaType)) {\n            UnaryOperator<String> removeSuffix = s -> s.replaceAll(\"\\\\+.*\", \"\");\n            String thisSubtype = removeSuffix.apply(subtype);\n            String givenSubtype = removeSuffix.apply(mediaType.subtype);\n            return thisSubtype.equals(givenSubtype);\n        }\n        return false;\n    }", "signature": "boolean equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "full_signature": "public boolean equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "class_method_signature": "MediaType.equalsTypeSubTypeWithoutSuffix(MediaType mediaType)", "testcase": false, "constructor": false, "invocations": ["equalsType", "replaceAll", "apply", "apply", "equals"]}, "repository": {"repo_id": 46524600, "url": "https://github.com/nuxeo/nuxeo-java-client", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 10, "size": 7849, "license": "licensed"}}