{"test_class": {"identifier": "TavernTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Tavern tavern = new Tavern();", "modifier": "private", "type": "Tavern", "declarator": "tavern = new Tavern()", "var_name": "tavern"}], "file": "tavern-core/src/test/java/com/dianping/tavern/TavernTest.java"}, "test_case": {"identifier": "testInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInit() throws IOException {\n        MockServletContext servletContext = new MockServletContext();\n        tavern.addPlugin(new SpringTavernPlugin());\n        servletContext.addInitParameter(\"contextConfigLocation\",\"classpath*:spring/appcontext-*.xml\");\n        tavern.setServletContext(servletContext);\n\t\ttavern.init();\n        tavern.resolve();\n        Application currentApplication = Tavern.getCurrentApplication(getClass());\n        TestBean bean = currentApplication.getBean(\"testBean\");\n        assertNotNull(bean);\n        bean = currentApplication.getBean(TestBean.class);\n        assertNotNull(bean);\n    }", "signature": "void testInit()", "full_signature": "@Test public void testInit()", "class_method_signature": "TavernTest.testInit()", "testcase": true, "constructor": false, "invocations": ["addPlugin", "addInitParameter", "setServletContext", "init", "resolve", "getCurrentApplication", "getClass", "getBean", "assertNotNull", "getBean", "assertNotNull"]}, "focal_class": {"identifier": "Tavern", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<TavernPlugin> plugins = new ArrayList<TavernPlugin>();", "modifier": "private static", "type": "List<TavernPlugin>", "declarator": "plugins = new ArrayList<TavernPlugin>()", "var_name": "plugins"}, {"original_string": "private static Set<Class<?>> pluginClazzSet = new HashSet<Class<?>>();", "modifier": "private static", "type": "Set<Class<?>>", "declarator": "pluginClazzSet = new HashSet<Class<?>>()", "var_name": "pluginClazzSet"}, {"original_string": "public static final String GLOBAL_APPLICATION = \"_global\";", "modifier": "public static final", "type": "String", "declarator": "GLOBAL_APPLICATION = \"_global\"", "var_name": "GLOBAL_APPLICATION"}, {"original_string": "private TavernApplicationContainer tavernApplicationContainer = TavernApplicationContainer.getInstance();", "modifier": "private", "type": "TavernApplicationContainer", "declarator": "tavernApplicationContainer = TavernApplicationContainer.getInstance()", "var_name": "tavernApplicationContainer"}, {"original_string": "private List<Application> applicationList = new ArrayList<Application>();", "modifier": "private", "type": "List<Application>", "declarator": "applicationList = new ArrayList<Application>()", "var_name": "applicationList"}, {"original_string": "private ApplicationConfigParser parser = getParser();", "modifier": "private", "type": "ApplicationConfigParser", "declarator": "parser = getParser()", "var_name": "parser"}, {"original_string": "private ServletContext servletContext;", "modifier": "private", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}], "methods": [{"identifier": "contexts", "parameters": "()", "modifiers": "public static", "return": "TavernApplicationContainer", "signature": "TavernApplicationContainer contexts()", "full_signature": "public static TavernApplicationContainer contexts()", "class_method_signature": "Tavern.contexts()", "testcase": false, "constructor": false}, {"identifier": "getCurrentApplication", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "Application", "signature": "Application getCurrentApplication(Class<?> clazz)", "full_signature": "public static Application getCurrentApplication(Class<?> clazz)", "class_method_signature": "Tavern.getCurrentApplication(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getCurrentApplication", "parameters": "(String clazzName)", "modifiers": "public static", "return": "Application", "signature": "Application getCurrentApplication(String clazzName)", "full_signature": "public static Application getCurrentApplication(String clazzName)", "class_method_signature": "Tavern.getCurrentApplication(String clazzName)", "testcase": false, "constructor": false}, {"identifier": "getRoottApplication", "parameters": "()", "modifiers": "public static", "return": "Application", "signature": "Application getRoottApplication()", "full_signature": "public static Application getRoottApplication()", "class_method_signature": "Tavern.getRoottApplication()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "Tavern.init()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "Tavern.run()", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resolve()", "full_signature": "public void resolve()", "class_method_signature": "Tavern.resolve()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "Tavern.destroy()", "testcase": false, "constructor": false}, {"identifier": "addPlugin", "parameters": "(TavernPlugin plugin)", "modifiers": "public static", "return": "void", "signature": "void addPlugin(TavernPlugin plugin)", "full_signature": "public static void addPlugin(TavernPlugin plugin)", "class_method_signature": "Tavern.addPlugin(TavernPlugin plugin)", "testcase": false, "constructor": false}, {"identifier": "getParser", "parameters": "()", "modifiers": "protected", "return": "ApplicationConfigParser", "signature": "ApplicationConfigParser getParser()", "full_signature": "protected ApplicationConfigParser getParser()", "class_method_signature": "Tavern.getParser()", "testcase": false, "constructor": false}, {"identifier": "setServletContext", "parameters": "(ServletContext servletContext)", "modifiers": "public", "return": "void", "signature": "void setServletContext(ServletContext servletContext)", "full_signature": "public void setServletContext(ServletContext servletContext)", "class_method_signature": "Tavern.setServletContext(ServletContext servletContext)", "testcase": false, "constructor": false}], "file": "tavern-core/src/main/java/com/dianping/tavern/Tavern.java"}, "focal_method": {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void init() throws IOException {\n        Enumeration<URL> resources = getClass().getClassLoader().getResources(\"app.xml\");\n        while (resources.hasMoreElements()) {\n            URL url = resources.nextElement();\n            URLConnection urlConnection = url.openConnection();\n            urlConnection.connect();\n            ApplicationConfig config = parser.parse(urlConnection.getInputStream());\n            Assert.notNull(config.getName(), \"Name of application must not be null!\");\n            Application application = new Application(config, ResourceUtils.extractJarFileURL(url).toString());\n            tavernApplicationContainer.register(application);\n            applicationList.add(application);\n        }\n        ApplicationConfig globalConfig = new ApplicationConfig();\n        globalConfig.setName(GLOBAL_APPLICATION);\n        Application globalApplication = new Application(globalConfig, null);\n        globalApplication.setRoot(true);\n        tavernApplicationContainer.register(globalApplication);\n        applicationList.add(globalApplication);\n        for (Application application : applicationList) {\n            PluginContext pluginContext = new PluginContext(application, tavernApplicationContainer, servletContext);\n            for (TavernPlugin plugin : plugins) {\n                plugin.init(pluginContext);\n            }\n        }\n    }", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "Tavern.init()", "testcase": false, "constructor": false, "invocations": ["getResources", "getClassLoader", "getClass", "hasMoreElements", "nextElement", "openConnection", "connect", "parse", "getInputStream", "notNull", "getName", "toString", "extractJarFileURL", "register", "add", "setName", "setRoot", "register", "add", "init"]}, "repository": {"repo_id": 15026183, "url": "https://github.com/code4craft/tavern", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 224, "license": "licensed"}}