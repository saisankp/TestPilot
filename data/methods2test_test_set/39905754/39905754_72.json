{"test_class": {"identifier": "CodeLineTest", "superclass": "", "interfaces": "", "fields": [], "file": "Beirut/2016/2016-01-20-codeline/src/test/java/CodeLineTest.java"}, "test_case": {"identifier": "acceptance_test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void acceptance_test() throws IOException {\n      assertThat(CodeLine.lineCount(codeLines().add(\"/*****\")\n        .add(\" * This is a test program with 5 lines of code\")\n        .add(\" *  \\\\/* no nesting allowed!\")\n        .add(\" //*****//***///Slightly pathological comment ending...\")\n        .add(\"\")\n        .add(\"class sample {\")\n        .add(\" public static final void main(String [] args) { // gotta love Java\")\n        .add(\" // Say hello\")\n        .add(\"System./*wait*/out./*for*/println/*it*/('Hello/*');\")\n        .build())).isEqualTo(3);\n\n\n\n\n\n         }", "signature": "void acceptance_test()", "full_signature": "@Test public void acceptance_test()", "class_method_signature": "CodeLineTest.acceptance_test()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "lineCount", "build", "add", "add", "add", "add", "add", "add", "add", "add", "add", "codeLines"]}, "focal_class": {"identifier": "CodeLine", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "lineCount", "parameters": "(List<String> lines)", "modifiers": "public static", "return": "long", "signature": "long lineCount(List<String> lines)", "full_signature": "public static long lineCount(List<String> lines)", "class_method_signature": "CodeLine.lineCount(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "listWithoutDoubleSlashComments", "parameters": "(List<String> lines)", "modifiers": "private static", "return": "Stream<String>", "signature": "Stream<String> listWithoutDoubleSlashComments(List<String> lines)", "full_signature": "private static Stream<String> listWithoutDoubleSlashComments(List<String> lines)", "class_method_signature": "CodeLine.listWithoutDoubleSlashComments(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "linesWithoutBackslashStarComment", "parameters": "(List<String> lines)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> linesWithoutBackslashStarComment(List<String> lines)", "full_signature": "private static List<String> linesWithoutBackslashStarComment(List<String> lines)", "class_method_signature": "CodeLine.linesWithoutBackslashStarComment(List<String> lines)", "testcase": false, "constructor": false}], "file": "Beirut/2016/2016-01-20-codeline/src/main/java/CodeLine.java"}, "focal_method": {"identifier": "lineCount", "parameters": "(List<String> lines)", "modifiers": "public static", "return": "long", "body": "public static long lineCount(List<String> lines) throws IOException {\n      List<String> strings = linesWithoutBackslashStarComment(lines);\n      return  listWithoutDoubleSlashComments(strings).count();\n   }", "signature": "long lineCount(List<String> lines)", "full_signature": "public static long lineCount(List<String> lines)", "class_method_signature": "CodeLine.lineCount(List<String> lines)", "testcase": false, "constructor": false, "invocations": ["linesWithoutBackslashStarComment", "count", "listWithoutDoubleSlashComments"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}