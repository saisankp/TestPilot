{"test_class": {"identifier": "FetcherTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula29-composing-monads/src/test/java/org/javasync/idioms/FetcherTest.java"}, "test_case": {"identifier": "testfetchAndSumBodies", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testfetchAndSumBodies() throws Exception {\n        try(Fetcher fetcher = new Fetcher()) {\n            fetcher\n                .fetchAndSumBodies(\"https://stackoverflow.com/\", \"https://dzone.com/\", \"https://github.com\")\n                .thenAccept(sum -> assertEquals(527801, sum.intValue()))\n                .join();\n\n        }\n    }", "signature": "void testfetchAndSumBodies()", "full_signature": "@Test public void testfetchAndSumBodies()", "class_method_signature": "FetcherTest.testfetchAndSumBodies()", "testcase": true, "constructor": false, "invocations": ["join", "thenAccept", "fetchAndSumBodies", "assertEquals", "intValue"]}, "focal_class": {"identifier": "Fetcher", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "final AsyncHttpClient asyncHttpClient = Dsl.asyncHttpClient();", "modifier": "final", "type": "AsyncHttpClient", "declarator": "asyncHttpClient = Dsl.asyncHttpClient()", "var_name": "asyncHttpClient"}], "methods": [{"identifier": "fetchAndSumBodies", "parameters": "(Path folder)", "modifiers": "public", "return": "CompletableFuture<Integer>", "signature": "CompletableFuture<Integer> fetchAndSumBodies(Path folder)", "full_signature": "public CompletableFuture<Integer> fetchAndSumBodies(Path folder)", "class_method_signature": "Fetcher.fetchAndSumBodies(Path folder)", "testcase": false, "constructor": false}, {"identifier": "fetchAndSumBodies", "parameters": "(String...urls)", "modifiers": "public", "return": "CompletableFuture<Integer>", "signature": "CompletableFuture<Integer> fetchAndSumBodies(String...urls)", "full_signature": "public CompletableFuture<Integer> fetchAndSumBodies(String...urls)", "class_method_signature": "Fetcher.fetchAndSumBodies(String...urls)", "testcase": false, "constructor": false}, {"identifier": "fetchBodyLength", "parameters": "(String url)", "modifiers": "private", "return": "CompletableFuture<Integer>", "signature": "CompletableFuture<Integer> fetchBodyLength(String url)", "full_signature": "private CompletableFuture<Integer> fetchBodyLength(String url)", "class_method_signature": "Fetcher.fetchBodyLength(String url)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Fetcher.close()", "testcase": false, "constructor": false}], "file": "aula29-composing-monads/src/main/java/org/javasync/idioms/Fetcher.java"}, "focal_method": {"identifier": "fetchAndSumBodies", "parameters": "(Path folder)", "modifiers": "public", "return": "CompletableFuture<Integer>", "body": "public CompletableFuture<Integer> fetchAndSumBodies(Path folder) throws IOException {\n        return Files\n            .walk(folder)          // Stream<Path>\n            .filter(Files::isRegularFile)     // Stream<Path>\n            .map(path -> AsyncFiles.readAll(path)) // Stream<CF<String>>\n            .map(cf -> cf.thenCompose(url -> fetchBodyLength(url))) //Stream<Cf<Integer>\n            .reduce((prev, curr) -> prev.thenCombine(curr, (l1, l2) -> l1 + l2))\n            .get();\n    }", "signature": "CompletableFuture<Integer> fetchAndSumBodies(Path folder)", "full_signature": "public CompletableFuture<Integer> fetchAndSumBodies(Path folder)", "class_method_signature": "Fetcher.fetchAndSumBodies(Path folder)", "testcase": false, "constructor": false, "invocations": ["get", "reduce", "map", "map", "filter", "walk", "readAll", "thenCompose", "fetchBodyLength", "thenCombine"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}