{"test_class": {"identifier": "SizePipeTest", "superclass": "extends PipeTestBase<SizePipe>", "interfaces": "", "fields": [], "file": "core/src/test/java/nl/nn/adapterframework/pipes/SizePipeTest.java"}, "test_case": {"identifier": "testDoPipeSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\npublic void testDoPipeSuccess() throws Exception {\n    PipeRunResult res = doPipe(pipe, \"abcsd\", session);\n    assertEquals( \"5\", res.getResult().asString());\n}", "signature": "void testDoPipeSuccess()", "full_signature": "@Test public void testDoPipeSuccess()", "class_method_signature": "SizePipeTest.testDoPipeSuccess()", "testcase": true, "constructor": false, "invocations": ["doPipe", "assertEquals", "asString", "getResult"]}, "focal_class": {"identifier": "SizePipe", "superclass": "extends FixedForwardPipe", "interfaces": "", "fields": [], "methods": [{"identifier": "doPipe", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "@Override public", "return": "PipeRunResult", "signature": "PipeRunResult doPipe(Message message, IPipeLineSession session)", "full_signature": "@Override public PipeRunResult doPipe(Message message, IPipeLineSession session)", "class_method_signature": "SizePipe.doPipe(Message message, IPipeLineSession session)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/pipes/SizePipe.java"}, "focal_method": {"identifier": "doPipe", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "@Override public", "return": "PipeRunResult", "body": "@Override\n\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n\t\ttry {\n\t\t\tint size = -1;\n\t\t\tObject input = message.asObject();\n\t\t\tif (input instanceof String) {\n\t\t\t\tsize = ((String)input).length();\n\t\t\t} else if (input instanceof byte[]) {\n\t\t\t\tsize = ((byte[])input).length;\n\t\t\t}\n\t\t\treturn new PipeRunResult(getForward(), \"\" + size);\n\t\t} catch(Exception e) {\n\t\t\tthrow new PipeRunException(this, \"Error while transforming input\", e);\n\t\t}\n\t}", "signature": "PipeRunResult doPipe(Message message, IPipeLineSession session)", "full_signature": "@Override public PipeRunResult doPipe(Message message, IPipeLineSession session)", "class_method_signature": "SizePipe.doPipe(Message message, IPipeLineSession session)", "testcase": false, "constructor": false, "invocations": ["asObject", "length", "getForward"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}