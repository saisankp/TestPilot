{"test_class": {"identifier": "HanserRingFinderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HanserRingFinder finder;", "modifier": "private", "type": "HanserRingFinder", "declarator": "finder", "var_name": "finder"}], "file": "legacy/src/test/java/org/openscience/cdk/smsd/ring/HanserRingFinderTest.java"}, "test_case": {"identifier": "testFindRings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindRings() {\n        IAtomContainer molecule = null;\n        HanserRingFinder instance = new HanserRingFinder();\n        Collection expResult = null;\n        Collection result = instance.findRings(molecule);\n        assertEquals(expResult, result);\n    }", "signature": "void testFindRings()", "full_signature": "@Test public void testFindRings()", "class_method_signature": "HanserRingFinderTest.testFindRings()", "testcase": true, "constructor": false, "invocations": ["findRings", "assertEquals"]}, "focal_class": {"identifier": "HanserRingFinder", "superclass": "", "interfaces": "implements RingFinder", "fields": [{"original_string": "private List<List<IAtom>> rings;", "modifier": "private", "type": "List<List<IAtom>>", "declarator": "rings", "var_name": "rings"}], "methods": [{"identifier": "HanserRingFinder", "parameters": "()", "modifiers": "public", "return": "", "signature": " HanserRingFinder()", "full_signature": "public  HanserRingFinder()", "class_method_signature": "HanserRingFinder.HanserRingFinder()", "testcase": false, "constructor": true}, {"identifier": "findRings", "parameters": "(IAtomContainer molecule)", "modifiers": "@Override public", "return": "Collection<List<IAtom>>", "signature": "Collection<List<IAtom>> findRings(IAtomContainer molecule)", "full_signature": "@Override public Collection<List<IAtom>> findRings(IAtomContainer molecule)", "class_method_signature": "HanserRingFinder.findRings(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "getRingSet", "parameters": "(IAtomContainer molecule)", "modifiers": "@Override public", "return": "IRingSet", "signature": "IRingSet getRingSet(IAtomContainer molecule)", "full_signature": "@Override public IRingSet getRingSet(IAtomContainer molecule)", "class_method_signature": "HanserRingFinder.getRingSet(IAtomContainer molecule)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/smsd/ring/HanserRingFinder.java"}, "focal_method": {"identifier": "findRings", "parameters": "(IAtomContainer molecule)", "modifiers": "@Override public", "return": "Collection<List<IAtom>>", "body": "@Override\n    public Collection<List<IAtom>> findRings(IAtomContainer molecule) {\n        if (molecule == null) return null;\n        rings.clear();\n        PathGraph graph = new PathGraph(molecule);\n\n        for (int i = 0; i < molecule.getAtomCount(); i++) {\n            List<PathEdge> edges = graph.remove(molecule.getAtom(i));\n\n            for (PathEdge edge : edges) {\n                List<IAtom> ring = edge.getAtoms();\n                rings.add(ring);\n            }\n        }\n\n        return rings;\n    }", "signature": "Collection<List<IAtom>> findRings(IAtomContainer molecule)", "full_signature": "@Override public Collection<List<IAtom>> findRings(IAtomContainer molecule)", "class_method_signature": "HanserRingFinder.findRings(IAtomContainer molecule)", "testcase": false, "constructor": false, "invocations": ["clear", "getAtomCount", "remove", "getAtom", "getAtoms", "add"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}