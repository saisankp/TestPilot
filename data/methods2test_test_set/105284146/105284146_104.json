{"test_class": {"identifier": "LimitViolationComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "security-analysis-api/src/test/java/com/powsybl/security/comparator/LimitViolationComparatorTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compare() {\n        LimitViolation line1Violation1 = new LimitViolation(\"NHV1_NHV2_1\", LimitViolationType.CURRENT, null, Integer.MAX_VALUE, 1000.0, 0.95f, 1100.0, Branch.Side.ONE);\n        LimitViolation line1Violation2 = new LimitViolation(\"NHV1_NHV2_1\", LimitViolationType.CURRENT, null, Integer.MAX_VALUE, 1000.0, 0.95f, 1100.0, Branch.Side.TWO);\n        LimitViolation line2Violation = new LimitViolation(\"NHV1_NHV2_2\", LimitViolationType.CURRENT, null, Integer.MAX_VALUE, 900.0, 0.95f, 950.0, Branch.Side.ONE);\n        LimitViolation vl1Violation1 = new LimitViolation(\"VL1\", LimitViolationType.HIGH_VOLTAGE, 200.0, 1, 250.0);\n        LimitViolation vl1Violation2 = new LimitViolation(\"VL1\", LimitViolationType.HIGH_SHORT_CIRCUIT_CURRENT, 200.0, 1, 250.0);\n\n        List<LimitViolation> violations = Arrays.asList(line1Violation2, vl1Violation1, line2Violation, line1Violation1, vl1Violation2);\n        Collections.sort(violations, new LimitViolationComparator());\n\n        assertEquals(line1Violation1, violations.get(0));\n        assertEquals(line1Violation2, violations.get(1));\n        assertEquals(line2Violation, violations.get(2));\n        assertEquals(vl1Violation1, violations.get(3));\n        assertEquals(vl1Violation2, violations.get(4));\n    }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "LimitViolationComparatorTest.compare()", "testcase": true, "constructor": false, "invocations": ["asList", "sort", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "LimitViolationComparator", "superclass": "", "interfaces": "implements Comparator<LimitViolation>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(LimitViolation violation1, LimitViolation violation2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(LimitViolation violation1, LimitViolation violation2)", "full_signature": "@Override public int compare(LimitViolation violation1, LimitViolation violation2)", "class_method_signature": "LimitViolationComparator.compare(LimitViolation violation1, LimitViolation violation2)", "testcase": false, "constructor": false}], "file": "security-analysis-api/src/main/java/com/powsybl/security/comparator/LimitViolationComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(LimitViolation violation1, LimitViolation violation2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(LimitViolation violation1, LimitViolation violation2) {\n        Objects.requireNonNull(violation1);\n        Objects.requireNonNull(violation2);\n        if (violation1.getSubjectId().compareTo(violation2.getSubjectId()) == 0) {\n            if (violation1.getLimitType().compareTo(violation2.getLimitType()) == 0) {\n                if (LimitViolationType.CURRENT == violation1.getLimitType()) {\n                    return violation1.getSide().compareTo(violation2.getSide());\n                }\n                return 0;\n            }\n            return violation1.getLimitType().compareTo(violation2.getLimitType());\n        }\n        return violation1.getSubjectId().compareTo(violation2.getSubjectId());\n    }", "signature": "int compare(LimitViolation violation1, LimitViolation violation2)", "full_signature": "@Override public int compare(LimitViolation violation1, LimitViolation violation2)", "class_method_signature": "LimitViolationComparator.compare(LimitViolation violation1, LimitViolation violation2)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "compareTo", "getSubjectId", "getSubjectId", "compareTo", "getLimitType", "getLimitType", "getLimitType", "compareTo", "getSide", "getSide", "compareTo", "getLimitType", "getLimitType", "compareTo", "getSubjectId", "getSubjectId"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}