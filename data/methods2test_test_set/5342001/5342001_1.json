{"test_class": {"identifier": "MapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate Mapper mapper;", "modifier": "@Autowired\n\tprivate", "type": "Mapper", "declarator": "mapper", "var_name": "mapper"}], "file": "seedboxer-web/src/test/java/net/seedboxer/web/utils/mapper/MapperTest.java"}, "test_case": {"identifier": "shouldDetectAnnotationAndMapObjectToDTO", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldDetectAnnotationAndMapObjectToDTO() {\n\t\tMovieInfo m = new MovieInfo(\"Iron Man 3\", 2013, \"HD\");\n\t\tObject dto = mapper.map(m);\n\t\tassertTrue(dto instanceof Movie);\n\t\tassertEquals(\"Iron Man 3\", ((Movie)dto).getName());\n\t\tassertEquals(new Integer(2013), ((Movie)dto).getYear());\n\t\tassertEquals(Quality.HD, ((Movie)dto).getQuality());\n\t}", "signature": "void shouldDetectAnnotationAndMapObjectToDTO()", "full_signature": "@Test public void shouldDetectAnnotationAndMapObjectToDTO()", "class_method_signature": "MapperTest.shouldDetectAnnotationAndMapObjectToDTO()", "testcase": true, "constructor": false, "invocations": ["map", "assertTrue", "assertEquals", "getName", "assertEquals", "getYear", "assertEquals", "getQuality"]}, "focal_class": {"identifier": "Mapper", "superclass": "", "interfaces": "implements ResourceLoaderAware", "fields": [{"original_string": "private final Class<MapToObject> MAPPER_ANNOTATION = MapToObject.class;", "modifier": "private final", "type": "Class<MapToObject>", "declarator": "MAPPER_ANNOTATION = MapToObject.class", "var_name": "MAPPER_ANNOTATION"}, {"original_string": "private static final String CLASS_RESOURCE_PATTERN = \"**/*.class\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_RESOURCE_PATTERN = \"**/*.class\"", "var_name": "CLASS_RESOURCE_PATTERN"}, {"original_string": "private ResourcePatternResolver resourcePatternResolver;", "modifier": "private", "type": "ResourcePatternResolver", "declarator": "resourcePatternResolver", "var_name": "resourcePatternResolver"}, {"original_string": "private MetadataReaderFactory metadataReaderFactory = new SimpleMetadataReaderFactory();", "modifier": "private", "type": "MetadataReaderFactory", "declarator": "metadataReaderFactory = new SimpleMetadataReaderFactory()", "var_name": "metadataReaderFactory"}, {"original_string": "private final TypeFilter annotationFilter = new AnnotationTypeFilter(MAPPER_ANNOTATION);", "modifier": "private final", "type": "TypeFilter", "declarator": "annotationFilter = new AnnotationTypeFilter(MAPPER_ANNOTATION)", "var_name": "annotationFilter"}, {"original_string": "@Value(value=\"${mapper.packages}\")\n\tprivate List<String> packages;", "modifier": "@Value(value=\"${mapper.packages}\")\n\tprivate", "type": "List<String>", "declarator": "packages", "var_name": "packages"}, {"original_string": "private Map<Class<?>, Class<?>> mappings;", "modifier": "private", "type": "Map<Class<?>, Class<?>>", "declarator": "mappings", "var_name": "mappings"}, {"original_string": "private final ModelMapper modelMapper = new ModelMapper();", "modifier": "private final", "type": "ModelMapper", "declarator": "modelMapper = new ModelMapper()", "var_name": "modelMapper"}], "methods": [{"identifier": "setPackages", "parameters": "(List<String> packages)", "modifiers": "public", "return": "void", "signature": "void setPackages(List<String> packages)", "full_signature": "public void setPackages(List<String> packages)", "class_method_signature": "Mapper.setPackages(List<String> packages)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "Mapper.init()", "testcase": false, "constructor": false}, {"identifier": "setResourceLoader", "parameters": "(ResourceLoader resourceLoader)", "modifiers": "@Override public", "return": "void", "signature": "void setResourceLoader(ResourceLoader resourceLoader)", "full_signature": "@Override public void setResourceLoader(ResourceLoader resourceLoader)", "class_method_signature": "Mapper.setResourceLoader(ResourceLoader resourceLoader)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Object toMap)", "modifiers": "public", "return": "Object", "signature": "Object map(Object toMap)", "full_signature": "public Object map(Object toMap)", "class_method_signature": "Mapper.map(Object toMap)", "testcase": false, "constructor": false}], "file": "seedboxer-web/src/main/java/net/seedboxer/web/utils/mapper/Mapper.java"}, "focal_method": {"identifier": "map", "parameters": "(Object toMap)", "modifiers": "public", "return": "Object", "body": "public Object map(Object toMap) {\n\t\t\n\t\tif (toMap == null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tClass<?> mappedClass = mappings.get(toMap.getClass());\n\t\tif (mappedClass != null) {\n\t\t\treturn modelMapper.map(toMap, mappedClass);\t\t\t\n\t\t} else {\n\t\t\treturn toMap;\n\t\t}\n\t}", "signature": "Object map(Object toMap)", "full_signature": "public Object map(Object toMap)", "class_method_signature": "Mapper.map(Object toMap)", "testcase": false, "constructor": false, "invocations": ["get", "getClass", "map"]}, "repository": {"repo_id": 5342001, "url": "https://github.com/jdavisonc/seedboxer", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 15845, "license": "licensed"}}