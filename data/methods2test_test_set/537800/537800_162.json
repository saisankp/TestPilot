{"test_class": {"identifier": "ScheduledReporterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gauge<String> gauge = () -> \"\";", "modifier": "private final", "type": "Gauge<String>", "declarator": "gauge = () -> \"\"", "var_name": "gauge"}, {"original_string": "private final Counter counter = mock(Counter.class);", "modifier": "private final", "type": "Counter", "declarator": "counter = mock(Counter.class)", "var_name": "counter"}, {"original_string": "private final Histogram histogram = mock(Histogram.class);", "modifier": "private final", "type": "Histogram", "declarator": "histogram = mock(Histogram.class)", "var_name": "histogram"}, {"original_string": "private final Meter meter = mock(Meter.class);", "modifier": "private final", "type": "Meter", "declarator": "meter = mock(Meter.class)", "var_name": "meter"}, {"original_string": "private final Timer timer = mock(Timer.class);", "modifier": "private final", "type": "Timer", "declarator": "timer = mock(Timer.class)", "var_name": "timer"}, {"original_string": "private final ScheduledExecutorService mockExecutor = mock(ScheduledExecutorService.class);", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "mockExecutor = mock(ScheduledExecutorService.class)", "var_name": "mockExecutor"}, {"original_string": "private final ScheduledExecutorService customExecutor = Executors.newSingleThreadScheduledExecutor();", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "customExecutor = Executors.newSingleThreadScheduledExecutor()", "var_name": "customExecutor"}, {"original_string": "private final ScheduledExecutorService externalExecutor = Executors.newSingleThreadScheduledExecutor();", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "externalExecutor = Executors.newSingleThreadScheduledExecutor()", "var_name": "externalExecutor"}, {"original_string": "private final MetricRegistry registry = new MetricRegistry();", "modifier": "private final", "type": "MetricRegistry", "declarator": "registry = new MetricRegistry()", "var_name": "registry"}, {"original_string": "private final ScheduledReporter reporter = spy(\n            new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS)\n    );", "modifier": "private final", "type": "ScheduledReporter", "declarator": "reporter = spy(\n            new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS)\n    )", "var_name": "reporter"}, {"original_string": "private final ScheduledReporter reporterWithNullExecutor = spy(\n            new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, null)\n    );", "modifier": "private final", "type": "ScheduledReporter", "declarator": "reporterWithNullExecutor = spy(\n            new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, null)\n    )", "var_name": "reporterWithNullExecutor"}, {"original_string": "private final ScheduledReporter reporterWithCustomMockExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, mockExecutor);", "modifier": "private final", "type": "ScheduledReporter", "declarator": "reporterWithCustomMockExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, mockExecutor)", "var_name": "reporterWithCustomMockExecutor"}, {"original_string": "private final ScheduledReporter reporterWithCustomExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, customExecutor);", "modifier": "private final", "type": "ScheduledReporter", "declarator": "reporterWithCustomExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, customExecutor)", "var_name": "reporterWithCustomExecutor"}, {"original_string": "private final DummyReporter reporterWithExternallyManagedExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, externalExecutor, false);", "modifier": "private final", "type": "DummyReporter", "declarator": "reporterWithExternallyManagedExecutor = new DummyReporter(registry, \"example\", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, externalExecutor, false)", "var_name": "reporterWithExternallyManagedExecutor"}, {"original_string": "private final ScheduledReporter[] reporters = new ScheduledReporter[] {reporter, reporterWithCustomExecutor, reporterWithExternallyManagedExecutor};", "modifier": "private final", "type": "ScheduledReporter[]", "declarator": "reporters = new ScheduledReporter[] {reporter, reporterWithCustomExecutor, reporterWithExternallyManagedExecutor}", "var_name": "reporters"}], "file": "metrics-core/src/test/java/com/codahale/metrics/ScheduledReporterTest.java"}, "test_case": {"identifier": "shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise() throws Exception {\n        reporterWithCustomMockExecutor.start(200, TimeUnit.MILLISECONDS);\n\n        verify(mockExecutor, times(1)).scheduleAtFixedRate(\n            any(Runnable.class), eq(200L), eq(200L), eq(TimeUnit.MILLISECONDS)\n        );\n    }", "signature": "void shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise()", "full_signature": "@Test public void shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise()", "class_method_signature": "ScheduledReporterTest.shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise()", "testcase": true, "constructor": false, "invocations": ["start", "scheduleAtFixedRate", "verify", "times", "any", "eq", "eq", "eq"]}, "focal_class": {"identifier": "ScheduledReporter", "superclass": "", "interfaces": "implements Closeable, Reporter", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ScheduledReporter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ScheduledReporter.class)", "var_name": "LOG"}, {"original_string": "private static final AtomicInteger FACTORY_ID = new AtomicInteger();", "modifier": "private static final", "type": "AtomicInteger", "declarator": "FACTORY_ID = new AtomicInteger()", "var_name": "FACTORY_ID"}, {"original_string": "private final MetricRegistry registry;", "modifier": "private final", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final ScheduledExecutorService executor;", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "executor", "var_name": "executor"}, {"original_string": "private final boolean shutdownExecutorOnStop;", "modifier": "private final", "type": "boolean", "declarator": "shutdownExecutorOnStop", "var_name": "shutdownExecutorOnStop"}, {"original_string": "private final Set<MetricAttribute> disabledMetricAttributes;", "modifier": "private final", "type": "Set<MetricAttribute>", "declarator": "disabledMetricAttributes", "var_name": "disabledMetricAttributes"}, {"original_string": "private ScheduledFuture<?> scheduledFuture;", "modifier": "private", "type": "ScheduledFuture<?>", "declarator": "scheduledFuture", "var_name": "scheduledFuture"}, {"original_string": "private final MetricFilter filter;", "modifier": "private final", "type": "MetricFilter", "declarator": "filter", "var_name": "filter"}, {"original_string": "private final long durationFactor;", "modifier": "private final", "type": "long", "declarator": "durationFactor", "var_name": "durationFactor"}, {"original_string": "private final String durationUnit;", "modifier": "private final", "type": "String", "declarator": "durationUnit", "var_name": "durationUnit"}, {"original_string": "private final long rateFactor;", "modifier": "private final", "type": "long", "declarator": "rateFactor", "var_name": "rateFactor"}, {"original_string": "private final String rateUnit;", "modifier": "private final", "type": "String", "declarator": "rateUnit", "var_name": "rateUnit"}], "methods": [{"identifier": "ScheduledReporter", "parameters": "(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit)", "modifiers": "protected", "return": "", "signature": " ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit)", "full_signature": "protected  ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit)", "class_method_signature": "ScheduledReporter.ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit)", "testcase": false, "constructor": true}, {"identifier": "ScheduledReporter", "parameters": "(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor)", "modifiers": "protected", "return": "", "signature": " ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor)", "full_signature": "protected  ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor)", "class_method_signature": "ScheduledReporter.ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor)", "testcase": false, "constructor": true}, {"identifier": "ScheduledReporter", "parameters": "(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop)", "modifiers": "protected", "return": "", "signature": " ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop)", "full_signature": "protected  ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop)", "class_method_signature": "ScheduledReporter.ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop)", "testcase": false, "constructor": true}, {"identifier": "ScheduledReporter", "parameters": "(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop,\n                                Set<MetricAttribute> disabledMetricAttributes)", "modifiers": "protected", "return": "", "signature": " ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop,\n                                Set<MetricAttribute> disabledMetricAttributes)", "full_signature": "protected  ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop,\n                                Set<MetricAttribute> disabledMetricAttributes)", "class_method_signature": "ScheduledReporter.ScheduledReporter(MetricRegistry registry,\n                                String name,\n                                MetricFilter filter,\n                                TimeUnit rateUnit,\n                                TimeUnit durationUnit,\n                                ScheduledExecutorService executor,\n                                boolean shutdownExecutorOnStop,\n                                Set<MetricAttribute> disabledMetricAttributes)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "(long period, TimeUnit unit)", "modifiers": "public", "return": "void", "signature": "void start(long period, TimeUnit unit)", "full_signature": "public void start(long period, TimeUnit unit)", "class_method_signature": "ScheduledReporter.start(long period, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(long initialDelay, long period, TimeUnit unit, Runnable runnable)", "modifiers": "synchronized", "return": "void", "signature": "void start(long initialDelay, long period, TimeUnit unit, Runnable runnable)", "full_signature": "synchronized void start(long initialDelay, long period, TimeUnit unit, Runnable runnable)", "class_method_signature": "ScheduledReporter.start(long initialDelay, long period, TimeUnit unit, Runnable runnable)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(long initialDelay, long period, TimeUnit unit)", "modifiers": "synchronized public", "return": "void", "signature": "void start(long initialDelay, long period, TimeUnit unit)", "full_signature": "synchronized public void start(long initialDelay, long period, TimeUnit unit)", "class_method_signature": "ScheduledReporter.start(long initialDelay, long period, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "ScheduledReporter.stop()", "testcase": false, "constructor": false}, {"identifier": "cancelScheduledFuture", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void cancelScheduledFuture()", "full_signature": "private synchronized void cancelScheduledFuture()", "class_method_signature": "ScheduledReporter.cancelScheduledFuture()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ScheduledReporter.close()", "testcase": false, "constructor": false}, {"identifier": "report", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void report()", "full_signature": "public void report()", "class_method_signature": "ScheduledReporter.report()", "testcase": false, "constructor": false}, {"identifier": "report", "parameters": "(SortedMap<String, Gauge> gauges,\n                                SortedMap<String, Counter> counters,\n                                SortedMap<String, Histogram> histograms,\n                                SortedMap<String, Meter> meters,\n                                SortedMap<String, Timer> timers)", "modifiers": "@SuppressWarnings(\"rawtypes\") public abstract", "return": "void", "signature": "void report(SortedMap<String, Gauge> gauges,\n                                SortedMap<String, Counter> counters,\n                                SortedMap<String, Histogram> histograms,\n                                SortedMap<String, Meter> meters,\n                                SortedMap<String, Timer> timers)", "full_signature": "@SuppressWarnings(\"rawtypes\") public abstract void report(SortedMap<String, Gauge> gauges,\n                                SortedMap<String, Counter> counters,\n                                SortedMap<String, Histogram> histograms,\n                                SortedMap<String, Meter> meters,\n                                SortedMap<String, Timer> timers)", "class_method_signature": "ScheduledReporter.report(SortedMap<String, Gauge> gauges,\n                                SortedMap<String, Counter> counters,\n                                SortedMap<String, Histogram> histograms,\n                                SortedMap<String, Meter> meters,\n                                SortedMap<String, Timer> timers)", "testcase": false, "constructor": false}, {"identifier": "getRateUnit", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getRateUnit()", "full_signature": "protected String getRateUnit()", "class_method_signature": "ScheduledReporter.getRateUnit()", "testcase": false, "constructor": false}, {"identifier": "getDurationUnit", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDurationUnit()", "full_signature": "protected String getDurationUnit()", "class_method_signature": "ScheduledReporter.getDurationUnit()", "testcase": false, "constructor": false}, {"identifier": "convertDuration", "parameters": "(double duration)", "modifiers": "protected", "return": "double", "signature": "double convertDuration(double duration)", "full_signature": "protected double convertDuration(double duration)", "class_method_signature": "ScheduledReporter.convertDuration(double duration)", "testcase": false, "constructor": false}, {"identifier": "convertRate", "parameters": "(double rate)", "modifiers": "protected", "return": "double", "signature": "double convertRate(double rate)", "full_signature": "protected double convertRate(double rate)", "class_method_signature": "ScheduledReporter.convertRate(double rate)", "testcase": false, "constructor": false}, {"identifier": "isShutdownExecutorOnStop", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isShutdownExecutorOnStop()", "full_signature": "protected boolean isShutdownExecutorOnStop()", "class_method_signature": "ScheduledReporter.isShutdownExecutorOnStop()", "testcase": false, "constructor": false}, {"identifier": "getDisabledMetricAttributes", "parameters": "()", "modifiers": "protected", "return": "Set<MetricAttribute>", "signature": "Set<MetricAttribute> getDisabledMetricAttributes()", "full_signature": "protected Set<MetricAttribute> getDisabledMetricAttributes()", "class_method_signature": "ScheduledReporter.getDisabledMetricAttributes()", "testcase": false, "constructor": false}, {"identifier": "calculateRateUnit", "parameters": "(TimeUnit unit)", "modifiers": "private", "return": "String", "signature": "String calculateRateUnit(TimeUnit unit)", "full_signature": "private String calculateRateUnit(TimeUnit unit)", "class_method_signature": "ScheduledReporter.calculateRateUnit(TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "createDefaultExecutor", "parameters": "(String name)", "modifiers": "private static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService createDefaultExecutor(String name)", "full_signature": "private static ScheduledExecutorService createDefaultExecutor(String name)", "class_method_signature": "ScheduledReporter.createDefaultExecutor(String name)", "testcase": false, "constructor": false}], "file": "metrics-core/src/main/java/com/codahale/metrics/ScheduledReporter.java"}, "focal_method": {"identifier": "start", "parameters": "(long period, TimeUnit unit)", "modifiers": "public", "return": "void", "body": "public void start(long period, TimeUnit unit) {\n        start(period, period, unit);\n    }", "signature": "void start(long period, TimeUnit unit)", "full_signature": "public void start(long period, TimeUnit unit)", "class_method_signature": "ScheduledReporter.start(long period, TimeUnit unit)", "testcase": false, "constructor": false, "invocations": ["start"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}