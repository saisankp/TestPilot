{"test_class": {"identifier": "TemplateModelTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-workbench-models/drools-workbench-models-guided-template/src/test/java/org/drools/workbench/models/guided/template/shared/TemplateModelTest.java"}, "test_case": {"identifier": "sameVariableFroTwoDifferentTypes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sameVariableFroTwoDifferentTypes() throws Exception {\n        TemplateModel m = new TemplateModel();\n        m.name = \"t1\";\n        m.lhs = new IPattern[1];\n        FactPattern factPattern = new FactPattern();\n        m.lhs[0] = factPattern;\n        factPattern.addConstraint(makeConstraint(\"Applicant\", \"age\", \"Integer\", \"$default\", \"==\"));\n        factPattern.addConstraint(makeConstraint(\"Applicant\", \"name\", \"String\", \"$default\", \"==\"));\n\n        assertEquals(1, m.getInterpolationVariablesList().length);\n        assertEquals(TemplateModel.DEFAULT_TYPE, m.getInterpolationVariablesList()[0].getDataType());\n    }", "signature": "void sameVariableFroTwoDifferentTypes()", "full_signature": "@Test public void sameVariableFroTwoDifferentTypes()", "class_method_signature": "TemplateModelTest.sameVariableFroTwoDifferentTypes()", "testcase": true, "constructor": false, "invocations": ["addConstraint", "makeConstraint", "addConstraint", "makeConstraint", "assertEquals", "getInterpolationVariablesList", "assertEquals", "getDataType", "getInterpolationVariablesList"]}, "focal_class": {"identifier": "TemplateModel", "superclass": "extends RuleModel", "interfaces": "", "fields": [{"original_string": "public static final String ID_COLUMN_NAME = \"__ID_KOL_NAME__\";", "modifier": "public static final", "type": "String", "declarator": "ID_COLUMN_NAME = \"__ID_KOL_NAME__\"", "var_name": "ID_COLUMN_NAME"}, {"original_string": "private Map<String, List<String>> table = new HashMap<String, List<String>>();", "modifier": "private", "type": "Map<String, List<String>>", "declarator": "table = new HashMap<String, List<String>>()", "var_name": "table"}, {"original_string": "private int idCol = 0;", "modifier": "private", "type": "int", "declarator": "idCol = 0", "var_name": "idCol"}, {"original_string": "private int rowsCount = 0;", "modifier": "private", "type": "int", "declarator": "rowsCount = 0", "var_name": "rowsCount"}], "methods": [{"identifier": "addRow", "parameters": "(String rowId, String[] row)", "modifiers": "private", "return": "String", "signature": "String addRow(String rowId, String[] row)", "full_signature": "private String addRow(String rowId, String[] row)", "class_method_signature": "TemplateModel.addRow(String rowId, String[] row)", "testcase": false, "constructor": false}, {"identifier": "addRow", "parameters": "(int index,\n                         String[] row)", "modifiers": "public", "return": "String", "signature": "String addRow(int index,\n                         String[] row)", "full_signature": "public String addRow(int index,\n                         String[] row)", "class_method_signature": "TemplateModel.addRow(int index,\n                         String[] row)", "testcase": false, "constructor": false}, {"identifier": "addRow", "parameters": "(String[] row)", "modifiers": "public", "return": "String", "signature": "String addRow(String[] row)", "full_signature": "public String addRow(String[] row)", "class_method_signature": "TemplateModel.addRow(String[] row)", "testcase": false, "constructor": false}, {"identifier": "clearRows", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearRows()", "full_signature": "public void clearRows()", "class_method_signature": "TemplateModel.clearRows()", "testcase": false, "constructor": false}, {"identifier": "getColsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColsCount()", "full_signature": "public int getColsCount()", "class_method_signature": "TemplateModel.getColsCount()", "testcase": false, "constructor": false}, {"identifier": "getInterpolationVariables", "parameters": "()", "modifiers": "private", "return": "Map<InterpolationVariable, Integer>", "signature": "Map<InterpolationVariable, Integer> getInterpolationVariables()", "full_signature": "private Map<InterpolationVariable, Integer> getInterpolationVariables()", "class_method_signature": "TemplateModel.getInterpolationVariables()", "testcase": false, "constructor": false}, {"identifier": "getInterpolationVariablesList", "parameters": "()", "modifiers": "public", "return": "InterpolationVariable[]", "signature": "InterpolationVariable[] getInterpolationVariablesList()", "full_signature": "public InterpolationVariable[] getInterpolationVariablesList()", "class_method_signature": "TemplateModel.getInterpolationVariablesList()", "testcase": false, "constructor": false}, {"identifier": "getNewIdColValue", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getNewIdColValue()", "full_signature": "private String getNewIdColValue()", "class_method_signature": "TemplateModel.getNewIdColValue()", "testcase": false, "constructor": false}, {"identifier": "getRowsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowsCount()", "full_signature": "public int getRowsCount()", "class_method_signature": "TemplateModel.getRowsCount()", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "()", "modifiers": "public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getTable()", "full_signature": "public Map<String, List<String>> getTable()", "class_method_signature": "TemplateModel.getTable()", "testcase": false, "constructor": false}, {"identifier": "getTableAsArray", "parameters": "()", "modifiers": "public", "return": "String[][]", "signature": "String[][] getTableAsArray()", "full_signature": "public String[][] getTableAsArray()", "class_method_signature": "TemplateModel.getTableAsArray()", "testcase": false, "constructor": false}, {"identifier": "putInSync", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void putInSync()", "full_signature": "public void putInSync()", "class_method_signature": "TemplateModel.putInSync()", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(int row)", "modifiers": "public", "return": "void", "signature": "void removeRow(int row)", "full_signature": "public void removeRow(int row)", "class_method_signature": "TemplateModel.removeRow(int row)", "testcase": false, "constructor": false}, {"identifier": "removeRowById", "parameters": "(String rowId)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRowById(String rowId)", "full_signature": "public boolean removeRowById(String rowId)", "class_method_signature": "TemplateModel.removeRowById(String rowId)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String varName,\n                         int rowIndex,\n                         String newValue)", "modifiers": "public", "return": "void", "signature": "void setValue(String varName,\n                         int rowIndex,\n                         String newValue)", "full_signature": "public void setValue(String varName,\n                         int rowIndex,\n                         String newValue)", "class_method_signature": "TemplateModel.setValue(String varName,\n                         int rowIndex,\n                         String newValue)", "testcase": false, "constructor": false}, {"identifier": "setIdCol", "parameters": "(final int idCol)", "modifiers": "public", "return": "void", "signature": "void setIdCol(final int idCol)", "full_signature": "public void setIdCol(final int idCol)", "class_method_signature": "TemplateModel.setIdCol(final int idCol)", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-guided-template/src/main/java/org/drools/workbench/models/guided/template/shared/TemplateModel.java"}, "focal_method": {"identifier": "getInterpolationVariablesList", "parameters": "()", "modifiers": "public", "return": "InterpolationVariable[]", "body": "public InterpolationVariable[] getInterpolationVariablesList() {\n        Map<InterpolationVariable, Integer> vars = getInterpolationVariables();\n        InterpolationVariable[] ret = new InterpolationVariable[vars.size() - 1];\n        for (Map.Entry<InterpolationVariable, Integer> entry : vars.entrySet()) {\n            if (!ID_COLUMN_NAME.equals(entry.getKey().getVarName())) {\n                ret[entry.getValue()] = entry.getKey();\n            }\n        }\n        return ret;\n    }", "signature": "InterpolationVariable[] getInterpolationVariablesList()", "full_signature": "public InterpolationVariable[] getInterpolationVariablesList()", "class_method_signature": "TemplateModel.getInterpolationVariablesList()", "testcase": false, "constructor": false, "invocations": ["getInterpolationVariables", "size", "entrySet", "equals", "getVarName", "getKey", "getValue", "getKey"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}