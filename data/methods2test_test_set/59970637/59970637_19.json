{"test_class": {"identifier": "TestLocalOntology", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LocalOntology lOnt;", "modifier": "private", "type": "LocalOntology", "declarator": "lOnt", "var_name": "lOnt"}], "file": "core/src/test/java/gov/nasa/jpl/mudrod/ontology/process/TestLocalOntology.java"}, "test_case": {"identifier": "testGetModel", "parameters": "()", "modifiers": "@Ignore @Test public final", "return": "void", "body": "@Ignore\n  @Test\n  public final void testGetModel() {\n    fail(\"Not yet implemented\"); // TODO\n  }", "signature": "void testGetModel()", "full_signature": "@Ignore @Test public final void testGetModel()", "class_method_signature": "TestLocalOntology.testGetModel()", "testcase": true, "constructor": false, "invocations": ["fail"]}, "focal_class": {"identifier": "LocalOntology", "superclass": "", "interfaces": "implements Ontology", "fields": [{"original_string": "public static final Logger LOG = LoggerFactory.getLogger(LocalOntology.class);", "modifier": "public static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(LocalOntology.class)", "var_name": "LOG"}, {"original_string": "public static final String DELIMITER_SEARCHTERM = \" \";", "modifier": "public static final", "type": "String", "declarator": "DELIMITER_SEARCHTERM = \" \"", "var_name": "DELIMITER_SEARCHTERM"}, {"original_string": "private Map<Object, Object> searchTerms = new HashMap<>();", "modifier": "private", "type": "Map<Object, Object>", "declarator": "searchTerms = new HashMap<>()", "var_name": "searchTerms"}, {"original_string": "private static OntologyParser parser;", "modifier": "private static", "type": "OntologyParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private static OntModel ontologyModel;", "modifier": "private static", "type": "OntModel", "declarator": "ontologyModel", "var_name": "ontologyModel"}, {"original_string": "private Ontology ontology;", "modifier": "private", "type": "Ontology", "declarator": "ontology", "var_name": "ontology"}, {"original_string": "private static Map<AnonId, String> mAnonIDs = new HashMap<>();", "modifier": "private static", "type": "Map<AnonId, String>", "declarator": "mAnonIDs = new HashMap<>()", "var_name": "mAnonIDs"}, {"original_string": "private static int mAnonCount = 0;", "modifier": "private static", "type": "int", "declarator": "mAnonCount = 0", "var_name": "mAnonCount"}, {"original_string": "private List<String> ontArrayList;", "modifier": "private", "type": "List<String>", "declarator": "ontArrayList", "var_name": "ontArrayList"}], "methods": [{"identifier": "LocalOntology", "parameters": "()", "modifiers": "public", "return": "", "signature": " LocalOntology()", "full_signature": "public  LocalOntology()", "class_method_signature": "LocalOntology.LocalOntology()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public", "return": "Ontology", "signature": "Ontology getInstance()", "full_signature": "public Ontology getInstance()", "class_method_signature": "LocalOntology.getInstance()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void load()", "full_signature": "@Override public void load()", "class_method_signature": "LocalOntology.load()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(String[] urls)", "modifiers": "@Override public", "return": "void", "signature": "void load(String[] urls)", "full_signature": "@Override public void load(String[] urls)", "class_method_signature": "LocalOntology.load(String[] urls)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Object m, String url)", "modifiers": "private", "return": "void", "signature": "void load(Object m, String url)", "full_signature": "private void load(Object m, String url)", "class_method_signature": "LocalOntology.load(Object m, String url)", "testcase": false, "constructor": false}, {"identifier": "getParser", "parameters": "()", "modifiers": "public", "return": "OntologyParser", "signature": "OntologyParser getParser()", "full_signature": "public OntologyParser getParser()", "class_method_signature": "LocalOntology.getParser()", "testcase": false, "constructor": false}, {"identifier": "getModel", "parameters": "()", "modifiers": "public static", "return": "OntModel", "signature": "OntModel getModel()", "full_signature": "public static OntModel getModel()", "class_method_signature": "LocalOntology.getModel()", "testcase": false, "constructor": false}, {"identifier": "getLoadedOntologyResources", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLoadedOntologyResources()", "full_signature": "public List<String> getLoadedOntologyResources()", "class_method_signature": "LocalOntology.getLoadedOntologyResources()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Ontology o)", "modifiers": "@Override public", "return": "void", "signature": "void merge(Ontology o)", "full_signature": "@Override public void merge(Ontology o)", "class_method_signature": "LocalOntology.merge(Ontology o)", "testcase": false, "constructor": false}, {"identifier": "subclasses", "parameters": "(String entitySearchTerm)", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> subclasses(String entitySearchTerm)", "full_signature": "@Override public Iterator<String> subclasses(String entitySearchTerm)", "class_method_signature": "LocalOntology.subclasses(String entitySearchTerm)", "testcase": false, "constructor": false}, {"identifier": "synonyms", "parameters": "(String queryKeyPhrase)", "modifiers": "@Override public", "return": "Iterator", "signature": "Iterator synonyms(String queryKeyPhrase)", "full_signature": "@Override public Iterator synonyms(String queryKeyPhrase)", "class_method_signature": "LocalOntology.synonyms(String queryKeyPhrase)", "testcase": false, "constructor": false}, {"identifier": "addSearchTerm", "parameters": "(String label, OntResource resource)", "modifiers": "public", "return": "void", "signature": "void addSearchTerm(String label, OntResource resource)", "full_signature": "public void addSearchTerm(String label, OntResource resource)", "class_method_signature": "LocalOntology.addSearchTerm(String label, OntResource resource)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(String label)", "modifiers": "public", "return": "Map<OntResource, String>", "signature": "Map<OntResource, String> retrieve(String label)", "full_signature": "public Map<OntResource, String> retrieve(String label)", "class_method_signature": "LocalOntology.retrieve(String label)", "testcase": false, "constructor": false}, {"identifier": "renderHierarchy", "parameters": "(PrintStream out, OntClass cls, List<Object> occurs, int depth)", "modifiers": "protected static", "return": "void", "signature": "void renderHierarchy(PrintStream out, OntClass cls, List<Object> occurs, int depth)", "full_signature": "protected static void renderHierarchy(PrintStream out, OntClass cls, List<Object> occurs, int depth)", "class_method_signature": "LocalOntology.renderHierarchy(PrintStream out, OntClass cls, List<Object> occurs, int depth)", "testcase": false, "constructor": false}, {"identifier": "renderClassDescription", "parameters": "(PrintStream out, OntClass c, int depth)", "modifiers": "public static", "return": "void", "signature": "void renderClassDescription(PrintStream out, OntClass c, int depth)", "full_signature": "public static void renderClassDescription(PrintStream out, OntClass c, int depth)", "class_method_signature": "LocalOntology.renderClassDescription(PrintStream out, OntClass c, int depth)", "testcase": false, "constructor": false}, {"identifier": "renderRestriction", "parameters": "(PrintStream out, Restriction r)", "modifiers": "protected static", "return": "void", "signature": "void renderRestriction(PrintStream out, Restriction r)", "full_signature": "protected static void renderRestriction(PrintStream out, Restriction r)", "class_method_signature": "LocalOntology.renderRestriction(PrintStream out, Restriction r)", "testcase": false, "constructor": false}, {"identifier": "renderURI", "parameters": "(PrintStream out, PrefixMapping prefixes, String uri)", "modifiers": "protected static", "return": "void", "signature": "void renderURI(PrintStream out, PrefixMapping prefixes, String uri)", "full_signature": "protected static void renderURI(PrintStream out, PrefixMapping prefixes, String uri)", "class_method_signature": "LocalOntology.renderURI(PrintStream out, PrefixMapping prefixes, String uri)", "testcase": false, "constructor": false}, {"identifier": "renderAnonymous", "parameters": "(PrintStream out, Resource anon, String name)", "modifiers": "protected static", "return": "void", "signature": "void renderAnonymous(PrintStream out, Resource anon, String name)", "full_signature": "protected static void renderAnonymous(PrintStream out, Resource anon, String name)", "class_method_signature": "LocalOntology.renderAnonymous(PrintStream out, Resource anon, String name)", "testcase": false, "constructor": false}, {"identifier": "indent", "parameters": "(PrintStream out, int depth)", "modifiers": "protected static", "return": "void", "signature": "void indent(PrintStream out, int depth)", "full_signature": "protected static void indent(PrintStream out, int depth)", "class_method_signature": "LocalOntology.indent(PrintStream out, int depth)", "testcase": false, "constructor": false}], "file": "core/src/main/java/gov/nasa/jpl/mudrod/ontology/process/LocalOntology.java"}, "focal_method": {"identifier": "getModel", "parameters": "()", "modifiers": "public static", "return": "OntModel", "body": "public static OntModel getModel() {\n    return ontologyModel;\n  }", "signature": "OntModel getModel()", "full_signature": "public static OntModel getModel()", "class_method_signature": "LocalOntology.getModel()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 59970637, "url": "https://github.com/aist-oceanworks/mudrod", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 78356, "license": "licensed"}}