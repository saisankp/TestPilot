{"test_class": {"identifier": "FileEntityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] testContent = \"to be or not to be\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "testContent = \"to be or not to be\".getBytes()", "var_name": "testContent"}, {"original_string": "private FileEntityProvider fileEntityProvider;", "modifier": "private", "type": "FileEntityProvider", "declarator": "fileEntityProvider", "var_name": "fileEntityProvider"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/FileEntityProviderTest.java"}, "test_case": {"identifier": "isReadableForFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isReadableForFile() throws Exception {\n        assertTrue(fileEntityProvider.isReadable(File.class, null, null, null));\n    }", "signature": "void isReadableForFile()", "full_signature": "@Test public void isReadableForFile()", "class_method_signature": "FileEntityProviderTest.isReadableForFile()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isReadable"]}, "focal_class": {"identifier": "FileEntityProvider", "superclass": "", "interfaces": "implements EntityProvider<File>", "fields": [], "methods": [{"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "FileEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "modifiers": "@Override public", "return": "File", "signature": "File readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "full_signature": "@Override public File readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "class_method_signature": "FileEntityProvider.readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "FileEntityProvider.getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "FileEntityProvider.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "FileEntityProvider.writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/FileEntityProvider.java"}, "focal_method": {"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) {\n        return type == File.class;\n    }", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "FileEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}