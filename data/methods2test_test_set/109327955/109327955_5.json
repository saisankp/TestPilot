{"test_class": {"identifier": "EventPublisherApplicationAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate Application clientApplication;", "modifier": "@Autowired\n\tprivate", "type": "Application", "declarator": "clientApplication", "var_name": "clientApplication"}, {"original_string": "private static List<Object> receivedEvents = new ArrayList<>();", "modifier": "private static", "type": "List<Object>", "declarator": "receivedEvents = new ArrayList<>()", "var_name": "receivedEvents"}], "file": "quickfixj-spring-boot-starter/src/test/java/io/allune/quickfixj/spring/boot/starter/application/EventPublisherApplicationAdapterTest.java"}, "test_case": {"identifier": "shouldPublishFromAppMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldPublishFromAppMessage() throws Exception {\n\t\tMessage message = mock(Message.class);\n\t\tSessionID sessionId = mock(SessionID.class);\n\t\tclientApplication.fromApp(message, sessionId);\n\n\t\tawait().atMost(FIVE_SECONDS).until(() -> receivedEvents.size() > 0);\n\t\tassertThat(receivedEvents.get(0)).isInstanceOf(FromApp.class);\n\t\tassertThat(((FromApp) receivedEvents.get(0)).getMessage()).isEqualTo(message);\n\t\tassertThat(((FromApp) receivedEvents.get(0)).getSessionId()).isEqualTo(sessionId);\n\t}", "signature": "void shouldPublishFromAppMessage()", "full_signature": "@Test public void shouldPublishFromAppMessage()", "class_method_signature": "EventPublisherApplicationAdapterTest.shouldPublishFromAppMessage()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "fromApp", "until", "atMost", "await", "size", "isInstanceOf", "assertThat", "get", "isEqualTo", "assertThat", "getMessage", "get", "isEqualTo", "assertThat", "getSessionId", "get"]}, "focal_class": {"identifier": "EventPublisherApplicationAdapter", "superclass": "", "interfaces": "implements Application", "fields": [{"original_string": "private Consumer<Object> publishEventConsumer;", "modifier": "private", "type": "Consumer<Object>", "declarator": "publishEventConsumer", "var_name": "publishEventConsumer"}], "methods": [{"identifier": "EventPublisherApplicationAdapter", "parameters": "(ApplicationEventPublisher applicationEventPublisher)", "modifiers": "public", "return": "", "signature": " EventPublisherApplicationAdapter(ApplicationEventPublisher applicationEventPublisher)", "full_signature": "public  EventPublisherApplicationAdapter(ApplicationEventPublisher applicationEventPublisher)", "class_method_signature": "EventPublisherApplicationAdapter.EventPublisherApplicationAdapter(ApplicationEventPublisher applicationEventPublisher)", "testcase": false, "constructor": true}, {"identifier": "fromAdmin", "parameters": "(Message message, SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void fromAdmin(Message message, SessionID sessionId)", "full_signature": "@Override public void fromAdmin(Message message, SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.fromAdmin(Message message, SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "fromApp", "parameters": "(Message message, SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void fromApp(Message message, SessionID sessionId)", "full_signature": "@Override public void fromApp(Message message, SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.fromApp(Message message, SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "onCreate", "parameters": "(SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void onCreate(SessionID sessionId)", "full_signature": "@Override public void onCreate(SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.onCreate(SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "onLogon", "parameters": "(SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void onLogon(SessionID sessionId)", "full_signature": "@Override public void onLogon(SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.onLogon(SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "onLogout", "parameters": "(SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void onLogout(SessionID sessionId)", "full_signature": "@Override public void onLogout(SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.onLogout(SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "toAdmin", "parameters": "(Message message, SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void toAdmin(Message message, SessionID sessionId)", "full_signature": "@Override public void toAdmin(Message message, SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.toAdmin(Message message, SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "toApp", "parameters": "(Message message, SessionID sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void toApp(Message message, SessionID sessionId)", "full_signature": "@Override public void toApp(Message message, SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.toApp(Message message, SessionID sessionId)", "testcase": false, "constructor": false}, {"identifier": "publishEvent", "parameters": "(T event)", "modifiers": "private", "return": "void", "signature": "void publishEvent(T event)", "full_signature": "private void publishEvent(T event)", "class_method_signature": "EventPublisherApplicationAdapter.publishEvent(T event)", "testcase": false, "constructor": false}], "file": "quickfixj-spring-boot-starter/src/main/java/io/allune/quickfixj/spring/boot/starter/application/EventPublisherApplicationAdapter.java"}, "focal_method": {"identifier": "fromApp", "parameters": "(Message message, SessionID sessionId)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void fromApp(Message message, SessionID sessionId) {\n\t\tpublishEvent(FromApp.of(message, sessionId));\n\t}", "signature": "void fromApp(Message message, SessionID sessionId)", "full_signature": "@Override public void fromApp(Message message, SessionID sessionId)", "class_method_signature": "EventPublisherApplicationAdapter.fromApp(Message message, SessionID sessionId)", "testcase": false, "constructor": false, "invocations": ["publishEvent", "of"]}, "repository": {"repo_id": 109327955, "url": "https://github.com/esanchezros/quickfixj-spring-boot-starter", "stars": 27, "created": "11/2/2017 11:06:07 PM +00:00", "updates": "2020-01-15T15:51:21+00:00", "fork": "False", "license": "licensed"}}