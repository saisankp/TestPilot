{"test_class": {"identifier": "LinkedListTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "LinkedList     list  = null;", "modifier": "", "type": "LinkedList", "declarator": "list  = null", "var_name": "list"}, {"original_string": "LinkedListNode node1 = null;", "modifier": "", "type": "LinkedListNode", "declarator": "node1 = null", "var_name": "node1"}, {"original_string": "LinkedListNode node2 = null;", "modifier": "", "type": "LinkedListNode", "declarator": "node2 = null", "var_name": "node2"}, {"original_string": "LinkedListNode node3 = null;", "modifier": "", "type": "LinkedListNode", "declarator": "node3 = null", "var_name": "node3"}], "file": "drools-core/src/test/java/org/drools/core/util/LinkedListTest.java"}, "test_case": {"identifier": "testRemoveLast", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveLast() {\n        this.list.add( this.node1 );\n        this.list.add( this.node2 );\n        this.list.add( this.node3 );\n\n        assertSame( \"List should return node1 on getLast()\",\n                           this.list.getLast(),\n                           this.node3 );\n        this.list.removeLast();\n        assertSame( \"List should return node2 on getLast()\",\n                           this.list.getLast(),\n                           this.node2 );\n        this.list.removeLast();\n        assertSame( \"List should return node3 on getLast()\",\n                           this.list.getLast(),\n                           this.node1 );\n        this.list.removeLast();\n        assertNull( \"Empty list should return null on getLast()\",\n                           this.list.getLast() );\n    }", "signature": "void testRemoveLast()", "full_signature": "@Test public void testRemoveLast()", "class_method_signature": "LinkedListTest.testRemoveLast()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "assertSame", "getLast", "removeLast", "assertSame", "getLast", "removeLast", "assertSame", "getLast", "removeLast", "assertNull", "getLast"]}, "focal_class": {"identifier": "LinkedList", "superclass": "", "interfaces": "implements\n    Externalizable", "fields": [{"original_string": "private static final long        serialVersionUID = 510l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 510l", "var_name": "serialVersionUID"}, {"original_string": "private T                        firstNode;", "modifier": "private", "type": "T", "declarator": "firstNode", "var_name": "firstNode"}, {"original_string": "private T                        lastNode;", "modifier": "private", "type": "T", "declarator": "lastNode", "var_name": "lastNode"}, {"original_string": "private int                      size;", "modifier": "private", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "public static final FastIterator fastIterator = new LinkedListFastIterator();", "modifier": "public static final", "type": "FastIterator", "declarator": "fastIterator = new LinkedListFastIterator()", "var_name": "fastIterator"}], "methods": [{"identifier": "LinkedList", "parameters": "()", "modifiers": "public", "return": "", "signature": " LinkedList()", "full_signature": "public  LinkedList()", "class_method_signature": "LinkedList.LinkedList()", "testcase": false, "constructor": true}, {"identifier": "LinkedList", "parameters": "(final T node)", "modifiers": "public", "return": "", "signature": " LinkedList(final T node)", "full_signature": "public  LinkedList(final T node)", "class_method_signature": "LinkedList.LinkedList(final T node)", "testcase": false, "constructor": true}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "LinkedList.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "public void writeExternal(ObjectOutput out)", "class_method_signature": "LinkedList.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final T node)", "modifiers": "public", "return": "void", "signature": "void add(final T node)", "full_signature": "public void add(final T node)", "class_method_signature": "LinkedList.add(final T node)", "testcase": false, "constructor": false}, {"identifier": "addLast", "parameters": "(final T node)", "modifiers": "public", "return": "void", "signature": "void addLast(final T node)", "full_signature": "public void addLast(final T node)", "class_method_signature": "LinkedList.addLast(final T node)", "testcase": false, "constructor": false}, {"identifier": "addFirst", "parameters": "(final T node)", "modifiers": "public", "return": "void", "signature": "void addFirst(final T node)", "full_signature": "public void addFirst(final T node)", "class_method_signature": "LinkedList.addFirst(final T node)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final T node)", "modifiers": "public", "return": "void", "signature": "void remove(final T node)", "full_signature": "public void remove(final T node)", "class_method_signature": "LinkedList.remove(final T node)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(T node)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(T node)", "full_signature": "public boolean contains(T node)", "class_method_signature": "LinkedList.contains(T node)", "testcase": false, "constructor": false}, {"identifier": "getFirst", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T getFirst()", "full_signature": "public final T getFirst()", "class_method_signature": "LinkedList.getFirst()", "testcase": false, "constructor": false}, {"identifier": "getLast", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T getLast()", "full_signature": "public final T getLast()", "class_method_signature": "LinkedList.getLast()", "testcase": false, "constructor": false}, {"identifier": "removeFirst", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T removeFirst()", "full_signature": "public T removeFirst()", "class_method_signature": "LinkedList.removeFirst()", "testcase": false, "constructor": false}, {"identifier": "insertAfter", "parameters": "(final T existingNode,\n                            final T newNode)", "modifiers": "public", "return": "void", "signature": "void insertAfter(final T existingNode,\n                            final T newNode)", "full_signature": "public void insertAfter(final T existingNode,\n                            final T newNode)", "class_method_signature": "LinkedList.insertAfter(final T existingNode,\n                            final T newNode)", "testcase": false, "constructor": false}, {"identifier": "removeLast", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T removeLast()", "full_signature": "public T removeLast()", "class_method_signature": "LinkedList.removeLast()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i)", "modifiers": "public", "return": "T", "signature": "T get(int i)", "full_signature": "public T get(int i)", "class_method_signature": "LinkedList.get(int i)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public final boolean isEmpty()", "class_method_signature": "LinkedList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "LinkedList.clear()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int size()", "full_signature": "public final int size()", "class_method_signature": "LinkedList.size()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "LinkedList.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object object)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(final Object object)", "full_signature": "public boolean equals(final Object object)", "class_method_signature": "LinkedList.equals(final Object object)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "FastIterator", "signature": "FastIterator iterator()", "full_signature": "public FastIterator iterator()", "class_method_signature": "LinkedList.iterator()", "testcase": false, "constructor": false}, {"identifier": "fastIterator", "parameters": "()", "modifiers": "public", "return": "FastIterator", "signature": "FastIterator fastIterator()", "full_signature": "public FastIterator fastIterator()", "class_method_signature": "LinkedList.fastIterator()", "testcase": false, "constructor": false}, {"identifier": "javaUtilIterator", "parameters": "()", "modifiers": "public", "return": "java.util.Iterator<T>", "signature": "java.util.Iterator<T> javaUtilIterator()", "full_signature": "public java.util.Iterator<T> javaUtilIterator()", "class_method_signature": "LinkedList.javaUtilIterator()", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/util/LinkedList.java"}, "focal_method": {"identifier": "removeLast", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T removeLast() {\n        if ( this.lastNode == null ) {\n            return null;\n        }\n        final T node = this.lastNode;\n        this.lastNode = node.getPrevious();\n        node.setPrevious( null );\n        if ( this.lastNode != null ) {\n            this.lastNode.setNext( null );\n        } else {\n            this.firstNode = null;\n        }\n        this.size--;\n        return node;\n    }", "signature": "T removeLast()", "full_signature": "public T removeLast()", "class_method_signature": "LinkedList.removeLast()", "testcase": false, "constructor": false, "invocations": ["getPrevious", "setPrevious", "setNext"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}