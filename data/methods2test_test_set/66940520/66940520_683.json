{"test_class": {"identifier": "ValidationUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-support/dhis-support-system/src/test/java/org/hisp/dhis/system/util/ValidationUtilsTest.java"}, "test_case": {"identifier": "testUuidIsValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUuidIsValid()\n    {\n        assertTrue( uuidIsValid( \"0b976c48-4577-437b-bba6-794d0e7ebde0\" ) );\n        assertTrue( uuidIsValid( \"38052fd0-8c7a-4330-ac45-2c53b3a41a78\" ) );\n        assertTrue( uuidIsValid( \"50be5898-2413-465f-91b9-aced950fc3ab\" ) );\n\n        assertFalse( uuidIsValid( \"Jjg3j3-412-1435-342-jajg8234f\" ) );\n        assertFalse( uuidIsValid( \"6cafdc73_2ca4_4c52-8a0a-d38adec33b24\" ) );\n        assertFalse( uuidIsValid( \"e1809673dbf3482d8f84e493c65f74d9\" ) );\n    }", "signature": "void testUuidIsValid()", "full_signature": "@Test public void testUuidIsValid()", "class_method_signature": "ValidationUtilsTest.testUuidIsValid()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "uuidIsValid", "assertTrue", "uuidIsValid", "assertTrue", "uuidIsValid", "assertFalse", "uuidIsValid", "assertFalse", "uuidIsValid", "assertFalse", "uuidIsValid"]}, "focal_class": {"identifier": "ValidationUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NUM_PAT = \"((-?[0-9]+)(\\\\.[0-9]+)?)\";", "modifier": "private static final", "type": "String", "declarator": "NUM_PAT = \"((-?[0-9]+)(\\\\.[0-9]+)?)\"", "var_name": "NUM_PAT"}, {"original_string": "private static final Pattern POINT_PATTERN = Pattern.compile( \"\\\\[(.+),\\\\s?(.+)\\\\]\" );", "modifier": "private static final", "type": "Pattern", "declarator": "POINT_PATTERN = Pattern.compile( \"\\\\[(.+),\\\\s?(.+)\\\\]\" )", "var_name": "POINT_PATTERN"}, {"original_string": "private static final Pattern DIGIT_PATTERN = Pattern.compile( \".*\\\\d.*\" );", "modifier": "private static final", "type": "Pattern", "declarator": "DIGIT_PATTERN = Pattern.compile( \".*\\\\d.*\" )", "var_name": "DIGIT_PATTERN"}, {"original_string": "private static final Pattern UPPERCASE_PATTERN = Pattern.compile( \".*[A-Z].*\" );", "modifier": "private static final", "type": "Pattern", "declarator": "UPPERCASE_PATTERN = Pattern.compile( \".*[A-Z].*\" )", "var_name": "UPPERCASE_PATTERN"}, {"original_string": "private static final Pattern HEX_COLOR_PATTERN = Pattern.compile( \"^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\" );", "modifier": "private static final", "type": "Pattern", "declarator": "HEX_COLOR_PATTERN = Pattern.compile( \"^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\" )", "var_name": "HEX_COLOR_PATTERN"}, {"original_string": "private static final Pattern TIME_OF_DAY_PATTERN = Pattern.compile( \"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\" );", "modifier": "private static final", "type": "Pattern", "declarator": "TIME_OF_DAY_PATTERN = Pattern.compile( \"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\" )", "var_name": "TIME_OF_DAY_PATTERN"}, {"original_string": "private static final Pattern BBOX_PATTERN = Pattern.compile( \"^\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \"$\" );", "modifier": "private static final", "type": "Pattern", "declarator": "BBOX_PATTERN = Pattern.compile( \"^\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \",\\\\s*?\" + NUM_PAT + \"$\" )", "var_name": "BBOX_PATTERN"}, {"original_string": "private static final Pattern INTERNATIONAL_PHONE_PATTERN = Pattern.compile( \"^\\\\+(?:[0-9].?){4,14}[0-9]$\" );", "modifier": "private static final", "type": "Pattern", "declarator": "INTERNATIONAL_PHONE_PATTERN = Pattern.compile( \"^\\\\+(?:[0-9].?){4,14}[0-9]$\" )", "var_name": "INTERNATIONAL_PHONE_PATTERN"}, {"original_string": "private static Set<String> BOOL_FALSE_VARIANTS = Sets.newHashSet( \"false\", \"False\", \"FALSE\", \"f\", \"F\", \"0\" );", "modifier": "private static", "type": "Set<String>", "declarator": "BOOL_FALSE_VARIANTS = Sets.newHashSet( \"false\", \"False\", \"FALSE\", \"f\", \"F\", \"0\" )", "var_name": "BOOL_FALSE_VARIANTS"}, {"original_string": "private static Set<String> BOOL_TRUE_VARIANTS = Sets.newHashSet( \"true\", \"True\", \"TRUE\", \"t\", \"T\", \"1\" );", "modifier": "private static", "type": "Set<String>", "declarator": "BOOL_TRUE_VARIANTS = Sets.newHashSet( \"true\", \"True\", \"TRUE\", \"t\", \"T\", \"1\" )", "var_name": "BOOL_TRUE_VARIANTS"}, {"original_string": "private static final int VALUE_MAX_LENGTH = 50000;", "modifier": "private static final", "type": "int", "declarator": "VALUE_MAX_LENGTH = 50000", "var_name": "VALUE_MAX_LENGTH"}, {"original_string": "private static final int LONG_MAX = 180;", "modifier": "private static final", "type": "int", "declarator": "LONG_MAX = 180", "var_name": "LONG_MAX"}, {"original_string": "private static final int LONG_MIN = -180;", "modifier": "private static final", "type": "int", "declarator": "LONG_MIN = -180", "var_name": "LONG_MIN"}, {"original_string": "private static final int LAT_MAX = 90;", "modifier": "private static final", "type": "int", "declarator": "LAT_MAX = 90", "var_name": "LAT_MAX"}, {"original_string": "private static final int LAT_MIN = -90;", "modifier": "private static final", "type": "int", "declarator": "LAT_MIN = -90", "var_name": "LAT_MIN"}, {"original_string": "private static final ImmutableSet<Character> SQL_VALID_CHARS = ImmutableSet.of(\n        '&', '|', '=', '!', '<', '>', '/', '%', '\"', '\\'', '*', '+', '-', '^', ',', '.' );", "modifier": "private static final", "type": "ImmutableSet<Character>", "declarator": "SQL_VALID_CHARS = ImmutableSet.of(\n        '&', '|', '=', '!', '<', '>', '/', '%', '\"', '\\'', '*', '+', '-', '^', ',', '.' )", "var_name": "SQL_VALID_CHARS"}, {"original_string": "public static final ImmutableSet<String> ILLEGAL_SQL_KEYWORDS = ImmutableSet.of( \"alter\", \"before\", \"case\",\n        \"commit\", \"copy\", \"create\", \"createdb\", \"createrole\", \"createuser\", \"close\", \"delete\", \"destroy\", \"drop\",\n        \"escape\", \"insert\", \"select\", \"rename\", \"replace\", \"restore\", \"return\", \"update\", \"when\", \"write\" );", "modifier": "public static final", "type": "ImmutableSet<String>", "declarator": "ILLEGAL_SQL_KEYWORDS = ImmutableSet.of( \"alter\", \"before\", \"case\",\n        \"commit\", \"copy\", \"create\", \"createdb\", \"createrole\", \"createuser\", \"close\", \"delete\", \"destroy\", \"drop\",\n        \"escape\", \"insert\", \"select\", \"rename\", \"replace\", \"restore\", \"return\", \"update\", \"when\", \"write\" )", "var_name": "ILLEGAL_SQL_KEYWORDS"}], "methods": [{"identifier": "expressionIsValidSQl", "parameters": "( String filter )", "modifiers": "public static", "return": "boolean", "signature": "boolean expressionIsValidSQl( String filter )", "full_signature": "public static boolean expressionIsValidSQl( String filter )", "class_method_signature": "ValidationUtils.expressionIsValidSQl( String filter )", "testcase": false, "constructor": false}, {"identifier": "emailIsValid", "parameters": "( String email )", "modifiers": "public static", "return": "boolean", "signature": "boolean emailIsValid( String email )", "full_signature": "public static boolean emailIsValid( String email )", "class_method_signature": "ValidationUtils.emailIsValid( String email )", "testcase": false, "constructor": false}, {"identifier": "dateIsValid", "parameters": "( String date, Locale locale )", "modifiers": "public static", "return": "boolean", "signature": "boolean dateIsValid( String date, Locale locale )", "full_signature": "public static boolean dateIsValid( String date, Locale locale )", "class_method_signature": "ValidationUtils.dateIsValid( String date, Locale locale )", "testcase": false, "constructor": false}, {"identifier": "dateIsValid", "parameters": "( String date )", "modifiers": "public static", "return": "boolean", "signature": "boolean dateIsValid( String date )", "full_signature": "public static boolean dateIsValid( String date )", "class_method_signature": "ValidationUtils.dateIsValid( String date )", "testcase": false, "constructor": false}, {"identifier": "timeIsValid", "parameters": "( String time )", "modifiers": "public static", "return": "boolean", "signature": "boolean timeIsValid( String time )", "full_signature": "public static boolean timeIsValid( String time )", "class_method_signature": "ValidationUtils.timeIsValid( String time )", "testcase": false, "constructor": false}, {"identifier": "urlIsValid", "parameters": "( String url )", "modifiers": "public static", "return": "boolean", "signature": "boolean urlIsValid( String url )", "full_signature": "public static boolean urlIsValid( String url )", "class_method_signature": "ValidationUtils.urlIsValid( String url )", "testcase": false, "constructor": false}, {"identifier": "uuidIsValid", "parameters": "( String uuid )", "modifiers": "public static", "return": "boolean", "signature": "boolean uuidIsValid( String uuid )", "full_signature": "public static boolean uuidIsValid( String uuid )", "class_method_signature": "ValidationUtils.uuidIsValid( String uuid )", "testcase": false, "constructor": false}, {"identifier": "usernameIsValid", "parameters": "( String username )", "modifiers": "public static", "return": "boolean", "signature": "boolean usernameIsValid( String username )", "full_signature": "public static boolean usernameIsValid( String username )", "class_method_signature": "ValidationUtils.usernameIsValid( String username )", "testcase": false, "constructor": false}, {"identifier": "passwordIsValid", "parameters": "( String password )", "modifiers": "public static", "return": "boolean", "signature": "boolean passwordIsValid( String password )", "full_signature": "public static boolean passwordIsValid( String password )", "class_method_signature": "ValidationUtils.passwordIsValid( String password )", "testcase": false, "constructor": false}, {"identifier": "coordinateIsValid", "parameters": "( String coordinate )", "modifiers": "public static", "return": "boolean", "signature": "boolean coordinateIsValid( String coordinate )", "full_signature": "public static boolean coordinateIsValid( String coordinate )", "class_method_signature": "ValidationUtils.coordinateIsValid( String coordinate )", "testcase": false, "constructor": false}, {"identifier": "bboxIsValid", "parameters": "( String bbox )", "modifiers": "public static", "return": "boolean", "signature": "boolean bboxIsValid( String bbox )", "full_signature": "public static boolean bboxIsValid( String bbox )", "class_method_signature": "ValidationUtils.bboxIsValid( String bbox )", "testcase": false, "constructor": false}, {"identifier": "getLongitude", "parameters": "( String coordinate )", "modifiers": "public static", "return": "String", "signature": "String getLongitude( String coordinate )", "full_signature": "public static String getLongitude( String coordinate )", "class_method_signature": "ValidationUtils.getLongitude( String coordinate )", "testcase": false, "constructor": false}, {"identifier": "getLatitude", "parameters": "( String coordinate )", "modifiers": "public static", "return": "String", "signature": "String getLatitude( String coordinate )", "full_signature": "public static String getLatitude( String coordinate )", "class_method_signature": "ValidationUtils.getLatitude( String coordinate )", "testcase": false, "constructor": false}, {"identifier": "getCoordinatePoint2D", "parameters": "( String coordinate )", "modifiers": "public static", "return": "Point2D", "signature": "Point2D getCoordinatePoint2D( String coordinate )", "full_signature": "public static Point2D getCoordinatePoint2D( String coordinate )", "class_method_signature": "ValidationUtils.getCoordinatePoint2D( String coordinate )", "testcase": false, "constructor": false}, {"identifier": "getCoordinate", "parameters": "( String longitude, String latitude )", "modifiers": "public static", "return": "String", "signature": "String getCoordinate( String longitude, String latitude )", "full_signature": "public static String getCoordinate( String longitude, String latitude )", "class_method_signature": "ValidationUtils.getCoordinate( String longitude, String latitude )", "testcase": false, "constructor": false}, {"identifier": "dataValueIsValid", "parameters": "( String value, DataElement dataElement )", "modifiers": "public static", "return": "String", "signature": "String dataValueIsValid( String value, DataElement dataElement )", "full_signature": "public static String dataValueIsValid( String value, DataElement dataElement )", "class_method_signature": "ValidationUtils.dataValueIsValid( String value, DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "dataValueIsValid", "parameters": "( String value, ValueType valueType )", "modifiers": "public static", "return": "String", "signature": "String dataValueIsValid( String value, ValueType valueType )", "full_signature": "public static String dataValueIsValid( String value, ValueType valueType )", "class_method_signature": "ValidationUtils.dataValueIsValid( String value, ValueType valueType )", "testcase": false, "constructor": false}, {"identifier": "dataValueIsZeroAndInsignificant", "parameters": "( String value, DataElement dataElement )", "modifiers": "public static", "return": "boolean", "signature": "boolean dataValueIsZeroAndInsignificant( String value, DataElement dataElement )", "full_signature": "public static boolean dataValueIsZeroAndInsignificant( String value, DataElement dataElement )", "class_method_signature": "ValidationUtils.dataValueIsZeroAndInsignificant( String value, DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "commentIsValid", "parameters": "( String comment )", "modifiers": "public static", "return": "String", "signature": "String commentIsValid( String comment )", "full_signature": "public static String commentIsValid( String comment )", "class_method_signature": "ValidationUtils.commentIsValid( String comment )", "testcase": false, "constructor": false}, {"identifier": "storedByIsValid", "parameters": "( String storedBy )", "modifiers": "public static", "return": "String", "signature": "String storedByIsValid( String storedBy )", "full_signature": "public static String storedByIsValid( String storedBy )", "class_method_signature": "ValidationUtils.storedByIsValid( String storedBy )", "testcase": false, "constructor": false}, {"identifier": "isValidHexColor", "parameters": "( String value )", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidHexColor( String value )", "full_signature": "public static boolean isValidHexColor( String value )", "class_method_signature": "ValidationUtils.isValidHexColor( String value )", "testcase": false, "constructor": false}, {"identifier": "getSubstitutionValue", "parameters": "( ValueType valueType )", "modifiers": "public static", "return": "Object", "signature": "Object getSubstitutionValue( ValueType valueType )", "full_signature": "public static Object getSubstitutionValue( ValueType valueType )", "class_method_signature": "ValidationUtils.getSubstitutionValue( ValueType valueType )", "testcase": false, "constructor": false}, {"identifier": "normalizeBoolean", "parameters": "( String bool, ValueType valueType )", "modifiers": "public static", "return": "String", "signature": "String normalizeBoolean( String bool, ValueType valueType )", "full_signature": "public static String normalizeBoolean( String bool, ValueType valueType )", "class_method_signature": "ValidationUtils.normalizeBoolean( String bool, ValueType valueType )", "testcase": false, "constructor": false}, {"identifier": "validateRenderingType", "parameters": "( Class<?> clazz, ValueType valueType, boolean optionSet, ValueTypeRenderingType type )", "modifiers": "public static", "return": "boolean", "signature": "boolean validateRenderingType( Class<?> clazz, ValueType valueType, boolean optionSet, ValueTypeRenderingType type )", "full_signature": "public static boolean validateRenderingType( Class<?> clazz, ValueType valueType, boolean optionSet, ValueTypeRenderingType type )", "class_method_signature": "ValidationUtils.validateRenderingType( Class<?> clazz, ValueType valueType, boolean optionSet, ValueTypeRenderingType type )", "testcase": false, "constructor": false}, {"identifier": "validateWhatsapp", "parameters": "( String whatsapp )", "modifiers": "public static", "return": "boolean", "signature": "boolean validateWhatsapp( String whatsapp )", "full_signature": "public static boolean validateWhatsapp( String whatsapp )", "class_method_signature": "ValidationUtils.validateWhatsapp( String whatsapp )", "testcase": false, "constructor": false}, {"identifier": "validateInternationalPhoneNumber", "parameters": "( String phoneNumber )", "modifiers": "public static", "return": "boolean", "signature": "boolean validateInternationalPhoneNumber( String phoneNumber )", "full_signature": "public static boolean validateInternationalPhoneNumber( String phoneNumber )", "class_method_signature": "ValidationUtils.validateInternationalPhoneNumber( String phoneNumber )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util/ValidationUtils.java"}, "focal_method": {"identifier": "uuidIsValid", "parameters": "( String uuid )", "modifiers": "public static", "return": "boolean", "body": "public static boolean uuidIsValid( String uuid )\n    {\n        try\n        {\n            UUID.fromString( uuid );\n            return true;\n        }\n        catch ( IllegalArgumentException ex )\n        {\n            return false;\n        }\n    }", "signature": "boolean uuidIsValid( String uuid )", "full_signature": "public static boolean uuidIsValid( String uuid )", "class_method_signature": "ValidationUtils.uuidIsValid( String uuid )", "testcase": false, "constructor": false, "invocations": ["fromString"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}