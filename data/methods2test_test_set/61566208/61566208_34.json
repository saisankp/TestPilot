{"test_class": {"identifier": "CumulusLacpGroupHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InputStream interfacesFileWithBondAnd2Ports;", "modifier": "private", "type": "InputStream", "declarator": "interfacesFileWithBondAnd2Ports", "var_name": "interfacesFileWithBondAnd2Ports"}], "file": "modules/cumulus-switch/src/test/java/com/vmware/vrack/hms/switches/cumulus/CumulusLacpGroupHelperTest.java"}, "test_case": {"identifier": "deleteAllPortsFromLag", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteAllPortsFromLag()\n    {\n        CumulusLacpGroupHelper lacpHelper = new CumulusLacpGroupHelper( null );\n        Configuration configuration = Configuration.parse( interfacesFileWithBondAnd2Ports );\n        ConfigBlock cb = configuration.getConfigBlock( \"bond47\" );\n        Bond bond = (Bond) cb;\n        List<String> bondVlans = bond.vlans;\n\n        SwitchLacpGroup lag = new SwitchLacpGroup();\n\n        lag.setName( cb.name );\n        lag.setPorts( Arrays.asList( \"swp47\", \"swp48\" ) );\n\n        System.out.println( configuration.getString() );\n\n        try\n        {\n            lacpHelper.deleteSwitchPortFromLacpGroup( lag, Arrays.asList( \"swp47\" ), configuration );\n            System.out.println( configuration.getString() );\n            lacpHelper.deleteSwitchPortFromLacpGroup( lag, Arrays.asList( \"swp48\" ), configuration );\n        }\n        catch ( HmsException e )\n        {\n            fail( \"Failed to delete port from LACP group. Reason: \" + e.getMessage() );\n        }\n\n        // validate now\n        cb = configuration.getConfigBlock( \"bond47\" );\n\n        if ( cb != null )\n        {\n            fail( \"Incorrectly retained LAG without any slave ports.\" );\n        }\n\n        // also validate the VLAN aware bridge\n        SwitchPort portSwp47 = configuration.bridges.get( 0 ).getMemberByName( \"swp47\" );\n        SwitchPort portSwp48 = configuration.bridges.get( 0 ).getMemberByName( \"swp48\" );\n        if ( portSwp47 == null || portSwp48 == null\n            || configuration.bridges.get( 0 ).getMemberByName( \"bond47\" ) != null )\n        {\n            fail( \"VLAN aware bridge settings are not proper. Either deleted ports are absent or the LAG is present\" );\n        }\n\n        // now validate that the VLANs which were with the LAG has been propagated to the deleted port\n        if ( portSwp47.vlans != bondVlans && !portSwp47.vlans.contains( bondVlans ) )\n        {\n            fail( \"VLANs of the parent LACP bond have not propagated to the deleted port\" );\n        }\n        if ( portSwp48.vlans != bondVlans && !portSwp48.vlans.contains( bondVlans ) )\n        {\n            fail( \"VLANs of the parent LACP bond have not propagated to the deleted port\" );\n        }\n\n        if ( !checkCumulusConfigurationSanctity( configuration ) )\n            fail( \"Corrupted the configuration because of which at least 1 port or a bond is present more than once.\" );\n\n        System.out.println( configuration.getString() );\n    }", "signature": "void deleteAllPortsFromLag()", "full_signature": "@Test public void deleteAllPortsFromLag()", "class_method_signature": "CumulusLacpGroupHelperTest.deleteAllPortsFromLag()", "testcase": true, "constructor": false, "invocations": ["parse", "getConfigBlock", "setName", "setPorts", "asList", "println", "getString", "deleteSwitchPortFromLacpGroup", "asList", "println", "getString", "deleteSwitchPortFromLacpGroup", "asList", "fail", "getMessage", "getConfigBlock", "fail", "getMemberByName", "get", "getMemberByName", "get", "getMemberByName", "get", "fail", "contains", "fail", "contains", "fail", "checkCumulusConfigurationSanctity", "fail", "println", "getString"]}, "focal_class": {"identifier": "CumulusLacpGroupHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings( \"unused\" )\n    /** Instantiated Cumulus Switch Service object */\n    private CumulusTorSwitchService service;", "modifier": "@SuppressWarnings( \"unused\" )\n    /** Instantiated Cumulus Switch Service object */\n    private", "type": "CumulusTorSwitchService", "declarator": "service", "var_name": "service"}, {"original_string": "private static Logger logger = Logger.getLogger( CumulusLacpGroupHelper.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( CumulusLacpGroupHelper.class )", "var_name": "logger"}], "methods": [{"identifier": "CumulusLacpGroupHelper", "parameters": "( CumulusTorSwitchService service )", "modifiers": "public", "return": "", "signature": " CumulusLacpGroupHelper( CumulusTorSwitchService service )", "full_signature": "public  CumulusLacpGroupHelper( CumulusTorSwitchService service )", "class_method_signature": "CumulusLacpGroupHelper.CumulusLacpGroupHelper( CumulusTorSwitchService service )", "testcase": false, "constructor": true}, {"identifier": "getSwitchLacpGroups", "parameters": "( SwitchNode switchNode )", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSwitchLacpGroups( SwitchNode switchNode )", "full_signature": "public List<String> getSwitchLacpGroups( SwitchNode switchNode )", "class_method_signature": "CumulusLacpGroupHelper.getSwitchLacpGroups( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName )", "modifiers": "public", "return": "SwitchLacpGroup", "signature": "SwitchLacpGroup getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "full_signature": "public SwitchLacpGroup getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "class_method_signature": "CumulusLacpGroupHelper.getSwitchLacpGroup( SwitchNode switchNode, String lacpGroupName )", "testcase": false, "constructor": false}, {"identifier": "deleteLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName )", "modifiers": "public", "return": "boolean", "signature": "boolean deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "full_signature": "public boolean deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "class_method_signature": "CumulusLacpGroupHelper.deleteLacpGroup( SwitchNode switchNode, String lacpGroupName )", "testcase": false, "constructor": false}, {"identifier": "deleteLacpGroup", "parameters": "( SwitchLacpGroup lag, Configuration configuration )", "modifiers": "public", "return": "Configuration", "signature": "Configuration deleteLacpGroup( SwitchLacpGroup lag, Configuration configuration )", "full_signature": "public Configuration deleteLacpGroup( SwitchLacpGroup lag, Configuration configuration )", "class_method_signature": "CumulusLacpGroupHelper.deleteLacpGroup( SwitchLacpGroup lag, Configuration configuration )", "testcase": false, "constructor": false}, {"identifier": "deleteSwitchPortFromLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName, String port )", "modifiers": "public", "return": "boolean", "signature": "boolean deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "full_signature": "public boolean deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "class_method_signature": "CumulusLacpGroupHelper.deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "testcase": false, "constructor": false}, {"identifier": "deleteSwitchPortFromLacpGroup", "parameters": "( SwitchLacpGroup lag, List<String> portList, Configuration configuration )", "modifiers": "public", "return": "void", "signature": "void deleteSwitchPortFromLacpGroup( SwitchLacpGroup lag, List<String> portList, Configuration configuration )", "full_signature": "public void deleteSwitchPortFromLacpGroup( SwitchLacpGroup lag, List<String> portList, Configuration configuration )", "class_method_signature": "CumulusLacpGroupHelper.deleteSwitchPortFromLacpGroup( SwitchLacpGroup lag, List<String> portList, Configuration configuration )", "testcase": false, "constructor": false}], "file": "modules/cumulus-switch/src/main/java/com/vmware/vrack/hms/switches/cumulus/CumulusLacpGroupHelper.java"}, "focal_method": {"identifier": "deleteSwitchPortFromLacpGroup", "parameters": "( SwitchNode switchNode, String lacpGroupName, String port )", "modifiers": "public", "return": "boolean", "body": "public boolean deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )\n        throws HmsOobNetworkException\n    {\n        SwitchLacpGroup lag = null;\n\n        try\n        {\n            lag = getSwitchLacpGroup( switchNode, lacpGroupName );\n        }\n        catch ( HmsObjectNotFoundException e )\n        {\n            return true; // we already in desired state\n        }\n        catch ( HmsException e )\n        {\n            throw new HmsOobNetworkException( e.getMessage(), e, HmsOobNetworkErrorCode.GET_OPERATION_FAILED );\n        }\n\n        if ( lag == null )\n        {\n            throw new HmsOobNetworkException( \"LACP group \" + lacpGroupName + \" could not be found.\", null,\n                                              HmsOobNetworkErrorCode.GET_OPERATION_FAILED );\n        }\n\n        logger.info( \"Deleting LACP group \" + lacpGroupName + \" on switch \" + switchNode.getSwitchId() );\n\n        CumulusTorSwitchSession session = (CumulusTorSwitchSession) CumulusUtil.getSession( switchNode );\n        Configuration configuration = null;\n\n        try\n        {\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            session.download( baos, CumulusConstants.INTERFACES_FILE );\n            configuration = Configuration.parse( new ByteArrayInputStream( baos.toByteArray() ) );\n        }\n        catch ( Exception e )\n        {\n            logger.error( \"Exception received while reading or parsing interfaces file\", e );\n            throw new HmsOobNetworkException( \"Exception received while reading or parsing interfaces file\", e,\n                                              HmsOobNetworkErrorCode.DOWNLOAD_FAILED );\n        }\n\n        /* Delete the mentioned port its parent LACP bond. */\n        deleteSwitchPortFromLacpGroup( lag, Arrays.asList( port ), configuration );\n\n        /* Reload interfaces */\n        SshExecResult result;\n        try\n        {\n            /* Upload the file */\n            ByteArrayInputStream bais = new ByteArrayInputStream( configuration.getString().getBytes() );\n            CumulusUtil.uploadAsRoot( switchNode, bais, CumulusConstants.INTERFACES_FILE );\n            CumulusUtil.configurePersistenceDirectory( switchNode );\n\n            result =\n                session.executeEnhanced( CumulusConstants.RELOAD_INTERFACES.replaceAll( \"\\\\{password\\\\}\",\n                                                                                        CumulusUtil.qr( switchNode.getPassword() ) ) );\n\n            result.logIfError( logger );\n        }\n        catch ( HmsException e )\n        {\n            throw new HmsOobNetworkException( e.getMessage(), e, HmsOobNetworkErrorCode.UPLOAD_FAILED );\n        }\n\n        return true;\n    }", "signature": "boolean deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "full_signature": "public boolean deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "class_method_signature": "CumulusLacpGroupHelper.deleteSwitchPortFromLacpGroup( SwitchNode switchNode, String lacpGroupName, String port )", "testcase": false, "constructor": false, "invocations": ["getSwitchLacpGroup", "getMessage", "info", "getSwitchId", "getSession", "download", "parse", "toByteArray", "error", "deleteSwitchPortFromLacpGroup", "asList", "getBytes", "getString", "uploadAsRoot", "configurePersistenceDirectory", "executeEnhanced", "replaceAll", "qr", "getPassword", "logIfError", "getMessage"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}