{"test_class": {"identifier": "ChangeTelnetHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TelnetHandler change = new ChangeTelnetHandler();", "modifier": "private static", "type": "TelnetHandler", "declarator": "change = new ChangeTelnetHandler()", "var_name": "change"}, {"original_string": "private Channel mockChannel;", "modifier": "private", "type": "Channel", "declarator": "mockChannel", "var_name": "mockChannel"}, {"original_string": "private Invoker<DemoService> mockInvoker;", "modifier": "private", "type": "Invoker<DemoService>", "declarator": "mockInvoker", "var_name": "mockInvoker"}], "file": "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/ChangeTelnetHandlerTest.java"}, "test_case": {"identifier": "testChangeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeName() throws RemotingException {\n        DubboProtocol.getDubboProtocol().export(mockInvoker);\n        String result = change.telnet(mockChannel, \"org.apache.dubbo.qos.legacy.service.DemoService\");\n        assertEquals(\"Used the org.apache.dubbo.qos.legacy.service.DemoService as default.\\r\\nYou can cancel default service by command: cd /\",\n                result);\n    }", "signature": "void testChangeName()", "full_signature": "@Test public void testChangeName()", "class_method_signature": "ChangeTelnetHandlerTest.testChangeName()", "testcase": true, "constructor": false, "invocations": ["export", "getDubboProtocol", "telnet", "assertEquals"]}, "focal_class": {"identifier": "ChangeTelnetHandler", "superclass": "", "interfaces": "implements TelnetHandler", "fields": [{"original_string": "public static final String SERVICE_KEY = \"telnet.service\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_KEY = \"telnet.service\"", "var_name": "SERVICE_KEY"}], "methods": [{"identifier": "telnet", "parameters": "(Channel channel, String message)", "modifiers": "@Override public", "return": "String", "signature": "String telnet(Channel channel, String message)", "full_signature": "@Override public String telnet(Channel channel, String message)", "class_method_signature": "ChangeTelnetHandler.telnet(Channel channel, String message)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/legacy/ChangeTelnetHandler.java"}, "focal_method": {"identifier": "telnet", "parameters": "(Channel channel, String message)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String telnet(Channel channel, String message) {\n        if (message == null || message.length() == 0) {\n            return \"Please input service name, eg: \\r\\ncd XxxService\\r\\ncd com.xxx.XxxService\";\n        }\n        StringBuilder buf = new StringBuilder();\n        if (\"/\".equals(message) || \"..\".equals(message)) {\n            String service = (String) channel.getAttribute(SERVICE_KEY);\n            channel.removeAttribute(SERVICE_KEY);\n            buf.append(\"Cancelled default service \").append(service).append(\".\");\n        } else {\n            boolean found = false;\n            for (Exporter<?> exporter : DubboProtocol.getDubboProtocol().getExporters()) {\n                if (message.equals(exporter.getInvoker().getInterface().getSimpleName())\n                        || message.equals(exporter.getInvoker().getInterface().getName())\n                        || message.equals(exporter.getInvoker().getUrl().getPath())) {\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                channel.setAttribute(SERVICE_KEY, message);\n                buf.append(\"Used the \").append(message).append(\" as default.\\r\\nYou can cancel default service by command: cd /\");\n            } else {\n                buf.append(\"No such service \").append(message);\n            }\n        }\n        return buf.toString();\n    }", "signature": "String telnet(Channel channel, String message)", "full_signature": "@Override public String telnet(Channel channel, String message)", "class_method_signature": "ChangeTelnetHandler.telnet(Channel channel, String message)", "testcase": false, "constructor": false, "invocations": ["length", "equals", "equals", "getAttribute", "removeAttribute", "append", "append", "append", "getExporters", "getDubboProtocol", "equals", "getSimpleName", "getInterface", "getInvoker", "equals", "getName", "getInterface", "getInvoker", "equals", "getPath", "getUrl", "getInvoker", "setAttribute", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}