{"test_class": {"identifier": "DefaultMetadataHeadersTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/headers/metadata/DefaultMetadataHeadersTest.java"}, "test_case": {"identifier": "parseEmptyJsonArrayCharSequence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseEmptyJsonArrayCharSequence() {\n        final String metadataHeaderValue = String.valueOf(JsonArray.empty());\n\n        assertThat(DefaultMetadataHeaders.parseMetadataHeaders(metadataHeaderValue)).isEmpty();\n    }", "signature": "void parseEmptyJsonArrayCharSequence()", "full_signature": "@Test public void parseEmptyJsonArrayCharSequence()", "class_method_signature": "DefaultMetadataHeadersTest.parseEmptyJsonArrayCharSequence()", "testcase": true, "constructor": false, "invocations": ["valueOf", "empty", "isEmpty", "assertThat", "parseMetadataHeaders"]}, "focal_class": {"identifier": "DefaultMetadataHeaders", "superclass": "extends AbstractSet<MetadataHeader>", "interfaces": "implements MetadataHeaders", "fields": [{"original_string": "private final SortedSet<MetadataHeader> treeSet;", "modifier": "private final", "type": "SortedSet<MetadataHeader>", "declarator": "treeSet", "var_name": "treeSet"}], "methods": [{"identifier": "DefaultMetadataHeaders", "parameters": "(final SortedSet<MetadataHeader> treeSet)", "modifiers": "private", "return": "", "signature": " DefaultMetadataHeaders(final SortedSet<MetadataHeader> treeSet)", "full_signature": "private  DefaultMetadataHeaders(final SortedSet<MetadataHeader> treeSet)", "class_method_signature": "DefaultMetadataHeaders.DefaultMetadataHeaders(final SortedSet<MetadataHeader> treeSet)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "()", "modifiers": "static", "return": "DefaultMetadataHeaders", "signature": "DefaultMetadataHeaders newInstance()", "full_signature": "static DefaultMetadataHeaders newInstance()", "class_method_signature": "DefaultMetadataHeaders.newInstance()", "testcase": false, "constructor": false}, {"identifier": "parseMetadataHeaders", "parameters": "(final CharSequence metadataHeadersCharSequence)", "modifiers": "static", "return": "DefaultMetadataHeaders", "signature": "DefaultMetadataHeaders parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "full_signature": "static DefaultMetadataHeaders parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "class_method_signature": "DefaultMetadataHeaders.parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "testcase": false, "constructor": false}, {"identifier": "parseJsonArray", "parameters": "(final JsonArray jsonArray)", "modifiers": "private static", "return": "DefaultMetadataHeaders", "signature": "DefaultMetadataHeaders parseJsonArray(final JsonArray jsonArray)", "full_signature": "private static DefaultMetadataHeaders parseJsonArray(final JsonArray jsonArray)", "class_method_signature": "DefaultMetadataHeaders.parseJsonArray(final JsonArray jsonArray)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonArray", "signature": "JsonArray toJson()", "full_signature": "@Override public JsonArray toJson()", "class_method_signature": "DefaultMetadataHeaders.toJson()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final MetadataHeader metadataHeader)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(final MetadataHeader metadataHeader)", "full_signature": "@Override public boolean add(final MetadataHeader metadataHeader)", "class_method_signature": "DefaultMetadataHeaders.add(final MetadataHeader metadataHeader)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(final Collection<? extends MetadataHeader> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(final Collection<? extends MetadataHeader> c)", "full_signature": "@Override public boolean addAll(final Collection<? extends MetadataHeader> c)", "class_method_signature": "DefaultMetadataHeaders.addAll(final Collection<? extends MetadataHeader> c)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<MetadataHeader>", "signature": "Iterator<MetadataHeader> iterator()", "full_signature": "@Override public Iterator<MetadataHeader> iterator()", "class_method_signature": "DefaultMetadataHeaders.iterator()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(final Object o)", "full_signature": "@Override public boolean remove(final Object o)", "class_method_signature": "DefaultMetadataHeaders.remove(final Object o)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(final Collection<?> c)", "full_signature": "@Override public boolean removeAll(final Collection<?> c)", "class_method_signature": "DefaultMetadataHeaders.removeAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(final Collection<?> c)", "full_signature": "@Override public boolean retainAll(final Collection<?> c)", "class_method_signature": "DefaultMetadataHeaders.retainAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "DefaultMetadataHeaders.clear()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "DefaultMetadataHeaders.size()", "testcase": false, "constructor": false}, {"identifier": "comparator", "parameters": "()", "modifiers": "@Override public", "return": "Comparator<? super MetadataHeader>", "signature": "Comparator<? super MetadataHeader> comparator()", "full_signature": "@Override public Comparator<? super MetadataHeader> comparator()", "class_method_signature": "DefaultMetadataHeaders.comparator()", "testcase": false, "constructor": false}, {"identifier": "subSet", "parameters": "(final MetadataHeader metadataHeader, final MetadataHeader e1)", "modifiers": "@Override public", "return": "SortedSet<MetadataHeader>", "signature": "SortedSet<MetadataHeader> subSet(final MetadataHeader metadataHeader, final MetadataHeader e1)", "full_signature": "@Override public SortedSet<MetadataHeader> subSet(final MetadataHeader metadataHeader, final MetadataHeader e1)", "class_method_signature": "DefaultMetadataHeaders.subSet(final MetadataHeader metadataHeader, final MetadataHeader e1)", "testcase": false, "constructor": false}, {"identifier": "headSet", "parameters": "(final MetadataHeader metadataHeader)", "modifiers": "@Override public", "return": "SortedSet<MetadataHeader>", "signature": "SortedSet<MetadataHeader> headSet(final MetadataHeader metadataHeader)", "full_signature": "@Override public SortedSet<MetadataHeader> headSet(final MetadataHeader metadataHeader)", "class_method_signature": "DefaultMetadataHeaders.headSet(final MetadataHeader metadataHeader)", "testcase": false, "constructor": false}, {"identifier": "tailSet", "parameters": "(final MetadataHeader metadataHeader)", "modifiers": "@Override public", "return": "SortedSet<MetadataHeader>", "signature": "SortedSet<MetadataHeader> tailSet(final MetadataHeader metadataHeader)", "full_signature": "@Override public SortedSet<MetadataHeader> tailSet(final MetadataHeader metadataHeader)", "class_method_signature": "DefaultMetadataHeaders.tailSet(final MetadataHeader metadataHeader)", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "@Override public", "return": "MetadataHeader", "signature": "MetadataHeader first()", "full_signature": "@Override public MetadataHeader first()", "class_method_signature": "DefaultMetadataHeaders.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "@Override public", "return": "MetadataHeader", "signature": "MetadataHeader last()", "full_signature": "@Override public MetadataHeader last()", "class_method_signature": "DefaultMetadataHeaders.last()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "DefaultMetadataHeaders.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultMetadataHeaders.hashCode()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/headers/metadata/DefaultMetadataHeaders.java"}, "focal_method": {"identifier": "parseMetadataHeaders", "parameters": "(final CharSequence metadataHeadersCharSequence)", "modifiers": "static", "return": "DefaultMetadataHeaders", "body": "static DefaultMetadataHeaders parseMetadataHeaders(final CharSequence metadataHeadersCharSequence) {\n        checkNotNull(metadataHeadersCharSequence, \"metadataHeadersCharSequence\");\n        final DefaultMetadataHeaders result;\n        if (0 < metadataHeadersCharSequence.length()) {\n            result = parseJsonArray(JsonArray.of(metadataHeadersCharSequence.toString()));\n        } else {\n            result = newInstance();\n        }\n        return result;\n    }", "signature": "DefaultMetadataHeaders parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "full_signature": "static DefaultMetadataHeaders parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "class_method_signature": "DefaultMetadataHeaders.parseMetadataHeaders(final CharSequence metadataHeadersCharSequence)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "length", "parseJsonArray", "of", "toString", "newInstance"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}