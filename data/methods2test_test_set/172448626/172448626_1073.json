{"test_class": {"identifier": "NestedScrollViewTest", "superclass": "extends\n        BaseInstrumentationTestCase<TestContentViewActivity>", "interfaces": "", "fields": [{"original_string": "private NestedScrollView mNestedScrollView;", "modifier": "private", "type": "NestedScrollView", "declarator": "mNestedScrollView", "var_name": "mNestedScrollView"}, {"original_string": "private View mChild;", "modifier": "private", "type": "View", "declarator": "mChild", "var_name": "mChild"}], "file": "androidx/core/widget/NestedScrollViewTest.java"}, "test_case": {"identifier": "getBottomFadingEdgeStrength_childBottomIsAboveParentAndNoMargin_isZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBottomFadingEdgeStrength_childBottomIsAboveParentAndNoMargin_isZero() {\n        setup(100);\n        mNestedScrollView.setVerticalFadingEdgeEnabled(true);\n        measureAndLayout(100);\n\n        float expected = mNestedScrollView.getBottomFadingEdgeStrength();\n\n        assertThat(expected, is(0f));\n    }", "signature": "void getBottomFadingEdgeStrength_childBottomIsAboveParentAndNoMargin_isZero()", "full_signature": "@Test public void getBottomFadingEdgeStrength_childBottomIsAboveParentAndNoMargin_isZero()", "class_method_signature": "NestedScrollViewTest.getBottomFadingEdgeStrength_childBottomIsAboveParentAndNoMargin_isZero()", "testcase": true, "constructor": false, "invocations": ["setup", "setVerticalFadingEdgeEnabled", "measureAndLayout", "getBottomFadingEdgeStrength", "assertThat", "is"]}, "focal_class": {"identifier": "NestedScrollView", "superclass": "extends FrameLayout", "interfaces": "implements NestedScrollingParent2,\n        NestedScrollingChild2, ScrollingView", "fields": [{"original_string": "static final int ANIMATED_SCROLL_GAP = 250;", "modifier": "static final", "type": "int", "declarator": "ANIMATED_SCROLL_GAP = 250", "var_name": "ANIMATED_SCROLL_GAP"}, {"original_string": "static final float MAX_SCROLL_FACTOR = 0.5f;", "modifier": "static final", "type": "float", "declarator": "MAX_SCROLL_FACTOR = 0.5f", "var_name": "MAX_SCROLL_FACTOR"}, {"original_string": "private static final String TAG = \"NestedScrollView\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"NestedScrollView\"", "var_name": "TAG"}, {"original_string": "private long mLastScroll;", "modifier": "private", "type": "long", "declarator": "mLastScroll", "var_name": "mLastScroll"}, {"original_string": "private final Rect mTempRect = new Rect();", "modifier": "private final", "type": "Rect", "declarator": "mTempRect = new Rect()", "var_name": "mTempRect"}, {"original_string": "private OverScroller mScroller;", "modifier": "private", "type": "OverScroller", "declarator": "mScroller", "var_name": "mScroller"}, {"original_string": "private EdgeEffect mEdgeGlowTop;", "modifier": "private", "type": "EdgeEffect", "declarator": "mEdgeGlowTop", "var_name": "mEdgeGlowTop"}, {"original_string": "private EdgeEffect mEdgeGlowBottom;", "modifier": "private", "type": "EdgeEffect", "declarator": "mEdgeGlowBottom", "var_name": "mEdgeGlowBottom"}, {"original_string": "private int mLastMotionY;", "modifier": "private", "type": "int", "declarator": "mLastMotionY", "var_name": "mLastMotionY"}, {"original_string": "private boolean mIsLayoutDirty = true;", "modifier": "private", "type": "boolean", "declarator": "mIsLayoutDirty = true", "var_name": "mIsLayoutDirty"}, {"original_string": "private boolean mIsLaidOut = false;", "modifier": "private", "type": "boolean", "declarator": "mIsLaidOut = false", "var_name": "mIsLaidOut"}, {"original_string": "private View mChildToScrollTo = null;", "modifier": "private", "type": "View", "declarator": "mChildToScrollTo = null", "var_name": "mChildToScrollTo"}, {"original_string": "private boolean mIsBeingDragged = false;", "modifier": "private", "type": "boolean", "declarator": "mIsBeingDragged = false", "var_name": "mIsBeingDragged"}, {"original_string": "private VelocityTracker mVelocityTracker;", "modifier": "private", "type": "VelocityTracker", "declarator": "mVelocityTracker", "var_name": "mVelocityTracker"}, {"original_string": "private boolean mFillViewport;", "modifier": "private", "type": "boolean", "declarator": "mFillViewport", "var_name": "mFillViewport"}, {"original_string": "private boolean mSmoothScrollingEnabled = true;", "modifier": "private", "type": "boolean", "declarator": "mSmoothScrollingEnabled = true", "var_name": "mSmoothScrollingEnabled"}, {"original_string": "private int mTouchSlop;", "modifier": "private", "type": "int", "declarator": "mTouchSlop", "var_name": "mTouchSlop"}, {"original_string": "private int mMinimumVelocity;", "modifier": "private", "type": "int", "declarator": "mMinimumVelocity", "var_name": "mMinimumVelocity"}, {"original_string": "private int mMaximumVelocity;", "modifier": "private", "type": "int", "declarator": "mMaximumVelocity", "var_name": "mMaximumVelocity"}, {"original_string": "private int mActivePointerId = INVALID_POINTER;", "modifier": "private", "type": "int", "declarator": "mActivePointerId = INVALID_POINTER", "var_name": "mActivePointerId"}, {"original_string": "private final int[] mScrollOffset = new int[2];", "modifier": "private final", "type": "int[]", "declarator": "mScrollOffset = new int[2]", "var_name": "mScrollOffset"}, {"original_string": "private final int[] mScrollConsumed = new int[2];", "modifier": "private final", "type": "int[]", "declarator": "mScrollConsumed = new int[2]", "var_name": "mScrollConsumed"}, {"original_string": "private int mNestedYOffset;", "modifier": "private", "type": "int", "declarator": "mNestedYOffset", "var_name": "mNestedYOffset"}, {"original_string": "private int mLastScrollerY;", "modifier": "private", "type": "int", "declarator": "mLastScrollerY", "var_name": "mLastScrollerY"}, {"original_string": "private static final int INVALID_POINTER = -1;", "modifier": "private static final", "type": "int", "declarator": "INVALID_POINTER = -1", "var_name": "INVALID_POINTER"}, {"original_string": "private SavedState mSavedState;", "modifier": "private", "type": "SavedState", "declarator": "mSavedState", "var_name": "mSavedState"}, {"original_string": "private static final AccessibilityDelegate ACCESSIBILITY_DELEGATE = new AccessibilityDelegate();", "modifier": "private static final", "type": "AccessibilityDelegate", "declarator": "ACCESSIBILITY_DELEGATE = new AccessibilityDelegate()", "var_name": "ACCESSIBILITY_DELEGATE"}, {"original_string": "private static final int[] SCROLLVIEW_STYLEABLE = new int[]{\n            android.R.attr.fillViewport\n    };", "modifier": "private static final", "type": "int[]", "declarator": "SCROLLVIEW_STYLEABLE = new int[]{\n            android.R.attr.fillViewport\n    }", "var_name": "SCROLLVIEW_STYLEABLE"}, {"original_string": "private final NestedScrollingParentHelper mParentHelper;", "modifier": "private final", "type": "NestedScrollingParentHelper", "declarator": "mParentHelper", "var_name": "mParentHelper"}, {"original_string": "private final NestedScrollingChildHelper mChildHelper;", "modifier": "private final", "type": "NestedScrollingChildHelper", "declarator": "mChildHelper", "var_name": "mChildHelper"}, {"original_string": "private float mVerticalScrollFactor;", "modifier": "private", "type": "float", "declarator": "mVerticalScrollFactor", "var_name": "mVerticalScrollFactor"}, {"original_string": "private OnScrollChangeListener mOnScrollChangeListener;", "modifier": "private", "type": "OnScrollChangeListener", "declarator": "mOnScrollChangeListener", "var_name": "mOnScrollChangeListener"}], "methods": [{"identifier": "NestedScrollView", "parameters": "(@NonNull Context context)", "modifiers": "public", "return": "", "signature": " NestedScrollView(@NonNull Context context)", "full_signature": "public  NestedScrollView(@NonNull Context context)", "class_method_signature": "NestedScrollView.NestedScrollView(@NonNull Context context)", "testcase": false, "constructor": true}, {"identifier": "NestedScrollView", "parameters": "(@NonNull Context context, @Nullable AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs)", "full_signature": "public  NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs)", "class_method_signature": "NestedScrollView.NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "NestedScrollView", "parameters": "(@NonNull Context context, @Nullable AttributeSet attrs,\n                            int defStyleAttr)", "modifiers": "public", "return": "", "signature": " NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs,\n                            int defStyleAttr)", "full_signature": "public  NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs,\n                            int defStyleAttr)", "class_method_signature": "NestedScrollView.NestedScrollView(@NonNull Context context, @Nullable AttributeSet attrs,\n                            int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "startNestedScroll", "parameters": "(int axes, int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean startNestedScroll(int axes, int type)", "full_signature": "@Override public boolean startNestedScroll(int axes, int type)", "class_method_signature": "NestedScrollView.startNestedScroll(int axes, int type)", "testcase": false, "constructor": false}, {"identifier": "stopNestedScroll", "parameters": "(int type)", "modifiers": "@Override public", "return": "void", "signature": "void stopNestedScroll(int type)", "full_signature": "@Override public void stopNestedScroll(int type)", "class_method_signature": "NestedScrollView.stopNestedScroll(int type)", "testcase": false, "constructor": false}, {"identifier": "hasNestedScrollingParent", "parameters": "(int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNestedScrollingParent(int type)", "full_signature": "@Override public boolean hasNestedScrollingParent(int type)", "class_method_signature": "NestedScrollView.hasNestedScrollingParent(int type)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedScroll", "parameters": "(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow, int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow, int type)", "full_signature": "@Override public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow, int type)", "class_method_signature": "NestedScrollView.dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow, int type)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreScroll", "parameters": "(int dx, int dy, int[] consumed, int[] offsetInWindow,\n                                           int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,\n                                           int type)", "full_signature": "@Override public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,\n                                           int type)", "class_method_signature": "NestedScrollView.dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,\n                                           int type)", "testcase": false, "constructor": false}, {"identifier": "setNestedScrollingEnabled", "parameters": "(boolean enabled)", "modifiers": "@Override public", "return": "void", "signature": "void setNestedScrollingEnabled(boolean enabled)", "full_signature": "@Override public void setNestedScrollingEnabled(boolean enabled)", "class_method_signature": "NestedScrollView.setNestedScrollingEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "isNestedScrollingEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNestedScrollingEnabled()", "full_signature": "@Override public boolean isNestedScrollingEnabled()", "class_method_signature": "NestedScrollView.isNestedScrollingEnabled()", "testcase": false, "constructor": false}, {"identifier": "startNestedScroll", "parameters": "(int axes)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean startNestedScroll(int axes)", "full_signature": "@Override public boolean startNestedScroll(int axes)", "class_method_signature": "NestedScrollView.startNestedScroll(int axes)", "testcase": false, "constructor": false}, {"identifier": "stopNestedScroll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stopNestedScroll()", "full_signature": "@Override public void stopNestedScroll()", "class_method_signature": "NestedScrollView.stopNestedScroll()", "testcase": false, "constructor": false}, {"identifier": "hasNestedScrollingParent", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNestedScrollingParent()", "full_signature": "@Override public boolean hasNestedScrollingParent()", "class_method_signature": "NestedScrollView.hasNestedScrollingParent()", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedScroll", "parameters": "(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow)", "full_signature": "@Override public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow)", "class_method_signature": "NestedScrollView.dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,\n                                        int dyUnconsumed, int[] offsetInWindow)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreScroll", "parameters": "(int dx, int dy, int[] consumed, int[] offsetInWindow)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow)", "full_signature": "@Override public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow)", "class_method_signature": "NestedScrollView.dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedFling", "parameters": "(float velocityX, float velocityY, boolean consumed)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed)", "full_signature": "@Override public boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed)", "class_method_signature": "NestedScrollView.dispatchNestedFling(float velocityX, float velocityY, boolean consumed)", "testcase": false, "constructor": false}, {"identifier": "dispatchNestedPreFling", "parameters": "(float velocityX, float velocityY)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchNestedPreFling(float velocityX, float velocityY)", "full_signature": "@Override public boolean dispatchNestedPreFling(float velocityX, float velocityY)", "class_method_signature": "NestedScrollView.dispatchNestedPreFling(float velocityX, float velocityY)", "testcase": false, "constructor": false}, {"identifier": "onStartNestedScroll", "parameters": "(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onStartNestedScroll(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "full_signature": "@Override public boolean onStartNestedScroll(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "class_method_signature": "NestedScrollView.onStartNestedScroll(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "testcase": false, "constructor": false}, {"identifier": "onNestedScrollAccepted", "parameters": "(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedScrollAccepted(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "full_signature": "@Override public void onNestedScrollAccepted(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "class_method_signature": "NestedScrollView.onNestedScrollAccepted(@NonNull View child, @NonNull View target, int axes,\n                                       int type)", "testcase": false, "constructor": false}, {"identifier": "onStopNestedScroll", "parameters": "(@NonNull View target, int type)", "modifiers": "@Override public", "return": "void", "signature": "void onStopNestedScroll(@NonNull View target, int type)", "full_signature": "@Override public void onStopNestedScroll(@NonNull View target, int type)", "class_method_signature": "NestedScrollView.onStopNestedScroll(@NonNull View target, int type)", "testcase": false, "constructor": false}, {"identifier": "onNestedScroll", "parameters": "(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed, int type)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed, int type)", "full_signature": "@Override public void onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed, int type)", "class_method_signature": "NestedScrollView.onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed, int type)", "testcase": false, "constructor": false}, {"identifier": "onNestedPreScroll", "parameters": "(@NonNull View target, int dx, int dy, @NonNull int[] consumed,\n                                  int type)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedPreScroll(@NonNull View target, int dx, int dy, @NonNull int[] consumed,\n                                  int type)", "full_signature": "@Override public void onNestedPreScroll(@NonNull View target, int dx, int dy, @NonNull int[] consumed,\n                                  int type)", "class_method_signature": "NestedScrollView.onNestedPreScroll(@NonNull View target, int dx, int dy, @NonNull int[] consumed,\n                                  int type)", "testcase": false, "constructor": false}, {"identifier": "onStartNestedScroll", "parameters": "(View child, View target, int nestedScrollAxes)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onStartNestedScroll(View child, View target, int nestedScrollAxes)", "full_signature": "@Override public boolean onStartNestedScroll(View child, View target, int nestedScrollAxes)", "class_method_signature": "NestedScrollView.onStartNestedScroll(View child, View target, int nestedScrollAxes)", "testcase": false, "constructor": false}, {"identifier": "onNestedScrollAccepted", "parameters": "(View child, View target, int nestedScrollAxes)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedScrollAccepted(View child, View target, int nestedScrollAxes)", "full_signature": "@Override public void onNestedScrollAccepted(View child, View target, int nestedScrollAxes)", "class_method_signature": "NestedScrollView.onNestedScrollAccepted(View child, View target, int nestedScrollAxes)", "testcase": false, "constructor": false}, {"identifier": "onStopNestedScroll", "parameters": "(View target)", "modifiers": "@Override public", "return": "void", "signature": "void onStopNestedScroll(View target)", "full_signature": "@Override public void onStopNestedScroll(View target)", "class_method_signature": "NestedScrollView.onStopNestedScroll(View target)", "testcase": false, "constructor": false}, {"identifier": "onNestedScroll", "parameters": "(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed)", "full_signature": "@Override public void onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed)", "class_method_signature": "NestedScrollView.onNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed,\n                               int dyUnconsumed)", "testcase": false, "constructor": false}, {"identifier": "onNestedPreScroll", "parameters": "(View target, int dx, int dy, int[] consumed)", "modifiers": "@Override public", "return": "void", "signature": "void onNestedPreScroll(View target, int dx, int dy, int[] consumed)", "full_signature": "@Override public void onNestedPreScroll(View target, int dx, int dy, int[] consumed)", "class_method_signature": "NestedScrollView.onNestedPreScroll(View target, int dx, int dy, int[] consumed)", "testcase": false, "constructor": false}, {"identifier": "onNestedFling", "parameters": "(View target, float velocityX, float velocityY, boolean consumed)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onNestedFling(View target, float velocityX, float velocityY, boolean consumed)", "full_signature": "@Override public boolean onNestedFling(View target, float velocityX, float velocityY, boolean consumed)", "class_method_signature": "NestedScrollView.onNestedFling(View target, float velocityX, float velocityY, boolean consumed)", "testcase": false, "constructor": false}, {"identifier": "onNestedPreFling", "parameters": "(View target, float velocityX, float velocityY)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onNestedPreFling(View target, float velocityX, float velocityY)", "full_signature": "@Override public boolean onNestedPreFling(View target, float velocityX, float velocityY)", "class_method_signature": "NestedScrollView.onNestedPreFling(View target, float velocityX, float velocityY)", "testcase": false, "constructor": false}, {"identifier": "getNestedScrollAxes", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNestedScrollAxes()", "full_signature": "@Override public int getNestedScrollAxes()", "class_method_signature": "NestedScrollView.getNestedScrollAxes()", "testcase": false, "constructor": false}, {"identifier": "shouldDelayChildPressedState", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shouldDelayChildPressedState()", "full_signature": "@Override public boolean shouldDelayChildPressedState()", "class_method_signature": "NestedScrollView.shouldDelayChildPressedState()", "testcase": false, "constructor": false}, {"identifier": "getTopFadingEdgeStrength", "parameters": "()", "modifiers": "@Override protected", "return": "float", "signature": "float getTopFadingEdgeStrength()", "full_signature": "@Override protected float getTopFadingEdgeStrength()", "class_method_signature": "NestedScrollView.getTopFadingEdgeStrength()", "testcase": false, "constructor": false}, {"identifier": "getBottomFadingEdgeStrength", "parameters": "()", "modifiers": "@Override protected", "return": "float", "signature": "float getBottomFadingEdgeStrength()", "full_signature": "@Override protected float getBottomFadingEdgeStrength()", "class_method_signature": "NestedScrollView.getBottomFadingEdgeStrength()", "testcase": false, "constructor": false}, {"identifier": "getMaxScrollAmount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxScrollAmount()", "full_signature": "public int getMaxScrollAmount()", "class_method_signature": "NestedScrollView.getMaxScrollAmount()", "testcase": false, "constructor": false}, {"identifier": "initScrollView", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initScrollView()", "full_signature": "private void initScrollView()", "class_method_signature": "NestedScrollView.initScrollView()", "testcase": false, "constructor": false}, {"identifier": "addView", "parameters": "(View child)", "modifiers": "@Override public", "return": "void", "signature": "void addView(View child)", "full_signature": "@Override public void addView(View child)", "class_method_signature": "NestedScrollView.addView(View child)", "testcase": false, "constructor": false}, {"identifier": "addView", "parameters": "(View child, int index)", "modifiers": "@Override public", "return": "void", "signature": "void addView(View child, int index)", "full_signature": "@Override public void addView(View child, int index)", "class_method_signature": "NestedScrollView.addView(View child, int index)", "testcase": false, "constructor": false}, {"identifier": "addView", "parameters": "(View child, ViewGroup.LayoutParams params)", "modifiers": "@Override public", "return": "void", "signature": "void addView(View child, ViewGroup.LayoutParams params)", "full_signature": "@Override public void addView(View child, ViewGroup.LayoutParams params)", "class_method_signature": "NestedScrollView.addView(View child, ViewGroup.LayoutParams params)", "testcase": false, "constructor": false}, {"identifier": "addView", "parameters": "(View child, int index, ViewGroup.LayoutParams params)", "modifiers": "@Override public", "return": "void", "signature": "void addView(View child, int index, ViewGroup.LayoutParams params)", "full_signature": "@Override public void addView(View child, int index, ViewGroup.LayoutParams params)", "class_method_signature": "NestedScrollView.addView(View child, int index, ViewGroup.LayoutParams params)", "testcase": false, "constructor": false}, {"identifier": "setOnScrollChangeListener", "parameters": "(@Nullable OnScrollChangeListener l)", "modifiers": "public", "return": "void", "signature": "void setOnScrollChangeListener(@Nullable OnScrollChangeListener l)", "full_signature": "public void setOnScrollChangeListener(@Nullable OnScrollChangeListener l)", "class_method_signature": "NestedScrollView.setOnScrollChangeListener(@Nullable OnScrollChangeListener l)", "testcase": false, "constructor": false}, {"identifier": "canScroll", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean canScroll()", "full_signature": "private boolean canScroll()", "class_method_signature": "NestedScrollView.canScroll()", "testcase": false, "constructor": false}, {"identifier": "isFillViewport", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFillViewport()", "full_signature": "public boolean isFillViewport()", "class_method_signature": "NestedScrollView.isFillViewport()", "testcase": false, "constructor": false}, {"identifier": "setFillViewport", "parameters": "(boolean fillViewport)", "modifiers": "public", "return": "void", "signature": "void setFillViewport(boolean fillViewport)", "full_signature": "public void setFillViewport(boolean fillViewport)", "class_method_signature": "NestedScrollView.setFillViewport(boolean fillViewport)", "testcase": false, "constructor": false}, {"identifier": "isSmoothScrollingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSmoothScrollingEnabled()", "full_signature": "public boolean isSmoothScrollingEnabled()", "class_method_signature": "NestedScrollView.isSmoothScrollingEnabled()", "testcase": false, "constructor": false}, {"identifier": "setSmoothScrollingEnabled", "parameters": "(boolean smoothScrollingEnabled)", "modifiers": "public", "return": "void", "signature": "void setSmoothScrollingEnabled(boolean smoothScrollingEnabled)", "full_signature": "public void setSmoothScrollingEnabled(boolean smoothScrollingEnabled)", "class_method_signature": "NestedScrollView.setSmoothScrollingEnabled(boolean smoothScrollingEnabled)", "testcase": false, "constructor": false}, {"identifier": "onScrollChanged", "parameters": "(int l, int t, int oldl, int oldt)", "modifiers": "@Override protected", "return": "void", "signature": "void onScrollChanged(int l, int t, int oldl, int oldt)", "full_signature": "@Override protected void onScrollChanged(int l, int t, int oldl, int oldt)", "class_method_signature": "NestedScrollView.onScrollChanged(int l, int t, int oldl, int oldt)", "testcase": false, "constructor": false}, {"identifier": "onMeasure", "parameters": "(int widthMeasureSpec, int heightMeasureSpec)", "modifiers": "@Override protected", "return": "void", "signature": "void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "full_signature": "@Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "class_method_signature": "NestedScrollView.onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "testcase": false, "constructor": false}, {"identifier": "dispatchKeyEvent", "parameters": "(KeyEvent event)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean dispatchKeyEvent(KeyEvent event)", "full_signature": "@Override public boolean dispatchKeyEvent(KeyEvent event)", "class_method_signature": "NestedScrollView.dispatchKeyEvent(KeyEvent event)", "testcase": false, "constructor": false}, {"identifier": "executeKeyEvent", "parameters": "(@NonNull KeyEvent event)", "modifiers": "public", "return": "boolean", "signature": "boolean executeKeyEvent(@NonNull KeyEvent event)", "full_signature": "public boolean executeKeyEvent(@NonNull KeyEvent event)", "class_method_signature": "NestedScrollView.executeKeyEvent(@NonNull KeyEvent event)", "testcase": false, "constructor": false}, {"identifier": "inChild", "parameters": "(int x, int y)", "modifiers": "private", "return": "boolean", "signature": "boolean inChild(int x, int y)", "full_signature": "private boolean inChild(int x, int y)", "class_method_signature": "NestedScrollView.inChild(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "initOrResetVelocityTracker", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initOrResetVelocityTracker()", "full_signature": "private void initOrResetVelocityTracker()", "class_method_signature": "NestedScrollView.initOrResetVelocityTracker()", "testcase": false, "constructor": false}, {"identifier": "initVelocityTrackerIfNotExists", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initVelocityTrackerIfNotExists()", "full_signature": "private void initVelocityTrackerIfNotExists()", "class_method_signature": "NestedScrollView.initVelocityTrackerIfNotExists()", "testcase": false, "constructor": false}, {"identifier": "recycleVelocityTracker", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recycleVelocityTracker()", "full_signature": "private void recycleVelocityTracker()", "class_method_signature": "NestedScrollView.recycleVelocityTracker()", "testcase": false, "constructor": false}, {"identifier": "requestDisallowInterceptTouchEvent", "parameters": "(boolean disallowIntercept)", "modifiers": "@Override public", "return": "void", "signature": "void requestDisallowInterceptTouchEvent(boolean disallowIntercept)", "full_signature": "@Override public void requestDisallowInterceptTouchEvent(boolean disallowIntercept)", "class_method_signature": "NestedScrollView.requestDisallowInterceptTouchEvent(boolean disallowIntercept)", "testcase": false, "constructor": false}, {"identifier": "onInterceptTouchEvent", "parameters": "(MotionEvent ev)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onInterceptTouchEvent(MotionEvent ev)", "full_signature": "@Override public boolean onInterceptTouchEvent(MotionEvent ev)", "class_method_signature": "NestedScrollView.onInterceptTouchEvent(MotionEvent ev)", "testcase": false, "constructor": false}, {"identifier": "onTouchEvent", "parameters": "(MotionEvent ev)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onTouchEvent(MotionEvent ev)", "full_signature": "@Override public boolean onTouchEvent(MotionEvent ev)", "class_method_signature": "NestedScrollView.onTouchEvent(MotionEvent ev)", "testcase": false, "constructor": false}, {"identifier": "onSecondaryPointerUp", "parameters": "(MotionEvent ev)", "modifiers": "private", "return": "void", "signature": "void onSecondaryPointerUp(MotionEvent ev)", "full_signature": "private void onSecondaryPointerUp(MotionEvent ev)", "class_method_signature": "NestedScrollView.onSecondaryPointerUp(MotionEvent ev)", "testcase": false, "constructor": false}, {"identifier": "onGenericMotionEvent", "parameters": "(MotionEvent event)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onGenericMotionEvent(MotionEvent event)", "full_signature": "@Override public boolean onGenericMotionEvent(MotionEvent event)", "class_method_signature": "NestedScrollView.onGenericMotionEvent(MotionEvent event)", "testcase": false, "constructor": false}, {"identifier": "getVerticalScrollFactorCompat", "parameters": "()", "modifiers": "private", "return": "float", "signature": "float getVerticalScrollFactorCompat()", "full_signature": "private float getVerticalScrollFactorCompat()", "class_method_signature": "NestedScrollView.getVerticalScrollFactorCompat()", "testcase": false, "constructor": false}, {"identifier": "onOverScrolled", "parameters": "(int scrollX, int scrollY,\n                                  boolean clampedX, boolean clampedY)", "modifiers": "@Override protected", "return": "void", "signature": "void onOverScrolled(int scrollX, int scrollY,\n                                  boolean clampedX, boolean clampedY)", "full_signature": "@Override protected void onOverScrolled(int scrollX, int scrollY,\n                                  boolean clampedX, boolean clampedY)", "class_method_signature": "NestedScrollView.onOverScrolled(int scrollX, int scrollY,\n                                  boolean clampedX, boolean clampedY)", "testcase": false, "constructor": false}, {"identifier": "overScrollByCompat", "parameters": "(int deltaX, int deltaY,\n                               int scrollX, int scrollY,\n                               int scrollRangeX, int scrollRangeY,\n                               int maxOverScrollX, int maxOverScrollY,\n                               boolean isTouchEvent)", "modifiers": "", "return": "boolean", "signature": "boolean overScrollByCompat(int deltaX, int deltaY,\n                               int scrollX, int scrollY,\n                               int scrollRangeX, int scrollRangeY,\n                               int maxOverScrollX, int maxOverScrollY,\n                               boolean isTouchEvent)", "full_signature": " boolean overScrollByCompat(int deltaX, int deltaY,\n                               int scrollX, int scrollY,\n                               int scrollRangeX, int scrollRangeY,\n                               int maxOverScrollX, int maxOverScrollY,\n                               boolean isTouchEvent)", "class_method_signature": "NestedScrollView.overScrollByCompat(int deltaX, int deltaY,\n                               int scrollX, int scrollY,\n                               int scrollRangeX, int scrollRangeY,\n                               int maxOverScrollX, int maxOverScrollY,\n                               boolean isTouchEvent)", "testcase": false, "constructor": false}, {"identifier": "getScrollRange", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getScrollRange()", "full_signature": " int getScrollRange()", "class_method_signature": "NestedScrollView.getScrollRange()", "testcase": false, "constructor": false}, {"identifier": "findFocusableViewInBounds", "parameters": "(boolean topFocus, int top, int bottom)", "modifiers": "private", "return": "View", "signature": "View findFocusableViewInBounds(boolean topFocus, int top, int bottom)", "full_signature": "private View findFocusableViewInBounds(boolean topFocus, int top, int bottom)", "class_method_signature": "NestedScrollView.findFocusableViewInBounds(boolean topFocus, int top, int bottom)", "testcase": false, "constructor": false}, {"identifier": "pageScroll", "parameters": "(int direction)", "modifiers": "public", "return": "boolean", "signature": "boolean pageScroll(int direction)", "full_signature": "public boolean pageScroll(int direction)", "class_method_signature": "NestedScrollView.pageScroll(int direction)", "testcase": false, "constructor": false}, {"identifier": "fullScroll", "parameters": "(int direction)", "modifiers": "public", "return": "boolean", "signature": "boolean fullScroll(int direction)", "full_signature": "public boolean fullScroll(int direction)", "class_method_signature": "NestedScrollView.fullScroll(int direction)", "testcase": false, "constructor": false}, {"identifier": "scrollAndFocus", "parameters": "(int direction, int top, int bottom)", "modifiers": "private", "return": "boolean", "signature": "boolean scrollAndFocus(int direction, int top, int bottom)", "full_signature": "private boolean scrollAndFocus(int direction, int top, int bottom)", "class_method_signature": "NestedScrollView.scrollAndFocus(int direction, int top, int bottom)", "testcase": false, "constructor": false}, {"identifier": "arrowScroll", "parameters": "(int direction)", "modifiers": "public", "return": "boolean", "signature": "boolean arrowScroll(int direction)", "full_signature": "public boolean arrowScroll(int direction)", "class_method_signature": "NestedScrollView.arrowScroll(int direction)", "testcase": false, "constructor": false}, {"identifier": "isOffScreen", "parameters": "(View descendant)", "modifiers": "private", "return": "boolean", "signature": "boolean isOffScreen(View descendant)", "full_signature": "private boolean isOffScreen(View descendant)", "class_method_signature": "NestedScrollView.isOffScreen(View descendant)", "testcase": false, "constructor": false}, {"identifier": "isWithinDeltaOfScreen", "parameters": "(View descendant, int delta, int height)", "modifiers": "private", "return": "boolean", "signature": "boolean isWithinDeltaOfScreen(View descendant, int delta, int height)", "full_signature": "private boolean isWithinDeltaOfScreen(View descendant, int delta, int height)", "class_method_signature": "NestedScrollView.isWithinDeltaOfScreen(View descendant, int delta, int height)", "testcase": false, "constructor": false}, {"identifier": "doScrollY", "parameters": "(int delta)", "modifiers": "private", "return": "void", "signature": "void doScrollY(int delta)", "full_signature": "private void doScrollY(int delta)", "class_method_signature": "NestedScrollView.doScrollY(int delta)", "testcase": false, "constructor": false}, {"identifier": "smoothScrollBy", "parameters": "(int dx, int dy)", "modifiers": "public final", "return": "void", "signature": "void smoothScrollBy(int dx, int dy)", "full_signature": "public final void smoothScrollBy(int dx, int dy)", "class_method_signature": "NestedScrollView.smoothScrollBy(int dx, int dy)", "testcase": false, "constructor": false}, {"identifier": "smoothScrollTo", "parameters": "(int x, int y)", "modifiers": "public final", "return": "void", "signature": "void smoothScrollTo(int x, int y)", "full_signature": "public final void smoothScrollTo(int x, int y)", "class_method_signature": "NestedScrollView.smoothScrollTo(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "computeVerticalScrollRange", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeVerticalScrollRange()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeVerticalScrollRange()", "class_method_signature": "NestedScrollView.computeVerticalScrollRange()", "testcase": false, "constructor": false}, {"identifier": "computeVerticalScrollOffset", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeVerticalScrollOffset()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeVerticalScrollOffset()", "class_method_signature": "NestedScrollView.computeVerticalScrollOffset()", "testcase": false, "constructor": false}, {"identifier": "computeVerticalScrollExtent", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeVerticalScrollExtent()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeVerticalScrollExtent()", "class_method_signature": "NestedScrollView.computeVerticalScrollExtent()", "testcase": false, "constructor": false}, {"identifier": "computeHorizontalScrollRange", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeHorizontalScrollRange()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeHorizontalScrollRange()", "class_method_signature": "NestedScrollView.computeHorizontalScrollRange()", "testcase": false, "constructor": false}, {"identifier": "computeHorizontalScrollOffset", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeHorizontalScrollOffset()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeHorizontalScrollOffset()", "class_method_signature": "NestedScrollView.computeHorizontalScrollOffset()", "testcase": false, "constructor": false}, {"identifier": "computeHorizontalScrollExtent", "parameters": "()", "modifiers": "@RestrictTo(LIBRARY_GROUP) @Override public", "return": "int", "signature": "int computeHorizontalScrollExtent()", "full_signature": "@RestrictTo(LIBRARY_GROUP) @Override public int computeHorizontalScrollExtent()", "class_method_signature": "NestedScrollView.computeHorizontalScrollExtent()", "testcase": false, "constructor": false}, {"identifier": "measureChild", "parameters": "(View child, int parentWidthMeasureSpec,\n                                int parentHeightMeasureSpec)", "modifiers": "@Override protected", "return": "void", "signature": "void measureChild(View child, int parentWidthMeasureSpec,\n                                int parentHeightMeasureSpec)", "full_signature": "@Override protected void measureChild(View child, int parentWidthMeasureSpec,\n                                int parentHeightMeasureSpec)", "class_method_signature": "NestedScrollView.measureChild(View child, int parentWidthMeasureSpec,\n                                int parentHeightMeasureSpec)", "testcase": false, "constructor": false}, {"identifier": "measureChildWithMargins", "parameters": "(View child, int parentWidthMeasureSpec, int widthUsed,\n                                           int parentHeightMeasureSpec, int heightUsed)", "modifiers": "@Override protected", "return": "void", "signature": "void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,\n                                           int parentHeightMeasureSpec, int heightUsed)", "full_signature": "@Override protected void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,\n                                           int parentHeightMeasureSpec, int heightUsed)", "class_method_signature": "NestedScrollView.measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,\n                                           int parentHeightMeasureSpec, int heightUsed)", "testcase": false, "constructor": false}, {"identifier": "computeScroll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void computeScroll()", "full_signature": "@Override public void computeScroll()", "class_method_signature": "NestedScrollView.computeScroll()", "testcase": false, "constructor": false}, {"identifier": "scrollToChild", "parameters": "(View child)", "modifiers": "private", "return": "void", "signature": "void scrollToChild(View child)", "full_signature": "private void scrollToChild(View child)", "class_method_signature": "NestedScrollView.scrollToChild(View child)", "testcase": false, "constructor": false}, {"identifier": "scrollToChildRect", "parameters": "(Rect rect, boolean immediate)", "modifiers": "private", "return": "boolean", "signature": "boolean scrollToChildRect(Rect rect, boolean immediate)", "full_signature": "private boolean scrollToChildRect(Rect rect, boolean immediate)", "class_method_signature": "NestedScrollView.scrollToChildRect(Rect rect, boolean immediate)", "testcase": false, "constructor": false}, {"identifier": "computeScrollDeltaToGetChildRectOnScreen", "parameters": "(Rect rect)", "modifiers": "protected", "return": "int", "signature": "int computeScrollDeltaToGetChildRectOnScreen(Rect rect)", "full_signature": "protected int computeScrollDeltaToGetChildRectOnScreen(Rect rect)", "class_method_signature": "NestedScrollView.computeScrollDeltaToGetChildRectOnScreen(Rect rect)", "testcase": false, "constructor": false}, {"identifier": "requestChildFocus", "parameters": "(View child, View focused)", "modifiers": "@Override public", "return": "void", "signature": "void requestChildFocus(View child, View focused)", "full_signature": "@Override public void requestChildFocus(View child, View focused)", "class_method_signature": "NestedScrollView.requestChildFocus(View child, View focused)", "testcase": false, "constructor": false}, {"identifier": "onRequestFocusInDescendants", "parameters": "(int direction,\n                                                  Rect previouslyFocusedRect)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean onRequestFocusInDescendants(int direction,\n                                                  Rect previouslyFocusedRect)", "full_signature": "@Override protected boolean onRequestFocusInDescendants(int direction,\n                                                  Rect previouslyFocusedRect)", "class_method_signature": "NestedScrollView.onRequestFocusInDescendants(int direction,\n                                                  Rect previouslyFocusedRect)", "testcase": false, "constructor": false}, {"identifier": "requestChildRectangleOnScreen", "parameters": "(View child, Rect rectangle,\n                                                 boolean immediate)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean requestChildRectangleOnScreen(View child, Rect rectangle,\n                                                 boolean immediate)", "full_signature": "@Override public boolean requestChildRectangleOnScreen(View child, Rect rectangle,\n                                                 boolean immediate)", "class_method_signature": "NestedScrollView.requestChildRectangleOnScreen(View child, Rect rectangle,\n                                                 boolean immediate)", "testcase": false, "constructor": false}, {"identifier": "requestLayout", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void requestLayout()", "full_signature": "@Override public void requestLayout()", "class_method_signature": "NestedScrollView.requestLayout()", "testcase": false, "constructor": false}, {"identifier": "onLayout", "parameters": "(boolean changed, int l, int t, int r, int b)", "modifiers": "@Override protected", "return": "void", "signature": "void onLayout(boolean changed, int l, int t, int r, int b)", "full_signature": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b)", "class_method_signature": "NestedScrollView.onLayout(boolean changed, int l, int t, int r, int b)", "testcase": false, "constructor": false}, {"identifier": "onAttachedToWindow", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onAttachedToWindow()", "full_signature": "@Override public void onAttachedToWindow()", "class_method_signature": "NestedScrollView.onAttachedToWindow()", "testcase": false, "constructor": false}, {"identifier": "onSizeChanged", "parameters": "(int w, int h, int oldw, int oldh)", "modifiers": "@Override protected", "return": "void", "signature": "void onSizeChanged(int w, int h, int oldw, int oldh)", "full_signature": "@Override protected void onSizeChanged(int w, int h, int oldw, int oldh)", "class_method_signature": "NestedScrollView.onSizeChanged(int w, int h, int oldw, int oldh)", "testcase": false, "constructor": false}, {"identifier": "isViewDescendantOf", "parameters": "(View child, View parent)", "modifiers": "private static", "return": "boolean", "signature": "boolean isViewDescendantOf(View child, View parent)", "full_signature": "private static boolean isViewDescendantOf(View child, View parent)", "class_method_signature": "NestedScrollView.isViewDescendantOf(View child, View parent)", "testcase": false, "constructor": false}, {"identifier": "fling", "parameters": "(int velocityY)", "modifiers": "public", "return": "void", "signature": "void fling(int velocityY)", "full_signature": "public void fling(int velocityY)", "class_method_signature": "NestedScrollView.fling(int velocityY)", "testcase": false, "constructor": false}, {"identifier": "flingWithNestedDispatch", "parameters": "(int velocityY)", "modifiers": "private", "return": "void", "signature": "void flingWithNestedDispatch(int velocityY)", "full_signature": "private void flingWithNestedDispatch(int velocityY)", "class_method_signature": "NestedScrollView.flingWithNestedDispatch(int velocityY)", "testcase": false, "constructor": false}, {"identifier": "endDrag", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void endDrag()", "full_signature": "private void endDrag()", "class_method_signature": "NestedScrollView.endDrag()", "testcase": false, "constructor": false}, {"identifier": "scrollTo", "parameters": "(int x, int y)", "modifiers": "@Override public", "return": "void", "signature": "void scrollTo(int x, int y)", "full_signature": "@Override public void scrollTo(int x, int y)", "class_method_signature": "NestedScrollView.scrollTo(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "ensureGlows", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureGlows()", "full_signature": "private void ensureGlows()", "class_method_signature": "NestedScrollView.ensureGlows()", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Canvas canvas)", "modifiers": "@Override public", "return": "void", "signature": "void draw(Canvas canvas)", "full_signature": "@Override public void draw(Canvas canvas)", "class_method_signature": "NestedScrollView.draw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "clamp", "parameters": "(int n, int my, int child)", "modifiers": "private static", "return": "int", "signature": "int clamp(int n, int my, int child)", "full_signature": "private static int clamp(int n, int my, int child)", "class_method_signature": "NestedScrollView.clamp(int n, int my, int child)", "testcase": false, "constructor": false}, {"identifier": "onRestoreInstanceState", "parameters": "(Parcelable state)", "modifiers": "@Override protected", "return": "void", "signature": "void onRestoreInstanceState(Parcelable state)", "full_signature": "@Override protected void onRestoreInstanceState(Parcelable state)", "class_method_signature": "NestedScrollView.onRestoreInstanceState(Parcelable state)", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "()", "modifiers": "@Override protected", "return": "Parcelable", "signature": "Parcelable onSaveInstanceState()", "full_signature": "@Override protected Parcelable onSaveInstanceState()", "class_method_signature": "NestedScrollView.onSaveInstanceState()", "testcase": false, "constructor": false}], "file": "androidx/core/widget/NestedScrollView.java"}, "focal_method": {"identifier": "getBottomFadingEdgeStrength", "parameters": "()", "modifiers": "@Override protected", "return": "float", "body": "@Override\n    protected float getBottomFadingEdgeStrength() {\n        if (getChildCount() == 0) {\n            return 0.0f;\n        }\n\n        View child = getChildAt(0);\n        final NestedScrollView.LayoutParams lp = (LayoutParams) child.getLayoutParams();\n        final int length = getVerticalFadingEdgeLength();\n        final int bottomEdge = getHeight() - getPaddingBottom();\n        final int span = child.getBottom() + lp.bottomMargin - getScrollY() - bottomEdge;\n        if (span < length) {\n            return span / (float) length;\n        }\n\n        return 1.0f;\n    }", "signature": "float getBottomFadingEdgeStrength()", "full_signature": "@Override protected float getBottomFadingEdgeStrength()", "class_method_signature": "NestedScrollView.getBottomFadingEdgeStrength()", "testcase": false, "constructor": false, "invocations": ["getChildCount", "getChildAt", "getLayoutParams", "getVerticalFadingEdgeLength", "getHeight", "getPaddingBottom", "getBottom", "getScrollY"]}, "repository": {"repo_id": 172448626, "url": "https://github.com/yuchuangu85/Android_Framework_Source", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 61, "size": 84785, "license": "licensed"}}