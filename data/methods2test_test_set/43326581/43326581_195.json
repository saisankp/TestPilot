{"test_class": {"identifier": "PortletUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "frontend/sw360-portlet/src/test/java/org/eclipse/sw360/portal/common/PortletUtilsTest.java"}, "test_case": {"identifier": "testUpdateAttachmentsFromRequestOneArrayIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateAttachmentsFromRequestOneArrayIsNull() {\n        PortletRequest request = Mockito.mock(PortletRequest.class);\n        new TestUserCacheHolder().enable();\n\n        // fill existing data\n        Set<Attachment> documentAttachments = ImmutableSet.of(); // use immutable set to ensure that set is not changed.\n\n        // fill request\n        setAttachmentIds(request, \"1\", \"2\", \"3\");\n\n        // run test\n        Set<Attachment> updatedAttachments = PortletUtils.updateAttachmentsFromRequest(request, documentAttachments);\n        assertTrue(updatedAttachments.isEmpty());\n        assertThat(updatedAttachments, is(sameInstance(documentAttachments)));\n    }", "signature": "void testUpdateAttachmentsFromRequestOneArrayIsNull()", "full_signature": "@Test public void testUpdateAttachmentsFromRequestOneArrayIsNull()", "class_method_signature": "PortletUtilsTest.testUpdateAttachmentsFromRequestOneArrayIsNull()", "testcase": true, "constructor": false, "invocations": ["mock", "enable", "of", "setAttachmentIds", "updateAttachmentsFromRequest", "assertTrue", "isEmpty", "assertThat", "is", "sameInstance"]}, "focal_class": {"identifier": "PortletUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(PortletUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(PortletUtils.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "PortletUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " PortletUtils()", "full_signature": "private  PortletUtils()", "class_method_signature": "PortletUtils.PortletUtils()", "testcase": false, "constructor": true}, {"identifier": "getComponentTypefromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ComponentType", "signature": "ComponentType getComponentTypefromString(String enumNumber)", "full_signature": "public static ComponentType getComponentTypefromString(String enumNumber)", "class_method_signature": "PortletUtils.getComponentTypefromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getClearingStatefromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ClearingState", "signature": "ClearingState getClearingStatefromString(String enumNumber)", "full_signature": "public static ClearingState getClearingStatefromString(String enumNumber)", "class_method_signature": "PortletUtils.getClearingStatefromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getRepositoryTypefromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "RepositoryType", "signature": "RepositoryType getRepositoryTypefromString(String enumNumber)", "full_signature": "public static RepositoryType getRepositoryTypefromString(String enumNumber)", "class_method_signature": "PortletUtils.getRepositoryTypefromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getMainlineStatefromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "MainlineState", "signature": "MainlineState getMainlineStatefromString(String enumNumber)", "full_signature": "public static MainlineState getMainlineStatefromString(String enumNumber)", "class_method_signature": "PortletUtils.getMainlineStatefromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getModerationStatusfromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ModerationState", "signature": "ModerationState getModerationStatusfromString(String enumNumber)", "full_signature": "public static ModerationState getModerationStatusfromString(String enumNumber)", "class_method_signature": "PortletUtils.getModerationStatusfromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentTypefromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "AttachmentType", "signature": "AttachmentType getAttachmentTypefromString(String enumNumber)", "full_signature": "public static AttachmentType getAttachmentTypefromString(String enumNumber)", "class_method_signature": "PortletUtils.getAttachmentTypefromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getCheckStatusfromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "CheckStatus", "signature": "CheckStatus getCheckStatusfromString(String enumNumber)", "full_signature": "public static CheckStatus getCheckStatusfromString(String enumNumber)", "class_method_signature": "PortletUtils.getCheckStatusfromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getProjectStateFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ProjectState", "signature": "ProjectState getProjectStateFromString(String enumNumber)", "full_signature": "public static ProjectState getProjectStateFromString(String enumNumber)", "class_method_signature": "PortletUtils.getProjectStateFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getProjectClearingStateFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ProjectClearingState", "signature": "ProjectClearingState getProjectClearingStateFromString(String enumNumber)", "full_signature": "public static ProjectClearingState getProjectClearingStateFromString(String enumNumber)", "class_method_signature": "PortletUtils.getProjectClearingStateFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getProjectTypeFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ProjectType", "signature": "ProjectType getProjectTypeFromString(String enumNumber)", "full_signature": "public static ProjectType getProjectTypeFromString(String enumNumber)", "class_method_signature": "PortletUtils.getProjectTypeFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getVisibilityFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "Visibility", "signature": "Visibility getVisibilityFromString(String enumNumber)", "full_signature": "public static Visibility getVisibilityFromString(String enumNumber)", "class_method_signature": "PortletUtils.getVisibilityFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getUserGroupFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "UserGroup", "signature": "UserGroup getUserGroupFromString(String enumNumber)", "full_signature": "public static UserGroup getUserGroupFromString(String enumNumber)", "class_method_signature": "PortletUtils.getUserGroupFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "getEccStatusFromString", "parameters": "(String enumNumber)", "modifiers": "public static", "return": "ECCStatus", "signature": "ECCStatus getEccStatusFromString(String enumNumber)", "full_signature": "public static ECCStatus getEccStatusFromString(String enumNumber)", "class_method_signature": "PortletUtils.getEccStatusFromString(String enumNumber)", "testcase": false, "constructor": false}, {"identifier": "setFieldValue", "parameters": "(PortletRequest request, T instance, U field, FieldMetaData fieldMetaData, String prefix)", "modifiers": "public static", "return": "void", "signature": "void setFieldValue(PortletRequest request, T instance, U field, FieldMetaData fieldMetaData, String prefix)", "full_signature": "public static void setFieldValue(PortletRequest request, T instance, U field, FieldMetaData fieldMetaData, String prefix)", "class_method_signature": "PortletUtils.setFieldValue(PortletRequest request, T instance, U field, FieldMetaData fieldMetaData, String prefix)", "testcase": false, "constructor": false}, {"identifier": "enumFromString", "parameters": "(String value, U field)", "modifiers": "private static", "return": "Object", "signature": "Object enumFromString(String value, U field)", "full_signature": "private static Object enumFromString(String value, U field)", "class_method_signature": "PortletUtils.enumFromString(String value, U field)", "testcase": false, "constructor": false}, {"identifier": "updateAttachmentsFromRequest", "parameters": "(PortletRequest request, Set<Attachment> documentAttachments)", "modifiers": "public static", "return": "Set<Attachment>", "signature": "Set<Attachment> updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "full_signature": "public static Set<Attachment> updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "class_method_signature": "PortletUtils.updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "testcase": false, "constructor": false}, {"identifier": "cloneRelease", "parameters": "(String emailFromRequest, Release release)", "modifiers": "public static", "return": "Release", "signature": "Release cloneRelease(String emailFromRequest, Release release)", "full_signature": "public static Release cloneRelease(String emailFromRequest, Release release)", "class_method_signature": "PortletUtils.cloneRelease(String emailFromRequest, Release release)", "testcase": false, "constructor": false}, {"identifier": "cloneProject", "parameters": "(String emailFromRequest, String department, Project project)", "modifiers": "public static", "return": "Project", "signature": "Project cloneProject(String emailFromRequest, String department, Project project)", "full_signature": "public static Project cloneProject(String emailFromRequest, String department, Project project)", "class_method_signature": "PortletUtils.cloneProject(String emailFromRequest, String department, Project project)", "testcase": false, "constructor": false}, {"identifier": "importStatusToJSON", "parameters": "(VulnerabilityUpdateStatus updateStatus)", "modifiers": "public static", "return": "JSONObject", "signature": "JSONObject importStatusToJSON(VulnerabilityUpdateStatus updateStatus)", "full_signature": "public static JSONObject importStatusToJSON(VulnerabilityUpdateStatus updateStatus)", "class_method_signature": "PortletUtils.importStatusToJSON(VulnerabilityUpdateStatus updateStatus)", "testcase": false, "constructor": false}, {"identifier": "getVerificationState", "parameters": "(VulnerabilityDTO vul)", "modifiers": "public static", "return": "VerificationState", "signature": "VerificationState getVerificationState(VulnerabilityDTO vul)", "full_signature": "public static VerificationState getVerificationState(VulnerabilityDTO vul)", "class_method_signature": "PortletUtils.getVerificationState(VulnerabilityDTO vul)", "testcase": false, "constructor": false}, {"identifier": "getCustomMapFromRequest", "parameters": "(PortletRequest request)", "modifiers": "public static", "return": "Map<String,Set<String>>", "signature": "Map<String,Set<String>> getCustomMapFromRequest(PortletRequest request)", "full_signature": "public static Map<String,Set<String>> getCustomMapFromRequest(PortletRequest request)", "class_method_signature": "PortletUtils.getCustomMapFromRequest(PortletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getCustomMapFromRequest", "parameters": "(PortletRequest request, String mapKey, String mapValue)", "modifiers": "public static", "return": "Map<String,Set<String>>", "signature": "Map<String,Set<String>> getCustomMapFromRequest(PortletRequest request, String mapKey, String mapValue)", "full_signature": "public static Map<String,Set<String>> getCustomMapFromRequest(PortletRequest request, String mapKey, String mapValue)", "class_method_signature": "PortletUtils.getCustomMapFromRequest(PortletRequest request, String mapKey, String mapValue)", "testcase": false, "constructor": false}, {"identifier": "getExternalIdMapFromRequest", "parameters": "(PortletRequest request)", "modifiers": "public static", "return": "Map<String,String>", "signature": "Map<String,String> getExternalIdMapFromRequest(PortletRequest request)", "full_signature": "public static Map<String,String> getExternalIdMapFromRequest(PortletRequest request)", "class_method_signature": "PortletUtils.getExternalIdMapFromRequest(PortletRequest request)", "testcase": false, "constructor": false}], "file": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java"}, "focal_method": {"identifier": "updateAttachmentsFromRequest", "parameters": "(PortletRequest request, Set<Attachment> documentAttachments)", "modifiers": "public static", "return": "Set<Attachment>", "body": "public static Set<Attachment> updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments) {\n        Set<Attachment> attachments = Sets.newHashSet();\n\n        User user = UserCacheHolder.getUserFromRequest(request);\n        String[] ids = request\n                .getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.ATTACHMENT_CONTENT_ID.toString());\n        String[] fileNames = request.getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.FILENAME.toString());\n        String[] types = request\n                .getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.ATTACHMENT_TYPE.toString());\n        String[] createdComments = request.getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.CREATED_COMMENT.toString());\n        String[] checkStatuses = request\n                .getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.CHECK_STATUS.toString());\n        String[] checkedComments = request.getParameterValues(Release._Fields.ATTACHMENTS.toString() + Attachment._Fields.CHECKED_COMMENT.toString());\n\n        if (ids == null || ids.length == 0) {\n            LOGGER.info(\"No ids transmitted. All attachments will be deleted.\");\n            return attachments;\n        } else if (CommonUtils.oneIsNull(fileNames, types, createdComments, checkStatuses, checkedComments)) {\n            LOGGER.error(\"Invalid request content. One of the attachment parameters is null. No attachments will be saved or deleted.\");\n            return documentAttachments;\n        } else if (!CommonUtils.allHaveSameLength(ids, fileNames, types, createdComments, checkStatuses, checkedComments)) {\n            LOGGER.error(\"Not all of the attachment parameter arrays have the same length! No attachments will be saved or deleted.\");\n            return documentAttachments;\n        }\n\n        Map<String, Attachment> documentAttachmentMap = CommonUtils.nullToEmptySet(documentAttachments).stream()\n                .collect(Collectors.toMap(Attachment::getAttachmentContentId, Function.identity()));\n        for (int i = 0; i < ids.length; ++i) {\n            String id = ids[i];\n            Attachment attachment = documentAttachmentMap.get(id);\n\n            if (attachment == null) {\n                // the sha1 checksum is not computed here, but in the backend, when updating the\n                // component in the database\n                attachment = CommonUtils.getNewAttachment(user, id, fileNames[i]);\n                documentAttachmentMap.put(attachment.getAttachmentContentId(), attachment);\n            }\n\n            // Filename is not overwritten. Unknown reason.\n            attachment.setAttachmentType(getAttachmentTypefromString(types[i]));\n            attachment.setCreatedComment(createdComments[i]);\n\n            if (getCheckStatusfromString(checkStatuses[i]) != CheckStatus.NOTCHECKED) {\n                if (attachment.checkStatus != getCheckStatusfromString(checkStatuses[i])\n                        || !checkedComments[i].equals(attachment.checkedComment)) {\n                    attachment.setCheckedOn(SW360Utils.getCreatedOn());\n                    attachment.setCheckedBy(UserCacheHolder.getUserFromRequest(request).getEmail());\n                    attachment.setCheckedTeam(UserCacheHolder.getUserFromRequest(request).getDepartment());\n                    attachment.setCheckedComment(checkedComments[i]);\n                }\n            } else {\n                attachment.setCheckedOn(null);\n                attachment.setCheckedBy(null);\n                attachment.setCheckedTeam(null);\n                attachment.setCheckedComment(\"\");\n            }\n            attachment.setCheckStatus(getCheckStatusfromString(checkStatuses[i]));\n\n            // add attachments to list of added/modified attachments. This way deleted\n            // attachments are automatically not in the set\n            attachments.add(attachment);\n        }\n\n        return attachments;\n    }", "signature": "Set<Attachment> updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "full_signature": "public static Set<Attachment> updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "class_method_signature": "PortletUtils.updateAttachmentsFromRequest(PortletRequest request, Set<Attachment> documentAttachments)", "testcase": false, "constructor": false, "invocations": ["newHashSet", "getUserFromRequest", "getParameterValues", "toString", "toString", "getParameterValues", "toString", "toString", "getParameterValues", "toString", "toString", "getParameterValues", "toString", "toString", "getParameterValues", "toString", "toString", "getParameterValues", "toString", "toString", "info", "oneIsNull", "error", "allHaveSameLength", "error", "collect", "stream", "nullToEmptySet", "toMap", "identity", "get", "getNewAttachment", "put", "getAttachmentContentId", "setAttachmentType", "getAttachmentTypefromString", "setCreatedComment", "getCheckStatusfromString", "getCheckStatusfromString", "equals", "setCheckedOn", "getCreatedOn", "setCheckedBy", "getEmail", "getUserFromRequest", "setCheckedTeam", "getDepartment", "getUserFromRequest", "setCheckedComment", "setCheckedOn", "setCheckedBy", "setCheckedTeam", "setCheckedComment", "setCheckStatus", "getCheckStatusfromString", "add"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}