{"test_class": {"identifier": "MersennePrimeFieldElementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MersennePrimeModulus modulus;", "modifier": "private", "type": "MersennePrimeModulus", "declarator": "modulus", "var_name": "modulus"}, {"original_string": "private MersennePrimeModulus bigModulus;", "modifier": "private", "type": "MersennePrimeModulus", "declarator": "bigModulus", "var_name": "bigModulus"}, {"original_string": "private FieldElement element1;", "modifier": "private", "type": "FieldElement", "declarator": "element1", "var_name": "element1"}, {"original_string": "private FieldElement element2;", "modifier": "private", "type": "FieldElement", "declarator": "element2", "var_name": "element2"}, {"original_string": "private FieldElement element3;", "modifier": "private", "type": "FieldElement", "declarator": "element3", "var_name": "element3"}], "file": "core/src/test/java/dk/alexandra/fresco/framework/builder/numeric/field/MersennePrimeFieldElementTest.java"}, "test_case": {"identifier": "modInverse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void modInverse() {\n    BigInteger result1 = MersennePrimeFieldElement\n        .extractValue(MersennePrimeFieldElement.create(1, modulus).modInverse());\n    BigInteger result2 = MersennePrimeFieldElement\n        .extractValue(MersennePrimeFieldElement.create(27, modulus).modInverse());\n    BigInteger result3 = MersennePrimeFieldElement\n        .extractValue(MersennePrimeFieldElement.create(56, modulus).modInverse());\n    BigInteger result4 = MersennePrimeFieldElement\n        .extractValue(MersennePrimeFieldElement.create(77, modulus).modInverse());\n    BigInteger result5 = MersennePrimeFieldElement\n        .extractValue(MersennePrimeFieldElement.create(112, modulus).modInverse());\n    assertThat(result1, Is.is(BigInteger.valueOf(1)));\n    assertThat(result2, Is.is(BigInteger.valueOf(67)));\n    assertThat(result3, Is.is(BigInteger.valueOf(111)));\n    assertThat(result4, Is.is(BigInteger.valueOf(91)));\n    assertThat(result5, Is.is(BigInteger.valueOf(112)));\n  }", "signature": "void modInverse()", "full_signature": "@Test public void modInverse()", "class_method_signature": "MersennePrimeFieldElementTest.modInverse()", "testcase": true, "constructor": false, "invocations": ["extractValue", "modInverse", "create", "extractValue", "modInverse", "create", "extractValue", "modInverse", "create", "extractValue", "modInverse", "create", "extractValue", "modInverse", "create", "assertThat", "is", "valueOf", "assertThat", "is", "valueOf", "assertThat", "is", "valueOf", "assertThat", "is", "valueOf", "assertThat", "is", "valueOf"]}, "focal_class": {"identifier": "MersennePrimeFieldElement", "superclass": "", "interfaces": "implements FieldElement", "fields": [{"original_string": "private final BigInteger value;", "modifier": "private final", "type": "BigInteger", "declarator": "value", "var_name": "value"}, {"original_string": "private final MersennePrimeModulus modulus;", "modifier": "private final", "type": "MersennePrimeModulus", "declarator": "modulus", "var_name": "modulus"}], "methods": [{"identifier": "MersennePrimeFieldElement", "parameters": "(BigInteger value, MersennePrimeModulus modulus)", "modifiers": "private", "return": "", "signature": " MersennePrimeFieldElement(BigInteger value, MersennePrimeModulus modulus)", "full_signature": "private  MersennePrimeFieldElement(BigInteger value, MersennePrimeModulus modulus)", "class_method_signature": "MersennePrimeFieldElement.MersennePrimeFieldElement(BigInteger value, MersennePrimeModulus modulus)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(BigInteger value)", "modifiers": "private", "return": "FieldElement", "signature": "FieldElement create(BigInteger value)", "full_signature": "private FieldElement create(BigInteger value)", "class_method_signature": "MersennePrimeFieldElement.create(BigInteger value)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(BigInteger value, MersennePrimeModulus modulus)", "modifiers": "static", "return": "FieldElement", "signature": "FieldElement create(BigInteger value, MersennePrimeModulus modulus)", "full_signature": "static FieldElement create(BigInteger value, MersennePrimeModulus modulus)", "class_method_signature": "MersennePrimeFieldElement.create(BigInteger value, MersennePrimeModulus modulus)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(long value, MersennePrimeModulus modulus)", "modifiers": "static", "return": "FieldElement", "signature": "FieldElement create(long value, MersennePrimeModulus modulus)", "full_signature": "static FieldElement create(long value, MersennePrimeModulus modulus)", "class_method_signature": "MersennePrimeFieldElement.create(long value, MersennePrimeModulus modulus)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String string, MersennePrimeModulus modulus)", "modifiers": "static", "return": "FieldElement", "signature": "FieldElement create(String string, MersennePrimeModulus modulus)", "full_signature": "static FieldElement create(String string, MersennePrimeModulus modulus)", "class_method_signature": "MersennePrimeFieldElement.create(String string, MersennePrimeModulus modulus)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(FieldElement operand)", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement add(FieldElement operand)", "full_signature": "@Override public FieldElement add(FieldElement operand)", "class_method_signature": "MersennePrimeFieldElement.add(FieldElement operand)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(FieldElement operand)", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement subtract(FieldElement operand)", "full_signature": "@Override public FieldElement subtract(FieldElement operand)", "class_method_signature": "MersennePrimeFieldElement.subtract(FieldElement operand)", "testcase": false, "constructor": false}, {"identifier": "negate", "parameters": "()", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement negate()", "full_signature": "@Override public FieldElement negate()", "class_method_signature": "MersennePrimeFieldElement.negate()", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(FieldElement operand)", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement multiply(FieldElement operand)", "full_signature": "@Override public FieldElement multiply(FieldElement operand)", "class_method_signature": "MersennePrimeFieldElement.multiply(FieldElement operand)", "testcase": false, "constructor": false}, {"identifier": "sqrt", "parameters": "()", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement sqrt()", "full_signature": "@Override public FieldElement sqrt()", "class_method_signature": "MersennePrimeFieldElement.sqrt()", "testcase": false, "constructor": false}, {"identifier": "modInverse", "parameters": "()", "modifiers": "@Override public", "return": "FieldElement", "signature": "FieldElement modInverse()", "full_signature": "@Override public FieldElement modInverse()", "class_method_signature": "MersennePrimeFieldElement.modInverse()", "testcase": false, "constructor": false}, {"identifier": "extractValue", "parameters": "(FieldElement element)", "modifiers": "static", "return": "BigInteger", "signature": "BigInteger extractValue(FieldElement element)", "full_signature": "static BigInteger extractValue(FieldElement element)", "class_method_signature": "MersennePrimeFieldElement.extractValue(FieldElement element)", "testcase": false, "constructor": false}, {"identifier": "getModulus", "parameters": "()", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getModulus()", "full_signature": "private BigInteger getModulus()", "class_method_signature": "MersennePrimeFieldElement.getModulus()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MersennePrimeFieldElement.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/builder/numeric/field/MersennePrimeFieldElement.java"}, "focal_method": {"identifier": "modInverse", "parameters": "()", "modifiers": "@Override public", "return": "FieldElement", "body": "@Override\n  public FieldElement modInverse() {\n    return create(value.modInverse(getModulus()));\n  }", "signature": "FieldElement modInverse()", "full_signature": "@Override public FieldElement modInverse()", "class_method_signature": "MersennePrimeFieldElement.modInverse()", "testcase": false, "constructor": false, "invocations": ["create", "modInverse", "getModulus"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}