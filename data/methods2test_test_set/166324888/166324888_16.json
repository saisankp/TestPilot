{"test_class": {"identifier": "VerificationMnemonicPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private VerificationMnemonicContract.View view;", "modifier": "private", "type": "VerificationMnemonicContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private VerificationMnemonicPresenter presenter;", "modifier": "private", "type": "VerificationMnemonicPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/VerificationMnemonicPresenterTest.java"}, "test_case": {"identifier": "emptyChecked", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void emptyChecked(){\n        ArrayList<VerificationMnemonicContract.DataEntity> mAllList = new ArrayList<>();\n\n        String mMnemonic = \"year rib clay employ boring icon vote shrug lab fluid loyal panda\";\n        String[] worlds = mMnemonic.split(\" \");\n        VerificationMnemonicContract.DataEntity[]  mTopList = new VerificationMnemonicContract.DataEntity[worlds.length];\n        presenter.setmTopList(mTopList);\n        for (String world : worlds) {\n            VerificationMnemonicContract.DataEntity dataEntity = presenter.generateDataEntity(world);\n            mAllList.add(dataEntity);\n        }\n        presenter.setmAllList(mAllList);\n\n        presenter.emptyChecked();\n        Mockito.verify(view).showBottomList(Mockito.any());\n    }", "signature": "void emptyChecked()", "full_signature": "@Test public void emptyChecked()", "class_method_signature": "VerificationMnemonicPresenterTest.emptyChecked()", "testcase": true, "constructor": false, "invocations": ["split", "setmTopList", "generateDataEntity", "add", "setmAllList", "emptyChecked", "showBottomList", "verify", "any"]}, "focal_class": {"identifier": "VerificationMnemonicPresenter", "superclass": "extends BasePresenter<VerificationMnemonicContract.View>", "interfaces": "implements VerificationMnemonicContract.Presenter", "fields": [{"original_string": "private ArrayList<VerificationMnemonicContract.DataEntity> mAllList = new ArrayList<>();", "modifier": "private", "type": "ArrayList<VerificationMnemonicContract.DataEntity>", "declarator": "mAllList = new ArrayList<>()", "var_name": "mAllList"}, {"original_string": "private VerificationMnemonicContract.DataEntity[] mTopList;", "modifier": "private", "type": "VerificationMnemonicContract.DataEntity[]", "declarator": "mTopList", "var_name": "mTopList"}, {"original_string": "private String mPassword;", "modifier": "private", "type": "String", "declarator": "mPassword", "var_name": "mPassword"}, {"original_string": "private Wallet mWalletEntity;", "modifier": "private", "type": "Wallet", "declarator": "mWalletEntity", "var_name": "mWalletEntity"}, {"original_string": "private String mMnemonic;", "modifier": "private", "type": "String", "declarator": "mMnemonic", "var_name": "mMnemonic"}], "methods": [{"identifier": "getmTopList", "parameters": "()", "modifiers": "public", "return": "VerificationMnemonicContract.DataEntity[]", "signature": "VerificationMnemonicContract.DataEntity[] getmTopList()", "full_signature": "public VerificationMnemonicContract.DataEntity[] getmTopList()", "class_method_signature": "VerificationMnemonicPresenter.getmTopList()", "testcase": false, "constructor": false}, {"identifier": "setmTopList", "parameters": "(VerificationMnemonicContract.DataEntity[] mTopList)", "modifiers": "public", "return": "void", "signature": "void setmTopList(VerificationMnemonicContract.DataEntity[] mTopList)", "full_signature": "public void setmTopList(VerificationMnemonicContract.DataEntity[] mTopList)", "class_method_signature": "VerificationMnemonicPresenter.setmTopList(VerificationMnemonicContract.DataEntity[] mTopList)", "testcase": false, "constructor": false}, {"identifier": "getmAllList", "parameters": "()", "modifiers": "public", "return": "ArrayList<VerificationMnemonicContract.DataEntity>", "signature": "ArrayList<VerificationMnemonicContract.DataEntity> getmAllList()", "full_signature": "public ArrayList<VerificationMnemonicContract.DataEntity> getmAllList()", "class_method_signature": "VerificationMnemonicPresenter.getmAllList()", "testcase": false, "constructor": false}, {"identifier": "setmAllList", "parameters": "(ArrayList<VerificationMnemonicContract.DataEntity> mAllList)", "modifiers": "public", "return": "void", "signature": "void setmAllList(ArrayList<VerificationMnemonicContract.DataEntity> mAllList)", "full_signature": "public void setmAllList(ArrayList<VerificationMnemonicContract.DataEntity> mAllList)", "class_method_signature": "VerificationMnemonicPresenter.setmAllList(ArrayList<VerificationMnemonicContract.DataEntity> mAllList)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "VerificationMnemonicPresenter.init()", "testcase": false, "constructor": false}, {"identifier": "checkTopListItem", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void checkTopListItem(int index)", "full_signature": "@Override public void checkTopListItem(int index)", "class_method_signature": "VerificationMnemonicPresenter.checkTopListItem(int index)", "testcase": false, "constructor": false}, {"identifier": "checkBottomListItem", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void checkBottomListItem(int index)", "full_signature": "@Override public void checkBottomListItem(int index)", "class_method_signature": "VerificationMnemonicPresenter.checkBottomListItem(int index)", "testcase": false, "constructor": false}, {"identifier": "emptyChecked", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void emptyChecked()", "full_signature": "@Override public void emptyChecked()", "class_method_signature": "VerificationMnemonicPresenter.emptyChecked()", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void submit()", "full_signature": "@Override public void submit()", "class_method_signature": "VerificationMnemonicPresenter.submit()", "testcase": false, "constructor": false}, {"identifier": "generateDataEntity", "parameters": "(String mnemonic)", "modifiers": "public", "return": "VerificationMnemonicContract.DataEntity", "signature": "VerificationMnemonicContract.DataEntity generateDataEntity(String mnemonic)", "full_signature": "public VerificationMnemonicContract.DataEntity generateDataEntity(String mnemonic)", "class_method_signature": "VerificationMnemonicPresenter.generateDataEntity(String mnemonic)", "testcase": false, "constructor": false}, {"identifier": "enableClear", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean enableClear()", "full_signature": "private boolean enableClear()", "class_method_signature": "VerificationMnemonicPresenter.enableClear()", "testcase": false, "constructor": false}, {"identifier": "enableBackup", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean enableBackup()", "full_signature": "private boolean enableBackup()", "class_method_signature": "VerificationMnemonicPresenter.enableBackup()", "testcase": false, "constructor": false}, {"identifier": "setBottomItemChecked", "parameters": "(String mnemonic, boolean checked)", "modifiers": "private", "return": "void", "signature": "void setBottomItemChecked(String mnemonic, boolean checked)", "full_signature": "private void setBottomItemChecked(String mnemonic, boolean checked)", "class_method_signature": "VerificationMnemonicPresenter.setBottomItemChecked(String mnemonic, boolean checked)", "testcase": false, "constructor": false}, {"identifier": "addTopItem", "parameters": "(VerificationMnemonicContract.DataEntity dataEntity)", "modifiers": "private", "return": "void", "signature": "void addTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "full_signature": "private void addTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "class_method_signature": "VerificationMnemonicPresenter.addTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "testcase": false, "constructor": false}, {"identifier": "removeTopItem", "parameters": "(VerificationMnemonicContract.DataEntity dataEntity)", "modifiers": "private", "return": "void", "signature": "void removeTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "full_signature": "private void removeTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "class_method_signature": "VerificationMnemonicPresenter.removeTopItem(VerificationMnemonicContract.DataEntity dataEntity)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/VerificationMnemonicPresenter.java"}, "focal_method": {"identifier": "emptyChecked", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void emptyChecked() {\n        for (VerificationMnemonicContract.DataEntity dataEntity : mAllList) {\n            dataEntity.setChecked(false);\n        }\n        for (int i = 0; i < mTopList.length; i++) {\n            mTopList[i] = null;\n        }\n        getView().showTopList(mTopList);\n        getView().showBottomList(mAllList);\n        getView().setCompletedBtnEnable(enableBackup());\n        getView().setClearBtnEnable(enableClear());\n    }", "signature": "void emptyChecked()", "full_signature": "@Override public void emptyChecked()", "class_method_signature": "VerificationMnemonicPresenter.emptyChecked()", "testcase": false, "constructor": false, "invocations": ["setChecked", "showTopList", "getView", "showBottomList", "getView", "setCompletedBtnEnable", "getView", "enableBackup", "setClearBtnEnable", "getView", "enableClear"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}