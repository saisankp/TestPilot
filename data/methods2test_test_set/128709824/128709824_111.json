{"test_class": {"identifier": "RpcConfigsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/common/RpcConfigsTest.java"}, "test_case": {"identifier": "subscribe", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void subscribe() {\n        RpcConfigs.putValue(\"ps001\", ProviderStatus.RECOVERING.toString());\n        Assert.assertEquals(ProviderStatus.RECOVERING, RpcConfigs.getEnumValue(\"ps001\", ProviderStatus.class));\n        try {\n            Assert.assertEquals(ProviderStatus.RECOVERING, RpcConfigs.getEnumValue(\"ps002\", ProviderStatus.class));\n            Assert.fail();\n        } catch (Exception e) {\n            Assert.assertTrue(e instanceof SofaRpcRuntimeException);\n        } finally {\n            RpcConfigs.putValue(\"ps001\", \"\");\n        }\n\n        String testSubKey = \"testSubKey\";\n        RpcConfigs.putValue(testSubKey, \"111\");\n        String protocol = RpcConfigs.getStringValue(testSubKey);\n        final Object[] values = new Object[2];\n        RpcConfigs.RpcConfigListener listener = new RpcConfigs.RpcConfigListener() {\n            @Override\n            public void onChange(Object oldValue, Object newValue) {\n                values[0] = oldValue;\n                values[1] = newValue;\n            }\n        };\n        try {\n            RpcConfigs.subscribe(testSubKey, listener);\n\n            RpcConfigs.putValue(testSubKey, \"xxx\");\n            Assert.assertEquals(protocol, values[0]);\n            Assert.assertEquals(\"xxx\", values[1]);\n\n            RpcConfigs.removeValue(testSubKey);\n        } finally {\n            RpcConfigs.removeValue(testSubKey);\n            RpcConfigs.unSubscribe(testSubKey, listener);\n        }\n    }", "signature": "void subscribe()", "full_signature": "@Test public void subscribe()", "class_method_signature": "RpcConfigsTest.subscribe()", "testcase": true, "constructor": false, "invocations": ["putValue", "toString", "assertEquals", "getEnumValue", "assertEquals", "getEnumValue", "fail", "assertTrue", "putValue", "putValue", "getStringValue", "subscribe", "putValue", "assertEquals", "assertEquals", "removeValue", "removeValue", "unSubscribe"]}, "focal_class": {"identifier": "RpcConfigs", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ConcurrentMap<String, Object>                  CFG          = new ConcurrentHashMap<String, Object>();", "modifier": "private final static", "type": "ConcurrentMap<String, Object>", "declarator": "CFG          = new ConcurrentHashMap<String, Object>()", "var_name": "CFG"}, {"original_string": "private final static ConcurrentMap<String, List<RpcConfigListener>> CFG_LISTENER = new ConcurrentHashMap<String,\n                                                                                             List<RpcConfigListener>>();", "modifier": "private final static", "type": "ConcurrentMap<String, List<RpcConfigListener>>", "declarator": "CFG_LISTENER = new ConcurrentHashMap<String,\n                                                                                             List<RpcConfigListener>>()", "var_name": "CFG_LISTENER"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void init()", "full_signature": "private static void init()", "class_method_signature": "RpcConfigs.init()", "testcase": false, "constructor": false}, {"identifier": "loadCustom", "parameters": "(String fileName)", "modifiers": "private static", "return": "void", "signature": "void loadCustom(String fileName)", "full_signature": "private static void loadCustom(String fileName)", "class_method_signature": "RpcConfigs.loadCustom(String fileName)", "testcase": false, "constructor": false}, {"identifier": "putValue", "parameters": "(String key, Object newValue)", "modifiers": "public static", "return": "void", "signature": "void putValue(String key, Object newValue)", "full_signature": "public static void putValue(String key, Object newValue)", "class_method_signature": "RpcConfigs.putValue(String key, Object newValue)", "testcase": false, "constructor": false}, {"identifier": "removeValue", "parameters": "(String key)", "modifiers": "@JustForTest synchronized static", "return": "void", "signature": "void removeValue(String key)", "full_signature": "@JustForTest synchronized static void removeValue(String key)", "class_method_signature": "RpcConfigs.removeValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getBooleanValue", "parameters": "(String primaryKey)", "modifiers": "public static", "return": "boolean", "signature": "boolean getBooleanValue(String primaryKey)", "full_signature": "public static boolean getBooleanValue(String primaryKey)", "class_method_signature": "RpcConfigs.getBooleanValue(String primaryKey)", "testcase": false, "constructor": false}, {"identifier": "getBooleanValue", "parameters": "(String primaryKey, String secondaryKey)", "modifiers": "public static", "return": "boolean", "signature": "boolean getBooleanValue(String primaryKey, String secondaryKey)", "full_signature": "public static boolean getBooleanValue(String primaryKey, String secondaryKey)", "class_method_signature": "RpcConfigs.getBooleanValue(String primaryKey, String secondaryKey)", "testcase": false, "constructor": false}, {"identifier": "getIntValue", "parameters": "(String primaryKey)", "modifiers": "public static", "return": "int", "signature": "int getIntValue(String primaryKey)", "full_signature": "public static int getIntValue(String primaryKey)", "class_method_signature": "RpcConfigs.getIntValue(String primaryKey)", "testcase": false, "constructor": false}, {"identifier": "getIntValue", "parameters": "(String primaryKey, String secondaryKey)", "modifiers": "public static", "return": "int", "signature": "int getIntValue(String primaryKey, String secondaryKey)", "full_signature": "public static int getIntValue(String primaryKey, String secondaryKey)", "class_method_signature": "RpcConfigs.getIntValue(String primaryKey, String secondaryKey)", "testcase": false, "constructor": false}, {"identifier": "getEnumValue", "parameters": "(String primaryKey, Class<T> enumClazz)", "modifiers": "public static", "return": "T", "signature": "T getEnumValue(String primaryKey, Class<T> enumClazz)", "full_signature": "public static T getEnumValue(String primaryKey, Class<T> enumClazz)", "class_method_signature": "RpcConfigs.getEnumValue(String primaryKey, Class<T> enumClazz)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "(String primaryKey)", "modifiers": "public static", "return": "String", "signature": "String getStringValue(String primaryKey)", "full_signature": "public static String getStringValue(String primaryKey)", "class_method_signature": "RpcConfigs.getStringValue(String primaryKey)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "(String primaryKey, String secondaryKey)", "modifiers": "public static", "return": "String", "signature": "String getStringValue(String primaryKey, String secondaryKey)", "full_signature": "public static String getStringValue(String primaryKey, String secondaryKey)", "class_method_signature": "RpcConfigs.getStringValue(String primaryKey, String secondaryKey)", "testcase": false, "constructor": false}, {"identifier": "getListValue", "parameters": "(String primaryKey)", "modifiers": "public static", "return": "List", "signature": "List getListValue(String primaryKey)", "full_signature": "public static List getListValue(String primaryKey)", "class_method_signature": "RpcConfigs.getListValue(String primaryKey)", "testcase": false, "constructor": false}, {"identifier": "getOrDefaultValue", "parameters": "(String primaryKey, T defaultValue)", "modifiers": "public static", "return": "T", "signature": "T getOrDefaultValue(String primaryKey, T defaultValue)", "full_signature": "public static T getOrDefaultValue(String primaryKey, T defaultValue)", "class_method_signature": "RpcConfigs.getOrDefaultValue(String primaryKey, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "subscribe", "parameters": "(String key, RpcConfigListener listener)", "modifiers": "public static synchronized", "return": "void", "signature": "void subscribe(String key, RpcConfigListener listener)", "full_signature": "public static synchronized void subscribe(String key, RpcConfigListener listener)", "class_method_signature": "RpcConfigs.subscribe(String key, RpcConfigListener listener)", "testcase": false, "constructor": false}, {"identifier": "unSubscribe", "parameters": "(String key, RpcConfigListener listener)", "modifiers": "public static synchronized", "return": "void", "signature": "void unSubscribe(String key, RpcConfigListener listener)", "full_signature": "public static synchronized void unSubscribe(String key, RpcConfigListener listener)", "class_method_signature": "RpcConfigs.unSubscribe(String key, RpcConfigListener listener)", "testcase": false, "constructor": false}, {"identifier": "changed", "parameters": "(Object oldObj, Object newObj)", "modifiers": "protected static", "return": "boolean", "signature": "boolean changed(Object oldObj, Object newObj)", "full_signature": "protected static boolean changed(Object oldObj, Object newObj)", "class_method_signature": "RpcConfigs.changed(Object oldObj, Object newObj)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/common/RpcConfigs.java"}, "focal_method": {"identifier": "subscribe", "parameters": "(String key, RpcConfigListener listener)", "modifiers": "public static synchronized", "return": "void", "body": "public static synchronized void subscribe(String key, RpcConfigListener listener) {\n        List<RpcConfigListener> listeners = CFG_LISTENER.get(key);\n        if (listeners == null) {\n            listeners = new ArrayList<RpcConfigListener>();\n            CFG_LISTENER.put(key, listeners);\n        }\n        listeners.add(listener);\n    }", "signature": "void subscribe(String key, RpcConfigListener listener)", "full_signature": "public static synchronized void subscribe(String key, RpcConfigListener listener)", "class_method_signature": "RpcConfigs.subscribe(String key, RpcConfigListener listener)", "testcase": false, "constructor": false, "invocations": ["get", "put", "add"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}