{"test_class": {"identifier": "ConfigDescriptionRegistryTest", "superclass": "extends JavaTest", "interfaces": "", "fields": [{"original_string": "private @NonNullByDefault({}) URI uriDummy;", "modifier": "private @NonNullByDefault({})", "type": "URI", "declarator": "uriDummy", "var_name": "uriDummy"}, {"original_string": "private @NonNullByDefault({}) URI uriDummy1;", "modifier": "private @NonNullByDefault({})", "type": "URI", "declarator": "uriDummy1", "var_name": "uriDummy1"}, {"original_string": "private @NonNullByDefault({}) URI uriAliases;", "modifier": "private @NonNullByDefault({})", "type": "URI", "declarator": "uriAliases", "var_name": "uriAliases"}, {"original_string": "private @NonNullByDefault({}) ConfigDescriptionRegistry configDescriptionRegistry;", "modifier": "private @NonNullByDefault({})", "type": "ConfigDescriptionRegistry", "declarator": "configDescriptionRegistry", "var_name": "configDescriptionRegistry"}, {"original_string": "private @NonNullByDefault({}) ConfigDescription configDescription;", "modifier": "private @NonNullByDefault({})", "type": "ConfigDescription", "declarator": "configDescription", "var_name": "configDescription"}, {"original_string": "private @NonNullByDefault({}) ConfigDescription configDescription1;", "modifier": "private @NonNullByDefault({})", "type": "ConfigDescription", "declarator": "configDescription1", "var_name": "configDescription1"}, {"original_string": "private @NonNullByDefault({}) ConfigDescription configDescription2;", "modifier": "private @NonNullByDefault({})", "type": "ConfigDescription", "declarator": "configDescription2", "var_name": "configDescription2"}, {"original_string": "private @NonNullByDefault({}) ConfigDescription configDescriptionAliased;", "modifier": "private @NonNullByDefault({})", "type": "ConfigDescription", "declarator": "configDescriptionAliased", "var_name": "configDescriptionAliased"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigDescriptionProvider configDescriptionProviderMock;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigDescriptionProvider", "declarator": "configDescriptionProviderMock", "var_name": "configDescriptionProviderMock"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigDescriptionProvider configDescriptionProviderMock1;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigDescriptionProvider", "declarator": "configDescriptionProviderMock1", "var_name": "configDescriptionProviderMock1"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigDescriptionProvider configDescriptionProviderMock2;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigDescriptionProvider", "declarator": "configDescriptionProviderMock2", "var_name": "configDescriptionProviderMock2"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigDescriptionProvider configDescriptionProviderAliased;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigDescriptionProvider", "declarator": "configDescriptionProviderAliased", "var_name": "configDescriptionProviderAliased"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigDescriptionAliasProvider aliasProvider;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigDescriptionAliasProvider", "declarator": "aliasProvider", "var_name": "aliasProvider"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigOptionProvider configOptionsProviderMockAliased;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigOptionProvider", "declarator": "configOptionsProviderMockAliased", "var_name": "configOptionsProviderMockAliased"}, {"original_string": "private @Mock @NonNullByDefault({}) ConfigOptionProvider configOptionsProviderMock;", "modifier": "private @Mock @NonNullByDefault({})", "type": "ConfigOptionProvider", "declarator": "configOptionsProviderMock", "var_name": "configOptionsProviderMock"}], "file": "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigDescriptionRegistryTest.java"}, "test_case": {"identifier": "testGetConfigDescription", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConfigDescription() throws Exception {\n        configDescriptionRegistry.addConfigDescriptionProvider(configDescriptionProviderMock);\n\n        ConfigDescription configDescription = requireNonNull(configDescriptionRegistry.getConfigDescription(uriDummy));\n        assertThat(configDescription.getUID(), is(equalTo(uriDummy)));\n    }", "signature": "void testGetConfigDescription()", "full_signature": "@Test public void testGetConfigDescription()", "class_method_signature": "ConfigDescriptionRegistryTest.testGetConfigDescription()", "testcase": true, "constructor": false, "invocations": ["addConfigDescriptionProvider", "requireNonNull", "getConfigDescription", "assertThat", "getUID", "is", "equalTo"]}, "focal_class": {"identifier": "ConfigDescriptionRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(ConfigDescriptionRegistry.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ConfigDescriptionRegistry.class)", "var_name": "logger"}, {"original_string": "private final List<ConfigOptionProvider> configOptionProviders = new CopyOnWriteArrayList<>();", "modifier": "private final", "type": "List<ConfigOptionProvider>", "declarator": "configOptionProviders = new CopyOnWriteArrayList<>()", "var_name": "configOptionProviders"}, {"original_string": "private final List<ConfigDescriptionProvider> configDescriptionProviders = new CopyOnWriteArrayList<>();", "modifier": "private final", "type": "List<ConfigDescriptionProvider>", "declarator": "configDescriptionProviders = new CopyOnWriteArrayList<>()", "var_name": "configDescriptionProviders"}, {"original_string": "private final List<ConfigDescriptionAliasProvider> configDescriptionAliasProviders = new CopyOnWriteArrayList<>();", "modifier": "private final", "type": "List<ConfigDescriptionAliasProvider>", "declarator": "configDescriptionAliasProviders = new CopyOnWriteArrayList<>()", "var_name": "configDescriptionAliasProviders"}], "methods": [{"identifier": "addConfigOptionProvider", "parameters": "(ConfigOptionProvider configOptionProvider)", "modifiers": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected", "return": "void", "signature": "void addConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "full_signature": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected void addConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "class_method_signature": "ConfigDescriptionRegistry.addConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "testcase": false, "constructor": false}, {"identifier": "removeConfigOptionProvider", "parameters": "(ConfigOptionProvider configOptionProvider)", "modifiers": "protected", "return": "void", "signature": "void removeConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "full_signature": "protected void removeConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "class_method_signature": "ConfigDescriptionRegistry.removeConfigOptionProvider(ConfigOptionProvider configOptionProvider)", "testcase": false, "constructor": false}, {"identifier": "addConfigDescriptionProvider", "parameters": "(ConfigDescriptionProvider configDescriptionProvider)", "modifiers": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected", "return": "void", "signature": "void addConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "full_signature": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected void addConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "class_method_signature": "ConfigDescriptionRegistry.addConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "testcase": false, "constructor": false}, {"identifier": "removeConfigDescriptionProvider", "parameters": "(ConfigDescriptionProvider configDescriptionProvider)", "modifiers": "protected", "return": "void", "signature": "void removeConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "full_signature": "protected void removeConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "class_method_signature": "ConfigDescriptionRegistry.removeConfigDescriptionProvider(ConfigDescriptionProvider configDescriptionProvider)", "testcase": false, "constructor": false}, {"identifier": "addConfigDescriptionAliasProvider", "parameters": "(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "modifiers": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected", "return": "void", "signature": "void addConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "full_signature": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) protected void addConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "class_method_signature": "ConfigDescriptionRegistry.addConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "testcase": false, "constructor": false}, {"identifier": "removeConfigDescriptionAliasProvider", "parameters": "(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "modifiers": "protected", "return": "void", "signature": "void removeConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "full_signature": "protected void removeConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "class_method_signature": "ConfigDescriptionRegistry.removeConfigDescriptionAliasProvider(ConfigDescriptionAliasProvider configDescriptionAliasProvider)", "testcase": false, "constructor": false}, {"identifier": "getConfigDescriptions", "parameters": "(@Nullable Locale locale)", "modifiers": "public", "return": "Collection<ConfigDescription>", "signature": "Collection<ConfigDescription> getConfigDescriptions(@Nullable Locale locale)", "full_signature": "public Collection<ConfigDescription> getConfigDescriptions(@Nullable Locale locale)", "class_method_signature": "ConfigDescriptionRegistry.getConfigDescriptions(@Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getConfigDescriptions", "parameters": "()", "modifiers": "public", "return": "Collection<ConfigDescription>", "signature": "Collection<ConfigDescription> getConfigDescriptions()", "full_signature": "public Collection<ConfigDescription> getConfigDescriptions()", "class_method_signature": "ConfigDescriptionRegistry.getConfigDescriptions()", "testcase": false, "constructor": false}, {"identifier": "getConfigDescription", "parameters": "(URI uri, @Nullable Locale locale)", "modifiers": "public @Nullable", "return": "ConfigDescription", "signature": "ConfigDescription getConfigDescription(URI uri, @Nullable Locale locale)", "full_signature": "public @Nullable ConfigDescription getConfigDescription(URI uri, @Nullable Locale locale)", "class_method_signature": "ConfigDescriptionRegistry.getConfigDescription(URI uri, @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getAliases", "parameters": "(URI original)", "modifiers": "private", "return": "Set<URI>", "signature": "Set<URI> getAliases(URI original)", "full_signature": "private Set<URI> getAliases(URI original)", "class_method_signature": "ConfigDescriptionRegistry.getAliases(URI original)", "testcase": false, "constructor": false}, {"identifier": "fillFromProviders", "parameters": "(URI uri, @Nullable Locale locale, List<ConfigDescriptionParameter> parameters,\n            List<ConfigDescriptionParameterGroup> parameterGroups)", "modifiers": "private", "return": "boolean", "signature": "boolean fillFromProviders(URI uri, @Nullable Locale locale, List<ConfigDescriptionParameter> parameters,\n            List<ConfigDescriptionParameterGroup> parameterGroups)", "full_signature": "private boolean fillFromProviders(URI uri, @Nullable Locale locale, List<ConfigDescriptionParameter> parameters,\n            List<ConfigDescriptionParameterGroup> parameterGroups)", "class_method_signature": "ConfigDescriptionRegistry.fillFromProviders(URI uri, @Nullable Locale locale, List<ConfigDescriptionParameter> parameters,\n            List<ConfigDescriptionParameterGroup> parameterGroups)", "testcase": false, "constructor": false}, {"identifier": "getConfigDescription", "parameters": "(URI uri)", "modifiers": "public @Nullable", "return": "ConfigDescription", "signature": "ConfigDescription getConfigDescription(URI uri)", "full_signature": "public @Nullable ConfigDescription getConfigDescription(URI uri)", "class_method_signature": "ConfigDescriptionRegistry.getConfigDescription(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getConfigOptions", "parameters": "(URI uri, Set<URI> aliases, ConfigDescriptionParameter parameter,\n            @Nullable Locale locale)", "modifiers": "private", "return": "ConfigDescriptionParameter", "signature": "ConfigDescriptionParameter getConfigOptions(URI uri, Set<URI> aliases, ConfigDescriptionParameter parameter,\n            @Nullable Locale locale)", "full_signature": "private ConfigDescriptionParameter getConfigOptions(URI uri, Set<URI> aliases, ConfigDescriptionParameter parameter,\n            @Nullable Locale locale)", "class_method_signature": "ConfigDescriptionRegistry.getConfigOptions(URI uri, Set<URI> aliases, ConfigDescriptionParameter parameter,\n            @Nullable Locale locale)", "testcase": false, "constructor": false}, {"identifier": "fillFromProviders", "parameters": "(URI alias, ConfigDescriptionParameter parameter, @Nullable Locale locale,\n            List<ParameterOption> options)", "modifiers": "private", "return": "boolean", "signature": "boolean fillFromProviders(URI alias, ConfigDescriptionParameter parameter, @Nullable Locale locale,\n            List<ParameterOption> options)", "full_signature": "private boolean fillFromProviders(URI alias, ConfigDescriptionParameter parameter, @Nullable Locale locale,\n            List<ParameterOption> options)", "class_method_signature": "ConfigDescriptionRegistry.fillFromProviders(URI alias, ConfigDescriptionParameter parameter, @Nullable Locale locale,\n            List<ParameterOption> options)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionRegistry.java"}, "focal_method": {"identifier": "getConfigDescription", "parameters": "(URI uri, @Nullable Locale locale)", "modifiers": "public @Nullable", "return": "ConfigDescription", "body": "public @Nullable ConfigDescription getConfigDescription(URI uri, @Nullable Locale locale) {\n        List<ConfigDescriptionParameter> parameters = new ArrayList<>();\n        List<ConfigDescriptionParameterGroup> parameterGroups = new ArrayList<>();\n\n        boolean found = false;\n        Set<URI> aliases = getAliases(uri);\n        for (URI alias : aliases) {\n            logger.debug(\"No config description found for '{}', using alias '{}' instead\", uri, alias);\n            found |= fillFromProviders(alias, locale, parameters, parameterGroups);\n        }\n\n        found |= fillFromProviders(uri, locale, parameters, parameterGroups);\n\n        if (found) {\n            List<ConfigDescriptionParameter> parametersWithOptions = new ArrayList<>(parameters.size());\n            for (ConfigDescriptionParameter parameter : parameters) {\n                parametersWithOptions.add(getConfigOptions(uri, aliases, parameter, locale));\n            }\n\n            // Return the new configuration description\n            return ConfigDescriptionBuilder.create(uri).withParameters(parametersWithOptions)\n                    .withParameterGroups(parameterGroups).build();\n        } else {\n            // Otherwise null\n            return null;\n        }\n    }", "signature": "ConfigDescription getConfigDescription(URI uri, @Nullable Locale locale)", "full_signature": "public @Nullable ConfigDescription getConfigDescription(URI uri, @Nullable Locale locale)", "class_method_signature": "ConfigDescriptionRegistry.getConfigDescription(URI uri, @Nullable Locale locale)", "testcase": false, "constructor": false, "invocations": ["getAliases", "debug", "fillFromProviders", "fillFromProviders", "size", "add", "getConfigOptions", "build", "withParameterGroups", "withParameters", "create"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}