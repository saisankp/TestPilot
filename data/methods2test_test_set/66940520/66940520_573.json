{"test_class": {"identifier": "PreheatTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/preheat/PreheatTest.java"}, "test_case": {"identifier": "testAllEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllEmpty()\n    {\n        Preheat preheat = new Preheat();\n\n        assertTrue( preheat.isEmpty() );\n        assertTrue( preheat.isEmpty( PreheatIdentifier.UID ) );\n        assertTrue( preheat.isEmpty( PreheatIdentifier.CODE ) );\n    }", "signature": "void testAllEmpty()", "full_signature": "@Test public void testAllEmpty()", "class_method_signature": "PreheatTest.testAllEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "assertTrue", "isEmpty", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "Preheat", "superclass": "", "interfaces": "", "fields": [{"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private Map<PreheatIdentifier, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> map = new HashMap<>();", "modifier": "private", "type": "Map<PreheatIdentifier, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>>", "declarator": "map = new HashMap<>()", "var_name": "map"}, {"original_string": "private Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults = new HashMap<>();", "modifier": "private", "type": "Map<Class<? extends IdentifiableObject>, IdentifiableObject>", "declarator": "defaults = new HashMap<>()", "var_name": "defaults"}, {"original_string": "private Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> uniquenessMap = new HashMap<>();", "modifier": "private", "type": "Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>>", "declarator": "uniquenessMap = new HashMap<>()", "var_name": "uniquenessMap"}, {"original_string": "private Map<String, Period> periodMap = new HashMap<>();", "modifier": "private", "type": "Map<String, Period>", "declarator": "periodMap = new HashMap<>()", "var_name": "periodMap"}, {"original_string": "private Map<String, PeriodType> periodTypeMap = new HashMap<>();", "modifier": "private", "type": "Map<String, PeriodType>", "declarator": "periodTypeMap = new HashMap<>()", "var_name": "periodTypeMap"}, {"original_string": "private Map<Class<?>, Set<String>> mandatoryAttributes = new HashMap<>();", "modifier": "private", "type": "Map<Class<?>, Set<String>>", "declarator": "mandatoryAttributes = new HashMap<>()", "var_name": "mandatoryAttributes"}, {"original_string": "private Map<Class<?>, Set<String>> uniqueAttributes = new HashMap<>();", "modifier": "private", "type": "Map<Class<?>, Set<String>>", "declarator": "uniqueAttributes = new HashMap<>()", "var_name": "uniqueAttributes"}, {"original_string": "private Map<Class<?>, Map<String, Map<String, String>>> uniqueAttributeValues = new HashMap<>();", "modifier": "private", "type": "Map<Class<?>, Map<String, Map<String, String>>>", "declarator": "uniqueAttributeValues = new HashMap<>()", "var_name": "uniqueAttributeValues"}], "methods": [{"identifier": "Preheat", "parameters": "()", "modifiers": "public", "return": "", "signature": " Preheat()", "full_signature": "public  Preheat()", "class_method_signature": "Preheat.Preheat()", "testcase": false, "constructor": true}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "User", "signature": "User getUser()", "full_signature": "public User getUser()", "class_method_signature": "Preheat.getUser()", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "Preheat.getUsername()", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "( User user )", "modifiers": "public", "return": "void", "signature": "void setUser( User user )", "full_signature": "public void setUser( User user )", "class_method_signature": "Preheat.setUser( User user )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "modifiers": "public", "return": "T", "signature": "T get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "full_signature": "public T get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "class_method_signature": "Preheat.get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "T", "signature": "T get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public T get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "class_method_signature": "Preheat.get( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "( PreheatIdentifier identifier, List<T> keys )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "List<T>", "signature": "List<T> getAll( PreheatIdentifier identifier, List<T> keys )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public List<T> getAll( PreheatIdentifier identifier, List<T> keys )", "class_method_signature": "Preheat.getAll( PreheatIdentifier identifier, List<T> keys )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( PreheatIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "T", "signature": "T get( PreheatIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public T get( PreheatIdentifier identifier, T object )", "class_method_signature": "Preheat.get( PreheatIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "full_signature": "public boolean containsKey( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "class_method_signature": "Preheat.containsKey( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Preheat.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( PreheatIdentifier identifier )", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty( PreheatIdentifier identifier )", "full_signature": "public boolean isEmpty( PreheatIdentifier identifier )", "class_method_signature": "Preheat.isEmpty( PreheatIdentifier identifier )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass )", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass )", "full_signature": "public boolean isEmpty( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass )", "class_method_signature": "Preheat.isEmpty( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( PreheatIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "Preheat", "signature": "Preheat put( PreheatIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public Preheat put( PreheatIdentifier identifier, T object )", "class_method_signature": "Preheat.put( PreheatIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "( PreheatIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "Preheat", "signature": "Preheat replace( PreheatIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public Preheat replace( PreheatIdentifier identifier, T object )", "class_method_signature": "Preheat.replace( PreheatIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( PreheatIdentifier identifier, Collection<T> objects )", "modifiers": "public", "return": "Preheat", "signature": "Preheat put( PreheatIdentifier identifier, Collection<T> objects )", "full_signature": "public Preheat put( PreheatIdentifier identifier, Collection<T> objects )", "class_method_signature": "Preheat.put( PreheatIdentifier identifier, Collection<T> objects )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "modifiers": "public", "return": "Preheat", "signature": "Preheat remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "full_signature": "public Preheat remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "class_method_signature": "Preheat.remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, String key )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( PreheatIdentifier identifier, IdentifiableObject object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "Preheat", "signature": "Preheat remove( PreheatIdentifier identifier, IdentifiableObject object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public Preheat remove( PreheatIdentifier identifier, IdentifiableObject object )", "class_method_signature": "Preheat.remove( PreheatIdentifier identifier, IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, Collection<String> keys )", "modifiers": "public", "return": "Preheat", "signature": "Preheat remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, Collection<String> keys )", "full_signature": "public Preheat remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, Collection<String> keys )", "class_method_signature": "Preheat.remove( PreheatIdentifier identifier, Class<? extends IdentifiableObject> klass, Collection<String> keys )", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "()", "modifiers": "public", "return": "Map<PreheatIdentifier, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>>", "signature": "Map<PreheatIdentifier, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> getMap()", "full_signature": "public Map<PreheatIdentifier, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> getMap()", "class_method_signature": "Preheat.getMap()", "testcase": false, "constructor": false}, {"identifier": "getDefaults", "parameters": "()", "modifiers": "public", "return": "Map<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "Map<Class<? extends IdentifiableObject>, IdentifiableObject> getDefaults()", "full_signature": "public Map<Class<? extends IdentifiableObject>, IdentifiableObject> getDefaults()", "class_method_signature": "Preheat.getDefaults()", "testcase": false, "constructor": false}, {"identifier": "setDefaults", "parameters": "( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "modifiers": "public", "return": "void", "signature": "void setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "full_signature": "public void setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "class_method_signature": "Preheat.setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "testcase": false, "constructor": false}, {"identifier": "setUniquenessMap", "parameters": "( Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> uniquenessMap )", "modifiers": "public", "return": "void", "signature": "void setUniquenessMap( Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> uniquenessMap )", "full_signature": "public void setUniquenessMap( Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> uniquenessMap )", "class_method_signature": "Preheat.setUniquenessMap( Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> uniquenessMap )", "testcase": false, "constructor": false}, {"identifier": "getUniquenessMap", "parameters": "()", "modifiers": "public", "return": "Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>>", "signature": "Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> getUniquenessMap()", "full_signature": "public Map<Class<? extends IdentifiableObject>, Map<String, Map<Object, String>>> getUniquenessMap()", "class_method_signature": "Preheat.getUniquenessMap()", "testcase": false, "constructor": false}, {"identifier": "getPeriodMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Period>", "signature": "Map<String, Period> getPeriodMap()", "full_signature": "public Map<String, Period> getPeriodMap()", "class_method_signature": "Preheat.getPeriodMap()", "testcase": false, "constructor": false}, {"identifier": "setPeriodMap", "parameters": "( Map<String, Period> periodMap )", "modifiers": "public", "return": "void", "signature": "void setPeriodMap( Map<String, Period> periodMap )", "full_signature": "public void setPeriodMap( Map<String, Period> periodMap )", "class_method_signature": "Preheat.setPeriodMap( Map<String, Period> periodMap )", "testcase": false, "constructor": false}, {"identifier": "getPeriodTypeMap", "parameters": "()", "modifiers": "public", "return": "Map<String, PeriodType>", "signature": "Map<String, PeriodType> getPeriodTypeMap()", "full_signature": "public Map<String, PeriodType> getPeriodTypeMap()", "class_method_signature": "Preheat.getPeriodTypeMap()", "testcase": false, "constructor": false}, {"identifier": "setPeriodTypeMap", "parameters": "( Map<String, PeriodType> periodTypeMap )", "modifiers": "public", "return": "void", "signature": "void setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "full_signature": "public void setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "class_method_signature": "Preheat.setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "testcase": false, "constructor": false}, {"identifier": "getMandatoryAttributes", "parameters": "()", "modifiers": "public", "return": "Map<Class<?>, Set<String>>", "signature": "Map<Class<?>, Set<String>> getMandatoryAttributes()", "full_signature": "public Map<Class<?>, Set<String>> getMandatoryAttributes()", "class_method_signature": "Preheat.getMandatoryAttributes()", "testcase": false, "constructor": false}, {"identifier": "setMandatoryAttributes", "parameters": "( Map<Class<?>, Set<String>> mandatoryAttributes )", "modifiers": "public", "return": "void", "signature": "void setMandatoryAttributes( Map<Class<?>, Set<String>> mandatoryAttributes )", "full_signature": "public void setMandatoryAttributes( Map<Class<?>, Set<String>> mandatoryAttributes )", "class_method_signature": "Preheat.setMandatoryAttributes( Map<Class<?>, Set<String>> mandatoryAttributes )", "testcase": false, "constructor": false}, {"identifier": "getUniqueAttributes", "parameters": "()", "modifiers": "public", "return": "Map<Class<?>, Set<String>>", "signature": "Map<Class<?>, Set<String>> getUniqueAttributes()", "full_signature": "public Map<Class<?>, Set<String>> getUniqueAttributes()", "class_method_signature": "Preheat.getUniqueAttributes()", "testcase": false, "constructor": false}, {"identifier": "setUniqueAttributes", "parameters": "( Map<Class<?>, Set<String>> uniqueAttributes )", "modifiers": "public", "return": "void", "signature": "void setUniqueAttributes( Map<Class<?>, Set<String>> uniqueAttributes )", "full_signature": "public void setUniqueAttributes( Map<Class<?>, Set<String>> uniqueAttributes )", "class_method_signature": "Preheat.setUniqueAttributes( Map<Class<?>, Set<String>> uniqueAttributes )", "testcase": false, "constructor": false}, {"identifier": "getUniqueAttributeValues", "parameters": "()", "modifiers": "public", "return": "Map<Class<?>, Map<String, Map<String, String>>>", "signature": "Map<Class<?>, Map<String, Map<String, String>>> getUniqueAttributeValues()", "full_signature": "public Map<Class<?>, Map<String, Map<String, String>>> getUniqueAttributeValues()", "class_method_signature": "Preheat.getUniqueAttributeValues()", "testcase": false, "constructor": false}, {"identifier": "setUniqueAttributeValues", "parameters": "( Map<Class<?>, Map<String, Map<String, String>>> uniqueAttributeValues )", "modifiers": "public", "return": "void", "signature": "void setUniqueAttributeValues( Map<Class<?>, Map<String, Map<String, String>>> uniqueAttributeValues )", "full_signature": "public void setUniqueAttributeValues( Map<Class<?>, Map<String, Map<String, String>>> uniqueAttributeValues )", "class_method_signature": "Preheat.setUniqueAttributeValues( Map<Class<?>, Map<String, Map<String, String>>> uniqueAttributeValues )", "testcase": false, "constructor": false}, {"identifier": "getRealClass", "parameters": "( Class<?> klass )", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getRealClass( Class<?> klass )", "full_signature": "public static Class<?> getRealClass( Class<?> klass )", "class_method_signature": "Preheat.getRealClass( Class<?> klass )", "testcase": false, "constructor": false}, {"identifier": "isDefaultClass", "parameters": "( IdentifiableObject object )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDefaultClass( IdentifiableObject object )", "full_signature": "public static boolean isDefaultClass( IdentifiableObject object )", "class_method_signature": "Preheat.isDefaultClass( IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "isDefaultClass", "parameters": "( Class<?> klass )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDefaultClass( Class<?> klass )", "full_signature": "public static boolean isDefaultClass( Class<?> klass )", "class_method_signature": "Preheat.isDefaultClass( Class<?> klass )", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "( IdentifiableObject object )", "modifiers": "public", "return": "boolean", "signature": "boolean isDefault( IdentifiableObject object )", "full_signature": "public boolean isDefault( IdentifiableObject object )", "class_method_signature": "Preheat.isDefault( IdentifiableObject object )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/preheat/Preheat.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isEmpty()\n    {\n        return map.isEmpty();\n    }", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Preheat.isEmpty()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}