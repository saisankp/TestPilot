{"test_class": {"identifier": "ExternalJarClassInitializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"com.test.something\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"com.test.something\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static final String JAR_FOLDER_PATH = \"config/jar\";", "modifier": "private static final", "type": "String", "declarator": "JAR_FOLDER_PATH = \"config/jar\"", "var_name": "JAR_FOLDER_PATH"}, {"original_string": "private static final Class<SequenceHandler> INTERFACE_TO_CAST = SequenceHandler.class;", "modifier": "private static final", "type": "Class<SequenceHandler>", "declarator": "INTERFACE_TO_CAST = SequenceHandler.class", "var_name": "INTERFACE_TO_CAST"}, {"original_string": "private static final String BEAN_NAME = PACKAGE_NAME + INTERFACE_TO_CAST.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "BEAN_NAME = PACKAGE_NAME + INTERFACE_TO_CAST.getSimpleName()", "var_name": "BEAN_NAME"}, {"original_string": "@Mock\n    private ClassPathExtender classPathExtender;", "modifier": "@Mock\n    private", "type": "ClassPathExtender", "declarator": "classPathExtender", "var_name": "classPathExtender"}, {"original_string": "@Mock\n    private PackageBasedClassFinder packageBasedClassFinder;", "modifier": "@Mock\n    private", "type": "PackageBasedClassFinder", "declarator": "packageBasedClassFinder", "var_name": "packageBasedClassFinder"}, {"original_string": "@Mock\n    private FileUtils fileUtils;", "modifier": "@Mock\n    private", "type": "FileUtils", "declarator": "fileUtils", "var_name": "fileUtils"}, {"original_string": "@Mock\n    private ClassInstantiator classInstantiator;", "modifier": "@Mock\n    private", "type": "ClassInstantiator", "declarator": "classInstantiator", "var_name": "classInstantiator"}, {"original_string": "@Mock\n    private FileFactory fileFactory;", "modifier": "@Mock\n    private", "type": "FileFactory", "declarator": "fileFactory", "var_name": "fileFactory"}, {"original_string": "@Mock\n    private BeanRegistryService beanRegistryService;", "modifier": "@Mock\n    private", "type": "BeanRegistryService", "declarator": "beanRegistryService", "var_name": "beanRegistryService"}, {"original_string": "@InjectMocks\n    private ExternalJarClassInitializer underTest;", "modifier": "@InjectMocks\n    private", "type": "ExternalJarClassInitializer", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private File folder;", "modifier": "@Mock\n    private", "type": "File", "declarator": "folder", "var_name": "folder"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private DummySequenceHandler object;", "modifier": "@Mock\n    private", "type": "DummySequenceHandler", "declarator": "object", "var_name": "object"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/initializer/support/ExternalJarClassInitializerTest.java"}, "test_case": {"identifier": "testLoadExternalClassShouldGetClassAsBeanFirst", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadExternalClassShouldGetClassAsBeanFirst() throws InstantiationException, IllegalAccessException, InvocationTargetException {\n        //GIVEN in setup\n        //WHEN\n        Object result = underTest.loadExternalClass(PACKAGE_NAME, JAR_FOLDER_PATH, INTERFACE_TO_CAST);\n        //THEN\n        verify(classInstantiator, never()).createClassInstanceOf(INTERFACE_TO_CAST);\n        verify(logger).info(Mockito.anyString(), Mockito.anyObject(), Mockito.anyObject(), Mockito.anyObject());\n        assertNotNull(result);\n    }", "signature": "void testLoadExternalClassShouldGetClassAsBeanFirst()", "full_signature": "@Test public void testLoadExternalClassShouldGetClassAsBeanFirst()", "class_method_signature": "ExternalJarClassInitializerTest.testLoadExternalClassShouldGetClassAsBeanFirst()", "testcase": true, "constructor": false, "invocations": ["loadExternalClass", "createClassInstanceOf", "verify", "never", "info", "verify", "anyString", "anyObject", "anyObject", "anyObject", "assertNotNull"]}, "focal_class": {"identifier": "ExternalJarClassInitializer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String GOT_BEAN_TEMPLATE = \"Got bean of name: '{}' , type: '{}' and interface: {}\";", "modifier": "private static final", "type": "String", "declarator": "GOT_BEAN_TEMPLATE = \"Got bean of name: '{}' , type: '{}' and interface: {}\"", "var_name": "GOT_BEAN_TEMPLATE"}, {"original_string": "private static final String JAR_INITIALIZATION_TEMPLATE = \"JAR - Initialized class '{}' of '{}' interface, using folder path '{}'.\";", "modifier": "private static final", "type": "String", "declarator": "JAR_INITIALIZATION_TEMPLATE = \"JAR - Initialized class '{}' of '{}' interface, using folder path '{}'.\"", "var_name": "JAR_INITIALIZATION_TEMPLATE"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(ExternalJarClassInitializer.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ExternalJarClassInitializer.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private ClassPathExtender classPathExtender;", "modifier": "@Autowired\n    private", "type": "ClassPathExtender", "declarator": "classPathExtender", "var_name": "classPathExtender"}, {"original_string": "@Autowired\n    private PackageBasedClassFinder packageBasedClassFinder;", "modifier": "@Autowired\n    private", "type": "PackageBasedClassFinder", "declarator": "packageBasedClassFinder", "var_name": "packageBasedClassFinder"}, {"original_string": "@Autowired\n    private FileUtils fileUtils;", "modifier": "@Autowired\n    private", "type": "FileUtils", "declarator": "fileUtils", "var_name": "fileUtils"}, {"original_string": "@Autowired\n    private ClassInstantiator classInstantiator;", "modifier": "@Autowired\n    private", "type": "ClassInstantiator", "declarator": "classInstantiator", "var_name": "classInstantiator"}, {"original_string": "@Autowired\n    private FileFactory fileFactory;", "modifier": "@Autowired\n    private", "type": "FileFactory", "declarator": "fileFactory", "var_name": "fileFactory"}, {"original_string": "@Autowired\n    private BeanRegistryService beanRegistryService;", "modifier": "@Autowired\n    private", "type": "BeanRegistryService", "declarator": "beanRegistryService", "var_name": "beanRegistryService"}], "methods": [{"identifier": "loadExternalClass", "parameters": "(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "modifiers": "public", "return": "T", "signature": "T loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "full_signature": "public T loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "class_method_signature": "ExternalJarClassInitializer.loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "testcase": false, "constructor": false}, {"identifier": "initializeFromJars", "parameters": "(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "modifiers": "private", "return": "T", "signature": "T initializeFromJars(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "full_signature": "private T initializeFromJars(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "class_method_signature": "ExternalJarClassInitializer.initializeFromJars(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "testcase": false, "constructor": false}, {"identifier": "addJarFilesInFolderPathToClassPath", "parameters": "(final String jarFolderPath)", "modifiers": "private", "return": "void", "signature": "void addJarFilesInFolderPathToClassPath(final String jarFolderPath)", "full_signature": "private void addJarFilesInFolderPathToClassPath(final String jarFolderPath)", "class_method_signature": "ExternalJarClassInitializer.addJarFilesInFolderPathToClassPath(final String jarFolderPath)", "testcase": false, "constructor": false}, {"identifier": "createBeanName", "parameters": "(final String name, final Class<T> interfaceToCast)", "modifiers": "private", "return": "String", "signature": "String createBeanName(final String name, final Class<T> interfaceToCast)", "full_signature": "private String createBeanName(final String name, final Class<T> interfaceToCast)", "class_method_signature": "ExternalJarClassInitializer.createBeanName(final String name, final Class<T> interfaceToCast)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/initializer/support/ExternalJarClassInitializer.java"}, "focal_method": {"identifier": "loadExternalClass", "parameters": "(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "modifiers": "public", "return": "T", "body": "public <T> T loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast) {\n        String beanName = createBeanName(packageName, interfaceToCast);\n        T result;\n        try {\n            result = beanRegistryService.getBean(beanName, interfaceToCast);\n            logger.info(GOT_BEAN_TEMPLATE, beanName, result.getClass().getName(), interfaceToCast);\n        } catch (BeansException e) {\n            logger.debug(String.format(\"Finding bean with name '%s' of type '%s' failed\", beanName, interfaceToCast), e);\n            result = initializeFromJars(packageName, jarFolderPath, interfaceToCast);\n            beanRegistryService.register(beanName, result);\n        }\n\n        return result;\n    }", "signature": "T loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "full_signature": "public T loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "class_method_signature": "ExternalJarClassInitializer.loadExternalClass(final String packageName, final String jarFolderPath, final Class<T> interfaceToCast)", "testcase": false, "constructor": false, "invocations": ["createBeanName", "getBean", "info", "getName", "getClass", "debug", "format", "initializeFromJars", "register"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}