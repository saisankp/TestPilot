{"test_class": {"identifier": "BigQueryStringsTest", "superclass": "", "interfaces": "", "fields": [], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/BigQueryStringsTest.java"}, "test_case": {"identifier": "testToStringThrowsWhenTableIdIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToStringThrowsWhenTableIdIsEmpty() {\n    TableReference tableRef = new TableReference()\n        .setProjectId(\"foo-proj\")\n        .setDatasetId(\"foo\")\n        .setTableId(\"\");\n    assertThrows(IllegalArgumentException.class, () -> BigQueryStrings.toString(tableRef));\n  }", "signature": "void testToStringThrowsWhenTableIdIsEmpty()", "full_signature": "@Test public void testToStringThrowsWhenTableIdIsEmpty()", "class_method_signature": "BigQueryStringsTest.testToStringThrowsWhenTableIdIsEmpty()", "testcase": true, "constructor": false, "invocations": ["setTableId", "setDatasetId", "setProjectId", "assertThrows", "toString"]}, "focal_class": {"identifier": "BigQueryStrings", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DATASET_AND_TABLE_REGEX = \"[a-zA-Z0-9_]+\\\\.[a-zA-Z0-9_$]+\";", "modifier": "public static final", "type": "String", "declarator": "DATASET_AND_TABLE_REGEX = \"[a-zA-Z0-9_]+\\\\.[a-zA-Z0-9_$]+\"", "var_name": "DATASET_AND_TABLE_REGEX"}, {"original_string": "private static final Splitter DOT_SPLITTER = Splitter.on('.');", "modifier": "private static final", "type": "Splitter", "declarator": "DOT_SPLITTER = Splitter.on('.')", "var_name": "DOT_SPLITTER"}], "methods": [{"identifier": "toString", "parameters": "(TableReference tableRef)", "modifiers": "public static", "return": "String", "signature": "String toString(TableReference tableRef)", "full_signature": "public static String toString(TableReference tableRef)", "class_method_signature": "BigQueryStrings.toString(TableReference tableRef)", "testcase": false, "constructor": false}, {"identifier": "parseTableReference", "parameters": "(String tableRefString)", "modifiers": "public static", "return": "TableReference", "signature": "TableReference parseTableReference(String tableRefString)", "full_signature": "public static TableReference parseTableReference(String tableRefString)", "class_method_signature": "BigQueryStrings.parseTableReference(String tableRefString)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/BigQueryStrings.java"}, "focal_method": {"identifier": "toString", "parameters": "(TableReference tableRef)", "modifiers": "public static", "return": "String", "body": "public static String toString(TableReference tableRef) {\n    Preconditions.checkArgument(!Strings.isNullOrEmpty(tableRef.getDatasetId()),\n        \"tableRef must contain non-empty DatasetId.\");\n    Preconditions.checkArgument(!Strings.isNullOrEmpty(tableRef.getTableId()),\n        \"tableRef must contain non-empty TableId.\");\n    if (Strings.isNullOrEmpty(tableRef.getProjectId())) {\n      return String.format(\"%s.%s\", tableRef.getDatasetId(), tableRef.getTableId());\n    } else {\n      return String.format(\"%s:%s.%s\",\n          tableRef.getProjectId(), tableRef.getDatasetId(), tableRef.getTableId());\n    }\n  }", "signature": "String toString(TableReference tableRef)", "full_signature": "public static String toString(TableReference tableRef)", "class_method_signature": "BigQueryStrings.toString(TableReference tableRef)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "isNullOrEmpty", "getDatasetId", "checkArgument", "isNullOrEmpty", "getTableId", "isNullOrEmpty", "getProjectId", "format", "getDatasetId", "getTableId", "format", "getProjectId", "getDatasetId", "getTableId"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}