{"test_class": {"identifier": "ImmutablePolicyEntryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Label LABEL_END_USER = Label.of(\"EndUser\");", "modifier": "private static final", "type": "Label", "declarator": "LABEL_END_USER = Label.of(\"EndUser\")", "var_name": "LABEL_END_USER"}], "file": "model/policies/src/test/java/org/eclipse/ditto/model/policies/ImmutablePolicyEntryTest.java"}, "test_case": {"identifier": "testFromJsonEmptyWithLabel", "parameters": "()", "modifiers": "@Test(expected = DittoJsonException.class) public", "return": "void", "body": "@Test(expected = DittoJsonException.class)\n    public void testFromJsonEmptyWithLabel() {\n        final JsonObject jsonObject = JsonFactory.newObjectBuilder().build();\n\n        ImmutablePolicyEntry.fromJson(LABEL_END_USER, jsonObject);\n    }", "signature": "void testFromJsonEmptyWithLabel()", "full_signature": "@Test(expected = DittoJsonException.class) public void testFromJsonEmptyWithLabel()", "class_method_signature": "ImmutablePolicyEntryTest.testFromJsonEmptyWithLabel()", "testcase": true, "constructor": false, "invocations": ["build", "newObjectBuilder", "fromJson"]}, "focal_class": {"identifier": "ImmutablePolicyEntry", "superclass": "", "interfaces": "implements PolicyEntry", "fields": [{"original_string": "private final Label label;", "modifier": "private final", "type": "Label", "declarator": "label", "var_name": "label"}, {"original_string": "private final Subjects subjects;", "modifier": "private final", "type": "Subjects", "declarator": "subjects", "var_name": "subjects"}, {"original_string": "private final Resources resources;", "modifier": "private final", "type": "Resources", "declarator": "resources", "var_name": "resources"}], "methods": [{"identifier": "ImmutablePolicyEntry", "parameters": "(final Label theLabel, final Subjects theSubjects, final Resources theResources)", "modifiers": "private", "return": "", "signature": " ImmutablePolicyEntry(final Label theLabel, final Subjects theSubjects, final Resources theResources)", "full_signature": "private  ImmutablePolicyEntry(final Label theLabel, final Subjects theSubjects, final Resources theResources)", "class_method_signature": "ImmutablePolicyEntry.ImmutablePolicyEntry(final Label theLabel, final Subjects theSubjects, final Resources theResources)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Label label, final Subjects subjects, final Resources resources)", "modifiers": "public static", "return": "PolicyEntry", "signature": "PolicyEntry of(final Label label, final Subjects subjects, final Resources resources)", "full_signature": "public static PolicyEntry of(final Label label, final Subjects subjects, final Resources resources)", "class_method_signature": "ImmutablePolicyEntry.of(final Label label, final Subjects subjects, final Resources resources)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final CharSequence label, final JsonObject jsonObject)", "modifiers": "public static", "return": "PolicyEntry", "signature": "PolicyEntry fromJson(final CharSequence label, final JsonObject jsonObject)", "full_signature": "public static PolicyEntry fromJson(final CharSequence label, final JsonObject jsonObject)", "class_method_signature": "ImmutablePolicyEntry.fromJson(final CharSequence label, final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "@Override public", "return": "Label", "signature": "Label getLabel()", "full_signature": "@Override public Label getLabel()", "class_method_signature": "ImmutablePolicyEntry.getLabel()", "testcase": false, "constructor": false}, {"identifier": "getSubjects", "parameters": "()", "modifiers": "@Override public", "return": "Subjects", "signature": "Subjects getSubjects()", "full_signature": "@Override public Subjects getSubjects()", "class_method_signature": "ImmutablePolicyEntry.getSubjects()", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "()", "modifiers": "@Override public", "return": "Resources", "signature": "Resources getResources()", "full_signature": "@Override public Resources getResources()", "class_method_signature": "ImmutablePolicyEntry.getResources()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutablePolicyEntry.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutablePolicyEntry.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutablePolicyEntry.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutablePolicyEntry.toString()", "testcase": false, "constructor": false}], "file": "model/policies/src/main/java/org/eclipse/ditto/model/policies/ImmutablePolicyEntry.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final CharSequence label, final JsonObject jsonObject)", "modifiers": "public static", "return": "PolicyEntry", "body": "public static PolicyEntry fromJson(final CharSequence label, final JsonObject jsonObject) {\n        checkNotNull(jsonObject, \"JSON object\");\n        final Label lbl = Label.of(label);\n\n        try {\n            final JsonObject subjectsJsonObject = jsonObject.getValueOrThrow(JsonFields.SUBJECTS);\n            final Subjects subjectsFromJson = PoliciesModelFactory.newSubjects(subjectsJsonObject);\n            final JsonObject resourcesJsonObject = jsonObject.getValueOrThrow(JsonFields.RESOURCES);\n            final Resources resourcesFromJson = PoliciesModelFactory.newResources(resourcesJsonObject);\n\n            return of(lbl, subjectsFromJson, resourcesFromJson);\n        } catch (final JsonMissingFieldException e) {\n            throw new DittoJsonException(e);\n        }\n    }", "signature": "PolicyEntry fromJson(final CharSequence label, final JsonObject jsonObject)", "full_signature": "public static PolicyEntry fromJson(final CharSequence label, final JsonObject jsonObject)", "class_method_signature": "ImmutablePolicyEntry.fromJson(final CharSequence label, final JsonObject jsonObject)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "of", "getValueOrThrow", "newSubjects", "getValueOrThrow", "newResources", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}