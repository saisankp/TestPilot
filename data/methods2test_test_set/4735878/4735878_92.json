{"test_class": {"identifier": "GeometryCleanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public WKTReader wKTReader = new WKTReader();", "modifier": "public", "type": "WKTReader", "declarator": "wKTReader = new WKTReader()", "var_name": "wKTReader"}], "file": "bundles/map-editor/src/test/java/org/orbisgis/mapeditor/map/geometryUtils/GeometryCleanTest.java"}, "test_case": {"identifier": "testRemoveDuplicateCoordinates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testRemoveDuplicateCoordinates() throws Exception {\n\n                //Test linestring\n                Geometry geom = wKTReader.read(\"LINESTRING(0 8, 1 8 , 3 8,  8  8, 10 8, 20 8)\");\n                Geometry result = GeometryClean.removeDuplicateCoordinates(geom);\n                assertEquals(result.getCoordinates().length, 6);\n\n\n                //Test duplicate coordinates\n                geom = wKTReader.read(\"LINESTRING(0 8, 1 8 ,1 8, 3 8,  8  8, 10 8, 10 8, 20 8, 0 8)\");\n                result = GeometryClean.removeDuplicateCoordinates(geom);\n                assertEquals(result.getCoordinates().length, 7);\n\n                //Test point\n                geom = wKTReader.read(\"POINT(0 8)\");\n                result = GeometryClean.removeDuplicateCoordinates(geom);\n                assertEquals(result.getCoordinates().length, 1);\n\n                //Test multipoint\n                geom = wKTReader.read(\"MULTIPOINT((0 8), (1 8))\");\n                result = GeometryClean.removeDuplicateCoordinates(geom);\n                assertEquals(result.getCoordinates().length, 2);\n\n                //Test polygon with hole\n                geom = wKTReader.read(\"POLYGON (( 0 0, 10 0, 10 10 , 0 10, 0 0), (2 2, 7 2, 7 2, 7 7, 2 7, 2 2))\");\n                result = GeometryClean.removeDuplicateCoordinates(geom);\n                assertEquals(result.getCoordinates().length, 10);\n        }", "signature": "void testRemoveDuplicateCoordinates()", "full_signature": "@Test public void testRemoveDuplicateCoordinates()", "class_method_signature": "GeometryCleanTest.testRemoveDuplicateCoordinates()", "testcase": true, "constructor": false, "invocations": ["read", "removeDuplicateCoordinates", "assertEquals", "getCoordinates", "read", "removeDuplicateCoordinates", "assertEquals", "getCoordinates", "read", "removeDuplicateCoordinates", "assertEquals", "getCoordinates", "read", "removeDuplicateCoordinates", "assertEquals", "getCoordinates", "read", "removeDuplicateCoordinates", "assertEquals", "getCoordinates"]}, "focal_class": {"identifier": "GeometryClean", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final GeometryFactory FACTORY = new GeometryFactory();", "modifier": "private static final", "type": "GeometryFactory", "declarator": "FACTORY = new GeometryFactory()", "var_name": "FACTORY"}], "methods": [{"identifier": "makeGoodShapePolygon", "parameters": "(Polygon p)", "modifiers": "public static", "return": "Polygon", "signature": "Polygon makeGoodShapePolygon(Polygon p)", "full_signature": "public static Polygon makeGoodShapePolygon(Polygon p)", "class_method_signature": "GeometryClean.makeGoodShapePolygon(Polygon p)", "testcase": false, "constructor": false}, {"identifier": "makeGoodShapeMultiPolygon", "parameters": "(MultiPolygon mp)", "modifiers": "public static", "return": "MultiPolygon", "signature": "MultiPolygon makeGoodShapeMultiPolygon(MultiPolygon mp)", "full_signature": "public static MultiPolygon makeGoodShapeMultiPolygon(MultiPolygon mp)", "class_method_signature": "GeometryClean.makeGoodShapeMultiPolygon(MultiPolygon mp)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(Geometry geom)", "modifiers": "public static", "return": "Geometry", "signature": "Geometry removeDuplicateCoordinates(Geometry geom)", "full_signature": "public static Geometry removeDuplicateCoordinates(Geometry geom)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(Geometry geom)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(LineString g)", "modifiers": "public static", "return": "LineString", "signature": "LineString removeDuplicateCoordinates(LineString g)", "full_signature": "public static LineString removeDuplicateCoordinates(LineString g)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(LineString g)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(LinearRing g)", "modifiers": "public static", "return": "LinearRing", "signature": "LinearRing removeDuplicateCoordinates(LinearRing g)", "full_signature": "public static LinearRing removeDuplicateCoordinates(LinearRing g)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(LinearRing g)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(MultiLineString g)", "modifiers": "public static", "return": "MultiLineString", "signature": "MultiLineString removeDuplicateCoordinates(MultiLineString g)", "full_signature": "public static MultiLineString removeDuplicateCoordinates(MultiLineString g)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(MultiLineString g)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(Polygon poly)", "modifiers": "public static", "return": "Polygon", "signature": "Polygon removeDuplicateCoordinates(Polygon poly)", "full_signature": "public static Polygon removeDuplicateCoordinates(Polygon poly)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(Polygon poly)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(MultiPolygon g)", "modifiers": "public static", "return": "MultiPolygon", "signature": "MultiPolygon removeDuplicateCoordinates(MultiPolygon g)", "full_signature": "public static MultiPolygon removeDuplicateCoordinates(MultiPolygon g)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(MultiPolygon g)", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateCoordinates", "parameters": "(GeometryCollection g)", "modifiers": "public static", "return": "GeometryCollection", "signature": "GeometryCollection removeDuplicateCoordinates(GeometryCollection g)", "full_signature": "public static GeometryCollection removeDuplicateCoordinates(GeometryCollection g)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(GeometryCollection g)", "testcase": false, "constructor": false}, {"identifier": "GeometryClean", "parameters": "()", "modifiers": "private", "return": "", "signature": " GeometryClean()", "full_signature": "private  GeometryClean()", "class_method_signature": "GeometryClean.GeometryClean()", "testcase": false, "constructor": true}], "file": "bundles/map-editor/src/main/java/org/orbisgis/mapeditor/map/geometryUtils/GeometryClean.java"}, "focal_method": {"identifier": "removeDuplicateCoordinates", "parameters": "(Geometry geom)", "modifiers": "public static", "return": "Geometry", "body": "public static Geometry removeDuplicateCoordinates(Geometry geom) {\n                if (geom.isEmpty()) {\n                        return geom;\n                } else if (geom instanceof Point || geom instanceof MultiPoint) {\n                        return geom;\n                } else if (geom instanceof LineString) {\n                        return removeDuplicateCoordinates((LineString) geom);\n                } else if (geom instanceof Polygon) {\n                        return removeDuplicateCoordinates((Polygon) geom);\n                } else if (geom instanceof GeometryCollection) {\n                        return removeDuplicateCoordinates((GeometryCollection) geom);\n                }\n                return null;\n        }", "signature": "Geometry removeDuplicateCoordinates(Geometry geom)", "full_signature": "public static Geometry removeDuplicateCoordinates(Geometry geom)", "class_method_signature": "GeometryClean.removeDuplicateCoordinates(Geometry geom)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "removeDuplicateCoordinates", "removeDuplicateCoordinates", "removeDuplicateCoordinates"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}