{"test_class": {"identifier": "ProxyFactoryBaseTest", "superclass": "", "interfaces": "", "fields": [], "file": "actors-library/src/test/java/com/truecaller/androidactors/ProxyFactoryBaseTest.java"}, "test_case": {"identifier": "listenerContainerTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listenerContainerTest() {\n        ProxyFactoryBase factoryBase = Mockito.mock(ProxyFactoryBase.class, Mockito.CALLS_REAL_METHODS);\n        ResultListener proxy = factoryBase.defaultProxy(ResultListener.class, Mockito.mock(MessageSender.class));\n        Assert.assertNotNull(proxy);\n        Assert.assertTrue(proxy instanceof ResultListenerProxy);\n    }", "signature": "void listenerContainerTest()", "full_signature": "@Test public void listenerContainerTest()", "class_method_signature": "ProxyFactoryBaseTest.listenerContainerTest()", "testcase": true, "constructor": false, "invocations": ["mock", "defaultProxy", "mock", "assertNotNull", "assertTrue"]}, "focal_class": {"identifier": "ProxyFactoryBase", "superclass": "", "interfaces": "implements ProxyFactory", "fields": [], "methods": [{"identifier": "ProxyFactoryBase", "parameters": "()", "modifiers": "protected", "return": "", "signature": " ProxyFactoryBase()", "full_signature": "protected  ProxyFactoryBase()", "class_method_signature": "ProxyFactoryBase.ProxyFactoryBase()", "testcase": false, "constructor": true}, {"identifier": "defaultProxy", "parameters": "(@NonNull Class<T> cls, @NonNull MessageSender sender)", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull protected", "return": "T", "signature": "T defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull protected T defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "class_method_signature": "ProxyFactoryBase.defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/ProxyFactoryBase.java"}, "focal_method": {"identifier": "defaultProxy", "parameters": "(@NonNull Class<T> cls, @NonNull MessageSender sender)", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull protected", "return": "T", "body": "@SuppressWarnings(\"unchecked\")\n    @NonNull\n    protected <T> T defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender) {\n        if (ResultListener.class.equals(cls)) {\n            return (T) new ResultListenerProxy(sender);\n        }\n\n        throw new IllegalArgumentException(\"Proxy for class \" + cls.getCanonicalName() + \" was not generated. \" +\n                \"Did you forget to annotate interface by @ActorInterface annotation?\");\n    }", "signature": "T defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull protected T defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "class_method_signature": "ProxyFactoryBase.defaultProxy(@NonNull Class<T> cls, @NonNull MessageSender sender)", "testcase": false, "constructor": false, "invocations": ["equals", "getCanonicalName"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}