{"test_class": {"identifier": "KieModuleMetaDataImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "kie-ci/src/test/java/org/kie/scanner/KieModuleMetaDataImplTest.java"}, "test_case": {"identifier": "testIsProcessFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsProcessFile() {\n        assertTrue(KieModuleMetaDataImpl.isProcessFile(\"abc.bpmn\"));\n        assertTrue(KieModuleMetaDataImpl.isProcessFile(\"abc.bpmn2\"));\n        assertTrue(KieModuleMetaDataImpl.isProcessFile(\"abc.bpmn-cm\"));\n        assertFalse(KieModuleMetaDataImpl.isProcessFile(\"abc.bpmn2-cm\"));\n    }", "signature": "void testIsProcessFile()", "full_signature": "@Test public void testIsProcessFile()", "class_method_signature": "KieModuleMetaDataImplTest.testIsProcessFile()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isProcessFile", "assertTrue", "isProcessFile", "assertTrue", "isProcessFile", "assertFalse", "isProcessFile"]}, "focal_class": {"identifier": "KieModuleMetaDataImpl", "superclass": "", "interfaces": "implements KieModuleMetaData", "fields": [{"original_string": "private final Map<String, Collection<String>> classes = new HashMap<>();", "modifier": "private final", "type": "Map<String, Collection<String>>", "declarator": "classes = new HashMap<>()", "var_name": "classes"}, {"original_string": "private final Map<String, String> processes = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "processes = new HashMap<>()", "var_name": "processes"}, {"original_string": "private final Map<String, String> forms = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "forms = new HashMap<>()", "var_name": "forms"}, {"original_string": "private final Map<URI, File> jars = new HashMap<>();", "modifier": "private final", "type": "Map<URI, File>", "declarator": "jars = new HashMap<>()", "var_name": "jars"}, {"original_string": "private final Map<String, TypeMetaInfo> typeMetaInfos = new HashMap<>();", "modifier": "private final", "type": "Map<String, TypeMetaInfo>", "declarator": "typeMetaInfos = new HashMap<>()", "var_name": "typeMetaInfos"}, {"original_string": "private final Map<String, Set<String>> rulesByPackage = new HashMap<>();", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "rulesByPackage = new HashMap<>()", "var_name": "rulesByPackage"}, {"original_string": "private final Set<String> packages = new HashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "packages = new HashSet<>()", "var_name": "packages"}, {"original_string": "private final DependencyFilter dependencyFilter;", "modifier": "private final", "type": "DependencyFilter", "declarator": "dependencyFilter", "var_name": "dependencyFilter"}, {"original_string": "private ProjectClassLoader classLoader;", "modifier": "private", "type": "ProjectClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "private AFReleaseId releaseId;", "modifier": "private", "type": "AFReleaseId", "declarator": "releaseId", "var_name": "releaseId"}, {"original_string": "private InternalKieModule kieModule;", "modifier": "private", "type": "InternalKieModule", "declarator": "kieModule", "var_name": "kieModule"}], "methods": [{"identifier": "KieModuleMetaDataImpl", "parameters": "(AFReleaseId releaseId, DependencyFilter dependencyFilter)", "modifiers": "public", "return": "", "signature": " KieModuleMetaDataImpl(AFReleaseId releaseId, DependencyFilter dependencyFilter)", "full_signature": "public  KieModuleMetaDataImpl(AFReleaseId releaseId, DependencyFilter dependencyFilter)", "class_method_signature": "KieModuleMetaDataImpl.KieModuleMetaDataImpl(AFReleaseId releaseId, DependencyFilter dependencyFilter)", "testcase": false, "constructor": true}, {"identifier": "KieModuleMetaDataImpl", "parameters": "(File pomFile, DependencyFilter dependencyFilter)", "modifiers": "public", "return": "", "signature": " KieModuleMetaDataImpl(File pomFile, DependencyFilter dependencyFilter)", "full_signature": "public  KieModuleMetaDataImpl(File pomFile, DependencyFilter dependencyFilter)", "class_method_signature": "KieModuleMetaDataImpl.KieModuleMetaDataImpl(File pomFile, DependencyFilter dependencyFilter)", "testcase": false, "constructor": true}, {"identifier": "KieModuleMetaDataImpl", "parameters": "(InternalKieModule kieModule, DependencyFilter dependencyFilter)", "modifiers": "public", "return": "", "signature": " KieModuleMetaDataImpl(InternalKieModule kieModule, DependencyFilter dependencyFilter)", "full_signature": "public  KieModuleMetaDataImpl(InternalKieModule kieModule, DependencyFilter dependencyFilter)", "class_method_signature": "KieModuleMetaDataImpl.KieModuleMetaDataImpl(InternalKieModule kieModule, DependencyFilter dependencyFilter)", "testcase": false, "constructor": true}, {"identifier": "KieModuleMetaDataImpl", "parameters": "( InternalKieModule kieModule, List<URI> dependencies )", "modifiers": "public", "return": "", "signature": " KieModuleMetaDataImpl( InternalKieModule kieModule, List<URI> dependencies )", "full_signature": "public  KieModuleMetaDataImpl( InternalKieModule kieModule, List<URI> dependencies )", "class_method_signature": "KieModuleMetaDataImpl.KieModuleMetaDataImpl( InternalKieModule kieModule, List<URI> dependencies )", "testcase": false, "constructor": true}, {"identifier": "indexKieModule", "parameters": "( InternalKieModule kieModule )", "modifiers": "private", "return": "void", "signature": "void indexKieModule( InternalKieModule kieModule )", "full_signature": "private void indexKieModule( InternalKieModule kieModule )", "class_method_signature": "KieModuleMetaDataImpl.indexKieModule( InternalKieModule kieModule )", "testcase": false, "constructor": false}, {"identifier": "getPackages", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getPackages()", "full_signature": "public Collection<String> getPackages()", "class_method_signature": "KieModuleMetaDataImpl.getPackages()", "testcase": false, "constructor": false}, {"identifier": "getClasses", "parameters": "(String packageName)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getClasses(String packageName)", "full_signature": "public Collection<String> getClasses(String packageName)", "class_method_signature": "KieModuleMetaDataImpl.getClasses(String packageName)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String pkgName, String className)", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> getClass(String pkgName, String className)", "full_signature": "public Class<?> getClass(String pkgName, String className)", "class_method_signature": "KieModuleMetaDataImpl.getClass(String pkgName, String className)", "testcase": false, "constructor": false}, {"identifier": "getTypeMetaInfo", "parameters": "(Class<?> clazz)", "modifiers": "public", "return": "TypeMetaInfo", "signature": "TypeMetaInfo getTypeMetaInfo(Class<?> clazz)", "full_signature": "public TypeMetaInfo getTypeMetaInfo(Class<?> clazz)", "class_method_signature": "KieModuleMetaDataImpl.getTypeMetaInfo(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getRuleNamesInPackage", "parameters": "(String packageName)", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getRuleNamesInPackage(String packageName)", "full_signature": "@Override public Collection<String> getRuleNamesInPackage(String packageName)", "class_method_signature": "KieModuleMetaDataImpl.getRuleNamesInPackage(String packageName)", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "public ClassLoader getClassLoader()", "class_method_signature": "KieModuleMetaDataImpl.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(ArtifactResolver artifactResolver)", "modifiers": "private", "return": "void", "signature": "void init(ArtifactResolver artifactResolver)", "full_signature": "private void init(ArtifactResolver artifactResolver)", "class_method_signature": "KieModuleMetaDataImpl.init(ArtifactResolver artifactResolver)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(List<URI> dependencies)", "modifiers": "private", "return": "void", "signature": "void init(List<URI> dependencies)", "full_signature": "private void init(List<URI> dependencies)", "class_method_signature": "KieModuleMetaDataImpl.init(List<URI> dependencies)", "testcase": false, "constructor": false}, {"identifier": "addArtifact", "parameters": "(Artifact artifact)", "modifiers": "private", "return": "void", "signature": "void addArtifact(Artifact artifact)", "full_signature": "private void addArtifact(Artifact artifact)", "class_method_signature": "KieModuleMetaDataImpl.addArtifact(Artifact artifact)", "testcase": false, "constructor": false}, {"identifier": "addJar", "parameters": "( File jarFile, URI uri )", "modifiers": "private", "return": "void", "signature": "void addJar( File jarFile, URI uri )", "full_signature": "private void addJar( File jarFile, URI uri )", "class_method_signature": "KieModuleMetaDataImpl.addJar( File jarFile, URI uri )", "testcase": false, "constructor": false}, {"identifier": "scanJar", "parameters": "(File jarFile)", "modifiers": "private", "return": "void", "signature": "void scanJar(File jarFile)", "full_signature": "private void scanJar(File jarFile)", "class_method_signature": "KieModuleMetaDataImpl.scanJar(File jarFile)", "testcase": false, "constructor": false}, {"identifier": "indexClass", "parameters": "(String pathName)", "modifiers": "private", "return": "boolean", "signature": "boolean indexClass(String pathName)", "full_signature": "private boolean indexClass(String pathName)", "class_method_signature": "KieModuleMetaDataImpl.indexClass(String pathName)", "testcase": false, "constructor": false}, {"identifier": "indexMetaInfo", "parameters": "(byte[] bytes)", "modifiers": "private", "return": "void", "signature": "void indexMetaInfo(byte[] bytes)", "full_signature": "private void indexMetaInfo(byte[] bytes)", "class_method_signature": "KieModuleMetaDataImpl.indexMetaInfo(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "getProcesses", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getProcesses()", "full_signature": "@Override public Map<String, String> getProcesses()", "class_method_signature": "KieModuleMetaDataImpl.getProcesses()", "testcase": false, "constructor": false}, {"identifier": "getForms", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getForms()", "full_signature": "@Override public Map<String, String> getForms()", "class_method_signature": "KieModuleMetaDataImpl.getForms()", "testcase": false, "constructor": false}, {"identifier": "isFormFile", "parameters": "(final String pathName)", "modifiers": "static", "return": "boolean", "signature": "boolean isFormFile(final String pathName)", "full_signature": "static boolean isFormFile(final String pathName)", "class_method_signature": "KieModuleMetaDataImpl.isFormFile(final String pathName)", "testcase": false, "constructor": false}, {"identifier": "isProcessFile", "parameters": "(final String pathName)", "modifiers": "static", "return": "boolean", "signature": "boolean isProcessFile(final String pathName)", "full_signature": "static boolean isProcessFile(final String pathName)", "class_method_signature": "KieModuleMetaDataImpl.isProcessFile(final String pathName)", "testcase": false, "constructor": false}], "file": "kie-ci/src/main/java/org/kie/scanner/KieModuleMetaDataImpl.java"}, "focal_method": {"identifier": "isProcessFile", "parameters": "(final String pathName)", "modifiers": "static", "return": "boolean", "body": "static boolean isProcessFile(final String pathName) {\n        return pathName.endsWith(\"bpmn\") || pathName.endsWith(\"bpmn2\") || pathName.endsWith(\"bpmn-cm\");\n    }", "signature": "boolean isProcessFile(final String pathName)", "full_signature": "static boolean isProcessFile(final String pathName)", "class_method_signature": "KieModuleMetaDataImpl.isProcessFile(final String pathName)", "testcase": false, "constructor": false, "invocations": ["endsWith", "endsWith", "endsWith"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}