{"test_class": {"identifier": "SocketAddressTemplateTest", "superclass": "", "interfaces": "", "fields": [], "file": "cocaine-client/src/test/java/cocaine/msgpack/SocketAddressTemplateTest.java"}, "test_case": {"identifier": "read", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void read() throws IOException {\n        String host = \"localhost\";\n        int port = 3456;\n\n        MessagePack pack = new MessagePack();\n        byte[] bytes = pack.write(Arrays.asList(host, port));\n\n        SocketAddress result = pack.read(bytes, SocketAddressTemplate.getInstance());\n\n        Assert.assertThat(result, new IsInstanceOf(InetSocketAddress.class));\n        Assert.assertEquals(host, ((InetSocketAddress) result).getHostName());\n        Assert.assertEquals(port, ((InetSocketAddress) result).getPort());\n    }", "signature": "void read()", "full_signature": "@Test public void read()", "class_method_signature": "SocketAddressTemplateTest.read()", "testcase": true, "constructor": false, "invocations": ["write", "asList", "read", "getInstance", "assertThat", "assertEquals", "getHostName", "assertEquals", "getPort"]}, "focal_class": {"identifier": "SocketAddressTemplate", "superclass": "extends AbstractTemplate<SocketAddress>", "interfaces": "", "fields": [{"original_string": "private static final Template<SocketAddress> instance = new SocketAddressTemplate();", "modifier": "private static final", "type": "Template<SocketAddress>", "declarator": "instance = new SocketAddressTemplate()", "var_name": "instance"}], "methods": [{"identifier": "SocketAddressTemplate", "parameters": "()", "modifiers": "private", "return": "", "signature": " SocketAddressTemplate()", "full_signature": "private  SocketAddressTemplate()", "class_method_signature": "SocketAddressTemplate.SocketAddressTemplate()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Template<SocketAddress>", "signature": "Template<SocketAddress> getInstance()", "full_signature": "public static Template<SocketAddress> getInstance()", "class_method_signature": "SocketAddressTemplate.getInstance()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Packer packer, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "void", "signature": "void write(Packer packer, SocketAddress endpoint, boolean required)", "full_signature": "@Override public void write(Packer packer, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.write(Packer packer, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Unpacker unpacker, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "SocketAddress", "signature": "SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "full_signature": "@Override public SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false}], "file": "cocaine-client/src/main/java/cocaine/msgpack/SocketAddressTemplate.java"}, "focal_method": {"identifier": "read", "parameters": "(Unpacker unpacker, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "SocketAddress", "body": "@Override\n    public SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required) throws IOException {\n        unpacker.readArrayBegin();\n        String host = unpacker.readString();\n        int port = unpacker.readInt();\n        unpacker.readArrayEnd();\n\n        return new InetSocketAddress(host, port);\n    }", "signature": "SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "full_signature": "@Override public SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false, "invocations": ["readArrayBegin", "readString", "readInt", "readArrayEnd"]}, "repository": {"repo_id": 5264970, "url": "https://github.com/cocaine/cocaine-framework-java", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 22, "size": 567, "license": "licensed"}}