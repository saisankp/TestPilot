{"test_class": {"identifier": "MetadataSyncPostProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private EmailService emailService;", "modifier": "@Mock\n    private", "type": "EmailService", "declarator": "emailService", "var_name": "emailService"}, {"original_string": "@Mock\n    private MetadataRetryContext metadataRetryContext;", "modifier": "@Mock\n    private", "type": "MetadataRetryContext", "declarator": "metadataRetryContext", "var_name": "metadataRetryContext"}, {"original_string": "@InjectMocks\n    private MetadataSyncPostProcessor metadataSyncPostProcessor;", "modifier": "@InjectMocks\n    private", "type": "MetadataSyncPostProcessor", "declarator": "metadataSyncPostProcessor", "var_name": "metadataSyncPostProcessor"}, {"original_string": "private MetadataVersion dataVersion;", "modifier": "private", "type": "MetadataVersion", "declarator": "dataVersion", "var_name": "dataVersion"}, {"original_string": "private MetadataSyncSummary metadataSyncSummary;", "modifier": "private", "type": "MetadataSyncSummary", "declarator": "metadataSyncSummary", "var_name": "metadataSyncSummary"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncPostProcessorTest.java"}, "test_case": {"identifier": "testShouldSendEmailToAdminWithProperSubjectAndBody", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldSendEmailToAdminWithProperSubjectAndBody()\n    {\n        ImportReport importReport = mock( ImportReport.class );\n\n        metadataSyncSummary.setImportReport( importReport );\n        metadataSyncSummary.getImportReport().setStatus( Status.OK );\n        metadataSyncSummary.setMetadataVersion( dataVersion );\n        MetadataRetryContext mockRetryContext = mock( MetadataRetryContext.class );\n\n        boolean status = metadataSyncPostProcessor.handleSyncNotificationsAndAbortStatus( metadataSyncSummary, mockRetryContext, dataVersion );\n\n        assertFalse( status );\n    }", "signature": "void testShouldSendEmailToAdminWithProperSubjectAndBody()", "full_signature": "@Test public void testShouldSendEmailToAdminWithProperSubjectAndBody()", "class_method_signature": "MetadataSyncPostProcessorTest.testShouldSendEmailToAdminWithProperSubjectAndBody()", "testcase": true, "constructor": false, "invocations": ["mock", "setImportReport", "setStatus", "getImportReport", "setMetadataVersion", "mock", "handleSyncNotificationsAndAbortStatus", "assertFalse"]}, "focal_class": {"identifier": "MetadataSyncPostProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private EmailService emailService;", "modifier": "@Autowired\n    private", "type": "EmailService", "declarator": "emailService", "var_name": "emailService"}], "methods": [{"identifier": "handleSyncNotificationsAndAbortStatus", "parameters": "( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "modifiers": "public", "return": "boolean", "signature": "boolean handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "full_signature": "public boolean handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "class_method_signature": "MetadataSyncPostProcessor.handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "testcase": false, "constructor": false}, {"identifier": "handleVersionAlreadyExists", "parameters": "( MetadataRetryContext retryContext, MetadataVersion dataVersion )", "modifiers": "public", "return": "void", "signature": "void handleVersionAlreadyExists( MetadataRetryContext retryContext, MetadataVersion dataVersion )", "full_signature": "public void handleVersionAlreadyExists( MetadataRetryContext retryContext, MetadataVersion dataVersion )", "class_method_signature": "MetadataSyncPostProcessor.handleVersionAlreadyExists( MetadataRetryContext retryContext, MetadataVersion dataVersion )", "testcase": false, "constructor": false}, {"identifier": "handleImportFailedContext", "parameters": "( MetadataSyncSummary metadataSyncSummary, MetadataRetryContext retryContext, MetadataVersion dataVersion )", "modifiers": "private", "return": "void", "signature": "void handleImportFailedContext( MetadataSyncSummary metadataSyncSummary, MetadataRetryContext retryContext, MetadataVersion dataVersion )", "full_signature": "private void handleImportFailedContext( MetadataSyncSummary metadataSyncSummary, MetadataRetryContext retryContext, MetadataVersion dataVersion )", "class_method_signature": "MetadataSyncPostProcessor.handleImportFailedContext( MetadataSyncSummary metadataSyncSummary, MetadataRetryContext retryContext, MetadataVersion dataVersion )", "testcase": false, "constructor": false}, {"identifier": "sendSuccessMailToAdmin", "parameters": "( MetadataSyncSummary metadataSyncSummary )", "modifiers": "public", "return": "void", "signature": "void sendSuccessMailToAdmin( MetadataSyncSummary metadataSyncSummary )", "full_signature": "public void sendSuccessMailToAdmin( MetadataSyncSummary metadataSyncSummary )", "class_method_signature": "MetadataSyncPostProcessor.sendSuccessMailToAdmin( MetadataSyncSummary metadataSyncSummary )", "testcase": false, "constructor": false}, {"identifier": "sendFailureMailToAdmin", "parameters": "( MetadataRetryContext retryContext )", "modifiers": "public", "return": "void", "signature": "void sendFailureMailToAdmin( MetadataRetryContext retryContext )", "full_signature": "public void sendFailureMailToAdmin( MetadataRetryContext retryContext )", "class_method_signature": "MetadataSyncPostProcessor.sendFailureMailToAdmin( MetadataRetryContext retryContext )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncPostProcessor.java"}, "focal_method": {"identifier": "handleSyncNotificationsAndAbortStatus", "parameters": "( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "modifiers": "public", "return": "boolean", "body": "public boolean handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )\n    {\n        ImportReport importReport = metadataSyncSummary.getImportReport();\n\n        if ( importReport == null )\n        {\n            handleImportFailedContext( null, retryContext, dataVersion );\n\n            return true;\n        }\n\n        Status syncStatus = importReport.getStatus();\n        log.info( \"Import completed. Import Status: \" + syncStatus );\n\n        if ( Status.OK.equals( syncStatus ) || ( Status.WARNING.equals( syncStatus ) && VersionType.BEST_EFFORT.equals( dataVersion.getType() ) ) )\n        {\n            sendSuccessMailToAdmin( metadataSyncSummary );\n            return false;\n        }\n\n        if ( Status.ERROR.equals( syncStatus ) )\n        {\n            handleImportFailedContext( metadataSyncSummary, retryContext, dataVersion );\n            return true;\n        }\n\n        return false;\n    }", "signature": "boolean handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "full_signature": "public boolean handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "class_method_signature": "MetadataSyncPostProcessor.handleSyncNotificationsAndAbortStatus( MetadataSyncSummary metadataSyncSummary, \n        MetadataRetryContext retryContext, MetadataVersion dataVersion )", "testcase": false, "constructor": false, "invocations": ["getImportReport", "handleImportFailedContext", "getStatus", "info", "equals", "equals", "equals", "getType", "sendSuccessMailToAdmin", "equals", "handleImportFailedContext"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}