{"test_class": {"identifier": "PeriodicTablePositionDescriptorTest", "superclass": "extends AtomicDescriptorTest", "interfaces": "", "fields": [], "file": "descriptor/qsaratomic/src/test/java/org/openscience/cdk/qsar/descriptors/atomic/PeriodicTablePositionDescriptorTest.java"}, "test_case": {"identifier": "testPeriodicTablePositionDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPeriodicTablePositionDescriptor() throws ClassNotFoundException, CDKException, java.lang.Exception {\n        IAtomicDescriptor descriptor = new PeriodicTablePositionDescriptor();\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer mol = sp.parseSmiles(\"CCCl\"); //\n        Assert.assertEquals(3, ((IntegerResult) descriptor.calculate(mol.getAtom(2), mol).getValue()).intValue());\n    }", "signature": "void testPeriodicTablePositionDescriptor()", "full_signature": "@Test public void testPeriodicTablePositionDescriptor()", "class_method_signature": "PeriodicTablePositionDescriptorTest.testPeriodicTablePositionDescriptor()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "assertEquals", "intValue", "getValue", "calculate", "getAtom"]}, "focal_class": {"identifier": "PeriodicTablePositionDescriptor", "superclass": "extends AbstractAtomicDescriptor", "interfaces": "implements IAtomicDescriptor", "fields": [{"original_string": "private static final String[] NAMES = {\"periodicTablePosition\"};", "modifier": "private static final", "type": "String[]", "declarator": "NAMES = {\"periodicTablePosition\"}", "var_name": "NAMES"}, {"original_string": "public Map<String, Integer>   periodicTable;", "modifier": "public", "type": "Map<String, Integer>", "declarator": "periodicTable", "var_name": "periodicTable"}], "methods": [{"identifier": "PeriodicTablePositionDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " PeriodicTablePositionDescriptor()", "full_signature": "public  PeriodicTablePositionDescriptor()", "class_method_signature": "PeriodicTablePositionDescriptor.PeriodicTablePositionDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "PeriodicTablePositionDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "PeriodicTablePositionDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "PeriodicTablePositionDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "PeriodicTablePositionDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtom atom, IAtomContainer container)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtom atom, IAtomContainer container)", "full_signature": "@Override public DescriptorValue calculate(IAtom atom, IAtomContainer container)", "class_method_signature": "PeriodicTablePositionDescriptor.calculate(IAtom atom, IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "PeriodicTablePositionDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "PeriodicTablePositionDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "descriptor/qsaratomic/src/main/java/org/openscience/cdk/qsar/descriptors/atomic/PeriodicTablePositionDescriptor.java"}, "focal_method": {"identifier": "PeriodicTablePositionDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public PeriodicTablePositionDescriptor() {\n        if (periodicTable == null) {\n            periodicTable = new Hashtable<String, Integer>();\n            periodicTable.put(\"H\", 1);\n            periodicTable.put(\"Li\", 2);\n            periodicTable.put(\"Be\", 2);\n            periodicTable.put(\"B\", 2);\n            periodicTable.put(\"C\", 2);\n            periodicTable.put(\"N\", 2);\n            periodicTable.put(\"O\", 2);\n            periodicTable.put(\"F\", 2);\n            periodicTable.put(\"Na\", 3);\n            periodicTable.put(\"Mg\", 3);\n            periodicTable.put(\"Al\", 3);\n            periodicTable.put(\"Si\", 3);\n            periodicTable.put(\"P\", 3);\n            periodicTable.put(\"S\", 3);\n            periodicTable.put(\"Cl\", 3);\n            periodicTable.put(\"K\", 4);\n            periodicTable.put(\"Ca\", 4);\n            periodicTable.put(\"Ga\", 4);\n            periodicTable.put(\"Ge\", 4);\n            periodicTable.put(\"As\", 4);\n            periodicTable.put(\"Se\", 4);\n            periodicTable.put(\"Br\", 4);\n            periodicTable.put(\"Rb\", 5);\n            periodicTable.put(\"Sr\", 5);\n            periodicTable.put(\"In\", 5);\n            periodicTable.put(\"Sn\", 5);\n            periodicTable.put(\"Sb\", 5);\n            periodicTable.put(\"Te\", 5);\n            periodicTable.put(\"I\", 5);\n            periodicTable.put(\"Cs\", 6);\n            periodicTable.put(\"Ba\", 6);\n            periodicTable.put(\"Tl\", 6);\n            periodicTable.put(\"Pb\", 6);\n            periodicTable.put(\"Bi\", 6);\n            periodicTable.put(\"Po\", 6);\n            periodicTable.put(\"At\", 6);\n            periodicTable.put(\"Fr\", 7);\n            periodicTable.put(\"Ra\", 7);\n        }\n    }", "signature": " PeriodicTablePositionDescriptor()", "full_signature": "public  PeriodicTablePositionDescriptor()", "class_method_signature": "PeriodicTablePositionDescriptor.PeriodicTablePositionDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}