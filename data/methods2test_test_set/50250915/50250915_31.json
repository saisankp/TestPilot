{"test_class": {"identifier": "BrowserAndOperatingSystemAnalyticsPropertiesTest", "superclass": "", "interfaces": "", "fields": [], "file": "blueocean-rest-impl/src/test/java/io/jenkins/blueocean/service/embedded/analytics/BrowserAndOperatingSystemAnalyticsPropertiesTest.java"}, "test_case": {"identifier": "parsesUserAgentAndCreatesPropertiesForChrome", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parsesUserAgentAndCreatesPropertiesForChrome() throws Exception {\n        BrowserAndOperatingSystemAnalyticsProperties props = setup(\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36\");\n        ImmutableMap<String, Object> actual = ImmutableMap.copyOf(props.properties(new Analytics.TrackRequest(\"bob\", null)));\n        Assert.assertEquals(6, actual.size());\n        Assert.assertEquals(\"41\", actual.get(\"browserVersionMajor\"));\n        Assert.assertEquals(\"10\", actual.get(\"osVersionMinor\"));\n        Assert.assertEquals(\"Mac OS X\", actual.get(\"osFamily\"));\n        Assert.assertEquals(\"Chrome\", actual.get(\"browserFamily\"));\n        Assert.assertEquals(\"0\", actual.get(\"browserVersionMinor\"));\n        Assert.assertEquals(\"10\", actual.get(\"osVersionMajor\"));\n    }", "signature": "void parsesUserAgentAndCreatesPropertiesForChrome()", "full_signature": "@Test public void parsesUserAgentAndCreatesPropertiesForChrome()", "class_method_signature": "BrowserAndOperatingSystemAnalyticsPropertiesTest.parsesUserAgentAndCreatesPropertiesForChrome()", "testcase": true, "constructor": false, "invocations": ["setup", "copyOf", "properties", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "BrowserAndOperatingSystemAnalyticsProperties", "superclass": "extends AdditionalAnalyticsProperties", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(BrowserAndOperatingSystemAnalyticsProperties.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(BrowserAndOperatingSystemAnalyticsProperties.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static final Parser PARSER;", "modifier": "private static final", "type": "Parser", "declarator": "PARSER", "var_name": "PARSER"}], "methods": [{"identifier": "properties", "parameters": "(TrackRequest req)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> properties(TrackRequest req)", "full_signature": "@Override public Map<String, Object> properties(TrackRequest req)", "class_method_signature": "BrowserAndOperatingSystemAnalyticsProperties.properties(TrackRequest req)", "testcase": false, "constructor": false}], "file": "blueocean-rest-impl/src/main/java/io/jenkins/blueocean/service/embedded/analytics/BrowserAndOperatingSystemAnalyticsProperties.java"}, "focal_method": {"identifier": "properties", "parameters": "(TrackRequest req)", "modifiers": "@Override public", "return": "Map<String, Object>", "body": "@Override\n    public Map<String, Object> properties(TrackRequest req) {\n        StaplerRequest httpReq = Stapler.getCurrentRequest();\n        if (PARSER == null || httpReq == null) {\n            return null;\n        }\n        String userAgent = httpReq.getHeader(\"User-Agent\");\n        if (userAgent == null) {\n            return null;\n        }\n        Client client = PARSER.parse(userAgent);\n        String browserFamily = client.userAgent.family;\n        // If we can't find the browser family then we shouldn't record anything\n        if (browserFamily == null) {\n            return null;\n        }\n        Map<String, Object> props = Maps.newHashMap();\n        props.put(\"browserFamily\", browserFamily);\n        String browserVersionMajor = client.userAgent.major;\n        // Versions are useful if they are available\n        if (isNotEmpty(browserVersionMajor)) {\n            props.put(\"browserVersionMajor\", browserVersionMajor);\n        }\n        String browserVersionMinor = client.userAgent.minor;\n        if (isNotEmpty(browserVersionMinor)) {\n            props.put(\"browserVersionMinor\", browserVersionMinor);\n        }\n        // If the operating system is available lets use that\n        String operatingSystemFamily = client.os.family;\n        if (isNotEmpty(operatingSystemFamily)) {\n            props.put(\"osFamily\", operatingSystemFamily);\n            String osVersionMajor = client.os.major;\n            if (isNotEmpty(osVersionMajor)) {\n                props.put(\"osVersionMajor\", osVersionMajor);\n            }\n            String osVersionMinor = client.os.minor;\n            if (isNotEmpty(osVersionMinor)) {\n                props.put(\"osVersionMinor\", osVersionMinor);\n            }\n        }\n        return props;\n    }", "signature": "Map<String, Object> properties(TrackRequest req)", "full_signature": "@Override public Map<String, Object> properties(TrackRequest req)", "class_method_signature": "BrowserAndOperatingSystemAnalyticsProperties.properties(TrackRequest req)", "testcase": false, "constructor": false, "invocations": ["getCurrentRequest", "getHeader", "parse", "newHashMap", "put", "isNotEmpty", "put", "isNotEmpty", "put", "isNotEmpty", "put", "isNotEmpty", "put", "isNotEmpty", "put"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}