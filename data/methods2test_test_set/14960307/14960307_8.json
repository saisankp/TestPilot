{"test_class": {"identifier": "URLTypeConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(URLTypeConverterTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(URLTypeConverterTest.class)", "var_name": "logger"}, {"original_string": "private TypeConverter pc = new URLTypeConverter();", "modifier": "private", "type": "TypeConverter", "declarator": "pc = new URLTypeConverter()", "var_name": "pc"}], "file": "ch-commons-xbean/src/test/java/com/cloudhopper/commons/xbean/type/URLTypeConverterTest.java"}, "test_case": {"identifier": "validConversions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validConversions() throws Exception {\n        pc.convert(\"http://www.google.com\");\n        pc.convert(\"http://www.google.com/yo\");\n        pc.convert(\"http://www.google.com:81/yo?id=1\");\n    }", "signature": "void validConversions()", "full_signature": "@Test public void validConversions()", "class_method_signature": "URLTypeConverterTest.validConversions()", "testcase": true, "constructor": false, "invocations": ["convert", "convert", "convert"]}, "focal_class": {"identifier": "URLTypeConverter", "superclass": "", "interfaces": "implements TypeConverter", "fields": [], "methods": [{"identifier": "convert", "parameters": "(String value)", "modifiers": "@Override public", "return": "Object", "signature": "Object convert(String value)", "full_signature": "@Override public Object convert(String value)", "class_method_signature": "URLTypeConverter.convert(String value)", "testcase": false, "constructor": false}], "file": "ch-commons-xbean/src/main/java/com/cloudhopper/commons/xbean/type/URLTypeConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object convert(String value) throws ConversionException {\n        try {\n            return new URL(value);\n        } catch (MalformedURLException e) {\n            throw new ConversionException(e.getMessage());\n        }\n    }", "signature": "Object convert(String value)", "full_signature": "@Override public Object convert(String value)", "class_method_signature": "URLTypeConverter.convert(String value)", "testcase": false, "constructor": false, "invocations": ["getMessage"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}