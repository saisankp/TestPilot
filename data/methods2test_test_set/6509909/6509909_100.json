{"test_class": {"identifier": "HaikuReviewTest", "superclass": "", "interfaces": "", "fields": [], "file": "haikuReview/20140213-zvonko-paul/src/test/java/HaikuReviewTest.java"}, "test_case": {"identifier": "testIndigestionHasFourSyllables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIndigestionHasFourSyllables() throws Exception {\n        String input = \"indigestion\";\n\n        int count = HaikuReview.getNumberOfSyllables(input);\n\n        assertThat(count).isEqualTo(4);\n    }", "signature": "void testIndigestionHasFourSyllables()", "full_signature": "@Test public void testIndigestionHasFourSyllables()", "class_method_signature": "HaikuReviewTest.testIndigestionHasFourSyllables()", "testcase": true, "constructor": false, "invocations": ["getNumberOfSyllables", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "HaikuReview", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\"", "var_name": "INPUT_ONE"}, {"original_string": "private static final String INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\"", "var_name": "INPUT_TWO"}, {"original_string": "private static final char[] VOWELS = {'a', 'e', 'i', 'o', 'u', 'y'};", "modifier": "private static final", "type": "char[]", "declarator": "VOWELS = {'a', 'e', 'i', 'o', 'u', 'y'}", "var_name": "VOWELS"}, {"original_string": "private static final int LINES_IN_HAIKU = 3;", "modifier": "private static final", "type": "int", "declarator": "LINES_IN_HAIKU = 3", "var_name": "LINES_IN_HAIKU"}, {"original_string": "private static final String HAIKU_LINE_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "HAIKU_LINE_SEPARATOR = \"/\"", "var_name": "HAIKU_LINE_SEPARATOR"}], "methods": [{"identifier": "processHaiku", "parameters": "(String haiku)", "modifiers": "public static", "return": "String", "signature": "String processHaiku(String haiku)", "full_signature": "public static String processHaiku(String haiku)", "class_method_signature": "HaikuReview.processHaiku(String haiku)", "testcase": false, "constructor": false}, {"identifier": "isValidHaikuLineLength", "parameters": "(String haiku)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidHaikuLineLength(String haiku)", "full_signature": "private static boolean isValidHaikuLineLength(String haiku)", "class_method_signature": "HaikuReview.isValidHaikuLineLength(String haiku)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfLines", "parameters": "(String input)", "modifiers": "public static", "return": "int", "signature": "int getNumberOfLines(String input)", "full_signature": "public static int getNumberOfLines(String input)", "class_method_signature": "HaikuReview.getNumberOfLines(String input)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfSyllables", "parameters": "(String input)", "modifiers": "public static", "return": "int", "signature": "int getNumberOfSyllables(String input)", "full_signature": "public static int getNumberOfSyllables(String input)", "class_method_signature": "HaikuReview.getNumberOfSyllables(String input)", "testcase": false, "constructor": false}, {"identifier": "isSyllable", "parameters": "(String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSyllable(String input)", "full_signature": "public static boolean isSyllable(String input)", "class_method_signature": "HaikuReview.isSyllable(String input)", "testcase": false, "constructor": false}, {"identifier": "isVowel", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isVowel(String s)", "full_signature": "public static boolean isVowel(String s)", "class_method_signature": "HaikuReview.isVowel(String s)", "testcase": false, "constructor": false}], "file": "haikuReview/20140213-zvonko-paul/src/main/java/HaikuReview.java"}, "focal_method": {"identifier": "getNumberOfSyllables", "parameters": "(String input)", "modifiers": "public static", "return": "int", "body": "public static int getNumberOfSyllables(String input) {\n        int count = 0;\n        boolean vowelFound = false;\n        for (char c : input.toCharArray()) {\n            if (!vowelFound && isVowel(String.valueOf(c))) {\n                count++;\n                vowelFound = true;\n            } else {\n                vowelFound = false;\n            }\n        }\n\n        return count;\n    }", "signature": "int getNumberOfSyllables(String input)", "full_signature": "public static int getNumberOfSyllables(String input)", "class_method_signature": "HaikuReview.getNumberOfSyllables(String input)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "isVowel", "valueOf"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}