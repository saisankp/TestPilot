{"test_class": {"identifier": "AesCtrHmacStreamingKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AesCtrHmacStreamingKeyManager manager = new AesCtrHmacStreamingKeyManager();", "modifier": "private final", "type": "AesCtrHmacStreamingKeyManager", "declarator": "manager = new AesCtrHmacStreamingKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<AesCtrHmacStreamingKeyFormat, AesCtrHmacStreamingKey>\n      factory = manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<AesCtrHmacStreamingKeyFormat, AesCtrHmacStreamingKey>", "declarator": "factory = manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManagerTest.java"}, "test_case": {"identifier": "testAes256CtrHmacSha2564KBTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAes256CtrHmacSha2564KBTemplate() throws Exception {\n    KeyTemplate template = AesCtrHmacStreamingKeyManager.aes256CtrHmacSha2564KBTemplate();\n    assertThat(template.getTypeUrl()).isEqualTo(new AesCtrHmacStreamingKeyManager().getKeyType());\n    assertThat(template.getOutputPrefixType()).isEqualTo(KeyTemplate.OutputPrefixType.RAW);\n    AesCtrHmacStreamingKeyFormat format =\n        AesCtrHmacStreamingKeyFormat.parseFrom(\n            template.getValue(), ExtensionRegistryLite.getEmptyRegistry());\n\n    assertThat(format.getKeySize()).isEqualTo(32);\n    assertThat(format.getParams().getDerivedKeySize()).isEqualTo(32);\n    assertThat(format.getParams().getHkdfHashType()).isEqualTo(HashType.SHA256);\n    assertThat(format.getParams().getHmacParams().getHash()).isEqualTo(HashType.SHA256);\n    assertThat(format.getParams().getHmacParams().getTagSize()).isEqualTo(32);\n    assertThat(format.getParams().getCiphertextSegmentSize()).isEqualTo(4096);\n  }", "signature": "void testAes256CtrHmacSha2564KBTemplate()", "full_signature": "@Test public void testAes256CtrHmacSha2564KBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManagerTest.testAes256CtrHmacSha2564KBTemplate()", "testcase": true, "constructor": false, "invocations": ["aes256CtrHmacSha2564KBTemplate", "isEqualTo", "assertThat", "getTypeUrl", "getKeyType", "isEqualTo", "assertThat", "getOutputPrefixType", "parseFrom", "getValue", "getEmptyRegistry", "isEqualTo", "assertThat", "getKeySize", "isEqualTo", "assertThat", "getDerivedKeySize", "getParams", "isEqualTo", "assertThat", "getHkdfHashType", "getParams", "isEqualTo", "assertThat", "getHash", "getHmacParams", "getParams", "isEqualTo", "assertThat", "getTagSize", "getHmacParams", "getParams", "isEqualTo", "assertThat", "getCiphertextSegmentSize", "getParams"]}, "focal_class": {"identifier": "AesCtrHmacStreamingKeyManager", "superclass": "extends KeyTypeManager<AesCtrHmacStreamingKey>", "interfaces": "", "fields": [{"original_string": "private static final int MIN_TAG_SIZE_IN_BYTES = 10;", "modifier": "private static final", "type": "int", "declarator": "MIN_TAG_SIZE_IN_BYTES = 10", "var_name": "MIN_TAG_SIZE_IN_BYTES"}, {"original_string": "private static final int NONCE_PREFIX_IN_BYTES = 7;", "modifier": "private static final", "type": "int", "declarator": "NONCE_PREFIX_IN_BYTES = 7", "var_name": "NONCE_PREFIX_IN_BYTES"}], "methods": [{"identifier": "AesCtrHmacStreamingKeyManager", "parameters": "()", "modifiers": "", "return": "", "signature": " AesCtrHmacStreamingKeyManager()", "full_signature": "  AesCtrHmacStreamingKeyManager()", "class_method_signature": "AesCtrHmacStreamingKeyManager.AesCtrHmacStreamingKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "AesCtrHmacStreamingKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "AesCtrHmacStreamingKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "AesCtrHmacStreamingKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(AesCtrHmacStreamingKey key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(AesCtrHmacStreamingKey key)", "full_signature": "@Override public void validateKey(AesCtrHmacStreamingKey key)", "class_method_signature": "AesCtrHmacStreamingKeyManager.validateKey(AesCtrHmacStreamingKey key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "AesCtrHmacStreamingKey", "signature": "AesCtrHmacStreamingKey parseKey(ByteString byteString)", "full_signature": "@Override public AesCtrHmacStreamingKey parseKey(ByteString byteString)", "class_method_signature": "AesCtrHmacStreamingKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<AesCtrHmacStreamingKeyFormat, AesCtrHmacStreamingKey>", "signature": "KeyFactory<AesCtrHmacStreamingKeyFormat, AesCtrHmacStreamingKey> keyFactory()", "full_signature": "@Override public KeyFactory<AesCtrHmacStreamingKeyFormat, AesCtrHmacStreamingKey> keyFactory()", "class_method_signature": "AesCtrHmacStreamingKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "validateParams", "parameters": "(AesCtrHmacStreamingParams params)", "modifiers": "private static", "return": "void", "signature": "void validateParams(AesCtrHmacStreamingParams params)", "full_signature": "private static void validateParams(AesCtrHmacStreamingParams params)", "class_method_signature": "AesCtrHmacStreamingKeyManager.validateParams(AesCtrHmacStreamingParams params)", "testcase": false, "constructor": false}, {"identifier": "validateHmacParams", "parameters": "(HmacParams params)", "modifiers": "private static", "return": "void", "signature": "void validateHmacParams(HmacParams params)", "full_signature": "private static void validateHmacParams(HmacParams params)", "class_method_signature": "AesCtrHmacStreamingKeyManager.validateHmacParams(HmacParams params)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "AesCtrHmacStreamingKeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "aes128CtrHmacSha2564KBTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes128CtrHmacSha2564KBTemplate()", "full_signature": "public static final KeyTemplate aes128CtrHmacSha2564KBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManager.aes128CtrHmacSha2564KBTemplate()", "testcase": false, "constructor": false}, {"identifier": "aes128CtrHmacSha2561MBTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes128CtrHmacSha2561MBTemplate()", "full_signature": "public static final KeyTemplate aes128CtrHmacSha2561MBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManager.aes128CtrHmacSha2561MBTemplate()", "testcase": false, "constructor": false}, {"identifier": "aes256CtrHmacSha2564KBTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes256CtrHmacSha2564KBTemplate()", "full_signature": "public static final KeyTemplate aes256CtrHmacSha2564KBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManager.aes256CtrHmacSha2564KBTemplate()", "testcase": false, "constructor": false}, {"identifier": "aes256CtrHmacSha2561MBTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes256CtrHmacSha2561MBTemplate()", "full_signature": "public static final KeyTemplate aes256CtrHmacSha2561MBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManager.aes256CtrHmacSha2561MBTemplate()", "testcase": false, "constructor": false}, {"identifier": "createKeyTemplate", "parameters": "(\n      int mainKeySize,\n      HashType hkdfHashType,\n      int derivedKeySize,\n      HashType macHashType,\n      int tagSize,\n      int ciphertextSegmentSize)", "modifiers": "private static", "return": "KeyTemplate", "signature": "KeyTemplate createKeyTemplate(\n      int mainKeySize,\n      HashType hkdfHashType,\n      int derivedKeySize,\n      HashType macHashType,\n      int tagSize,\n      int ciphertextSegmentSize)", "full_signature": "private static KeyTemplate createKeyTemplate(\n      int mainKeySize,\n      HashType hkdfHashType,\n      int derivedKeySize,\n      HashType macHashType,\n      int tagSize,\n      int ciphertextSegmentSize)", "class_method_signature": "AesCtrHmacStreamingKeyManager.createKeyTemplate(\n      int mainKeySize,\n      HashType hkdfHashType,\n      int derivedKeySize,\n      HashType macHashType,\n      int tagSize,\n      int ciphertextSegmentSize)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager.java"}, "focal_method": {"identifier": "aes256CtrHmacSha2564KBTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate aes256CtrHmacSha2564KBTemplate() {\n    return createKeyTemplate(32, HashType.SHA256, 32, HashType.SHA256, 32, 4096);\n  }", "signature": "KeyTemplate aes256CtrHmacSha2564KBTemplate()", "full_signature": "public static final KeyTemplate aes256CtrHmacSha2564KBTemplate()", "class_method_signature": "AesCtrHmacStreamingKeyManager.aes256CtrHmacSha2564KBTemplate()", "testcase": false, "constructor": false, "invocations": ["createKeyTemplate"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}