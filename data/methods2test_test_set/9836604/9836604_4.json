{"test_class": {"identifier": "EncryCredentialManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EncryCredentialManagerImpl encryCredentialManager;", "modifier": "private", "type": "EncryCredentialManagerImpl", "declarator": "encryCredentialManager", "var_name": "encryCredentialManager"}], "file": "ki4so-common/src/test/java/com/github/ebnew/ki4so/core/authentication/EncryCredentialManagerImplTest.java"}, "test_case": {"identifier": "testCheckEncryCredentialInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCheckEncryCredentialInfo() {\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u8f93\u5165\u5f02\u5e38\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tAssert.assertFalse(this.encryCredentialManager.checkEncryCredentialInfo(null));\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u51ed\u636e\u4fe1\u606f\u7684userId\u4e3a\u7a7a\u3002\n\t\t */\n\t\tEncryCredentialInfo encryCredentialInfo = new EncryCredentialInfo();\n\t\tAssert.assertFalse(this.encryCredentialManager.checkEncryCredentialInfo(encryCredentialInfo));\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u51ed\u636e\u4fe1\u606f\u7684userId\u4e0d\u4e3a\u7a7a\uff0c\u8fc7\u671f\u65f6\u95f4\u4e3a\u7a7a\u3002\n\t\t */\n\t\tString userId = \"test\";\n\t\tencryCredentialInfo = new EncryCredentialInfo();\n\t\tencryCredentialInfo.setUserId(userId);\n\t\tAssert.assertFalse(this.encryCredentialManager.checkEncryCredentialInfo(encryCredentialInfo));\n\t\t\n\t\t\n\t\t/**\n\t\t * \u6d4b\u8bd5\u51ed\u636e\u4fe1\u606f\u7684userId\u4e0d\u4e3a\u7a7a\uff0c\u8fc7\u671f\u65f6\u95f4\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662f\u51ed\u636e\u5df2\u7ecf\u8fc7\u671f\u7684\u60c5\u51b5\u3002\n\t\t */\n\t\tencryCredentialInfo.setExpiredTime(new Date());\n\t\tAssert.assertFalse(this.encryCredentialManager.checkEncryCredentialInfo(encryCredentialInfo));\n\t\t\n\t}", "signature": "void testCheckEncryCredentialInfo()", "full_signature": "@Test public void testCheckEncryCredentialInfo()", "class_method_signature": "EncryCredentialManagerImplTest.testCheckEncryCredentialInfo()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "checkEncryCredentialInfo", "assertFalse", "checkEncryCredentialInfo", "setUserId", "assertFalse", "checkEncryCredentialInfo", "setExpiredTime", "assertFalse", "checkEncryCredentialInfo"]}, "focal_class": {"identifier": "EncryCredentialManagerImpl", "superclass": "", "interfaces": "implements EncryCredentialManager", "fields": [{"original_string": "private KeyService keyService;", "modifier": "private", "type": "KeyService", "declarator": "keyService", "var_name": "keyService"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(EncryCredentialManagerImpl.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(EncryCredentialManagerImpl.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "setKeyService", "parameters": "(KeyService keyService)", "modifiers": "public", "return": "void", "signature": "void setKeyService(KeyService keyService)", "full_signature": "public void setKeyService(KeyService keyService)", "class_method_signature": "EncryCredentialManagerImpl.setKeyService(KeyService keyService)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(EncryCredential encryCredential)", "modifiers": "@Override public", "return": "EncryCredentialInfo", "signature": "EncryCredentialInfo decrypt(EncryCredential encryCredential)", "full_signature": "@Override public EncryCredentialInfo decrypt(EncryCredential encryCredential)", "class_method_signature": "EncryCredentialManagerImpl.decrypt(EncryCredential encryCredential)", "testcase": false, "constructor": false}, {"identifier": "parseEncryCredential", "parameters": "(String credential)", "modifiers": "private", "return": "EncryCredentialInfo", "signature": "EncryCredentialInfo parseEncryCredential(String credential)", "full_signature": "private EncryCredentialInfo parseEncryCredential(String credential)", "class_method_signature": "EncryCredentialManagerImpl.parseEncryCredential(String credential)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(EncryCredentialInfo encryCredentialInfo)", "modifiers": "@Override public", "return": "String", "signature": "String encrypt(EncryCredentialInfo encryCredentialInfo)", "full_signature": "@Override public String encrypt(EncryCredentialInfo encryCredentialInfo)", "class_method_signature": "EncryCredentialManagerImpl.encrypt(EncryCredentialInfo encryCredentialInfo)", "testcase": false, "constructor": false}, {"identifier": "encryptSensitiveInfo", "parameters": "(EncryCredentialInfo encryCredentialInfo)", "modifiers": "private", "return": "String", "signature": "String encryptSensitiveInfo(EncryCredentialInfo encryCredentialInfo)", "full_signature": "private String encryptSensitiveInfo(EncryCredentialInfo encryCredentialInfo)", "class_method_signature": "EncryCredentialManagerImpl.encryptSensitiveInfo(EncryCredentialInfo encryCredentialInfo)", "testcase": false, "constructor": false}, {"identifier": "checkEncryCredentialInfo", "parameters": "(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "full_signature": "@Override public boolean checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "class_method_signature": "EncryCredentialManagerImpl.checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "testcase": false, "constructor": false}, {"identifier": "getCurrentDate", "parameters": "()", "modifiers": "private", "return": "Date", "signature": "Date getCurrentDate()", "full_signature": "private Date getCurrentDate()", "class_method_signature": "EncryCredentialManagerImpl.getCurrentDate()", "testcase": false, "constructor": false}], "file": "ki4so-common/src/main/java/com/github/ebnew/ki4so/core/authentication/EncryCredentialManagerImpl.java"}, "focal_method": {"identifier": "checkEncryCredentialInfo", "parameters": "(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo) {\n\t\tif(encryCredentialInfo!=null){\n\t\t\t//\u65e0\u51ed\u636e\u5bf9\u5e94\u7684\u7528\u6237\u6807\u8bc6\uff0c\u5219\u65e0\u6548\u3002\n\t\t\tif(StringUtils.isEmpty(encryCredentialInfo.getUserId())){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tDate now = getCurrentDate();\n\t\t\tif(encryCredentialInfo.getExpiredTime()!=null){\n\t\t\t\t//\u5c06\u672a\u6765\u8fc7\u671f\u65f6\u95f4\u51cf\u53bb\u5f53\u524d\u65f6\u95f4\u3002\n\t\t\t\tlong deta = encryCredentialInfo.getExpiredTime().getTime() - now.getTime();\n\t\t\t\t//\u82e5\u5dee\u503c\u5927\u4e8e0\uff0c\u8868\u793a\u8fc7\u671f\u65f6\u95f4\u8fd8\u6ca1\u6709\u5230\uff0c\u51ed\u636e\u7ee7\u7eed\u53ef\u4ee5\u6709\u6548\u4f7f\u7528\u3002\n\t\t\t\tif(deta>0){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "full_signature": "@Override public boolean checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "class_method_signature": "EncryCredentialManagerImpl.checkEncryCredentialInfo(\n\t\t\tEncryCredentialInfo encryCredentialInfo)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getUserId", "getCurrentDate", "getExpiredTime", "getTime", "getExpiredTime", "getTime"]}, "repository": {"repo_id": 9836604, "url": "https://github.com/ebnew/ki4so", "language": "Java", "is_fork": false, "fork_count": 84, "stargazer_count": 100, "size": 4421, "license": "licensed"}}