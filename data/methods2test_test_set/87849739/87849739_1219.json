{"test_class": {"identifier": "ImmutableAclEntryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AuthorizationSubject KNOWN_AUTH_SUBJECT = AuthorizationSubject.newInstance(\"antman\");", "modifier": "private static final", "type": "AuthorizationSubject", "declarator": "KNOWN_AUTH_SUBJECT = AuthorizationSubject.newInstance(\"antman\")", "var_name": "KNOWN_AUTH_SUBJECT"}], "file": "model/things/src/test/java/org/eclipse/ditto/model/things/ImmutableAclEntryTest.java"}, "test_case": {"identifier": "tryToCreateInstanceFromEmptyJsonObject", "parameters": "()", "modifiers": "@Test(expected = DittoJsonException.class) public", "return": "void", "body": "@Test(expected = DittoJsonException.class)\n    public void tryToCreateInstanceFromEmptyJsonObject() {\n        ImmutableAclEntry.fromJson(JsonFactory.newObject());\n    }", "signature": "void tryToCreateInstanceFromEmptyJsonObject()", "full_signature": "@Test(expected = DittoJsonException.class) public void tryToCreateInstanceFromEmptyJsonObject()", "class_method_signature": "ImmutableAclEntryTest.tryToCreateInstanceFromEmptyJsonObject()", "testcase": true, "constructor": false, "invocations": ["fromJson", "newObject"]}, "focal_class": {"identifier": "ImmutableAclEntry", "superclass": "", "interfaces": "implements AclEntry", "fields": [{"original_string": "private static final JsonFieldDefinition<Integer> JSON_SCHEMA_VERSION =\n            JsonFactory.newIntFieldDefinition(JsonSchemaVersion.getJsonKey(), FieldType.SPECIAL, FieldType.HIDDEN,\n                    JsonSchemaVersion.V_1);", "modifier": "private static final", "type": "JsonFieldDefinition<Integer>", "declarator": "JSON_SCHEMA_VERSION =\n            JsonFactory.newIntFieldDefinition(JsonSchemaVersion.getJsonKey(), FieldType.SPECIAL, FieldType.HIDDEN,\n                    JsonSchemaVersion.V_1)", "var_name": "JSON_SCHEMA_VERSION"}, {"original_string": "private final AuthorizationSubject authSubject;", "modifier": "private final", "type": "AuthorizationSubject", "declarator": "authSubject", "var_name": "authSubject"}, {"original_string": "private final Permissions permissions;", "modifier": "private final", "type": "Permissions", "declarator": "permissions", "var_name": "permissions"}], "methods": [{"identifier": "ImmutableAclEntry", "parameters": "(final AuthorizationSubject theAuthSubject, final Set<Permission> thePermissions)", "modifiers": "private", "return": "", "signature": " ImmutableAclEntry(final AuthorizationSubject theAuthSubject, final Set<Permission> thePermissions)", "full_signature": "private  ImmutableAclEntry(final AuthorizationSubject theAuthSubject, final Set<Permission> thePermissions)", "class_method_signature": "ImmutableAclEntry.ImmutableAclEntry(final AuthorizationSubject theAuthSubject, final Set<Permission> thePermissions)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final AuthorizationSubject authSubject, final Permission permission,\n            final Permission... furtherPermissions)", "modifiers": "public static", "return": "AclEntry", "signature": "AclEntry of(final AuthorizationSubject authSubject, final Permission permission,\n            final Permission... furtherPermissions)", "full_signature": "public static AclEntry of(final AuthorizationSubject authSubject, final Permission permission,\n            final Permission... furtherPermissions)", "class_method_signature": "ImmutableAclEntry.of(final AuthorizationSubject authSubject, final Permission permission,\n            final Permission... furtherPermissions)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final AuthorizationSubject authSubject, final Iterable<Permission> permissions)", "modifiers": "public static", "return": "AclEntry", "signature": "AclEntry of(final AuthorizationSubject authSubject, final Iterable<Permission> permissions)", "full_signature": "public static AclEntry of(final AuthorizationSubject authSubject, final Iterable<Permission> permissions)", "class_method_signature": "ImmutableAclEntry.of(final AuthorizationSubject authSubject, final Iterable<Permission> permissions)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final CharSequence jsonKey, final JsonValue jsonValue)", "modifiers": "public static", "return": "AclEntry", "signature": "AclEntry of(final CharSequence jsonKey, final JsonValue jsonValue)", "full_signature": "public static AclEntry of(final CharSequence jsonKey, final JsonValue jsonValue)", "class_method_signature": "ImmutableAclEntry.of(final CharSequence jsonKey, final JsonValue jsonValue)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final CharSequence jsonKey, final JsonValue jsonValue)", "modifiers": "private static", "return": "void", "signature": "void validate(final CharSequence jsonKey, final JsonValue jsonValue)", "full_signature": "private static void validate(final CharSequence jsonKey, final JsonValue jsonValue)", "class_method_signature": "ImmutableAclEntry.validate(final CharSequence jsonKey, final JsonValue jsonValue)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final CharSequence authSubjectId, final Permission permission,\n            final Optional<JsonValue> permissionValue)", "modifiers": "private static", "return": "void", "signature": "void validate(final CharSequence authSubjectId, final Permission permission,\n            final Optional<JsonValue> permissionValue)", "full_signature": "private static void validate(final CharSequence authSubjectId, final Permission permission,\n            final Optional<JsonValue> permissionValue)", "class_method_signature": "ImmutableAclEntry.validate(final CharSequence authSubjectId, final Permission permission,\n            final Optional<JsonValue> permissionValue)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final AclEntry aclEntry)", "modifiers": "private static", "return": "void", "signature": "void validate(final AclEntry aclEntry)", "full_signature": "private static void validate(final AclEntry aclEntry)", "class_method_signature": "ImmutableAclEntry.validate(final AclEntry aclEntry)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "AclEntry", "signature": "AclEntry fromJson(final JsonObject jsonObject)", "full_signature": "public static AclEntry fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableAclEntry.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationSubject", "parameters": "()", "modifiers": "@Override public", "return": "AuthorizationSubject", "signature": "AuthorizationSubject getAuthorizationSubject()", "full_signature": "@Override public AuthorizationSubject getAuthorizationSubject()", "class_method_signature": "ImmutableAclEntry.getAuthorizationSubject()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Permission permission)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final Permission permission)", "full_signature": "@Override public boolean contains(final Permission permission)", "class_method_signature": "ImmutableAclEntry.contains(final Permission permission)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(@Nullable final Collection<Permission> permissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(@Nullable final Collection<Permission> permissions)", "full_signature": "@Override public boolean containsAll(@Nullable final Collection<Permission> permissions)", "class_method_signature": "ImmutableAclEntry.containsAll(@Nullable final Collection<Permission> permissions)", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "()", "modifiers": "@Override public", "return": "Permissions", "signature": "Permissions getPermissions()", "full_signature": "@Override public Permissions getPermissions()", "class_method_signature": "ImmutableAclEntry.getPermissions()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableAclEntry.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableAclEntry.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableAclEntry.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableAclEntry.toString()", "testcase": false, "constructor": false}], "file": "model/things/src/main/java/org/eclipse/ditto/model/things/ImmutableAclEntry.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "AclEntry", "body": "public static AclEntry fromJson(final JsonObject jsonObject) {\n        checkNotNull(jsonObject, \"JSON object\");\n\n        return jsonObject.stream()\n                .filter(field -> !Objects.equals(field.getKey(), JsonSchemaVersion.getJsonKey()))\n                .findFirst()\n                .map(field -> ImmutableAclEntry.of(field.getKey(), field.getValue()))\n                .orElseThrow(() -> new DittoJsonException(JsonMissingFieldException.newBuilder()\n                        .message(\"The JSON object for 'aclEntry' is missing.\")\n                        .build()));\n    }", "signature": "AclEntry fromJson(final JsonObject jsonObject)", "full_signature": "public static AclEntry fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableAclEntry.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "orElseThrow", "map", "findFirst", "filter", "stream", "equals", "getKey", "getJsonKey", "of", "getKey", "getValue", "build", "message", "newBuilder"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}