{"test_class": {"identifier": "SensorDataSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SensorDataSource dataSrc;", "modifier": "private", "type": "SensorDataSource", "declarator": "dataSrc", "var_name": "dataSrc"}], "file": "common/src/test/java/org/nargila/robostroke/data/SensorDataSourceTest.java"}, "test_case": {"identifier": "testSinkWeight", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSinkWeight() {\n\t\tSensorDataSink ds0 = new SensorDataSink() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onSensorData(long timestamp, Object value) {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t\t\n\t\tSensorDataSink ds1 = new SensorDataSink() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onSensorData(long timestamp, Object value) {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t\t\n\t\tSensorDataSink ds2 = new SensorDataSink() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onSensorData(long timestamp, Object value) {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t\t\n\t\tSensorDataSink ds3 = new SensorDataSink() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onSensorData(long timestamp, Object value) {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t\t\n\t\tSensorDataSink ds4 = new SensorDataSink() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onSensorData(long timestamp, Object value) {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t\t\n\t\tdataSrc.addSensorDataSink(ds0, 0.0);\n\t\tdataSrc.addSensorDataSink(ds3);\n\t\tdataSrc.addSensorDataSink(ds4);\n\t\tdataSrc.addSensorDataSink(ds1, 0.0);\n\t\tdataSrc.addSensorDataSink(ds2, 0.1);\n\t\t\n\t\tassertEquals(ds0, dataSrc.sinkList.get(0));\n\t\tassertEquals(ds1, dataSrc.sinkList.get(1));\n\t\tassertEquals(ds2, dataSrc.sinkList.get(2));\n\t\tassertEquals(ds3, dataSrc.sinkList.get(3));\n\t\tassertEquals(ds4, dataSrc.sinkList.get(4));\n\t}", "signature": "void testSinkWeight()", "full_signature": "@Test public void testSinkWeight()", "class_method_signature": "SensorDataSourceTest.testSinkWeight()", "testcase": true, "constructor": false, "invocations": ["addSensorDataSink", "addSensorDataSink", "addSensorDataSink", "addSensorDataSink", "addSensorDataSink", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "SensorDataSource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SensorDataSink sink;", "modifier": "private", "type": "SensorDataSink", "declarator": "sink", "var_name": "sink"}, {"original_string": "LinkedList<SensorDataSink> sinkList;", "modifier": "", "type": "LinkedList<SensorDataSink>", "declarator": "sinkList", "var_name": "sinkList"}, {"original_string": "private final HashMap<SensorDataSink, Double> weightMap = new HashMap<SensorDataSink, Double>();", "modifier": "private final", "type": "HashMap<SensorDataSink, Double>", "declarator": "weightMap = new HashMap<SensorDataSink, Double>()", "var_name": "weightMap"}], "methods": [{"identifier": "SensorDataSource", "parameters": "()", "modifiers": "public", "return": "", "signature": " SensorDataSource()", "full_signature": "public  SensorDataSource()", "class_method_signature": "SensorDataSource.SensorDataSource()", "testcase": false, "constructor": true}, {"identifier": "SensorDataSource", "parameters": "(SensorDataSink sink)", "modifiers": "public", "return": "", "signature": " SensorDataSource(SensorDataSink sink)", "full_signature": "public  SensorDataSource(SensorDataSink sink)", "class_method_signature": "SensorDataSource.SensorDataSource(SensorDataSink sink)", "testcase": false, "constructor": true}, {"identifier": "addSensorDataSink", "parameters": "(SensorDataSink sink)", "modifiers": "public", "return": "void", "signature": "void addSensorDataSink(SensorDataSink sink)", "full_signature": "public void addSensorDataSink(SensorDataSink sink)", "class_method_signature": "SensorDataSource.addSensorDataSink(SensorDataSink sink)", "testcase": false, "constructor": false}, {"identifier": "addSensorDataSink", "parameters": "(SensorDataSink sink, double weight)", "modifiers": "public synchronized", "return": "void", "signature": "void addSensorDataSink(SensorDataSink sink, double weight)", "full_signature": "public synchronized void addSensorDataSink(SensorDataSink sink, double weight)", "class_method_signature": "SensorDataSource.addSensorDataSink(SensorDataSink sink, double weight)", "testcase": false, "constructor": false}, {"identifier": "removeSensorDataSink", "parameters": "(SensorDataSink sink)", "modifiers": "public synchronized", "return": "void", "signature": "void removeSensorDataSink(SensorDataSink sink)", "full_signature": "public synchronized void removeSensorDataSink(SensorDataSink sink)", "class_method_signature": "SensorDataSource.removeSensorDataSink(SensorDataSink sink)", "testcase": false, "constructor": false}, {"identifier": "pushData", "parameters": "(long timestamp, Object value)", "modifiers": "public synchronized", "return": "void", "signature": "void pushData(long timestamp, Object value)", "full_signature": "public synchronized void pushData(long timestamp, Object value)", "class_method_signature": "SensorDataSource.pushData(long timestamp, Object value)", "testcase": false, "constructor": false}, {"identifier": "clearSensorDataSinks", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void clearSensorDataSinks()", "full_signature": "public synchronized void clearSensorDataSinks()", "class_method_signature": "SensorDataSource.clearSensorDataSinks()", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/nargila/robostroke/data/SensorDataSource.java"}, "focal_method": {"identifier": "addSensorDataSink", "parameters": "(SensorDataSink sink)", "modifiers": "public", "return": "void", "body": "public void addSensorDataSink(SensorDataSink sink) {\n\t\taddSensorDataSink(sink, 1.0);\n\t}", "signature": "void addSensorDataSink(SensorDataSink sink)", "full_signature": "public void addSensorDataSink(SensorDataSink sink)", "class_method_signature": "SensorDataSource.addSensorDataSink(SensorDataSink sink)", "testcase": false, "constructor": false, "invocations": ["addSensorDataSink"]}, "repository": {"repo_id": 5155211, "url": "https://github.com/talos-rowing/talos-rowing", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 9, "size": 6135, "license": "licensed"}}