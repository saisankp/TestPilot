{"test_class": {"identifier": "Mtp2Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TransferProxy channel;", "modifier": "private", "type": "TransferProxy", "declarator": "channel", "var_name": "channel"}, {"original_string": "private Mtp1DummyImpl terminal1;", "modifier": "private", "type": "Mtp1DummyImpl", "declarator": "terminal1", "var_name": "terminal1"}, {"original_string": "private Mtp1DummyImpl terminal2;", "modifier": "private", "type": "Mtp1DummyImpl", "declarator": "terminal2", "var_name": "terminal2"}, {"original_string": "private Mtp3 link1;", "modifier": "private", "type": "Mtp3", "declarator": "link1", "var_name": "link1"}, {"original_string": "private Mtp3 link2;", "modifier": "private", "type": "Mtp3", "declarator": "link2", "var_name": "link2"}], "file": "servers/media/core/server-impl/src/test/java/org/mobicents/media/server/impl/resource/ss7/Mtp2Test.java"}, "test_case": {"identifier": "testLink", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLink() throws Exception {\n        link1.start();\n        link2.start();\n        \n        Thread.currentThread().sleep(180000);\n    }", "signature": "void testLink()", "full_signature": "@Test public void testLink()", "class_method_signature": "Mtp2Test.testLink()", "testcase": true, "constructor": false, "invocations": ["start", "start", "sleep", "currentThread"]}, "focal_class": {"identifier": "Mtp2", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private final static int TIMEOUT_1 = 65000;", "modifier": "private final static", "type": "int", "declarator": "TIMEOUT_1 = 65000", "var_name": "TIMEOUT_1"}, {"original_string": "private final static int TIMEOUT_2 = 5000;", "modifier": "private final static", "type": "int", "declarator": "TIMEOUT_2 = 5000", "var_name": "TIMEOUT_2"}, {"original_string": "private final static int TIMEOUT_3 = 20000;", "modifier": "private final static", "type": "int", "declarator": "TIMEOUT_3 = 20000", "var_name": "TIMEOUT_3"}, {"original_string": "private final static int TIMEOUT_4_NORMAL = 9500;", "modifier": "private final static", "type": "int", "declarator": "TIMEOUT_4_NORMAL = 9500", "var_name": "TIMEOUT_4_NORMAL"}, {"original_string": "private final static int TIMEOUT_4_EMERGENCY = 500;", "modifier": "private final static", "type": "int", "declarator": "TIMEOUT_4_EMERGENCY = 500", "var_name": "TIMEOUT_4_EMERGENCY"}, {"original_string": "private final static int fcstab[] = new int[]{\n        0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf,\n        0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,\n        0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n        0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,\n        0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd,\n        0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n        0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c,\n        0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,\n        0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n        0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,\n        0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a,\n        0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n        0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9,\n        0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,\n        0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n        0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,\n        0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7,\n        0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n        0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036,\n        0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,\n        0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n        0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,\n        0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134,\n        0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n        0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,\n        0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,\n        0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n        0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,\n        0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1,\n        0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n        0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330,\n        0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78\n    };", "modifier": "private final static", "type": "int", "declarator": "fcstab[] = new int[]{\n        0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf,\n        0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,\n        0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n        0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,\n        0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd,\n        0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n        0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c,\n        0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,\n        0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n        0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,\n        0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a,\n        0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n        0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9,\n        0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,\n        0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n        0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,\n        0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7,\n        0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n        0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036,\n        0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,\n        0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n        0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,\n        0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134,\n        0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n        0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,\n        0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,\n        0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n        0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,\n        0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1,\n        0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n        0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330,\n        0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78\n    }", "var_name": "fcstab"}, {"original_string": "private final static int RX_TX_BUFF_SIZE = 16;", "modifier": "private final static", "type": "int", "declarator": "RX_TX_BUFF_SIZE = 16", "var_name": "RX_TX_BUFF_SIZE"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_O = 0;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_O = 0", "var_name": "FRAME_STATUS_INDICATION_O"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_N = 1;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_N = 1", "var_name": "FRAME_STATUS_INDICATION_N"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_E = 2;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_E = 2", "var_name": "FRAME_STATUS_INDICATION_E"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_OS = 3;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_OS = 3", "var_name": "FRAME_STATUS_INDICATION_OS"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_PO = 4;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_PO = 4", "var_name": "FRAME_STATUS_INDICATION_PO"}, {"original_string": "private final static int FRAME_STATUS_INDICATION_B = 5;", "modifier": "private final static", "type": "int", "declarator": "FRAME_STATUS_INDICATION_B = 5", "var_name": "FRAME_STATUS_INDICATION_B"}, {"original_string": "private final static int FRAME_FISU = 6;", "modifier": "private final static", "type": "int", "declarator": "FRAME_FISU = 6", "var_name": "FRAME_FISU"}, {"original_string": "private final static int MTP2_READY = 1;", "modifier": "private final static", "type": "int", "declarator": "MTP2_READY = 1", "var_name": "MTP2_READY"}, {"original_string": "private final static int MTP2_INSERVICE = 2;", "modifier": "private final static", "type": "int", "declarator": "MTP2_INSERVICE = 2", "var_name": "MTP2_INSERVICE"}, {"original_string": "private final static int MTP2_NOT_ALIGNED = 3;", "modifier": "private final static", "type": "int", "declarator": "MTP2_NOT_ALIGNED = 3", "var_name": "MTP2_NOT_ALIGNED"}, {"original_string": "private final static int MTP2_ALIGNED = 4;", "modifier": "private final static", "type": "int", "declarator": "MTP2_ALIGNED = 4", "var_name": "MTP2_ALIGNED"}, {"original_string": "private final static int MTP2_PROVING = 5;", "modifier": "private final static", "type": "int", "declarator": "MTP2_PROVING = 5", "var_name": "MTP2_PROVING"}, {"original_string": "private final static int MTP2_OUT_OF_SERVICE = 0;", "modifier": "private final static", "type": "int", "declarator": "MTP2_OUT_OF_SERVICE = 0", "var_name": "MTP2_OUT_OF_SERVICE"}, {"original_string": "public final static int NORMAL_AERM_THRESHOLD = 1;", "modifier": "public final static", "type": "int", "declarator": "NORMAL_AERM_THRESHOLD = 1", "var_name": "NORMAL_AERM_THRESHOLD"}, {"original_string": "public final static int EMERGENCY_AERM_THRESHOLD = 1;", "modifier": "public final static", "type": "int", "declarator": "EMERGENCY_AERM_THRESHOLD = 1", "var_name": "EMERGENCY_AERM_THRESHOLD"}, {"original_string": "private int state;", "modifier": "private", "type": "int", "declarator": "state", "var_name": "state"}, {"original_string": "private Mtp1 layer1;", "modifier": "private", "type": "Mtp1", "declarator": "layer1", "var_name": "layer1"}, {"original_string": "private int span;", "modifier": "private", "type": "int", "declarator": "span", "var_name": "span"}, {"original_string": "private int timeslot;", "modifier": "private", "type": "int", "declarator": "timeslot", "var_name": "timeslot"}, {"original_string": "private boolean started;", "modifier": "private", "type": "boolean", "declarator": "started", "var_name": "started"}, {"original_string": "private FastHDLC hdlc = new FastHDLC();", "modifier": "private", "type": "FastHDLC", "declarator": "hdlc = new FastHDLC()", "var_name": "hdlc"}, {"original_string": "private HdlcState rxState = new HdlcState();", "modifier": "private", "type": "HdlcState", "declarator": "rxState = new HdlcState()", "var_name": "rxState"}, {"original_string": "private HdlcState txState = new HdlcState();", "modifier": "private", "type": "HdlcState", "declarator": "txState = new HdlcState()", "var_name": "txState"}, {"original_string": "private int rxLen = 0;", "modifier": "private", "type": "int", "declarator": "rxLen = 0", "var_name": "rxLen"}, {"original_string": "private int txLen = 0;", "modifier": "private", "type": "int", "declarator": "txLen = 0", "var_name": "txLen"}, {"original_string": "private int txOffset = 0;", "modifier": "private", "type": "int", "declarator": "txOffset = 0", "var_name": "txOffset"}, {"original_string": "private int sendBSN;", "modifier": "private", "type": "int", "declarator": "sendBSN", "var_name": "sendBSN"}, {"original_string": "private int sendBIB;", "modifier": "private", "type": "int", "declarator": "sendBIB", "var_name": "sendBIB"}, {"original_string": "private int sendFIB;", "modifier": "private", "type": "int", "declarator": "sendFIB", "var_name": "sendFIB"}, {"original_string": "private int lastSentSN = 0;", "modifier": "private", "type": "int", "declarator": "lastSentSN = 0", "var_name": "lastSentSN"}, {"original_string": "private byte[] txBuffer = new byte[RX_TX_BUFF_SIZE];", "modifier": "private", "type": "byte[]", "declarator": "txBuffer = new byte[RX_TX_BUFF_SIZE]", "var_name": "txBuffer"}, {"original_string": "private byte[] rxBuffer = new byte[RX_TX_BUFF_SIZE];", "modifier": "private", "type": "byte[]", "declarator": "rxBuffer = new byte[RX_TX_BUFF_SIZE]", "var_name": "rxBuffer"}, {"original_string": "private int[] rxFrame = new int[279];", "modifier": "private", "type": "int[]", "declarator": "rxFrame = new int[279]", "var_name": "rxFrame"}, {"original_string": "private byte[] txFrame = new byte[279];", "modifier": "private", "type": "byte[]", "declarator": "txFrame = new byte[279]", "var_name": "txFrame"}, {"original_string": "private TxQueue txQueue = new TxQueue();", "modifier": "private", "type": "TxQueue", "declarator": "txQueue = new TxQueue()", "var_name": "txQueue"}, {"original_string": "private int doCRC = 0;", "modifier": "private", "type": "int", "declarator": "doCRC = 0", "var_name": "doCRC"}, {"original_string": "private int rxCRC = 0xffff;", "modifier": "private", "type": "int", "declarator": "rxCRC = 0xffff", "var_name": "rxCRC"}, {"original_string": "private int txCRC = 0xffff;", "modifier": "private", "type": "int", "declarator": "txCRC = 0xffff", "var_name": "txCRC"}, {"original_string": "private int rxFSN = 127;", "modifier": "private", "type": "int", "declarator": "rxFSN = 127", "var_name": "rxFSN"}, {"original_string": "private int rxBSN = 127;", "modifier": "private", "type": "int", "declarator": "rxBSN = 127", "var_name": "rxBSN"}, {"original_string": "private int txFSN = 127;", "modifier": "private", "type": "int", "declarator": "txFSN = 127", "var_name": "txFSN"}, {"original_string": "private int txBSN = 127;", "modifier": "private", "type": "int", "declarator": "txBSN = 127", "var_name": "txBSN"}, {"original_string": "private int rxFIB = 1;", "modifier": "private", "type": "int", "declarator": "rxFIB = 1", "var_name": "rxFIB"}, {"original_string": "private int rxBIB = 1;", "modifier": "private", "type": "int", "declarator": "rxBIB = 1", "var_name": "rxBIB"}, {"original_string": "private int txFIB = 1;", "modifier": "private", "type": "int", "declarator": "txFIB = 1", "var_name": "txFIB"}, {"original_string": "private int txBIB = 1;", "modifier": "private", "type": "int", "declarator": "txBIB = 1", "var_name": "txBIB"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Logger logger = Logger.getLogger(Mtp2.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(Mtp2.class)", "var_name": "logger"}, {"original_string": "private final MTPThreadFactoryImpl threadFactory = new MTPThreadFactoryImpl();", "modifier": "private final", "type": "MTPThreadFactoryImpl", "declarator": "threadFactory = new MTPThreadFactoryImpl()", "var_name": "threadFactory"}, {"original_string": "private final ScheduledExecutorService mtpThread = Executors.newSingleThreadScheduledExecutor(threadFactory);", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "mtpThread = Executors.newSingleThreadScheduledExecutor(threadFactory)", "var_name": "mtpThread"}, {"original_string": "private final static MTPTimerThreadFactoryImpl timerThreadFactory = new MTPTimerThreadFactoryImpl();", "modifier": "private final static", "type": "MTPTimerThreadFactoryImpl", "declarator": "timerThreadFactory = new MTPTimerThreadFactoryImpl()", "var_name": "timerThreadFactory"}, {"original_string": "protected final static ScheduledExecutorService mtpTimer = Executors.newSingleThreadScheduledExecutor(timerThreadFactory);", "modifier": "protected final static", "type": "ScheduledExecutorService", "declarator": "mtpTimer = Executors.newSingleThreadScheduledExecutor(timerThreadFactory)", "var_name": "mtpTimer"}, {"original_string": "private int POLL_DELAY = 2;", "modifier": "private", "type": "int", "declarator": "POLL_DELAY = 2", "var_name": "POLL_DELAY"}, {"original_string": "private ScheduledFuture poll;", "modifier": "private", "type": "ScheduledFuture", "declarator": "poll", "var_name": "poll"}, {"original_string": "private int aermThreshold;", "modifier": "private", "type": "int", "declarator": "aermThreshold", "var_name": "aermThreshold"}, {"original_string": "private boolean emergency = false;", "modifier": "private", "type": "boolean", "declarator": "emergency = false", "var_name": "emergency"}, {"original_string": "private T1Action t1Action = new T1Action();", "modifier": "private", "type": "T1Action", "declarator": "t1Action = new T1Action()", "var_name": "t1Action"}, {"original_string": "private ScheduledFuture T1;", "modifier": "private", "type": "ScheduledFuture", "declarator": "T1", "var_name": "T1"}, {"original_string": "private T2Action t2Action = new T2Action();", "modifier": "private", "type": "T2Action", "declarator": "t2Action = new T2Action()", "var_name": "t2Action"}, {"original_string": "private ScheduledFuture T2;", "modifier": "private", "type": "ScheduledFuture", "declarator": "T2", "var_name": "T2"}, {"original_string": "private T3Action t3Action = new T3Action();", "modifier": "private", "type": "T3Action", "declarator": "t3Action = new T3Action()", "var_name": "t3Action"}, {"original_string": "private ScheduledFuture T3;", "modifier": "private", "type": "ScheduledFuture", "declarator": "T3", "var_name": "T3"}, {"original_string": "private T4Action t4Action = new T4Action();", "modifier": "private", "type": "T4Action", "declarator": "t4Action = new T4Action()", "var_name": "t4Action"}, {"original_string": "private ScheduledFuture T4;", "modifier": "private", "type": "ScheduledFuture", "declarator": "T4", "var_name": "T4"}, {"original_string": "private int TIMEOUT_4;", "modifier": "private", "type": "int", "declarator": "TIMEOUT_4", "var_name": "TIMEOUT_4"}, {"original_string": "private int cp;", "modifier": "private", "type": "int", "declarator": "cp", "var_name": "cp"}, {"original_string": "private boolean futureProving;", "modifier": "private", "type": "boolean", "declarator": "futureProving", "var_name": "futureProving"}, {"original_string": "private Mtp3 mtp3;", "modifier": "private", "type": "Mtp3", "declarator": "mtp3", "var_name": "mtp3"}, {"original_string": "private int nCount;", "modifier": "private", "type": "int", "declarator": "nCount", "var_name": "nCount"}, {"original_string": "private int dCount;", "modifier": "private", "type": "int", "declarator": "dCount", "var_name": "dCount"}, {"original_string": "private int eCount;", "modifier": "private", "type": "int", "declarator": "eCount", "var_name": "eCount"}], "methods": [{"identifier": "Mtp2", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Mtp2(String name)", "full_signature": "public  Mtp2(String name)", "class_method_signature": "Mtp2.Mtp2(String name)", "testcase": false, "constructor": true}, {"identifier": "setLayer1", "parameters": "(Mtp1 layer1)", "modifiers": "public", "return": "void", "signature": "void setLayer1(Mtp1 layer1)", "full_signature": "public void setLayer1(Mtp1 layer1)", "class_method_signature": "Mtp2.setLayer1(Mtp1 layer1)", "testcase": false, "constructor": false}, {"identifier": "setLayer3", "parameters": "(Mtp3 mtp3)", "modifiers": "protected", "return": "void", "signature": "void setLayer3(Mtp3 mtp3)", "full_signature": "protected void setLayer3(Mtp3 mtp3)", "class_method_signature": "Mtp2.setLayer3(Mtp3 mtp3)", "testcase": false, "constructor": false}, {"identifier": "getSpan", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSpan()", "full_signature": "public int getSpan()", "class_method_signature": "Mtp2.getSpan()", "testcase": false, "constructor": false}, {"identifier": "setSpan", "parameters": "(int span)", "modifiers": "public", "return": "void", "signature": "void setSpan(int span)", "full_signature": "public void setSpan(int span)", "class_method_signature": "Mtp2.setSpan(int span)", "testcase": false, "constructor": false}, {"identifier": "getTimeslot", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTimeslot()", "full_signature": "public int getTimeslot()", "class_method_signature": "Mtp2.getTimeslot()", "testcase": false, "constructor": false}, {"identifier": "setTimeslot", "parameters": "(int timeslot)", "modifiers": "public", "return": "void", "signature": "void setTimeslot(int timeslot)", "full_signature": "public void setTimeslot(int timeslot)", "class_method_signature": "Mtp2.setTimeslot(int timeslot)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "Mtp2.start()", "testcase": false, "constructor": false}, {"identifier": "startInitialAlignment", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startInitialAlignment()", "full_signature": "private void startInitialAlignment()", "class_method_signature": "Mtp2.startInitialAlignment()", "testcase": false, "constructor": false}, {"identifier": "queue", "parameters": "(byte[] msg)", "modifiers": "public", "return": "void", "signature": "void queue(byte[] msg)", "full_signature": "public void queue(byte[] msg)", "class_method_signature": "Mtp2.queue(byte[] msg)", "testcase": false, "constructor": false}, {"identifier": "queueLSSU", "parameters": "(int indicator)", "modifiers": "private", "return": "void", "signature": "void queueLSSU(int indicator)", "full_signature": "private void queueLSSU(int indicator)", "class_method_signature": "Mtp2.queueLSSU(int indicator)", "testcase": false, "constructor": false}, {"identifier": "queueFISU", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void queueFISU()", "full_signature": "private void queueFISU()", "class_method_signature": "Mtp2.queueFISU()", "testcase": false, "constructor": false}, {"identifier": "queueNextFrame", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void queueNextFrame()", "full_signature": "private void queueNextFrame()", "class_method_signature": "Mtp2.queueNextFrame()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "Mtp2.stop()", "testcase": false, "constructor": false}, {"identifier": "PPP_FCS", "parameters": "(int fcs, int c)", "modifiers": "public", "return": "int", "signature": "int PPP_FCS(int fcs, int c)", "full_signature": "public int PPP_FCS(int fcs, int c)", "class_method_signature": "Mtp2.PPP_FCS(int fcs, int c)", "testcase": false, "constructor": false}, {"identifier": "processLssu", "parameters": "(int fsn, int fib)", "modifiers": "private", "return": "void", "signature": "void processLssu(int fsn, int fib)", "full_signature": "private void processLssu(int fsn, int fib)", "class_method_signature": "Mtp2.processLssu(int fsn, int fib)", "testcase": false, "constructor": false}, {"identifier": "processFISU", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void processFISU()", "full_signature": "private void processFISU()", "class_method_signature": "Mtp2.processFISU()", "testcase": false, "constructor": false}, {"identifier": "processMSU", "parameters": "(int len)", "modifiers": "private", "return": "void", "signature": "void processMSU(int len)", "full_signature": "private void processMSU(int len)", "class_method_signature": "Mtp2.processMSU(int len)", "testcase": false, "constructor": false}, {"identifier": "processFrame", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void processFrame()", "full_signature": "private void processFrame()", "class_method_signature": "Mtp2.processFrame()", "testcase": false, "constructor": false}, {"identifier": "processRx", "parameters": "(byte[] buff, int len)", "modifiers": "private", "return": "void", "signature": "void processRx(byte[] buff, int len)", "full_signature": "private void processRx(byte[] buff, int len)", "class_method_signature": "Mtp2.processRx(byte[] buff, int len)", "testcase": false, "constructor": false}, {"identifier": "processTx", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void processTx()", "full_signature": "private void processTx()", "class_method_signature": "Mtp2.processTx()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "Mtp2.run()", "testcase": false, "constructor": false}, {"identifier": "countError", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void countError()", "full_signature": "private void countError()", "class_method_signature": "Mtp2.countError()", "testcase": false, "constructor": false}, {"identifier": "countFrame", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void countFrame()", "full_signature": "private void countFrame()", "class_method_signature": "Mtp2.countFrame()", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(byte[] buff, int size)", "modifiers": "private", "return": "String", "signature": "String dump(byte[] buff, int size)", "full_signature": "private String dump(byte[] buff, int size)", "class_method_signature": "Mtp2.dump(byte[] buff, int size)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(int[] buff, int size)", "modifiers": "private", "return": "String", "signature": "String dump(int[] buff, int size)", "full_signature": "private String dump(int[] buff, int size)", "class_method_signature": "Mtp2.dump(int[] buff, int size)", "testcase": false, "constructor": false}], "file": "servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/resource/ss7/Mtp2.java"}, "focal_method": {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void start() throws IOException {\n//        String devName = \"/dev/zap/\" + (31*span - 29 + timeslot);\n        layer1.open();\n        started = true;\n        logger.info(\"Link(\" + name + \") is out of service now\");\n        \n        poll = mtpThread.scheduleAtFixedRate(this, 0, POLL_DELAY, TimeUnit.MILLISECONDS);\n        state = Mtp2.MTP2_OUT_OF_SERVICE;\n        \n        queueLSSU(FRAME_STATUS_INDICATION_OS);\n        processTx();\n        \n        startInitialAlignment();\n    }", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "Mtp2.start()", "testcase": false, "constructor": false, "invocations": ["open", "info", "scheduleAtFixedRate", "queueLSSU", "processTx", "startInitialAlignment"]}, "repository": {"repo_id": 128294, "url": "https://github.com/deruelle/mobicents", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 347121, "license": "licensed"}}