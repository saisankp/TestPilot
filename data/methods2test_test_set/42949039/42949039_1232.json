{"test_class": {"identifier": "ConfigurationEntryRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ConfigurationEntryRestController configurationEntryRestController;", "modifier": "@InjectMocks\n    private", "type": "ConfigurationEntryRestController", "declarator": "configurationEntryRestController", "var_name": "configurationEntryRestController"}, {"original_string": "@Mock\n    private ConfigurationEntryService configurationEntryService;", "modifier": "@Mock\n    private", "type": "ConfigurationEntryService", "declarator": "configurationEntryService", "var_name": "configurationEntryService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/ConfigurationEntryRestControllerTest.java"}, "test_case": {"identifier": "testGetConfigurationEntry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetConfigurationEntry()\n    {\n        // Create a configuration entry key and value and value clob.\n        String configurationEntryKey = \"KEY\";\n        String configurationEntryValue = \"VALUE\";\n        String configurationEntryValueClob = \"VALUE CLOB\";\n\n        // Create a configuration entry get response.\n        ConfigurationEntry configurationEntry = new ConfigurationEntry(configurationEntryKey, configurationEntryValue, configurationEntryValueClob);\n\n        // Mock the call to the configuration entry service.\n        when(configurationEntryService.getConfigurationEntry(configurationEntryKey)).thenReturn(configurationEntry);\n\n        // Get a configuration entry.\n        ConfigurationEntry response = configurationEntryRestController.getConfigurationEntry(configurationEntryKey);\n\n        // Verify the call.\n        verify(configurationEntryService).getConfigurationEntry(configurationEntryKey);\n\n        // Validate the returned object.\n        assertEquals(\"Response not equal to expected configuration entry response.\", configurationEntry, response);\n    }", "signature": "void testGetConfigurationEntry()", "full_signature": "@Test public void testGetConfigurationEntry()", "class_method_signature": "ConfigurationEntryRestControllerTest.testGetConfigurationEntry()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getConfigurationEntry", "getConfigurationEntry", "getConfigurationEntry", "verify", "assertEquals"]}, "focal_class": {"identifier": "ConfigurationEntryRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String CONFIGURATION_ENTRIES_URI_PREFIX = \"/configurationEntries\";", "modifier": "public static final", "type": "String", "declarator": "CONFIGURATION_ENTRIES_URI_PREFIX = \"/configurationEntries\"", "var_name": "CONFIGURATION_ENTRIES_URI_PREFIX"}, {"original_string": "@Autowired\n    private ConfigurationEntryService configurationEntryService;", "modifier": "@Autowired\n    private", "type": "ConfigurationEntryService", "declarator": "configurationEntryService", "var_name": "configurationEntryService"}], "methods": [{"identifier": "getConfigurationEntry", "parameters": "(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "modifiers": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX + \"/{configurationEntryKey}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_GET) public", "return": "ConfigurationEntry", "signature": "ConfigurationEntry getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "full_signature": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX + \"/{configurationEntryKey}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_GET) public ConfigurationEntry getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "class_method_signature": "ConfigurationEntryRestController.getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationEntries", "parameters": "()", "modifiers": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_ALL_GET) public", "return": "ConfigurationEntryKeys", "signature": "ConfigurationEntryKeys getConfigurationEntries()", "full_signature": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_ALL_GET) public ConfigurationEntryKeys getConfigurationEntries()", "class_method_signature": "ConfigurationEntryRestController.getConfigurationEntries()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/ConfigurationEntryRestController.java"}, "focal_method": {"identifier": "getConfigurationEntry", "parameters": "(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "modifiers": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX + \"/{configurationEntryKey}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_GET) public", "return": "ConfigurationEntry", "body": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX + \"/{configurationEntryKey}\", method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_GET)\n    public ConfigurationEntry getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)\n    {\n        return configurationEntryService.getConfigurationEntry(configurationEntryKey);\n    }", "signature": "ConfigurationEntry getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "full_signature": "@RequestMapping(value = CONFIGURATION_ENTRIES_URI_PREFIX + \"/{configurationEntryKey}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_CONFIGURATION_ENTRIES_GET) public ConfigurationEntry getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "class_method_signature": "ConfigurationEntryRestController.getConfigurationEntry(@PathVariable(\"configurationEntryKey\") String configurationEntryKey)", "testcase": false, "constructor": false, "invocations": ["getConfigurationEntry"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}