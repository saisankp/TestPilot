{"test_class": {"identifier": "SpoutCollectorTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/SpoutCollectorTest.java"}, "test_case": {"identifier": "testEmitDirect", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n\t@Test(expected = UnsupportedOperationException.class)\n\tpublic void testEmitDirect() {\n\t\tnew SpoutCollector<Object>(mock(HashMap.class), -1, mock(SourceContext.class)).emitDirect(\n\t\t\t\t0, null, null, (Object) null);\n\t}", "signature": "void testEmitDirect()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test(expected = UnsupportedOperationException.class) public void testEmitDirect()", "class_method_signature": "SpoutCollectorTest.testEmitDirect()", "testcase": true, "constructor": false, "invocations": ["emitDirect", "mock", "mock"]}, "focal_class": {"identifier": "SpoutCollector", "superclass": "extends AbstractStormCollector<OUT>", "interfaces": "implements ISpoutOutputCollector", "fields": [{"original_string": "private final SourceContext<OUT> flinkContext;", "modifier": "private final", "type": "SourceContext<OUT>", "declarator": "flinkContext", "var_name": "flinkContext"}], "methods": [{"identifier": "SpoutCollector", "parameters": "(final HashMap<String, Integer> numberOfAttributes, final int taskId,\n\t\t\tfinal SourceContext<OUT> flinkContext)", "modifiers": "", "return": "", "signature": " SpoutCollector(final HashMap<String, Integer> numberOfAttributes, final int taskId,\n\t\t\tfinal SourceContext<OUT> flinkContext)", "full_signature": "  SpoutCollector(final HashMap<String, Integer> numberOfAttributes, final int taskId,\n\t\t\tfinal SourceContext<OUT> flinkContext)", "class_method_signature": "SpoutCollector.SpoutCollector(final HashMap<String, Integer> numberOfAttributes, final int taskId,\n\t\t\tfinal SourceContext<OUT> flinkContext)", "testcase": false, "constructor": true}, {"identifier": "doEmit", "parameters": "(final OUT flinkTuple)", "modifiers": "@Override protected", "return": "List<Integer>", "signature": "List<Integer> doEmit(final OUT flinkTuple)", "full_signature": "@Override protected List<Integer> doEmit(final OUT flinkTuple)", "class_method_signature": "SpoutCollector.doEmit(final OUT flinkTuple)", "testcase": false, "constructor": false}, {"identifier": "reportError", "parameters": "(final Throwable error)", "modifiers": "@Override public", "return": "void", "signature": "void reportError(final Throwable error)", "full_signature": "@Override public void reportError(final Throwable error)", "class_method_signature": "SpoutCollector.reportError(final Throwable error)", "testcase": false, "constructor": false}, {"identifier": "emit", "parameters": "(final String streamId, final List<Object> tuple, final Object messageId)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> emit(final String streamId, final List<Object> tuple, final Object messageId)", "full_signature": "@Override public List<Integer> emit(final String streamId, final List<Object> tuple, final Object messageId)", "class_method_signature": "SpoutCollector.emit(final String streamId, final List<Object> tuple, final Object messageId)", "testcase": false, "constructor": false}, {"identifier": "emitDirect", "parameters": "(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "modifiers": "@Override public", "return": "void", "signature": "void emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "full_signature": "@Override public void emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "class_method_signature": "SpoutCollector.emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/SpoutCollector.java"}, "focal_method": {"identifier": "emitDirect", "parameters": "(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId) {\n\t\tthrow new UnsupportedOperationException(\"Direct emit is not supported by Flink\");\n\t}", "signature": "void emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "full_signature": "@Override public void emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "class_method_signature": "SpoutCollector.emitDirect(final int taskId, final String streamId, final List<Object> tuple, final Object messageId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}