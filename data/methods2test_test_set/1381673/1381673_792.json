{"test_class": {"identifier": "RowPriorityResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RowPriorityResolver rowPriorityResolver;", "modifier": "private", "type": "RowPriorityResolver", "declarator": "rowPriorityResolver", "var_name": "rowPriorityResolver"}, {"original_string": "private RowPriorities priorities;", "modifier": "private", "type": "RowPriorities", "declarator": "priorities", "var_name": "priorities"}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/test/java/org/drools/workbench/models/guided/dtable/shared/hitpolicy/RowPriorityResolverTest.java"}, "test_case": {"identifier": "priorityOverLowerRow", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void priorityOverLowerRow() throws\n            Exception {\n\n        rowPriorityResolver.set(1,\n                                4);\n    }", "signature": "void priorityOverLowerRow()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void priorityOverLowerRow()", "class_method_signature": "RowPriorityResolverTest.priorityOverLowerRow()", "testcase": true, "constructor": false, "invocations": ["set"]}, "focal_class": {"identifier": "RowPriorityResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<RowNumber> rowOrder = new ArrayList<>();", "modifier": "private", "type": "List<RowNumber>", "declarator": "rowOrder = new ArrayList<>()", "var_name": "rowOrder"}, {"original_string": "private Map<RowNumber, Over> overs = new TreeMap<>();", "modifier": "private", "type": "Map<RowNumber, Over>", "declarator": "overs = new TreeMap<>()", "var_name": "overs"}], "methods": [{"identifier": "set", "parameters": "(final int rowNumber,\n                    final int priorityOver)", "modifiers": "public", "return": "void", "signature": "void set(final int rowNumber,\n                    final int priorityOver)", "full_signature": "public void set(final int rowNumber,\n                    final int priorityOver)", "class_method_signature": "RowPriorityResolver.set(final int rowNumber,\n                    final int priorityOver)", "testcase": false, "constructor": false}, {"identifier": "getPriorityRelations", "parameters": "()", "modifiers": "public", "return": "RowPriorities", "signature": "RowPriorities getPriorityRelations()", "full_signature": "public RowPriorities getPriorityRelations()", "class_method_signature": "RowPriorityResolver.getPriorityRelations()", "testcase": false, "constructor": false}, {"identifier": "moveRowsBasedOnPriority", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void moveRowsBasedOnPriority()", "full_signature": "private void moveRowsBasedOnPriority()", "class_method_signature": "RowPriorityResolver.moveRowsBasedOnPriority()", "testcase": false, "constructor": false}, {"identifier": "sortRowsByNumber", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sortRowsByNumber()", "full_signature": "private void sortRowsByNumber()", "class_method_signature": "RowPriorityResolver.sortRowsByNumber()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/shared/hitpolicy/RowPriorityResolver.java"}, "focal_method": {"identifier": "set", "parameters": "(final int rowNumber,\n                    final int priorityOver)", "modifiers": "public", "return": "void", "body": "public void set(final int rowNumber,\n                    final int priorityOver) {\n\n        final RowNumber rowNumberObject = new RowNumber(rowNumber);\n        rowOrder.add(rowNumberObject);\n\n        if (rowNumber < priorityOver) {\n            throw new IllegalArgumentException(\"Priority over lower priority rows is not supported.\");\n        }\n\n        if (priorityOver != 0) {\n            overs.put(rowNumberObject,\n                      new Over(priorityOver));\n        }\n    }", "signature": "void set(final int rowNumber,\n                    final int priorityOver)", "full_signature": "public void set(final int rowNumber,\n                    final int priorityOver)", "class_method_signature": "RowPriorityResolver.set(final int rowNumber,\n                    final int priorityOver)", "testcase": false, "constructor": false, "invocations": ["add", "put"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}