{"test_class": {"identifier": "LRUCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LRUCache<Integer, Integer> tested;", "modifier": "private", "type": "LRUCache<Integer, Integer>", "declarator": "tested", "var_name": "tested"}], "file": "algs/src/test/java/com/github/kowshik/bigo/cache/LRUCacheTest.java"}, "test_case": {"identifier": "get_emptyCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void get_emptyCache() {\n\t\tassertNull(tested.get(1));\n\t}", "signature": "void get_emptyCache()", "full_signature": "@Test public void get_emptyCache()", "class_method_signature": "LRUCacheTest.get_emptyCache()", "testcase": true, "constructor": false, "invocations": ["assertNull", "get"]}, "focal_class": {"identifier": "LRUCache", "superclass": "", "interfaces": "implements\n\t\tCache<CacheKeyType, CacheValueType>", "fields": [{"original_string": "private int capacity;", "modifier": "private", "type": "int", "declarator": "capacity", "var_name": "capacity"}, {"original_string": "private final Map<CacheKeyType, CacheNode<CacheKeyType, CacheValueType>> cache = new HashMap<CacheKeyType, CacheNode<CacheKeyType, CacheValueType>>();", "modifier": "private final", "type": "Map<CacheKeyType, CacheNode<CacheKeyType, CacheValueType>>", "declarator": "cache = new HashMap<CacheKeyType, CacheNode<CacheKeyType, CacheValueType>>()", "var_name": "cache"}, {"original_string": "private CacheNode<CacheKeyType, CacheValueType> head, tail;", "modifier": "private", "type": "CacheNode<CacheKeyType, CacheValueType>", "declarator": "head", "var_name": "head"}, {"original_string": "public static final int DEFAULT_CAPACITY = 100;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_CAPACITY = 100", "var_name": "DEFAULT_CAPACITY"}], "methods": [{"identifier": "LRUCache", "parameters": "()", "modifiers": "public", "return": "", "signature": " LRUCache()", "full_signature": "public  LRUCache()", "class_method_signature": "LRUCache.LRUCache()", "testcase": false, "constructor": true}, {"identifier": "LRUCache", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " LRUCache(int capacity)", "full_signature": "public  LRUCache(int capacity)", "class_method_signature": "LRUCache.LRUCache(int capacity)", "testcase": false, "constructor": true}, {"identifier": "getCapacity", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCapacity()", "full_signature": "public int getCapacity()", "class_method_signature": "LRUCache.getCapacity()", "testcase": false, "constructor": false}, {"identifier": "setCapacity", "parameters": "(int capacity)", "modifiers": "public", "return": "void", "signature": "void setCapacity(int capacity)", "full_signature": "public void setCapacity(int capacity)", "class_method_signature": "LRUCache.setCapacity(int capacity)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "LRUCache.getSize()", "testcase": false, "constructor": false}, {"identifier": "checkCapacity", "parameters": "(int capacity)", "modifiers": "private", "return": "void", "signature": "void checkCapacity(int capacity)", "full_signature": "private void checkCapacity(int capacity)", "class_method_signature": "LRUCache.checkCapacity(int capacity)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(CacheKeyType key)", "modifiers": "@Override public", "return": "CacheValueType", "signature": "CacheValueType get(CacheKeyType key)", "full_signature": "@Override public CacheValueType get(CacheKeyType key)", "class_method_signature": "LRUCache.get(CacheKeyType key)", "testcase": false, "constructor": false}, {"identifier": "moveNodeToLast", "parameters": "(CacheNode<CacheKeyType, CacheValueType> node)", "modifiers": "private", "return": "void", "signature": "void moveNodeToLast(CacheNode<CacheKeyType, CacheValueType> node)", "full_signature": "private void moveNodeToLast(CacheNode<CacheKeyType, CacheValueType> node)", "class_method_signature": "LRUCache.moveNodeToLast(CacheNode<CacheKeyType, CacheValueType> node)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(CacheKeyType key, CacheValueType value)", "modifiers": "@Override public", "return": "void", "signature": "void put(CacheKeyType key, CacheValueType value)", "full_signature": "@Override public void put(CacheKeyType key, CacheValueType value)", "class_method_signature": "LRUCache.put(CacheKeyType key, CacheValueType value)", "testcase": false, "constructor": false}, {"identifier": "evict", "parameters": "()", "modifiers": "private", "return": "CacheNode<CacheKeyType, CacheValueType>", "signature": "CacheNode<CacheKeyType, CacheValueType> evict()", "full_signature": "private CacheNode<CacheKeyType, CacheValueType> evict()", "class_method_signature": "LRUCache.evict()", "testcase": false, "constructor": false}, {"identifier": "addNewNode", "parameters": "(CacheNode<CacheKeyType, CacheValueType> node)", "modifiers": "private", "return": "void", "signature": "void addNewNode(CacheNode<CacheKeyType, CacheValueType> node)", "full_signature": "private void addNewNode(CacheNode<CacheKeyType, CacheValueType> node)", "class_method_signature": "LRUCache.addNewNode(CacheNode<CacheKeyType, CacheValueType> node)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/kowshik/bigo/cache/LRUCache.java"}, "focal_method": {"identifier": "get", "parameters": "(CacheKeyType key)", "modifiers": "@Override public", "return": "CacheValueType", "body": "@Override\n\tpublic CacheValueType get(CacheKeyType key) {\n\t\tif (!cache.containsKey(key)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tCacheNode<CacheKeyType, CacheValueType> node = cache.get(key);\n\t\tmoveNodeToLast(node);\n\n\t\treturn node.getValue();\n\t}", "signature": "CacheValueType get(CacheKeyType key)", "full_signature": "@Override public CacheValueType get(CacheKeyType key)", "class_method_signature": "LRUCache.get(CacheKeyType key)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "moveNodeToLast", "getValue"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}