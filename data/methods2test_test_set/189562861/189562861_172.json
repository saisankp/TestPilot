{"test_class": {"identifier": "FstObjectOutputTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FstObjectOutput fstObjectOutput;", "modifier": "private", "type": "FstObjectOutput", "declarator": "fstObjectOutput", "var_name": "fstObjectOutput"}, {"original_string": "private FstObjectInput fstObjectInput;", "modifier": "private", "type": "FstObjectInput", "declarator": "fstObjectInput", "var_name": "fstObjectInput"}, {"original_string": "private ByteArrayOutputStream byteArrayOutputStream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "byteArrayOutputStream", "var_name": "byteArrayOutputStream"}, {"original_string": "private ByteArrayInputStream byteArrayInputStream;", "modifier": "private", "type": "ByteArrayInputStream", "declarator": "byteArrayInputStream", "var_name": "byteArrayInputStream"}], "file": "dubbo-serialization/dubbo-serialization-fst/src/test/java/com/alibaba/dubbo/common/serialize/fst/FstObjectOutputTest.java"}, "test_case": {"identifier": "testWriteByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWriteByte() throws IOException {\n        this.fstObjectOutput.writeByte((byte) 222);\n        this.flushToInput();\n\n        Byte result = this.fstObjectInput.readByte();\n        assertThat(result, is(((byte) 222)));\n    }", "signature": "void testWriteByte()", "full_signature": "@Test public void testWriteByte()", "class_method_signature": "FstObjectOutputTest.testWriteByte()", "testcase": true, "constructor": false, "invocations": ["writeByte", "flushToInput", "readByte", "assertThat", "is"]}, "focal_class": {"identifier": "FstObjectOutput", "superclass": "", "interfaces": "implements ObjectOutput", "fields": [{"original_string": "private FSTObjectOutput output;", "modifier": "private", "type": "FSTObjectOutput", "declarator": "output", "var_name": "output"}], "methods": [{"identifier": "FstObjectOutput", "parameters": "(OutputStream outputStream)", "modifiers": "public", "return": "", "signature": " FstObjectOutput(OutputStream outputStream)", "full_signature": "public  FstObjectOutput(OutputStream outputStream)", "class_method_signature": "FstObjectOutput.FstObjectOutput(OutputStream outputStream)", "testcase": false, "constructor": true}, {"identifier": "writeBool", "parameters": "(boolean v)", "modifiers": "@Override public", "return": "void", "signature": "void writeBool(boolean v)", "full_signature": "@Override public void writeBool(boolean v)", "class_method_signature": "FstObjectOutput.writeBool(boolean v)", "testcase": false, "constructor": false}, {"identifier": "writeByte", "parameters": "(byte v)", "modifiers": "@Override public", "return": "void", "signature": "void writeByte(byte v)", "full_signature": "@Override public void writeByte(byte v)", "class_method_signature": "FstObjectOutput.writeByte(byte v)", "testcase": false, "constructor": false}, {"identifier": "writeShort", "parameters": "(short v)", "modifiers": "@Override public", "return": "void", "signature": "void writeShort(short v)", "full_signature": "@Override public void writeShort(short v)", "class_method_signature": "FstObjectOutput.writeShort(short v)", "testcase": false, "constructor": false}, {"identifier": "writeInt", "parameters": "(int v)", "modifiers": "@Override public", "return": "void", "signature": "void writeInt(int v)", "full_signature": "@Override public void writeInt(int v)", "class_method_signature": "FstObjectOutput.writeInt(int v)", "testcase": false, "constructor": false}, {"identifier": "writeLong", "parameters": "(long v)", "modifiers": "@Override public", "return": "void", "signature": "void writeLong(long v)", "full_signature": "@Override public void writeLong(long v)", "class_method_signature": "FstObjectOutput.writeLong(long v)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(float v)", "modifiers": "@Override public", "return": "void", "signature": "void writeFloat(float v)", "full_signature": "@Override public void writeFloat(float v)", "class_method_signature": "FstObjectOutput.writeFloat(float v)", "testcase": false, "constructor": false}, {"identifier": "writeDouble", "parameters": "(double v)", "modifiers": "@Override public", "return": "void", "signature": "void writeDouble(double v)", "full_signature": "@Override public void writeDouble(double v)", "class_method_signature": "FstObjectOutput.writeDouble(double v)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(byte[] v)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(byte[] v)", "full_signature": "@Override public void writeBytes(byte[] v)", "class_method_signature": "FstObjectOutput.writeBytes(byte[] v)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(byte[] v, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(byte[] v, int off, int len)", "full_signature": "@Override public void writeBytes(byte[] v, int off, int len)", "class_method_signature": "FstObjectOutput.writeBytes(byte[] v, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "writeUTF", "parameters": "(String v)", "modifiers": "@Override public", "return": "void", "signature": "void writeUTF(String v)", "full_signature": "@Override public void writeUTF(String v)", "class_method_signature": "FstObjectOutput.writeUTF(String v)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(Object v)", "modifiers": "@Override public", "return": "void", "signature": "void writeObject(Object v)", "full_signature": "@Override public void writeObject(Object v)", "class_method_signature": "FstObjectOutput.writeObject(Object v)", "testcase": false, "constructor": false}, {"identifier": "flushBuffer", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flushBuffer()", "full_signature": "@Override public void flushBuffer()", "class_method_signature": "FstObjectOutput.flushBuffer()", "testcase": false, "constructor": false}], "file": "dubbo-serialization/dubbo-serialization-fst/src/main/java/com/alibaba/dubbo/common/serialize/fst/FstObjectOutput.java"}, "focal_method": {"identifier": "writeByte", "parameters": "(byte v)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeByte(byte v) throws IOException {\n        output.writeByte(v);\n    }", "signature": "void writeByte(byte v)", "full_signature": "@Override public void writeByte(byte v)", "class_method_signature": "FstObjectOutput.writeByte(byte v)", "testcase": false, "constructor": false, "invocations": ["writeByte"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}