{"test_class": {"identifier": "urn_perun_user_attribute_def_virt_userCertificatesLimitedTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_attribute_def_virt_userCertificatesLimited classInstance;", "modifier": "private static", "type": "urn_perun_user_attribute_def_virt_userCertificatesLimited", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private static PerunSessionImpl session;", "modifier": "private static", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private static User user;", "modifier": "private static", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private static Attribute mockedCertificateAttribute;", "modifier": "private static", "type": "Attribute", "declarator": "mockedCertificateAttribute", "var_name": "mockedCertificateAttribute"}, {"original_string": "private static Attribute mockedExpirationsAttribute;", "modifier": "private static", "type": "Attribute", "declarator": "mockedExpirationsAttribute", "var_name": "mockedExpirationsAttribute"}, {"original_string": "private static Attribute virtAttributeCertificates;", "modifier": "private static", "type": "Attribute", "declarator": "virtAttributeCertificates", "var_name": "virtAttributeCertificates"}, {"original_string": "private AttributesManagerBl am;", "modifier": "private", "type": "AttributesManagerBl", "declarator": "am", "var_name": "am"}, {"original_string": "private static String newestCertificate = \"-----BEGIN CERTIFICATE-----\\n\" +\n\t\t\"MIIDrTCCApWgAwIBAgIUFTbqf5jA2frptU28GUTkSBxrOBgwDQYJKoZIhvcNAQEL\\n\" +\n\t\t\"BQAwZjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\\n\" +\n\t\t\"GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEfMB0GCSqGSIb3DQEJARYQdGVzdEBl\\n\" +\n\t\t\"eGFtcGxlLm9yZzAeFw0yMDA1MTkwODU4NDRaFw0yMTA1MTkwODU4NDRaMGYxCzAJ\\n\" +\n\t\t\"BgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5l\\n\" +\n\t\t\"dCBXaWRnaXRzIFB0eSBMdGQxHzAdBgkqhkiG9w0BCQEWEHRlc3RAZXhhbXBsZS5v\\n\" +\n\t\t\"cmcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCO7ZeN17P22MiANgc\\n\" +\n\t\t\"NTubgaq21P/prLMPmmN8nIBNkX0Dcc3CxHglx279kcdd8l9VG7f09hsWlnMp/0Xc\\n\" +\n\t\t\"Iu8KGnQ/Q2IqRhmlUjHi0LMR069b/hbF6LPr5qJvQ9B9FK8DB0cWSm5zJIQPktce\\n\" +\n\t\t\"GHGCxAzMYcnGf4yQYyVbM/AiGlwJJlT12mwksw7Ao+KxkFA6oqUz2fsFs6d20cBf\\n\" +\n\t\t\"sRRRh0f4e6Z9ryAK5/bGWnSpdT/pSkNH/QB1ouHmyHWaiL31uUm5RbDRZ6hyUfZP\\n\" +\n\t\t\"roI0K/8aM0crzhkE5Rfznzx/LoxhWY/QzR6duDtjioMVqrqug2SGBD50DYC4UVDP\\n\" +\n\t\t\"PNUzAgMBAAGjUzBRMB0GA1UdDgQWBBRnyiUGT1e2PDLOXkiN//LgVTEPlzAfBgNV\\n\" +\n\t\t\"HSMEGDAWgBRnyiUGT1e2PDLOXkiN//LgVTEPlzAPBgNVHRMBAf8EBTADAQH/MA0G\\n\" +\n\t\t\"CSqGSIb3DQEBCwUAA4IBAQAMqbSmVvelG+tlx14/wVCIgvY5oBJ4ianz9HUJvO/W\\n\" +\n\t\t\"42TPACCtAnDHv0f9oez7osydP6ZnFXVOMavC8XNAivyapvxtnlfMW7siNB/i+0dP\\n\" +\n\t\t\"IV61Wp2bzkFM+CP2Bz/khwdbnjQ8PrBeRJUw54P2Be96GEVONHlxMBY5RkFRnmGT\\n\" +\n\t\t\"LCntxIT7tYW+HbpwCG3tbB5tZKnunEUUka9QWu1Ddj0IqOVsw4tCwbmNKFzMATBN\\n\" +\n\t\t\"scfCfD7TXfR77CKS7LJxqZofHWp25+4ybNYV2LjvTL1W9EiMgX+RXSR+crpQ5X69\\n\" +\n\t\t\"rO+rrGm1X0tBAiDz1CVvAEX8d8PxKaVd7MTWG42Jjqd8\\n\" +\n\t\t\"-----END CERTIFICATE-----\";", "modifier": "private static", "type": "String", "declarator": "newestCertificate = \"-----BEGIN CERTIFICATE-----\\n\" +\n\t\t\"MIIDrTCCApWgAwIBAgIUFTbqf5jA2frptU28GUTkSBxrOBgwDQYJKoZIhvcNAQEL\\n\" +\n\t\t\"BQAwZjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\\n\" +\n\t\t\"GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEfMB0GCSqGSIb3DQEJARYQdGVzdEBl\\n\" +\n\t\t\"eGFtcGxlLm9yZzAeFw0yMDA1MTkwODU4NDRaFw0yMTA1MTkwODU4NDRaMGYxCzAJ\\n\" +\n\t\t\"BgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5l\\n\" +\n\t\t\"dCBXaWRnaXRzIFB0eSBMdGQxHzAdBgkqhkiG9w0BCQEWEHRlc3RAZXhhbXBsZS5v\\n\" +\n\t\t\"cmcwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCO7ZeN17P22MiANgc\\n\" +\n\t\t\"NTubgaq21P/prLMPmmN8nIBNkX0Dcc3CxHglx279kcdd8l9VG7f09hsWlnMp/0Xc\\n\" +\n\t\t\"Iu8KGnQ/Q2IqRhmlUjHi0LMR069b/hbF6LPr5qJvQ9B9FK8DB0cWSm5zJIQPktce\\n\" +\n\t\t\"GHGCxAzMYcnGf4yQYyVbM/AiGlwJJlT12mwksw7Ao+KxkFA6oqUz2fsFs6d20cBf\\n\" +\n\t\t\"sRRRh0f4e6Z9ryAK5/bGWnSpdT/pSkNH/QB1ouHmyHWaiL31uUm5RbDRZ6hyUfZP\\n\" +\n\t\t\"roI0K/8aM0crzhkE5Rfznzx/LoxhWY/QzR6duDtjioMVqrqug2SGBD50DYC4UVDP\\n\" +\n\t\t\"PNUzAgMBAAGjUzBRMB0GA1UdDgQWBBRnyiUGT1e2PDLOXkiN//LgVTEPlzAfBgNV\\n\" +\n\t\t\"HSMEGDAWgBRnyiUGT1e2PDLOXkiN//LgVTEPlzAPBgNVHRMBAf8EBTADAQH/MA0G\\n\" +\n\t\t\"CSqGSIb3DQEBCwUAA4IBAQAMqbSmVvelG+tlx14/wVCIgvY5oBJ4ianz9HUJvO/W\\n\" +\n\t\t\"42TPACCtAnDHv0f9oez7osydP6ZnFXVOMavC8XNAivyapvxtnlfMW7siNB/i+0dP\\n\" +\n\t\t\"IV61Wp2bzkFM+CP2Bz/khwdbnjQ8PrBeRJUw54P2Be96GEVONHlxMBY5RkFRnmGT\\n\" +\n\t\t\"LCntxIT7tYW+HbpwCG3tbB5tZKnunEUUka9QWu1Ddj0IqOVsw4tCwbmNKFzMATBN\\n\" +\n\t\t\"scfCfD7TXfR77CKS7LJxqZofHWp25+4ybNYV2LjvTL1W9EiMgX+RXSR+crpQ5X69\\n\" +\n\t\t\"rO+rrGm1X0tBAiDz1CVvAEX8d8PxKaVd7MTWG42Jjqd8\\n\" +\n\t\t\"-----END CERTIFICATE-----\"", "var_name": "newestCertificate"}, {"original_string": "private static String oldestCertificate = \"-----BEGIN CERTIFICATE-----\\n\" +\n\t\t\"MIIDrTCCApWgAwIBAgIUIUUTLFEn1nXnGwjjdmQPnNSqhrUwDQYJKoZIhvcNAQEL\\n\" +\n\t\t\"BQAwZjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\\n\" +\n\t\t\"GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEfMB0GCSqGSIb3DQEJARYQdGVzdEBl\\n\" +\n\t\t\"eGFtcGxlLmNvbTAeFw0yMDA1MTkwOTAwMjBaFw0yMTAzMTUwOTAwMjBaMGYxCzAJ\\n\" +\n\t\t\"BgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5l\\n\" +\n\t\t\"dCBXaWRnaXRzIFB0eSBMdGQxHzAdBgkqhkiG9w0BCQEWEHRlc3RAZXhhbXBsZS5j\\n\" +\n\t\t\"b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtAf09xp+fdMWZ0KNq\\n\" +\n\t\t\"Z09sbF/CX5FdYgQJnv0WSqqvZ+zZr3ubnKQWCQxUdc95nerBedmZXwRrJ4cK3O66\\n\" +\n\t\t\"J3+XjmB0hpHXYKtvdEkv7ZjSOLHu16HdFNqlMqJQiBN5O4bXQneyQ1JhGIDn/waY\\n\" +\n\t\t\"L8101D5j17N37h6jcvmMBnwH73pX//CBuy8mJgLlJ+wA4TQSvBRIaeNy6x5vgXa7\\n\" +\n\t\t\"XZYIB8jv7Ha5hbwkoOr4wlK7NNhFSH/gRilNi9FfjK5JT75nOS+zsYSzT9k5I5q/\\n\" +\n\t\t\"NUTKCyfdmmKg6UlcMF9Mj4BjoUQwoJjKqcF1fZ8VT/YqMGtvn5bu411W2NTP+3uF\\n\" +\n\t\t\"fJ+BAgMBAAGjUzBRMB0GA1UdDgQWBBRkx2Or10CqbtqupNj68hXXQHDEbTAfBgNV\\n\" +\n\t\t\"HSMEGDAWgBRkx2Or10CqbtqupNj68hXXQHDEbTAPBgNVHRMBAf8EBTADAQH/MA0G\\n\" +\n\t\t\"CSqGSIb3DQEBCwUAA4IBAQALSOwB8PlOaJUIZ+D6tqFhv+BTUMSeGfKytRF34fVS\\n\" +\n\t\t\"hVu690aOC5zS4NPVp/67bZxG60MY/NG5k1PUzfSpZ0ys4wYDUmY72PlZ+JosPu9I\\n\" +\n\t\t\"2EN5gYRrhScEuoO2LZO9O+HPxqpr6h2+9tCU7ise3yxnqqt9GZmlrfeC32eAJ9HC\\n\" +\n\t\t\"43FDhimZitLMbFOcywtqBFKEMtZicSDszdO9fWSx5Q2NZ2sVvwEv813B2ld2VUE+\\n\" +\n\t\t\"0+pyHkZfX26B2mwtqbcq6QBfDmR4PVYs6aIF9j5GP3JZvYNEovSNeIXfDMkql9Xh\\n\" +\n\t\t\"Xk4L/AAyBQfje3i9pwveR6So3MUB4ikDH/elRTPT45rB\\n\" +\n\t\t\"-----END CERTIFICATE-----\";", "modifier": "private static", "type": "String", "declarator": "oldestCertificate = \"-----BEGIN CERTIFICATE-----\\n\" +\n\t\t\"MIIDrTCCApWgAwIBAgIUIUUTLFEn1nXnGwjjdmQPnNSqhrUwDQYJKoZIhvcNAQEL\\n\" +\n\t\t\"BQAwZjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\\n\" +\n\t\t\"GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEfMB0GCSqGSIb3DQEJARYQdGVzdEBl\\n\" +\n\t\t\"eGFtcGxlLmNvbTAeFw0yMDA1MTkwOTAwMjBaFw0yMTAzMTUwOTAwMjBaMGYxCzAJ\\n\" +\n\t\t\"BgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5l\\n\" +\n\t\t\"dCBXaWRnaXRzIFB0eSBMdGQxHzAdBgkqhkiG9w0BCQEWEHRlc3RAZXhhbXBsZS5j\\n\" +\n\t\t\"b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtAf09xp+fdMWZ0KNq\\n\" +\n\t\t\"Z09sbF/CX5FdYgQJnv0WSqqvZ+zZr3ubnKQWCQxUdc95nerBedmZXwRrJ4cK3O66\\n\" +\n\t\t\"J3+XjmB0hpHXYKtvdEkv7ZjSOLHu16HdFNqlMqJQiBN5O4bXQneyQ1JhGIDn/waY\\n\" +\n\t\t\"L8101D5j17N37h6jcvmMBnwH73pX//CBuy8mJgLlJ+wA4TQSvBRIaeNy6x5vgXa7\\n\" +\n\t\t\"XZYIB8jv7Ha5hbwkoOr4wlK7NNhFSH/gRilNi9FfjK5JT75nOS+zsYSzT9k5I5q/\\n\" +\n\t\t\"NUTKCyfdmmKg6UlcMF9Mj4BjoUQwoJjKqcF1fZ8VT/YqMGtvn5bu411W2NTP+3uF\\n\" +\n\t\t\"fJ+BAgMBAAGjUzBRMB0GA1UdDgQWBBRkx2Or10CqbtqupNj68hXXQHDEbTAfBgNV\\n\" +\n\t\t\"HSMEGDAWgBRkx2Or10CqbtqupNj68hXXQHDEbTAPBgNVHRMBAf8EBTADAQH/MA0G\\n\" +\n\t\t\"CSqGSIb3DQEBCwUAA4IBAQALSOwB8PlOaJUIZ+D6tqFhv+BTUMSeGfKytRF34fVS\\n\" +\n\t\t\"hVu690aOC5zS4NPVp/67bZxG60MY/NG5k1PUzfSpZ0ys4wYDUmY72PlZ+JosPu9I\\n\" +\n\t\t\"2EN5gYRrhScEuoO2LZO9O+HPxqpr6h2+9tCU7ise3yxnqqt9GZmlrfeC32eAJ9HC\\n\" +\n\t\t\"43FDhimZitLMbFOcywtqBFKEMtZicSDszdO9fWSx5Q2NZ2sVvwEv813B2ld2VUE+\\n\" +\n\t\t\"0+pyHkZfX26B2mwtqbcq6QBfDmR4PVYs6aIF9j5GP3JZvYNEovSNeIXfDMkql9Xh\\n\" +\n\t\t\"Xk4L/AAyBQfje3i9pwveR6So3MUB4ikDH/elRTPT45rB\\n\" +\n\t\t\"-----END CERTIFICATE-----\"", "var_name": "oldestCertificate"}, {"original_string": "private static Map<String, String> moreCertificates = generateMoreThanTenCertificates();", "modifier": "private static", "type": "Map<String, String>", "declarator": "moreCertificates = generateMoreThanTenCertificates()", "var_name": "moreCertificates"}, {"original_string": "private static Map<String, String> lessCertificates = generateLessThanTenCertificates();", "modifier": "private static", "type": "Map<String, String>", "declarator": "lessCertificates = generateLessThanTenCertificates()", "var_name": "lessCertificates"}, {"original_string": "private static Map<String, String> moreCertsExpiration = ModulesUtilsBlImpl.retrieveCertificatesExpiration(moreCertificates);", "modifier": "private static", "type": "Map<String, String>", "declarator": "moreCertsExpiration = ModulesUtilsBlImpl.retrieveCertificatesExpiration(moreCertificates)", "var_name": "moreCertsExpiration"}, {"original_string": "private static Map<String, String> lessCertsExpiration = ModulesUtilsBlImpl.retrieveCertificatesExpiration(lessCertificates);", "modifier": "private static", "type": "Map<String, String>", "declarator": "lessCertsExpiration = ModulesUtilsBlImpl.retrieveCertificatesExpiration(lessCertificates)", "var_name": "lessCertsExpiration"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_userCertificatesLimitedTest.java"}, "test_case": {"identifier": "testGetAttributeValueWithMoreThanTen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAttributeValueWithMoreThanTen() {\n\t\tSystem.out.println(\"testGetAttributeValueWithMoreThanTen()\");\n\n\t\twhen(mockedCertificateAttribute.valueAsMap()).thenReturn((LinkedHashMap<String, String>) moreCertificates);\n\t\twhen(mockedExpirationsAttribute.valueAsMap()).thenReturn((LinkedHashMap<String, String>) moreCertsExpiration);\n\n\t\tList<String> result = classInstance.getAttributeValue(session, user, virtAttributeCertificates).valueAsList();\n\n\t\tassertFalse(result.contains(oldestCertificate));\n\t}", "signature": "void testGetAttributeValueWithMoreThanTen()", "full_signature": "@Test public void testGetAttributeValueWithMoreThanTen()", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimitedTest.testGetAttributeValueWithMoreThanTen()", "testcase": true, "constructor": false, "invocations": ["println", "thenReturn", "when", "valueAsMap", "thenReturn", "when", "valueAsMap", "valueAsList", "getAttributeValue", "assertFalse", "contains"]}, "focal_class": {"identifier": "urn_perun_user_attribute_def_virt_userCertificatesLimited", "superclass": "extends UserVirtualAttributesModuleAbstract", "interfaces": "implements UserVirtualAttributesModuleImplApi", "fields": [], "methods": [{"identifier": "getAttributeValue", "parameters": "(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "full_signature": "@Override public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimited.getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "testcase": false, "constructor": false}, {"identifier": "getUserCertsAttribute", "parameters": "(PerunSessionImpl sess, User user)", "modifiers": "private", "return": "Attribute", "signature": "Attribute getUserCertsAttribute(PerunSessionImpl sess, User user)", "full_signature": "private Attribute getUserCertsAttribute(PerunSessionImpl sess, User user)", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimited.getUserCertsAttribute(PerunSessionImpl sess, User user)", "testcase": false, "constructor": false}, {"identifier": "getStrongDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getStrongDependencies()", "full_signature": "@Override public List<String> getStrongDependencies()", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimited.getStrongDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "@Override public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "@Override public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimited.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_userCertificatesLimited.java"}, "focal_method": {"identifier": "getAttributeValue", "parameters": "(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "modifiers": "@Override public", "return": "Attribute", "body": "@Override\n\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) {\n\t\tAttribute resultAttribute = new Attribute(attributeDefinition);\n\t\tList<String> result = new ArrayList<>();\n\n\t\tAttribute userCertsAttribute = getUserCertsAttribute(sess, user);\n\t\tMap<String,String> certs = userCertsAttribute.valueAsMap();\n\t\tif (certs != null) {\n\t\t\tMap<String, String> certsExpiration = ModulesUtilsBlImpl.retrieveCertificatesExpiration(certs);\n\n\t\t\tDateFormat dateFormatInstance = DateFormat.getDateInstance();\n\n\t\t\tMap<String, Long> certsExpirationInMilliSeconds = new HashMap<>();\n\t\t\tcertsExpiration.forEach((key, value) -> {\n\t\t\t\ttry {\n\t\t\t\t\tcertsExpirationInMilliSeconds.put(key, dateFormatInstance.parse(value).getTime());\n\t\t\t\t} catch (ParseException ex) {\n\t\t\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcertsExpirationInMilliSeconds.entrySet().stream()\n\t\t\t\t.sorted(Collections.reverseOrder(Map.Entry.comparingByValue()))\n\t\t\t\t.limit(10)\n\t\t\t\t.forEachOrdered(entry -> result.add(certs.get(entry.getKey())));\n\n\t\t\tUtils.copyAttributeToViAttributeWithoutValue(userCertsAttribute, resultAttribute);\n\t\t}\n\n\t\tresultAttribute.setValue(result);\n\n\t\treturn resultAttribute;\n\t}", "signature": "Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "full_signature": "@Override public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "class_method_signature": "urn_perun_user_attribute_def_virt_userCertificatesLimited.getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition)", "testcase": false, "constructor": false, "invocations": ["getUserCertsAttribute", "valueAsMap", "retrieveCertificatesExpiration", "getDateInstance", "forEach", "put", "getTime", "parse", "forEachOrdered", "limit", "sorted", "stream", "entrySet", "reverseOrder", "comparingByValue", "add", "get", "getKey", "copyAttributeToViAttributeWithoutValue", "setValue"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}