{"test_class": {"identifier": "DroolsConceptServiceTest", "superclass": "extends BaseServiceTest", "interfaces": "", "fields": [{"original_string": "private DroolsConceptService droolsConceptService;", "modifier": "private", "type": "DroolsConceptService", "declarator": "droolsConceptService", "var_name": "droolsConceptService"}], "file": "snomed-drools-rf2-validator/src/test/java/org/ihtsdo/drools/validator/rf2/service/DroolsConceptServiceTest.java"}, "test_case": {"identifier": "testFindTopLevelHierachiesOfConcept", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindTopLevelHierachiesOfConcept() {\n        Concept concept = new DroolsConcept(\"1263005\", true, \"900000000000207008\", \"900000000000073002\", true, true);\n        Set<String> results = droolsConceptService.findTopLevelHierarchiesOfConcept(concept);\n        Assert.assertEquals(1, results.size());\n        Assert.assertTrue(results.contains(\"123037004\"));\n    }", "signature": "void testFindTopLevelHierachiesOfConcept()", "full_signature": "@Test public void testFindTopLevelHierachiesOfConcept()", "class_method_signature": "DroolsConceptServiceTest.testFindTopLevelHierachiesOfConcept()", "testcase": true, "constructor": false, "invocations": ["findTopLevelHierarchiesOfConcept", "assertEquals", "size", "assertTrue", "contains"]}, "focal_class": {"identifier": "DroolsConceptService", "superclass": "", "interfaces": "implements ConceptService", "fields": [{"original_string": "private final SnomedDroolsComponentRepository repository;", "modifier": "private final", "type": "SnomedDroolsComponentRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "DroolsConceptService", "parameters": "(SnomedDroolsComponentRepository repository)", "modifiers": "public", "return": "", "signature": " DroolsConceptService(SnomedDroolsComponentRepository repository)", "full_signature": "public  DroolsConceptService(SnomedDroolsComponentRepository repository)", "class_method_signature": "DroolsConceptService.DroolsConceptService(SnomedDroolsComponentRepository repository)", "testcase": false, "constructor": true}, {"identifier": "isActive", "parameters": "(String conceptId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isActive(String conceptId)", "full_signature": "@Override public boolean isActive(String conceptId)", "class_method_signature": "DroolsConceptService.isActive(String conceptId)", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(String conceptId)", "modifiers": "@Override public", "return": "Concept", "signature": "Concept findById(String conceptId)", "full_signature": "@Override public Concept findById(String conceptId)", "class_method_signature": "DroolsConceptService.findById(String conceptId)", "testcase": false, "constructor": false}, {"identifier": "getAllTopLevelHierarchies", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAllTopLevelHierarchies()", "full_signature": "@Override public Set<String> getAllTopLevelHierarchies()", "class_method_signature": "DroolsConceptService.getAllTopLevelHierarchies()", "testcase": false, "constructor": false}, {"identifier": "findStatedAncestorsOfConcept", "parameters": "(Concept concept)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> findStatedAncestorsOfConcept(Concept concept)", "full_signature": "@Override public Set<String> findStatedAncestorsOfConcept(Concept concept)", "class_method_signature": "DroolsConceptService.findStatedAncestorsOfConcept(Concept concept)", "testcase": false, "constructor": false}, {"identifier": "findTopLevelHierarchiesOfConcept", "parameters": "(Concept concept)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> findTopLevelHierarchiesOfConcept(Concept concept)", "full_signature": "@Override public Set<String> findTopLevelHierarchiesOfConcept(Concept concept)", "class_method_signature": "DroolsConceptService.findTopLevelHierarchiesOfConcept(Concept concept)", "testcase": false, "constructor": false}, {"identifier": "findStatedAncestorsOfConcepts", "parameters": "(List<String> conceptIds)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> findStatedAncestorsOfConcepts(List<String> conceptIds)", "full_signature": "@Override public Set<String> findStatedAncestorsOfConcepts(List<String> conceptIds)", "class_method_signature": "DroolsConceptService.findStatedAncestorsOfConcepts(List<String> conceptIds)", "testcase": false, "constructor": false}], "file": "snomed-drools-rf2-validator/src/main/java/org/ihtsdo/drools/validator/rf2/service/DroolsConceptService.java"}, "focal_method": {"identifier": "findTopLevelHierarchiesOfConcept", "parameters": "(Concept concept)", "modifiers": "@Override public", "return": "Set<String>", "body": "@Override\n\tpublic Set<String> findTopLevelHierarchiesOfConcept(Concept concept) {\n\t\tDroolsConcept droolsConcept = repository.getConcept(concept.getId());\n\t\tSet<String> resultSet = new HashSet<>();\n\t\tfor (DroolsRelationship relationship : droolsConcept.getRelationships()) {\n\t\t\tif(relationship.isActive() && Constants.IS_A.equals(relationship.getTypeId())\n\t\t\t\t\t&& Constants.STATED_RELATIONSHIP.equals(relationship.getCharacteristicTypeId())) {\n\t\t\t\tif(Constants.ROOT_CONCEPT.equals(relationship.getDestinationId())) {\n\t\t\t\t\tresultSet.add(relationship.getSourceId());\n\t\t\t\t} else {\n\t\t\t\t\tresultSet.addAll(findTopLevelHierarchiesOfConcept(repository.getConcept(relationship.getDestinationId())));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn resultSet;\n\t}", "signature": "Set<String> findTopLevelHierarchiesOfConcept(Concept concept)", "full_signature": "@Override public Set<String> findTopLevelHierarchiesOfConcept(Concept concept)", "class_method_signature": "DroolsConceptService.findTopLevelHierarchiesOfConcept(Concept concept)", "testcase": false, "constructor": false, "invocations": ["getConcept", "getId", "getRelationships", "isActive", "equals", "getTypeId", "equals", "getCharacteristicTypeId", "equals", "getDestinationId", "add", "getSourceId", "addAll", "findTopLevelHierarchiesOfConcept", "getConcept", "getDestinationId"]}, "repository": {"repo_id": 56342300, "url": "https://github.com/IHTSDO/snomed-drools", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 384, "license": "licensed"}}