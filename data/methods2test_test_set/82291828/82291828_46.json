{"test_class": {"identifier": "LouvainUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "algo/src/test/java/org/neo4j/graphalgo/impl/louvain/LouvainUtilsTest.java"}, "test_case": {"identifier": "differentNumbers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void differentNumbers() {\n        int[] communities = {10, 3, 4, 7, 6, 7, 10};\n        assertEquals(5, LouvainUtils.normalize(communities));\n        assertArrayEquals(new int[]{0, 1, 2, 3, 4, 3, 0}, communities);\n    }", "signature": "void differentNumbers()", "full_signature": "@Test public void differentNumbers()", "class_method_signature": "LouvainUtilsTest.differentNumbers()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "normalize", "assertArrayEquals"]}, "focal_class": {"identifier": "LouvainUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "normalize", "parameters": "(int[] communities)", "modifiers": "static", "return": "int", "signature": "int normalize(int[] communities)", "full_signature": "static int normalize(int[] communities)", "class_method_signature": "LouvainUtils.normalize(int[] communities)", "testcase": false, "constructor": false}], "file": "algo/src/main/java/org/neo4j/graphalgo/impl/louvain/LouvainUtils.java"}, "focal_method": {"identifier": "normalize", "parameters": "(int[] communities)", "modifiers": "static", "return": "int", "body": "static int normalize(int[] communities) {\n        final IntIntMap map = new IntIntScatterMap(communities.length);\n        int c = 0;\n        for (int i = 0; i < communities.length; i++) {\n            int mapped, community = communities[i];\n            if ((mapped = map.getOrDefault(community, -1)) != -1) {\n                communities[i] = mapped;\n            } else {\n                map.put(community, c);\n                communities[i] = c++;\n            }\n        }\n        return c;\n    }", "signature": "int normalize(int[] communities)", "full_signature": "static int normalize(int[] communities)", "class_method_signature": "LouvainUtils.normalize(int[] communities)", "testcase": false, "constructor": false, "invocations": ["getOrDefault", "put"]}, "repository": {"repo_id": 82291828, "url": "https://github.com/neo4j-contrib/neo4j-graph-algorithms", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 689, "size": 43359, "license": "licensed"}}