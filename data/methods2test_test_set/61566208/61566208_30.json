{"test_class": {"identifier": "CumulusCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SwitchNode s1, s2;", "modifier": "private", "type": "SwitchNode", "declarator": "s1", "var_name": "s1"}], "file": "modules/cumulus-switch/src/test/java/com/vmware/vrack/hms/switches/cumulus/util/CumulusCacheTest.java"}, "test_case": {"identifier": "testCumulusCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCumulusCache()\n    {\n        CumulusCache<String> stringCache = new CumulusCache<String>();\n        assertNotNull( stringCache );\n\n        stringCache.set( s1, \"Cached item\" );\n        assertFalse( stringCache.isStale( s1 ) );\n\n        assertNotNull( stringCache.get( s1 ) );\n        assertNull( stringCache.get( s2 ) );\n\n        stringCache.setExpiry( 1200 );\n        stringCache.setStale( s1 );\n        assertTrue( stringCache.isStale( s1 ) );\n    }", "signature": "void testCumulusCache()", "full_signature": "@Test public void testCumulusCache()", "class_method_signature": "CumulusCacheTest.testCumulusCache()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "set", "assertFalse", "isStale", "assertNotNull", "get", "assertNull", "get", "setExpiry", "setStale", "assertTrue", "isStale"]}, "focal_class": {"identifier": "CumulusCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long expiry;", "modifier": "private", "type": "long", "declarator": "expiry", "var_name": "expiry"}, {"original_string": "private volatile Map<SwitchNode, T> cacheMap;", "modifier": "private volatile", "type": "Map<SwitchNode, T>", "declarator": "cacheMap", "var_name": "cacheMap"}, {"original_string": "private volatile Map<SwitchNode, Long> cachedTimeMap;", "modifier": "private volatile", "type": "Map<SwitchNode, Long>", "declarator": "cachedTimeMap", "var_name": "cachedTimeMap"}, {"original_string": "@SuppressWarnings( \"unused\" )\n    private static Logger logger = Logger.getLogger( CumulusCache.class );", "modifier": "@SuppressWarnings( \"unused\" )\n    private static", "type": "Logger", "declarator": "logger = Logger.getLogger( CumulusCache.class )", "var_name": "logger"}], "methods": [{"identifier": "CumulusCache", "parameters": "()", "modifiers": "public", "return": "", "signature": " CumulusCache()", "full_signature": "public  CumulusCache()", "class_method_signature": "CumulusCache.CumulusCache()", "testcase": false, "constructor": true}, {"identifier": "CumulusCache", "parameters": "( long expiry )", "modifiers": "public", "return": "", "signature": " CumulusCache( long expiry )", "full_signature": "public  CumulusCache( long expiry )", "class_method_signature": "CumulusCache.CumulusCache( long expiry )", "testcase": false, "constructor": true}, {"identifier": "getExpiry", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getExpiry()", "full_signature": "public long getExpiry()", "class_method_signature": "CumulusCache.getExpiry()", "testcase": false, "constructor": false}, {"identifier": "setExpiry", "parameters": "( long expiry )", "modifiers": "public", "return": "void", "signature": "void setExpiry( long expiry )", "full_signature": "public void setExpiry( long expiry )", "class_method_signature": "CumulusCache.setExpiry( long expiry )", "testcase": false, "constructor": false}, {"identifier": "setStale", "parameters": "( SwitchNode node )", "modifiers": "public", "return": "void", "signature": "void setStale( SwitchNode node )", "full_signature": "public void setStale( SwitchNode node )", "class_method_signature": "CumulusCache.setStale( SwitchNode node )", "testcase": false, "constructor": false}, {"identifier": "isStale", "parameters": "( SwitchNode node )", "modifiers": "public", "return": "boolean", "signature": "boolean isStale( SwitchNode node )", "full_signature": "public boolean isStale( SwitchNode node )", "class_method_signature": "CumulusCache.isStale( SwitchNode node )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( SwitchNode node )", "modifiers": "public", "return": "T", "signature": "T get( SwitchNode node )", "full_signature": "public T get( SwitchNode node )", "class_method_signature": "CumulusCache.get( SwitchNode node )", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "( SwitchNode node, T data )", "modifiers": "public", "return": "void", "signature": "void set( SwitchNode node, T data )", "full_signature": "public void set( SwitchNode node, T data )", "class_method_signature": "CumulusCache.set( SwitchNode node, T data )", "testcase": false, "constructor": false}], "file": "modules/cumulus-switch/src/main/java/com/vmware/vrack/hms/switches/cumulus/util/CumulusCache.java"}, "focal_method": {"identifier": "CumulusCache", "parameters": "()", "modifiers": "public", "return": "", "body": "public CumulusCache()\n    {\n        this( 0 );\n    }", "signature": " CumulusCache()", "full_signature": "public  CumulusCache()", "class_method_signature": "CumulusCache.CumulusCache()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}