{"test_class": {"identifier": "KryoSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "PersistenceConfig POLYMORPHIC_CONFIG = new PersistenceConfig() {\n\n        @Override\n        public Class<? extends Annotation> annotationType() {\n            return PersistenceConfig.class;\n        }\n\n        @Override\n        public Class<? extends PojoSerializer> serializer() {\n            return KryoSerializer.class;\n        }\n\n        @Override\n        public boolean polymorphic() {\n            return true;\n        }\n    };", "modifier": "", "type": "PersistenceConfig", "declarator": "POLYMORPHIC_CONFIG = new PersistenceConfig() {\n\n        @Override\n        public Class<? extends Annotation> annotationType() {\n            return PersistenceConfig.class;\n        }\n\n        @Override\n        public Class<? extends PojoSerializer> serializer() {\n            return KryoSerializer.class;\n        }\n\n        @Override\n        public boolean polymorphic() {\n            return true;\n        }\n    }", "var_name": "POLYMORPHIC_CONFIG"}], "file": "code/src/test/java/com/googlecode/cqengine/persistence/support/serialization/KryoSerializerTest.java"}, "test_case": {"identifier": "testValidateHashCodeEquality", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testValidateHashCodeEquality() {\n        KryoSerializer.validateHashCodeEquality(1, 2);\n    }", "signature": "void testValidateHashCodeEquality()", "full_signature": "@Test(expected = IllegalStateException.class) public void testValidateHashCodeEquality()", "class_method_signature": "KryoSerializerTest.testValidateHashCodeEquality()", "testcase": true, "constructor": false, "invocations": ["validateHashCodeEquality"]}, "focal_class": {"identifier": "KryoSerializer", "superclass": "", "interfaces": "implements PojoSerializer<O>", "fields": [{"original_string": "protected final Class<O> objectType;", "modifier": "protected final", "type": "Class<O>", "declarator": "objectType", "var_name": "objectType"}, {"original_string": "protected final boolean polymorphic;", "modifier": "protected final", "type": "boolean", "declarator": "polymorphic", "var_name": "polymorphic"}, {"original_string": "protected final ThreadLocal<Kryo> kryoCache = new ThreadLocal<Kryo>() {\n        @Override\n        protected Kryo initialValue() {\n            return createKryo(objectType);\n        }\n    };", "modifier": "protected final", "type": "ThreadLocal<Kryo>", "declarator": "kryoCache = new ThreadLocal<Kryo>() {\n        @Override\n        protected Kryo initialValue() {\n            return createKryo(objectType);\n        }\n    }", "var_name": "kryoCache"}], "methods": [{"identifier": "KryoSerializer", "parameters": "(Class<O> objectType, PersistenceConfig persistenceConfig)", "modifiers": "public", "return": "", "signature": " KryoSerializer(Class<O> objectType, PersistenceConfig persistenceConfig)", "full_signature": "public  KryoSerializer(Class<O> objectType, PersistenceConfig persistenceConfig)", "class_method_signature": "KryoSerializer.KryoSerializer(Class<O> objectType, PersistenceConfig persistenceConfig)", "testcase": false, "constructor": true}, {"identifier": "createKryo", "parameters": "(Class<?> objectType)", "modifiers": "@SuppressWarnings({\"ArraysAsListWithZeroOrOneArgument\", \"WeakerAccess\"}) protected", "return": "Kryo", "signature": "Kryo createKryo(Class<?> objectType)", "full_signature": "@SuppressWarnings({\"ArraysAsListWithZeroOrOneArgument\", \"WeakerAccess\"}) protected Kryo createKryo(Class<?> objectType)", "class_method_signature": "KryoSerializer.createKryo(Class<?> objectType)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(O object)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] serialize(O object)", "full_signature": "@Override public byte[] serialize(O object)", "class_method_signature": "KryoSerializer.serialize(O object)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(byte[] bytes)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "O", "signature": "O deserialize(byte[] bytes)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public O deserialize(byte[] bytes)", "class_method_signature": "KryoSerializer.deserialize(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "validateObjectIsRoundTripSerializable", "parameters": "(O candidatePojo)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void validateObjectIsRoundTripSerializable(O candidatePojo)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void validateObjectIsRoundTripSerializable(O candidatePojo)", "class_method_signature": "KryoSerializer.validateObjectIsRoundTripSerializable(O candidatePojo)", "testcase": false, "constructor": false}, {"identifier": "validateObjectIsRoundTripSerializable", "parameters": "(O candidatePojo, Class<O> objectType, PersistenceConfig persistenceConfig)", "modifiers": "static", "return": "void", "signature": "void validateObjectIsRoundTripSerializable(O candidatePojo, Class<O> objectType, PersistenceConfig persistenceConfig)", "full_signature": "static void validateObjectIsRoundTripSerializable(O candidatePojo, Class<O> objectType, PersistenceConfig persistenceConfig)", "class_method_signature": "KryoSerializer.validateObjectIsRoundTripSerializable(O candidatePojo, Class<O> objectType, PersistenceConfig persistenceConfig)", "testcase": false, "constructor": false}, {"identifier": "validateObjectEquality", "parameters": "(Object candidate, Object deserializedPojo)", "modifiers": "static", "return": "void", "signature": "void validateObjectEquality(Object candidate, Object deserializedPojo)", "full_signature": "static void validateObjectEquality(Object candidate, Object deserializedPojo)", "class_method_signature": "KryoSerializer.validateObjectEquality(Object candidate, Object deserializedPojo)", "testcase": false, "constructor": false}, {"identifier": "validateHashCodeEquality", "parameters": "(Object candidate, Object deserializedPojo)", "modifiers": "static", "return": "void", "signature": "void validateHashCodeEquality(Object candidate, Object deserializedPojo)", "full_signature": "static void validateHashCodeEquality(Object candidate, Object deserializedPojo)", "class_method_signature": "KryoSerializer.validateHashCodeEquality(Object candidate, Object deserializedPojo)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/persistence/support/serialization/KryoSerializer.java"}, "focal_method": {"identifier": "validateHashCodeEquality", "parameters": "(Object candidate, Object deserializedPojo)", "modifiers": "static", "return": "void", "body": "static void validateHashCodeEquality(Object candidate, Object deserializedPojo) {\n        if (!(deserializedPojo.hashCode() == candidate.hashCode())) {\n            throw new IllegalStateException(\"The POJO's hashCode after round trip serialization differs from its original hashCode\");\n        }\n    }", "signature": "void validateHashCodeEquality(Object candidate, Object deserializedPojo)", "full_signature": "static void validateHashCodeEquality(Object candidate, Object deserializedPojo)", "class_method_signature": "KryoSerializer.validateHashCodeEquality(Object candidate, Object deserializedPojo)", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}