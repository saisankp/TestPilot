{"test_class": {"identifier": "ArrowLineLayerTest", "superclass": "extends BaseKujakuLayerTest", "interfaces": "", "fields": [{"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}], "file": "library/src/test/java/io/ona/kujaku/layers/ArrowLineLayerTest.java"}, "test_case": {"identifier": "removeLayerOnMapShouldReturnTrueWhenStyleIsReadyAndRemoveLayersAndSources", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeLayerOnMapShouldReturnTrueWhenStyleIsReadyAndRemoveLayersAndSources() throws InvalidArrowLineConfigException {\n        ArrayList<Feature> featuresList = new ArrayList<>();\n        FeatureCollection featureCollection = FeatureCollection.fromFeatures(featuresList);\n\n        ArrowLineLayer.FeatureConfig featureConfig = new ArrowLineLayer.FeatureConfig(featureCollection);\n        ArrowLineLayer.SortConfig sortConfig = new ArrowLineLayer.SortConfig(\"\", ArrowLineLayer.SortConfig.SortOrder.DESC, ArrowLineLayer.SortConfig.PropertyType.NUMBER);\n\n        ArrowLineLayer.Builder builder = new ArrowLineLayer.Builder(context, featureConfig, sortConfig);\n        ArrowLineLayer arrowLineLayer = builder.build();\n\n        MapboxMap mapboxMap = Mockito.mock(MapboxMap.class);\n        Style style = Mockito.mock(Style.class);\n\n        SymbolLayer arrowHeadLayer = Mockito.mock(SymbolLayer.class);\n        LineLayer lineLayer = Mockito.mock(LineLayer.class);\n        GeoJsonSource arrowHeadSource = new GeoJsonSource(\"some-id\");\n        GeoJsonSource lineLayerSource = new GeoJsonSource(\"some-id-2\");\n\n        Mockito.doReturn(true)\n                .when(style)\n                .isFullyLoaded();\n\n        Mockito.doReturn(style)\n                .when(mapboxMap)\n                .getStyle();\n\n        ReflectionHelpers.setField(arrowLineLayer, \"arrowHeadLayer\", arrowHeadLayer);\n        ReflectionHelpers.setField(arrowLineLayer, \"lineLayer\", lineLayer);\n        ReflectionHelpers.setField(arrowLineLayer, \"arrowHeadSource\", arrowHeadSource);\n        ReflectionHelpers.setField(arrowLineLayer, \"lineLayerSource\", lineLayerSource);\n\n        assertTrue(arrowLineLayer.removeLayerOnMap(mapboxMap));\n\n        Mockito.verify(style, Mockito.times(1))\n                .removeLayer(ArgumentMatchers.eq(arrowHeadLayer));\n        Mockito.verify(style, Mockito.times(1))\n                .removeLayer(ArgumentMatchers.eq(lineLayer));\n        Mockito.verify(style, Mockito.times(1))\n                .removeSource(ArgumentMatchers.eq(arrowHeadSource));\n        Mockito.verify(style, Mockito.times(1))\n                .removeSource(ArgumentMatchers.eq(lineLayerSource));\n    }", "signature": "void removeLayerOnMapShouldReturnTrueWhenStyleIsReadyAndRemoveLayersAndSources()", "full_signature": "@Test public void removeLayerOnMapShouldReturnTrueWhenStyleIsReadyAndRemoveLayersAndSources()", "class_method_signature": "ArrowLineLayerTest.removeLayerOnMapShouldReturnTrueWhenStyleIsReadyAndRemoveLayersAndSources()", "testcase": true, "constructor": false, "invocations": ["fromFeatures", "build", "mock", "mock", "mock", "mock", "isFullyLoaded", "when", "doReturn", "getStyle", "when", "doReturn", "setField", "setField", "setField", "setField", "assertTrue", "removeLayerOnMap", "removeLayer", "verify", "times", "eq", "removeLayer", "verify", "times", "eq", "removeSource", "verify", "times", "eq", "removeSource", "verify", "times", "eq"]}, "focal_class": {"identifier": "ArrowLineLayer", "superclass": "extends KujakuLayer", "interfaces": "", "fields": [{"original_string": "private static final String TAG = ArrowLineLayer.class.getName();", "modifier": "private static final", "type": "String", "declarator": "TAG = ArrowLineLayer.class.getName()", "var_name": "TAG"}, {"original_string": "public static final String ARROW_HEAD_BEARING = \"arrow-head-bearing\";", "modifier": "public static final", "type": "String", "declarator": "ARROW_HEAD_BEARING = \"arrow-head-bearing\"", "var_name": "ARROW_HEAD_BEARING"}, {"original_string": "private Builder builder;", "modifier": "private", "type": "Builder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private String LINE_LAYER_SOURCE_ID = UUID.randomUUID().toString();", "modifier": "private", "type": "String", "declarator": "LINE_LAYER_SOURCE_ID = UUID.randomUUID().toString()", "var_name": "LINE_LAYER_SOURCE_ID"}, {"original_string": "private String LINE_LAYER_ID = UUID.randomUUID().toString();", "modifier": "private", "type": "String", "declarator": "LINE_LAYER_ID = UUID.randomUUID().toString()", "var_name": "LINE_LAYER_ID"}, {"original_string": "private String ARROW_HEAD_LAYER_SOURCE_ID = UUID.randomUUID().toString();", "modifier": "private", "type": "String", "declarator": "ARROW_HEAD_LAYER_SOURCE_ID = UUID.randomUUID().toString()", "var_name": "ARROW_HEAD_LAYER_SOURCE_ID"}, {"original_string": "private String ARROW_HEAD_LAYER_ID = UUID.randomUUID().toString();", "modifier": "private", "type": "String", "declarator": "ARROW_HEAD_LAYER_ID = UUID.randomUUID().toString()", "var_name": "ARROW_HEAD_LAYER_ID"}, {"original_string": "private static final String ARROW_HEAD_ICON = \"arrow-head-icon\";", "modifier": "private static final", "type": "String", "declarator": "ARROW_HEAD_ICON = \"arrow-head-icon\"", "var_name": "ARROW_HEAD_ICON"}, {"original_string": "private GeoJsonSource lineLayerSource;", "modifier": "private", "type": "GeoJsonSource", "declarator": "lineLayerSource", "var_name": "lineLayerSource"}, {"original_string": "private LineLayer lineLayer;", "modifier": "private", "type": "LineLayer", "declarator": "lineLayer", "var_name": "lineLayer"}, {"original_string": "private GeoJsonSource arrowHeadSource;", "modifier": "private", "type": "GeoJsonSource", "declarator": "arrowHeadSource", "var_name": "arrowHeadSource"}, {"original_string": "private SymbolLayer arrowHeadLayer;", "modifier": "private", "type": "SymbolLayer", "declarator": "arrowHeadLayer", "var_name": "arrowHeadLayer"}, {"original_string": "public static final int MIN_ARROW_ZOOM = 10;", "modifier": "public static final", "type": "int", "declarator": "MIN_ARROW_ZOOM = 10", "var_name": "MIN_ARROW_ZOOM"}, {"original_string": "public static final int MAX_ARROW_ZOOM = 22;", "modifier": "public static final", "type": "int", "declarator": "MAX_ARROW_ZOOM = 22", "var_name": "MAX_ARROW_ZOOM"}, {"original_string": "public static final float MIN_ZOOM_ARROW_HEAD_SCALE = 0.5f;", "modifier": "public static final", "type": "float", "declarator": "MIN_ZOOM_ARROW_HEAD_SCALE = 0.5f", "var_name": "MIN_ZOOM_ARROW_HEAD_SCALE"}, {"original_string": "public static final float MAX_ZOOM_ARROW_HEAD_SCALE = 1.0f;", "modifier": "public static final", "type": "float", "declarator": "MAX_ZOOM_ARROW_HEAD_SCALE = 1.0f", "var_name": "MAX_ZOOM_ARROW_HEAD_SCALE"}], "methods": [{"identifier": "ArrowLineLayer", "parameters": "(@NonNull Builder builder)", "modifiers": "private", "return": "", "signature": " ArrowLineLayer(@NonNull Builder builder)", "full_signature": "private  ArrowLineLayer(@NonNull Builder builder)", "class_method_signature": "ArrowLineLayer.ArrowLineLayer(@NonNull Builder builder)", "testcase": false, "constructor": true}, {"identifier": "createLineLayerSource", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createLineLayerSource()", "full_signature": "private void createLineLayerSource()", "class_method_signature": "ArrowLineLayer.createLineLayerSource()", "testcase": false, "constructor": false}, {"identifier": "createArrowLineLayer", "parameters": "(@NonNull Builder builder)", "modifiers": "private", "return": "void", "signature": "void createArrowLineLayer(@NonNull Builder builder)", "full_signature": "private void createArrowLineLayer(@NonNull Builder builder)", "class_method_signature": "ArrowLineLayer.createArrowLineLayer(@NonNull Builder builder)", "testcase": false, "constructor": false}, {"identifier": "createArrowHeadLayer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createArrowHeadLayer()", "full_signature": "private void createArrowHeadLayer()", "class_method_signature": "ArrowLineLayer.createArrowHeadLayer()", "testcase": false, "constructor": false}, {"identifier": "createArrowHeadSource", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createArrowHeadSource()", "full_signature": "private void createArrowHeadSource()", "class_method_signature": "ArrowLineLayer.createArrowHeadSource()", "testcase": false, "constructor": false}, {"identifier": "getLineLayer", "parameters": "()", "modifiers": "public", "return": "LineLayer", "signature": "LineLayer getLineLayer()", "full_signature": "public LineLayer getLineLayer()", "class_method_signature": "ArrowLineLayer.getLineLayer()", "testcase": false, "constructor": false}, {"identifier": "getArrowHeadLayer", "parameters": "()", "modifiers": "public", "return": "SymbolLayer", "signature": "SymbolLayer getArrowHeadLayer()", "full_signature": "public SymbolLayer getArrowHeadLayer()", "class_method_signature": "ArrowLineLayer.getArrowHeadLayer()", "testcase": false, "constructor": false}, {"identifier": "addLayerToMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "@Override public", "return": "void", "signature": "void addLayerToMap(@NonNull MapboxMap mapboxMap)", "full_signature": "@Override public void addLayerToMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "ArrowLineLayer.addLayerToMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "enableLayerOnMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "@Override public", "return": "void", "signature": "void enableLayerOnMap(@NonNull MapboxMap mapboxMap)", "full_signature": "@Override public void enableLayerOnMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "ArrowLineLayer.enableLayerOnMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "disableLayerOnMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "@Override public", "return": "void", "signature": "void disableLayerOnMap(@NonNull MapboxMap mapboxMap)", "full_signature": "@Override public void disableLayerOnMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "ArrowLineLayer.disableLayerOnMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "getLayerIds", "parameters": "()", "modifiers": "@Override @NonNull public", "return": "String[]", "signature": "String[] getLayerIds()", "full_signature": "@Override @NonNull public String[] getLayerIds()", "class_method_signature": "ArrowLineLayer.getLayerIds()", "testcase": false, "constructor": false}, {"identifier": "removeLayerOnMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "full_signature": "@Override public boolean removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "ArrowLineLayer.removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "updateFeatures", "parameters": "(@NonNull FeatureCollection featureCollection)", "modifiers": "@Override public", "return": "void", "signature": "void updateFeatures(@NonNull FeatureCollection featureCollection)", "full_signature": "@Override public void updateFeatures(@NonNull FeatureCollection featureCollection)", "class_method_signature": "ArrowLineLayer.updateFeatures(@NonNull FeatureCollection featureCollection)", "testcase": false, "constructor": false}, {"identifier": "getBitmapFromDrawable", "parameters": "(Drawable drawable)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap getBitmapFromDrawable(Drawable drawable)", "full_signature": "private Bitmap getBitmapFromDrawable(Drawable drawable)", "class_method_signature": "ArrowLineLayer.getBitmapFromDrawable(Drawable drawable)", "testcase": false, "constructor": false}, {"identifier": "sortFeatures", "parameters": "(@NonNull FeatureCollection featureCollection, @NonNull SortConfig sortConfig)", "modifiers": "private", "return": "FeatureCollection", "signature": "FeatureCollection sortFeatures(@NonNull FeatureCollection featureCollection, @NonNull SortConfig sortConfig)", "full_signature": "private FeatureCollection sortFeatures(@NonNull FeatureCollection featureCollection, @NonNull SortConfig sortConfig)", "class_method_signature": "ArrowLineLayer.sortFeatures(@NonNull FeatureCollection featureCollection, @NonNull SortConfig sortConfig)", "testcase": false, "constructor": false}, {"identifier": "filterFeatures", "parameters": "(@NonNull FeatureConfig featureConfig, @Nullable SortConfig sortConfig)", "modifiers": "private", "return": "FeatureCollection", "signature": "FeatureCollection filterFeatures(@NonNull FeatureConfig featureConfig, @Nullable SortConfig sortConfig)", "full_signature": "private FeatureCollection filterFeatures(@NonNull FeatureConfig featureConfig, @Nullable SortConfig sortConfig)", "class_method_signature": "ArrowLineLayer.filterFeatures(@NonNull FeatureConfig featureConfig, @Nullable SortConfig sortConfig)", "testcase": false, "constructor": false}, {"identifier": "generateArrowHeadFeatureCollection", "parameters": "(@NonNull LineString lineString)", "modifiers": "private", "return": "FeatureCollection", "signature": "FeatureCollection generateArrowHeadFeatureCollection(@NonNull LineString lineString)", "full_signature": "private FeatureCollection generateArrowHeadFeatureCollection(@NonNull LineString lineString)", "class_method_signature": "ArrowLineLayer.generateArrowHeadFeatureCollection(@NonNull LineString lineString)", "testcase": false, "constructor": false}, {"identifier": "generateArrowHeadFeatureCollection", "parameters": "(@NonNull MultiLineString multiLineString)", "modifiers": "private", "return": "FeatureCollection", "signature": "FeatureCollection generateArrowHeadFeatureCollection(@NonNull MultiLineString multiLineString)", "full_signature": "private FeatureCollection generateArrowHeadFeatureCollection(@NonNull MultiLineString multiLineString)", "class_method_signature": "ArrowLineLayer.generateArrowHeadFeatureCollection(@NonNull MultiLineString multiLineString)", "testcase": false, "constructor": false}, {"identifier": "calculateLineString", "parameters": "(@NonNull FeatureCollection featureCollection)", "modifiers": "private", "return": "LineString", "signature": "LineString calculateLineString(@NonNull FeatureCollection featureCollection)", "full_signature": "private LineString calculateLineString(@NonNull FeatureCollection featureCollection)", "class_method_signature": "ArrowLineLayer.calculateLineString(@NonNull FeatureCollection featureCollection)", "testcase": false, "constructor": false}, {"identifier": "calculateMultiLineString", "parameters": "(@NonNull FeatureCollection featureCollection, @NonNull OneToManyConfig oneToManyConfig)", "modifiers": "private", "return": "MultiLineString", "signature": "MultiLineString calculateMultiLineString(@NonNull FeatureCollection featureCollection, @NonNull OneToManyConfig oneToManyConfig)", "full_signature": "private MultiLineString calculateMultiLineString(@NonNull FeatureCollection featureCollection, @NonNull OneToManyConfig oneToManyConfig)", "class_method_signature": "ArrowLineLayer.calculateMultiLineString(@NonNull FeatureCollection featureCollection, @NonNull OneToManyConfig oneToManyConfig)", "testcase": false, "constructor": false}, {"identifier": "getCenter", "parameters": "(@NonNull Geometry featureGeometry)", "modifiers": "public static", "return": "Point", "signature": "Point getCenter(@NonNull Geometry featureGeometry)", "full_signature": "public static Point getCenter(@NonNull Geometry featureGeometry)", "class_method_signature": "ArrowLineLayer.getCenter(@NonNull Geometry featureGeometry)", "testcase": false, "constructor": false}, {"identifier": "getFeatureCollection", "parameters": "()", "modifiers": "@Override public", "return": "FeatureCollection", "signature": "FeatureCollection getFeatureCollection()", "full_signature": "@Override public FeatureCollection getFeatureCollection()", "class_method_signature": "ArrowLineLayer.getFeatureCollection()", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/layers/ArrowLineLayer.java"}, "focal_method": {"identifier": "removeLayerOnMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean removeLayerOnMap(@NonNull MapboxMap mapboxMap) {\n        setRemoved(true);\n\n        // Remove the layers & sources\n        Style style = mapboxMap.getStyle();\n        if (style != null && style.isFullyLoaded()) {\n            style.removeLayer(arrowHeadLayer);\n            style.removeLayer(lineLayer);\n\n            style.removeSource(arrowHeadSource);\n            style.removeSource(lineLayerSource);\n\n            visible = false;\n\n            return true;\n        } else {\n            Log.e(TAG, \"Could not remove the layers & source because the the style is null or not fully loaded\");\n            return false;\n        }\n    }", "signature": "boolean removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "full_signature": "@Override public boolean removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "ArrowLineLayer.removeLayerOnMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false, "invocations": ["setRemoved", "getStyle", "isFullyLoaded", "removeLayer", "removeLayer", "removeSource", "removeSource", "e"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}