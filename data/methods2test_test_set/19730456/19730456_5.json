{"test_class": {"identifier": "AbiTest", "superclass": "", "interfaces": "", "fields": [], "file": "ethereumj-core/src/test/java/org/ethereum/solidity/AbiTest.java"}, "test_case": {"identifier": "simpleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void simpleTest() throws IOException {\n        String contractAbi = \"[{\"\n                + \"\\\"name\\\":\\\"simpleFunction\\\",\"\n                + \"\\\"constant\\\":true,\"\n                + \"\\\"payable\\\":true,\"\n                + \"\\\"type\\\":\\\"function\\\",\"\n                + \"\\\"inputs\\\": [{\\\"name\\\":\\\"_in\\\", \\\"type\\\":\\\"bytes32\\\"}],\"\n                + \"\\\"outputs\\\":[{\\\"name\\\":\\\"_out\\\",\\\"type\\\":\\\"bytes32\\\"}]}]\";\n\n        Abi abi = Abi.fromJson(contractAbi);\n        assertEquals(abi.size(), 1);\n\n        Entry onlyFunc = abi.get(0);\n        assertEquals(onlyFunc.type, Type.function);\n        assertEquals(onlyFunc.inputs.size(), 1);\n        assertEquals(onlyFunc.outputs.size(), 1);\n        assertTrue(onlyFunc.payable);\n        assertTrue(onlyFunc.constant);\n    }", "signature": "void simpleTest()", "full_signature": "@Test public void simpleTest()", "class_method_signature": "AbiTest.simpleTest()", "testcase": true, "constructor": false, "invocations": ["fromJson", "assertEquals", "size", "get", "assertEquals", "assertEquals", "size", "assertEquals", "size", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "Abi", "superclass": "extends ArrayList<Abi.Entry>", "interfaces": "", "fields": [{"original_string": "private final static ObjectMapper DEFAULT_MAPPER = new ObjectMapper()\n            .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n            .enable(DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL);", "modifier": "private final static", "type": "ObjectMapper", "declarator": "DEFAULT_MAPPER = new ObjectMapper()\n            .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n            .enable(DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL)", "var_name": "DEFAULT_MAPPER"}], "methods": [{"identifier": "fromJson", "parameters": "(String json)", "modifiers": "public static", "return": "Abi", "signature": "Abi fromJson(String json)", "full_signature": "public static Abi fromJson(String json)", "class_method_signature": "Abi.fromJson(String json)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toJson()", "full_signature": "public String toJson()", "class_method_signature": "Abi.toJson()", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Class<T> resultClass, final Abi.Entry.Type type, final Predicate<T> searchPredicate)", "modifiers": "private", "return": "T", "signature": "T find(Class<T> resultClass, final Abi.Entry.Type type, final Predicate<T> searchPredicate)", "full_signature": "private T find(Class<T> resultClass, final Abi.Entry.Type type, final Predicate<T> searchPredicate)", "class_method_signature": "Abi.find(Class<T> resultClass, final Abi.Entry.Type type, final Predicate<T> searchPredicate)", "testcase": false, "constructor": false}, {"identifier": "findFunction", "parameters": "(Predicate<Function> searchPredicate)", "modifiers": "public", "return": "Function", "signature": "Function findFunction(Predicate<Function> searchPredicate)", "full_signature": "public Function findFunction(Predicate<Function> searchPredicate)", "class_method_signature": "Abi.findFunction(Predicate<Function> searchPredicate)", "testcase": false, "constructor": false}, {"identifier": "findEvent", "parameters": "(Predicate<Event> searchPredicate)", "modifiers": "public", "return": "Event", "signature": "Event findEvent(Predicate<Event> searchPredicate)", "full_signature": "public Event findEvent(Predicate<Event> searchPredicate)", "class_method_signature": "Abi.findEvent(Predicate<Event> searchPredicate)", "testcase": false, "constructor": false}, {"identifier": "findConstructor", "parameters": "()", "modifiers": "public", "return": "Abi.Constructor", "signature": "Abi.Constructor findConstructor()", "full_signature": "public Abi.Constructor findConstructor()", "class_method_signature": "Abi.findConstructor()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Abi.toString()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/solidity/Abi.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(String json)", "modifiers": "public static", "return": "Abi", "body": "public static Abi fromJson(String json) {\n        try {\n            return DEFAULT_MAPPER.readValue(json, Abi.class);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }", "signature": "Abi fromJson(String json)", "full_signature": "public static Abi fromJson(String json)", "class_method_signature": "Abi.fromJson(String json)", "testcase": false, "constructor": false, "invocations": ["readValue"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}