{"test_class": {"identifier": "HashesTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/HashesTest.java"}, "test_case": {"identifier": "success_2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_2() {\n        byte[] input = new byte[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n        byte[] input2 = new byte[]{1, 12, 23, 23, 74, 53, 6, 70, 38, 9, 10, 71, 72, 3, 54, 42, 96, 17, 18, 59, 20, 121, 32, 13, 24, 75, 26, 7, 18, 29, 90, 41};\n\n        byte[] output = Hashes.hash(HashAlgorithm.KECCAK_512, input);\n        byte[] output2 = Hashes.hash(HashAlgorithm.KECCAK_512, input2);\n\n        assertThat(HexEncoder.getString(output), is(\"1414d219f4863f278acca4a4b5149298e2ec4f001d83f5f6e09fb14d7b47732e9ee6aaccbebedf2092b9cb209694b7eb8e7e36bbec9f9866a031d8901f891099\"));\n        assertThat(HexEncoder.getString(output2), is(\"ce7d397f3a74c602d6366ed0c6e868b0cf968e9986166323e02b83ef8bd891a9b8389b846eb88db32f0482e28744c56e3b471751f968d70c564eb3d7def2bf5b\"));\n    }", "signature": "void success_2()", "full_signature": "@Test public void success_2()", "class_method_signature": "HashesTest.success_2()", "testcase": true, "constructor": false, "invocations": ["hash", "hash", "assertThat", "getString", "is", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "Hashes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(String algorithm, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(String algorithm, byte[]... inputs)", "full_signature": "private static byte[] hash(String algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(String algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hashVariableOutput", "parameters": "(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "full_signature": "private static byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "class_method_signature": "Hashes.hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/Hashes.java"}, "focal_method": {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs) {\n        return hash(algorithm, algorithm.getDefaultBitLength() / 8, inputs);\n    }", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false, "invocations": ["hash", "getDefaultBitLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}