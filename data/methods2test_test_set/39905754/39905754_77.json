{"test_class": {"identifier": "FibonacciTest", "superclass": "", "interfaces": "", "fields": [], "file": "Beirut/2016/2016-02-17-even-fibonacci-numbers/src/test/java/FibonacciTest.java"}, "test_case": {"identifier": "if_input_is_4000000", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void if_input_is_4000000() {\n      Assertions.assertThat(Fibonacci.compute(4000000)).isEqualTo(6558868233897966651L);\n   }", "signature": "void if_input_is_4000000()", "full_signature": "@Test public void if_input_is_4000000()", "class_method_signature": "FibonacciTest.if_input_is_4000000()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "compute"]}, "focal_class": {"identifier": "Fibonacci", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "compute", "parameters": "(int n)", "modifiers": "public static", "return": "long", "signature": "long compute(int n)", "full_signature": "public static long compute(int n)", "class_method_signature": "Fibonacci.compute(int n)", "testcase": false, "constructor": false}, {"identifier": "computeLessThanFourMillion", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long computeLessThanFourMillion()", "full_signature": "public static long computeLessThanFourMillion()", "class_method_signature": "Fibonacci.computeLessThanFourMillion()", "testcase": false, "constructor": false}, {"identifier": "checkeven", "parameters": "(int n)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkeven(int n)", "full_signature": "public static boolean checkeven(int n)", "class_method_signature": "Fibonacci.checkeven(int n)", "testcase": false, "constructor": false}], "file": "Beirut/2016/2016-02-17-even-fibonacci-numbers/src/main/java/Fibonacci.java"}, "focal_method": {"identifier": "compute", "parameters": "(int n)", "modifiers": "public static", "return": "long", "body": "public static long compute(int n) {\n      if (n == 0) {\n         return 0;\n      }\n      if (n == 1) {\n         return 1;\n      }\n\n      long a = 0;\n      long b = 1;\n      long c = 0;\n      for (int i = 2; i <= n; i++) {\n         c = a + b;\n         a = b;\n         b = c;\n      }\n\n      return c;\n   }", "signature": "long compute(int n)", "full_signature": "public static long compute(int n)", "class_method_signature": "Fibonacci.compute(int n)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}