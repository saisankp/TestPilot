{"test_class": {"identifier": "DAInterfaceMethodWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core-parent/core/src/test/java/fr/javatronic/damapping/processor/sourcegenerator/writer/DAInterfaceMethodWriterTest.java"}, "test_case": {"identifier": "write_returns_parent_writer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void write_returns_parent_writer() throws Exception {\n    FileContextTestImpl fileContext = new FileContextTestImpl();\n    DAWriter parent = new DAWriter() {\n\n    };\n    DAInterfaceMethodWriter<DAWriter> classWriter = new DAInterfaceMethodWriter<DAWriter>(\"name\",\n        DATypeFactory.from(String.class), fileContext, 1, parent\n    );\n\n    assertThat(classWriter.write()).isSameAs(parent);\n  }", "signature": "void write_returns_parent_writer()", "full_signature": "@Test public void write_returns_parent_writer()", "class_method_signature": "DAInterfaceMethodWriterTest.write_returns_parent_writer()", "testcase": true, "constructor": false, "invocations": ["from", "isSameAs", "assertThat", "write"]}, "focal_class": {"identifier": "DAInterfaceMethodWriter", "superclass": "extends AbstractDAWriter<T>", "interfaces": "", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final DAType returnType;", "modifier": "private final", "type": "DAType", "declarator": "returnType", "var_name": "returnType"}, {"original_string": "@Nonnull\n  private List<DAAnnotation> annotations = Collections.emptyList();", "modifier": "@Nonnull\n  private", "type": "List<DAAnnotation>", "declarator": "annotations = Collections.emptyList()", "var_name": "annotations"}, {"original_string": "@Nonnull\n  private List<DAParameter> params = Collections.<DAParameter>emptyList();", "modifier": "@Nonnull\n  private", "type": "List<DAParameter>", "declarator": "params = Collections.<DAParameter>emptyList()", "var_name": "params"}], "methods": [{"identifier": "DAInterfaceMethodWriter", "parameters": "(String name, DAType returnType, FileContext fileContext, int indentOffset, T parent)", "modifiers": "public", "return": "", "signature": " DAInterfaceMethodWriter(String name, DAType returnType, FileContext fileContext, int indentOffset, T parent)", "full_signature": "public  DAInterfaceMethodWriter(String name, DAType returnType, FileContext fileContext, int indentOffset, T parent)", "class_method_signature": "DAInterfaceMethodWriter.DAInterfaceMethodWriter(String name, DAType returnType, FileContext fileContext, int indentOffset, T parent)", "testcase": false, "constructor": true}, {"identifier": "withAnnotations", "parameters": "(@Nullable DAAnnotation... annotations)", "modifiers": "public", "return": "DAInterfaceMethodWriter<T>", "signature": "DAInterfaceMethodWriter<T> withAnnotations(@Nullable DAAnnotation... annotations)", "full_signature": "public DAInterfaceMethodWriter<T> withAnnotations(@Nullable DAAnnotation... annotations)", "class_method_signature": "DAInterfaceMethodWriter.withAnnotations(@Nullable DAAnnotation... annotations)", "testcase": false, "constructor": false}, {"identifier": "withAnnotations", "parameters": "(@Nullable List<DAAnnotation> annotations)", "modifiers": "public", "return": "DAInterfaceMethodWriter<T>", "signature": "DAInterfaceMethodWriter<T> withAnnotations(@Nullable List<DAAnnotation> annotations)", "full_signature": "public DAInterfaceMethodWriter<T> withAnnotations(@Nullable List<DAAnnotation> annotations)", "class_method_signature": "DAInterfaceMethodWriter.withAnnotations(@Nullable List<DAAnnotation> annotations)", "testcase": false, "constructor": false}, {"identifier": "withParams", "parameters": "(@Nullable DAParameter... params)", "modifiers": "public", "return": "DAInterfaceMethodWriter<T>", "signature": "DAInterfaceMethodWriter<T> withParams(@Nullable DAParameter... params)", "full_signature": "public DAInterfaceMethodWriter<T> withParams(@Nullable DAParameter... params)", "class_method_signature": "DAInterfaceMethodWriter.withParams(@Nullable DAParameter... params)", "testcase": false, "constructor": false}, {"identifier": "withParams", "parameters": "(@Nullable List<DAParameter> params)", "modifiers": "public", "return": "DAInterfaceMethodWriter<T>", "signature": "DAInterfaceMethodWriter<T> withParams(@Nullable List<DAParameter> params)", "full_signature": "public DAInterfaceMethodWriter<T> withParams(@Nullable List<DAParameter> params)", "class_method_signature": "DAInterfaceMethodWriter.withParams(@Nullable List<DAParameter> params)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T write()", "full_signature": "public T write()", "class_method_signature": "DAInterfaceMethodWriter.write()", "testcase": false, "constructor": false}, {"identifier": "appendReturnType", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void appendReturnType()", "full_signature": "private void appendReturnType()", "class_method_signature": "DAInterfaceMethodWriter.appendReturnType()", "testcase": false, "constructor": false}, {"identifier": "appendParams", "parameters": "(List<DAParameter> params)", "modifiers": "private", "return": "void", "signature": "void appendParams(List<DAParameter> params)", "full_signature": "private void appendParams(List<DAParameter> params)", "class_method_signature": "DAInterfaceMethodWriter.appendParams(List<DAParameter> params)", "testcase": false, "constructor": false}], "file": "core-parent/core/src/main/java/fr/javatronic/damapping/processor/sourcegenerator/writer/DAInterfaceMethodWriter.java"}, "focal_method": {"identifier": "write", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T write() throws IOException {\n    commons.appendAnnotations(annotations);\n    commons.appendIndent();\n    appendReturnType();\n    commons.append(name);\n    appendParams(params);\n    commons.append(\";\");\n    commons.newLine();\n    return parent;\n  }", "signature": "T write()", "full_signature": "public T write()", "class_method_signature": "DAInterfaceMethodWriter.write()", "testcase": false, "constructor": false, "invocations": ["appendAnnotations", "appendIndent", "appendReturnType", "append", "appendParams", "append", "newLine"]}, "repository": {"repo_id": 14714017, "url": "https://github.com/lesaint/damapping", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 4324, "license": "licensed"}}