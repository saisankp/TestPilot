{"test_class": {"identifier": "ContentExplorerScreenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    ContentExplorerScreen.View view;", "modifier": "@Mock", "type": "ContentExplorerScreen.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    NavigationManager navigationManager;", "modifier": "@Mock", "type": "NavigationManager", "declarator": "navigationManager", "var_name": "navigationManager"}, {"original_string": "@Mock\n    PerspectivesExplorer perspectivesExplorer;", "modifier": "@Mock", "type": "PerspectivesExplorer", "declarator": "perspectivesExplorer", "var_name": "perspectivesExplorer"}, {"original_string": "@Mock\n    NavTreeEditor navTreeEditor;", "modifier": "@Mock", "type": "NavTreeEditor", "declarator": "navTreeEditor", "var_name": "navTreeEditor"}, {"original_string": "@Mock\n    NavItemEditorSettings navItemEditorSettings;", "modifier": "@Mock", "type": "NavItemEditorSettings", "declarator": "navItemEditorSettings", "var_name": "navItemEditorSettings"}, {"original_string": "@Mock\n    EventSourceMock<NotificationEvent> notificationEvent;", "modifier": "@Mock", "type": "EventSourceMock<NotificationEvent>", "declarator": "notificationEvent", "var_name": "notificationEvent"}, {"original_string": "@Mock\n    ContentManagerI18n i18n;", "modifier": "@Mock", "type": "ContentManagerI18n", "declarator": "i18n", "var_name": "i18n"}, {"original_string": "@Mock\n    NavTree navTree;", "modifier": "@Mock", "type": "NavTree", "declarator": "navTree", "var_name": "navTree"}, {"original_string": "ContentExplorerScreen contentExplorerScreen;", "modifier": "", "type": "ContentExplorerScreen", "declarator": "contentExplorerScreen", "var_name": "contentExplorerScreen"}], "file": "dashbuilder-client/dashbuilder-cms-client/src/test/java/org/dashbuilder/client/cms/screen/explorer/ContentExplorerScreenTest.java"}, "test_case": {"identifier": "testOnPerspectivesChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnPerspectivesChanged() {\n        contentExplorerScreen.init();\n        contentExplorerScreen.onPerspectivesChanged(new PerspectivePluginsChangedEvent());\n\n        verify(navTreeEditor).edit(any(NavTree.class));\n    }", "signature": "void testOnPerspectivesChanged()", "full_signature": "@Test public void testOnPerspectivesChanged()", "class_method_signature": "ContentExplorerScreenTest.testOnPerspectivesChanged()", "testcase": true, "constructor": false, "invocations": ["init", "onPerspectivesChanged", "edit", "verify", "any"]}, "focal_class": {"identifier": "ContentExplorerScreen", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SCREEN_ID = \"ContentExplorerScreen\";", "modifier": "public static final", "type": "String", "declarator": "SCREEN_ID = \"ContentExplorerScreen\"", "var_name": "SCREEN_ID"}, {"original_string": "View view;", "modifier": "", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "NavigationManager navigationManager;", "modifier": "", "type": "NavigationManager", "declarator": "navigationManager", "var_name": "navigationManager"}, {"original_string": "PerspectivesExplorer perspectiveExplorer;", "modifier": "", "type": "PerspectivesExplorer", "declarator": "perspectiveExplorer", "var_name": "perspectiveExplorer"}, {"original_string": "NavTreeEditor navTreeEditor;", "modifier": "", "type": "NavTreeEditor", "declarator": "navTreeEditor", "var_name": "navTreeEditor"}, {"original_string": "ContentManagerI18n i18n;", "modifier": "", "type": "ContentManagerI18n", "declarator": "i18n", "var_name": "i18n"}, {"original_string": "Event<NotificationEvent> workbenchNotification;", "modifier": "", "type": "Event<NotificationEvent>", "declarator": "workbenchNotification", "var_name": "workbenchNotification"}], "methods": [{"identifier": "ContentExplorerScreen", "parameters": "()", "modifiers": "public", "return": "", "signature": " ContentExplorerScreen()", "full_signature": "public  ContentExplorerScreen()", "class_method_signature": "ContentExplorerScreen.ContentExplorerScreen()", "testcase": false, "constructor": true}, {"identifier": "ContentExplorerScreen", "parameters": "(View view,\n                                 NavigationManager navigationManager,\n                                 PerspectivesExplorer perspectiveExplorer,\n                                 NavTreeEditor navTreeEditor,\n                                 ContentManagerI18n i18n,\n                                 Event<NotificationEvent> workbenchNotification)", "modifiers": "@Inject public", "return": "", "signature": " ContentExplorerScreen(View view,\n                                 NavigationManager navigationManager,\n                                 PerspectivesExplorer perspectiveExplorer,\n                                 NavTreeEditor navTreeEditor,\n                                 ContentManagerI18n i18n,\n                                 Event<NotificationEvent> workbenchNotification)", "full_signature": "@Inject public  ContentExplorerScreen(View view,\n                                 NavigationManager navigationManager,\n                                 PerspectivesExplorer perspectiveExplorer,\n                                 NavTreeEditor navTreeEditor,\n                                 ContentManagerI18n i18n,\n                                 Event<NotificationEvent> workbenchNotification)", "class_method_signature": "ContentExplorerScreen.ContentExplorerScreen(View view,\n                                 NavigationManager navigationManager,\n                                 PerspectivesExplorer perspectiveExplorer,\n                                 NavTreeEditor navTreeEditor,\n                                 ContentManagerI18n i18n,\n                                 Event<NotificationEvent> workbenchNotification)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct void init()", "class_method_signature": "ContentExplorerScreen.init()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@WorkbenchPartTitle public", "return": "String", "signature": "String getTitle()", "full_signature": "@WorkbenchPartTitle public String getTitle()", "class_method_signature": "ContentExplorerScreen.getTitle()", "testcase": false, "constructor": false}, {"identifier": "getWidget", "parameters": "()", "modifiers": "@WorkbenchPartView public", "return": "IsWidget", "signature": "IsWidget getWidget()", "full_signature": "@WorkbenchPartView public IsWidget getWidget()", "class_method_signature": "ContentExplorerScreen.getWidget()", "testcase": false, "constructor": false}, {"identifier": "getNavTreeEditor", "parameters": "()", "modifiers": "public", "return": "NavTreeEditor", "signature": "NavTreeEditor getNavTreeEditor()", "full_signature": "public NavTreeEditor getNavTreeEditor()", "class_method_signature": "ContentExplorerScreen.getNavTreeEditor()", "testcase": false, "constructor": false}, {"identifier": "createNewPerspective", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createNewPerspective()", "full_signature": "public void createNewPerspective()", "class_method_signature": "ContentExplorerScreen.createNewPerspective()", "testcase": false, "constructor": false}, {"identifier": "onPerspectivesExpanded", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onPerspectivesExpanded()", "full_signature": " void onPerspectivesExpanded()", "class_method_signature": "ContentExplorerScreen.onPerspectivesExpanded()", "testcase": false, "constructor": false}, {"identifier": "onNavTreeExpanded", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onNavTreeExpanded()", "full_signature": " void onNavTreeExpanded()", "class_method_signature": "ContentExplorerScreen.onNavTreeExpanded()", "testcase": false, "constructor": false}, {"identifier": "onNavTreeLoaded", "parameters": "(@Observes NavTreeLoadedEvent event)", "modifiers": "", "return": "void", "signature": "void onNavTreeLoaded(@Observes NavTreeLoadedEvent event)", "full_signature": " void onNavTreeLoaded(@Observes NavTreeLoadedEvent event)", "class_method_signature": "ContentExplorerScreen.onNavTreeLoaded(@Observes NavTreeLoadedEvent event)", "testcase": false, "constructor": false}, {"identifier": "onPerspectivesChanged", "parameters": "(@Observes PerspectivePluginsChangedEvent event)", "modifiers": "", "return": "void", "signature": "void onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "full_signature": " void onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "class_method_signature": "ContentExplorerScreen.onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "testcase": false, "constructor": false}, {"identifier": "onNavTreeSaved", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onNavTreeSaved()", "full_signature": " void onNavTreeSaved()", "class_method_signature": "ContentExplorerScreen.onNavTreeSaved()", "testcase": false, "constructor": false}, {"identifier": "onAuthzPolicyChanged", "parameters": "(@Observes final AuthorizationPolicySavedEvent event)", "modifiers": "", "return": "void", "signature": "void onAuthzPolicyChanged(@Observes final AuthorizationPolicySavedEvent event)", "full_signature": " void onAuthzPolicyChanged(@Observes final AuthorizationPolicySavedEvent event)", "class_method_signature": "ContentExplorerScreen.onAuthzPolicyChanged(@Observes final AuthorizationPolicySavedEvent event)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-cms-client/src/main/java/org/dashbuilder/client/cms/screen/explorer/ContentExplorerScreen.java"}, "focal_method": {"identifier": "onPerspectivesChanged", "parameters": "(@Observes PerspectivePluginsChangedEvent event)", "modifiers": "", "return": "void", "body": "void onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event) {\n        NavTree navTree = navigationManager.getNavTree();\n        navTreeEditor.edit(navTree);\n    }", "signature": "void onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "full_signature": " void onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "class_method_signature": "ContentExplorerScreen.onPerspectivesChanged(@Observes PerspectivePluginsChangedEvent event)", "testcase": false, "constructor": false, "invocations": ["getNavTree", "edit"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}