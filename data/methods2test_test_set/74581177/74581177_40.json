{"test_class": {"identifier": "ItemFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bbva/kltt/apirest/core/parsed_info/common/ItemFactoryTest.java"}, "test_case": {"identifier": "invalidItemRef", "parameters": "()", "modifiers": "@Test(expected = APIRestGeneratorException.class) public", "return": "void", "body": "@Test(expected = APIRestGeneratorException.class)\n\tpublic void invalidItemRef() throws APIRestGeneratorException\n\t{\n\t\tfinal ItemFactory itemFactory = ItemFactoryTest.generateDummyItemFactory() ;\n\t\t\n\t\titemFactory.createNewItemRef(ConstantsTest.ITEM_NAME,\n\t\t\t\t\t\t\t\t\t ConstantsTest.ALIAS,\n\t\t\t\t\t\t\t\t\t ConstantsTest.DESCRIPTION,\n\t\t\t\t\t\t\t\t\t ConstantsTest.REQUIRED,\n\t\t\t\t\t\t\t\t\t ConstantsTest.REFERENCE_DEFINITIONS) ;\n\t}", "signature": "void invalidItemRef()", "full_signature": "@Test(expected = APIRestGeneratorException.class) public void invalidItemRef()", "class_method_signature": "ItemFactoryTest.invalidItemRef()", "testcase": true, "constructor": false, "invocations": ["generateDummyItemFactory", "createNewItemRef"]}, "focal_class": {"identifier": "ItemFactory", "superclass": "", "interfaces": "implements IItemFactory", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ItemFactory.class) ;", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ItemFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, Item> mainItemsMap ;", "modifier": "private final", "type": "Map<String, Item>", "declarator": "mainItemsMap", "var_name": "mainItemsMap"}], "methods": [{"identifier": "ItemFactory", "parameters": "(final Map<String, Item> mainItemsMap)", "modifiers": "public", "return": "", "signature": " ItemFactory(final Map<String, Item> mainItemsMap)", "full_signature": "public  ItemFactory(final Map<String, Item> mainItemsMap)", "class_method_signature": "ItemFactory.ItemFactory(final Map<String, Item> mainItemsMap)", "testcase": false, "constructor": true}, {"identifier": "isSimpleItem", "parameters": "(final String type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSimpleItem(final String type)", "full_signature": "@Override public boolean isSimpleItem(final String type)", "class_method_signature": "ItemFactory.isSimpleItem(final String type)", "testcase": false, "constructor": false}, {"identifier": "createNewSimpleItem", "parameters": "(final String name,\n\t\t\t\t\t\t\t\t\tfinal String alias,\n\t\t\t\t\t\t   \t  \t\tfinal String description,\n\t\t\t\t\t\t   \t  \t\tfinal String required,\n\t\t\t\t\t\t   \t  \t\tfinal String type,\n\t\t\t\t\t\t   \t  \t\tfinal String format)", "modifiers": "@Override public", "return": "Item", "signature": "Item createNewSimpleItem(final String name,\n\t\t\t\t\t\t\t\t\tfinal String alias,\n\t\t\t\t\t\t   \t  \t\tfinal String description,\n\t\t\t\t\t\t   \t  \t\tfinal String required,\n\t\t\t\t\t\t   \t  \t\tfinal String type,\n\t\t\t\t\t\t   \t  \t\tfinal String format)", "full_signature": "@Override public Item createNewSimpleItem(final String name,\n\t\t\t\t\t\t\t\t\tfinal String alias,\n\t\t\t\t\t\t   \t  \t\tfinal String description,\n\t\t\t\t\t\t   \t  \t\tfinal String required,\n\t\t\t\t\t\t   \t  \t\tfinal String type,\n\t\t\t\t\t\t   \t  \t\tfinal String format)", "class_method_signature": "ItemFactory.createNewSimpleItem(final String name,\n\t\t\t\t\t\t\t\t\tfinal String alias,\n\t\t\t\t\t\t   \t  \t\tfinal String description,\n\t\t\t\t\t\t   \t  \t\tfinal String required,\n\t\t\t\t\t\t   \t  \t\tfinal String type,\n\t\t\t\t\t\t   \t  \t\tfinal String format)", "testcase": false, "constructor": false}, {"identifier": "createNewSimpleItemG1", "parameters": "(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t   \t  \t\t   final String description,\n\t\t\t\t\t\t   \t  \t\t   final String required,\n\t\t\t\t\t\t   \t  \t\t   final String type,\n\t\t\t\t\t\t   \t  \t\t   final String format)", "modifiers": "private", "return": "Item", "signature": "Item createNewSimpleItemG1(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t   \t  \t\t   final String description,\n\t\t\t\t\t\t   \t  \t\t   final String required,\n\t\t\t\t\t\t   \t  \t\t   final String type,\n\t\t\t\t\t\t   \t  \t\t   final String format)", "full_signature": "private Item createNewSimpleItemG1(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t   \t  \t\t   final String description,\n\t\t\t\t\t\t   \t  \t\t   final String required,\n\t\t\t\t\t\t   \t  \t\t   final String type,\n\t\t\t\t\t\t   \t  \t\t   final String format)", "class_method_signature": "ItemFactory.createNewSimpleItemG1(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t   \t  \t\t   final String description,\n\t\t\t\t\t\t   \t  \t\t   final String required,\n\t\t\t\t\t\t   \t  \t\t   final String type,\n\t\t\t\t\t\t   \t  \t\t   final String format)", "testcase": false, "constructor": false}, {"identifier": "createNewSimpleItemG2", "parameters": "(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t\t  \t\t   final String description,\n\t\t\t\t\t\t\t  \t\t   final String required,\n\t\t\t\t\t\t\t  \t\t   final String type,\n\t\t\t\t\t\t\t  \t\t   final String format)", "modifiers": "private", "return": "Item", "signature": "Item createNewSimpleItemG2(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t\t  \t\t   final String description,\n\t\t\t\t\t\t\t  \t\t   final String required,\n\t\t\t\t\t\t\t  \t\t   final String type,\n\t\t\t\t\t\t\t  \t\t   final String format)", "full_signature": "private Item createNewSimpleItemG2(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t\t  \t\t   final String description,\n\t\t\t\t\t\t\t  \t\t   final String required,\n\t\t\t\t\t\t\t  \t\t   final String type,\n\t\t\t\t\t\t\t  \t\t   final String format)", "class_method_signature": "ItemFactory.createNewSimpleItemG2(final String name,\n\t\t\t\t\t\t\t\t\t   final String alias,\n\t\t\t\t\t\t\t  \t\t   final String description,\n\t\t\t\t\t\t\t  \t\t   final String required,\n\t\t\t\t\t\t\t  \t\t   final String type,\n\t\t\t\t\t\t\t  \t\t   final String format)", "testcase": false, "constructor": false}, {"identifier": "isArrayItem", "parameters": "(final String type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isArrayItem(final String type)", "full_signature": "@Override public boolean isArrayItem(final String type)", "class_method_signature": "ItemFactory.isArrayItem(final String type)", "testcase": false, "constructor": false}, {"identifier": "createNewArray", "parameters": "(final String name, final String alias, final String description, final String required)", "modifiers": "@Override public", "return": "ItemArray", "signature": "ItemArray createNewArray(final String name, final String alias, final String description, final String required)", "full_signature": "@Override public ItemArray createNewArray(final String name, final String alias, final String description, final String required)", "class_method_signature": "ItemFactory.createNewArray(final String name, final String alias, final String description, final String required)", "testcase": false, "constructor": false}, {"identifier": "createNewItemRef", "parameters": "(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "modifiers": "@Override public", "return": "ItemRef", "signature": "ItemRef createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "full_signature": "@Override public ItemRef createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "class_method_signature": "ItemFactory.createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "testcase": false, "constructor": false}, {"identifier": "isComplexItem", "parameters": "(final String type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isComplexItem(final String type)", "full_signature": "@Override public boolean isComplexItem(final String type)", "class_method_signature": "ItemFactory.isComplexItem(final String type)", "testcase": false, "constructor": false}, {"identifier": "createNewItemComplex", "parameters": "(final String name, final String alias, final String description, final String required)", "modifiers": "@Override public", "return": "ItemComplex", "signature": "ItemComplex createNewItemComplex(final String name, final String alias, final String description, final String required)", "full_signature": "@Override public ItemComplex createNewItemComplex(final String name, final String alias, final String description, final String required)", "class_method_signature": "ItemFactory.createNewItemComplex(final String name, final String alias, final String description, final String required)", "testcase": false, "constructor": false}, {"identifier": "isFileItem", "parameters": "(final String type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFileItem(final String type)", "full_signature": "@Override public boolean isFileItem(final String type)", "class_method_signature": "ItemFactory.isFileItem(final String type)", "testcase": false, "constructor": false}, {"identifier": "createNewItemFile", "parameters": "(final String name, final String alias, final String description, final String required)", "modifiers": "@Override public", "return": "ItemFile", "signature": "ItemFile createNewItemFile(final String name, final String alias, final String description, final String required)", "full_signature": "@Override public ItemFile createNewItemFile(final String name, final String alias, final String description, final String required)", "class_method_signature": "ItemFactory.createNewItemFile(final String name, final String alias, final String description, final String required)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/bbva/kltt/apirest/core/parsed_info/common/ItemFactory.java"}, "focal_method": {"identifier": "createNewItemRef", "parameters": "(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "modifiers": "@Override public", "return": "ItemRef", "body": "@Override\n    public ItemRef createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference) throws APIRestGeneratorException\n    {\n    \tItemRef itemRef = null ;\n    \t\n    \tfinal Pattern pattern = Pattern.compile(ConstantsInput.PATT_DEFINITION_REF) ;\n\t\tfinal Matcher matcher = pattern.matcher(reference) ;\n\t\tif (matcher.matches())\n\t\t{\n\t\t\tfinal String itemRefString = matcher.group(1) ;\n\t\t\tif (!this.mainItemsMap.containsKey(itemRefString))\n\t\t\t{\n\t\t\t\tfinal String errorString = \"The following reference was not found in the items map: \" + itemRefString ;\n\t\t\t\t\n\t\t\t\tItemFactory.LOGGER.error(errorString) ;\n\t\t    \tthrow new APIRestGeneratorException(errorString) ;\n\t\t\t}\n\t\t\t\n\t\t\titemRef = new ItemRef(name, alias, description, required, itemRefString) ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfinal String errorString = \"The following reference was not defined properly to be search in the items map: \" + reference ;\n\t\t\t\n\t\t\tItemFactory.LOGGER.error(errorString) ;\n\t    \tthrow new APIRestGeneratorException(errorString) ;\n\t\t}\n    \t\n    \treturn itemRef ;\n    }", "signature": "ItemRef createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "full_signature": "@Override public ItemRef createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "class_method_signature": "ItemFactory.createNewItemRef(final String name,\n    \t\t\t\t\t\t\t\tfinal String alias,\n    \t\t\t\t\t\t\t\tfinal String description,\n    \t\t\t\t\t\t\t\tfinal String required,\n    \t\t\t\t\t\t\t\tfinal String reference)", "testcase": false, "constructor": false, "invocations": ["compile", "matcher", "matches", "group", "containsKey", "error", "error"]}, "repository": {"repo_id": 74581177, "url": "https://github.com/BBVA-CIB/APIRestGenerator", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 147303, "license": "licensed"}}