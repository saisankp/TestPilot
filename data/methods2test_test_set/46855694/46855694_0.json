{"test_class": {"identifier": "DiscountDataTest", "superclass": "extends AbstractDataTest", "interfaces": "", "fields": [{"original_string": "private static String FILENAME = \"discount.data\";", "modifier": "private static", "type": "String", "declarator": "FILENAME = \"discount.data\"", "var_name": "FILENAME"}, {"original_string": "private DiscountData discountData;", "modifier": "private", "type": "DiscountData", "declarator": "discountData", "var_name": "discountData"}], "file": "app/src/test/java/fr/pasteque/client/data/DataSavable/DiscountDataTest.java"}, "test_case": {"identifier": "setCollectionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setCollectionTest() throws ParseException {\n        Discount d1 = new Discount(\"d1\", 0.20, \"2015-06-30\", \"2015-06-30\", \"\", 2);\n        Discount d2 = new Discount(\"d2\", 0.20, \"2015-06-30\", \"2015-06-30\", \"\", 2);\n        ArrayList<Discount> collection = new ArrayList<Discount>();\n        collection.add(d1);\n        collection.add(d2);\n        discountData.setCollection(collection);\n        assertEquals(2, discountData.getDiscounts().size());\n    }", "signature": "void setCollectionTest()", "full_signature": "@Test public void setCollectionTest()", "class_method_signature": "DiscountDataTest.setCollectionTest()", "testcase": true, "constructor": false, "invocations": ["add", "add", "setCollection", "assertEquals", "size", "getDiscounts"]}, "focal_class": {"identifier": "DiscountData", "superclass": "extends AbstractJsonDataSavable", "interfaces": "", "fields": [{"original_string": "private static final String FILENAME = \"discount.json\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME = \"discount.json\"", "var_name": "FILENAME"}, {"original_string": "private ArrayList<Discount> discounts = new ArrayList<>();", "modifier": "private", "type": "ArrayList<Discount>", "declarator": "discounts = new ArrayList<>()", "var_name": "discounts"}], "methods": [{"identifier": "getFileName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getFileName()", "full_signature": "@Override protected String getFileName()", "class_method_signature": "DiscountData.getFileName()", "testcase": false, "constructor": false}, {"identifier": "getObjectList", "parameters": "()", "modifiers": "@Override protected", "return": "List<Object>", "signature": "List<Object> getObjectList()", "full_signature": "@Override protected List<Object> getObjectList()", "class_method_signature": "DiscountData.getObjectList()", "testcase": false, "constructor": false}, {"identifier": "getClassList", "parameters": "()", "modifiers": "@Override protected", "return": "List<Type>", "signature": "List<Type> getClassList()", "full_signature": "@Override protected List<Type> getClassList()", "class_method_signature": "DiscountData.getClassList()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfObjects", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getNumberOfObjects()", "full_signature": "@Override protected int getNumberOfObjects()", "class_method_signature": "DiscountData.getNumberOfObjects()", "testcase": false, "constructor": false}, {"identifier": "recoverObjects", "parameters": "(List<Object> objs)", "modifiers": "@Override protected", "return": "void", "signature": "void recoverObjects(List<Object> objs)", "full_signature": "@Override protected void recoverObjects(List<Object> objs)", "class_method_signature": "DiscountData.recoverObjects(List<Object> objs)", "testcase": false, "constructor": false}, {"identifier": "addDiscount", "parameters": "(Discount disc)", "modifiers": "public", "return": "void", "signature": "void addDiscount(Discount disc)", "full_signature": "public void addDiscount(Discount disc)", "class_method_signature": "DiscountData.addDiscount(Discount disc)", "testcase": false, "constructor": false}, {"identifier": "setCollection", "parameters": "(ArrayList<Discount> discounts)", "modifiers": "public", "return": "void", "signature": "void setCollection(ArrayList<Discount> discounts)", "full_signature": "public void setCollection(ArrayList<Discount> discounts)", "class_method_signature": "DiscountData.setCollection(ArrayList<Discount> discounts)", "testcase": false, "constructor": false}, {"identifier": "getDiscounts", "parameters": "()", "modifiers": "public", "return": "List<Discount>", "signature": "List<Discount> getDiscounts()", "full_signature": "public List<Discount> getDiscounts()", "class_method_signature": "DiscountData.getDiscounts()", "testcase": false, "constructor": false}, {"identifier": "getADiscount", "parameters": "()", "modifiers": "public", "return": "Discount", "signature": "Discount getADiscount()", "full_signature": "public Discount getADiscount()", "class_method_signature": "DiscountData.getADiscount()", "testcase": false, "constructor": false}, {"identifier": "findFromBarcode", "parameters": "(String code)", "modifiers": "public", "return": "Discount", "signature": "Discount findFromBarcode(String code)", "full_signature": "public Discount findFromBarcode(String code)", "class_method_signature": "DiscountData.findFromBarcode(String code)", "testcase": false, "constructor": false}], "file": "app/src/main/java/fr/pasteque/client/data/DataSavable/DiscountData.java"}, "focal_method": {"identifier": "setCollection", "parameters": "(ArrayList<Discount> discounts)", "modifiers": "public", "return": "void", "body": "public void setCollection(ArrayList<Discount> discounts) {\n        this.discounts.clear();\n        if (discounts != null)\n            this.discounts.addAll(discounts);\n    }", "signature": "void setCollection(ArrayList<Discount> discounts)", "full_signature": "public void setCollection(ArrayList<Discount> discounts)", "class_method_signature": "DiscountData.setCollection(ArrayList<Discount> discounts)", "testcase": false, "constructor": false, "invocations": ["clear", "addAll"]}, "repository": {"repo_id": 46855694, "url": "https://github.com/ScilCoop/pasteque-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 13425, "license": "licensed"}}