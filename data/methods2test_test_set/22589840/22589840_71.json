{"test_class": {"identifier": "CalendarServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CalendarServiceImpl calendarServiceImpl;", "modifier": "private", "type": "CalendarServiceImpl", "declarator": "calendarServiceImpl", "var_name": "calendarServiceImpl"}, {"original_string": "private CalendarDao calendarManagerMock;", "modifier": "private", "type": "CalendarDao", "declarator": "calendarManagerMock", "var_name": "calendarManagerMock"}, {"original_string": "private CoordinatorManager coordinatorManagerMock;", "modifier": "private", "type": "CoordinatorManager", "declarator": "coordinatorManagerMock", "var_name": "coordinatorManagerMock"}, {"original_string": "private Identity testIdentity;", "modifier": "private", "type": "Identity", "declarator": "testIdentity", "var_name": "testIdentity"}, {"original_string": "private String testIdentityName = \"cal_test_name\";", "modifier": "private", "type": "String", "declarator": "testIdentityName = \"cal_test_name\"", "var_name": "testIdentityName"}, {"original_string": "private EventBusMock eventBusMock;", "modifier": "private", "type": "EventBusMock", "declarator": "eventBusMock", "var_name": "eventBusMock"}, {"original_string": "private OlatCalendar cal;", "modifier": "private", "type": "OlatCalendar", "declarator": "cal", "var_name": "cal"}, {"original_string": "private CalendarEntry calendarEntry;", "modifier": "private", "type": "CalendarEntry", "declarator": "calendarEntry", "var_name": "calendarEntry"}], "file": "OLAT-LMS/src/test/java/org/olat/lms/calendar/CalendarServiceImplTest.java"}, "test_case": {"identifier": "testGetGroupCalendar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetGroupCalendar() {\n        BusinessGroup businessGroup = mock(BusinessGroup.class);\n        OlatCalendar olatCalendar = calendarServiceImpl.getGroupCalendar(businessGroup);\n        verify(calendarManagerMock).getCalendar(eq(CalendarDao.TYPE_GROUP), anyString());\n    }", "signature": "void testGetGroupCalendar()", "full_signature": "@Test public void testGetGroupCalendar()", "class_method_signature": "CalendarServiceImplTest.testGetGroupCalendar()", "testcase": true, "constructor": false, "invocations": ["mock", "getGroupCalendar", "getCalendar", "verify", "eq", "anyString"]}, "focal_class": {"identifier": "CalendarServiceImpl", "superclass": "", "interfaces": "implements CalendarService, UserDataDeletable", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "@Autowired\n    CalendarDao calendarDao;", "modifier": "@Autowired", "type": "CalendarDao", "declarator": "calendarDao", "var_name": "calendarDao"}, {"original_string": "@Autowired\n    UserDeletionManager userDeletionManager;", "modifier": "@Autowired", "type": "UserDeletionManager", "declarator": "userDeletionManager", "var_name": "userDeletionManager"}, {"original_string": "@Autowired\n    CoordinatorManager coordinatorManager;", "modifier": "@Autowired", "type": "CoordinatorManager", "declarator": "coordinatorManager", "var_name": "coordinatorManager"}, {"original_string": "@Autowired\n    ImportCalendarManager importCalendarManager;", "modifier": "@Autowired", "type": "ImportCalendarManager", "declarator": "importCalendarManager", "var_name": "importCalendarManager"}], "methods": [{"identifier": "CalendarServiceImpl", "parameters": "()", "modifiers": "private", "return": "", "signature": " CalendarServiceImpl()", "full_signature": "private  CalendarServiceImpl()", "class_method_signature": "CalendarServiceImpl.CalendarServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "CalendarServiceImpl", "parameters": "(CalendarDao calendarDao, CoordinatorManager coordinatorManager)", "modifiers": "", "return": "", "signature": " CalendarServiceImpl(CalendarDao calendarDao, CoordinatorManager coordinatorManager)", "full_signature": "  CalendarServiceImpl(CalendarDao calendarDao, CoordinatorManager coordinatorManager)", "class_method_signature": "CalendarServiceImpl.CalendarServiceImpl(CalendarDao calendarDao, CoordinatorManager coordinatorManager)", "testcase": false, "constructor": true}, {"identifier": "findCalendarConfigForIdentity", "parameters": "(final OlatCalendar calendar, final Preferences userGuiPreferences)", "modifiers": "@Override public", "return": "CalendarConfig", "signature": "CalendarConfig findCalendarConfigForIdentity(final OlatCalendar calendar, final Preferences userGuiPreferences)", "full_signature": "@Override public CalendarConfig findCalendarConfigForIdentity(final OlatCalendar calendar, final Preferences userGuiPreferences)", "class_method_signature": "CalendarServiceImpl.findCalendarConfigForIdentity(final OlatCalendar calendar, final Preferences userGuiPreferences)", "testcase": false, "constructor": false}, {"identifier": "saveCalendarConfigForIdentity", "parameters": "(final CalendarConfig config, final OlatCalendar calendar, final Preferences userGuiPreferences)", "modifiers": "@Override public", "return": "void", "signature": "void saveCalendarConfigForIdentity(final CalendarConfig config, final OlatCalendar calendar, final Preferences userGuiPreferences)", "full_signature": "@Override public void saveCalendarConfigForIdentity(final CalendarConfig config, final OlatCalendar calendar, final Preferences userGuiPreferences)", "class_method_signature": "CalendarServiceImpl.saveCalendarConfigForIdentity(final CalendarConfig config, final OlatCalendar calendar, final Preferences userGuiPreferences)", "testcase": false, "constructor": false}, {"identifier": "addEntryTo", "parameters": "(final OlatCalendar cal, final CalendarEntry calendarEntry)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addEntryTo(final OlatCalendar cal, final CalendarEntry calendarEntry)", "full_signature": "@Override public boolean addEntryTo(final OlatCalendar cal, final CalendarEntry calendarEntry)", "class_method_signature": "CalendarServiceImpl.addEntryTo(final OlatCalendar cal, final CalendarEntry calendarEntry)", "testcase": false, "constructor": false}, {"identifier": "updateEntryFrom", "parameters": "(final OlatCalendar cal, final CalendarEntry calendarEntry)", "modifiers": "public", "return": "boolean", "signature": "boolean updateEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "full_signature": "public boolean updateEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "class_method_signature": "CalendarServiceImpl.updateEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "testcase": false, "constructor": false}, {"identifier": "removeEntryFrom", "parameters": "(final OlatCalendar cal, final CalendarEntry calendarEntry)", "modifiers": "public", "return": "boolean", "signature": "boolean removeEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "full_signature": "public boolean removeEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "class_method_signature": "CalendarServiceImpl.removeEntryFrom(final OlatCalendar cal, final CalendarEntry calendarEntry)", "testcase": false, "constructor": false}, {"identifier": "informAboutCalendarChange", "parameters": "(final OlatCalendar cal)", "modifiers": "public", "return": "void", "signature": "void informAboutCalendarChange(final OlatCalendar cal)", "full_signature": "public void informAboutCalendarChange(final OlatCalendar cal)", "class_method_signature": "CalendarServiceImpl.informAboutCalendarChange(final OlatCalendar cal)", "testcase": false, "constructor": false}, {"identifier": "getPersonalCalendar", "parameters": "(final Identity identity)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar getPersonalCalendar(final Identity identity)", "full_signature": "@Override public OlatCalendar getPersonalCalendar(final Identity identity)", "class_method_signature": "CalendarServiceImpl.getPersonalCalendar(final Identity identity)", "testcase": false, "constructor": false}, {"identifier": "getImportedCalendar", "parameters": "(final Identity identity, final String calendarName)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar getImportedCalendar(final Identity identity, final String calendarName)", "full_signature": "@Override public OlatCalendar getImportedCalendar(final Identity identity, final String calendarName)", "class_method_signature": "CalendarServiceImpl.getImportedCalendar(final Identity identity, final String calendarName)", "testcase": false, "constructor": false}, {"identifier": "getGroupCalendar", "parameters": "(final BusinessGroup businessGroup)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar getGroupCalendar(final BusinessGroup businessGroup)", "full_signature": "@Override public OlatCalendar getGroupCalendar(final BusinessGroup businessGroup)", "class_method_signature": "CalendarServiceImpl.getGroupCalendar(final BusinessGroup businessGroup)", "testcase": false, "constructor": false}, {"identifier": "getCourseCalendar", "parameters": "(final ICourse course)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar getCourseCalendar(final ICourse course)", "full_signature": "@Override public OlatCalendar getCourseCalendar(final ICourse course)", "class_method_signature": "CalendarServiceImpl.getCourseCalendar(final ICourse course)", "testcase": false, "constructor": false}, {"identifier": "deletePersonalCalendar", "parameters": "(final Identity identity)", "modifiers": "@Override public", "return": "void", "signature": "void deletePersonalCalendar(final Identity identity)", "full_signature": "@Override public void deletePersonalCalendar(final Identity identity)", "class_method_signature": "CalendarServiceImpl.deletePersonalCalendar(final Identity identity)", "testcase": false, "constructor": false}, {"identifier": "deleteGroupCalendar", "parameters": "(final BusinessGroup businessGroup)", "modifiers": "@Override public", "return": "void", "signature": "void deleteGroupCalendar(final BusinessGroup businessGroup)", "full_signature": "@Override public void deleteGroupCalendar(final BusinessGroup businessGroup)", "class_method_signature": "CalendarServiceImpl.deleteGroupCalendar(final BusinessGroup businessGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteCourseCalendar", "parameters": "(final ICourse course)", "modifiers": "@Override public", "return": "void", "signature": "void deleteCourseCalendar(final ICourse course)", "full_signature": "@Override public void deleteCourseCalendar(final ICourse course)", "class_method_signature": "CalendarServiceImpl.deleteCourseCalendar(final ICourse course)", "testcase": false, "constructor": false}, {"identifier": "deleteUserData", "parameters": "(final Identity identity, final String newDeletedUserName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteUserData(final Identity identity, final String newDeletedUserName)", "full_signature": "@Override public void deleteUserData(final Identity identity, final String newDeletedUserName)", "class_method_signature": "CalendarServiceImpl.deleteUserData(final Identity identity, final String newDeletedUserName)", "testcase": false, "constructor": false}, {"identifier": "getCalendarIdFor", "parameters": "(OLATResourceable olatResourceable)", "modifiers": "private", "return": "String", "signature": "String getCalendarIdFor(OLATResourceable olatResourceable)", "full_signature": "private String getCalendarIdFor(OLATResourceable olatResourceable)", "class_method_signature": "CalendarServiceImpl.getCalendarIdFor(OLATResourceable olatResourceable)", "testcase": false, "constructor": false}, {"identifier": "calendarExists", "parameters": "(String calendarType, String calendarID)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean calendarExists(String calendarType, String calendarID)", "full_signature": "@Override public boolean calendarExists(String calendarType, String calendarID)", "class_method_signature": "CalendarServiceImpl.calendarExists(String calendarType, String calendarID)", "testcase": false, "constructor": false}, {"identifier": "readCalendar", "parameters": "(String type, String calendarID)", "modifiers": "@Override public", "return": "Calendar", "signature": "Calendar readCalendar(String type, String calendarID)", "full_signature": "@Override public Calendar readCalendar(String type, String calendarID)", "class_method_signature": "CalendarServiceImpl.readCalendar(String type, String calendarID)", "testcase": false, "constructor": false}, {"identifier": "getCalendarFile", "parameters": "(String type, String calendarID)", "modifiers": "@Override public", "return": "File", "signature": "File getCalendarFile(String type, String calendarID)", "full_signature": "@Override public File getCalendarFile(String type, String calendarID)", "class_method_signature": "CalendarServiceImpl.getCalendarFile(String type, String calendarID)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(String type, String calendarID)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar getCalendar(String type, String calendarID)", "full_signature": "@Override public OlatCalendar getCalendar(String type, String calendarID)", "class_method_signature": "CalendarServiceImpl.getCalendar(String type, String calendarID)", "testcase": false, "constructor": false}, {"identifier": "deleteCalendar", "parameters": "(String calendarType, String calendarID)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteCalendar(String calendarType, String calendarID)", "full_signature": "@Override public boolean deleteCalendar(String calendarType, String calendarID)", "class_method_signature": "CalendarServiceImpl.deleteCalendar(String calendarType, String calendarID)", "testcase": false, "constructor": false}, {"identifier": "buildCalendarFrom", "parameters": "(String calendarContent, String calType, String calId)", "modifiers": "@Override public", "return": "OlatCalendar", "signature": "OlatCalendar buildCalendarFrom(String calendarContent, String calType, String calId)", "full_signature": "@Override public OlatCalendar buildCalendarFrom(String calendarContent, String calType, String calId)", "class_method_signature": "CalendarServiceImpl.buildCalendarFrom(String calendarContent, String calType, String calId)", "testcase": false, "constructor": false}, {"identifier": "persistCalendar", "parameters": "(OlatCalendar calendar)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean persistCalendar(OlatCalendar calendar)", "full_signature": "@Override public boolean persistCalendar(OlatCalendar calendar)", "class_method_signature": "CalendarServiceImpl.persistCalendar(OlatCalendar calendar)", "testcase": false, "constructor": false}, {"identifier": "writeCalendarToFile", "parameters": "(String calendarId, String calendarContent)", "modifiers": "@Override public", "return": "void", "signature": "void writeCalendarToFile(String calendarId, String calendarContent)", "full_signature": "@Override public void writeCalendarToFile(String calendarId, String calendarContent)", "class_method_signature": "CalendarServiceImpl.writeCalendarToFile(String calendarId, String calendarContent)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/lms/calendar/CalendarServiceImpl.java"}, "focal_method": {"identifier": "getGroupCalendar", "parameters": "(final BusinessGroup businessGroup)", "modifiers": "@Override public", "return": "OlatCalendar", "body": "@Override\n    public OlatCalendar getGroupCalendar(final BusinessGroup businessGroup) {\n        return calendarDao.getCalendar(CalendarDao.TYPE_GROUP, getCalendarIdFor(businessGroup));\n    }", "signature": "OlatCalendar getGroupCalendar(final BusinessGroup businessGroup)", "full_signature": "@Override public OlatCalendar getGroupCalendar(final BusinessGroup businessGroup)", "class_method_signature": "CalendarServiceImpl.getGroupCalendar(final BusinessGroup businessGroup)", "testcase": false, "constructor": false, "invocations": ["getCalendar", "getCalendarIdFor"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}