{"test_class": {"identifier": "GcmSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked private com.google.android.gcm.server.Sender gcmService;", "modifier": "@Mocked private", "type": "com.google.android.gcm.server.Sender", "declarator": "gcmService", "var_name": "gcmService"}, {"original_string": "@Mocked private MulticastResult gcmMulticastResult;", "modifier": "@Mocked private", "type": "MulticastResult", "declarator": "gcmMulticastResult", "var_name": "gcmMulticastResult"}, {"original_string": "@Mocked private Result gcmResult;", "modifier": "@Mocked private", "type": "Result", "declarator": "gcmResult", "var_name": "gcmResult"}, {"original_string": "private final String sourceId = \"someSourceId\";", "modifier": "private final", "type": "String", "declarator": "sourceId = \"someSourceId\"", "var_name": "sourceId"}, {"original_string": "private final DataSource source = new DataSource(sourceId, null, null, null);", "modifier": "private final", "type": "DataSource", "declarator": "source = new DataSource(sourceId, null, null, null)", "var_name": "source"}, {"original_string": "private final String gcmDeviceId = \"someGcmDeviceId\";", "modifier": "private final", "type": "String", "declarator": "gcmDeviceId = \"someGcmDeviceId\"", "var_name": "gcmDeviceId"}, {"original_string": "private final GcmClient client = new GcmClient(\"someId\", gcmDeviceId);", "modifier": "private final", "type": "GcmClient", "declarator": "client = new GcmClient(\"someId\", gcmDeviceId)", "var_name": "client"}, {"original_string": "private GcmSender sender;", "modifier": "private", "type": "GcmSender", "declarator": "sender", "var_name": "sender"}], "file": "server/src/test/java/org/jvalue/ods/notifications/sender/GcmSenderTest.java"}, "test_case": {"identifier": "testGcmRemove", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n\t@SuppressWarnings(\"unchecked\")\n\tpublic void testGcmRemove() throws Exception {\n\t\tnew Expectations() {{\n\t\t\tgcmService.send((Message) any, (List) any, anyInt); result = gcmMulticastResult;\n\t\t\tgcmMulticastResult.getResults(); result = Arrays.asList(gcmResult);\n\t\t\tgcmResult.getErrorCodeName(); result = Constants.ERROR_NOT_REGISTERED;\n\t\t}};\n\n\t\tsender.onNewDataComplete();\n\n\t\tAssert.assertEquals(SenderResult.Status.REMOVE_CLIENT, sender.getSenderResult().getStatus());\n\t}", "signature": "void testGcmRemove()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void testGcmRemove()", "class_method_signature": "GcmSenderTest.testGcmRemove()", "testcase": true, "constructor": false, "invocations": ["send", "getResults", "asList", "getErrorCodeName", "onNewDataComplete", "assertEquals", "getStatus", "getSenderResult"]}, "focal_class": {"identifier": "GcmSender", "superclass": "extends AbstractSender<GcmClient>", "interfaces": "", "fields": [{"original_string": "static final String \n\t\tDATA_KEY_SOURCE = \"source\",\n\t\tDATA_KEY_DEBUG = \"debug\";", "modifier": "static final", "type": "String", "declarator": "DATA_KEY_SOURCE = \"source\"", "var_name": "DATA_KEY_SOURCE"}, {"original_string": "private final com.google.android.gcm.server.Sender gcmSender;", "modifier": "private final", "type": "com.google.android.gcm.server.Sender", "declarator": "gcmSender", "var_name": "gcmSender"}], "methods": [{"identifier": "GcmSender", "parameters": "(\n\t\t\t@Assisted DataSource source,\n\t\t\t@Assisted GcmClient client,\n\t\t\tcom.google.android.gcm.server.Sender gcmSender)", "modifiers": "@Inject", "return": "", "signature": " GcmSender(\n\t\t\t@Assisted DataSource source,\n\t\t\t@Assisted GcmClient client,\n\t\t\tcom.google.android.gcm.server.Sender gcmSender)", "full_signature": "@Inject  GcmSender(\n\t\t\t@Assisted DataSource source,\n\t\t\t@Assisted GcmClient client,\n\t\t\tcom.google.android.gcm.server.Sender gcmSender)", "class_method_signature": "GcmSender.GcmSender(\n\t\t\t@Assisted DataSource source,\n\t\t\t@Assisted GcmClient client,\n\t\t\tcom.google.android.gcm.server.Sender gcmSender)", "testcase": false, "constructor": true}, {"identifier": "onNewDataStart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataStart()", "full_signature": "@Override public void onNewDataStart()", "class_method_signature": "GcmSender.onNewDataStart()", "testcase": false, "constructor": false}, {"identifier": "onNewDataItem", "parameters": "(ObjectNode data)", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataItem(ObjectNode data)", "full_signature": "@Override public void onNewDataItem(ObjectNode data)", "class_method_signature": "GcmSender.onNewDataItem(ObjectNode data)", "testcase": false, "constructor": false}, {"identifier": "onNewDataComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onNewDataComplete()", "full_signature": "@Override public void onNewDataComplete()", "class_method_signature": "GcmSender.onNewDataComplete()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/notifications/sender/GcmSender.java"}, "focal_method": {"identifier": "onNewDataComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void onNewDataComplete() {\n\t\t// gather data\n\t\tMap<String,String> payload = new HashMap<>();\n\t\tpayload.put(DATA_KEY_SOURCE, source.getId());\n\t\tpayload.put(DATA_KEY_DEBUG, Boolean.TRUE.toString());\n\n\t\tString collapseKey = source.getId();\n\n\t\tfinal List<String> devices = new ArrayList<>();\n\t\tdevices.add(client.getGcmClientId());\n\n\t\t// send\n\t\tMessage.Builder builder = new Message.Builder().collapseKey(collapseKey);\n\t\tfor (Map.Entry<String, String> e : payload.entrySet()) {\n\t\t\tbuilder.addData(e.getKey(), e.getValue());\n\t\t}\n\n\t\tMulticastResult multicastResult;\n\t\ttry {\n\t\t\tmulticastResult = gcmSender.send(builder.build(), devices, 5);\n\t\t} catch (IOException io) {\n\t\t\tsetErrorResult(io);\n\t\t\treturn;\n\t\t}\n\n\t\t// analyze the results\n\t\tList<Result> results = multicastResult.getResults();\n\t\tfor (int i = 0; i < devices.size(); i++) {\n\t\t\tString regId = devices.get(i);\n\t\t\tResult result = results.get(i);\n\t\t\tString messageId = result.getMessageId();\n\t\t\tif (messageId != null) {\n\t\t\t\tLog.info(\"Succesfully sent message to device: \"\n\t\t\t\t\t\t+ regId + \"; messageId = \" + messageId);\n\t\t\t\tString canonicalRegId = result.getCanonicalRegistrationId();\n\t\t\t\tif (canonicalRegId != null) {\n\t\t\t\t\t// same device has more than on registration id: update it\n\t\t\t\t\tsetUpdateClientResult(\n\t\t\t\t\t\t\tclient,\n\t\t\t\t\t\t\tnew GcmClient(client.getId(), canonicalRegId));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString error = result.getErrorCodeName();\n\t\t\t\tif (error.equals(Constants.ERROR_NOT_REGISTERED)) {\n\t\t\t\t\t// application has been removed from device - unregister it\n\t\t\t\t\tsetRemoveClientResult(client);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tsetErrorResult(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetSuccessResult();\n\t}", "signature": "void onNewDataComplete()", "full_signature": "@Override public void onNewDataComplete()", "class_method_signature": "GcmSender.onNewDataComplete()", "testcase": false, "constructor": false, "invocations": ["put", "getId", "put", "toString", "getId", "add", "getGcmClientId", "collapseKey", "entrySet", "addData", "getKey", "getValue", "send", "build", "setErrorResult", "getResults", "size", "get", "get", "getMessageId", "info", "getCanonicalRegistrationId", "setUpdateClientResult", "getId", "getErrorCodeName", "equals", "setRemoveClientResult", "setErrorResult", "setSuccessResult"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}