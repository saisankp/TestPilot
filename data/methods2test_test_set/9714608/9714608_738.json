{"test_class": {"identifier": "DBaseFileAttributeAccessorTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private URL resource;", "modifier": "private", "type": "URL", "declarator": "resource", "var_name": "resource"}, {"original_string": "private DBaseFileAttributePool pool;", "modifier": "private", "type": "DBaseFileAttributePool", "declarator": "pool", "var_name": "pool"}, {"original_string": "private DBaseFileAttributeAccessor accessor;", "modifier": "private", "type": "DBaseFileAttributeAccessor", "declarator": "accessor", "var_name": "accessor"}, {"original_string": "private static final String TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\"", "var_name": "TEST_FILENAME"}], "file": "advanced/dbasefile/src/test/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeAccessorTest.java"}, "test_case": {"identifier": "testGetRecordNumber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetRecordNumber() {\n\t\tassertEquals(4, this.accessor.getRecordNumber());\n\t}", "signature": "void testGetRecordNumber()", "full_signature": "@Test public void testGetRecordNumber()", "class_method_signature": "DBaseFileAttributeAccessorTest.testGetRecordNumber()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getRecordNumber"]}, "focal_class": {"identifier": "DBaseFileAttributeAccessor", "superclass": "extends AbstractBufferedAttributeProvider", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -9217458236045169471L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -9217458236045169471L", "var_name": "serialVersionUID"}, {"original_string": "private int recordNumber;", "modifier": "private", "type": "int", "declarator": "recordNumber", "var_name": "recordNumber"}, {"original_string": "private DBaseFileAttributePool pool;", "modifier": "private", "type": "DBaseFileAttributePool", "declarator": "pool", "var_name": "pool"}], "methods": [{"identifier": "DBaseFileAttributeAccessor", "parameters": "(DBaseFileAttributePool pool, int recordNumber)", "modifiers": "", "return": "", "signature": " DBaseFileAttributeAccessor(DBaseFileAttributePool pool, int recordNumber)", "full_signature": "  DBaseFileAttributeAccessor(DBaseFileAttributePool pool, int recordNumber)", "class_method_signature": "DBaseFileAttributeAccessor.DBaseFileAttributeAccessor(DBaseFileAttributePool pool, int recordNumber)", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "()", "modifiers": "@Pure public", "return": "URL", "signature": "URL getResource()", "full_signature": "@Pure public URL getResource()", "class_method_signature": "DBaseFileAttributeAccessor.getResource()", "testcase": false, "constructor": false}, {"identifier": "getRecordNumber", "parameters": "()", "modifiers": "@Pure public", "return": "int", "signature": "int getRecordNumber()", "full_signature": "@Pure public int getRecordNumber()", "class_method_signature": "DBaseFileAttributeAccessor.getRecordNumber()", "testcase": false, "constructor": false}, {"identifier": "getAttributeCount", "parameters": "()", "modifiers": "@Override @Pure public", "return": "int", "signature": "int getAttributeCount()", "full_signature": "@Override @Pure public int getAttributeCount()", "class_method_signature": "DBaseFileAttributeAccessor.getAttributeCount()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributeNames", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Collection<String>", "signature": "Collection<String> getAllAttributeNames()", "full_signature": "@Override @Pure public Collection<String> getAllAttributeNames()", "class_method_signature": "DBaseFileAttributeAccessor.getAllAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "loadValue", "parameters": "(String name)", "modifiers": "@Override protected", "return": "AttributeValue", "signature": "AttributeValue loadValue(String name)", "full_signature": "@Override protected AttributeValue loadValue(String name)", "class_method_signature": "DBaseFileAttributeAccessor.loadValue(String name)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(Map<String, Object> mapToFill)", "modifiers": "@Override @Pure public", "return": "void", "signature": "void toMap(Map<String, Object> mapToFill)", "full_signature": "@Override @Pure public void toMap(Map<String, Object> mapToFill)", "class_method_signature": "DBaseFileAttributeAccessor.toMap(Map<String, Object> mapToFill)", "testcase": false, "constructor": false}], "file": "advanced/dbasefile/src/main/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeAccessor.java"}, "focal_method": {"identifier": "getRecordNumber", "parameters": "()", "modifiers": "@Pure public", "return": "int", "body": "@Pure\n\tpublic int getRecordNumber() {\n\t\treturn this.recordNumber;\n\t}", "signature": "int getRecordNumber()", "full_signature": "@Pure public int getRecordNumber()", "class_method_signature": "DBaseFileAttributeAccessor.getRecordNumber()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}