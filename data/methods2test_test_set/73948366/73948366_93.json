{"test_class": {"identifier": "DataSourceFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ATHENZ_DBPOOL_PROP1 = \"athenz.zms.db_pool_test_prop\";", "modifier": "private static final", "type": "String", "declarator": "ATHENZ_DBPOOL_PROP1 = \"athenz.zms.db_pool_test_prop\"", "var_name": "ATHENZ_DBPOOL_PROP1"}], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/db/DataSourceFactoryTest.java"}, "test_case": {"identifier": "testRetrieveConfigSettingLongNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRetrieveConfigSettingLongNull() {\n        System.clearProperty(ATHENZ_DBPOOL_PROP1);\n        assertEquals(DataSourceFactory.retrieveConfigSetting(ATHENZ_DBPOOL_PROP1, 25L), 25L);\n    }", "signature": "void testRetrieveConfigSettingLongNull()", "full_signature": "@Test public void testRetrieveConfigSettingLongNull()", "class_method_signature": "DataSourceFactoryTest.testRetrieveConfigSettingLongNull()", "testcase": true, "constructor": false, "invocations": ["clearProperty", "assertEquals", "retrieveConfigSetting"]}, "focal_class": {"identifier": "DataSourceFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DataSourceFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DataSourceFactory.class)", "var_name": "LOG"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_MAX_TOTAL           = \"athenz.db.pool_max_total\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_MAX_TOTAL           = \"athenz.db.pool_max_total\"", "var_name": "ATHENZ_PROP_DBPOOL_MAX_TOTAL"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_MAX_IDLE            = \"athenz.db.pool_max_idle\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_MAX_IDLE            = \"athenz.db.pool_max_idle\"", "var_name": "ATHENZ_PROP_DBPOOL_MAX_IDLE"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_MIN_IDLE            = \"athenz.db.pool_min_idle\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_MIN_IDLE            = \"athenz.db.pool_min_idle\"", "var_name": "ATHENZ_PROP_DBPOOL_MIN_IDLE"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_MAX_WAIT            = \"athenz.db.pool_max_wait\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_MAX_WAIT            = \"athenz.db.pool_max_wait\"", "var_name": "ATHENZ_PROP_DBPOOL_MAX_WAIT"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_EVICT_IDLE_TIMEOUT  = \"athenz.db.pool_evict_idle_timeout\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_EVICT_IDLE_TIMEOUT  = \"athenz.db.pool_evict_idle_timeout\"", "var_name": "ATHENZ_PROP_DBPOOL_EVICT_IDLE_TIMEOUT"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_EVICT_IDLE_INTERVAL = \"athenz.db.pool_evict_idle_interval\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_EVICT_IDLE_INTERVAL = \"athenz.db.pool_evict_idle_interval\"", "var_name": "ATHENZ_PROP_DBPOOL_EVICT_IDLE_INTERVAL"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_MAX_TTL             = \"athenz.db.pool_max_ttl\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_MAX_TTL             = \"athenz.db.pool_max_ttl\"", "var_name": "ATHENZ_PROP_DBPOOL_MAX_TTL"}, {"original_string": "static final String ATHENZ_PROP_DBPOOL_VALIDATION_QUERY    = \"athenz.db.pool_validation_query\";", "modifier": "static final", "type": "String", "declarator": "ATHENZ_PROP_DBPOOL_VALIDATION_QUERY    = \"athenz.db.pool_validation_query\"", "var_name": "ATHENZ_PROP_DBPOOL_VALIDATION_QUERY"}, {"original_string": "static final long MAX_TTL_CONN_MS = TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES);", "modifier": "static final", "type": "long", "declarator": "MAX_TTL_CONN_MS = TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)", "var_name": "MAX_TTL_CONN_MS"}, {"original_string": "static final String MYSQL_VALIDATION_QUERY = \"/* ping */ SELECT 1\";", "modifier": "static final", "type": "String", "declarator": "MYSQL_VALIDATION_QUERY = \"/* ping */ SELECT 1\"", "var_name": "MYSQL_VALIDATION_QUERY"}, {"original_string": "static final String DRIVER_CLASS_NAME = \"athenz.db.driver.class\";", "modifier": "static final", "type": "String", "declarator": "DRIVER_CLASS_NAME = \"athenz.db.driver.class\"", "var_name": "DRIVER_CLASS_NAME"}], "methods": [{"identifier": "create", "parameters": "(String url, Properties mysqlConnectionProperties)", "modifiers": "public static", "return": "PoolableDataSource", "signature": "PoolableDataSource create(String url, Properties mysqlConnectionProperties)", "full_signature": "public static PoolableDataSource create(String url, Properties mysqlConnectionProperties)", "class_method_signature": "DataSourceFactory.create(String url, Properties mysqlConnectionProperties)", "testcase": false, "constructor": false}, {"identifier": "retrieveConfigSetting", "parameters": "(String propName, long defaultValue)", "modifiers": "static", "return": "long", "signature": "long retrieveConfigSetting(String propName, long defaultValue)", "full_signature": "static long retrieveConfigSetting(String propName, long defaultValue)", "class_method_signature": "DataSourceFactory.retrieveConfigSetting(String propName, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "retrieveConfigSetting", "parameters": "(String propName, int defaultValue)", "modifiers": "static", "return": "int", "signature": "int retrieveConfigSetting(String propName, int defaultValue)", "full_signature": "static int retrieveConfigSetting(String propName, int defaultValue)", "class_method_signature": "DataSourceFactory.retrieveConfigSetting(String propName, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "setupPoolConfig", "parameters": "()", "modifiers": "public static", "return": "GenericObjectPoolConfig", "signature": "GenericObjectPoolConfig setupPoolConfig()", "full_signature": "public static GenericObjectPoolConfig setupPoolConfig()", "class_method_signature": "DataSourceFactory.setupPoolConfig()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ConnectionFactory connectionFactory)", "modifiers": "static", "return": "PoolableDataSource", "signature": "PoolableDataSource create(ConnectionFactory connectionFactory)", "full_signature": "static PoolableDataSource create(ConnectionFactory connectionFactory)", "class_method_signature": "DataSourceFactory.create(ConnectionFactory connectionFactory)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/db/DataSourceFactory.java"}, "focal_method": {"identifier": "retrieveConfigSetting", "parameters": "(String propName, long defaultValue)", "modifiers": "static", "return": "long", "body": "static long retrieveConfigSetting(String propName, long defaultValue) {\n\n        String propValue = System.getProperty(propName);\n        if (propValue == null) {\n            return defaultValue;\n        }\n        \n        long value = defaultValue;\n        try {\n            value = Long.parseLong(propValue);\n        } catch (NumberFormatException ex) {\n            if (LOG.isWarnEnabled()) {\n                LOG.warn(\"Ignoring Invalid number({}) set in system property({}). Using default ({})\",\n                        propValue, propName, defaultValue);\n            }\n        }\n        \n        return value;\n    }", "signature": "long retrieveConfigSetting(String propName, long defaultValue)", "full_signature": "static long retrieveConfigSetting(String propName, long defaultValue)", "class_method_signature": "DataSourceFactory.retrieveConfigSetting(String propName, long defaultValue)", "testcase": false, "constructor": false, "invocations": ["getProperty", "parseLong", "isWarnEnabled", "warn"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}