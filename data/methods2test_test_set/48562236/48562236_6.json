{"test_class": {"identifier": "DefaultOAuth2ConfigTest", "superclass": "extends WebTestBase", "interfaces": "", "fields": [{"original_string": "protected @Inject OAuth2Config oc;", "modifier": "protected @Inject", "type": "OAuth2Config", "declarator": "oc", "var_name": "oc"}, {"original_string": "protected @Inject App app;", "modifier": "protected @Inject", "type": "App", "declarator": "app", "var_name": "app"}], "file": "oauth2/webapp/src/test/java/leap/oauth2/webapp/DefaultOAuth2ConfigTest.java"}, "test_case": {"identifier": "testOnServerInfoResolved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnServerInfoResolved(){\n        ServerInfo serverInfo = new ServerInfo();\n        serverInfo.setScheme(\"https\");\n        serverInfo.setHost(\"127.0.0.1\");\n        serverInfo.setPort(8080);\n        serverInfo.setContextPath(\"/\");\n        DefaultOAuth2Config config = (DefaultOAuth2Config)oc;\n        config.setServerUrl(\"/\");\n        config.setAuthorizeUrl(\"@{~/oauth2/authorize}\");\n        config.setLogoutUrl(\"@{/}indirect/oauth2/authorize\");\n        config.onServerInfoResolved(app,serverInfo);\n        \n        assertEquals(\"https://127.0.0.1:8080/oauth2/authorize\",config.getAuthorizeUrl());\n        assertEquals(\"https://127.0.0.1:8080/oauth2/token\",config.getTokenUrl());\n        assertEquals(\"https://127.0.0.1:8080/oauth2/tokeninfo\",config.getTokenInfoUrl());\n        assertEquals(\"https://127.0.0.1:8080/oauth2/publickey\",config.getPublicKeyUrl());\n        assertEquals(\"https://127.0.0.1:8080/indirect/oauth2/authorize\",config.getLogoutUrl());\n    }", "signature": "void testOnServerInfoResolved()", "full_signature": "@Test public void testOnServerInfoResolved()", "class_method_signature": "DefaultOAuth2ConfigTest.testOnServerInfoResolved()", "testcase": true, "constructor": false, "invocations": ["setScheme", "setHost", "setPort", "setContextPath", "setServerUrl", "setAuthorizeUrl", "setLogoutUrl", "onServerInfoResolved", "assertEquals", "getAuthorizeUrl", "assertEquals", "getTokenUrl", "assertEquals", "getTokenInfoUrl", "assertEquals", "getPublicKeyUrl", "assertEquals", "getLogoutUrl"]}, "focal_class": {"identifier": "DefaultOAuth2Config", "superclass": "", "interfaces": "implements OAuth2Config, OAuth2Configurator, AppInitializable, AppListener", "fields": [{"original_string": "protected @Inject SecurityConfigurator sc;", "modifier": "protected @Inject", "type": "SecurityConfigurator", "declarator": "sc", "var_name": "sc"}, {"original_string": "protected boolean enabled;", "modifier": "protected", "type": "boolean", "declarator": "enabled", "var_name": "enabled"}, {"original_string": "protected boolean login;", "modifier": "protected", "type": "boolean", "declarator": "login", "var_name": "login"}, {"original_string": "protected boolean logout;", "modifier": "protected", "type": "boolean", "declarator": "logout", "var_name": "logout"}, {"original_string": "protected boolean loginWithAccessToken;", "modifier": "protected", "type": "boolean", "declarator": "loginWithAccessToken", "var_name": "loginWithAccessToken"}, {"original_string": "protected boolean forceLookupUserInfo;", "modifier": "protected", "type": "boolean", "declarator": "forceLookupUserInfo", "var_name": "forceLookupUserInfo"}, {"original_string": "protected String  authorizeUrl;", "modifier": "protected", "type": "String", "declarator": "authorizeUrl", "var_name": "authorizeUrl"}, {"original_string": "protected String  tokenUrl;", "modifier": "protected", "type": "String", "declarator": "tokenUrl", "var_name": "tokenUrl"}, {"original_string": "protected String  indirectTokenUrl;", "modifier": "protected", "type": "String", "declarator": "indirectTokenUrl", "var_name": "indirectTokenUrl"}, {"original_string": "protected String  tokenInfoUrl;", "modifier": "protected", "type": "String", "declarator": "tokenInfoUrl", "var_name": "tokenInfoUrl"}, {"original_string": "protected String  userInfoUrl;", "modifier": "protected", "type": "String", "declarator": "userInfoUrl", "var_name": "userInfoUrl"}, {"original_string": "protected String  publicKeyUrl;", "modifier": "protected", "type": "String", "declarator": "publicKeyUrl", "var_name": "publicKeyUrl"}, {"original_string": "protected String  jwksUrl;", "modifier": "protected", "type": "String", "declarator": "jwksUrl", "var_name": "jwksUrl"}, {"original_string": "protected String  logoutUrl;", "modifier": "protected", "type": "String", "declarator": "logoutUrl", "var_name": "logoutUrl"}, {"original_string": "protected String  clientId;", "modifier": "protected", "type": "String", "declarator": "clientId", "var_name": "clientId"}, {"original_string": "protected String  clientSecret;", "modifier": "protected", "type": "String", "declarator": "clientSecret", "var_name": "clientSecret"}, {"original_string": "protected String  redirectUri;", "modifier": "protected", "type": "String", "declarator": "redirectUri", "var_name": "redirectUri"}, {"original_string": "protected String  errorView;", "modifier": "protected", "type": "String", "declarator": "errorView", "var_name": "errorView"}, {"original_string": "protected String  logoutView;", "modifier": "protected", "type": "String", "declarator": "logoutView", "var_name": "logoutView"}, {"original_string": "private List<RequestIgnore> ignoresList = new ArrayList<>();", "modifier": "private", "type": "List<RequestIgnore>", "declarator": "ignoresList = new ArrayList<>()", "var_name": "ignoresList"}, {"original_string": "private RequestIgnore[] ignoresArray = new RequestIgnore[] {};", "modifier": "private", "type": "RequestIgnore[]", "declarator": "ignoresArray = new RequestIgnore[] {}", "var_name": "ignoresArray"}, {"original_string": "protected @Inject UserDetailsLookup userDetailsLookup;", "modifier": "protected @Inject", "type": "UserDetailsLookup", "declarator": "userDetailsLookup", "var_name": "userDetailsLookup"}], "methods": [{"identifier": "config", "parameters": "()", "modifiers": "@Override public", "return": "OAuth2Config", "signature": "OAuth2Config config()", "full_signature": "@Override public OAuth2Config config()", "class_method_signature": "DefaultOAuth2Config.config()", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnabled()", "full_signature": "@Override public boolean isEnabled()", "class_method_signature": "DefaultOAuth2Config.isEnabled()", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setEnabled(boolean enabled)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setEnabled(boolean enabled)", "class_method_signature": "DefaultOAuth2Config.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "isLogin", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLogin()", "full_signature": "@Override public boolean isLogin()", "class_method_signature": "DefaultOAuth2Config.isLogin()", "testcase": false, "constructor": false}, {"identifier": "setLogin", "parameters": "(boolean login)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setLogin(boolean login)", "full_signature": "@ConfigProperty public void setLogin(boolean login)", "class_method_signature": "DefaultOAuth2Config.setLogin(boolean login)", "testcase": false, "constructor": false}, {"identifier": "isLogout", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLogout()", "full_signature": "@Override public boolean isLogout()", "class_method_signature": "DefaultOAuth2Config.isLogout()", "testcase": false, "constructor": false}, {"identifier": "setLogout", "parameters": "(boolean logout)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setLogout(boolean logout)", "full_signature": "@ConfigProperty public void setLogout(boolean logout)", "class_method_signature": "DefaultOAuth2Config.setLogout(boolean logout)", "testcase": false, "constructor": false}, {"identifier": "isLoginWithAccessToken", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLoginWithAccessToken()", "full_signature": "@Override public boolean isLoginWithAccessToken()", "class_method_signature": "DefaultOAuth2Config.isLoginWithAccessToken()", "testcase": false, "constructor": false}, {"identifier": "setLoginWithAccessToken", "parameters": "(boolean loginWithAccessToken)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setLoginWithAccessToken(boolean loginWithAccessToken)", "full_signature": "@ConfigProperty public void setLoginWithAccessToken(boolean loginWithAccessToken)", "class_method_signature": "DefaultOAuth2Config.setLoginWithAccessToken(boolean loginWithAccessToken)", "testcase": false, "constructor": false}, {"identifier": "isForceLookupUserInfo", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForceLookupUserInfo()", "full_signature": "@Override public boolean isForceLookupUserInfo()", "class_method_signature": "DefaultOAuth2Config.isForceLookupUserInfo()", "testcase": false, "constructor": false}, {"identifier": "setForceLookupUserInfo", "parameters": "(boolean forceLookupUserInfo)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setForceLookupUserInfo(boolean forceLookupUserInfo)", "full_signature": "@ConfigProperty public void setForceLookupUserInfo(boolean forceLookupUserInfo)", "class_method_signature": "DefaultOAuth2Config.setForceLookupUserInfo(boolean forceLookupUserInfo)", "testcase": false, "constructor": false}, {"identifier": "setServerUrl", "parameters": "(String serverUrl)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setServerUrl(String serverUrl)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setServerUrl(String serverUrl)", "class_method_signature": "DefaultOAuth2Config.setServerUrl(String serverUrl)", "testcase": false, "constructor": false}, {"identifier": "setIndirectServerUrl", "parameters": "(String indirectServerUrl)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setIndirectServerUrl(String indirectServerUrl)", "full_signature": "@ConfigProperty public void setIndirectServerUrl(String indirectServerUrl)", "class_method_signature": "DefaultOAuth2Config.setIndirectServerUrl(String indirectServerUrl)", "testcase": false, "constructor": false}, {"identifier": "setDirectServerUrl", "parameters": "(String directServerUrl)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setDirectServerUrl(String directServerUrl)", "full_signature": "@ConfigProperty public void setDirectServerUrl(String directServerUrl)", "class_method_signature": "DefaultOAuth2Config.setDirectServerUrl(String directServerUrl)", "testcase": false, "constructor": false}, {"identifier": "onServerInfoResolved", "parameters": "(App app, ServerInfo serverInfo)", "modifiers": "@Override public", "return": "void", "signature": "void onServerInfoResolved(App app, ServerInfo serverInfo)", "full_signature": "@Override public void onServerInfoResolved(App app, ServerInfo serverInfo)", "class_method_signature": "DefaultOAuth2Config.onServerInfoResolved(App app, ServerInfo serverInfo)", "testcase": false, "constructor": false}, {"identifier": "needParse", "parameters": "(String url)", "modifiers": "protected", "return": "boolean", "signature": "boolean needParse(String url)", "full_signature": "protected boolean needParse(String url)", "class_method_signature": "DefaultOAuth2Config.needParse(String url)", "testcase": false, "constructor": false}, {"identifier": "parseUrl", "parameters": "(String url,ServerInfo serverInfo)", "modifiers": "protected", "return": "String", "signature": "String parseUrl(String url,ServerInfo serverInfo)", "full_signature": "protected String parseUrl(String url,ServerInfo serverInfo)", "class_method_signature": "DefaultOAuth2Config.parseUrl(String url,ServerInfo serverInfo)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizeUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthorizeUrl()", "full_signature": "@Override public String getAuthorizeUrl()", "class_method_signature": "DefaultOAuth2Config.getAuthorizeUrl()", "testcase": false, "constructor": false}, {"identifier": "setAuthorizeUrl", "parameters": "(String url)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setAuthorizeUrl(String url)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setAuthorizeUrl(String url)", "class_method_signature": "DefaultOAuth2Config.setAuthorizeUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getTokenUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTokenUrl()", "full_signature": "@Override public String getTokenUrl()", "class_method_signature": "DefaultOAuth2Config.getTokenUrl()", "testcase": false, "constructor": false}, {"identifier": "getIndirectTokenUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIndirectTokenUrl()", "full_signature": "@Override public String getIndirectTokenUrl()", "class_method_signature": "DefaultOAuth2Config.getIndirectTokenUrl()", "testcase": false, "constructor": false}, {"identifier": "setIndirectTokenUrl", "parameters": "(String indirectTokenUrl)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setIndirectTokenUrl(String indirectTokenUrl)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setIndirectTokenUrl(String indirectTokenUrl)", "class_method_signature": "DefaultOAuth2Config.setIndirectTokenUrl(String indirectTokenUrl)", "testcase": false, "constructor": false}, {"identifier": "setTokenUrl", "parameters": "(String url)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setTokenUrl(String url)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setTokenUrl(String url)", "class_method_signature": "DefaultOAuth2Config.setTokenUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getTokenInfoUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTokenInfoUrl()", "full_signature": "@Override public String getTokenInfoUrl()", "class_method_signature": "DefaultOAuth2Config.getTokenInfoUrl()", "testcase": false, "constructor": false}, {"identifier": "setTokenInfoUrl", "parameters": "(String url)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setTokenInfoUrl(String url)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setTokenInfoUrl(String url)", "class_method_signature": "DefaultOAuth2Config.setTokenInfoUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getUserInfoUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUserInfoUrl()", "full_signature": "@Override public String getUserInfoUrl()", "class_method_signature": "DefaultOAuth2Config.getUserInfoUrl()", "testcase": false, "constructor": false}, {"identifier": "setUserInfoUrl", "parameters": "(String url)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setUserInfoUrl(String url)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setUserInfoUrl(String url)", "class_method_signature": "DefaultOAuth2Config.setUserInfoUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPublicKeyUrl()", "full_signature": "@Override public String getPublicKeyUrl()", "class_method_signature": "DefaultOAuth2Config.getPublicKeyUrl()", "testcase": false, "constructor": false}, {"identifier": "setPublicKeyUrl", "parameters": "(String url)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setPublicKeyUrl(String url)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setPublicKeyUrl(String url)", "class_method_signature": "DefaultOAuth2Config.setPublicKeyUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getJwksUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getJwksUrl()", "full_signature": "@Override public String getJwksUrl()", "class_method_signature": "DefaultOAuth2Config.getJwksUrl()", "testcase": false, "constructor": false}, {"identifier": "setJwksUrl", "parameters": "(String jwksUrl)", "modifiers": "public", "return": "void", "signature": "void setJwksUrl(String jwksUrl)", "full_signature": "public void setJwksUrl(String jwksUrl)", "class_method_signature": "DefaultOAuth2Config.setJwksUrl(String jwksUrl)", "testcase": false, "constructor": false}, {"identifier": "getLogoutUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLogoutUrl()", "full_signature": "@Override public String getLogoutUrl()", "class_method_signature": "DefaultOAuth2Config.getLogoutUrl()", "testcase": false, "constructor": false}, {"identifier": "setLogoutUrl", "parameters": "(String logoutUrl)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setLogoutUrl(String logoutUrl)", "full_signature": "@ConfigProperty public void setLogoutUrl(String logoutUrl)", "class_method_signature": "DefaultOAuth2Config.setLogoutUrl(String logoutUrl)", "testcase": false, "constructor": false}, {"identifier": "getClientId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClientId()", "full_signature": "@Override public String getClientId()", "class_method_signature": "DefaultOAuth2Config.getClientId()", "testcase": false, "constructor": false}, {"identifier": "ignorePath", "parameters": "(String path)", "modifiers": "@Override public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator ignorePath(String path)", "full_signature": "@Override public OAuth2Configurator ignorePath(String path)", "class_method_signature": "DefaultOAuth2Config.ignorePath(String path)", "testcase": false, "constructor": false}, {"identifier": "getIgnores", "parameters": "()", "modifiers": "@Override public", "return": "RequestIgnore[]", "signature": "RequestIgnore[] getIgnores()", "full_signature": "@Override public RequestIgnore[] getIgnores()", "class_method_signature": "DefaultOAuth2Config.getIgnores()", "testcase": false, "constructor": false}, {"identifier": "setClientId", "parameters": "(String clientId)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setClientId(String clientId)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setClientId(String clientId)", "class_method_signature": "DefaultOAuth2Config.setClientId(String clientId)", "testcase": false, "constructor": false}, {"identifier": "getClientSecret", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClientSecret()", "full_signature": "@Override public String getClientSecret()", "class_method_signature": "DefaultOAuth2Config.getClientSecret()", "testcase": false, "constructor": false}, {"identifier": "setClientSecret", "parameters": "(String clientSecret)", "modifiers": "@Override @ConfigProperty public", "return": "OAuth2Configurator", "signature": "OAuth2Configurator setClientSecret(String clientSecret)", "full_signature": "@Override @ConfigProperty public OAuth2Configurator setClientSecret(String clientSecret)", "class_method_signature": "DefaultOAuth2Config.setClientSecret(String clientSecret)", "testcase": false, "constructor": false}, {"identifier": "getRedirectUri", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRedirectUri()", "full_signature": "@Override public String getRedirectUri()", "class_method_signature": "DefaultOAuth2Config.getRedirectUri()", "testcase": false, "constructor": false}, {"identifier": "setRedirectUri", "parameters": "(String redirectUri)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setRedirectUri(String redirectUri)", "full_signature": "@ConfigProperty public void setRedirectUri(String redirectUri)", "class_method_signature": "DefaultOAuth2Config.setRedirectUri(String redirectUri)", "testcase": false, "constructor": false}, {"identifier": "getErrorView", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getErrorView()", "full_signature": "@Override public String getErrorView()", "class_method_signature": "DefaultOAuth2Config.getErrorView()", "testcase": false, "constructor": false}, {"identifier": "setErrorView", "parameters": "(String errorView)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setErrorView(String errorView)", "full_signature": "@ConfigProperty public void setErrorView(String errorView)", "class_method_signature": "DefaultOAuth2Config.setErrorView(String errorView)", "testcase": false, "constructor": false}, {"identifier": "getLogoutView", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLogoutView()", "full_signature": "@Override public String getLogoutView()", "class_method_signature": "DefaultOAuth2Config.getLogoutView()", "testcase": false, "constructor": false}, {"identifier": "setLogoutView", "parameters": "(String logoutView)", "modifiers": "@ConfigProperty public", "return": "void", "signature": "void setLogoutView(String logoutView)", "full_signature": "@ConfigProperty public void setLogoutView(String logoutView)", "class_method_signature": "DefaultOAuth2Config.setLogoutView(String logoutView)", "testcase": false, "constructor": false}, {"identifier": "postAppInit", "parameters": "(App app)", "modifiers": "@Override public", "return": "void", "signature": "void postAppInit(App app)", "full_signature": "@Override public void postAppInit(App app)", "class_method_signature": "DefaultOAuth2Config.postAppInit(App app)", "testcase": false, "constructor": false}], "file": "oauth2/webapp/src/main/java/leap/oauth2/webapp/DefaultOAuth2Config.java"}, "focal_method": {"identifier": "onServerInfoResolved", "parameters": "(App app, ServerInfo serverInfo)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onServerInfoResolved(App app, ServerInfo serverInfo) {\n        this.authorizeUrl = parseUrl(this.authorizeUrl,serverInfo);\n        this.tokenUrl = parseUrl(this.tokenUrl,serverInfo);\n        this.tokenInfoUrl = parseUrl(this.tokenInfoUrl,serverInfo);\n        this.userInfoUrl = parseUrl(this.userInfoUrl,serverInfo);\n        this.publicKeyUrl = parseUrl(this.publicKeyUrl,serverInfo);\n        this.logoutUrl = parseUrl(this.logoutUrl,serverInfo);\n    }", "signature": "void onServerInfoResolved(App app, ServerInfo serverInfo)", "full_signature": "@Override public void onServerInfoResolved(App app, ServerInfo serverInfo)", "class_method_signature": "DefaultOAuth2Config.onServerInfoResolved(App app, ServerInfo serverInfo)", "testcase": false, "constructor": false, "invocations": ["parseUrl", "parseUrl", "parseUrl", "parseUrl", "parseUrl", "parseUrl"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}