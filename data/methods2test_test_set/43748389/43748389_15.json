{"test_class": {"identifier": "TimeUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/utils/TimeUtilsTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        assertThat(\"m\".equals(TimeUtils.toTimePrecision(TimeUnit.MINUTES)));\n        assertThat(\"h\".equals(TimeUtils.toTimePrecision(TimeUnit.HOURS)));\n        assertThat(\"s\".equals(TimeUtils.toTimePrecision(TimeUnit.SECONDS)));\n        assertThat(\"ms\".equals(TimeUtils.toTimePrecision(TimeUnit.MILLISECONDS)));\n        assertThat(\"u\".equals(TimeUtils.toTimePrecision(TimeUnit.MICROSECONDS)));\n        assertThat(\"n\".equals(TimeUtils.toTimePrecision(TimeUnit.NANOSECONDS)));\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "TimeUtilsTest.test()", "testcase": true, "constructor": false, "invocations": ["assertThat", "equals", "toTimePrecision", "assertThat", "equals", "toTimePrecision", "assertThat", "equals", "toTimePrecision", "assertThat", "equals", "toTimePrecision", "assertThat", "equals", "toTimePrecision", "assertThat", "equals", "toTimePrecision"]}, "focal_class": {"identifier": "TimeUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toTimePrecision", "parameters": "(final TimeUnit t)", "modifiers": "public static", "return": "String", "signature": "String toTimePrecision(final TimeUnit t)", "full_signature": "public static String toTimePrecision(final TimeUnit t)", "class_method_signature": "TimeUtils.toTimePrecision(final TimeUnit t)", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/utils/TimeUtils.java"}, "focal_method": {"identifier": "toTimePrecision", "parameters": "(final TimeUnit t)", "modifiers": "public static", "return": "String", "body": "public static String toTimePrecision(final TimeUnit t) {\n        switch (t) {\n            case HOURS:\n                return \"h\";\n            case MINUTES:\n                return \"m\";\n            case SECONDS:\n                return \"s\";\n            case MILLISECONDS:\n                return \"ms\";\n            case MICROSECONDS:\n                return \"u\";\n            case NANOSECONDS:\n                return \"n\";\n            default:\n                EnumSet<TimeUnit> allowedTimeunits = EnumSet.of(\n                    TimeUnit.HOURS,\n                    TimeUnit.MINUTES,\n                    TimeUnit.SECONDS,\n                    TimeUnit.MILLISECONDS,\n                    TimeUnit.MICROSECONDS,\n                    TimeUnit.NANOSECONDS);\n                throw new IllegalArgumentException(\"time precision must be one of:\" + allowedTimeunits);\n        }\n    }", "signature": "String toTimePrecision(final TimeUnit t)", "full_signature": "public static String toTimePrecision(final TimeUnit t)", "class_method_signature": "TimeUtils.toTimePrecision(final TimeUnit t)", "testcase": false, "constructor": false, "invocations": ["of"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}