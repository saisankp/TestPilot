{"test_class": {"identifier": "TestTinyTablesElementVector", "superclass": "", "interfaces": "", "fields": [], "file": "suite/tinytables/src/test/java/dk/alexandra/fresco/suite/tinytables/datatypes/TestTinyTablesElementVector.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGet() {\n    byte[] shares = new byte[] { 0x00, 0x01 };\n    TinyTablesElementVector vector = new TinyTablesElementVector(shares, Byte.SIZE * shares.length);\n    for (int i = 0; i < Byte.SIZE * shares.length; i++) {\n      assertThat(vector.get(i).getShare(), is(i == 8));\n    }\n  }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "TestTinyTablesElementVector.testGet()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getShare", "get", "is"]}, "focal_class": {"identifier": "TinyTablesElementVector", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 7821130884908398461L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7821130884908398461L", "var_name": "serialVersionUID"}, {"original_string": "private final RegularBitVector values;", "modifier": "private final", "type": "RegularBitVector", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "TinyTablesElementVector", "parameters": "(byte[] shares, int size)", "modifiers": "public", "return": "", "signature": " TinyTablesElementVector(byte[] shares, int size)", "full_signature": "public  TinyTablesElementVector(byte[] shares, int size)", "class_method_signature": "TinyTablesElementVector.TinyTablesElementVector(byte[] shares, int size)", "testcase": false, "constructor": true}, {"identifier": "TinyTablesElementVector", "parameters": "(int size)", "modifiers": "public", "return": "", "signature": " TinyTablesElementVector(int size)", "full_signature": "public  TinyTablesElementVector(int size)", "class_method_signature": "TinyTablesElementVector.TinyTablesElementVector(int size)", "testcase": false, "constructor": true}, {"identifier": "setShare", "parameters": "(int index, boolean share)", "modifiers": "public", "return": "void", "signature": "void setShare(int index, boolean share)", "full_signature": "public void setShare(int index, boolean share)", "class_method_signature": "TinyTablesElementVector.setShare(int index, boolean share)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "TinyTablesElement", "signature": "TinyTablesElement get(int index)", "full_signature": "public TinyTablesElement get(int index)", "class_method_signature": "TinyTablesElementVector.get(int index)", "testcase": false, "constructor": false}, {"identifier": "payload", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] payload()", "full_signature": "public byte[] payload()", "class_method_signature": "TinyTablesElementVector.payload()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSize()", "full_signature": "public int getSize()", "class_method_signature": "TinyTablesElementVector.getSize()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(TinyTablesElementVector... vectors)", "modifiers": "public static", "return": "RegularBitVector", "signature": "RegularBitVector open(TinyTablesElementVector... vectors)", "full_signature": "public static RegularBitVector open(TinyTablesElementVector... vectors)", "class_method_signature": "TinyTablesElementVector.open(TinyTablesElementVector... vectors)", "testcase": false, "constructor": false}], "file": "suite/tinytables/src/main/java/dk/alexandra/fresco/suite/tinytables/datatypes/TinyTablesElementVector.java"}, "focal_method": {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "TinyTablesElement", "body": "public TinyTablesElement get(int index) {\n    return TinyTablesElement.getInstance(values.getBit(index));\n  }", "signature": "TinyTablesElement get(int index)", "full_signature": "public TinyTablesElement get(int index)", "class_method_signature": "TinyTablesElementVector.get(int index)", "testcase": false, "constructor": false, "invocations": ["getInstance", "getBit"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}