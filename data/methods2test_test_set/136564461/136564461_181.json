{"test_class": {"identifier": "HexEncoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/util/HexEncoderTest.java"}, "test_case": {"identifier": "failure_GetBytes_from_odd_hex_string", "parameters": "()", "modifiers": "@Test(expected = IllegalHexStringException.class) public", "return": "void", "body": "@Test(expected = IllegalHexStringException.class)\n    public void failure_GetBytes_from_odd_hex_string() {\n        String hex = \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1\";\n        byte[] result = HexEncoder.getBytes(hex);\n    }", "signature": "void failure_GetBytes_from_odd_hex_string()", "full_signature": "@Test(expected = IllegalHexStringException.class) public void failure_GetBytes_from_odd_hex_string()", "class_method_signature": "HexEncoderTest.failure_GetBytes_from_odd_hex_string()", "testcase": true, "constructor": false, "invocations": ["getBytes"]}, "focal_class": {"identifier": "HexEncoder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getBytes", "parameters": "(final String hexString)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getBytes(final String hexString)", "full_signature": "public static byte[] getBytes(final String hexString)", "class_method_signature": "HexEncoder.getBytes(final String hexString)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String getString(final byte[] bytes)", "full_signature": "public static String getString(final byte[] bytes)", "class_method_signature": "HexEncoder.getString(final byte[] bytes)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/util/HexEncoder.java"}, "focal_method": {"identifier": "getBytes", "parameters": "(final String hexString)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] getBytes(final String hexString) {\n        if (hexString.length() % 2 != 0)\n            throw new IllegalHexStringException(\"The length of your hex string is \"\n                    + hexString.length() + \". Odd-length is not allowed.\");\n        byte[] b = new byte[hexString.length() / 2];\n        for (int i = 0; i < b.length; i++) {\n            int index = i * 2;\n            int v = Integer.parseInt(hexString.substring(index, index + 2), 16);\n            b[i] = (byte) v;\n        }\n        return b;\n    }", "signature": "byte[] getBytes(final String hexString)", "full_signature": "public static byte[] getBytes(final String hexString)", "class_method_signature": "HexEncoder.getBytes(final String hexString)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "parseInt", "substring"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}