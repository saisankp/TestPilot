{"test_class": {"identifier": "MoneyTest", "superclass": "", "interfaces": "", "fields": [], "file": "shared-kernel/src/test/java/net/pkhapps/ddd/shared/domain/financial/MoneyTest.java"}, "test_case": {"identifier": "toString_noZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toString_noZero() {\n        assertThat(new Money(Currency.EUR, 212550).toString()).isEqualTo(\"EUR 2125.50\");\n    }", "signature": "void toString_noZero()", "full_signature": "@Test public void toString_noZero()", "class_method_signature": "MoneyTest.toString_noZero()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "Money", "superclass": "", "interfaces": "implements ValueObject", "fields": [{"original_string": "@JsonProperty(\"currency\")\n    private final Currency currency;", "modifier": "@JsonProperty(\"currency\")\n    private final", "type": "Currency", "declarator": "currency", "var_name": "currency"}, {"original_string": "@JsonProperty(\"amount\")\n    private final int amount;", "modifier": "@JsonProperty(\"amount\")\n    private final", "type": "int", "declarator": "amount", "var_name": "amount"}], "methods": [{"identifier": "Money", "parameters": "(@NonNull @JsonProperty(\"currency\") Currency currency, @JsonProperty(\"amount\") int amount)", "modifiers": "@JsonCreator public", "return": "", "signature": " Money(@NonNull @JsonProperty(\"currency\") Currency currency, @JsonProperty(\"amount\") int amount)", "full_signature": "@JsonCreator public  Money(@NonNull @JsonProperty(\"currency\") Currency currency, @JsonProperty(\"amount\") int amount)", "class_method_signature": "Money.Money(@NonNull @JsonProperty(\"currency\") Currency currency, @JsonProperty(\"amount\") int amount)", "testcase": false, "constructor": true}, {"identifier": "Money", "parameters": "(@NonNull Currency currency, double amount)", "modifiers": "public", "return": "", "signature": " Money(@NonNull Currency currency, double amount)", "full_signature": "public  Money(@NonNull Currency currency, double amount)", "class_method_signature": "Money.Money(@NonNull Currency currency, double amount)", "testcase": false, "constructor": true}, {"identifier": "valueOf", "parameters": "(Currency currency, Integer value)", "modifiers": "public static", "return": "Money", "signature": "Money valueOf(Currency currency, Integer value)", "full_signature": "public static Money valueOf(Currency currency, Integer value)", "class_method_signature": "Money.valueOf(Currency currency, Integer value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@NonNull Money augend)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money add(@NonNull Money augend)", "full_signature": "@NonNull public Money add(@NonNull Money augend)", "class_method_signature": "Money.add(@NonNull Money augend)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(@NonNull Money subtrahend)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money subtract(@NonNull Money subtrahend)", "full_signature": "@NonNull public Money subtract(@NonNull Money subtrahend)", "class_method_signature": "Money.subtract(@NonNull Money subtrahend)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(int multiplicand)", "modifiers": "@NonNull public", "return": "Money", "signature": "Money multiply(int multiplicand)", "full_signature": "@NonNull public Money multiply(int multiplicand)", "class_method_signature": "Money.multiply(int multiplicand)", "testcase": false, "constructor": false}, {"identifier": "currency", "parameters": "()", "modifiers": "@NonNull public", "return": "Currency", "signature": "Currency currency()", "full_signature": "@NonNull public Currency currency()", "class_method_signature": "Money.currency()", "testcase": false, "constructor": false}, {"identifier": "fixedPointAmount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int fixedPointAmount()", "full_signature": "public int fixedPointAmount()", "class_method_signature": "Money.fixedPointAmount()", "testcase": false, "constructor": false}, {"identifier": "doubleAmount", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double doubleAmount()", "full_signature": "public double doubleAmount()", "class_method_signature": "Money.doubleAmount()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Money.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Money.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Money.toString()", "testcase": false, "constructor": false}], "file": "shared-kernel/src/main/java/net/pkhapps/ddd/shared/domain/financial/Money.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        String amountString;\n        if (amount == 0) {\n            amountString = \"000\";\n        } else {\n            amountString = Integer.toString(amount);\n        }\n        return String.format(\"%s %s.%s\", currency, amountString.substring(0, amountString.length() - 2),\n                amountString.substring(amountString.length() - 2));\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Money.toString()", "testcase": false, "constructor": false, "invocations": ["toString", "format", "substring", "length", "substring", "length"]}, "repository": {"repo_id": 158126654, "url": "https://github.com/peholmst/DDDExample", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 18, "size": 110, "license": "licensed"}}