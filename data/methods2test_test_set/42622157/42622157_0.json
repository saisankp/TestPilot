{"test_class": {"identifier": "BPMN4Tosca2BpelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static String RESOURCES_DIR = \"src/test/resources/bpmn4tosca\";", "modifier": "protected static", "type": "String", "declarator": "RESOURCES_DIR = \"src/test/resources/bpmn4tosca\"", "var_name": "RESOURCES_DIR"}], "file": "org.eclipse.winery.bpmn4tosca.converter.tobpel/src/test/java/org/eclipse/winery/bpmn2bpel/BPMN4Tosca2BpelTest.java"}, "test_case": {"identifier": "testTransform", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTransform() throws ParseException, PlanWriterException, MalformedURLException, URISyntaxException {\n        URI srcUri = Paths.get(RESOURCES_DIR, \"bpmn4tosca.json\").toUri();\n        URI targetUri = Paths.get(RESOURCES_DIR, \"managementplan.zip\").toUri();\n        BPMN4Tosca2BpelTest.class.getResource(\".\");\n        Bpmn4Tosca2Bpel transformer = new Bpmn4Tosca2Bpel();\n        transformer.transform(srcUri, targetUri);\n    }", "signature": "void testTransform()", "full_signature": "@Test public void testTransform()", "class_method_signature": "BPMN4Tosca2BpelTest.testTransform()", "testcase": true, "constructor": false, "invocations": ["toUri", "get", "toUri", "get", "getResource", "transform"]}, "focal_class": {"identifier": "Bpmn4Tosca2Bpel", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String FILE_NAME_PLAN = \"management_plan.bpel\";", "modifier": "public static final", "type": "String", "declarator": "FILE_NAME_PLAN = \"management_plan.bpel\"", "var_name": "FILE_NAME_PLAN"}, {"original_string": "public static final String FILE_NAME_PLAN_WSDL = \"management_plan.wsdl\";", "modifier": "public static final", "type": "String", "declarator": "FILE_NAME_PLAN_WSDL = \"management_plan.wsdl\"", "var_name": "FILE_NAME_PLAN_WSDL"}, {"original_string": "public static final String FILE_NAME_INVOKER_WSDL = \"invoker.wsdl\";", "modifier": "public static final", "type": "String", "declarator": "FILE_NAME_INVOKER_WSDL = \"invoker.wsdl\"", "var_name": "FILE_NAME_INVOKER_WSDL"}, {"original_string": "public static final String FILE_NAME_INVOKER_XSD = \"invoker.xsd\";", "modifier": "public static final", "type": "String", "declarator": "FILE_NAME_INVOKER_XSD = \"invoker.xsd\"", "var_name": "FILE_NAME_INVOKER_XSD"}, {"original_string": "public static final String FILE_NAME_DEPLOYMENT_DESC = \"deploy.xml\";", "modifier": "public static final", "type": "String", "declarator": "FILE_NAME_DEPLOYMENT_DESC = \"deploy.xml\"", "var_name": "FILE_NAME_DEPLOYMENT_DESC"}, {"original_string": "public static final String DIR_NAME_TEMP_BPMN4TOSCA = \"bpmn4tosca\";", "modifier": "public static final", "type": "String", "declarator": "DIR_NAME_TEMP_BPMN4TOSCA = \"bpmn4tosca\"", "var_name": "DIR_NAME_TEMP_BPMN4TOSCA"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Bpmn4Tosca2Bpel.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Bpmn4Tosca2Bpel.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "transform", "parameters": "(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "modifiers": "public", "return": "void", "signature": "void transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "full_signature": "public void transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "class_method_signature": "Bpmn4Tosca2Bpel.transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.bpmn4tosca.converter.tobpel/src/main/java/org/eclipse/winery/bpmn2bpel/Bpmn4Tosca2Bpel.java"}, "focal_method": {"identifier": "transform", "parameters": "(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "modifiers": "public", "return": "void", "body": "public void transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive) throws ParseException, PlanWriterException {\n\t\t//LOGGER.debug(\"Transforming \");\n\n\t\tBpmn4JsonParser parser = new Bpmn4JsonParser();//TODO To singleton\n\t\t/* Create object representation of Json */\n\t\tManagementFlow managementFlow = parser.parse(srcBpmn4ToscaJsonFile);\n\n\t\tList<Path> planArtefactPaths = new ArrayList<Path>();\n\t\ttry {\n\t\t\tPath tempPath = FileUtil.createTempDir(DIR_NAME_TEMP_BPMN4TOSCA);\n\n\t\t\tBpelPlanArtefactWriter writer = new BpelPlanArtefactWriter(managementFlow);\n\n\t\t\tString plan = writer.completePlanTemplate();\n\t\t\tplanArtefactPaths.add(FileUtil.writeStringToFile(plan, Paths.get(tempPath.toString(), FILE_NAME_PLAN)));\n\n\t\t\tString planWsdl = writer.completePlanWsdlTemplate();\n\t\t\tplanArtefactPaths.add(FileUtil.writeStringToFile(planWsdl, Paths.get(tempPath.toString(), FILE_NAME_PLAN_WSDL)));\n\n\t\t\tString invokerWsdl = writer.completeInvokerWsdlTemplate();\n\t\t\tplanArtefactPaths.add(FileUtil.writeStringToFile(invokerWsdl, Paths.get(tempPath.toString(), FILE_NAME_INVOKER_WSDL)));\n\n\t\t\tString invokerXsd = writer.completeInvokerXsdTemplate();\n\t\t\tplanArtefactPaths.add(FileUtil.writeStringToFile(invokerXsd, Paths.get(tempPath.toString(), FILE_NAME_INVOKER_XSD)));\n\n\t\t\tString deploymentDesc = writer.completeDeploymentDescriptorTemplate();\n\t\t\tplanArtefactPaths.add(FileUtil.writeStringToFile(deploymentDesc, Paths.get(tempPath.toString(), FILE_NAME_DEPLOYMENT_DESC)));\n\n\t\t\tLOGGER.debug(\"Creating BPEL Archive...\");\n\t\t\tPath zipFilePath = FileUtil.createApacheOdeProcessArchive(Paths.get(targetBPELArchive), planArtefactPaths);\n\t\t\tLOGGER.debug(\"Management plan zip file saved to \" + zipFilePath.toString());\n\t\t} catch (Exception e) {\n\t\t\tthrow new PlanWriterException(e);\n\t\t} finally {\n\t\t\t/* Delete created plan artifact files from temp directory */\n\t\t\ttry {\n\t\t\t\tLOGGER.debug(\"Deleting temporary plan artefact files...\");\n\t\t\t\tFileUtil.deleteFiles(planArtefactPaths);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new PlanWriterException(e);\n\t\t\t}\n\t\t}\n\t}", "signature": "void transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "full_signature": "public void transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "class_method_signature": "Bpmn4Tosca2Bpel.transform(URI srcBpmn4ToscaJsonFile, URI targetBPELArchive)", "testcase": false, "constructor": false, "invocations": ["parse", "createTempDir", "completePlanTemplate", "add", "writeStringToFile", "get", "toString", "completePlanWsdlTemplate", "add", "writeStringToFile", "get", "toString", "completeInvokerWsdlTemplate", "add", "writeStringToFile", "get", "toString", "completeInvokerXsdTemplate", "add", "writeStringToFile", "get", "toString", "completeDeploymentDescriptorTemplate", "add", "writeStringToFile", "get", "toString", "debug", "createApacheOdeProcessArchive", "get", "debug", "toString", "debug", "deleteFiles"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}