{"test_class": {"identifier": "VersionTest", "superclass": "", "interfaces": "", "fields": [], "file": "sdkfido/src/test/java/net/erdfelt/android/sdkfido/sdks/VersionTest.java"}, "test_case": {"identifier": "testVersionComparable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testVersionComparable() {\n        String unsorted[] = { \"1.5\", \"2.3.1\", \"1.0\", \"2.2\", \"2.3\" };\n        String expected[] = { \"2.3.1\", \"2.3\", \"2.2\", \"1.5\", \"1.0\" };\n\n        List<Version> versions = new ArrayList<Version>();\n        for (String u : unsorted) {\n            versions.add(new Version(u));\n        }\n\n        System.out.printf(\"Unsorted: %s%n\", versions);\n        Collections.sort(versions);\n        System.out.printf(\"Sorted: %s%n\", versions);\n\n        int len = expected.length;\n        Assert.assertEquals(\"Expected.length\", expected.length, versions.size());\n        for (int i = 0; i < len; i++) {\n            Assert.assertEquals(\"Expected[\" + i + \"]\", expected[i], versions.get(i).toString());\n        }\n    }", "signature": "void testVersionComparable()", "full_signature": "@Test public void testVersionComparable()", "class_method_signature": "VersionTest.testVersionComparable()", "testcase": true, "constructor": false, "invocations": ["add", "printf", "sort", "printf", "assertEquals", "size", "assertEquals", "toString", "get"]}, "focal_class": {"identifier": "Version", "superclass": "", "interfaces": "implements Comparable<Version>", "fields": [{"original_string": "private int major;", "modifier": "private", "type": "int", "declarator": "major", "var_name": "major"}, {"original_string": "private int minor;", "modifier": "private", "type": "int", "declarator": "minor", "var_name": "minor"}, {"original_string": "private int point;", "modifier": "private", "type": "int", "declarator": "point", "var_name": "point"}], "methods": [{"identifier": "Version", "parameters": "(int maj, int minor)", "modifiers": "public", "return": "", "signature": " Version(int maj, int minor)", "full_signature": "public  Version(int maj, int minor)", "class_method_signature": "Version.Version(int maj, int minor)", "testcase": false, "constructor": true}, {"identifier": "Version", "parameters": "(int maj, int minor, int point)", "modifiers": "public", "return": "", "signature": " Version(int maj, int minor, int point)", "full_signature": "public  Version(int maj, int minor, int point)", "class_method_signature": "Version.Version(int maj, int minor, int point)", "testcase": false, "constructor": true}, {"identifier": "Version", "parameters": "(String ver)", "modifiers": "public", "return": "", "signature": " Version(String ver)", "full_signature": "public  Version(String ver)", "class_method_signature": "Version.Version(String ver)", "testcase": false, "constructor": true}, {"identifier": "compareTo", "parameters": "(Version o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Version o)", "full_signature": "@Override public int compareTo(Version o)", "class_method_signature": "Version.compareTo(Version o)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Version.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getMajor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMajor()", "full_signature": "public int getMajor()", "class_method_signature": "Version.getMajor()", "testcase": false, "constructor": false}, {"identifier": "getMinor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinor()", "full_signature": "public int getMinor()", "class_method_signature": "Version.getMinor()", "testcase": false, "constructor": false}, {"identifier": "getPoint", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPoint()", "full_signature": "public int getPoint()", "class_method_signature": "Version.getPoint()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Version.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Version.toString()", "testcase": false, "constructor": false}], "file": "sdkfido/src/main/java/net/erdfelt/android/sdkfido/sdks/Version.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder msg = new StringBuilder();\n        msg.append(this.major).append('.').append(this.minor);\n        if (this.point > 0) {\n            msg.append('.').append(this.point);\n        }\n        return msg.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Version.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 1332011, "url": "https://github.com/joakime/android-sdkfido", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 9, "size": 984, "license": "licensed"}}