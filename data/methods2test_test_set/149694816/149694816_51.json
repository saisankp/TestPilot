{"test_class": {"identifier": "AergoPoolTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/util/AergoPoolTest.java"}, "test_case": {"identifier": "testBorrowResource", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") @PrepareForTest(NettyChannelBuilder.class) public", "return": "void", "body": "@Test\n  @SuppressWarnings(\"unchecked\")\n  @PrepareForTest(NettyChannelBuilder.class)\n  public void testBorrowResource() throws Exception {\n    // Given\n    final NettyConnectStrategy connectStrategy = mock(NettyConnectStrategy.class);\n    final NettyChannelBuilder managedChannel = mock(NettyChannelBuilder.class);\n    whenNew(NettyConnectStrategy.class).withAnyArguments().thenReturn(connectStrategy);\n    when(connectStrategy.connect()).thenReturn(managedChannel);\n\n    // When\n    final AergoPool pool = new AergoPool(randomUUID().toString());\n    // Then\n    assertNotNull(pool.borrowResource());\n  }", "signature": "void testBorrowResource()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") @PrepareForTest(NettyChannelBuilder.class) public void testBorrowResource()", "class_method_signature": "AergoPoolTest.testBorrowResource()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "withAnyArguments", "whenNew", "thenReturn", "when", "connect", "toString", "randomUUID", "assertNotNull", "borrowResource"]}, "focal_class": {"identifier": "AergoPool", "superclass": "", "interfaces": "implements ResourcePool<AergoApi>", "fields": [{"original_string": "@Getter\n  protected final String hostnameAndPort;", "modifier": "@Getter\n  protected final", "type": "String", "declarator": "hostnameAndPort", "var_name": "hostnameAndPort"}], "methods": [{"identifier": "borrowResource", "parameters": "()", "modifiers": "@Override public", "return": "AergoApi", "signature": "AergoApi borrowResource()", "full_signature": "@Override public AergoApi borrowResource()", "class_method_signature": "AergoPool.borrowResource()", "testcase": false, "constructor": false}, {"identifier": "returnResource", "parameters": "(final AergoApi resource)", "modifiers": "@Override public", "return": "void", "signature": "void returnResource(final AergoApi resource)", "full_signature": "@Override public void returnResource(final AergoApi resource)", "class_method_signature": "AergoPool.returnResource(final AergoApi resource)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/util/AergoPool.java"}, "focal_method": {"identifier": "borrowResource", "parameters": "()", "modifiers": "@Override public", "return": "AergoApi", "body": "@Override\n  public AergoApi borrowResource() {\n    return new AergoClientBuilder()\n        .withEndpoint(hostnameAndPort)\n        .build();\n  }", "signature": "AergoApi borrowResource()", "full_signature": "@Override public AergoApi borrowResource()", "class_method_signature": "AergoPool.borrowResource()", "testcase": false, "constructor": false, "invocations": ["build", "withEndpoint"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}