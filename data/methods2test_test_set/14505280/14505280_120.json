{"test_class": {"identifier": "LoginAllowedSecurityServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/staticsecurity/staticsecurity/src/test/java/org/geomajas/plugin/staticsecurity/security/LoginAllowedSecurityServiceTest.java"}, "test_case": {"identifier": "testLoginAllowedService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoginAllowedService() {\n\t\tLoginAllowedSecurityService service = new LoginAllowedSecurityService();\n\t\tAuthentication auth = service.getAuthentication(\"bla\");\n\t\tAssert.assertNotNull(auth);\n\t\tAssert.assertEquals(1, auth.getAuthorizations().length);\n\t\tBaseAuthorization authorization = auth.getAuthorizations()[0];\n\t\tAssert.assertTrue(authorization.isCommandAuthorized(LoginRequest.COMMAND));\n\t\tAssert.assertTrue(authorization.isCommandAuthorized(LogoutRequest.COMMAND));\n\t\tAssert.assertFalse(authorization.isCommandAuthorized(\"command.staticsecurity.Other\"));\n\t}", "signature": "void testLoginAllowedService()", "full_signature": "@Test public void testLoginAllowedService()", "class_method_signature": "LoginAllowedSecurityServiceTest.testLoginAllowedService()", "testcase": true, "constructor": false, "invocations": ["getAuthentication", "assertNotNull", "assertEquals", "getAuthorizations", "getAuthorizations", "assertTrue", "isCommandAuthorized", "assertTrue", "isCommandAuthorized", "assertFalse", "isCommandAuthorized"]}, "focal_class": {"identifier": "LoginAllowedSecurityService", "superclass": "", "interfaces": "implements SecurityService", "fields": [], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "LoginAllowedSecurityService.getId()", "testcase": false, "constructor": false}, {"identifier": "getAuthentication", "parameters": "(String authenticationToken)", "modifiers": "@Override public", "return": "Authentication", "signature": "Authentication getAuthentication(String authenticationToken)", "full_signature": "@Override public Authentication getAuthentication(String authenticationToken)", "class_method_signature": "LoginAllowedSecurityService.getAuthentication(String authenticationToken)", "testcase": false, "constructor": false}], "file": "plugin/staticsecurity/staticsecurity/src/main/java/org/geomajas/plugin/staticsecurity/security/LoginAllowedSecurityService.java"}, "focal_method": {"identifier": "getAuthentication", "parameters": "(String authenticationToken)", "modifiers": "@Override public", "return": "Authentication", "body": "@Override\n\tpublic Authentication getAuthentication(String authenticationToken) {\n\t\tAuthentication auth = new Authentication();\n\t\tauth.setAuthorizations(new BaseAuthorization[]{new LoginAuthorization()});\n\t\tauth.setUserId(\"anonymous\");\n\t\treturn auth;\n\t}", "signature": "Authentication getAuthentication(String authenticationToken)", "full_signature": "@Override public Authentication getAuthentication(String authenticationToken)", "class_method_signature": "LoginAllowedSecurityService.getAuthentication(String authenticationToken)", "testcase": false, "constructor": false, "invocations": ["setAuthorizations", "setUserId"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}