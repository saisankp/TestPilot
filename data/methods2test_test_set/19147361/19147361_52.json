{"test_class": {"identifier": "TestColumn", "superclass": "", "interfaces": "", "fields": [], "file": "themis-coprocessor/src/test/java/org/apache/hadoop/hbase/themis/columns/TestColumn.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCompareTo() {\n    byte[] a = Bytes.toBytes(\"a\");\n    byte[] b = Bytes.toBytes(\"b\");\n    Column columnA = new Column(a, b);\n    Column columnB = new Column(a, b);\n    Assert.assertEquals(0, columnA.compareTo(columnB));\n    columnA = new Column(a, a);\n    columnB = new Column(a, b);\n    Assert.assertEquals(-1, columnA.compareTo(columnB));\n    columnA = new Column(a, b);\n    columnB = new Column(b, a);\n    Assert.assertEquals(-1, columnA.compareTo(columnB));\n    columnA = new Column(a, b);\n    columnB = new Column(a, a);\n    Assert.assertEquals(1, columnA.compareTo(columnB));\n    columnA = new Column(b, a);\n    columnB = new Column(a, b);\n    Assert.assertEquals(1, columnA.compareTo(columnB));\n  }", "signature": "void testCompareTo()", "full_signature": "@Test public void testCompareTo()", "class_method_signature": "TestColumn.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["toBytes", "toBytes", "assertEquals", "compareTo", "assertEquals", "compareTo", "assertEquals", "compareTo", "assertEquals", "compareTo", "assertEquals", "compareTo"]}, "focal_class": {"identifier": "Column", "superclass": "", "interfaces": "implements Writable, Comparable<Column>", "fields": [{"original_string": "protected byte[] family;", "modifier": "protected", "type": "byte[]", "declarator": "family", "var_name": "family"}, {"original_string": "protected byte[] qualifier;", "modifier": "protected", "type": "byte[]", "declarator": "qualifier", "var_name": "qualifier"}], "methods": [{"identifier": "Column", "parameters": "()", "modifiers": "public", "return": "", "signature": " Column()", "full_signature": "public  Column()", "class_method_signature": "Column.Column()", "testcase": false, "constructor": true}, {"identifier": "Column", "parameters": "(byte[] family, byte[] qualifier)", "modifiers": "public", "return": "", "signature": " Column(byte[] family, byte[] qualifier)", "full_signature": "public  Column(byte[] family, byte[] qualifier)", "class_method_signature": "Column.Column(byte[] family, byte[] qualifier)", "testcase": false, "constructor": true}, {"identifier": "Column", "parameters": "(Column column)", "modifiers": "public", "return": "", "signature": " Column(Column column)", "full_signature": "public  Column(Column column)", "class_method_signature": "Column.Column(Column column)", "testcase": false, "constructor": true}, {"identifier": "Column", "parameters": "(String family, String qualifier)", "modifiers": "public", "return": "", "signature": " Column(String family, String qualifier)", "full_signature": "public  Column(String family, String qualifier)", "class_method_signature": "Column.Column(String family, String qualifier)", "testcase": false, "constructor": true}, {"identifier": "getFamily", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getFamily()", "full_signature": "public byte[] getFamily()", "class_method_signature": "Column.getFamily()", "testcase": false, "constructor": false}, {"identifier": "getQualifier", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getQualifier()", "full_signature": "public byte[] getQualifier()", "class_method_signature": "Column.getQualifier()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "public void write(DataOutput out)", "class_method_signature": "Column.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "public void readFields(DataInput in)", "class_method_signature": "Column.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Column.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Column.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Column.toString()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Column other)", "modifiers": "public", "return": "int", "signature": "int compareTo(Column other)", "full_signature": "public int compareTo(Column other)", "class_method_signature": "Column.compareTo(Column other)", "testcase": false, "constructor": false}], "file": "themis-coprocessor/src/main/java/org/apache/hadoop/hbase/themis/columns/Column.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(Column other)", "modifiers": "public", "return": "int", "body": "public int compareTo(Column other) {\n    int ret = Bytes.compareTo(this.family, other.family);\n    if (ret == 0) {\n      return Bytes.compareTo(this.qualifier, other.qualifier);\n    }\n    return ret;\n  }", "signature": "int compareTo(Column other)", "full_signature": "public int compareTo(Column other)", "class_method_signature": "Column.compareTo(Column other)", "testcase": false, "constructor": false, "invocations": ["compareTo", "compareTo"]}, "repository": {"repo_id": 19147361, "url": "https://github.com/XiaoMi/themis", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 212, "size": 1400, "license": "Apache License 2.0"}}