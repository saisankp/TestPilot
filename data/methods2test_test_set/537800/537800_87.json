{"test_class": {"identifier": "SharedHealthCheckRegistriesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "metrics-healthchecks/src/test/java/com/codahale/metrics/health/SharedHealthCheckRegistriesTest.java"}, "test_case": {"identifier": "defaultRegistryIsNotSetByDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultRegistryIsNotSetByDefault() {\n        expectedException.expect(IllegalStateException.class);\n        expectedException.expectMessage(\"Default registry name has not been set.\");\n\n        SharedHealthCheckRegistries.getDefault();\n    }", "signature": "void defaultRegistryIsNotSetByDefault()", "full_signature": "@Test public void defaultRegistryIsNotSetByDefault()", "class_method_signature": "SharedHealthCheckRegistriesTest.defaultRegistryIsNotSetByDefault()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "getDefault"]}, "focal_class": {"identifier": "SharedHealthCheckRegistries", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ConcurrentMap<String, HealthCheckRegistry> REGISTRIES =\n            new ConcurrentHashMap<>();", "modifier": "private static final", "type": "ConcurrentMap<String, HealthCheckRegistry>", "declarator": "REGISTRIES =\n            new ConcurrentHashMap<>()", "var_name": "REGISTRIES"}, {"original_string": "private static AtomicReference<String> defaultRegistryName = new AtomicReference<>();", "modifier": "private static", "type": "AtomicReference<String>", "declarator": "defaultRegistryName = new AtomicReference<>()", "var_name": "defaultRegistryName"}], "methods": [{"identifier": "setDefaultRegistryName", "parameters": "(AtomicReference<String> defaultRegistryName)", "modifiers": "static", "return": "void", "signature": "void setDefaultRegistryName(AtomicReference<String> defaultRegistryName)", "full_signature": "static void setDefaultRegistryName(AtomicReference<String> defaultRegistryName)", "class_method_signature": "SharedHealthCheckRegistries.setDefaultRegistryName(AtomicReference<String> defaultRegistryName)", "testcase": false, "constructor": false}, {"identifier": "SharedHealthCheckRegistries", "parameters": "()", "modifiers": "private", "return": "", "signature": " SharedHealthCheckRegistries()", "full_signature": "private  SharedHealthCheckRegistries()", "class_method_signature": "SharedHealthCheckRegistries.SharedHealthCheckRegistries()", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clear()", "full_signature": "public static void clear()", "class_method_signature": "SharedHealthCheckRegistries.clear()", "testcase": false, "constructor": false}, {"identifier": "names", "parameters": "()", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> names()", "full_signature": "public static Set<String> names()", "class_method_signature": "SharedHealthCheckRegistries.names()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String key)", "modifiers": "public static", "return": "void", "signature": "void remove(String key)", "full_signature": "public static void remove(String key)", "class_method_signature": "SharedHealthCheckRegistries.remove(String key)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String name, HealthCheckRegistry registry)", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry add(String name, HealthCheckRegistry registry)", "full_signature": "public static HealthCheckRegistry add(String name, HealthCheckRegistry registry)", "class_method_signature": "SharedHealthCheckRegistries.add(String name, HealthCheckRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "getOrCreate", "parameters": "(String name)", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry getOrCreate(String name)", "full_signature": "public static HealthCheckRegistry getOrCreate(String name)", "class_method_signature": "SharedHealthCheckRegistries.getOrCreate(String name)", "testcase": false, "constructor": false}, {"identifier": "setDefault", "parameters": "(String name)", "modifiers": "public synchronized static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry setDefault(String name)", "full_signature": "public synchronized static HealthCheckRegistry setDefault(String name)", "class_method_signature": "SharedHealthCheckRegistries.setDefault(String name)", "testcase": false, "constructor": false}, {"identifier": "setDefault", "parameters": "(String name, HealthCheckRegistry healthCheckRegistry)", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry setDefault(String name, HealthCheckRegistry healthCheckRegistry)", "full_signature": "public static HealthCheckRegistry setDefault(String name, HealthCheckRegistry healthCheckRegistry)", "class_method_signature": "SharedHealthCheckRegistries.setDefault(String name, HealthCheckRegistry healthCheckRegistry)", "testcase": false, "constructor": false}, {"identifier": "getDefault", "parameters": "()", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry getDefault()", "full_signature": "public static HealthCheckRegistry getDefault()", "class_method_signature": "SharedHealthCheckRegistries.getDefault()", "testcase": false, "constructor": false}, {"identifier": "tryGetDefault", "parameters": "()", "modifiers": "public static", "return": "HealthCheckRegistry", "signature": "HealthCheckRegistry tryGetDefault()", "full_signature": "public static HealthCheckRegistry tryGetDefault()", "class_method_signature": "SharedHealthCheckRegistries.tryGetDefault()", "testcase": false, "constructor": false}], "file": "metrics-healthchecks/src/main/java/com/codahale/metrics/health/SharedHealthCheckRegistries.java"}, "focal_method": {"identifier": "getDefault", "parameters": "()", "modifiers": "public static", "return": "HealthCheckRegistry", "body": "public static HealthCheckRegistry getDefault() {\n        final HealthCheckRegistry healthCheckRegistry = tryGetDefault();\n        if (healthCheckRegistry != null) {\n            return healthCheckRegistry;\n        }\n        throw new IllegalStateException(\"Default registry name has not been set.\");\n    }", "signature": "HealthCheckRegistry getDefault()", "full_signature": "public static HealthCheckRegistry getDefault()", "class_method_signature": "SharedHealthCheckRegistries.getDefault()", "testcase": false, "constructor": false, "invocations": ["tryGetDefault"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}