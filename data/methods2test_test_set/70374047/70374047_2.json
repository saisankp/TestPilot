{"test_class": {"identifier": "ExifTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Exif exif;", "modifier": "", "type": "Exif", "declarator": "exif", "var_name": "exif"}], "file": "camera-view/src/test/java/com/xlythe/view/camera/ExifTest.java"}, "test_case": {"identifier": "flipVertically", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void flipVertically() {\n        assertEquals(false, exif.isFlippedVertically());\n        exif.flipVertically();\n        assertEquals(true, exif.isFlippedVertically());\n        exif.flipVertically();\n        assertEquals(false, exif.isFlippedVertically());\n    }", "signature": "void flipVertically()", "full_signature": "@Test public void flipVertically()", "class_method_signature": "ExifTest.flipVertically()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "isFlippedVertically", "flipVertically", "assertEquals", "isFlippedVertically", "flipVertically", "assertEquals", "isFlippedVertically"]}, "focal_class": {"identifier": "Exif", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = Exif.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = Exif.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy:MM:dd\", Locale.ENGLISH);", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "DATE_FORMAT = new SimpleDateFormat(\"yyyy:MM:dd\", Locale.ENGLISH)", "var_name": "DATE_FORMAT"}, {"original_string": "private static final SimpleDateFormat TIME_FORMAT = new SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH);", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "TIME_FORMAT = new SimpleDateFormat(\"HH:mm:ss\", Locale.ENGLISH)", "var_name": "TIME_FORMAT"}, {"original_string": "private static final SimpleDateFormat DATETIME_FORMAT = new SimpleDateFormat(\"yyyy:MM:dd HH:mm:ss\", Locale.ENGLISH);", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "DATETIME_FORMAT = new SimpleDateFormat(\"yyyy:MM:dd HH:mm:ss\", Locale.ENGLISH)", "var_name": "DATETIME_FORMAT"}, {"original_string": "private static final String KILOMETERS_PER_HOUR = \"K\";", "modifier": "private static final", "type": "String", "declarator": "KILOMETERS_PER_HOUR = \"K\"", "var_name": "KILOMETERS_PER_HOUR"}, {"original_string": "private static final String MILES_PER_HOUR = \"M\";", "modifier": "private static final", "type": "String", "declarator": "MILES_PER_HOUR = \"M\"", "var_name": "MILES_PER_HOUR"}, {"original_string": "private static final String KNOTS = \"N\";", "modifier": "private static final", "type": "String", "declarator": "KNOTS = \"N\"", "var_name": "KNOTS"}, {"original_string": "private final ExifInterface mExifInterface;", "modifier": "private final", "type": "ExifInterface", "declarator": "mExifInterface", "var_name": "mExifInterface"}, {"original_string": "private boolean mRemoveTimestamp = false;", "modifier": "private", "type": "boolean", "declarator": "mRemoveTimestamp = false", "var_name": "mRemoveTimestamp"}], "methods": [{"identifier": "Exif", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " Exif(File file)", "full_signature": "public  Exif(File file)", "class_method_signature": "Exif.Exif(File file)", "testcase": false, "constructor": true}, {"identifier": "Exif", "parameters": "(String filePath)", "modifiers": "public", "return": "", "signature": " Exif(String filePath)", "full_signature": "public  Exif(String filePath)", "class_method_signature": "Exif.Exif(String filePath)", "testcase": false, "constructor": true}, {"identifier": "Exif", "parameters": "(InputStream is)", "modifiers": "public", "return": "", "signature": " Exif(InputStream is)", "full_signature": "public  Exif(InputStream is)", "class_method_signature": "Exif.Exif(InputStream is)", "testcase": false, "constructor": true}, {"identifier": "Exif", "parameters": "(ExifInterface exifInterface)", "modifiers": "private", "return": "", "signature": " Exif(ExifInterface exifInterface)", "full_signature": "private  Exif(ExifInterface exifInterface)", "class_method_signature": "Exif.Exif(ExifInterface exifInterface)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void save()", "full_signature": "public void save()", "class_method_signature": "Exif.save()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Exif.toString()", "testcase": false, "constructor": false}, {"identifier": "getOrientation", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getOrientation()", "full_signature": "private int getOrientation()", "class_method_signature": "Exif.getOrientation()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "Exif.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHeight()", "full_signature": "public int getHeight()", "class_method_signature": "Exif.getHeight()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getDescription()", "full_signature": "@Nullable public String getDescription()", "class_method_signature": "Exif.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(@Nullable String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(@Nullable String description)", "full_signature": "public void setDescription(@Nullable String description)", "class_method_signature": "Exif.setDescription(@Nullable String description)", "testcase": false, "constructor": false}, {"identifier": "getRotation", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRotation()", "full_signature": "public int getRotation()", "class_method_signature": "Exif.getRotation()", "testcase": false, "constructor": false}, {"identifier": "isFlippedVertically", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFlippedVertically()", "full_signature": "public boolean isFlippedVertically()", "class_method_signature": "Exif.isFlippedVertically()", "testcase": false, "constructor": false}, {"identifier": "isFlippedHorizontally", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFlippedHorizontally()", "full_signature": "public boolean isFlippedHorizontally()", "class_method_signature": "Exif.isFlippedHorizontally()", "testcase": false, "constructor": false}, {"identifier": "attachLastModifiedTimestamp", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void attachLastModifiedTimestamp()", "full_signature": "private void attachLastModifiedTimestamp()", "class_method_signature": "Exif.attachLastModifiedTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getLastModifiedTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastModifiedTimestamp()", "full_signature": "public long getLastModifiedTimestamp()", "class_method_signature": "Exif.getLastModifiedTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimestamp()", "full_signature": "public long getTimestamp()", "class_method_signature": "Exif.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "@Nullable public", "return": "Location", "signature": "Location getLocation()", "full_signature": "@Nullable public Location getLocation()", "class_method_signature": "Exif.getLocation()", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(int degrees)", "modifiers": "public", "return": "void", "signature": "void rotate(int degrees)", "full_signature": "public void rotate(int degrees)", "class_method_signature": "Exif.rotate(int degrees)", "testcase": false, "constructor": false}, {"identifier": "flipVertically", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flipVertically()", "full_signature": "public void flipVertically()", "class_method_signature": "Exif.flipVertically()", "testcase": false, "constructor": false}, {"identifier": "flipHorizontally", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flipHorizontally()", "full_signature": "public void flipHorizontally()", "class_method_signature": "Exif.flipHorizontally()", "testcase": false, "constructor": false}, {"identifier": "attachTimestamp", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void attachTimestamp()", "full_signature": "public void attachTimestamp()", "class_method_signature": "Exif.attachTimestamp()", "testcase": false, "constructor": false}, {"identifier": "removeTimestamp", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeTimestamp()", "full_signature": "public void removeTimestamp()", "class_method_signature": "Exif.removeTimestamp()", "testcase": false, "constructor": false}, {"identifier": "attachLocation", "parameters": "(Location location)", "modifiers": "public", "return": "void", "signature": "void attachLocation(Location location)", "full_signature": "public void attachLocation(Location location)", "class_method_signature": "Exif.attachLocation(Location location)", "testcase": false, "constructor": false}, {"identifier": "removeLocation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeLocation()", "full_signature": "public void removeLocation()", "class_method_signature": "Exif.removeLocation()", "testcase": false, "constructor": false}, {"identifier": "parseTimestamp", "parameters": "(@Nullable String date, @Nullable String time)", "modifiers": "private", "return": "long", "signature": "long parseTimestamp(@Nullable String date, @Nullable String time)", "full_signature": "private long parseTimestamp(@Nullable String date, @Nullable String time)", "class_method_signature": "Exif.parseTimestamp(@Nullable String date, @Nullable String time)", "testcase": false, "constructor": false}, {"identifier": "parseTimestamp", "parameters": "(@Nullable String datetime)", "modifiers": "private", "return": "long", "signature": "long parseTimestamp(@Nullable String datetime)", "full_signature": "private long parseTimestamp(@Nullable String datetime)", "class_method_signature": "Exif.parseTimestamp(@Nullable String datetime)", "testcase": false, "constructor": false}, {"identifier": "convertToExifDateTime", "parameters": "(long timestamp)", "modifiers": "private static", "return": "String", "signature": "String convertToExifDateTime(long timestamp)", "full_signature": "private static String convertToExifDateTime(long timestamp)", "class_method_signature": "Exif.convertToExifDateTime(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "convertFromExifDateTime", "parameters": "(String dateTime)", "modifiers": "private static", "return": "Date", "signature": "Date convertFromExifDateTime(String dateTime)", "full_signature": "private static Date convertFromExifDateTime(String dateTime)", "class_method_signature": "Exif.convertFromExifDateTime(String dateTime)", "testcase": false, "constructor": false}, {"identifier": "convertToExifDate", "parameters": "(long timestamp)", "modifiers": "private static", "return": "String", "signature": "String convertToExifDate(long timestamp)", "full_signature": "private static String convertToExifDate(long timestamp)", "class_method_signature": "Exif.convertToExifDate(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "convertFromExifDate", "parameters": "(String date)", "modifiers": "private static", "return": "Date", "signature": "Date convertFromExifDate(String date)", "full_signature": "private static Date convertFromExifDate(String date)", "class_method_signature": "Exif.convertFromExifDate(String date)", "testcase": false, "constructor": false}, {"identifier": "convertToExifTime", "parameters": "(long timestamp)", "modifiers": "private static", "return": "String", "signature": "String convertToExifTime(long timestamp)", "full_signature": "private static String convertToExifTime(long timestamp)", "class_method_signature": "Exif.convertToExifTime(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "convertFromExifTime", "parameters": "(String time)", "modifiers": "private static", "return": "Date", "signature": "Date convertFromExifTime(String time)", "full_signature": "private static Date convertFromExifTime(String time)", "class_method_signature": "Exif.convertFromExifTime(String time)", "testcase": false, "constructor": false}], "file": "camera-view/src/main/java/com/xlythe/view/camera/Exif.java"}, "focal_method": {"identifier": "flipVertically", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void flipVertically() {\n        int orientation;\n        switch (getOrientation()) {\n            case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:\n                orientation = ExifInterface.ORIENTATION_ROTATE_180;\n                break;\n            case ExifInterface.ORIENTATION_ROTATE_180:\n                orientation = ExifInterface.ORIENTATION_FLIP_HORIZONTAL;\n                break;\n            case ExifInterface.ORIENTATION_FLIP_VERTICAL:\n                orientation = ExifInterface.ORIENTATION_NORMAL;\n                break;\n            case ExifInterface.ORIENTATION_TRANSPOSE:\n                orientation = ExifInterface.ORIENTATION_ROTATE_270;\n                break;\n            case ExifInterface.ORIENTATION_ROTATE_90:\n                orientation = ExifInterface.ORIENTATION_TRANSVERSE;\n                break;\n            case ExifInterface.ORIENTATION_TRANSVERSE:\n                orientation = ExifInterface.ORIENTATION_ROTATE_90;\n                break;\n            case ExifInterface.ORIENTATION_ROTATE_270:\n                orientation = ExifInterface.ORIENTATION_TRANSPOSE;\n                break;\n            case ExifInterface.ORIENTATION_NORMAL:\n                // Fall-through\n            case ExifInterface.ORIENTATION_UNDEFINED:\n                // Fall-through\n            default:\n                orientation = ExifInterface.ORIENTATION_FLIP_VERTICAL;\n                break;\n        }\n        mExifInterface.setAttribute(ExifInterface.TAG_ORIENTATION, String.valueOf(orientation));\n    }", "signature": "void flipVertically()", "full_signature": "public void flipVertically()", "class_method_signature": "Exif.flipVertically()", "testcase": false, "constructor": false, "invocations": ["getOrientation", "setAttribute", "valueOf"]}, "repository": {"repo_id": 70374047, "url": "https://github.com/Xlythe/CameraView", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 426, "license": "licensed"}}