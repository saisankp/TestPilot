{"test_class": {"identifier": "OffsetDateTimeSerdesTest", "superclass": "", "interfaces": "", "fields": [], "file": "outland-feature-java/src/test/java/outland/feature/OffsetDateTimeSerdesTest.java"}, "test_case": {"identifier": "testSerdes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSerdes() {\n    OffsetDateTimeSerdes serdes = new OffsetDateTimeSerdes();\n    try {\n      // https://validator.w3.org/feed/docs/error/InvalidRFC3339Date.html\n      serdes.toOffsetDateTime(\"2002-10-02T10:00:00-05:00\");\n      serdes.toOffsetDateTime(\"2002-10-02T15:00:00Z\");\n      serdes.toOffsetDateTime(\"2002-10-02T15:00:00.05Z\");\n      // https://tools.ietf.org/html/rfc3339\n      serdes.toOffsetDateTime(\"1937-01-01T12:00:27.87+00:20\");\n      serdes.toOffsetDateTime(\"1996-12-19T16:39:57-08:00\");\n    } catch (Exception e) {\n      e.printStackTrace();\n      fail();\n    }\n\n    try {\n      /*\n      this date is from https://tools.ietf.org/html/rfc3339 and\n      represents a leap second (note the 60 at the end). Java's default\n      iso formatter doesn't handle this so it adding it here as a memo\n      that we cater for it\n       */\n      serdes.toOffsetDateTime(\"2016-12-31T23:59:60Z\");\n    } catch (Exception ignored) {\n      fail();\n    }\n  }", "signature": "void testSerdes()", "full_signature": "@Test public void testSerdes()", "class_method_signature": "OffsetDateTimeSerdesTest.testSerdes()", "testcase": true, "constructor": false, "invocations": ["toOffsetDateTime", "toOffsetDateTime", "toOffsetDateTime", "toOffsetDateTime", "toOffsetDateTime", "printStackTrace", "fail", "toOffsetDateTime", "fail"]}, "focal_class": {"identifier": "OffsetDateTimeSerdes", "superclass": "", "interfaces": "implements JsonDeserializer<OffsetDateTime>, JsonSerializer<OffsetDateTime>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(\"FeatureClient\");", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(\"FeatureClient\")", "var_name": "logger"}, {"original_string": "private static final DateTimeFormatter ISO = DateTimeFormatter.ISO_OFFSET_DATE_TIME;", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "ISO = DateTimeFormatter.ISO_OFFSET_DATE_TIME", "var_name": "ISO"}], "methods": [{"identifier": "serialize", "parameters": "(OffsetDateTime src, Type typeOfSrc,\n      JsonSerializationContext context)", "modifiers": "@Override public", "return": "JsonElement", "signature": "JsonElement serialize(OffsetDateTime src, Type typeOfSrc,\n      JsonSerializationContext context)", "full_signature": "@Override public JsonElement serialize(OffsetDateTime src, Type typeOfSrc,\n      JsonSerializationContext context)", "class_method_signature": "OffsetDateTimeSerdes.serialize(OffsetDateTime src, Type typeOfSrc,\n      JsonSerializationContext context)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonElement json, Type typeOfT,\n      JsonDeserializationContext context)", "modifiers": "@Override public", "return": "OffsetDateTime", "signature": "OffsetDateTime deserialize(JsonElement json, Type typeOfT,\n      JsonDeserializationContext context)", "full_signature": "@Override public OffsetDateTime deserialize(JsonElement json, Type typeOfT,\n      JsonDeserializationContext context)", "class_method_signature": "OffsetDateTimeSerdes.deserialize(JsonElement json, Type typeOfT,\n      JsonDeserializationContext context)", "testcase": false, "constructor": false}, {"identifier": "fromOffsetDateTime", "parameters": "(OffsetDateTime src)", "modifiers": "", "return": "String", "signature": "String fromOffsetDateTime(OffsetDateTime src)", "full_signature": " String fromOffsetDateTime(OffsetDateTime src)", "class_method_signature": "OffsetDateTimeSerdes.fromOffsetDateTime(OffsetDateTime src)", "testcase": false, "constructor": false}, {"identifier": "toOffsetDateTime", "parameters": "(String raw)", "modifiers": "", "return": "OffsetDateTime", "signature": "OffsetDateTime toOffsetDateTime(String raw)", "full_signature": " OffsetDateTime toOffsetDateTime(String raw)", "class_method_signature": "OffsetDateTimeSerdes.toOffsetDateTime(String raw)", "testcase": false, "constructor": false}, {"identifier": "toDateObject", "parameters": "(String raw, TemporalQuery<T> from)", "modifiers": "private", "return": "T", "signature": "T toDateObject(String raw, TemporalQuery<T> from)", "full_signature": "private T toDateObject(String raw, TemporalQuery<T> from)", "class_method_signature": "OffsetDateTimeSerdes.toDateObject(String raw, TemporalQuery<T> from)", "testcase": false, "constructor": false}], "file": "outland-feature-java/src/main/java/outland/feature/OffsetDateTimeSerdes.java"}, "focal_method": {"identifier": "toOffsetDateTime", "parameters": "(String raw)", "modifiers": "", "return": "OffsetDateTime", "body": "OffsetDateTime toOffsetDateTime(String raw) {\n    return toDateObject(raw, OffsetDateTime::from);\n  }", "signature": "OffsetDateTime toOffsetDateTime(String raw)", "full_signature": " OffsetDateTime toOffsetDateTime(String raw)", "class_method_signature": "OffsetDateTimeSerdes.toOffsetDateTime(String raw)", "testcase": false, "constructor": false, "invocations": ["toDateObject"]}, "repository": {"repo_id": 83838306, "url": "https://github.com/dehora/outland", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 944, "license": "licensed"}}