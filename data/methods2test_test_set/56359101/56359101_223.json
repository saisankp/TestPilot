{"test_class": {"identifier": "ClusterServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private ClusterService spy;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "ClusterService", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private ClusterDao clusterDao;", "modifier": "@Mock\n    private", "type": "ClusterDao", "declarator": "clusterDao", "var_name": "clusterDao"}, {"original_string": "private List<ClusterVO> clusters = new ArrayList<>();", "modifier": "private", "type": "List<ClusterVO>", "declarator": "clusters = new ArrayList<>()", "var_name": "clusters"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/services/ClusterServiceTest.java"}, "test_case": {"identifier": "listAllClustersFromPodTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listAllClustersFromPodTest() {\n        Mockito.doReturn(clusters).when(clusterDao).listByPodId(Mockito.anyLong());\n\n        List<ClusterVO> result = spy.listAllClustersFromPod(0l);\n\n        Mockito.verify(clusterDao).listByPodId(Mockito.anyLong());\n        Assert.assertEquals(clusters, result);\n    }", "signature": "void listAllClustersFromPodTest()", "full_signature": "@Test public void listAllClustersFromPodTest()", "class_method_signature": "ClusterServiceTest.listAllClustersFromPodTest()", "testcase": true, "constructor": false, "invocations": ["listByPodId", "when", "doReturn", "anyLong", "listAllClustersFromPod", "listByPodId", "verify", "anyLong", "assertEquals"]}, "focal_class": {"identifier": "ClusterService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ClusterDao clusterDao;", "modifier": "@Autowired\n    private", "type": "ClusterDao", "declarator": "clusterDao", "var_name": "clusterDao"}], "methods": [{"identifier": "listAllClustersFromPod", "parameters": "(long podId)", "modifiers": "public", "return": "List<ClusterVO>", "signature": "List<ClusterVO> listAllClustersFromPod(long podId)", "full_signature": "public List<ClusterVO> listAllClustersFromPod(long podId)", "class_method_signature": "ClusterService.listAllClustersFromPod(long podId)", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(long clusterId)", "modifiers": "public", "return": "ClusterVO", "signature": "ClusterVO findById(long clusterId)", "full_signature": "public ClusterVO findById(long clusterId)", "class_method_signature": "ClusterService.findById(long clusterId)", "testcase": false, "constructor": false}, {"identifier": "listAllClustersOnZone", "parameters": "(Long zoneId)", "modifiers": "public", "return": "List<ClusterVO>", "signature": "List<ClusterVO> listAllClustersOnZone(Long zoneId)", "full_signature": "public List<ClusterVO> listAllClustersOnZone(Long zoneId)", "class_method_signature": "ClusterService.listAllClustersOnZone(Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "listAllClusters", "parameters": "()", "modifiers": "public", "return": "List<ClusterVO>", "signature": "List<ClusterVO> listAllClusters()", "full_signature": "public List<ClusterVO> listAllClusters()", "class_method_signature": "ClusterService.listAllClusters()", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/services/ClusterService.java"}, "focal_method": {"identifier": "listAllClustersFromPod", "parameters": "(long podId)", "modifiers": "public", "return": "List<ClusterVO>", "body": "public List<ClusterVO> listAllClustersFromPod(long podId) {\n        return clusterDao.listByPodId(podId);\n    }", "signature": "List<ClusterVO> listAllClustersFromPod(long podId)", "full_signature": "public List<ClusterVO> listAllClustersFromPod(long podId)", "class_method_signature": "ClusterService.listAllClustersFromPod(long podId)", "testcase": false, "constructor": false, "invocations": ["listByPodId"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}