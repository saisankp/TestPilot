{"test_class": {"identifier": "NoticeControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private static final String TEST_USER = \"test-user\";", "modifier": "private static final", "type": "String", "declarator": "TEST_USER = \"test-user\"", "var_name": "TEST_USER"}, {"original_string": "private static final String MODULE_NAME = \"sys\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_NAME = \"sys\"", "var_name": "MODULE_NAME"}, {"original_string": "private static final String CLASS_NAME = \"notice\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_NAME = \"notice\"", "var_name": "CLASS_NAME"}, {"original_string": "private static final String LIST_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":list\";", "modifier": "private static final", "type": "String", "declarator": "LIST_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":list\"", "var_name": "LIST_PERM"}, {"original_string": "private static final String QUERY_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":query\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":query\"", "var_name": "QUERY_PERM"}, {"original_string": "private static final String ADD_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":add\";", "modifier": "private static final", "type": "String", "declarator": "ADD_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":add\"", "var_name": "ADD_PERM"}, {"original_string": "private static final String DELETE_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":delete\";", "modifier": "private static final", "type": "String", "declarator": "DELETE_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":delete\"", "var_name": "DELETE_PERM"}, {"original_string": "private static final String EDIT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":edit\";", "modifier": "private static final", "type": "String", "declarator": "EDIT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":edit\"", "var_name": "EDIT_PERM"}, {"original_string": "private static final String EXPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":export\";", "modifier": "private static final", "type": "String", "declarator": "EXPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":export\"", "var_name": "EXPORT_PERM"}, {"original_string": "private static final String IMPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":import\";", "modifier": "private static final", "type": "String", "declarator": "IMPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":import\"", "var_name": "IMPORT_PERM"}], "file": "lzpeng-boot-server/src/test/java/com/lzpeng/project/sys/controller/NoticeControllerTest.java"}, "test_case": {"identifier": "testFindById", "parameters": "()", "modifiers": "@Test @WithMockUser(username = TEST_USER, authorities = QUERY_PERM) public", "return": "void", "body": "@Test\n    @WithMockUser(username = TEST_USER, authorities = QUERY_PERM)\n    public void testFindById() throws Exception {\n        String id = \"{}\";\n        String result = mockMvc.perform(get(\"/sys/notice/\" + id)\n                .contentType(MediaType.APPLICATION_JSON_UTF8) // \u8bf7\u6c42\u7c7b\u578b\n                .accept(MediaType.APPLICATION_JSON_UTF8)) // \u54cd\u5e94\u7c7b\u578b\n                .andExpect(status().isOk())\n                .andExpect(jsonPath(\"$.data.id\").value(id))\n                .andReturn().getResponse().getContentAsString();\n        log.info(result);\n    }", "signature": "void testFindById()", "full_signature": "@Test @WithMockUser(username = TEST_USER, authorities = QUERY_PERM) public void testFindById()", "class_method_signature": "NoticeControllerTest.testFindById()", "testcase": true, "constructor": false, "invocations": ["getContentAsString", "getResponse", "andReturn", "andExpect", "andExpect", "perform", "accept", "contentType", "get", "isOk", "status", "value", "jsonPath", "info"]}, "focal_class": {"identifier": "NoticeController", "superclass": "extends BaseControllerImpl<Notice>", "interfaces": "", "fields": [{"original_string": "private static final String MODULE_NAME = \"sys\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_NAME = \"sys\"", "var_name": "MODULE_NAME"}, {"original_string": "private static final String CLASS_NAME = \"notice\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_NAME = \"notice\"", "var_name": "CLASS_NAME"}, {"original_string": "private static final String LIST_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":list\";", "modifier": "private static final", "type": "String", "declarator": "LIST_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":list\"", "var_name": "LIST_PERM"}, {"original_string": "private static final String QUERY_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":query\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":query\"", "var_name": "QUERY_PERM"}, {"original_string": "private static final String ADD_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":add\";", "modifier": "private static final", "type": "String", "declarator": "ADD_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":add\"", "var_name": "ADD_PERM"}, {"original_string": "private static final String DELETE_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":delete\";", "modifier": "private static final", "type": "String", "declarator": "DELETE_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":delete\"", "var_name": "DELETE_PERM"}, {"original_string": "private static final String EDIT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":edit\";", "modifier": "private static final", "type": "String", "declarator": "EDIT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":edit\"", "var_name": "EDIT_PERM"}, {"original_string": "private static final String EXPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":export\";", "modifier": "private static final", "type": "String", "declarator": "EXPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":export\"", "var_name": "EXPORT_PERM"}, {"original_string": "private static final String IMPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":import\";", "modifier": "private static final", "type": "String", "declarator": "IMPORT_PERM = MODULE_NAME + \":\" + CLASS_NAME + \":import\"", "var_name": "IMPORT_PERM"}, {"original_string": "private NoticeService noticeService;", "modifier": "private", "type": "NoticeService", "declarator": "noticeService", "var_name": "noticeService"}], "methods": [{"identifier": "setNoticeService", "parameters": "(NoticeService noticeService)", "modifiers": "@Autowired public", "return": "void", "signature": "void setNoticeService(NoticeService noticeService)", "full_signature": "@Autowired public void setNoticeService(NoticeService noticeService)", "class_method_signature": "NoticeController.setNoticeService(NoticeService noticeService)", "testcase": false, "constructor": false}, {"identifier": "getTableInfo", "parameters": "()", "modifiers": "@Override @GetMapping(\"/dict\") @ApiOperation(\"\u83b7\u53d6\u901a\u77e5\u7684\u6570\u636e\u5b57\u5178\") @PreAuthorize(\"hasAnyAuthority('\" + LIST_PERM + \"')\") public", "return": "Result<TableInfo>", "signature": "Result<TableInfo> getTableInfo()", "full_signature": "@Override @GetMapping(\"/dict\") @ApiOperation(\"\u83b7\u53d6\u901a\u77e5\u7684\u6570\u636e\u5b57\u5178\") @PreAuthorize(\"hasAnyAuthority('\" + LIST_PERM + \"')\") public Result<TableInfo> getTableInfo()", "class_method_signature": "NoticeController.getTableInfo()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@Valid @RequestBody Notice model)", "modifiers": "@Override @PostMapping @ApiOperation(\"\u4fdd\u5b58\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + ADD_PERM + \"')\") public", "return": "Result<Notice>", "signature": "Result<Notice> save(@Valid @RequestBody Notice model)", "full_signature": "@Override @PostMapping @ApiOperation(\"\u4fdd\u5b58\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + ADD_PERM + \"')\") public Result<Notice> save(@Valid @RequestBody Notice model)", "class_method_signature": "NoticeController.save(@Valid @RequestBody Notice model)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public", "return": "Result<Void>", "signature": "Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @DeleteMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u5220\u9664\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + DELETE_PERM + \"')\") public Result<Void> delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "NoticeController.delete(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Notice model) {", "modifiers": "@Override @PutMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u66f4\u65b0\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + EDIT_PERM + \"')\") public", "return": "Result<Notice>", "signature": "Result<Notice> update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Notice model) {", "full_signature": "@Override @PutMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u66f4\u65b0\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + EDIT_PERM + \"')\") public Result<Notice> update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Notice model) {", "class_method_signature": "NoticeController.update(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id, @RequestBody Notice model) {", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Notice model)", "modifiers": "@Override @GetMapping @ApiOperation(\"\u67e5\u8be2\u6240\u6709\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<List<Notice>>", "signature": "Result<List<Notice>> findAll(Notice model)", "full_signature": "@Override @GetMapping @ApiOperation(\"\u67e5\u8be2\u6240\u6709\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<List<Notice>> findAll(Notice model)", "class_method_signature": "NoticeController.findAll(Notice model)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Notice model) {", "modifiers": "@Override @GetMapping(\"/{page:[0-9]+}/{size:[0-9]+}\") @ApiOperation(\"\u5206\u9875\u67e5\u8be2\u901a\u77e5\u5217\u8868\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<QueryResult<Notice>>", "signature": "Result<QueryResult<Notice>> query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Notice model) {", "full_signature": "@Override @GetMapping(\"/{page:[0-9]+}/{size:[0-9]+}\") @ApiOperation(\"\u5206\u9875\u67e5\u8be2\u901a\u77e5\u5217\u8868\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<QueryResult<Notice>> query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Notice model) {", "class_method_signature": "NoticeController.query(@ApiParam(value = \"\u9875\u7801\", required = true) @PathVariable(\"page\") int page, @ApiParam(value = \"\u6bcf\u9875\u6570\u636e\u6761\u6570\", required = true) @PathVariable(\"size\") int size, Notice model) {", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<Notice>", "signature": "Result<Notice> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<Notice> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "NoticeController.findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(MultipartFile file)", "modifiers": "@Override @PostMapping(\"/import\") @ApiOperation(\"\u4ece\u6587\u4ef6\u5bfc\u5165\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + IMPORT_PERM + \"')\") public", "return": "Result<List<Notice>>", "signature": "Result<List<Notice>> importData(MultipartFile file)", "full_signature": "@Override @PostMapping(\"/import\") @ApiOperation(\"\u4ece\u6587\u4ef6\u5bfc\u5165\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + IMPORT_PERM + \"')\") public Result<List<Notice>> importData(MultipartFile file)", "class_method_signature": "NoticeController.importData(MultipartFile file)", "testcase": false, "constructor": false}, {"identifier": "exportData", "parameters": "(@RequestParam(required = false) List<String> ids, HttpServletResponse response)", "modifiers": "@Override @GetMapping(\"/export\") @ApiOperation(\"\u5bfc\u51fa\u901a\u77e5\u5230\u6587\u4ef6\") @PreAuthorize(\"permitAll()\") public", "return": "void", "signature": "void exportData(@RequestParam(required = false) List<String> ids, HttpServletResponse response)", "full_signature": "@Override @GetMapping(\"/export\") @ApiOperation(\"\u5bfc\u51fa\u901a\u77e5\u5230\u6587\u4ef6\") @PreAuthorize(\"permitAll()\") public void exportData(@RequestParam(required = false) List<String> ids, HttpServletResponse response)", "class_method_signature": "NoticeController.exportData(@RequestParam(required = false) List<String> ids, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "batch", "parameters": "(@RequestBody BatchModel<Notice> batch)", "modifiers": "@Override @PostMapping(\"/batch\") @ApiOperation(\"\u6279\u91cf\u64cd\u4f5c\u901a\u77e5\") @PreAuthorize(\"hasAuthority('\" + ADD_PERM + \"') and hasAuthority('\" + EDIT_PERM + \"') and hasAuthority('\" + DELETE_PERM + \"')\") public", "return": "Result", "signature": "Result batch(@RequestBody BatchModel<Notice> batch)", "full_signature": "@Override @PostMapping(\"/batch\") @ApiOperation(\"\u6279\u91cf\u64cd\u4f5c\u901a\u77e5\") @PreAuthorize(\"hasAuthority('\" + ADD_PERM + \"') and hasAuthority('\" + EDIT_PERM + \"') and hasAuthority('\" + DELETE_PERM + \"')\") public Result batch(@RequestBody BatchModel<Notice> batch)", "class_method_signature": "NoticeController.batch(@RequestBody BatchModel<Notice> batch)", "testcase": false, "constructor": false}, {"identifier": "sendNotice", "parameters": "(@ApiParam(\"\u901a\u77e5id\") @PathVariable String noticeId, @ApiParam(\"\u7528\u6237id\u6570\u7ec4\") @RequestBody String[] receiverIds) {", "modifiers": "@PostMapping(\"/sendNotice/{noticeId:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u53d1\u9001\u901a\u77e5\") @PreAuthorize(\"isAuthenticated()\") public", "return": "Result<Void>", "signature": "Result<Void> sendNotice(@ApiParam(\"\u901a\u77e5id\") @PathVariable String noticeId, @ApiParam(\"\u7528\u6237id\u6570\u7ec4\") @RequestBody String[] receiverIds) {", "full_signature": "@PostMapping(\"/sendNotice/{noticeId:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u53d1\u9001\u901a\u77e5\") @PreAuthorize(\"isAuthenticated()\") public Result<Void> sendNotice(@ApiParam(\"\u901a\u77e5id\") @PathVariable String noticeId, @ApiParam(\"\u7528\u6237id\u6570\u7ec4\") @RequestBody String[] receiverIds) {", "class_method_signature": "NoticeController.sendNotice(@ApiParam(\"\u901a\u77e5id\") @PathVariable String noticeId, @ApiParam(\"\u7528\u6237id\u6570\u7ec4\") @RequestBody String[] receiverIds) {", "testcase": false, "constructor": false}, {"identifier": "receiveNotice", "parameters": "()", "modifiers": "@GetMapping(\"/receiveNotice\") @ApiOperation(\"\u63a5\u6536\u901a\u77e5\") @PreAuthorize(\"isAuthenticated()\") public", "return": "Result<List<NotificationRecord>>", "signature": "Result<List<NotificationRecord>> receiveNotice()", "full_signature": "@GetMapping(\"/receiveNotice\") @ApiOperation(\"\u63a5\u6536\u901a\u77e5\") @PreAuthorize(\"isAuthenticated()\") public Result<List<NotificationRecord>> receiveNotice()", "class_method_signature": "NoticeController.receiveNotice()", "testcase": false, "constructor": false}], "file": "lzpeng-boot-server/src/main/java/com/lzpeng/project/sys/controller/NoticeController.java"}, "focal_method": {"identifier": "findById", "parameters": "(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "modifiers": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public", "return": "Result<Notice>", "body": "@Override\n    @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\")\n    @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u901a\u77e5\")\n    @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\")\n    public Result<Notice> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {\n        return super.findById(id);\n    }", "signature": "Result<Notice> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "full_signature": "@Override @GetMapping(\"/{id:^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9]+$}\") @ApiOperation(\"\u6839\u636eID\u67e5\u8be2\u901a\u77e5\") @PreAuthorize(\"hasAnyAuthority('\" + QUERY_PERM + \"')\") public Result<Notice> findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "class_method_signature": "NoticeController.findById(@ApiParam(value = \"\u4e3b\u952eid\", required = true) @PathVariable(\"id\") String id) {", "testcase": false, "constructor": false, "invocations": ["findById"]}, "repository": {"repo_id": 257335962, "url": "https://github.com/lzpeng723/minimal-boot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 25, "size": 2632, "license": "licensed"}}