{"test_class": {"identifier": "ValidationResultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ValidationResult testee;", "modifier": "private", "type": "ValidationResult", "declarator": "testee", "var_name": "testee"}], "file": "nimbus-core/src/test/java/com/antheminc/oss/nimbus/domain/cmd/exec/ValidationResultTest.java"}, "test_case": {"identifier": "testAddValidationErrors", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n\t@Test\n\tpublic void testAddValidationErrors() {\n\t\tthis.testee = new ValidationResult();\n\t\t\n\t\tConstraintViolation<String> v1 = Mockito.mock(ConstraintViolation.class);\n\t\tPath v1Path = Mockito.mock(Path.class);\n\t\tSet<ConstraintViolation<String>> violations = new HashSet<>();\n\t\tviolations.add(v1);\n\t\t\n\t\tMockito.when(v1.getPropertyPath()).thenReturn(v1Path);\n\t\tMockito.when(v1Path.toString()).thenReturn(\"a.b.c.field1\");\n\t\tMockito.when(v1.getMessage()).thenReturn(\"Bad!\");\n\t\t\n\t\tthis.testee.addValidationErrors(violations);\n\t\t\n\t\tAssert.assertEquals(1, this.testee.getTemplate().size());\n\t\tValidationError.Model e = (ValidationError.Model) this.testee.getTemplate().get().get(0);\n\t\tAssert.assertEquals(\"a.b.c.field1\", e.getCode());\n\t\tAssert.assertNull(e.getModelAlias());\n\t\tAssert.assertEquals(\"Bad!\", e.getMsg());\n\t}", "signature": "void testAddValidationErrors()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testAddValidationErrors()", "class_method_signature": "ValidationResultTest.testAddValidationErrors()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "add", "thenReturn", "when", "getPropertyPath", "thenReturn", "when", "toString", "thenReturn", "when", "getMessage", "addValidationErrors", "assertEquals", "size", "getTemplate", "get", "get", "getTemplate", "assertEquals", "getCode", "assertNull", "getModelAlias", "assertEquals", "getMsg"]}, "focal_class": {"identifier": "ValidationResult", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<ValidationError> errors;", "modifier": "private", "type": "List<ValidationError>", "declarator": "errors", "var_name": "errors"}, {"original_string": "@JsonIgnore\n\tpublic final CollectionsTemplate<List<ValidationError>, ValidationError> template = new CollectionsTemplate<>(\n\t\t\tthis::getErrors, this::setErrors, ArrayList::new);", "modifier": "@JsonIgnore\n\tpublic final", "type": "CollectionsTemplate<List<ValidationError>, ValidationError>", "declarator": "template = new CollectionsTemplate<>(\n\t\t\tthis::getErrors, this::setErrors, ArrayList::new)", "var_name": "template"}], "methods": [{"identifier": "ValidationResult", "parameters": "()", "modifiers": "public", "return": "", "signature": " ValidationResult()", "full_signature": "public  ValidationResult()", "class_method_signature": "ValidationResult.ValidationResult()", "testcase": false, "constructor": true}, {"identifier": "ValidationResult", "parameters": "(Set<ConstraintViolation<T>> violations)", "modifiers": "public", "return": "<T>", "signature": "<T> ValidationResult(Set<ConstraintViolation<T>> violations)", "full_signature": "public <T> ValidationResult(Set<ConstraintViolation<T>> violations)", "class_method_signature": "ValidationResult.ValidationResult(Set<ConstraintViolation<T>> violations)", "testcase": false, "constructor": true}, {"identifier": "addValidationErrors", "parameters": "(Set<ConstraintViolation<T>> violations)", "modifiers": "public", "return": "void", "signature": "void addValidationErrors(Set<ConstraintViolation<T>> violations)", "full_signature": "public void addValidationErrors(Set<ConstraintViolation<T>> violations)", "class_method_signature": "ValidationResult.addValidationErrors(Set<ConstraintViolation<T>> violations)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Set<ConstraintViolation<T>> violations)", "modifiers": "private", "return": "void", "signature": "void add(Set<ConstraintViolation<T>> violations)", "full_signature": "private void add(Set<ConstraintViolation<T>> violations)", "class_method_signature": "ValidationResult.add(Set<ConstraintViolation<T>> violations)", "testcase": false, "constructor": false}], "file": "nimbus-core/src/main/java/com/antheminc/oss/nimbus/domain/cmd/exec/ValidationResult.java"}, "focal_method": {"identifier": "addValidationErrors", "parameters": "(Set<ConstraintViolation<T>> violations)", "modifiers": "public", "return": "void", "body": "public <T> void addValidationErrors(Set<ConstraintViolation<T>> violations) {\n\t\tadd(violations);\n\t}", "signature": "void addValidationErrors(Set<ConstraintViolation<T>> violations)", "full_signature": "public void addValidationErrors(Set<ConstraintViolation<T>> violations)", "class_method_signature": "ValidationResult.addValidationErrors(Set<ConstraintViolation<T>> violations)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 96120606, "url": "https://github.com/openanthem/nimbus-core", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 9, "size": 55787, "license": "licensed"}}