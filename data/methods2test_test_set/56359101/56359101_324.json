{"test_class": {"identifier": "HostJdbcDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    private HostJdbcDao spy;", "modifier": "@Spy\n    private", "type": "HostJdbcDao", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private JdbcTemplate jdbcTemplate;", "modifier": "@Mock\n    private", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "private String sqlGetAdministrationStatus = \"SELECT administration_status FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetAdministrationStatus = \"SELECT administration_status FROM host WHERE id=?;\"", "var_name": "sqlGetAdministrationStatus"}, {"original_string": "private String sqlSetAdministrationStatus = \"UPDATE host SET administration_status=? WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlSetAdministrationStatus = \"UPDATE host SET administration_status=? WHERE id=?;\"", "var_name": "sqlSetAdministrationStatus"}, {"original_string": "private String sqlGetStartType = \"SELECT start_type FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetStartType = \"SELECT start_type FROM host WHERE id=?;\"", "var_name": "sqlGetStartType"}, {"original_string": "private String sqlGetStatus = \"SELECT status FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetStatus = \"SELECT status FROM host WHERE id=?;\"", "var_name": "sqlGetStatus"}, {"original_string": "private String sqlGetResourceState = \"SELECT resource_state FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetResourceState = \"SELECT resource_state FROM host WHERE id=?;\"", "var_name": "sqlGetResourceState"}, {"original_string": "private String sqlSetAllHypervisorsTypeInCloud = \"select hypervisor_type from host where removed is null and hypervisor_type is not null group by hypervisor_type\";", "modifier": "private", "type": "String", "declarator": "sqlSetAllHypervisorsTypeInCloud = \"select hypervisor_type from host where removed is null and hypervisor_type is not null group by hypervisor_type\"", "var_name": "sqlSetAllHypervisorsTypeInCloud"}, {"original_string": "private String sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate'\";", "modifier": "private", "type": "String", "declarator": "sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate'\"", "var_name": "sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager"}, {"original_string": "private String sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate' and pod_id = ?\";", "modifier": "private", "type": "String", "declarator": "sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate' and pod_id = ?\"", "var_name": "sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/daos/HostJdbcDaoTest.java"}, "test_case": {"identifier": "getAdministrationStatusTestIsBlank", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAdministrationStatusTestIsBlank() {\n        Mockito.doReturn(\"\").when(jdbcTemplate).queryForObject(Mockito.eq(sqlGetAdministrationStatus), Mockito.eq(String.class), Mockito.eq(0l));\n\n        HostAdministrationStatus result = spy.getAdministrationStatus(0l);\n\n        Mockito.verify(jdbcTemplate).queryForObject(Mockito.eq(sqlGetAdministrationStatus), Mockito.eq(String.class), Mockito.eq(0l));\n        Assert.assertEquals(null, result);\n    }", "signature": "void getAdministrationStatusTestIsBlank()", "full_signature": "@Test public void getAdministrationStatusTestIsBlank()", "class_method_signature": "HostJdbcDaoTest.getAdministrationStatusTestIsBlank()", "testcase": true, "constructor": false, "invocations": ["queryForObject", "when", "doReturn", "eq", "eq", "eq", "getAdministrationStatus", "queryForObject", "verify", "eq", "eq", "eq", "assertEquals"]}, "focal_class": {"identifier": "HostJdbcDao", "superclass": "extends JdbcDaoSupport", "interfaces": "", "fields": [{"original_string": "private String sqlGetAdministrationStatus = \"SELECT administration_status FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetAdministrationStatus = \"SELECT administration_status FROM host WHERE id=?;\"", "var_name": "sqlGetAdministrationStatus"}, {"original_string": "private String sqlSetAdministrationStatus = \"UPDATE host SET administration_status=? WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlSetAdministrationStatus = \"UPDATE host SET administration_status=? WHERE id=?;\"", "var_name": "sqlSetAdministrationStatus"}, {"original_string": "private String sqlGetStartType = \"SELECT start_type FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetStartType = \"SELECT start_type FROM host WHERE id=?;\"", "var_name": "sqlGetStartType"}, {"original_string": "private String sqlGetStatus = \"SELECT status FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetStatus = \"SELECT status FROM host WHERE id=?;\"", "var_name": "sqlGetStatus"}, {"original_string": "private String sqlGetResourceState = \"SELECT resource_state FROM host WHERE id=?;\";", "modifier": "private", "type": "String", "declarator": "sqlGetResourceState = \"SELECT resource_state FROM host WHERE id=?;\"", "var_name": "sqlGetResourceState"}, {"original_string": "private String sqlSetAllHypervisorsTypeInCloud = \"select hypervisor_type from host where removed is null and hypervisor_type is not null group by hypervisor_type\";", "modifier": "private", "type": "String", "declarator": "sqlSetAllHypervisorsTypeInCloud = \"select hypervisor_type from host where removed is null and hypervisor_type is not null group by hypervisor_type\"", "var_name": "sqlSetAllHypervisorsTypeInCloud"}, {"original_string": "private String sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate'\";", "modifier": "private", "type": "String", "declarator": "sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate'\"", "var_name": "sqlCheckIsThereAnyHostOnCloudDeactivatedByOurManager"}, {"original_string": "private String sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate' and pod_id = ?\";", "modifier": "private", "type": "String", "declarator": "sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager = \"select id from host where removed is null and administration_status = 'ShutDownToConsolidate' and pod_id = ?\"", "var_name": "sqlCheckIsThereAnyHostOnPodDeactivatedByOurManager"}], "methods": [{"identifier": "getAdministrationStatus", "parameters": "(long hostId)", "modifiers": "public", "return": "HostAdministrationStatus", "signature": "HostAdministrationStatus getAdministrationStatus(long hostId)", "full_signature": "public HostAdministrationStatus getAdministrationStatus(long hostId)", "class_method_signature": "HostJdbcDao.getAdministrationStatus(long hostId)", "testcase": false, "constructor": false}, {"identifier": "setAdministrationStatus", "parameters": "(HostAdministrationStatus hostAdministrationStatus, long hostId)", "modifiers": "public", "return": "void", "signature": "void setAdministrationStatus(HostAdministrationStatus hostAdministrationStatus, long hostId)", "full_signature": "public void setAdministrationStatus(HostAdministrationStatus hostAdministrationStatus, long hostId)", "class_method_signature": "HostJdbcDao.setAdministrationStatus(HostAdministrationStatus hostAdministrationStatus, long hostId)", "testcase": false, "constructor": false}, {"identifier": "getStartType", "parameters": "(long hostId)", "modifiers": "public", "return": "StartType", "signature": "StartType getStartType(long hostId)", "full_signature": "public StartType getStartType(long hostId)", "class_method_signature": "HostJdbcDao.getStartType(long hostId)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "(long hostId)", "modifiers": "public", "return": "Status", "signature": "Status getStatus(long hostId)", "full_signature": "public Status getStatus(long hostId)", "class_method_signature": "HostJdbcDao.getStatus(long hostId)", "testcase": false, "constructor": false}, {"identifier": "getResourceState", "parameters": "(long hostId)", "modifiers": "public", "return": "ResourceState", "signature": "ResourceState getResourceState(long hostId)", "full_signature": "public ResourceState getResourceState(long hostId)", "class_method_signature": "HostJdbcDao.getResourceState(long hostId)", "testcase": false, "constructor": false}, {"identifier": "getAllHypervisorsTypeInCloud", "parameters": "()", "modifiers": "public", "return": "List<HypervisorType>", "signature": "List<HypervisorType> getAllHypervisorsTypeInCloud()", "full_signature": "public List<HypervisorType> getAllHypervisorsTypeInCloud()", "class_method_signature": "HostJdbcDao.getAllHypervisorsTypeInCloud()", "testcase": false, "constructor": false}, {"identifier": "isThereAnyHostOnCloudDeactivatedByOurManager", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isThereAnyHostOnCloudDeactivatedByOurManager()", "full_signature": "public boolean isThereAnyHostOnCloudDeactivatedByOurManager()", "class_method_signature": "HostJdbcDao.isThereAnyHostOnCloudDeactivatedByOurManager()", "testcase": false, "constructor": false}, {"identifier": "isThereAnyHostOnPodDeactivatedByOurManager", "parameters": "(long id)", "modifiers": "public", "return": "boolean", "signature": "boolean isThereAnyHostOnPodDeactivatedByOurManager(long id)", "full_signature": "public boolean isThereAnyHostOnPodDeactivatedByOurManager(long id)", "class_method_signature": "HostJdbcDao.isThereAnyHostOnPodDeactivatedByOurManager(long id)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/daos/HostJdbcDao.java"}, "focal_method": {"identifier": "getAdministrationStatus", "parameters": "(long hostId)", "modifiers": "public", "return": "HostAdministrationStatus", "body": "public HostAdministrationStatus getAdministrationStatus(long hostId) {\n        String hostAdministrationStatusAsAtring = getJdbcTemplate().queryForObject(sqlGetAdministrationStatus, String.class, hostId);\n        if (StringUtils.isBlank(hostAdministrationStatusAsAtring)) {\n            return null;\n        }\n        return HostAdministrationStatus.valueOf(hostAdministrationStatusAsAtring);\n    }", "signature": "HostAdministrationStatus getAdministrationStatus(long hostId)", "full_signature": "public HostAdministrationStatus getAdministrationStatus(long hostId)", "class_method_signature": "HostJdbcDao.getAdministrationStatus(long hostId)", "testcase": false, "constructor": false, "invocations": ["queryForObject", "getJdbcTemplate", "isBlank", "valueOf"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}