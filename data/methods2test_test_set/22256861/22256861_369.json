{"test_class": {"identifier": "ModisProductReaderPluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ModisProductReaderPlugIn plugIn;", "modifier": "private", "type": "ModisProductReaderPlugIn", "declarator": "plugIn", "var_name": "plugIn"}, {"original_string": "private File testFile;", "modifier": "private", "type": "File", "declarator": "testFile", "var_name": "testFile"}], "file": "s3tbx-modis-reader/src/test/java/org/esa/s3tbx/dataio/modis/ModisProductReaderPluginTest.java"}, "test_case": {"identifier": "testGetInputFile_stringInput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInputFile_stringInput() {\n        String testFileName = \"test.file\";\n        final File file = ModisProductReaderPlugIn.getInputFile(testFileName);\n        assertNotNull(file);\n        assertEquals(testFileName, file.getName());\n    }", "signature": "void testGetInputFile_stringInput()", "full_signature": "@Test public void testGetInputFile_stringInput()", "class_method_signature": "ModisProductReaderPluginTest.testGetInputFile_stringInput()", "testcase": true, "constructor": false, "invocations": ["getInputFile", "assertNotNull", "assertEquals", "getName"]}, "focal_class": {"identifier": "ModisProductReaderPlugIn", "superclass": "", "interfaces": "implements ProductReaderPlugIn", "fields": [], "methods": [{"identifier": "getDecodeQualification", "parameters": "(Object input)", "modifiers": "public", "return": "DecodeQualification", "signature": "DecodeQualification getDecodeQualification(Object input)", "full_signature": "public DecodeQualification getDecodeQualification(Object input)", "class_method_signature": "ModisProductReaderPlugIn.getDecodeQualification(Object input)", "testcase": false, "constructor": false}, {"identifier": "getInputTypes", "parameters": "()", "modifiers": "public", "return": "Class[]", "signature": "Class[] getInputTypes()", "full_signature": "public Class[] getInputTypes()", "class_method_signature": "ModisProductReaderPlugIn.getInputTypes()", "testcase": false, "constructor": false}, {"identifier": "createReaderInstance", "parameters": "()", "modifiers": "public", "return": "ProductReader", "signature": "ProductReader createReaderInstance()", "full_signature": "public ProductReader createReaderInstance()", "class_method_signature": "ModisProductReaderPlugIn.createReaderInstance()", "testcase": false, "constructor": false}, {"identifier": "getProductFileFilter", "parameters": "()", "modifiers": "public", "return": "SnapFileFilter", "signature": "SnapFileFilter getProductFileFilter()", "full_signature": "public SnapFileFilter getProductFileFilter()", "class_method_signature": "ModisProductReaderPlugIn.getProductFileFilter()", "testcase": false, "constructor": false}, {"identifier": "getDefaultFileExtensions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getDefaultFileExtensions()", "full_signature": "public String[] getDefaultFileExtensions()", "class_method_signature": "ModisProductReaderPlugIn.getDefaultFileExtensions()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(Locale locale)", "modifiers": "public", "return": "String", "signature": "String getDescription(Locale locale)", "full_signature": "public String getDescription(Locale locale)", "class_method_signature": "ModisProductReaderPlugIn.getDescription(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getFormatNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getFormatNames()", "full_signature": "public String[] getFormatNames()", "class_method_signature": "ModisProductReaderPlugIn.getFormatNames()", "testcase": false, "constructor": false}, {"identifier": "getInputFile", "parameters": "(Object input)", "modifiers": "static", "return": "File", "signature": "File getInputFile(Object input)", "full_signature": "static File getInputFile(Object input)", "class_method_signature": "ModisProductReaderPlugIn.getInputFile(Object input)", "testcase": false, "constructor": false}, {"identifier": "hasHdfFileExtension", "parameters": "(File inputFile)", "modifiers": "@SuppressWarnings(\"SimplifiableIfStatement\") static", "return": "boolean", "signature": "boolean hasHdfFileExtension(File inputFile)", "full_signature": "@SuppressWarnings(\"SimplifiableIfStatement\") static boolean hasHdfFileExtension(File inputFile)", "class_method_signature": "ModisProductReaderPlugIn.hasHdfFileExtension(File inputFile)", "testcase": false, "constructor": false}, {"identifier": "isValidInputFile", "parameters": "(File inputFile)", "modifiers": "static", "return": "boolean", "signature": "boolean isValidInputFile(File inputFile)", "full_signature": "static boolean isValidInputFile(File inputFile)", "class_method_signature": "ModisProductReaderPlugIn.isValidInputFile(File inputFile)", "testcase": false, "constructor": false}, {"identifier": "registerRGBProfiles", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void registerRGBProfiles()", "full_signature": "private static void registerRGBProfiles()", "class_method_signature": "ModisProductReaderPlugIn.registerRGBProfiles()", "testcase": false, "constructor": false}], "file": "s3tbx-modis-reader/src/main/java/org/esa/s3tbx/dataio/modis/ModisProductReaderPlugIn.java"}, "focal_method": {"identifier": "getInputFile", "parameters": "(Object input)", "modifiers": "static", "return": "File", "body": "static File getInputFile(Object input) {\n        if (input instanceof String) {\n            return new File((String) input);\n        } else if (input instanceof File) {\n            return (File) input;\n        }\n        return null;\n    }", "signature": "File getInputFile(Object input)", "full_signature": "static File getInputFile(Object input)", "class_method_signature": "ModisProductReaderPlugIn.getInputFile(Object input)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}