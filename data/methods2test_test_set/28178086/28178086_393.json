{"test_class": {"identifier": "XorshiftRNGTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int SEED = 1234;", "modifier": "static final", "type": "int", "declarator": "SEED = 1234", "var_name": "SEED"}, {"original_string": "static final int N = 1000;", "modifier": "static final", "type": "int", "declarator": "N = 1000", "var_name": "N"}], "file": "jtstoolkit/src/test/java/ec/tstoolkit/random/XorshiftRNGTest.java"}, "test_case": {"identifier": "testNextIntNegativeBound", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNextIntNegativeBound() {\n        createRNG().nextInt(-1);\n    }", "signature": "void testNextIntNegativeBound()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNextIntNegativeBound()", "class_method_signature": "XorshiftRNGTest.testNextIntNegativeBound()", "testcase": true, "constructor": false, "invocations": ["nextInt", "createRNG"]}, "focal_class": {"identifier": "XorshiftRNG", "superclass": "extends AbstractRNG", "interfaces": "", "fields": [{"original_string": "private int m_x, m_y, m_z, m_w;", "modifier": "private", "type": "int", "declarator": "m_x", "var_name": "m_x"}, {"original_string": "private final int m_seed;", "modifier": "private final", "type": "int", "declarator": "m_seed", "var_name": "m_seed"}, {"original_string": "private static final int Seed_Y = 362436069;", "modifier": "private static final", "type": "int", "declarator": "Seed_Y = 362436069", "var_name": "Seed_Y"}, {"original_string": "private static final int Seed_Z = 521288629;", "modifier": "private static final", "type": "int", "declarator": "Seed_Z = 521288629", "var_name": "Seed_Z"}, {"original_string": "private static final int Seed_W = 88675123;", "modifier": "private static final", "type": "int", "declarator": "Seed_W = 88675123", "var_name": "Seed_W"}], "methods": [{"identifier": "fromSystemNanoTime", "parameters": "()", "modifiers": "public static", "return": "XorshiftRNG", "signature": "XorshiftRNG fromSystemNanoTime()", "full_signature": "public static XorshiftRNG fromSystemNanoTime()", "class_method_signature": "XorshiftRNG.fromSystemNanoTime()", "testcase": false, "constructor": false}, {"identifier": "XorshiftRNG", "parameters": "(final int seed)", "modifiers": "public", "return": "", "signature": " XorshiftRNG(final int seed)", "full_signature": "public  XorshiftRNG(final int seed)", "class_method_signature": "XorshiftRNG.XorshiftRNG(final int seed)", "testcase": false, "constructor": true}, {"identifier": "nextInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int nextInt()", "full_signature": "@Override public int nextInt()", "class_method_signature": "XorshiftRNG.nextInt()", "testcase": false, "constructor": false}, {"identifier": "resetGenerator", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetGenerator()", "full_signature": "private void resetGenerator()", "class_method_signature": "XorshiftRNG.resetGenerator()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/random/XorshiftRNG.java"}, "focal_method": {"identifier": "nextInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int nextInt() {\n        int t = (m_x ^ (m_x << 11));\n        m_x = m_y;\n        m_y = m_z;\n        m_z = m_w;\n        m_w = (m_w ^ (m_w >>> 19)) ^ (t ^ (t >>> 8));\n\n        return m_w;\n    }", "signature": "int nextInt()", "full_signature": "@Override public int nextInt()", "class_method_signature": "XorshiftRNG.nextInt()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}