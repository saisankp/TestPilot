{"test_class": {"identifier": "PrivateKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "elrond-core/src/test/java/network/elrond/crypto/PrivateKeyTest.java"}, "test_case": {"identifier": "testConstructorFromByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructorFromByteArray(){\n        PrivateKey privateKey = new PrivateKey(\"test\".getBytes());\n        Assert.assertTrue(privateKey.getValue() != null);\n    }", "signature": "void testConstructorFromByteArray()", "full_signature": "@Test public void testConstructorFromByteArray()", "class_method_signature": "PrivateKeyTest.testConstructorFromByteArray()", "testcase": true, "constructor": false, "invocations": ["getBytes", "assertTrue", "getValue"]}, "focal_class": {"identifier": "PrivateKey", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LogManager.getLogger(PrivateKey.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LogManager.getLogger(PrivateKey.class)", "var_name": "logger"}, {"original_string": "private final byte[] privateKey;", "modifier": "private final", "type": "byte[]", "declarator": "privateKey", "var_name": "privateKey"}], "methods": [{"identifier": "PrivateKey", "parameters": "()", "modifiers": "public", "return": "", "signature": " PrivateKey()", "full_signature": "public  PrivateKey()", "class_method_signature": "PrivateKey.PrivateKey()", "testcase": false, "constructor": true}, {"identifier": "PrivateKey", "parameters": "(byte[] src)", "modifiers": "public", "return": "", "signature": " PrivateKey(byte[] src)", "full_signature": "public  PrivateKey(byte[] src)", "class_method_signature": "PrivateKey.PrivateKey(byte[] src)", "testcase": false, "constructor": true}, {"identifier": "PrivateKey", "parameters": "(String seed)", "modifiers": "public", "return": "", "signature": " PrivateKey(String seed)", "full_signature": "public  PrivateKey(String seed)", "class_method_signature": "PrivateKey.PrivateKey(String seed)", "testcase": false, "constructor": true}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "PrivateKey.isValid()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "PrivateKey.getValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PrivateKey.toString()", "testcase": false, "constructor": false}], "file": "elrond-core/src/main/java/network/elrond/crypto/PrivateKey.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] getValue() {\n        return privateKey.clone();\n    }", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "PrivateKey.getValue()", "testcase": false, "constructor": false, "invocations": ["clone"]}, "repository": {"repo_id": 132454935, "url": "https://github.com/ElrondNetwork/elrond-node-prototype", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 16635, "license": "licensed"}}