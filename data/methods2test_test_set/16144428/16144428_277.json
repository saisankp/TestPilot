{"test_class": {"identifier": "UnsupportedValueImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper mapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private final String JSON_UNSUPPORTED_VALUE_1 = \"{\\\"type\\\":\\\"funky\\\",\\\"value\\\":\\\"groovy\\\"}\";", "modifier": "private final", "type": "String", "declarator": "JSON_UNSUPPORTED_VALUE_1 = \"{\\\"type\\\":\\\"funky\\\",\\\"value\\\":\\\"groovy\\\"}\"", "var_name": "JSON_UNSUPPORTED_VALUE_1"}, {"original_string": "private final String JSON_UNSUPPORTED_VALUE_2 = \"{\\\"type\\\":\\\"shiny\\\",\\\"number\\\":42}\";", "modifier": "private final", "type": "String", "declarator": "JSON_UNSUPPORTED_VALUE_2 = \"{\\\"type\\\":\\\"shiny\\\",\\\"number\\\":42}\"", "var_name": "JSON_UNSUPPORTED_VALUE_2"}, {"original_string": "private UnsupportedValue firstValue, secondValue;", "modifier": "private", "type": "UnsupportedValue", "declarator": "firstValue", "var_name": "firstValue"}], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/implementation/UnsupportedValueImplTest.java"}, "test_case": {"identifier": "testGetTypeString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetTypeString() {\n\t\tassertEquals(\"funky\", firstValue.getTypeJsonString());\n\t\tassertEquals(\"shiny\", secondValue.getTypeJsonString());\n\t}", "signature": "void testGetTypeString()", "full_signature": "@Test public void testGetTypeString()", "class_method_signature": "UnsupportedValueImplTest.testGetTypeString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getTypeJsonString", "assertEquals", "getTypeJsonString"]}, "focal_class": {"identifier": "UnsupportedValueImpl", "superclass": "extends ValueImpl", "interfaces": "implements UnsupportedValue", "fields": [{"original_string": "private final String typeString;", "modifier": "private final", "type": "String", "declarator": "typeString", "var_name": "typeString"}, {"original_string": "private final Map<String, JsonNode> contents;", "modifier": "private final", "type": "Map<String, JsonNode>", "declarator": "contents", "var_name": "contents"}], "methods": [{"identifier": "UnsupportedValueImpl", "parameters": "(\n\t\t\t@JsonProperty(\"type\")\n\t\t\tString typeString)", "modifiers": "@JsonCreator private", "return": "", "signature": " UnsupportedValueImpl(\n\t\t\t@JsonProperty(\"type\")\n\t\t\tString typeString)", "full_signature": "@JsonCreator private  UnsupportedValueImpl(\n\t\t\t@JsonProperty(\"type\")\n\t\t\tString typeString)", "class_method_signature": "UnsupportedValueImpl.UnsupportedValueImpl(\n\t\t\t@JsonProperty(\"type\")\n\t\t\tString typeString)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(ValueVisitor<T> valueVisitor)", "modifiers": "@Override public", "return": "T", "signature": "T accept(ValueVisitor<T> valueVisitor)", "full_signature": "@Override public T accept(ValueVisitor<T> valueVisitor)", "class_method_signature": "UnsupportedValueImpl.accept(ValueVisitor<T> valueVisitor)", "testcase": false, "constructor": false}, {"identifier": "getTypeJsonString", "parameters": "()", "modifiers": "@Override @JsonProperty(\"type\") public", "return": "String", "signature": "String getTypeJsonString()", "full_signature": "@Override @JsonProperty(\"type\") public String getTypeJsonString()", "class_method_signature": "UnsupportedValueImpl.getTypeJsonString()", "testcase": false, "constructor": false}, {"identifier": "getContents", "parameters": "()", "modifiers": "@JsonAnyGetter protected", "return": "Map<String, JsonNode>", "signature": "Map<String, JsonNode> getContents()", "full_signature": "@JsonAnyGetter protected Map<String, JsonNode> getContents()", "class_method_signature": "UnsupportedValueImpl.getContents()", "testcase": false, "constructor": false}, {"identifier": "loadContents", "parameters": "(String key, JsonNode value)", "modifiers": "@JsonAnySetter protected", "return": "void", "signature": "void loadContents(String key, JsonNode value)", "full_signature": "@JsonAnySetter protected void loadContents(String key, JsonNode value)", "class_method_signature": "UnsupportedValueImpl.loadContents(String key, JsonNode value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UnsupportedValueImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "UnsupportedValueImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "UnsupportedValueImpl.equals(Object other)", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/implementation/UnsupportedValueImpl.java"}, "focal_method": {"identifier": "getTypeJsonString", "parameters": "()", "modifiers": "@Override @JsonProperty(\"type\") public", "return": "String", "body": "@Override\n\t@JsonProperty(\"type\")\n\tpublic String getTypeJsonString() {\n\t\treturn typeString;\n\t}", "signature": "String getTypeJsonString()", "full_signature": "@Override @JsonProperty(\"type\") public String getTypeJsonString()", "class_method_signature": "UnsupportedValueImpl.getTypeJsonString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}