{"test_class": {"identifier": "DocumentationConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DataDictionary dataDictionary;", "modifier": "private", "type": "DataDictionary", "declarator": "dataDictionary", "var_name": "dataDictionary"}, {"original_string": "private Function functionMock;", "modifier": "private", "type": "Function", "declarator": "functionMock", "var_name": "functionMock"}, {"original_string": "private FunctionDocumentation functionDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "functionDocumentation", "var_name": "functionDocumentation"}, {"original_string": "private DocumentationConfig documentationConfig;", "modifier": "private", "type": "DocumentationConfig", "declarator": "documentationConfig", "var_name": "documentationConfig"}, {"original_string": "private WorkArea workAreaOne;", "modifier": "private", "type": "WorkArea", "declarator": "workAreaOne", "var_name": "workAreaOne"}, {"original_string": "private WorkArea workAreaTwo;", "modifier": "private", "type": "WorkArea", "declarator": "workAreaTwo", "var_name": "workAreaTwo"}, {"original_string": "private Field fieldOne;", "modifier": "private", "type": "Field", "declarator": "fieldOne", "var_name": "fieldOne"}, {"original_string": "private Field fieldTwo;", "modifier": "private", "type": "Field", "declarator": "fieldTwo", "var_name": "fieldTwo"}, {"original_string": "private Field fieldThree;", "modifier": "private", "type": "Field", "declarator": "fieldThree", "var_name": "fieldThree"}, {"original_string": "private Field fieldFour;", "modifier": "private", "type": "Field", "declarator": "fieldFour", "var_name": "fieldFour"}, {"original_string": "private Field groupedField;", "modifier": "private", "type": "Field", "declarator": "groupedField", "var_name": "groupedField"}, {"original_string": "private ItemDocumentation iDocOne;", "modifier": "private", "type": "ItemDocumentation", "declarator": "iDocOne", "var_name": "iDocOne"}, {"original_string": "private ItemDocumentation iDocTwo;", "modifier": "private", "type": "ItemDocumentation", "declarator": "iDocTwo", "var_name": "iDocTwo"}, {"original_string": "private ItemDocumentation iDocFour;", "modifier": "private", "type": "ItemDocumentation", "declarator": "iDocFour", "var_name": "iDocFour"}], "file": "geoclient-core/src/test/java/gov/nyc/doitt/gis/geoclient/config/DocumentationConfigTest.java"}, "test_case": {"identifier": "testDocumentTwoWorkAreaFunction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDocumentTwoWorkAreaFunction()\n    {\n        Mockito.when(this.functionMock.getWorkAreaOne()).thenReturn(workAreaOne);\n        Mockito.when(this.functionMock.isTwoWorkAreas()).thenReturn(true);\n        Mockito.when(this.functionMock.getWorkAreaTwo()).thenReturn(workAreaTwo);\n        FunctionDocumentation result = this.documentationConfig.document(functionDocumentation, functionMock);\n        assertSame(functionDocumentation, result);\n        assertEquals(4, result.getFields().size());\n        // grouped field should have been skipped\n        assertFalse(result.getFields().contains(new MissingDocumentation(this.groupedField.getId())));\n        assertTrue(result.getFields().remove(iDocOne));\n        assertTrue(result.getFields().remove(iDocTwo));\n        assertTrue(result.getFields().remove(iDocFour));\n        assertEquals(1, result.getFields().size());\n        assertTrue(result.getFields().first() instanceof MissingDocumentation);\n    }", "signature": "void testDocumentTwoWorkAreaFunction()", "full_signature": "@Test public void testDocumentTwoWorkAreaFunction()", "class_method_signature": "DocumentationConfigTest.testDocumentTwoWorkAreaFunction()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getWorkAreaOne", "thenReturn", "when", "isTwoWorkAreas", "thenReturn", "when", "getWorkAreaTwo", "document", "assertSame", "assertEquals", "size", "getFields", "assertFalse", "contains", "getFields", "getId", "assertTrue", "remove", "getFields", "assertTrue", "remove", "getFields", "assertTrue", "remove", "getFields", "assertEquals", "size", "getFields", "assertTrue", "first", "getFields"]}, "focal_class": {"identifier": "DocumentationConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(DocumentationConfig.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(DocumentationConfig.class)", "var_name": "log"}, {"original_string": "private DataDictionary dataDictionary;", "modifier": "private", "type": "DataDictionary", "declarator": "dataDictionary", "var_name": "dataDictionary"}], "methods": [{"identifier": "DocumentationConfig", "parameters": "(DataDictionary dataDictionary)", "modifiers": "public", "return": "", "signature": " DocumentationConfig(DataDictionary dataDictionary)", "full_signature": "public  DocumentationConfig(DataDictionary dataDictionary)", "class_method_signature": "DocumentationConfig.DocumentationConfig(DataDictionary dataDictionary)", "testcase": false, "constructor": true}, {"identifier": "document", "parameters": "(FunctionDocumentation functionDocumentation, Function function)", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation document(FunctionDocumentation functionDocumentation, Function function)", "full_signature": "public FunctionDocumentation document(FunctionDocumentation functionDocumentation, Function function)", "class_method_signature": "DocumentationConfig.document(FunctionDocumentation functionDocumentation, Function function)", "testcase": false, "constructor": false}, {"identifier": "addItemDocumentation", "parameters": "(FunctionDocumentation functionDocumentation, List<String> fieldIds)", "modifiers": "private", "return": "void", "signature": "void addItemDocumentation(FunctionDocumentation functionDocumentation, List<String> fieldIds)", "full_signature": "private void addItemDocumentation(FunctionDocumentation functionDocumentation, List<String> fieldIds)", "class_method_signature": "DocumentationConfig.addItemDocumentation(FunctionDocumentation functionDocumentation, List<String> fieldIds)", "testcase": false, "constructor": false}, {"identifier": "getFieldIds", "parameters": "(WorkArea workArea)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getFieldIds(WorkArea workArea)", "full_signature": "private List<String> getFieldIds(WorkArea workArea)", "class_method_signature": "DocumentationConfig.getFieldIds(WorkArea workArea)", "testcase": false, "constructor": false}], "file": "geoclient-core/src/main/java/gov/nyc/doitt/gis/geoclient/config/DocumentationConfig.java"}, "focal_method": {"identifier": "document", "parameters": "(FunctionDocumentation functionDocumentation, Function function)", "modifiers": "public", "return": "FunctionDocumentation", "body": "public FunctionDocumentation document(FunctionDocumentation functionDocumentation, Function function)\n    {\n        addItemDocumentation(functionDocumentation, getFieldIds(function.getWorkAreaOne()));\n        if(function.isTwoWorkAreas())\n        {\n            addItemDocumentation(functionDocumentation, getFieldIds(function.getWorkAreaTwo()));\n        }\n        return functionDocumentation;\n    }", "signature": "FunctionDocumentation document(FunctionDocumentation functionDocumentation, Function function)", "full_signature": "public FunctionDocumentation document(FunctionDocumentation functionDocumentation, Function function)", "class_method_signature": "DocumentationConfig.document(FunctionDocumentation functionDocumentation, Function function)", "testcase": false, "constructor": false, "invocations": ["addItemDocumentation", "getFieldIds", "getWorkAreaOne", "isTwoWorkAreas", "addItemDocumentation", "getFieldIds", "getWorkAreaTwo"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}