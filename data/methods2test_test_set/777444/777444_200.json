{"test_class": {"identifier": "ObjectToJsonConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectToJsonConverter converter;", "modifier": "private", "type": "ObjectToJsonConverter", "declarator": "converter", "var_name": "converter"}], "file": "agent/core/src/test/java/org/jolokia/converter/json/ObjectToJsonConverterTest.java"}, "test_case": {"identifier": "setInnerValueTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setInnerValueTest() throws IllegalAccessException, AttributeNotFoundException, InvocationTargetException {\n        InnerValueTestBean bean = new InnerValueTestBean(\"foo\",\"bar\",\"baz\");\n\n        Object oldValue = converter.setInnerValue(bean,\"blub\",new ArrayList<String>(Arrays.asList(\"map\",\"foo\",\"1\")));\n\n        assertEquals(oldValue,\"baz\");\n        assertEquals(bean.getMap().get(\"foo\").get(0),\"bar\");\n        assertEquals(bean.getMap().get(\"foo\").get(1),\"blub\");\n\n        oldValue = converter.setInnerValue(bean,\"fcn\",new ArrayList<String>(Arrays.asList(\"array\",\"0\")));\n\n        assertEquals(oldValue,\"bar\");\n        assertEquals(bean.getArray()[0],\"fcn\");\n    }", "signature": "void setInnerValueTest()", "full_signature": "@Test public void setInnerValueTest()", "class_method_signature": "ObjectToJsonConverterTest.setInnerValueTest()", "testcase": true, "constructor": false, "invocations": ["setInnerValue", "asList", "assertEquals", "assertEquals", "get", "get", "getMap", "assertEquals", "get", "get", "getMap", "setInnerValue", "asList", "assertEquals", "assertEquals", "getArray"]}, "focal_class": {"identifier": "ObjectToJsonConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Extractor> handlers;", "modifier": "private", "type": "List<Extractor>", "declarator": "handlers", "var_name": "handlers"}, {"original_string": "private ArrayExtractor arrayExtractor;", "modifier": "private", "type": "ArrayExtractor", "declarator": "arrayExtractor", "var_name": "arrayExtractor"}, {"original_string": "private ThreadLocal<ObjectSerializationContext> stackContextLocal = new ThreadLocal<ObjectSerializationContext>();", "modifier": "private", "type": "ThreadLocal<ObjectSerializationContext>", "declarator": "stackContextLocal = new ThreadLocal<ObjectSerializationContext>()", "var_name": "stackContextLocal"}, {"original_string": "private StringToObjectConverter stringToObjectConverter;", "modifier": "private", "type": "StringToObjectConverter", "declarator": "stringToObjectConverter", "var_name": "stringToObjectConverter"}, {"original_string": "private static final String SIMPLIFIERS_DEFAULT_DEF = \"META-INF/simplifiers-default\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLIFIERS_DEFAULT_DEF = \"META-INF/simplifiers-default\"", "var_name": "SIMPLIFIERS_DEFAULT_DEF"}, {"original_string": "private static final String SIMPLIFIERS_DEF         = \"META-INF/simplifiers\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLIFIERS_DEF         = \"META-INF/simplifiers\"", "var_name": "SIMPLIFIERS_DEF"}], "methods": [{"identifier": "ObjectToJsonConverter", "parameters": "(StringToObjectConverter pStringToObjectConverter,\n                                 Extractor... pSimplifyHandlers)", "modifiers": "public", "return": "", "signature": " ObjectToJsonConverter(StringToObjectConverter pStringToObjectConverter,\n                                 Extractor... pSimplifyHandlers)", "full_signature": "public  ObjectToJsonConverter(StringToObjectConverter pStringToObjectConverter,\n                                 Extractor... pSimplifyHandlers)", "class_method_signature": "ObjectToJsonConverter.ObjectToJsonConverter(StringToObjectConverter pStringToObjectConverter,\n                                 Extractor... pSimplifyHandlers)", "testcase": false, "constructor": true}, {"identifier": "convertToJson", "parameters": "(Object pValue, List<String> pPathParts, JsonConvertOptions pOptions)", "modifiers": "public", "return": "Object", "signature": "Object convertToJson(Object pValue, List<String> pPathParts, JsonConvertOptions pOptions)", "full_signature": "public Object convertToJson(Object pValue, List<String> pPathParts, JsonConvertOptions pOptions)", "class_method_signature": "ObjectToJsonConverter.convertToJson(Object pValue, List<String> pPathParts, JsonConvertOptions pOptions)", "testcase": false, "constructor": false}, {"identifier": "setInnerValue", "parameters": "(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "modifiers": "public", "return": "Object", "signature": "Object setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "full_signature": "public Object setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "class_method_signature": "ObjectToJsonConverter.setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "testcase": false, "constructor": false}, {"identifier": "extractObject", "parameters": "(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "modifiers": "public", "return": "Object", "signature": "Object extractObject(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "full_signature": "public Object extractObject(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "class_method_signature": "ObjectToJsonConverter.extractObject(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "testcase": false, "constructor": false}, {"identifier": "extractObjectWithContext", "parameters": "(Object pValue, Stack<String> pExtraArgs, JsonConvertOptions pOpts, boolean pJsonify)", "modifiers": "private", "return": "Object", "signature": "Object extractObjectWithContext(Object pValue, Stack<String> pExtraArgs, JsonConvertOptions pOpts, boolean pJsonify)", "full_signature": "private Object extractObjectWithContext(Object pValue, Stack<String> pExtraArgs, JsonConvertOptions pOpts, boolean pJsonify)", "class_method_signature": "ObjectToJsonConverter.extractObjectWithContext(Object pValue, Stack<String> pExtraArgs, JsonConvertOptions pOpts, boolean pJsonify)", "testcase": false, "constructor": false}, {"identifier": "setObjectValue", "parameters": "(Object pInner, String pAttribute, Object pValue)", "modifiers": "private", "return": "Object", "signature": "Object setObjectValue(Object pInner, String pAttribute, Object pValue)", "full_signature": "private Object setObjectValue(Object pInner, String pAttribute, Object pValue)", "class_method_signature": "ObjectToJsonConverter.setObjectValue(Object pInner, String pAttribute, Object pValue)", "testcase": false, "constructor": false}, {"identifier": "getCollectionLength", "parameters": "(int originalLength)", "modifiers": "", "return": "int", "signature": "int getCollectionLength(int originalLength)", "full_signature": " int getCollectionLength(int originalLength)", "class_method_signature": "ObjectToJsonConverter.getCollectionLength(int originalLength)", "testcase": false, "constructor": false}, {"identifier": "getValueFaultHandler", "parameters": "()", "modifiers": "public", "return": "ValueFaultHandler", "signature": "ValueFaultHandler getValueFaultHandler()", "full_signature": "public ValueFaultHandler getValueFaultHandler()", "class_method_signature": "ObjectToJsonConverter.getValueFaultHandler()", "testcase": false, "constructor": false}, {"identifier": "clearContext", "parameters": "()", "modifiers": "", "return": "void", "signature": "void clearContext()", "full_signature": " void clearContext()", "class_method_signature": "ObjectToJsonConverter.clearContext()", "testcase": false, "constructor": false}, {"identifier": "setupContext", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setupContext()", "full_signature": " void setupContext()", "class_method_signature": "ObjectToJsonConverter.setupContext()", "testcase": false, "constructor": false}, {"identifier": "setupContext", "parameters": "(JsonConvertOptions pOpts)", "modifiers": "", "return": "void", "signature": "void setupContext(JsonConvertOptions pOpts)", "full_signature": " void setupContext(JsonConvertOptions pOpts)", "class_method_signature": "ObjectToJsonConverter.setupContext(JsonConvertOptions pOpts)", "testcase": false, "constructor": false}, {"identifier": "getExtractor", "parameters": "(Class pClazz)", "modifiers": "private", "return": "Extractor", "signature": "Extractor getExtractor(Class pClazz)", "full_signature": "private Extractor getExtractor(Class pClazz)", "class_method_signature": "ObjectToJsonConverter.getExtractor(Class pClazz)", "testcase": false, "constructor": false}, {"identifier": "checkForLimits", "parameters": "(Object pValue, ObjectSerializationContext pStackContext)", "modifiers": "private", "return": "String", "signature": "String checkForLimits(Object pValue, ObjectSerializationContext pStackContext)", "full_signature": "private String checkForLimits(Object pValue, ObjectSerializationContext pStackContext)", "class_method_signature": "ObjectToJsonConverter.checkForLimits(Object pValue, ObjectSerializationContext pStackContext)", "testcase": false, "constructor": false}, {"identifier": "callHandler", "parameters": "(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "modifiers": "private", "return": "Object", "signature": "Object callHandler(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "full_signature": "private Object callHandler(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "class_method_signature": "ObjectToJsonConverter.callHandler(Object pValue, Stack<String> pPathParts, boolean pJsonify)", "testcase": false, "constructor": false}, {"identifier": "getStackContextLocal", "parameters": "()", "modifiers": "", "return": "ThreadLocal<ObjectSerializationContext>", "signature": "ThreadLocal<ObjectSerializationContext> getStackContextLocal()", "full_signature": " ThreadLocal<ObjectSerializationContext> getStackContextLocal()", "class_method_signature": "ObjectToJsonConverter.getStackContextLocal()", "testcase": false, "constructor": false}, {"identifier": "addSimplifiers", "parameters": "(List<Extractor> pHandlers, Extractor[] pSimplifyHandlers)", "modifiers": "private", "return": "void", "signature": "void addSimplifiers(List<Extractor> pHandlers, Extractor[] pSimplifyHandlers)", "full_signature": "private void addSimplifiers(List<Extractor> pHandlers, Extractor[] pSimplifyHandlers)", "class_method_signature": "ObjectToJsonConverter.addSimplifiers(List<Extractor> pHandlers, Extractor[] pSimplifyHandlers)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/converter/json/ObjectToJsonConverter.java"}, "focal_method": {"identifier": "setInnerValue", "parameters": "(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "modifiers": "public", "return": "Object", "body": "public Object setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)\n            throws AttributeNotFoundException, IllegalAccessException, InvocationTargetException {\n        String lastPathElement = pPathParts.remove(pPathParts.size()-1);\n        Stack<String> extraStack = EscapeUtil.reversePath(pPathParts);\n\n        // Get the object pointed to do with path-1\n        // We are using no limits here, since a path must have been given (see above), and hence we should\n        // be save anyway.\n        Object inner = extractObjectWithContext(pOuterObject, extraStack, JsonConvertOptions.DEFAULT, false);\n\n        // Set the attribute pointed to by the path elements\n        // (depending of the parent object's type)\n        return setObjectValue(inner, lastPathElement, pNewValue);\n    }", "signature": "Object setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "full_signature": "public Object setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "class_method_signature": "ObjectToJsonConverter.setInnerValue(Object pOuterObject, Object pNewValue, List<String> pPathParts)", "testcase": false, "constructor": false, "invocations": ["remove", "size", "reversePath", "extractObjectWithContext", "setObjectValue"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}