{"test_class": {"identifier": "StreamOperationServiceWithoutMetricsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StreamOperationServiceWithoutMetricsTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StreamOperationServiceWithoutMetricsTest.class)", "var_name": "LOGGER"}, {"original_string": "private SiddhiManager siddhiManager;", "modifier": "private", "type": "SiddhiManager", "declarator": "siddhiManager", "var_name": "siddhiManager"}, {"original_string": "private StreamStatusDao streamStatusDao;", "modifier": "private", "type": "StreamStatusDao", "declarator": "streamStatusDao", "var_name": "streamStatusDao"}, {"original_string": "private CallbackService callbackService;", "modifier": "private", "type": "CallbackService", "declarator": "callbackService", "var_name": "callbackService"}, {"original_string": "private StreamOperationServiceWithoutMetrics streamOperationsService;", "modifier": "private", "type": "StreamOperationServiceWithoutMetrics", "declarator": "streamOperationsService", "var_name": "streamOperationsService"}], "file": "engine/src/test/java/com/stratio/decision/service/StreamOperationServiceWithoutMetricsTest.java"}, "test_case": {"identifier": "testCreateInternalStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateInternalStream() throws Exception {\n        streamOperationsService.createInternalStream(StreamsHelper.STREAM_NAME, StreamsHelper.COLUMNS);\n        assertTrue(\"Expected true not found\", streamOperationsService.streamExist(StreamsHelper.STREAM_NAME));\n    }", "signature": "void testCreateInternalStream()", "full_signature": "@Test public void testCreateInternalStream()", "class_method_signature": "StreamOperationServiceWithoutMetricsTest.testCreateInternalStream()", "testcase": true, "constructor": false, "invocations": ["createInternalStream", "assertTrue", "streamExist"]}, "focal_class": {"identifier": "StreamOperationServiceWithoutMetrics", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SiddhiManager siddhiManager;", "modifier": "private final", "type": "SiddhiManager", "declarator": "siddhiManager", "var_name": "siddhiManager"}, {"original_string": "private final StreamStatusDao streamStatusDao;", "modifier": "private final", "type": "StreamStatusDao", "declarator": "streamStatusDao", "var_name": "streamStatusDao"}, {"original_string": "private final CallbackService callbackService;", "modifier": "private final", "type": "CallbackService", "declarator": "callbackService", "var_name": "callbackService"}, {"original_string": "private  ConfigurationContext configurationContext;", "modifier": "private", "type": "ConfigurationContext", "declarator": "configurationContext", "var_name": "configurationContext"}, {"original_string": "private  DroolsConnectionContainer droolsConnectionContainer;", "modifier": "private", "type": "DroolsConnectionContainer", "declarator": "droolsConnectionContainer", "var_name": "droolsConnectionContainer"}], "methods": [{"identifier": "StreamOperationServiceWithoutMetrics", "parameters": "(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n                                                CallbackService callbackService)", "modifiers": "public", "return": "", "signature": " StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n                                                CallbackService callbackService)", "full_signature": "public  StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n                                                CallbackService callbackService)", "class_method_signature": "StreamOperationServiceWithoutMetrics.StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n                                                CallbackService callbackService)", "testcase": false, "constructor": true}, {"identifier": "StreamOperationServiceWithoutMetrics", "parameters": "(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n            CallbackService callbackService, ConfigurationContext configurationContext)", "modifiers": "public", "return": "", "signature": " StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n            CallbackService callbackService, ConfigurationContext configurationContext)", "full_signature": "public  StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n            CallbackService callbackService, ConfigurationContext configurationContext)", "class_method_signature": "StreamOperationServiceWithoutMetrics.StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n            CallbackService callbackService, ConfigurationContext configurationContext)", "testcase": false, "constructor": true}, {"identifier": "StreamOperationServiceWithoutMetrics", "parameters": "(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n        CallbackService callbackService, DroolsConnectionContainer droolsConnectionContainer, ConfigurationContext configurationContext)", "modifiers": "public", "return": "", "signature": " StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n        CallbackService callbackService, DroolsConnectionContainer droolsConnectionContainer, ConfigurationContext configurationContext)", "full_signature": "public  StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n        CallbackService callbackService, DroolsConnectionContainer droolsConnectionContainer, ConfigurationContext configurationContext)", "class_method_signature": "StreamOperationServiceWithoutMetrics.StreamOperationServiceWithoutMetrics(SiddhiManager siddhiManager, StreamStatusDao streamStatusDao,\n        CallbackService callbackService, DroolsConnectionContainer droolsConnectionContainer, ConfigurationContext configurationContext)", "testcase": false, "constructor": true}, {"identifier": "createInternalStream", "parameters": "(String streamName, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "void", "signature": "void createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "full_signature": "public void createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "class_method_signature": "StreamOperationServiceWithoutMetrics.createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "createStream", "parameters": "(String streamName, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "void", "signature": "void createStream(String streamName, List<ColumnNameTypeValue> columns)", "full_signature": "public void createStream(String streamName, List<ColumnNameTypeValue> columns)", "class_method_signature": "StreamOperationServiceWithoutMetrics.createStream(String streamName, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "streamExist", "parameters": "(String streamName)", "modifiers": "public", "return": "boolean", "signature": "boolean streamExist(String streamName)", "full_signature": "public boolean streamExist(String streamName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.streamExist(String streamName)", "testcase": false, "constructor": false}, {"identifier": "isUserDefined", "parameters": "(String streamName)", "modifiers": "public", "return": "boolean", "signature": "boolean isUserDefined(String streamName)", "full_signature": "public boolean isUserDefined(String streamName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.isUserDefined(String streamName)", "testcase": false, "constructor": false}, {"identifier": "enlargeStream", "parameters": "(String streamName, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "int", "signature": "int enlargeStream(String streamName, List<ColumnNameTypeValue> columns)", "full_signature": "public int enlargeStream(String streamName, List<ColumnNameTypeValue> columns)", "class_method_signature": "StreamOperationServiceWithoutMetrics.enlargeStream(String streamName, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "enlargeStream", "parameters": "(String streamName, List<ColumnNameTypeValue> columns, Boolean raiseException)", "modifiers": "public", "return": "int", "signature": "int enlargeStream(String streamName, List<ColumnNameTypeValue> columns, Boolean raiseException)", "full_signature": "public int enlargeStream(String streamName, List<ColumnNameTypeValue> columns, Boolean raiseException)", "class_method_signature": "StreamOperationServiceWithoutMetrics.enlargeStream(String streamName, List<ColumnNameTypeValue> columns, Boolean raiseException)", "testcase": false, "constructor": false}, {"identifier": "dropStream", "parameters": "(String streamName)", "modifiers": "public", "return": "void", "signature": "void dropStream(String streamName)", "full_signature": "public void dropStream(String streamName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.dropStream(String streamName)", "testcase": false, "constructor": false}, {"identifier": "addQuery", "parameters": "(String streamName, String queryString)", "modifiers": "public", "return": "String", "signature": "String addQuery(String streamName, String queryString)", "full_signature": "public String addQuery(String streamName, String queryString)", "class_method_signature": "StreamOperationServiceWithoutMetrics.addQuery(String streamName, String queryString)", "testcase": false, "constructor": false}, {"identifier": "castToColumnNameTypeValue", "parameters": "(List<Attribute> attributeList)", "modifiers": "private", "return": "List<ColumnNameTypeValue>", "signature": "List<ColumnNameTypeValue> castToColumnNameTypeValue(List<Attribute> attributeList)", "full_signature": "private List<ColumnNameTypeValue> castToColumnNameTypeValue(List<Attribute> attributeList)", "class_method_signature": "StreamOperationServiceWithoutMetrics.castToColumnNameTypeValue(List<Attribute> attributeList)", "testcase": false, "constructor": false}, {"identifier": "removeQuery", "parameters": "(String queryId, String streamName)", "modifiers": "public", "return": "void", "signature": "void removeQuery(String queryId, String streamName)", "full_signature": "public void removeQuery(String queryId, String streamName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.removeQuery(String queryId, String streamName)", "testcase": false, "constructor": false}, {"identifier": "queryIdExists", "parameters": "(String streamName, String queryId)", "modifiers": "public", "return": "boolean", "signature": "boolean queryIdExists(String streamName, String queryId)", "full_signature": "public boolean queryIdExists(String streamName, String queryId)", "class_method_signature": "StreamOperationServiceWithoutMetrics.queryIdExists(String streamName, String queryId)", "testcase": false, "constructor": false}, {"identifier": "queryRawExists", "parameters": "(String streamName, String queryRaw)", "modifiers": "public", "return": "boolean", "signature": "boolean queryRawExists(String streamName, String queryRaw)", "full_signature": "public boolean queryRawExists(String streamName, String queryRaw)", "class_method_signature": "StreamOperationServiceWithoutMetrics.queryRawExists(String streamName, String queryRaw)", "testcase": false, "constructor": false}, {"identifier": "columnExists", "parameters": "(String streamName, String columnName)", "modifiers": "public", "return": "Boolean", "signature": "Boolean columnExists(String streamName, String columnName)", "full_signature": "public Boolean columnExists(String streamName, String columnName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.columnExists(String streamName, String columnName)", "testcase": false, "constructor": false}, {"identifier": "enableAction", "parameters": "(String streamName, StreamAction action)", "modifiers": "public", "return": "void", "signature": "void enableAction(String streamName, StreamAction action)", "full_signature": "public void enableAction(String streamName, StreamAction action)", "class_method_signature": "StreamOperationServiceWithoutMetrics.enableAction(String streamName, StreamAction action)", "testcase": false, "constructor": false}, {"identifier": "disableAction", "parameters": "(String streamName, StreamAction action)", "modifiers": "public", "return": "void", "signature": "void disableAction(String streamName, StreamAction action)", "full_signature": "public void disableAction(String streamName, StreamAction action)", "class_method_signature": "StreamOperationServiceWithoutMetrics.disableAction(String streamName, StreamAction action)", "testcase": false, "constructor": false}, {"identifier": "isActionEnabled", "parameters": "(String streamName, StreamAction action)", "modifiers": "public", "return": "boolean", "signature": "boolean isActionEnabled(String streamName, StreamAction action)", "full_signature": "public boolean isActionEnabled(String streamName, StreamAction action)", "class_method_signature": "StreamOperationServiceWithoutMetrics.isActionEnabled(String streamName, StreamAction action)", "testcase": false, "constructor": false}, {"identifier": "enableEngineAction", "parameters": "(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams)", "modifiers": "public", "return": "void", "signature": "void enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams)", "full_signature": "public void enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams)", "class_method_signature": "StreamOperationServiceWithoutMetrics.enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams)", "testcase": false, "constructor": false}, {"identifier": "enableEngineAction", "parameters": "(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams,  StreamOperationServiceWithoutMetrics streamOperationService)", "modifiers": "protected", "return": "void", "signature": "void enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams,  StreamOperationServiceWithoutMetrics streamOperationService)", "full_signature": "protected void enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams,  StreamOperationServiceWithoutMetrics streamOperationService)", "class_method_signature": "StreamOperationServiceWithoutMetrics.enableEngineAction(String streamName, EngineActionType engineActionType, Map<String, Object>\n            engineActionParams,  StreamOperationServiceWithoutMetrics streamOperationService)", "testcase": false, "constructor": false}, {"identifier": "disableEngineAction", "parameters": "(String streamName, EngineActionType engineActionType)", "modifiers": "public", "return": "void", "signature": "void disableEngineAction(String streamName, EngineActionType engineActionType)", "full_signature": "public void disableEngineAction(String streamName, EngineActionType engineActionType)", "class_method_signature": "StreamOperationServiceWithoutMetrics.disableEngineAction(String streamName, EngineActionType engineActionType)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "()", "modifiers": "public", "return": "List<StratioStreamingMessage>", "signature": "List<StratioStreamingMessage> list()", "full_signature": "public List<StratioStreamingMessage> list()", "class_method_signature": "StreamOperationServiceWithoutMetrics.list()", "testcase": false, "constructor": false}, {"identifier": "suitableToList", "parameters": "(String streamName)", "modifiers": "private", "return": "boolean", "signature": "boolean suitableToList(String streamName)", "full_signature": "private boolean suitableToList(String streamName)", "class_method_signature": "StreamOperationServiceWithoutMetrics.suitableToList(String streamName)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(String streamName, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "void", "signature": "void send(String streamName, List<ColumnNameTypeValue> columns)", "full_signature": "public void send(String streamName, List<ColumnNameTypeValue> columns)", "class_method_signature": "StreamOperationServiceWithoutMetrics.send(String streamName, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "getSiddhiType", "parameters": "(ColumnType originalType)", "modifiers": "private", "return": "Attribute.Type", "signature": "Attribute.Type getSiddhiType(ColumnType originalType)", "full_signature": "private Attribute.Type getSiddhiType(ColumnType originalType)", "class_method_signature": "StreamOperationServiceWithoutMetrics.getSiddhiType(ColumnType originalType)", "testcase": false, "constructor": false}, {"identifier": "getStreamingType", "parameters": "(Attribute.Type type)", "modifiers": "private", "return": "ColumnType", "signature": "ColumnType getStreamingType(Attribute.Type type)", "full_signature": "private ColumnType getStreamingType(Attribute.Type type)", "class_method_signature": "StreamOperationServiceWithoutMetrics.getStreamingType(Attribute.Type type)", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/service/StreamOperationServiceWithoutMetrics.java"}, "focal_method": {"identifier": "createInternalStream", "parameters": "(String streamName, List<ColumnNameTypeValue> columns)", "modifiers": "public", "return": "void", "body": "public void createInternalStream(String streamName, List<ColumnNameTypeValue> columns) {\n        StreamDefinition newStream = QueryFactory.createStreamDefinition().name(streamName);\n        for (ColumnNameTypeValue column : columns) {\n            newStream.attribute(column.getColumn(), getSiddhiType(column.getType()));\n        }\n        siddhiManager.defineStream(newStream);\n        streamStatusDao.createInferredStream(streamName, columns);\n     }", "signature": "void createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "full_signature": "public void createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "class_method_signature": "StreamOperationServiceWithoutMetrics.createInternalStream(String streamName, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false, "invocations": ["name", "createStreamDefinition", "attribute", "getColumn", "getSiddhiType", "getType", "defineStream", "createInferredStream"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}