{"test_class": {"identifier": "DecorationParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "decorator/src/test/java/org/apache/cxf/dosgi/dsw/decorator/DecorationParserTest.java"}, "test_case": {"identifier": "testGetDecoratorForSD", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDecoratorForSD() throws JAXBException, IOException {\n        URL resource = getClass().getResource(\"/test-resources/sd.xml\");\n        List<ServiceDecorationType> elements = new DecorationParser().getDecorations(resource);\n        assertEquals(1, elements.size());\n        ServiceDecorationType decoration = elements.get(0);\n        assertEquals(1, decoration.getMatch().size());\n        MatchType match = decoration.getMatch().get(0);\n        assertEquals(\"org.acme.foo.*\", match.getInterface());\n        assertEquals(1, match.getMatchProperty().size());\n        MatchPropertyType matchProp = match.getMatchProperty().get(0);\n        assertEquals(\"test.prop\", matchProp.getName());\n        assertEquals(\"xyz\", matchProp.getValue());\n        assertEquals(1, match.getAddProperty().size());\n        AddPropertyType addProp = match.getAddProperty().get(0);\n        assertEquals(\"test.too\", addProp.getName());\n        assertEquals(\"ahaha\", addProp.getValue());\n        assertEquals(\"java.lang.String\", addProp.getType());\n    }", "signature": "void testGetDecoratorForSD()", "full_signature": "@Test public void testGetDecoratorForSD()", "class_method_signature": "DecorationParserTest.testGetDecoratorForSD()", "testcase": true, "constructor": false, "invocations": ["getResource", "getClass", "getDecorations", "assertEquals", "size", "get", "assertEquals", "size", "getMatch", "get", "getMatch", "assertEquals", "getInterface", "assertEquals", "size", "getMatchProperty", "get", "getMatchProperty", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "size", "getAddProperty", "get", "getAddProperty", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "getType"]}, "focal_class": {"identifier": "DecorationParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JAXBContext jaxbContext;", "modifier": "private", "type": "JAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}, {"original_string": "private Schema schema;", "modifier": "private", "type": "Schema", "declarator": "schema", "var_name": "schema"}], "methods": [{"identifier": "DecorationParser", "parameters": "()", "modifiers": "", "return": "", "signature": " DecorationParser()", "full_signature": "  DecorationParser()", "class_method_signature": "DecorationParser.DecorationParser()", "testcase": false, "constructor": true}, {"identifier": "getDecorations", "parameters": "(URL resourceURL)", "modifiers": "", "return": "List<ServiceDecorationType>", "signature": "List<ServiceDecorationType> getDecorations(URL resourceURL)", "full_signature": " List<ServiceDecorationType> getDecorations(URL resourceURL)", "class_method_signature": "DecorationParser.getDecorations(URL resourceURL)", "testcase": false, "constructor": false}, {"identifier": "decorationType", "parameters": "(URL resourceURL)", "modifiers": "private", "return": "boolean", "signature": "boolean decorationType(URL resourceURL)", "full_signature": "private boolean decorationType(URL resourceURL)", "class_method_signature": "DecorationParser.decorationType(URL resourceURL)", "testcase": false, "constructor": false}], "file": "decorator/src/main/java/org/apache/cxf/dosgi/dsw/decorator/DecorationParser.java"}, "focal_method": {"identifier": "getDecorations", "parameters": "(URL resourceURL)", "modifiers": "", "return": "List<ServiceDecorationType>", "body": "List<ServiceDecorationType> getDecorations(URL resourceURL) throws JAXBException, IOException {\n        if (resourceURL == null || !decorationType(resourceURL)) {\n            return new ArrayList<>();\n        }\n        Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();\n        unmarshaller.setSchema(schema);\n        InputStream is = resourceURL.openStream();\n        Source source = new StreamSource(is);\n        JAXBElement<ServiceDecorationsType> jaxb = unmarshaller.unmarshal(source, ServiceDecorationsType.class);\n        ServiceDecorationsType decorations = jaxb.getValue();\n        return decorations.getServiceDecoration();\n    }", "signature": "List<ServiceDecorationType> getDecorations(URL resourceURL)", "full_signature": " List<ServiceDecorationType> getDecorations(URL resourceURL)", "class_method_signature": "DecorationParser.getDecorations(URL resourceURL)", "testcase": false, "constructor": false, "invocations": ["decorationType", "createUnmarshaller", "setSchema", "openStream", "unmarshal", "getValue", "getServiceDecoration"]}, "repository": {"repo_id": 17537835, "url": "https://github.com/apache/cxf-dosgi", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 26, "size": 3444, "license": "licensed"}}