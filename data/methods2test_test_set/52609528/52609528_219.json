{"test_class": {"identifier": "HttpServerRequestUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateleen-core/src/test/java/org/swisspush/gateleen/core/util/HttpServerRequestUtilTest.java"}, "test_case": {"identifier": "testIsRequestHopsLimitExceeded", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsRequestHopsLimitExceeded(TestContext context){\n        IncreaseHopsRequest request = new IncreaseHopsRequest(new CaseInsensitiveHeaders());\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 0));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 1));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 20));\n\n        request = new IncreaseHopsRequest(new CaseInsensitiveHeaders().set(HttpRequestHeader.X_HOPS.getName(), \"25\"));\n        context.assertTrue(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 0));\n        context.assertTrue(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 1));\n        context.assertTrue(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 15));\n        context.assertTrue(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 24));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 25));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 26));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 50));\n\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, null));\n\n        request = new IncreaseHopsRequest(new CaseInsensitiveHeaders().set(HttpRequestHeader.X_HOPS.getName(), \"booom\"));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 0));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 1));\n        context.assertFalse(HttpServerRequestUtil.isRequestHopsLimitExceeded(request, 10));\n    }", "signature": "void testIsRequestHopsLimitExceeded(TestContext context)", "full_signature": "@Test public void testIsRequestHopsLimitExceeded(TestContext context)", "class_method_signature": "HttpServerRequestUtilTest.testIsRequestHopsLimitExceeded(TestContext context)", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "set", "getName", "assertTrue", "isRequestHopsLimitExceeded", "assertTrue", "isRequestHopsLimitExceeded", "assertTrue", "isRequestHopsLimitExceeded", "assertTrue", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "set", "getName", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded", "assertFalse", "isRequestHopsLimitExceeded"]}, "focal_class": {"identifier": "HttpServerRequestUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HttpServerRequestUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " HttpServerRequestUtil()", "full_signature": "private  HttpServerRequestUtil()", "class_method_signature": "HttpServerRequestUtil.HttpServerRequestUtil()", "testcase": false, "constructor": true}, {"identifier": "isRemoteAddressLoopbackAddress", "parameters": "(HttpServerRequest request)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRemoteAddressLoopbackAddress(HttpServerRequest request)", "full_signature": "public static boolean isRemoteAddressLoopbackAddress(HttpServerRequest request)", "class_method_signature": "HttpServerRequestUtil.isRemoteAddressLoopbackAddress(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "increaseRequestHops", "parameters": "(HttpServerRequest request)", "modifiers": "public static", "return": "void", "signature": "void increaseRequestHops(HttpServerRequest request)", "full_signature": "public static void increaseRequestHops(HttpServerRequest request)", "class_method_signature": "HttpServerRequestUtil.increaseRequestHops(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "isRequestHopsLimitExceeded", "parameters": "(HttpServerRequest request, Integer hopsLimit)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "full_signature": "public static boolean isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "class_method_signature": "HttpServerRequestUtil.isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "testcase": false, "constructor": false}, {"identifier": "prepareResponse", "parameters": "(HttpServerRequest request, HttpClientResponse response)", "modifiers": "public static", "return": "void", "signature": "void prepareResponse(HttpServerRequest request, HttpClientResponse response)", "full_signature": "public static void prepareResponse(HttpServerRequest request, HttpClientResponse response)", "class_method_signature": "HttpServerRequestUtil.prepareResponse(HttpServerRequest request, HttpClientResponse response)", "testcase": false, "constructor": false}], "file": "gateleen-core/src/main/java/org/swisspush/gateleen/core/util/HttpServerRequestUtil.java"}, "focal_method": {"identifier": "isRequestHopsLimitExceeded", "parameters": "(HttpServerRequest request, Integer hopsLimit)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit){\n        if(hopsLimit == null){\n            return false;\n        }\n        Integer hops = HttpRequestHeader.getInteger(request.headers(), HttpRequestHeader.X_HOPS, 0);\n        return hops > hopsLimit;\n    }", "signature": "boolean isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "full_signature": "public static boolean isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "class_method_signature": "HttpServerRequestUtil.isRequestHopsLimitExceeded(HttpServerRequest request, Integer hopsLimit)", "testcase": false, "constructor": false, "invocations": ["getInteger", "headers"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}