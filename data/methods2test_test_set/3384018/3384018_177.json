{"test_class": {"identifier": "TestNetscapeDraftHeaderParser", "superclass": "", "interfaces": "", "fields": [], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/impl/cookie/TestNetscapeDraftHeaderParser.java"}, "test_case": {"identifier": "testNetscapeCookieParsing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNetscapeCookieParsing() throws Exception {\n        NetscapeDraftHeaderParser parser = NetscapeDraftHeaderParser.DEFAULT;\n\n        String s = \"name  = value; test; test1 =  stuff,with,commas   ;\" +\n                \" test2 =  \\\"stuff, stuff\\\"; test3=\\\"stuff\";\n        CharArrayBuffer buffer = new CharArrayBuffer(16);\n        buffer.append(s);\n        ParserCursor cursor = new ParserCursor(0, s.length());\n\n        HeaderElement he = parser.parseHeader(buffer, cursor);\n        Assert.assertEquals(\"name\", he.getName());\n        Assert.assertEquals(\"value\", he.getValue());\n        NameValuePair[] params = he.getParameters();\n        Assert.assertEquals(\"test\", params[0].getName());\n        Assert.assertEquals(null, params[0].getValue());\n        Assert.assertEquals(\"test1\", params[1].getName());\n        Assert.assertEquals(\"stuff,with,commas\", params[1].getValue());\n        Assert.assertEquals(\"test2\", params[2].getName());\n        Assert.assertEquals(\"\\\"stuff, stuff\\\"\", params[2].getValue());\n        Assert.assertEquals(\"test3\", params[3].getName());\n        Assert.assertEquals(\"\\\"stuff\", params[3].getValue());\n        Assert.assertEquals(s.length(), cursor.getPos());\n        Assert.assertTrue(cursor.atEnd());\n\n        s = \"  \";\n        buffer = new CharArrayBuffer(16);\n        buffer.append(s);\n        cursor = new ParserCursor(0, s.length());\n        he = parser.parseHeader(buffer, cursor);\n        Assert.assertEquals(\"\", he.getName());\n        Assert.assertEquals(null, he.getValue());\n    }", "signature": "void testNetscapeCookieParsing()", "full_signature": "@Test public void testNetscapeCookieParsing()", "class_method_signature": "TestNetscapeDraftHeaderParser.testNetscapeCookieParsing()", "testcase": true, "constructor": false, "invocations": ["append", "length", "parseHeader", "assertEquals", "getName", "assertEquals", "getValue", "getParameters", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "getName", "assertEquals", "getValue", "assertEquals", "length", "getPos", "assertTrue", "atEnd", "append", "length", "parseHeader", "assertEquals", "getName", "assertEquals", "getValue"]}, "focal_class": {"identifier": "NetscapeDraftHeaderParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static NetscapeDraftHeaderParser DEFAULT = new NetscapeDraftHeaderParser();", "modifier": "public final static", "type": "NetscapeDraftHeaderParser", "declarator": "DEFAULT = new NetscapeDraftHeaderParser()", "var_name": "DEFAULT"}], "methods": [{"identifier": "NetscapeDraftHeaderParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " NetscapeDraftHeaderParser()", "full_signature": "public  NetscapeDraftHeaderParser()", "class_method_signature": "NetscapeDraftHeaderParser.NetscapeDraftHeaderParser()", "testcase": false, "constructor": true}, {"identifier": "parseHeader", "parameters": "(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "modifiers": "public", "return": "HeaderElement", "signature": "HeaderElement parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "full_signature": "public HeaderElement parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "class_method_signature": "NetscapeDraftHeaderParser.parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "testcase": false, "constructor": false}, {"identifier": "parseNameValuePair", "parameters": "(\n            final CharArrayBuffer buffer, final ParserCursor cursor)", "modifiers": "private", "return": "NameValuePair", "signature": "NameValuePair parseNameValuePair(\n            final CharArrayBuffer buffer, final ParserCursor cursor)", "full_signature": "private NameValuePair parseNameValuePair(\n            final CharArrayBuffer buffer, final ParserCursor cursor)", "class_method_signature": "NetscapeDraftHeaderParser.parseNameValuePair(\n            final CharArrayBuffer buffer, final ParserCursor cursor)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/impl/cookie/NetscapeDraftHeaderParser.java"}, "focal_method": {"identifier": "parseHeader", "parameters": "(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "modifiers": "public", "return": "HeaderElement", "body": "public HeaderElement parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor) throws ParseException {\n        if (buffer == null) {\n            throw new IllegalArgumentException(\"Char array buffer may not be null\");\n        }\n        if (cursor == null) {\n            throw new IllegalArgumentException(\"Parser cursor may not be null\");\n        }\n        NameValuePair nvp = parseNameValuePair(buffer, cursor);\n        List<NameValuePair> params = new ArrayList<NameValuePair>();\n        while (!cursor.atEnd()) {\n            NameValuePair param = parseNameValuePair(buffer, cursor);\n            params.add(param);\n        }\n        return new BasicHeaderElement(\n                nvp.getName(),\n                nvp.getValue(), params.toArray(new NameValuePair[params.size()]));\n    }", "signature": "HeaderElement parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "full_signature": "public HeaderElement parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "class_method_signature": "NetscapeDraftHeaderParser.parseHeader(\n            final CharArrayBuffer buffer,\n            final ParserCursor cursor)", "testcase": false, "constructor": false, "invocations": ["parseNameValuePair", "atEnd", "parseNameValuePair", "add", "getName", "getValue", "toArray", "size"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}