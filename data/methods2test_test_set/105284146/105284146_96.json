{"test_class": {"identifier": "LimitViolationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Network network = EurostagTutorialExample1Factory.createWithFixedCurrentLimits();", "modifier": "private final", "type": "Network", "declarator": "network = EurostagTutorialExample1Factory.createWithFixedCurrentLimits()", "var_name": "network"}], "file": "security-analysis-api/src/test/java/com/powsybl/security/LimitViolationTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        LimitViolation limitViolation1 = new LimitViolation(\"testId\", null, LimitViolationType.HIGH_VOLTAGE, \"high\", Integer.MAX_VALUE,\n                420, 1, 500, null);\n        LimitViolation limitViolation2 = new LimitViolation(\"testId\", null, LimitViolationType.CURRENT, null, 6300,\n                1000, 1, 1100, Branch.Side.ONE);\n        String expected1 = \"Subject id: testId, Subject name: null, limitType: HIGH_VOLTAGE, limit: 420.0, limitName: high, acceptableDuration: 2147483647, limitReduction: 1.0, value: 500.0, side: null\";\n        String expected2 = \"Subject id: testId, Subject name: null, limitType: CURRENT, limit: 1000.0, limitName: null, acceptableDuration: 6300, limitReduction: 1.0, value: 1100.0, side: ONE\";\n\n        assertEquals(expected1, limitViolation1.toString());\n        assertEquals(expected2, limitViolation2.toString());\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "LimitViolationTest.testToString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "LimitViolation", "superclass": "extends AbstractExtendable<LimitViolation>", "interfaces": "", "fields": [{"original_string": "private final String subjectId;", "modifier": "private final", "type": "String", "declarator": "subjectId", "var_name": "subjectId"}, {"original_string": "private final String subjectName;", "modifier": "private final", "type": "String", "declarator": "subjectName", "var_name": "subjectName"}, {"original_string": "private final LimitViolationType limitType;", "modifier": "private final", "type": "LimitViolationType", "declarator": "limitType", "var_name": "limitType"}, {"original_string": "private final double limit;", "modifier": "private final", "type": "double", "declarator": "limit", "var_name": "limit"}, {"original_string": "private final String limitName;", "modifier": "private final", "type": "String", "declarator": "limitName", "var_name": "limitName"}, {"original_string": "private final int acceptableDuration;", "modifier": "private final", "type": "int", "declarator": "acceptableDuration", "var_name": "acceptableDuration"}, {"original_string": "private final float limitReduction;", "modifier": "private final", "type": "float", "declarator": "limitReduction", "var_name": "limitReduction"}, {"original_string": "private final double value;", "modifier": "private final", "type": "double", "declarator": "value", "var_name": "value"}, {"original_string": "private final Branch.Side side;", "modifier": "private final", "type": "Branch.Side", "declarator": "side", "var_name": "side"}], "methods": [{"identifier": "LimitViolation", "parameters": "(String subjectId, @Nullable String subjectName, LimitViolationType limitType, @Nullable String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, @Nullable Branch.Side side)", "modifiers": "public", "return": "", "signature": " LimitViolation(String subjectId, @Nullable String subjectName, LimitViolationType limitType, @Nullable String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, @Nullable Branch.Side side)", "full_signature": "public  LimitViolation(String subjectId, @Nullable String subjectName, LimitViolationType limitType, @Nullable String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, @Nullable Branch.Side side)", "class_method_signature": "LimitViolation.LimitViolation(String subjectId, @Nullable String subjectName, LimitViolationType limitType, @Nullable String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, @Nullable Branch.Side side)", "testcase": false, "constructor": true}, {"identifier": "LimitViolation", "parameters": "(String subjectId, LimitViolationType limitType, String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, Branch.Side side)", "modifiers": "public", "return": "", "signature": " LimitViolation(String subjectId, LimitViolationType limitType, String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, Branch.Side side)", "full_signature": "public  LimitViolation(String subjectId, LimitViolationType limitType, String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, Branch.Side side)", "class_method_signature": "LimitViolation.LimitViolation(String subjectId, LimitViolationType limitType, String limitName, int acceptableDuration,\n                          double limit, float limitReduction, double value, Branch.Side side)", "testcase": false, "constructor": true}, {"identifier": "LimitViolation", "parameters": "(String subjectId, String subjectName, LimitViolationType limitType, double limit, float limitReduction, double value)", "modifiers": "public", "return": "", "signature": " LimitViolation(String subjectId, String subjectName, LimitViolationType limitType, double limit, float limitReduction, double value)", "full_signature": "public  LimitViolation(String subjectId, String subjectName, LimitViolationType limitType, double limit, float limitReduction, double value)", "class_method_signature": "LimitViolation.LimitViolation(String subjectId, String subjectName, LimitViolationType limitType, double limit, float limitReduction, double value)", "testcase": false, "constructor": true}, {"identifier": "LimitViolation", "parameters": "(String subjectId, LimitViolationType limitType, double limit, float limitReduction, double value)", "modifiers": "public", "return": "", "signature": " LimitViolation(String subjectId, LimitViolationType limitType, double limit, float limitReduction, double value)", "full_signature": "public  LimitViolation(String subjectId, LimitViolationType limitType, double limit, float limitReduction, double value)", "class_method_signature": "LimitViolation.LimitViolation(String subjectId, LimitViolationType limitType, double limit, float limitReduction, double value)", "testcase": false, "constructor": true}, {"identifier": "getSubjectId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubjectId()", "full_signature": "public String getSubjectId()", "class_method_signature": "LimitViolation.getSubjectId()", "testcase": false, "constructor": false}, {"identifier": "getSubjectName", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getSubjectName()", "full_signature": "@Nullable public String getSubjectName()", "class_method_signature": "LimitViolation.getSubjectName()", "testcase": false, "constructor": false}, {"identifier": "getLimitType", "parameters": "()", "modifiers": "public", "return": "LimitViolationType", "signature": "LimitViolationType getLimitType()", "full_signature": "public LimitViolationType getLimitType()", "class_method_signature": "LimitViolation.getLimitType()", "testcase": false, "constructor": false}, {"identifier": "getLimit", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLimit()", "full_signature": "public double getLimit()", "class_method_signature": "LimitViolation.getLimit()", "testcase": false, "constructor": false}, {"identifier": "getLimitName", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getLimitName()", "full_signature": "@Nullable public String getLimitName()", "class_method_signature": "LimitViolation.getLimitName()", "testcase": false, "constructor": false}, {"identifier": "getAcceptableDuration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAcceptableDuration()", "full_signature": "public int getAcceptableDuration()", "class_method_signature": "LimitViolation.getAcceptableDuration()", "testcase": false, "constructor": false}, {"identifier": "getLimitReduction", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getLimitReduction()", "full_signature": "public float getLimitReduction()", "class_method_signature": "LimitViolation.getLimitReduction()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getValue()", "full_signature": "public double getValue()", "class_method_signature": "LimitViolation.getValue()", "testcase": false, "constructor": false}, {"identifier": "getSide", "parameters": "()", "modifiers": "@Nullable public", "return": "Branch.Side", "signature": "Branch.Side getSide()", "full_signature": "@Nullable public Branch.Side getSide()", "class_method_signature": "LimitViolation.getSide()", "testcase": false, "constructor": false}, {"identifier": "checkSide", "parameters": "(LimitViolationType limitType, Branch.Side side)", "modifiers": "private static", "return": "Branch.Side", "signature": "Branch.Side checkSide(LimitViolationType limitType, Branch.Side side)", "full_signature": "private static Branch.Side checkSide(LimitViolationType limitType, Branch.Side side)", "class_method_signature": "LimitViolation.checkSide(LimitViolationType limitType, Branch.Side side)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "LimitViolation.toString()", "testcase": false, "constructor": false}], "file": "security-analysis-api/src/main/java/com/powsybl/security/LimitViolation.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toString() {\n        return \"Subject id: \" + this.subjectId + \", Subject name: \" + this.subjectName + \", limitType: \" +\n                this.limitType + \", limit: \" + this.limit + \", limitName: \" + this.limitName +\n                \", acceptableDuration: \" + this.acceptableDuration + \", limitReduction: \" + this.limitReduction +\n                \", value: \" + this.value + \", side: \" + this.side;\n    }", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "LimitViolation.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}