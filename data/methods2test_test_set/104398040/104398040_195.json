{"test_class": {"identifier": "PomModelTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/pom/PomModelTest.java"}, "test_case": {"identifier": "fetchModelFromRemoteExceptionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fetchModelFromRemoteExceptionTest() {\n        String groupId = \"junit\";\n        String artifactId = \"junit\";\n        String version = \"4.12.123123\";\n\n        PomModel pomModel = new PomModel(groupId, artifactId, version);\n        TUExecutionResult executionResult = pomModel.execution(transformedAppFolder, transformationContext);\n        assertEquals(executionResult.getType(), TUExecutionResult.Type.ERROR);\n        assertEquals(executionResult.getException().getClass(), TransformationUtilityException.class);\n        assertEquals(executionResult.getException().getMessage(), \"The specified file could not be found or read and parsed as valid Maven pom file\");\n    }", "signature": "void fetchModelFromRemoteExceptionTest()", "full_signature": "@Test public void fetchModelFromRemoteExceptionTest()", "class_method_signature": "PomModelTest.fetchModelFromRemoteExceptionTest()", "testcase": true, "constructor": false, "invocations": ["execution", "assertEquals", "getType", "assertEquals", "getClass", "getException", "assertEquals", "getMessage", "getException"]}, "focal_class": {"identifier": "PomModel", "superclass": "extends TransformationUtility<PomModel>", "interfaces": "", "fields": [{"original_string": "private String groupId;", "modifier": "private", "type": "String", "declarator": "groupId", "var_name": "groupId"}, {"original_string": "private String artifactId;", "modifier": "private", "type": "String", "declarator": "artifactId", "var_name": "artifactId"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String repoURI = DEFAULT_REPO_URI;", "modifier": "private", "type": "String", "declarator": "repoURI = DEFAULT_REPO_URI", "var_name": "repoURI"}, {"original_string": "private static final String DEFAULT_REPO_URI = \"https://repo1.maven.org/maven2\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_REPO_URI = \"https://repo1.maven.org/maven2\"", "var_name": "DEFAULT_REPO_URI"}, {"original_string": "private static final String DESCRIPTION = \"Retrieve the parent pom and load it in to Model Object\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Retrieve the parent pom and load it in to Model Object\"", "var_name": "DESCRIPTION"}], "methods": [{"identifier": "PomModel", "parameters": "()", "modifiers": "public", "return": "", "signature": " PomModel()", "full_signature": "public  PomModel()", "class_method_signature": "PomModel.PomModel()", "testcase": false, "constructor": true}, {"identifier": "PomModel", "parameters": "(String groupId, String artifactId, String version)", "modifiers": "public", "return": "", "signature": " PomModel(String groupId, String artifactId, String version)", "full_signature": "public  PomModel(String groupId, String artifactId, String version)", "class_method_signature": "PomModel.PomModel(String groupId, String artifactId, String version)", "testcase": false, "constructor": true}, {"identifier": "PomModel", "parameters": "(String groupId, String artifactId, String version, String repoURI)", "modifiers": "public", "return": "", "signature": " PomModel(String groupId, String artifactId, String version, String repoURI)", "full_signature": "public  PomModel(String groupId, String artifactId, String version, String repoURI)", "class_method_signature": "PomModel.PomModel(String groupId, String artifactId, String version, String repoURI)", "testcase": false, "constructor": true}, {"identifier": "setArtifact", "parameters": "(String artifactInfo)", "modifiers": "public", "return": "PomModel", "signature": "PomModel setArtifact(String artifactInfo)", "full_signature": "public PomModel setArtifact(String artifactInfo)", "class_method_signature": "PomModel.setArtifact(String artifactInfo)", "testcase": false, "constructor": false}, {"identifier": "setGroupId", "parameters": "(String groupId)", "modifiers": "public", "return": "PomModel", "signature": "PomModel setGroupId(String groupId)", "full_signature": "public PomModel setGroupId(String groupId)", "class_method_signature": "PomModel.setGroupId(String groupId)", "testcase": false, "constructor": false}, {"identifier": "getGroupId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroupId()", "full_signature": "public String getGroupId()", "class_method_signature": "PomModel.getGroupId()", "testcase": false, "constructor": false}, {"identifier": "setArtifactId", "parameters": "(String artifactId)", "modifiers": "public", "return": "PomModel", "signature": "PomModel setArtifactId(String artifactId)", "full_signature": "public PomModel setArtifactId(String artifactId)", "class_method_signature": "PomModel.setArtifactId(String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getArtifactId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArtifactId()", "full_signature": "public String getArtifactId()", "class_method_signature": "PomModel.getArtifactId()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "PomModel", "signature": "PomModel setVersion(String version)", "full_signature": "public PomModel setVersion(String version)", "class_method_signature": "PomModel.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "PomModel.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setRepoURI", "parameters": "(String repoURI)", "modifiers": "public", "return": "PomModel", "signature": "PomModel setRepoURI(String repoURI)", "full_signature": "public PomModel setRepoURI(String repoURI)", "class_method_signature": "PomModel.setRepoURI(String repoURI)", "testcase": false, "constructor": false}, {"identifier": "getRepoURI", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRepoURI()", "full_signature": "public String getRepoURI()", "class_method_signature": "PomModel.getRepoURI()", "testcase": false, "constructor": false}, {"identifier": "isValidURI", "parameters": "(String uri)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidURI(String uri)", "full_signature": "private boolean isValidURI(String uri)", "class_method_signature": "PomModel.isValidURI(String uri)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "PomModel.getDescription()", "testcase": false, "constructor": false}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TUExecutionResult", "signature": "TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "PomModel.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/pom/PomModel.java"}, "focal_method": {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TUExecutionResult", "body": "@Override\n    protected TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext) {\n        Model model;\n        try {\n            URL mavenArtifactUrl;\n            if (StringUtils.isNotBlank(groupId) && StringUtils.isNotBlank(artifactId) && StringUtils.isNotBlank(version)) {\n                mavenArtifactUrl = new URL(String.format(\"%s/%s/%s/%s/%s-%s.pom\", repoURI, groupId, artifactId, version, artifactId, version));\n            } else if (wasFileExplicitlySet()) {\n                File localPomFile = getAbsoluteFile(transformedAppFolder, transformationContext);\n                mavenArtifactUrl = localPomFile.toURI().toURL();\n            } else {\n                return TUExecutionResult.error(this, new TransformationUtilityException(\"Maven coordinates are missing and local file was not set\"));\n            }\n            try (BufferedInputStream inputStream = new BufferedInputStream(mavenArtifactUrl.openStream())) {\n                model = new MavenXpp3Reader().read(inputStream);\n            }\n\n            if (model == null) {\n                return TUExecutionResult.error(this, new TransformationUtilityException(\"Returned maven model is null\"));\n            }\n        } catch (IOException | XmlPullParserException e) {\n            return TUExecutionResult.error(this, new TransformationUtilityException(\"The specified file could not be found or read and parsed as valid Maven pom file\", e));\n        }\n        return TUExecutionResult.value(this, model);\n    }", "signature": "TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "PomModel.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "isNotBlank", "isNotBlank", "format", "wasFileExplicitlySet", "getAbsoluteFile", "toURL", "toURI", "error", "openStream", "read", "error", "error", "value"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}