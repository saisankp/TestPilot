{"test_class": {"identifier": "TimeTest", "superclass": "extends ClientBase", "interfaces": "", "fields": [{"original_string": "private static final long mt0 = System.currentTimeMillis();", "modifier": "private static final", "type": "long", "declarator": "mt0 = System.currentTimeMillis()", "var_name": "mt0"}, {"original_string": "private static final long nt0 = Time.currentElapsedTime();", "modifier": "private static final", "type": "long", "declarator": "nt0 = Time.currentElapsedTime()", "var_name": "nt0"}, {"original_string": "private static AtomicInteger watchCount = new AtomicInteger(0);", "modifier": "private static", "type": "AtomicInteger", "declarator": "watchCount = new AtomicInteger(0)", "var_name": "watchCount"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/common/TimeTest.java"}, "test_case": {"identifier": "testElapsedTimeToDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testElapsedTimeToDate() throws Exception {\n        long walltime = Time.currentWallTime();\n        long elapsedTime = Time.currentElapsedTime();\n        Thread.sleep(200);\n\n        Calendar cal = Calendar.getInstance();\n        cal.setTime(Time.elapsedTimeToDate(elapsedTime));\n        int calculatedDate = cal.get(Calendar.HOUR_OF_DAY);\n        cal.setTime(new Date(walltime));\n        int realDate = cal.get(Calendar.HOUR_OF_DAY);\n\n        Assert.assertEquals(calculatedDate, realDate);\n    }", "signature": "void testElapsedTimeToDate()", "full_signature": "@Test public void testElapsedTimeToDate()", "class_method_signature": "TimeTest.testElapsedTimeToDate()", "testcase": true, "constructor": false, "invocations": ["currentWallTime", "currentElapsedTime", "sleep", "getInstance", "setTime", "elapsedTimeToDate", "get", "setTime", "get", "assertEquals"]}, "focal_class": {"identifier": "Time", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "currentElapsedTime", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long currentElapsedTime()", "full_signature": "public static long currentElapsedTime()", "class_method_signature": "Time.currentElapsedTime()", "testcase": false, "constructor": false}, {"identifier": "currentWallTime", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long currentWallTime()", "full_signature": "public static long currentWallTime()", "class_method_signature": "Time.currentWallTime()", "testcase": false, "constructor": false}, {"identifier": "elapsedTimeToDate", "parameters": "(long elapsedTime)", "modifiers": "public static", "return": "Date", "signature": "Date elapsedTimeToDate(long elapsedTime)", "full_signature": "public static Date elapsedTimeToDate(long elapsedTime)", "class_method_signature": "Time.elapsedTimeToDate(long elapsedTime)", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/common/Time.java"}, "focal_method": {"identifier": "elapsedTimeToDate", "parameters": "(long elapsedTime)", "modifiers": "public static", "return": "Date", "body": "public static Date elapsedTimeToDate(long elapsedTime) {\n        long wallTime = currentWallTime() + elapsedTime - currentElapsedTime();\n        return new Date(wallTime);\n    }", "signature": "Date elapsedTimeToDate(long elapsedTime)", "full_signature": "public static Date elapsedTimeToDate(long elapsedTime)", "class_method_signature": "Time.elapsedTimeToDate(long elapsedTime)", "testcase": false, "constructor": false, "invocations": ["currentWallTime", "currentElapsedTime"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}