{"test_class": {"identifier": "QuickFixJConfigResourceConditionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "quickfixj-spring-boot-starter/src/test/java/io/allune/quickfixj/spring/boot/starter/autoconfigure/QuickFixJConfigResourceConditionTest.java"}, "test_case": {"identifier": "testGetResourceOutcomeForSystemPropertyNotSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetResourceOutcomeForSystemPropertyNotSet() {\n\t\tQuickFixJConfigResourceCondition resourceCondition =\n\t\t\t\tnew ClientConfigAvailableCondition(\"any\");\n\n\t\tConditionContext context = mock(ConditionContext.class);\n\t\tAnnotatedTypeMetadata metadata = mock(AnnotatedTypeMetadata.class);\n\t\tConditionOutcome conditionOutcome =\n\t\t\t\tresourceCondition.getResourceOutcome(context, metadata);\n\t\tassertThat(conditionOutcome).isNotNull();\n\t\tassertThat(conditionOutcome.getMessage()).contains(\"ResourceCondition (quickfixj.client) did not find resource\");\n\t}", "signature": "void testGetResourceOutcomeForSystemPropertyNotSet()", "full_signature": "@Test public void testGetResourceOutcomeForSystemPropertyNotSet()", "class_method_signature": "QuickFixJConfigResourceConditionTest.testGetResourceOutcomeForSystemPropertyNotSet()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "getResourceOutcome", "isNotNull", "assertThat", "contains", "assertThat", "getMessage"]}, "focal_class": {"identifier": "QuickFixJConfigResourceCondition", "superclass": "extends ResourceCondition", "interfaces": "", "fields": [{"original_string": "private final String configSystemProperty;", "modifier": "private final", "type": "String", "declarator": "configSystemProperty", "var_name": "configSystemProperty"}], "methods": [{"identifier": "QuickFixJConfigResourceCondition", "parameters": "(String configSystemProperty, String prefix, String propertyName, String... resourceLocations)", "modifiers": "public", "return": "", "signature": " QuickFixJConfigResourceCondition(String configSystemProperty, String prefix, String propertyName, String... resourceLocations)", "full_signature": "public  QuickFixJConfigResourceCondition(String configSystemProperty, String prefix, String propertyName, String... resourceLocations)", "class_method_signature": "QuickFixJConfigResourceCondition.QuickFixJConfigResourceCondition(String configSystemProperty, String prefix, String propertyName, String... resourceLocations)", "testcase": false, "constructor": true}, {"identifier": "getResourceOutcome", "parameters": "(ConditionContext context, AnnotatedTypeMetadata metadata)", "modifiers": "@Override protected", "return": "ConditionOutcome", "signature": "ConditionOutcome getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "full_signature": "@Override protected ConditionOutcome getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "class_method_signature": "QuickFixJConfigResourceCondition.getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "testcase": false, "constructor": false}], "file": "quickfixj-spring-boot-starter/src/main/java/io/allune/quickfixj/spring/boot/starter/autoconfigure/QuickFixJConfigResourceCondition.java"}, "focal_method": {"identifier": "getResourceOutcome", "parameters": "(ConditionContext context, AnnotatedTypeMetadata metadata)", "modifiers": "@Override protected", "return": "ConditionOutcome", "body": "@Override\n\tprotected ConditionOutcome getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) {\n\t\tif (System.getProperty(configSystemProperty) != null) {\n\t\t\treturn ConditionOutcome.match(startConditionMessage()\n\t\t\t\t\t.because(\"System property '\" + configSystemProperty + \"' is set.\"));\n\t\t}\n\t\treturn super.getResourceOutcome(context, metadata);\n\t}", "signature": "ConditionOutcome getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "full_signature": "@Override protected ConditionOutcome getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "class_method_signature": "QuickFixJConfigResourceCondition.getResourceOutcome(ConditionContext context, AnnotatedTypeMetadata metadata)", "testcase": false, "constructor": false, "invocations": ["getProperty", "match", "because", "startConditionMessage", "getResourceOutcome"]}, "repository": {"repo_id": 109327955, "url": "https://github.com/esanchezros/quickfixj-spring-boot-starter", "stars": 27, "created": "11/2/2017 11:06:07 PM +00:00", "updates": "2020-01-15T15:51:21+00:00", "fork": "False", "license": "licensed"}}