{"test_class": {"identifier": "LoggingUpdateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoggingUpdate<String, Integer, Boolean> loggingUpdate;", "modifier": "private", "type": "LoggingUpdate<String, Integer, Boolean>", "declarator": "loggingUpdate", "var_name": "loggingUpdate"}, {"original_string": "private CapturingLogger<String, Integer, Boolean> logger;", "modifier": "private", "type": "CapturingLogger<String, Integer, Boolean>", "declarator": "logger", "var_name": "logger"}], "file": "mobius-core/src/test/java/com/spotify/mobius/LoggingUpdateTest.java"}, "test_case": {"identifier": "shouldPropagateExceptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldPropagateExceptions() throws Exception {\n    final RuntimeException expected = new RuntimeException(\"expected\");\n    loggingUpdate =\n        new LoggingUpdate<>(\n            new Update<String, Integer, Boolean>() {\n              @Nonnull\n              @Override\n              public Next<String, Boolean> update(String model, Integer event) {\n                throw expected;\n              }\n            },\n            logger);\n\n    assertThatThrownBy(() -> loggingUpdate.update(\"hi\", 7)).isEqualTo(expected);\n  }", "signature": "void shouldPropagateExceptions()", "full_signature": "@Test public void shouldPropagateExceptions()", "class_method_signature": "LoggingUpdateTest.shouldPropagateExceptions()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThatThrownBy", "update"]}, "focal_class": {"identifier": "LoggingUpdate", "superclass": "", "interfaces": "implements Update<M, E, F>", "fields": [{"original_string": "private final Update<M, E, F> actualUpdate;", "modifier": "private final", "type": "Update<M, E, F>", "declarator": "actualUpdate", "var_name": "actualUpdate"}, {"original_string": "private final MobiusLoop.Logger<M, E, F> logger;", "modifier": "private final", "type": "MobiusLoop.Logger<M, E, F>", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "LoggingUpdate", "parameters": "(Update<M, E, F> actualUpdate, MobiusLoop.Logger<M, E, F> logger)", "modifiers": "", "return": "", "signature": " LoggingUpdate(Update<M, E, F> actualUpdate, MobiusLoop.Logger<M, E, F> logger)", "full_signature": "  LoggingUpdate(Update<M, E, F> actualUpdate, MobiusLoop.Logger<M, E, F> logger)", "class_method_signature": "LoggingUpdate.LoggingUpdate(Update<M, E, F> actualUpdate, MobiusLoop.Logger<M, E, F> logger)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(M model, E event)", "modifiers": "@Nonnull @Override public", "return": "Next<M, F>", "signature": "Next<M, F> update(M model, E event)", "full_signature": "@Nonnull @Override public Next<M, F> update(M model, E event)", "class_method_signature": "LoggingUpdate.update(M model, E event)", "testcase": false, "constructor": false}, {"identifier": "safeInvokeUpdate", "parameters": "(M model, E event)", "modifiers": "private", "return": "Next<M, F>", "signature": "Next<M, F> safeInvokeUpdate(M model, E event)", "full_signature": "private Next<M, F> safeInvokeUpdate(M model, E event)", "class_method_signature": "LoggingUpdate.safeInvokeUpdate(M model, E event)", "testcase": false, "constructor": false}], "file": "mobius-core/src/main/java/com/spotify/mobius/LoggingUpdate.java"}, "focal_method": {"identifier": "update", "parameters": "(M model, E event)", "modifiers": "@Nonnull @Override public", "return": "Next<M, F>", "body": "@Nonnull\n  @Override\n  public Next<M, F> update(M model, E event) {\n    logger.beforeUpdate(model, event);\n    Next<M, F> result = safeInvokeUpdate(model, event);\n    logger.afterUpdate(model, event, result);\n    return result;\n  }", "signature": "Next<M, F> update(M model, E event)", "full_signature": "@Nonnull @Override public Next<M, F> update(M model, E event)", "class_method_signature": "LoggingUpdate.update(M model, E event)", "testcase": false, "constructor": false, "invocations": ["beforeUpdate", "safeInvokeUpdate", "afterUpdate"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}