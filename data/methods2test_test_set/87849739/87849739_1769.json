{"test_class": {"identifier": "ThingQueryCommandAdapterTest", "superclass": "extends LiveTwinTest", "interfaces": "implements ProtocolAdapterTest", "fields": [{"original_string": "private ThingQueryCommandAdapter underTest;", "modifier": "private", "type": "ThingQueryCommandAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "protocol-adapter/src/test/java/org/eclipse/ditto/protocoladapter/things/ThingQueryCommandAdapterTest.java"}, "test_case": {"identifier": "retrieveFeatureDefinitionFromAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void retrieveFeatureDefinitionFromAdaptable() {\n        final RetrieveFeatureDefinition expected =\n                RetrieveFeatureDefinition.of(TestConstants.THING_ID, TestConstants.FEATURE_ID,\n                        TestConstants.DITTO_HEADERS_V_2);\n\n        final TopicPath topicPath = topicPath(TopicPath.Action.RETRIEVE);\n        final JsonPointer path = JsonPointer.of(\"/features/\" + TestConstants.FEATURE_ID + \"/definition\");\n\n        final Adaptable adaptable = Adaptable.newBuilder(topicPath)\n                .withPayload(Payload.newBuilder(path).build())\n                .withHeaders(TestConstants.HEADERS_V_2)\n                .build();\n        final ThingQueryCommand<?> actual = underTest.fromAdaptable(adaptable);\n\n        assertWithExternalHeadersThat(actual).isEqualTo(expected);\n    }", "signature": "void retrieveFeatureDefinitionFromAdaptable()", "full_signature": "@Test public void retrieveFeatureDefinitionFromAdaptable()", "class_method_signature": "ThingQueryCommandAdapterTest.retrieveFeatureDefinitionFromAdaptable()", "testcase": true, "constructor": false, "invocations": ["of", "topicPath", "of", "build", "withHeaders", "withPayload", "newBuilder", "build", "newBuilder", "fromAdaptable", "isEqualTo", "assertWithExternalHeadersThat"]}, "focal_class": {"identifier": "ThingQueryCommandAdapter", "superclass": "extends AbstractThingAdapter<ThingQueryCommand<?>>", "interfaces": "implements QueryCommandAdapter<ThingQueryCommand<?>>", "fields": [{"original_string": "private final SignalMapper<ThingQueryCommand<?>> thingQuerySignalMapper =\n            SignalMapperFactory.newThingQuerySignalMapper();", "modifier": "private final", "type": "SignalMapper<ThingQueryCommand<?>>", "declarator": "thingQuerySignalMapper =\n            SignalMapperFactory.newThingQuerySignalMapper()", "var_name": "thingQuerySignalMapper"}, {"original_string": "private final SignalMapper<RetrieveThings> retrieveThingsSignalMapper =\n            SignalMapperFactory.newRetrieveThingsSignalMapper();", "modifier": "private final", "type": "SignalMapper<RetrieveThings>", "declarator": "retrieveThingsSignalMapper =\n            SignalMapperFactory.newRetrieveThingsSignalMapper()", "var_name": "retrieveThingsSignalMapper"}], "methods": [{"identifier": "ThingQueryCommandAdapter", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " ThingQueryCommandAdapter(final HeaderTranslator headerTranslator)", "full_signature": "private  ThingQueryCommandAdapter(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingQueryCommandAdapter.ThingQueryCommandAdapter(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingQueryCommandAdapter", "signature": "ThingQueryCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingQueryCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingQueryCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override protected", "return": "String", "signature": "String getType(final Adaptable adaptable)", "full_signature": "@Override protected String getType(final Adaptable adaptable)", "class_method_signature": "ThingQueryCommandAdapter.getType(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "mapSignalToAdaptable", "parameters": "(final ThingQueryCommand<?> command, final TopicPath.Channel channel)", "modifiers": "@Override public", "return": "Adaptable", "signature": "Adaptable mapSignalToAdaptable(final ThingQueryCommand<?> command, final TopicPath.Channel channel)", "full_signature": "@Override public Adaptable mapSignalToAdaptable(final ThingQueryCommand<?> command, final TopicPath.Channel channel)", "class_method_signature": "ThingQueryCommandAdapter.mapSignalToAdaptable(final ThingQueryCommand<?> command, final TopicPath.Channel channel)", "testcase": false, "constructor": false}], "file": "protocol-adapter/src/main/java/org/eclipse/ditto/protocoladapter/things/ThingQueryCommandAdapter.java"}, "focal_method": {"identifier": "of", "parameters": "(final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "ThingQueryCommandAdapter", "body": "public static ThingQueryCommandAdapter of(final HeaderTranslator headerTranslator) {\n        return new ThingQueryCommandAdapter(requireNonNull(headerTranslator));\n    }", "signature": "ThingQueryCommandAdapter of(final HeaderTranslator headerTranslator)", "full_signature": "public static ThingQueryCommandAdapter of(final HeaderTranslator headerTranslator)", "class_method_signature": "ThingQueryCommandAdapter.of(final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}