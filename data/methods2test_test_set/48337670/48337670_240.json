{"test_class": {"identifier": "PeriodicSchedulerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PeriodicSchedulerImpl periodicScheduler = new PeriodicSchedulerImpl(new SchedulerImpl());", "modifier": "private final", "type": "PeriodicSchedulerImpl", "declarator": "periodicScheduler = new PeriodicSchedulerImpl(new SchedulerImpl())", "var_name": "periodicScheduler"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/scheduler/PeriodicSchedulerImplTest.java"}, "test_case": {"identifier": "testSchedule", "parameters": "()", "modifiers": "@Test @Timeout(value = 5, unit = TimeUnit.SECONDS) public", "return": "void", "body": "@Test\n    @Timeout(value = 5, unit = TimeUnit.SECONDS)\n    public void testSchedule() throws InterruptedException, IOException {\n        Queue<Long> times = new ArrayDeque<>();\n        Semaphore semaphore = new Semaphore(0);\n        Duration[] delays = { Duration.ofMillis(100), Duration.ofMillis(200), Duration.ofMillis(300) };\n        final long now = System.currentTimeMillis();\n\n        ScheduledCompletableFuture<Object> future = periodicScheduler.schedule(() -> {\n            times.add((System.currentTimeMillis() - now) / 100);\n            semaphore.release();\n        }, delays);\n        semaphore.acquire(6);\n        future.cancel(true);\n        // Because starting scheduler takes some time and we don't know how long\n        // the first time set is the offset on which we check the next values.\n        long offset = times.poll();\n        long[] expectedResults = { 2, 5, 8, 11, 14 };\n        for (long expectedResult : expectedResults) {\n            assertEquals(offset + expectedResult, times.poll().longValue(), \"Expected periodic time\");\n        }\n        assertFalse(semaphore.tryAcquire(1, TimeUnit.SECONDS), \"No more jobs should have been scheduled\");\n    }", "signature": "void testSchedule()", "full_signature": "@Test @Timeout(value = 5, unit = TimeUnit.SECONDS) public void testSchedule()", "class_method_signature": "PeriodicSchedulerImplTest.testSchedule()", "testcase": true, "constructor": false, "invocations": ["ofMillis", "ofMillis", "ofMillis", "currentTimeMillis", "schedule", "add", "currentTimeMillis", "release", "acquire", "cancel", "poll", "assertEquals", "longValue", "poll", "assertFalse", "tryAcquire"]}, "focal_class": {"identifier": "PeriodicSchedulerImpl", "superclass": "", "interfaces": "implements PeriodicScheduler", "fields": [{"original_string": "private final Scheduler scheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}], "methods": [{"identifier": "PeriodicSchedulerImpl", "parameters": "(final @Reference Scheduler scheduler)", "modifiers": "@Activate public", "return": "", "signature": " PeriodicSchedulerImpl(final @Reference Scheduler scheduler)", "full_signature": "@Activate public  PeriodicSchedulerImpl(final @Reference Scheduler scheduler)", "class_method_signature": "PeriodicSchedulerImpl.PeriodicSchedulerImpl(final @Reference Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "schedule", "parameters": "(SchedulerRunnable runnable, Duration... delays)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "signature": "ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, Duration... delays)", "full_signature": "@Override public ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, Duration... delays)", "class_method_signature": "PeriodicSchedulerImpl.schedule(SchedulerRunnable runnable, Duration... delays)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/scheduler/PeriodicSchedulerImpl.java"}, "focal_method": {"identifier": "schedule", "parameters": "(SchedulerRunnable runnable, Duration... delays)", "modifiers": "@Override public", "return": "ScheduledCompletableFuture<T>", "body": "@Override\n    public <T> ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, Duration... delays) {\n        return scheduler.schedule(runnable, new PeriodicAdjuster(delays));\n    }", "signature": "ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, Duration... delays)", "full_signature": "@Override public ScheduledCompletableFuture<T> schedule(SchedulerRunnable runnable, Duration... delays)", "class_method_signature": "PeriodicSchedulerImpl.schedule(SchedulerRunnable runnable, Duration... delays)", "testcase": false, "constructor": false, "invocations": ["schedule"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}