{"test_class": {"identifier": "TestPerformanceMonitorBeanFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PerformanceMonitorBeanFactory factory;", "modifier": "private", "type": "PerformanceMonitorBeanFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private MBeanExporter mockMBeanExporter;", "modifier": "private", "type": "MBeanExporter", "declarator": "mockMBeanExporter", "var_name": "mockMBeanExporter"}], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/TestPerformanceMonitorBeanFactory.java"}, "test_case": {"identifier": "testFindPerformanceMonitorBean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindPerformanceMonitorBean() {\n        String monitorName = \"testFind\";\n        PerformanceMonitor createdMonitor =\n          factory.createPerformanceMonitor(monitorName);\n        PerformanceMonitorBean foundMonitor =\n          factory.findPerformanceMonitorBean(monitorName);\n        assertNotNull(foundMonitor);\n        assertEquals(createdMonitor, foundMonitor);\n    }", "signature": "void testFindPerformanceMonitorBean()", "full_signature": "@Test public void testFindPerformanceMonitorBean()", "class_method_signature": "TestPerformanceMonitorBeanFactory.testFindPerformanceMonitorBean()", "testcase": true, "constructor": false, "invocations": ["createPerformanceMonitor", "findPerformanceMonitorBean", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "PerformanceMonitorBeanFactory", "superclass": "extends PerformanceMonitorFactory", "interfaces": "implements InitializingBean", "fields": [{"original_string": "@Autowired(required=false)\n    private MBeanExportOperations mBeanExportOperations;", "modifier": "@Autowired(required=false)\n    private", "type": "MBeanExportOperations", "declarator": "mBeanExportOperations", "var_name": "mBeanExportOperations"}, {"original_string": "private List<String> initialPerformanceMonitorList;", "modifier": "private", "type": "List<String>", "declarator": "initialPerformanceMonitorList", "var_name": "initialPerformanceMonitorList"}, {"original_string": "private String packageScanBase;", "modifier": "private", "type": "String", "declarator": "packageScanBase", "var_name": "packageScanBase"}], "methods": [{"identifier": "PerformanceMonitorBeanFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " PerformanceMonitorBeanFactory()", "full_signature": "public  PerformanceMonitorBeanFactory()", "class_method_signature": "PerformanceMonitorBeanFactory.PerformanceMonitorBeanFactory()", "testcase": false, "constructor": true}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "public void afterPropertiesSet()", "class_method_signature": "PerformanceMonitorBeanFactory.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "setInitialPerformanceMonitors", "parameters": "(List<String> initialPerformanceMonitors)", "modifiers": "public", "return": "void", "signature": "void setInitialPerformanceMonitors(List<String> initialPerformanceMonitors)", "full_signature": "public void setInitialPerformanceMonitors(List<String> initialPerformanceMonitors)", "class_method_signature": "PerformanceMonitorBeanFactory.setInitialPerformanceMonitors(List<String> initialPerformanceMonitors)", "testcase": false, "constructor": false}, {"identifier": "setPackageScanBase", "parameters": "(String packageScanBase)", "modifiers": "public", "return": "void", "signature": "void setPackageScanBase(String packageScanBase)", "full_signature": "public void setPackageScanBase(String packageScanBase)", "class_method_signature": "PerformanceMonitorBeanFactory.setPackageScanBase(String packageScanBase)", "testcase": false, "constructor": false}, {"identifier": "createInitialPerformanceMonitors", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createInitialPerformanceMonitors()", "full_signature": "public void createInitialPerformanceMonitors()", "class_method_signature": "PerformanceMonitorBeanFactory.createInitialPerformanceMonitors()", "testcase": false, "constructor": false}, {"identifier": "setMBeanExporter", "parameters": "(MBeanExporter mBeanExporter)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setMBeanExporter(MBeanExporter mBeanExporter)", "full_signature": "@Deprecated public void setMBeanExporter(MBeanExporter mBeanExporter)", "class_method_signature": "PerformanceMonitorBeanFactory.setMBeanExporter(MBeanExporter mBeanExporter)", "testcase": false, "constructor": false}, {"identifier": "setMBeanExportOperations", "parameters": "(MBeanExportOperations mBeanExportOperations)", "modifiers": "public", "return": "void", "signature": "void setMBeanExportOperations(MBeanExportOperations mBeanExportOperations)", "full_signature": "public void setMBeanExportOperations(MBeanExportOperations mBeanExportOperations)", "class_method_signature": "PerformanceMonitorBeanFactory.setMBeanExportOperations(MBeanExportOperations mBeanExportOperations)", "testcase": false, "constructor": false}, {"identifier": "createPerformanceMonitor", "parameters": "(\n            String name)", "modifiers": "public synchronized", "return": "PerformanceMonitor", "signature": "PerformanceMonitor createPerformanceMonitor(\n            String name)", "full_signature": "public synchronized PerformanceMonitor createPerformanceMonitor(\n            String name)", "class_method_signature": "PerformanceMonitorBeanFactory.createPerformanceMonitor(\n            String name)", "testcase": false, "constructor": false}, {"identifier": "findPerformanceMonitorBean", "parameters": "(String name)", "modifiers": "public", "return": "PerformanceMonitorBean", "signature": "PerformanceMonitorBean findPerformanceMonitorBean(String name)", "full_signature": "public PerformanceMonitorBean findPerformanceMonitorBean(String name)", "class_method_signature": "PerformanceMonitorBeanFactory.findPerformanceMonitorBean(String name)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/PerformanceMonitorBeanFactory.java"}, "focal_method": {"identifier": "findPerformanceMonitorBean", "parameters": "(String name)", "modifiers": "public", "return": "PerformanceMonitorBean", "body": "public PerformanceMonitorBean findPerformanceMonitorBean(String name) {\n        PerformanceMonitor performanceMonitor = findPerformanceMonitor(name);\n\n        if (performanceMonitor instanceof PerformanceMonitorBean) {\n            return (PerformanceMonitorBean)performanceMonitor;\n        }\n        return null;\n    }", "signature": "PerformanceMonitorBean findPerformanceMonitorBean(String name)", "full_signature": "public PerformanceMonitorBean findPerformanceMonitorBean(String name)", "class_method_signature": "PerformanceMonitorBeanFactory.findPerformanceMonitorBean(String name)", "testcase": false, "constructor": false, "invocations": ["findPerformanceMonitor"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}