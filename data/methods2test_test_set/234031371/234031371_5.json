{"test_class": {"identifier": "JobInfoControllerTest", "superclass": "extends AbstractSpringMvcTest", "interfaces": "", "fields": [{"original_string": "private Cookie cookie;", "modifier": "private", "type": "Cookie", "declarator": "cookie", "var_name": "cookie"}], "file": "T4Cloud-XXL-Job/T4Cloud-XXL-Admin/src/test/java/com/xxl/job/admin/controller/JobInfoControllerTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAdd() throws Exception {\n    MultiValueMap<String, String> parameters = new LinkedMultiValueMap<String, String>();\n    parameters.add(\"jobGroup\", \"1\");\n\n    MvcResult ret = mockMvc.perform(\n        post(\"/jobinfo/pageList\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n            //.content(paramsJson)\n            .params(parameters)\n            .cookie(cookie)\n    ).andReturn();\n\n    System.out.println(ret.getResponse().getContentAsString());\n  }", "signature": "void testAdd()", "full_signature": "@Test public void testAdd()", "class_method_signature": "JobInfoControllerTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["add", "andReturn", "perform", "cookie", "params", "contentType", "post", "println", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "JobInfoController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n\tprivate XxlJobGroupDao xxlJobGroupDao;", "modifier": "@Resource\n\tprivate", "type": "XxlJobGroupDao", "declarator": "xxlJobGroupDao", "var_name": "xxlJobGroupDao"}, {"original_string": "@Resource\n\tprivate XxlJobService xxlJobService;", "modifier": "@Resource\n\tprivate", "type": "XxlJobService", "declarator": "xxlJobService", "var_name": "xxlJobService"}], "methods": [{"identifier": "index", "parameters": "(HttpServletRequest request, Model model, @RequestParam(required = false, defaultValue = \"-1\") int jobGroup)", "modifiers": "@RequestMapping public", "return": "String", "signature": "String index(HttpServletRequest request, Model model, @RequestParam(required = false, defaultValue = \"-1\") int jobGroup)", "full_signature": "@RequestMapping public String index(HttpServletRequest request, Model model, @RequestParam(required = false, defaultValue = \"-1\") int jobGroup)", "class_method_signature": "JobInfoController.index(HttpServletRequest request, Model model, @RequestParam(required = false, defaultValue = \"-1\") int jobGroup)", "testcase": false, "constructor": false}, {"identifier": "filterJobGroupByRole", "parameters": "(HttpServletRequest request, List<XxlJobGroup> jobGroupList_all)", "modifiers": "public static", "return": "List<XxlJobGroup>", "signature": "List<XxlJobGroup> filterJobGroupByRole(HttpServletRequest request, List<XxlJobGroup> jobGroupList_all)", "full_signature": "public static List<XxlJobGroup> filterJobGroupByRole(HttpServletRequest request, List<XxlJobGroup> jobGroupList_all)", "class_method_signature": "JobInfoController.filterJobGroupByRole(HttpServletRequest request, List<XxlJobGroup> jobGroupList_all)", "testcase": false, "constructor": false}, {"identifier": "validPermission", "parameters": "(HttpServletRequest request, int jobGroup)", "modifiers": "public static", "return": "void", "signature": "void validPermission(HttpServletRequest request, int jobGroup)", "full_signature": "public static void validPermission(HttpServletRequest request, int jobGroup)", "class_method_signature": "JobInfoController.validPermission(HttpServletRequest request, int jobGroup)", "testcase": false, "constructor": false}, {"identifier": "pageList", "parameters": "(@RequestParam(required = false, defaultValue = \"0\") int start,  \n\t\t\t@RequestParam(required = false, defaultValue = \"10\") int length,\n\t\t\tint jobGroup, int triggerStatus, String jobDesc, String executorHandler, String author)", "modifiers": "@RequestMapping(\"/pageList\") @ResponseBody public", "return": "Map<String, Object>", "signature": "Map<String, Object> pageList(@RequestParam(required = false, defaultValue = \"0\") int start,  \n\t\t\t@RequestParam(required = false, defaultValue = \"10\") int length,\n\t\t\tint jobGroup, int triggerStatus, String jobDesc, String executorHandler, String author)", "full_signature": "@RequestMapping(\"/pageList\") @ResponseBody public Map<String, Object> pageList(@RequestParam(required = false, defaultValue = \"0\") int start,  \n\t\t\t@RequestParam(required = false, defaultValue = \"10\") int length,\n\t\t\tint jobGroup, int triggerStatus, String jobDesc, String executorHandler, String author)", "class_method_signature": "JobInfoController.pageList(@RequestParam(required = false, defaultValue = \"0\") int start,  \n\t\t\t@RequestParam(required = false, defaultValue = \"10\") int length,\n\t\t\tint jobGroup, int triggerStatus, String jobDesc, String executorHandler, String author)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(XxlJobInfo jobInfo)", "modifiers": "@RequestMapping(\"/add\") @ResponseBody public", "return": "ReturnT<String>", "signature": "ReturnT<String> add(XxlJobInfo jobInfo)", "full_signature": "@RequestMapping(\"/add\") @ResponseBody public ReturnT<String> add(XxlJobInfo jobInfo)", "class_method_signature": "JobInfoController.add(XxlJobInfo jobInfo)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(XxlJobInfo jobInfo)", "modifiers": "@RequestMapping(\"/update\") @ResponseBody public", "return": "ReturnT<String>", "signature": "ReturnT<String> update(XxlJobInfo jobInfo)", "full_signature": "@RequestMapping(\"/update\") @ResponseBody public ReturnT<String> update(XxlJobInfo jobInfo)", "class_method_signature": "JobInfoController.update(XxlJobInfo jobInfo)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int id)", "modifiers": "@RequestMapping(\"/remove\") @ResponseBody public", "return": "ReturnT<String>", "signature": "ReturnT<String> remove(int id)", "full_signature": "@RequestMapping(\"/remove\") @ResponseBody public ReturnT<String> remove(int id)", "class_method_signature": "JobInfoController.remove(int id)", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "(int id)", "modifiers": "@RequestMapping(\"/stop\") @ResponseBody public", "return": "ReturnT<String>", "signature": "ReturnT<String> pause(int id)", "full_signature": "@RequestMapping(\"/stop\") @ResponseBody public ReturnT<String> pause(int id)", "class_method_signature": "JobInfoController.pause(int id)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(int id)", "modifiers": "@RequestMapping(\"/start\") @ResponseBody public", "return": "ReturnT<String>", "signature": "ReturnT<String> start(int id)", "full_signature": "@RequestMapping(\"/start\") @ResponseBody public ReturnT<String> start(int id)", "class_method_signature": "JobInfoController.start(int id)", "testcase": false, "constructor": false}, {"identifier": "triggerJob", "parameters": "(int id, String executorParam)", "modifiers": "@RequestMapping(\"/trigger\") @ResponseBody //@PermissionLimit(limit = false) public", "return": "ReturnT<String>", "signature": "ReturnT<String> triggerJob(int id, String executorParam)", "full_signature": "@RequestMapping(\"/trigger\") @ResponseBody //@PermissionLimit(limit = false) public ReturnT<String> triggerJob(int id, String executorParam)", "class_method_signature": "JobInfoController.triggerJob(int id, String executorParam)", "testcase": false, "constructor": false}, {"identifier": "nextTriggerTime", "parameters": "(String cron)", "modifiers": "@RequestMapping(\"/nextTriggerTime\") @ResponseBody public", "return": "ReturnT<List<String>>", "signature": "ReturnT<List<String>> nextTriggerTime(String cron)", "full_signature": "@RequestMapping(\"/nextTriggerTime\") @ResponseBody public ReturnT<List<String>> nextTriggerTime(String cron)", "class_method_signature": "JobInfoController.nextTriggerTime(String cron)", "testcase": false, "constructor": false}], "file": "T4Cloud-XXL-Job/T4Cloud-XXL-Admin/src/main/java/com/xxl/job/admin/controller/JobInfoController.java"}, "focal_method": {"identifier": "add", "parameters": "(XxlJobInfo jobInfo)", "modifiers": "@RequestMapping(\"/add\") @ResponseBody public", "return": "ReturnT<String>", "body": "@RequestMapping(\"/add\")\n\t@ResponseBody\n\tpublic ReturnT<String> add(XxlJobInfo jobInfo) {\n\t\treturn xxlJobService.add(jobInfo);\n\t}", "signature": "ReturnT<String> add(XxlJobInfo jobInfo)", "full_signature": "@RequestMapping(\"/add\") @ResponseBody public ReturnT<String> add(XxlJobInfo jobInfo)", "class_method_signature": "JobInfoController.add(XxlJobInfo jobInfo)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 234031371, "url": "https://github.com/TeaR7/T4CLOUD", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 85544, "license": "licensed"}}