{"test_class": {"identifier": "SecurityFunctionHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@InjectMocks\n    private SecurityFunctionHelper securityFunctionHelper;", "modifier": "@InjectMocks\n    private", "type": "SecurityFunctionHelper", "declarator": "securityFunctionHelper", "var_name": "securityFunctionHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/SecurityFunctionHelperTest.java"}, "test_case": {"identifier": "testValidateAndTrimSecurityFunctionKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateAndTrimSecurityFunctionKey()\n    {\n        // Create a security function key.\n        SecurityFunctionKey securityFunctionKey = new SecurityFunctionKey(SECURITY_FUNCTION);\n\n        // Mock the external calls.\n        when(alternateKeyHelper.validateStringParameter(\"security function name\", SECURITY_FUNCTION)).thenReturn(SECURITY_FUNCTION_2);\n\n        // Call the method under test.\n        securityFunctionHelper.validateAndTrimSecurityFunctionKey(securityFunctionKey);\n\n        // Validate the results.\n        assertEquals(new SecurityFunctionKey(SECURITY_FUNCTION_2), securityFunctionKey);\n\n        // Verify the external calls.\n        verify(alternateKeyHelper).validateStringParameter(\"security function name\", SECURITY_FUNCTION);\n        verifyNoMoreInteractions(alternateKeyHelper);\n    }", "signature": "void testValidateAndTrimSecurityFunctionKey()", "full_signature": "@Test public void testValidateAndTrimSecurityFunctionKey()", "class_method_signature": "SecurityFunctionHelperTest.testValidateAndTrimSecurityFunctionKey()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "validateStringParameter", "validateAndTrimSecurityFunctionKey", "assertEquals", "validateStringParameter", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "SecurityFunctionHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}], "methods": [{"identifier": "validateAndTrimSecurityFunctionKey", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "public", "return": "void", "signature": "void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "full_signature": "public void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionHelper.validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/SecurityFunctionHelper.java"}, "focal_method": {"identifier": "validateAndTrimSecurityFunctionKey", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "public", "return": "void", "body": "public void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)\n    {\n        Assert.notNull(securityFunctionKey, \"A security function key must be specified.\");\n        securityFunctionKey\n            .setSecurityFunctionName(alternateKeyHelper.validateStringParameter(\"security function name\", securityFunctionKey.getSecurityFunctionName()));\n    }", "signature": "void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "full_signature": "public void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionHelper.validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false, "invocations": ["notNull", "setSecurityFunctionName", "validateStringParameter", "getSecurityFunctionName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}