{"test_class": {"identifier": "XmlRegressionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE = \"c:\\\\localdata\\\\regression.xml\";", "modifier": "private static final", "type": "String", "declarator": "FILE = \"c:\\\\localdata\\\\regression.xml\"", "var_name": "FILE"}, {"original_string": "private XmlRegression reg;", "modifier": "private", "type": "XmlRegression", "declarator": "reg", "var_name": "reg"}], "file": "jtss/src/test/java/ec/demetra/xml/regression/XmlRegressionTest.java"}, "test_case": {"identifier": "testValidation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidation() throws FileNotFoundException, JAXBException, IOException, SAXException {\n\n        JAXBContext jaxb = XmlRegression.context();\n        JAXBSource source = new JAXBSource(jaxb, reg);\n        Validator validator = Schemas.Modelling.newValidator();\n        //validator.setErrorHandler(new TestErrorHandler());\n        validator.validate(source);\n    }", "signature": "void testValidation()", "full_signature": "@Test public void testValidation()", "class_method_signature": "XmlRegressionTest.testValidation()", "testcase": true, "constructor": false, "invocations": ["context", "newValidator", "validate"]}, "focal_class": {"identifier": "XmlRegression", "superclass": "", "interfaces": "", "fields": [{"original_string": "@XmlElement(name = \"Item\")\n    protected List<XmlRegressionItem> item;", "modifier": "@XmlElement(name = \"Item\")\n    protected", "type": "List<XmlRegressionItem>", "declarator": "item", "var_name": "item"}], "methods": [{"identifier": "getItems", "parameters": "()", "modifiers": "public", "return": "List<XmlRegressionItem>", "signature": "List<XmlRegressionItem> getItems()", "full_signature": "public List<XmlRegressionItem> getItems()", "class_method_signature": "XmlRegression.getItems()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "XmlRegression.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "xmlClasses", "parameters": "()", "modifiers": "public static", "return": "List<Class>", "signature": "List<Class> xmlClasses()", "full_signature": "public static List<Class> xmlClasses()", "class_method_signature": "XmlRegression.xmlClasses()", "testcase": false, "constructor": false}, {"identifier": "context", "parameters": "()", "modifiers": "public static synchronized", "return": "JAXBContext", "signature": "JAXBContext context()", "full_signature": "public static synchronized JAXBContext context()", "class_method_signature": "XmlRegression.context()", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/demetra/xml/regression/XmlRegression.java"}, "focal_method": {"identifier": "context", "parameters": "()", "modifiers": "public static synchronized", "return": "JAXBContext", "body": "public static synchronized JAXBContext context() throws JAXBException{ \n    \n        List<Class> xmlClasses = xmlClasses();\n        xmlClasses.add(XmlRegression.class);\n        JAXBContext jaxb = JAXBContext.newInstance(xmlClasses.toArray(new Class[xmlClasses.size()]));\n        return jaxb;\n    }", "signature": "JAXBContext context()", "full_signature": "public static synchronized JAXBContext context()", "class_method_signature": "XmlRegression.context()", "testcase": false, "constructor": false, "invocations": ["xmlClasses", "add", "newInstance", "toArray", "size"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}