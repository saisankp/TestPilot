{"test_class": {"identifier": "RoleDaoImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TABLE_NAME = \"role\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_NAME = \"role\"", "var_name": "TABLE_NAME"}, {"original_string": "private CassandraOperation cassandraOperation;", "modifier": "private", "type": "CassandraOperation", "declarator": "cassandraOperation", "var_name": "cassandraOperation"}, {"original_string": "private Response response;", "modifier": "private", "type": "Response", "declarator": "response", "var_name": "response"}, {"original_string": "private RoleDao roleDao;", "modifier": "private", "type": "RoleDao", "declarator": "roleDao", "var_name": "roleDao"}], "file": "actors/common/src/test/java/org/sunbird/learner/actors/role/dao/impl/RoleDaoImplTest.java"}, "test_case": {"identifier": "testGetRoles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetRoles(){\n        try{\n            cassandraOperation=PowerMockito.mock(CassandraOperation.class);\n            PowerMockito.mockStatic(ServiceFactory.class);\n            when(ServiceFactory.getInstance()).thenReturn(cassandraOperation);\n            when(cassandraOperation.getAllRecords(Util.KEY_SPACE_NAME, TABLE_NAME)).thenReturn(response);\n            List<Role>roleList=roleDao.getRoles();\n            Assert.assertEquals(\"TEACHER\",roleList.get(0).getName());\n\n        }catch (Exception e){\n            Assert.assertTrue(false);\n        }\n\n\n\n\n    }", "signature": "void testGetRoles()", "full_signature": "@Test public void testGetRoles()", "class_method_signature": "RoleDaoImplTest.testGetRoles()", "testcase": true, "constructor": false, "invocations": ["mock", "mockStatic", "thenReturn", "when", "getInstance", "thenReturn", "when", "getAllRecords", "getRoles", "assertEquals", "getName", "get", "assertTrue"]}, "focal_class": {"identifier": "RoleDaoImpl", "superclass": "", "interfaces": "implements RoleDao", "fields": [{"original_string": "private static final String TABLE_NAME = \"role\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_NAME = \"role\"", "var_name": "TABLE_NAME"}, {"original_string": "private ObjectMapper mapper = new ObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static RoleDao roleDao;", "modifier": "private static", "type": "RoleDao", "declarator": "roleDao", "var_name": "roleDao"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "RoleDao", "signature": "RoleDao getInstance()", "full_signature": "public static RoleDao getInstance()", "class_method_signature": "RoleDaoImpl.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<Role>", "signature": "List<Role> getRoles()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<Role> getRoles()", "class_method_signature": "RoleDaoImpl.getRoles()", "testcase": false, "constructor": false}, {"identifier": "getCassandraOperation", "parameters": "()", "modifiers": "public", "return": "CassandraOperation", "signature": "CassandraOperation getCassandraOperation()", "full_signature": "public CassandraOperation getCassandraOperation()", "class_method_signature": "RoleDaoImpl.getCassandraOperation()", "testcase": false, "constructor": false}], "file": "actors/common/src/main/java/org/sunbird/learner/actors/role/dao/impl/RoleDaoImpl.java"}, "focal_method": {"identifier": "getRoles", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<Role>", "body": "@SuppressWarnings(\"unchecked\")\n  @Override\n  public List<Role> getRoles() {\n    Response roleResults = getCassandraOperation().getAllRecords(Util.KEY_SPACE_NAME, TABLE_NAME);\n    TypeReference<List<Role>> roleMapType = new TypeReference<List<Role>>() {};\n    List<Map<String, Object>> roleMapList =\n        (List<Map<String, Object>>) roleResults.get(JsonKey.RESPONSE);\n    List<Role> roleList = mapper.convertValue(roleMapList, roleMapType);\n    return roleList;\n  }", "signature": "List<Role> getRoles()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<Role> getRoles()", "class_method_signature": "RoleDaoImpl.getRoles()", "testcase": false, "constructor": false, "invocations": ["getAllRecords", "getCassandraOperation", "get", "convertValue"]}, "repository": {"repo_id": 96122408, "url": "https://github.com/project-sunbird/sunbird-lms-mw", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 5, "size": 15380, "license": "licensed"}}