{"test_class": {"identifier": "SiddhiUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Attribute> listAttributes;", "modifier": "private", "type": "List<Attribute>", "declarator": "listAttributes", "var_name": "listAttributes"}], "file": "engine/src/test/java/com/stratio/decision/utils/SiddhiUtilsTest.java"}, "test_case": {"identifier": "testGetOrderedValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOrderedValues() throws Exception {\n        List<ColumnNameTypeValue> columns = new ArrayList<>();\n        columns.add(new ColumnNameTypeValue(\"myAttr\", ColumnType.STRING, \"test\"));\n        columns.add(new ColumnNameTypeValue(\"myAttr2\", ColumnType.BOOLEAN, true));\n        columns.add(new ColumnNameTypeValue(\"myAttr3\", ColumnType.DOUBLE, 3.1));\n\n        StreamDefinition definition= Mockito.mock(StreamDefinition.class);\n        when(definition.getAttributeList()).thenReturn(listAttributes);\n        when(definition.getAttributePosition(\"myAttr\")).thenReturn(0);\n        when(definition.getAttributePosition(\"myAttr2\")).thenReturn(1);\n        when(definition.getAttributePosition(\"myAttr3\")).thenReturn(2);\n\n        doReturn(Attribute.Type.STRING).when(definition).getAttributeType(\"myAttr\");\n        doReturn(Attribute.Type.BOOL).when(definition).getAttributeType(\"myAttr2\");\n        doReturn(Attribute.Type.DOUBLE).when(definition).getAttributeType(\"myAttr3\");\n\n        Object[] result= SiddhiUtils.getOrderedValues(definition, columns);\n        assertEquals(\"Unexpected columns size\", 6, result.length);\n    }", "signature": "void testGetOrderedValues()", "full_signature": "@Test public void testGetOrderedValues()", "class_method_signature": "SiddhiUtilsTest.testGetOrderedValues()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "mock", "thenReturn", "when", "getAttributeList", "thenReturn", "when", "getAttributePosition", "thenReturn", "when", "getAttributePosition", "thenReturn", "when", "getAttributePosition", "getAttributeType", "when", "doReturn", "getAttributeType", "when", "doReturn", "getAttributeType", "when", "doReturn", "getOrderedValues", "assertEquals"]}, "focal_class": {"identifier": "SiddhiUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String QUERY_PLAN_IDENTIFIER = \"StratioStreamingCEP-Cluster\";", "modifier": "public static final", "type": "String", "declarator": "QUERY_PLAN_IDENTIFIER = \"StratioStreamingCEP-Cluster\"", "var_name": "QUERY_PLAN_IDENTIFIER"}], "methods": [{"identifier": "SiddhiUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SiddhiUtils()", "full_signature": "private  SiddhiUtils()", "class_method_signature": "SiddhiUtils.SiddhiUtils()", "testcase": false, "constructor": true}, {"identifier": "columnAlreadyExistsInStream", "parameters": "(String columnName, StreamDefinition streamMetaData)", "modifiers": "public static", "return": "boolean", "signature": "boolean columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "full_signature": "public static boolean columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "class_method_signature": "SiddhiUtils.columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "testcase": false, "constructor": false}, {"identifier": "getOrderedValues", "parameters": "(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "modifiers": "public static", "return": "Object[]", "signature": "Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "full_signature": "public static Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "class_method_signature": "SiddhiUtils.getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "decodeSiddhiValue", "parameters": "(String originalValue, Attribute.Type type)", "modifiers": "protected static", "return": "Object", "signature": "Object decodeSiddhiValue(String originalValue, Attribute.Type type)", "full_signature": "protected static Object decodeSiddhiValue(String originalValue, Attribute.Type type)", "class_method_signature": "SiddhiUtils.decodeSiddhiValue(String originalValue, Attribute.Type type)", "testcase": false, "constructor": false}, {"identifier": "decodeSiddhiValue", "parameters": "(Double originalValue, Attribute.Type type)", "modifiers": "protected static", "return": "Object", "signature": "Object decodeSiddhiValue(Double originalValue, Attribute.Type type)", "full_signature": "protected static Object decodeSiddhiValue(Double originalValue, Attribute.Type type)", "class_method_signature": "SiddhiUtils.decodeSiddhiValue(Double originalValue, Attribute.Type type)", "testcase": false, "constructor": false}, {"identifier": "isStreamAllowedForThisOperation", "parameters": "(String streamName, String operation)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "full_signature": "public static Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "class_method_signature": "SiddhiUtils.isStreamAllowedForThisOperation(String streamName, String operation)", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/utils/SiddhiUtils.java"}, "focal_method": {"identifier": "getOrderedValues", "parameters": "(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "modifiers": "public static", "return": "Object[]", "body": "public static Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)\n            throws AttributeNotExistException {\n\n        Object[] orderedValues = new Object[streamMetaData.getAttributeList().size()];\n\n        for (ColumnNameTypeValue column : columns) {\n\n            // if attribute does not exist, a AttributeNotExistException\n            // exception will be thrown\n            // XXX change this. create a conversor engine to treat data types.\n            if (column.getValue() instanceof String) {\n                orderedValues[streamMetaData.getAttributePosition(column.getColumn())] = decodeSiddhiValue(\n                        (String) column.getValue(), streamMetaData.getAttributeType(column.getColumn()));\n            } else if (column.getValue() instanceof Double) {\n                orderedValues[streamMetaData.getAttributePosition(column.getColumn())] = decodeSiddhiValue(\n                        (Double) column.getValue(), streamMetaData.getAttributeType(column.getColumn()));\n            } else {\n                orderedValues[streamMetaData.getAttributePosition(column.getColumn())] = column.getValue();\n            }\n\n        }\n\n        return orderedValues;\n\n    }", "signature": "Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "full_signature": "public static Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "class_method_signature": "SiddhiUtils.getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false, "invocations": ["size", "getAttributeList", "getValue", "getAttributePosition", "getColumn", "decodeSiddhiValue", "getValue", "getAttributeType", "getColumn", "getValue", "getAttributePosition", "getColumn", "decodeSiddhiValue", "getValue", "getAttributeType", "getColumn", "getAttributePosition", "getColumn", "getValue"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}