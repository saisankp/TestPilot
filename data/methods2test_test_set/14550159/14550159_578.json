{"test_class": {"identifier": "RestComponentResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ResourceBinder resources;", "modifier": "private", "type": "ResourceBinder", "declarator": "resources", "var_name": "resources"}, {"original_string": "private ProviderBinder providers;", "modifier": "private", "type": "ProviderBinder", "declarator": "providers", "var_name": "providers"}, {"original_string": "private RestComponentResolver componentResolver;", "modifier": "private", "type": "RestComponentResolver", "declarator": "componentResolver", "var_name": "componentResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/RestComponentResolverTest.java"}, "test_case": {"identifier": "resolvesPerRequestResource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolvesPerRequestResource() {\n        componentResolver.addPerRequest(Resource.class);\n        verify(resources).addResource(Resource.class, null);\n    }", "signature": "void resolvesPerRequestResource()", "full_signature": "@Test public void resolvesPerRequestResource()", "class_method_signature": "RestComponentResolverTest.resolvesPerRequestResource()", "testcase": true, "constructor": false, "invocations": ["addPerRequest", "addResource", "verify"]}, "focal_class": {"identifier": "RestComponentResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ResourceBinder resources;", "modifier": "private", "type": "ResourceBinder", "declarator": "resources", "var_name": "resources"}, {"original_string": "private ProviderBinder providers;", "modifier": "private", "type": "ProviderBinder", "declarator": "providers", "var_name": "providers"}], "methods": [{"identifier": "RestComponentResolver", "parameters": "(ResourceBinder resources, ProviderBinder providers)", "modifiers": "public", "return": "", "signature": " RestComponentResolver(ResourceBinder resources, ProviderBinder providers)", "full_signature": "public  RestComponentResolver(ResourceBinder resources, ProviderBinder providers)", "class_method_signature": "RestComponentResolver.RestComponentResolver(ResourceBinder resources, ProviderBinder providers)", "testcase": false, "constructor": true}, {"identifier": "addSingleton", "parameters": "(Object instance)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addSingleton(Object instance)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addSingleton(Object instance)", "class_method_signature": "RestComponentResolver.addSingleton(Object instance)", "testcase": false, "constructor": false}, {"identifier": "addPerRequest", "parameters": "(Class clazz)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addPerRequest(Class clazz)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addPerRequest(Class clazz)", "class_method_signature": "RestComponentResolver.addPerRequest(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "addFactory", "parameters": "(ObjectFactory factory)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void addFactory(ObjectFactory factory)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addFactory(ObjectFactory factory)", "class_method_signature": "RestComponentResolver.addFactory(ObjectFactory factory)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/RestComponentResolver.java"}, "focal_method": {"identifier": "addPerRequest", "parameters": "(Class clazz)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "body": "@SuppressWarnings({\"unchecked\"})\n    public void addPerRequest(Class clazz) {\n        if (clazz.getAnnotation(Provider.class) != null) {\n            if (ContextResolver.class.isAssignableFrom(clazz)) {\n                providers.addContextResolver(clazz);\n            }\n            if (ExceptionMapper.class.isAssignableFrom(clazz)) {\n                providers.addExceptionMapper(clazz);\n            }\n            if (MessageBodyReader.class.isAssignableFrom(clazz)) {\n                providers.addMessageBodyReader(clazz);\n            }\n            if (MessageBodyWriter.class.isAssignableFrom(clazz)) {\n                providers.addMessageBodyWriter(clazz);\n            }\n        } else if (clazz.getAnnotation(Filter.class) != null) {\n            if (MethodInvokerFilter.class.isAssignableFrom(clazz)) {\n                providers.addMethodInvokerFilter(clazz);\n            }\n            if (RequestFilter.class.isAssignableFrom(clazz)) {\n                providers.addRequestFilter(clazz);\n            }\n            if (ResponseFilter.class.isAssignableFrom(clazz)) {\n                providers.addResponseFilter(clazz);\n            }\n        } else if (clazz.getAnnotation(Path.class) != null) {\n            resources.addResource(clazz, null);\n        }\n    }", "signature": "void addPerRequest(Class clazz)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void addPerRequest(Class clazz)", "class_method_signature": "RestComponentResolver.addPerRequest(Class clazz)", "testcase": false, "constructor": false, "invocations": ["getAnnotation", "isAssignableFrom", "addContextResolver", "isAssignableFrom", "addExceptionMapper", "isAssignableFrom", "addMessageBodyReader", "isAssignableFrom", "addMessageBodyWriter", "getAnnotation", "isAssignableFrom", "addMethodInvokerFilter", "isAssignableFrom", "addRequestFilter", "isAssignableFrom", "addResponseFilter", "getAnnotation", "addResource"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}