{"test_class": {"identifier": "CommonViewsProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Security security;", "modifier": "@Mock\n    private", "type": "Security", "declarator": "security", "var_name": "security"}, {"original_string": "@InjectMocks\n    private CommonViewsProvider provider;", "modifier": "@InjectMocks\n    private", "type": "CommonViewsProvider", "declarator": "provider", "var_name": "provider"}], "file": "dataprep-api/src/test/java/org/talend/dataprep/api/service/settings/views/provider/CommonViewsProviderTest.java"}, "test_case": {"identifier": "shouldGetProviderForNonTDPUsers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldGetProviderForNonTDPUsers() {\n        // given\n        Mockito.when(security.isTDPUser()).thenReturn(false);\n\n        // when\n        final List<ViewSettings> settings = provider.getSettings();\n\n        // then\n        assertNotNull(settings);\n        assertEquals(4, settings.size());\n        assertTrue(settings.contains(HomeViewsForNonTDPUsers.appHeaderBarForNonTdpUsers()));\n        assertTrue(settings.contains(HomeViewsForNonTDPUsers.sidePanel()));\n        assertTrue(settings.contains(ListViews.folderList()));\n        assertTrue(settings.contains(ListViews.preparationList()));\n    }", "signature": "void shouldGetProviderForNonTDPUsers()", "full_signature": "@Test public void shouldGetProviderForNonTDPUsers()", "class_method_signature": "CommonViewsProviderTest.shouldGetProviderForNonTDPUsers()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isTDPUser", "getSettings", "assertNotNull", "assertEquals", "size", "assertTrue", "contains", "appHeaderBarForNonTdpUsers", "assertTrue", "contains", "sidePanel", "assertTrue", "contains", "folderList", "assertTrue", "contains", "preparationList"]}, "focal_class": {"identifier": "CommonViewsProvider", "superclass": "", "interfaces": "implements AppSettingsProvider<ViewSettings>", "fields": [{"original_string": "@Autowired\n    private Security security;", "modifier": "@Autowired\n    private", "type": "Security", "declarator": "security", "var_name": "security"}], "methods": [{"identifier": "getSettings", "parameters": "()", "modifiers": "@Override public", "return": "List<ViewSettings>", "signature": "List<ViewSettings> getSettings()", "full_signature": "@Override public List<ViewSettings> getSettings()", "class_method_signature": "CommonViewsProvider.getSettings()", "testcase": false, "constructor": false}], "file": "dataprep-api/src/main/java/org/talend/dataprep/api/service/settings/views/provider/CommonViewsProvider.java"}, "focal_method": {"identifier": "getSettings", "parameters": "()", "modifiers": "@Override public", "return": "List<ViewSettings>", "body": "@Override\n    public List<ViewSettings> getSettings() {\n\n        List<ViewSettings> settings = new ArrayList<>(5);\n\n        if (security.isTDPUser()) {\n            settings.add(HomeViews.appHeaderBar());\n            settings.add(HomeViews.sidePanel());\n            settings.add(HomeViews.breadcrumb());\n            settings.add(PlaygroundViews.playgroundAppHeaderBar());\n        } else {\n            settings.add(HomeViewsForNonTDPUsers.appHeaderBarForNonTdpUsers());\n            settings.add(HomeViewsForNonTDPUsers.sidePanel());\n        }\n\n        settings.addAll(asList(ListViews.folderList(), ListViews.preparationList()));\n\n        return settings;\n\n    }", "signature": "List<ViewSettings> getSettings()", "full_signature": "@Override public List<ViewSettings> getSettings()", "class_method_signature": "CommonViewsProvider.getSettings()", "testcase": false, "constructor": false, "invocations": ["isTDPUser", "add", "appHeaderBar", "add", "sidePanel", "add", "breadcrumb", "add", "playgroundAppHeaderBar", "add", "appHeaderBarForNonTdpUsers", "add", "sidePanel", "addAll", "asList", "folderList", "preparationList"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}