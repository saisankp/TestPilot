{"test_class": {"identifier": "MaliciousnessAnalyzerLoopTest", "superclass": "", "interfaces": "", "fields": [], "file": "lang/src/test/java/org/eclipse/steady/malice/MaliciousnessAnalyzerLoopTest.java"}, "test_case": {"identifier": "testLoop", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testLoop() {\n    final MaliciousnessAnalyzerLoop loop = new MaliciousnessAnalyzerLoop();\n    final Set<MaliciousnessAnalysisResult> results =\n        loop.isMalicious(new File(\"src/test/resources/zip-slip.zip\"));\n    assertTrue(results.size() > 0);\n    assertEquals(1d, results.iterator().next().getResult(), 0d);\n  }", "signature": "void testLoop()", "full_signature": "@Test public void testLoop()", "class_method_signature": "MaliciousnessAnalyzerLoopTest.testLoop()", "testcase": true, "constructor": false, "invocations": ["isMalicious", "assertTrue", "size", "assertEquals", "getResult", "next", "iterator"]}, "focal_class": {"identifier": "MaliciousnessAnalyzerLoop", "superclass": "", "interfaces": "", "fields": [{"original_string": "final ServiceLoader<MaliciousnessAnalyzer> loader =\n      ServiceLoader.load(MaliciousnessAnalyzer.class);", "modifier": "final", "type": "ServiceLoader<MaliciousnessAnalyzer>", "declarator": "loader =\n      ServiceLoader.load(MaliciousnessAnalyzer.class)", "var_name": "loader"}], "methods": [{"identifier": "isMalicious", "parameters": "(File _file)", "modifiers": "public", "return": "Set<MaliciousnessAnalysisResult>", "signature": "Set<MaliciousnessAnalysisResult> isMalicious(File _file)", "full_signature": "public Set<MaliciousnessAnalysisResult> isMalicious(File _file)", "class_method_signature": "MaliciousnessAnalyzerLoop.isMalicious(File _file)", "testcase": false, "constructor": false}, {"identifier": "isMalicious", "parameters": "(InputStream _is)", "modifiers": "public", "return": "Set<MaliciousnessAnalysisResult>", "signature": "Set<MaliciousnessAnalysisResult> isMalicious(InputStream _is)", "full_signature": "public Set<MaliciousnessAnalysisResult> isMalicious(InputStream _is)", "class_method_signature": "MaliciousnessAnalyzerLoop.isMalicious(InputStream _is)", "testcase": false, "constructor": false}], "file": "lang/src/main/java/org/eclipse/steady/malice/MaliciousnessAnalyzerLoop.java"}, "focal_method": {"identifier": "isMalicious", "parameters": "(File _file)", "modifiers": "public", "return": "Set<MaliciousnessAnalysisResult>", "body": "public Set<MaliciousnessAnalysisResult> isMalicious(File _file) {\n    final Set<MaliciousnessAnalysisResult> results = new HashSet<MaliciousnessAnalysisResult>();\n    for (MaliciousnessAnalyzer a : loader) {\n      results.add(a.isMalicious(_file));\n    }\n    return results;\n  }", "signature": "Set<MaliciousnessAnalysisResult> isMalicious(File _file)", "full_signature": "public Set<MaliciousnessAnalysisResult> isMalicious(File _file)", "class_method_signature": "MaliciousnessAnalyzerLoop.isMalicious(File _file)", "testcase": false, "constructor": false, "invocations": ["add", "isMalicious"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}