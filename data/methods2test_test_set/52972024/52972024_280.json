{"test_class": {"identifier": "NotifyTaskStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/Shutdown/ShutdownTaskProcessingStrategies/src/test/java/info/smart_tools/smartactors/shutdown/shutdown_task_processing_strategies/NotifyTaskStrategyTest.java"}, "test_case": {"identifier": "Should_notifyAndExecuteTask", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_notifyAndExecuteTask()\n            throws Exception {\n        ITaskExecutionState taskExecutionState = mock(ITaskExecutionState.class);\n        IShutdownAwareTask shutdownAwareTask = mock(IShutdownAwareTask.class);\n\n        when(taskExecutionState.getTaskAs(same(IShutdownAwareTask.class))).thenReturn(shutdownAwareTask);\n\n        new NotifyTaskStrategy().process(taskExecutionState);\n\n        verify(shutdownAwareTask).notifyShuttingDown();\n        verify(taskExecutionState).execute();\n    }", "signature": "void Should_notifyAndExecuteTask()", "full_signature": "@Test public void Should_notifyAndExecuteTask()", "class_method_signature": "NotifyTaskStrategyTest.Should_notifyAndExecuteTask()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getTaskAs", "same", "process", "notifyShuttingDown", "verify", "execute", "verify"]}, "focal_class": {"identifier": "NotifyTaskStrategy", "superclass": "", "interfaces": "implements ITaskProcessStrategy", "fields": [], "methods": [{"identifier": "process", "parameters": "(final ITaskExecutionState state)", "modifiers": "@Override public", "return": "void", "signature": "void process(final ITaskExecutionState state)", "full_signature": "@Override public void process(final ITaskExecutionState state)", "class_method_signature": "NotifyTaskStrategy.process(final ITaskExecutionState state)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Shutdown/ShutdownTaskProcessingStrategies/src/main/java/info/smart_tools/smartactors/shutdown/shutdown_task_processing_strategies/NotifyTaskStrategy.java"}, "focal_method": {"identifier": "process", "parameters": "(final ITaskExecutionState state)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final ITaskExecutionState state)\n            throws TaskExecutionException, InvalidArgumentException, TaskProcessException {\n        try {\n            state.getTaskAs(IShutdownAwareTask.class).notifyShuttingDown();\n        } catch (ShutdownAwareTaskNotificationException e) {\n            throw new TaskProcessException(e);\n        }\n\n        state.execute();\n    }", "signature": "void process(final ITaskExecutionState state)", "full_signature": "@Override public void process(final ITaskExecutionState state)", "class_method_signature": "NotifyTaskStrategy.process(final ITaskExecutionState state)", "testcase": false, "constructor": false, "invocations": ["notifyShuttingDown", "getTaskAs", "execute"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}