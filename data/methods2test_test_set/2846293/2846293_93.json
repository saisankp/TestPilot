{"test_class": {"identifier": "ExcelHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final URL excelFile = this.getClass().getResource(\"/web/xls/TestData.xls\");", "modifier": "private final", "type": "URL", "declarator": "excelFile = this.getClass().getResource(\"/web/xls/TestData.xls\")", "var_name": "excelFile"}], "file": "ebselen-core/src/test/java/com/lazerycode/ebselen/customhandlers/ExcelHandlerTest.java"}, "test_case": {"identifier": "getCellData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCellData() throws Exception {\n        ExcelHandler testExcelFile = new ExcelHandler(new File(excelFile.toURI()));\n        testExcelFile.selectSheet(\"Data Sheet\");\n        assertThat(testExcelFile.getCellData(1, 1).getContents(), is(equalTo(\"Test Data\")));\n        assertThat(testExcelFile.getCellData(1, 2).getContents(), is(equalTo(\"1\")));\n    }", "signature": "void getCellData()", "full_signature": "@Test public void getCellData()", "class_method_signature": "ExcelHandlerTest.getCellData()", "testcase": true, "constructor": false, "invocations": ["toURI", "selectSheet", "assertThat", "getContents", "getCellData", "is", "equalTo", "assertThat", "getContents", "getCellData", "is", "equalTo"]}, "focal_class": {"identifier": "ExcelHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HashMap<String, Sheet> importedSheets = new HashMap<String, Sheet>();", "modifier": "private", "type": "HashMap<String, Sheet>", "declarator": "importedSheets = new HashMap<String, Sheet>()", "var_name": "importedSheets"}, {"original_string": "private Sheet selectedSheet = null;", "modifier": "private", "type": "Sheet", "declarator": "selectedSheet = null", "var_name": "selectedSheet"}], "methods": [{"identifier": "ExcelHandler", "parameters": "(File excelWorkbook)", "modifiers": "public", "return": "", "signature": " ExcelHandler(File excelWorkbook)", "full_signature": "public  ExcelHandler(File excelWorkbook)", "class_method_signature": "ExcelHandler.ExcelHandler(File excelWorkbook)", "testcase": false, "constructor": true}, {"identifier": "selectSheet", "parameters": "(String sheetName)", "modifiers": "public", "return": "void", "signature": "void selectSheet(String sheetName)", "full_signature": "public void selectSheet(String sheetName)", "class_method_signature": "ExcelHandler.selectSheet(String sheetName)", "testcase": false, "constructor": false}, {"identifier": "selectedSheetName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String selectedSheetName()", "full_signature": "public String selectedSheetName()", "class_method_signature": "ExcelHandler.selectedSheetName()", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "(int columnNumber)", "modifiers": "public", "return": "HashMap<Integer, Cell>", "signature": "HashMap<Integer, Cell> getColumn(int columnNumber)", "full_signature": "public HashMap<Integer, Cell> getColumn(int columnNumber)", "class_method_signature": "ExcelHandler.getColumn(int columnNumber)", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "(int columnNumber, boolean skipFirstRow)", "modifiers": "public", "return": "HashMap<Integer, Cell>", "signature": "HashMap<Integer, Cell> getColumn(int columnNumber, boolean skipFirstRow)", "full_signature": "public HashMap<Integer, Cell> getColumn(int columnNumber, boolean skipFirstRow)", "class_method_signature": "ExcelHandler.getColumn(int columnNumber, boolean skipFirstRow)", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(int rowNumber)", "modifiers": "public", "return": "HashMap<Integer, Cell>", "signature": "HashMap<Integer, Cell> getRow(int rowNumber)", "full_signature": "public HashMap<Integer, Cell> getRow(int rowNumber)", "class_method_signature": "ExcelHandler.getRow(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(int rowNumber, boolean skipFirstColumn)", "modifiers": "public", "return": "HashMap<Integer, Cell>", "signature": "HashMap<Integer, Cell> getRow(int rowNumber, boolean skipFirstColumn)", "full_signature": "public HashMap<Integer, Cell> getRow(int rowNumber, boolean skipFirstColumn)", "class_method_signature": "ExcelHandler.getRow(int rowNumber, boolean skipFirstColumn)", "testcase": false, "constructor": false}, {"identifier": "mapTwoRows", "parameters": "(int keyRow, int valueRow)", "modifiers": "public", "return": "HashMap<String, Cell>", "signature": "HashMap<String, Cell> mapTwoRows(int keyRow, int valueRow)", "full_signature": "public HashMap<String, Cell> mapTwoRows(int keyRow, int valueRow)", "class_method_signature": "ExcelHandler.mapTwoRows(int keyRow, int valueRow)", "testcase": false, "constructor": false}, {"identifier": "mapTwoRows", "parameters": "(int keyRow, int valueRow, boolean skipFirstColumn)", "modifiers": "public", "return": "HashMap<String, Cell>", "signature": "HashMap<String, Cell> mapTwoRows(int keyRow, int valueRow, boolean skipFirstColumn)", "full_signature": "public HashMap<String, Cell> mapTwoRows(int keyRow, int valueRow, boolean skipFirstColumn)", "class_method_signature": "ExcelHandler.mapTwoRows(int keyRow, int valueRow, boolean skipFirstColumn)", "testcase": false, "constructor": false}, {"identifier": "mapTwoColumns", "parameters": "(int keyColumn, int valueColumn)", "modifiers": "public", "return": "HashMap<String, Cell>", "signature": "HashMap<String, Cell> mapTwoColumns(int keyColumn, int valueColumn)", "full_signature": "public HashMap<String, Cell> mapTwoColumns(int keyColumn, int valueColumn)", "class_method_signature": "ExcelHandler.mapTwoColumns(int keyColumn, int valueColumn)", "testcase": false, "constructor": false}, {"identifier": "mapTwoColumns", "parameters": "(int keyColumn, int valueColumn, boolean skipFirstColumn)", "modifiers": "public", "return": "HashMap<String, Cell>", "signature": "HashMap<String, Cell> mapTwoColumns(int keyColumn, int valueColumn, boolean skipFirstColumn)", "full_signature": "public HashMap<String, Cell> mapTwoColumns(int keyColumn, int valueColumn, boolean skipFirstColumn)", "class_method_signature": "ExcelHandler.mapTwoColumns(int keyColumn, int valueColumn, boolean skipFirstColumn)", "testcase": false, "constructor": false}, {"identifier": "getCellData", "parameters": "(int column, int row)", "modifiers": "public", "return": "Cell", "signature": "Cell getCellData(int column, int row)", "full_signature": "public Cell getCellData(int column, int row)", "class_method_signature": "ExcelHandler.getCellData(int column, int row)", "testcase": false, "constructor": false}], "file": "ebselen-core/src/main/java/com/lazerycode/ebselen/customhandlers/ExcelHandler.java"}, "focal_method": {"identifier": "getCellData", "parameters": "(int column, int row)", "modifiers": "public", "return": "Cell", "body": "public Cell getCellData(int column, int row) throws Exception {\n        column--;\n        row--;\n        if (this.selectedSheet.equals(null)) {\n            throw new Exception(\"No sheet selected.  You must select a sheet before trying to get data!\");\n        }\n        return this.selectedSheet.getCell(column, row);\n    }", "signature": "Cell getCellData(int column, int row)", "full_signature": "public Cell getCellData(int column, int row)", "class_method_signature": "ExcelHandler.getCellData(int column, int row)", "testcase": false, "constructor": false, "invocations": ["equals", "getCell"]}, "repository": {"repo_id": 2846293, "url": "https://github.com/Ardesco/Ebselen", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 59, "size": 1133, "license": "licensed"}}