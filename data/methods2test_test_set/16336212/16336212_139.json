{"test_class": {"identifier": "VersionTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/org/glowroot/common/util/VersionTest.java"}, "test_case": {"identifier": "testClassWithNoClassFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClassWithNoClassFile() throws IOException {\n        assertThat(Version.getManifest(long.class)).isNull();\n    }", "signature": "void testClassWithNoClassFile()", "full_signature": "@Test public void testClassWithNoClassFile()", "class_method_signature": "VersionTest.testClassWithNoClassFile()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getManifest"]}, "focal_class": {"identifier": "Version", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String UNKNOWN_VERSION = \"unknown\";", "modifier": "public static final", "type": "String", "declarator": "UNKNOWN_VERSION = \"unknown\"", "var_name": "UNKNOWN_VERSION"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(Version.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(Version.class)", "var_name": "logger"}], "methods": [{"identifier": "Version", "parameters": "()", "modifiers": "private", "return": "", "signature": " Version()", "full_signature": "private  Version()", "class_method_signature": "Version.Version()", "testcase": false, "constructor": true}, {"identifier": "getVersion", "parameters": "(Class<?> baseClass)", "modifiers": "public static", "return": "String", "signature": "String getVersion(Class<?> baseClass)", "full_signature": "public static String getVersion(Class<?> baseClass)", "class_method_signature": "Version.getVersion(Class<?> baseClass)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "(@Nullable URL manifestURL)", "modifiers": "public static", "return": "String", "signature": "String getVersion(@Nullable URL manifestURL)", "full_signature": "public static String getVersion(@Nullable URL manifestURL)", "class_method_signature": "Version.getVersion(@Nullable URL manifestURL)", "testcase": false, "constructor": false}, {"identifier": "getManifest", "parameters": "(Class<?> clazz)", "modifiers": "@VisibleForTesting static @Nullable", "return": "Manifest", "signature": "Manifest getManifest(Class<?> clazz)", "full_signature": "@VisibleForTesting static @Nullable Manifest getManifest(Class<?> clazz)", "class_method_signature": "Version.getManifest(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getManifest", "parameters": "(@Nullable URL url)", "modifiers": "private static @Nullable", "return": "Manifest", "signature": "Manifest getManifest(@Nullable URL url)", "full_signature": "private static @Nullable Manifest getManifest(@Nullable URL url)", "class_method_signature": "Version.getManifest(@Nullable URL url)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "(@Nullable Manifest manifest)", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String getVersion(@Nullable Manifest manifest)", "full_signature": "@VisibleForTesting static String getVersion(@Nullable Manifest manifest)", "class_method_signature": "Version.getVersion(@Nullable Manifest manifest)", "testcase": false, "constructor": false}, {"identifier": "getSnapshotVersion", "parameters": "(String version, Attributes mainAttributes)", "modifiers": "private static", "return": "String", "signature": "String getSnapshotVersion(String version, Attributes mainAttributes)", "full_signature": "private static String getSnapshotVersion(String version, Attributes mainAttributes)", "class_method_signature": "Version.getSnapshotVersion(String version, Attributes mainAttributes)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/glowroot/common/util/Version.java"}, "focal_method": {"identifier": "getManifest", "parameters": "(Class<?> clazz)", "modifiers": "@VisibleForTesting static @Nullable", "return": "Manifest", "body": "@VisibleForTesting\n    static @Nullable Manifest getManifest(Class<?> clazz) throws IOException {\n        URL classURL = clazz.getResource(clazz.getSimpleName() + \".class\");\n        if (classURL == null) {\n            logger.warn(\"url for class is unexpectedly null: {}\", clazz);\n            return null;\n        }\n        String externalForm = classURL.toExternalForm();\n        if (!externalForm.startsWith(\"jar:\")) {\n            return null;\n        }\n        URL manifestURL = new URL(externalForm.substring(0, externalForm.lastIndexOf('!'))\n                + \"!/META-INF/MANIFEST.MF\");\n        return getManifest(manifestURL);\n    }", "signature": "Manifest getManifest(Class<?> clazz)", "full_signature": "@VisibleForTesting static @Nullable Manifest getManifest(Class<?> clazz)", "class_method_signature": "Version.getManifest(Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["getResource", "getSimpleName", "warn", "toExternalForm", "startsWith", "substring", "lastIndexOf", "getManifest"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}