{"test_class": {"identifier": "BoshDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IMocksControl mocksControl;", "modifier": "private", "type": "IMocksControl", "declarator": "mocksControl", "var_name": "mocksControl"}, {"original_string": "private BoshHandler boshHandler;", "modifier": "private", "type": "BoshHandler", "declarator": "boshHandler", "var_name": "boshHandler"}, {"original_string": "private HttpServletRequest request;", "modifier": "private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private BoshDecoder boshDecoder;", "modifier": "private", "type": "BoshDecoder", "declarator": "boshDecoder", "var_name": "boshDecoder"}], "file": "server/extensions/xep0124-xep0206-bosh/src/test/java/org/apache/vysper/xmpp/extension/xep0124/BoshDecoderTest.java"}, "test_case": {"identifier": "testDecode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDecode() throws IOException, SAXException {\n        ServletInputStream input = new ServletInputStreamMock(\"<body rid='3549788615' xmlns='http://jabber.org/protocol/httpbind' to='vysper.org' xml:lang='en' wait='60' hold='1' ver='1.6' xmpp:version='1.0' xmlns:xmpp='urn:xmpp:xbosh'/>\");\n        expect(request.getInputStream()).andReturn(input);\n        Capture<Stanza> captured = new Capture<Stanza>();\n        boshHandler.process(EasyMock.<HttpServletRequest>notNull(), EasyMock.<Stanza>capture(captured));\n        mocksControl.replay();\n        boshDecoder.decode();\n        mocksControl.verify();\n        Stanza request = captured.getValue();\n        assertNotNull(request);\n        assertEquals(\"body\", request.getName());\n        assertEquals(NamespaceURIs.XEP0124_BOSH, request.getNamespaceURI());\n        assertEquals(\"3549788615\", request.getAttributeValue(\"rid\"));\n        assertEquals(\"vysper.org\", request.getAttributeValue(\"to\"));\n        assertEquals(\"60\", request.getAttributeValue(\"wait\"));\n        assertEquals(\"1\", request.getAttributeValue(\"hold\"));\n        assertEquals(\"1.6\", request.getAttributeValue(\"ver\"));\n        assertEquals(\"1.0\", request.getAttributeValue(NamespaceURIs.URN_XMPP_XBOSH, \"version\"));\n        assertEquals(\"en\", request.getAttributeValue(NamespaceURIs.XML, \"lang\"));\n    }", "signature": "void testDecode()", "full_signature": "@Test public void testDecode()", "class_method_signature": "BoshDecoderTest.testDecode()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "getInputStream", "process", "notNull", "capture", "replay", "decode", "verify", "getValue", "assertNotNull", "assertEquals", "getName", "assertEquals", "getNamespaceURI", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue", "assertEquals", "getAttributeValue"]}, "focal_class": {"identifier": "BoshDecoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NonBlockingXMLReader reader;", "modifier": "private final", "type": "NonBlockingXMLReader", "declarator": "reader", "var_name": "reader"}, {"original_string": "private final HttpServletRequest request;", "modifier": "private final", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "BoshDecoder", "parameters": "(BoshHandler boshHandler, HttpServletRequest req)", "modifiers": "public", "return": "", "signature": " BoshDecoder(BoshHandler boshHandler, HttpServletRequest req)", "full_signature": "public  BoshDecoder(BoshHandler boshHandler, HttpServletRequest req)", "class_method_signature": "BoshDecoder.BoshDecoder(BoshHandler boshHandler, HttpServletRequest req)", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void decode()", "full_signature": "public void decode()", "class_method_signature": "BoshDecoder.decode()", "testcase": false, "constructor": false}], "file": "server/extensions/xep0124-xep0206-bosh/src/main/java/org/apache/vysper/xmpp/extension/xep0124/BoshDecoder.java"}, "focal_method": {"identifier": "decode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void decode() throws IOException, SAXException {\n        IoBuffer ioBuf = IoBuffer.allocate(1024);\n        ioBuf.setAutoExpand(true);\n        byte[] buf = new byte[1024];\n        InputStream in = request.getInputStream();\n\n        for (;;) {\n            int i = in.read(buf);\n            if (i == -1) {\n                break;\n            }\n            ioBuf.put(buf, 0, i);\n        }\n        ioBuf.flip();\n        reader.parse(ioBuf, CharsetUtil.getDecoder());\n    }", "signature": "void decode()", "full_signature": "public void decode()", "class_method_signature": "BoshDecoder.decode()", "testcase": false, "constructor": false, "invocations": ["allocate", "setAutoExpand", "getInputStream", "read", "put", "flip", "parse", "getDecoder"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}