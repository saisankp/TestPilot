{"test_class": {"identifier": "RestartableSequenceTest", "superclass": "extends AbstractNodeSequenceTest", "interfaces": "", "fields": [{"original_string": "private ExecutionContext context;", "modifier": "private", "type": "ExecutionContext", "declarator": "context", "var_name": "context"}, {"original_string": "private BufferManager bufferMgr;", "modifier": "private", "type": "BufferManager", "declarator": "bufferMgr", "var_name": "bufferMgr"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/query/engine/process/RestartableSequenceTest.java"}, "test_case": {"identifier": "shouldProduceSameOrderWithOneBatchInMemory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldProduceSameOrderWithOneBatchInMemory() {\n        System.out.println(\"Number of rows: \" + countRows(allNodes()));\n        int numRowsInMemory = 4;\n        int numRowsInBatch = 4;\n        NodeSequence batches = allNodes(1.0f, numRowsInBatch);\n        RestartableSequence restartable = new RestartableSequence(workspaceName(), batches, bufferMgr, cache, numRowsInMemory);\n        assertSameOrder(restartable, allNodes(), false);\n        restartable.restart();\n        assertSameOrder(restartable, allNodes(), true);\n    }", "signature": "void shouldProduceSameOrderWithOneBatchInMemory()", "full_signature": "@Test public void shouldProduceSameOrderWithOneBatchInMemory()", "class_method_signature": "RestartableSequenceTest.shouldProduceSameOrderWithOneBatchInMemory()", "testcase": true, "constructor": false, "invocations": ["println", "countRows", "allNodes", "allNodes", "workspaceName", "assertSameOrder", "allNodes", "restart", "assertSameOrder", "allNodes"]}, "focal_class": {"identifier": "RestartableSequence", "superclass": "extends NodeSequence", "interfaces": "implements Restartable", "fields": [{"original_string": "protected final NodeSequence original;", "modifier": "protected final", "type": "NodeSequence", "declarator": "original", "var_name": "original"}, {"original_string": "private final BufferedRowFactory<? extends BufferedRow> rowFactory;", "modifier": "private final", "type": "BufferedRowFactory<? extends BufferedRow>", "declarator": "rowFactory", "var_name": "rowFactory"}, {"original_string": "protected final Serializer<BufferedRow> rowSerializer;", "modifier": "protected final", "type": "Serializer<BufferedRow>", "declarator": "rowSerializer", "var_name": "rowSerializer"}, {"original_string": "protected final Queue<Batch> inMemoryBatches;", "modifier": "protected final", "type": "Queue<Batch>", "declarator": "inMemoryBatches", "var_name": "inMemoryBatches"}, {"original_string": "protected final QueueBufferSupplier offHeapBatchesSupplier;", "modifier": "protected final", "type": "QueueBufferSupplier", "declarator": "offHeapBatchesSupplier", "var_name": "offHeapBatchesSupplier"}, {"original_string": "protected final String workspaceName;", "modifier": "protected final", "type": "String", "declarator": "workspaceName", "var_name": "workspaceName"}, {"original_string": "protected final AtomicLong remainingRowCount = new AtomicLong();", "modifier": "protected final", "type": "AtomicLong", "declarator": "remainingRowCount = new AtomicLong()", "var_name": "remainingRowCount"}, {"original_string": "private final int targetNumRowsInMemory;", "modifier": "private final", "type": "int", "declarator": "targetNumRowsInMemory", "var_name": "targetNumRowsInMemory"}, {"original_string": "protected final int width;", "modifier": "protected final", "type": "int", "declarator": "width", "var_name": "width"}, {"original_string": "private BatchSequence batches;", "modifier": "private", "type": "BatchSequence", "declarator": "batches", "var_name": "batches"}, {"original_string": "protected final AtomicLong batchSize = new AtomicLong();", "modifier": "protected final", "type": "AtomicLong", "declarator": "batchSize = new AtomicLong()", "var_name": "batchSize"}, {"original_string": "protected int actualNumRowsInMemory = 0;", "modifier": "protected", "type": "int", "declarator": "actualNumRowsInMemory = 0", "var_name": "actualNumRowsInMemory"}, {"original_string": "protected long totalSize = 0L;", "modifier": "protected", "type": "long", "declarator": "totalSize = 0L", "var_name": "totalSize"}, {"original_string": "protected boolean loadedAll = false;", "modifier": "protected", "type": "boolean", "declarator": "loadedAll = false", "var_name": "loadedAll"}, {"original_string": "protected boolean usedOffHeap = false;", "modifier": "protected", "type": "boolean", "declarator": "usedOffHeap = false", "var_name": "usedOffHeap"}], "methods": [{"identifier": "RestartableSequence", "parameters": "( String workspaceName,\n                                NodeSequence original,\n                                final BufferManager bufferMgr,\n                                CachedNodeSupplier nodeCache,\n                                final int numRowsInMemory )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "", "signature": " RestartableSequence( String workspaceName,\n                                NodeSequence original,\n                                final BufferManager bufferMgr,\n                                CachedNodeSupplier nodeCache,\n                                final int numRowsInMemory )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public  RestartableSequence( String workspaceName,\n                                NodeSequence original,\n                                final BufferManager bufferMgr,\n                                CachedNodeSupplier nodeCache,\n                                final int numRowsInMemory )", "class_method_signature": "RestartableSequence.RestartableSequence( String workspaceName,\n                                NodeSequence original,\n                                final BufferManager bufferMgr,\n                                CachedNodeSupplier nodeCache,\n                                final int numRowsInMemory )", "testcase": false, "constructor": true}, {"identifier": "width", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int width()", "full_signature": "@Override public int width()", "class_method_signature": "RestartableSequence.width()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getRowCount()", "full_signature": "@Override public long getRowCount()", "class_method_signature": "RestartableSequence.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "RestartableSequence.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "nextBatch", "parameters": "()", "modifiers": "@Override public", "return": "Batch", "signature": "Batch nextBatch()", "full_signature": "@Override public Batch nextBatch()", "class_method_signature": "RestartableSequence.nextBatch()", "testcase": false, "constructor": false}, {"identifier": "restart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void restart()", "full_signature": "@Override public void restart()", "class_method_signature": "RestartableSequence.restart()", "testcase": false, "constructor": false}, {"identifier": "restartBatches", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void restartBatches()", "full_signature": "protected void restartBatches()", "class_method_signature": "RestartableSequence.restartBatches()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "RestartableSequence.close()", "testcase": false, "constructor": false}, {"identifier": "loadRemaining", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void loadRemaining()", "full_signature": "protected void loadRemaining()", "class_method_signature": "RestartableSequence.loadRemaining()", "testcase": false, "constructor": false}, {"identifier": "loadBatch", "parameters": "( Batch batch,\n                              boolean loadIntoMemory,\n                              AtomicReference<Batch> copyOutput )", "modifiers": "protected", "return": "long", "signature": "long loadBatch( Batch batch,\n                              boolean loadIntoMemory,\n                              AtomicReference<Batch> copyOutput )", "full_signature": "protected long loadBatch( Batch batch,\n                              boolean loadIntoMemory,\n                              AtomicReference<Batch> copyOutput )", "class_method_signature": "RestartableSequence.loadBatch( Batch batch,\n                              boolean loadIntoMemory,\n                              AtomicReference<Batch> copyOutput )", "testcase": false, "constructor": false}, {"identifier": "createRow", "parameters": "( Batch currentRow )", "modifiers": "protected", "return": "BufferedRow", "signature": "BufferedRow createRow( Batch currentRow )", "full_signature": "protected BufferedRow createRow( Batch currentRow )", "class_method_signature": "RestartableSequence.createRow( Batch currentRow )", "testcase": false, "constructor": false}, {"identifier": "batchFrom", "parameters": "( final Iterator<BufferedRow> rows,\n                               final long maxBatchSize )", "modifiers": "protected", "return": "Batch", "signature": "Batch batchFrom( final Iterator<BufferedRow> rows,\n                               final long maxBatchSize )", "full_signature": "protected Batch batchFrom( final Iterator<BufferedRow> rows,\n                               final long maxBatchSize )", "class_method_signature": "RestartableSequence.batchFrom( final Iterator<BufferedRow> rows,\n                               final long maxBatchSize )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RestartableSequence.toString()", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/query/engine/process/RestartableSequence.java"}, "focal_method": {"identifier": "restart", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void restart() {\n        loadRemaining();\n        restartBatches();\n    }", "signature": "void restart()", "full_signature": "@Override public void restart()", "class_method_signature": "RestartableSequence.restart()", "testcase": false, "constructor": false, "invocations": ["loadRemaining", "restartBatches"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}