{"test_class": {"identifier": "TestThemisCpUtil", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "themis-coprocessor/src/test/java/org/apache/hadoop/hbase/themis/cp/TestThemisCpUtil.java"}, "test_case": {"identifier": "testRemoveNotRequiredLockColumns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRemoveNotRequiredLockColumns() {\n    Get get = new Get(ROW);\n    get.addFamily(FAMILY);\n    get.addColumn(ANOTHER_FAMILY, ANOTHER_QUALIFIER);\n    List<KeyValue> sourceKvs = new ArrayList<KeyValue>();\n    sourceKvs.add(KEYVALUE);\n    Column lockColumn = ColumnUtil.getLockColumn(FAMILY, QUALIFIER);\n    KeyValue lockKv = new KeyValue(ROW, lockColumn.getFamily(), lockColumn.getQualifier(), PREWRITE_TS,\n      Type.Put, VALUE);\n    sourceKvs.add(lockKv);\n    lockColumn = ColumnUtil.getLockColumn(ANOTHER_FAMILY, QUALIFIER);\n    sourceKvs.add(new KeyValue(ROW, lockColumn.getFamily(), lockColumn.getQualifier(), PREWRITE_TS,\n        Type.Put, VALUE));\n    Result result = ThemisCpUtil.removeNotRequiredLockColumns(get.getFamilyMap(), new Result(\n        sourceKvs));\n    Assert.assertEquals(2, result.size());\n    Assert.assertTrue(KEYVALUE.equals(result.list().get(0)));\n    Assert.assertTrue(lockKv.equals(result.list().get(1)));\n  }", "signature": "void testRemoveNotRequiredLockColumns()", "full_signature": "@Test public void testRemoveNotRequiredLockColumns()", "class_method_signature": "TestThemisCpUtil.testRemoveNotRequiredLockColumns()", "testcase": true, "constructor": false, "invocations": ["addFamily", "addColumn", "add", "getLockColumn", "getFamily", "getQualifier", "add", "getLockColumn", "add", "getFamily", "getQualifier", "removeNotRequiredLockColumns", "getFamilyMap", "assertEquals", "size", "assertTrue", "equals", "get", "list", "assertTrue", "equals", "get", "list"]}, "focal_class": {"identifier": "ThemisCpUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static Set<Class<? extends Filter>> ALLOWED_ROWKEY_FILTER_CLASSES = new HashSet<Class<? extends Filter>>();", "modifier": "public static", "type": "Set<Class<? extends Filter>>", "declarator": "ALLOWED_ROWKEY_FILTER_CLASSES = new HashSet<Class<? extends Filter>>()", "var_name": "ALLOWED_ROWKEY_FILTER_CLASSES"}, {"original_string": "public static Set<Class<? extends Filter>> DISALLOWD_FILTERS = new HashSet<Class<? extends Filter>>();", "modifier": "public static", "type": "Set<Class<? extends Filter>>", "declarator": "DISALLOWD_FILTERS = new HashSet<Class<? extends Filter>>()", "var_name": "DISALLOWD_FILTERS"}, {"original_string": "private static String disallowedFilterClassNameString = null;", "modifier": "private static", "type": "String", "declarator": "disallowedFilterClassNameString = null", "var_name": "disallowedFilterClassNameString"}], "methods": [{"identifier": "getDisallowedFilterClassNameString", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getDisallowedFilterClassNameString()", "full_signature": "public static String getDisallowedFilterClassNameString()", "class_method_signature": "ThemisCpUtil.getDisallowedFilterClassNameString()", "testcase": false, "constructor": false}, {"identifier": "processFilters", "parameters": "(Filter filter, FilterCallable callable)", "modifiers": "public static", "return": "void", "signature": "void processFilters(Filter filter, FilterCallable callable)", "full_signature": "public static void processFilters(Filter filter, FilterCallable callable)", "class_method_signature": "ThemisCpUtil.processFilters(Filter filter, FilterCallable callable)", "testcase": false, "constructor": false}, {"identifier": "moveRowkeyFiltersForWriteGet", "parameters": "(Get sourceGet, Get destGet)", "modifiers": "public static", "return": "void", "signature": "void moveRowkeyFiltersForWriteGet(Get sourceGet, Get destGet)", "full_signature": "public static void moveRowkeyFiltersForWriteGet(Get sourceGet, Get destGet)", "class_method_signature": "ThemisCpUtil.moveRowkeyFiltersForWriteGet(Get sourceGet, Get destGet)", "testcase": false, "constructor": false}, {"identifier": "moveRowkeyFiltersForWriteScan", "parameters": "(Scan sourceScan, Scan destScan)", "modifiers": "public static", "return": "void", "signature": "void moveRowkeyFiltersForWriteScan(Scan sourceScan, Scan destScan)", "full_signature": "public static void moveRowkeyFiltersForWriteScan(Scan sourceScan, Scan destScan)", "class_method_signature": "ThemisCpUtil.moveRowkeyFiltersForWriteScan(Scan sourceScan, Scan destScan)", "testcase": false, "constructor": false}, {"identifier": "addLockAndWriteColumnToGet", "parameters": "(Get userGet, Get internalGet, long startTs)", "modifiers": "public static", "return": "void", "signature": "void addLockAndWriteColumnToGet(Get userGet, Get internalGet, long startTs)", "full_signature": "public static void addLockAndWriteColumnToGet(Get userGet, Get internalGet, long startTs)", "class_method_signature": "ThemisCpUtil.addLockAndWriteColumnToGet(Get userGet, Get internalGet, long startTs)", "testcase": false, "constructor": false}, {"identifier": "removeNotRequiredLockColumns", "parameters": "(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "modifiers": "public static", "return": "Result", "signature": "Result removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "full_signature": "public static Result removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "class_method_signature": "ThemisCpUtil.removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "testcase": false, "constructor": false}, {"identifier": "constructLockAndWriteGet", "parameters": "(Get userGet, long startTs)", "modifiers": "public static", "return": "Get", "signature": "Get constructLockAndWriteGet(Get userGet, long startTs)", "full_signature": "public static Get constructLockAndWriteGet(Get userGet, long startTs)", "class_method_signature": "ThemisCpUtil.constructLockAndWriteGet(Get userGet, long startTs)", "testcase": false, "constructor": false}, {"identifier": "prepareGet", "parameters": "(Get get, Collection<HColumnDescriptor> families)", "modifiers": "public static", "return": "void", "signature": "void prepareGet(Get get, Collection<HColumnDescriptor> families)", "full_signature": "public static void prepareGet(Get get, Collection<HColumnDescriptor> families)", "class_method_signature": "ThemisCpUtil.prepareGet(Get get, Collection<HColumnDescriptor> families)", "testcase": false, "constructor": false}, {"identifier": "prepareScan", "parameters": "(Scan scan, Collection<HColumnDescriptor> families)", "modifiers": "public static", "return": "void", "signature": "void prepareScan(Scan scan, Collection<HColumnDescriptor> families)", "full_signature": "public static void prepareScan(Scan scan, Collection<HColumnDescriptor> families)", "class_method_signature": "ThemisCpUtil.prepareScan(Scan scan, Collection<HColumnDescriptor> families)", "testcase": false, "constructor": false}, {"identifier": "constructLockAndWriteScan", "parameters": "(Scan userScan, long startTs)", "modifiers": "public static", "return": "Scan", "signature": "Scan constructLockAndWriteScan(Scan userScan, long startTs)", "full_signature": "public static Scan constructLockAndWriteScan(Scan userScan, long startTs)", "class_method_signature": "ThemisCpUtil.constructLockAndWriteScan(Scan userScan, long startTs)", "testcase": false, "constructor": false}, {"identifier": "addLockAndWriteColumnToScan", "parameters": "(Column column, Scan scan)", "modifiers": "public static", "return": "void", "signature": "void addLockAndWriteColumnToScan(Column column, Scan scan)", "full_signature": "public static void addLockAndWriteColumnToScan(Column column, Scan scan)", "class_method_signature": "ThemisCpUtil.addLockAndWriteColumnToScan(Column column, Scan scan)", "testcase": false, "constructor": false}, {"identifier": "constructDataGetByPutKvs", "parameters": "(List<KeyValue> putKvs, Filter filter)", "modifiers": "public static", "return": "Get", "signature": "Get constructDataGetByPutKvs(List<KeyValue> putKvs, Filter filter)", "full_signature": "public static Get constructDataGetByPutKvs(List<KeyValue> putKvs, Filter filter)", "class_method_signature": "ThemisCpUtil.constructDataGetByPutKvs(List<KeyValue> putKvs, Filter filter)", "testcase": false, "constructor": false}, {"identifier": "getPutKvs", "parameters": "(List<KeyValue> writeKvs)", "modifiers": "protected static", "return": "List<KeyValue>", "signature": "List<KeyValue> getPutKvs(List<KeyValue> writeKvs)", "full_signature": "protected static List<KeyValue> getPutKvs(List<KeyValue> writeKvs)", "class_method_signature": "ThemisCpUtil.getPutKvs(List<KeyValue> writeKvs)", "testcase": false, "constructor": false}, {"identifier": "getPutKvsForCommitDifferentFamily", "parameters": "(List<KeyValue> writeKvs)", "modifiers": "protected static", "return": "List<KeyValue>", "signature": "List<KeyValue> getPutKvsForCommitDifferentFamily(List<KeyValue> writeKvs)", "full_signature": "protected static List<KeyValue> getPutKvsForCommitDifferentFamily(List<KeyValue> writeKvs)", "class_method_signature": "ThemisCpUtil.getPutKvsForCommitDifferentFamily(List<KeyValue> writeKvs)", "testcase": false, "constructor": false}, {"identifier": "addWriteColumnToGet", "parameters": "(Column column, Get get)", "modifiers": "public static", "return": "void", "signature": "void addWriteColumnToGet(Column column, Get get)", "full_signature": "public static void addWriteColumnToGet(Column column, Get get)", "class_method_signature": "ThemisCpUtil.addWriteColumnToGet(Column column, Get get)", "testcase": false, "constructor": false}, {"identifier": "isLockResult", "parameters": "(Result result)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLockResult(Result result)", "full_signature": "public static boolean isLockResult(Result result)", "class_method_signature": "ThemisCpUtil.isLockResult(Result result)", "testcase": false, "constructor": false}, {"identifier": "seperateLockAndWriteKvs", "parameters": "(List<KeyValue> kvs)", "modifiers": "public static", "return": "Pair<List<KeyValue>, List<KeyValue>>", "signature": "Pair<List<KeyValue>, List<KeyValue>> seperateLockAndWriteKvs(List<KeyValue> kvs)", "full_signature": "public static Pair<List<KeyValue>, List<KeyValue>> seperateLockAndWriteKvs(List<KeyValue> kvs)", "class_method_signature": "ThemisCpUtil.seperateLockAndWriteKvs(List<KeyValue> kvs)", "testcase": false, "constructor": false}], "file": "themis-coprocessor/src/main/java/org/apache/hadoop/hbase/themis/cp/ThemisCpUtil.java"}, "focal_method": {"identifier": "removeNotRequiredLockColumns", "parameters": "(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "modifiers": "public static", "return": "Result", "body": "public static Result removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result) {\n    if (!result.isEmpty()) {\n      List<KeyValue> kvs = new ArrayList<KeyValue>();\n      for (KeyValue kv : result.list()) {\n        if (Bytes.equals(ColumnUtil.LOCK_FAMILY_NAME, kv.getFamily())\n            || ColumnUtil.isCommitFamily(kv.getFamily())) {\n          Column dataColumn = ColumnUtil.getDataColumnFromConstructedQualifier(new Column(kv.getFamily(), kv\n              .getQualifier()));\n          if (familyMap.containsKey(dataColumn.getFamily())) {\n            Set<byte[]> qualifiers= familyMap.get(dataColumn.getFamily());\n            // for scan, after serialization, the null qualifiers will be set to empty set\n            if (qualifiers == null || qualifiers.size() == 0\n                || qualifiers.contains(dataColumn.getQualifier())) {\n              kvs.add(kv);\n            }\n          }\n        } else {\n          kvs.add(kv);\n        }\n      }\n      if (kvs.size() != result.size()) {\n        return new Result(kvs);\n      }\n    }\n    return result;\n  }", "signature": "Result removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "full_signature": "public static Result removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "class_method_signature": "ThemisCpUtil.removeNotRequiredLockColumns(Map<byte[], NavigableSet<byte[]>> familyMap,\n      Result result)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "list", "equals", "getFamily", "isCommitFamily", "getFamily", "getDataColumnFromConstructedQualifier", "getFamily", "getQualifier", "containsKey", "getFamily", "get", "getFamily", "size", "contains", "getQualifier", "add", "add", "size", "size"]}, "repository": {"repo_id": 19147361, "url": "https://github.com/XiaoMi/themis", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 212, "size": 1400, "license": "Apache License 2.0"}}