{"test_class": {"identifier": "TransformGeometryCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate CommandDispatcher dispatcher;", "modifier": "@Autowired\n\tprivate", "type": "CommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "@Autowired\n\tprivate DtoConverterService converterService;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converterService", "var_name": "converterService"}, {"original_string": "private static final String MERCATOR = \"EPSG:900913\";", "modifier": "private static final", "type": "String", "declarator": "MERCATOR = \"EPSG:900913\"", "var_name": "MERCATOR"}, {"original_string": "private static final String LONLAT = \"EPSG:4326\";", "modifier": "private static final", "type": "String", "declarator": "LONLAT = \"EPSG:4326\"", "var_name": "LONLAT"}, {"original_string": "private static final double DELTA = 1e-20;", "modifier": "private static final", "type": "double", "declarator": "DELTA = 1e-20", "var_name": "DELTA"}], "file": "command/src/test/java/org/geomajas/command/geometry/TransformGeometryCommandTest.java"}, "test_case": {"identifier": "testTransformGeometry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTransformGeometry() throws Exception {\n\t\tTransformGeometryRequest request = new TransformGeometryRequest();\n\t\tWKTReader reader = new WKTReader();\n\t\tGeometry origin = converterService.toDto(reader.read(\"POLYGON((10 30, 20 30,20 40,10 40,10 30))\"));\n\t\trequest.setGeometry(origin);\n\t\trequest.setSourceCrs(MERCATOR);\n\t\trequest.setTargetCrs(LONLAT);\n\t\t// execute\n\t\tTransformGeometryResponse response = (TransformGeometryResponse) dispatcher.execute(\n\t\t\t\tTransformGeometryRequest.COMMAND, request, null, \"en\");\n\t\tGeometry transformed = response.getGeometry();\n\t\tEnvelope bounds = converterService.toInternal(transformed).getEnvelopeInternal();\n\t\tAssert.assertEquals(8.983152841195215E-5, bounds.getMinX(), DELTA);\n\t\tAssert.assertEquals(2.6949458522981454E-4, bounds.getMinY(), DELTA);\n\t\tAssert.assertEquals(1.796630568239043E-4, bounds.getMaxX(), DELTA);\n\t\tAssert.assertEquals(3.593261136397527E-4, bounds.getMaxY(), DELTA);\n\t}", "signature": "void testTransformGeometry()", "full_signature": "@Test public void testTransformGeometry()", "class_method_signature": "TransformGeometryCommandTest.testTransformGeometry()", "testcase": true, "constructor": false, "invocations": ["toDto", "read", "setGeometry", "setSourceCrs", "setTargetCrs", "execute", "getGeometry", "getEnvelopeInternal", "toInternal", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getMaxX", "assertEquals", "getMaxY"]}, "focal_class": {"identifier": "TransformGeometryCommand", "superclass": "", "interfaces": "implements CommandHasRequest<TransformGeometryRequest, TransformGeometryResponse>", "fields": [{"original_string": "@Autowired\n\tprivate DtoConverterService converter;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "methods": [{"identifier": "getEmptyCommandRequest", "parameters": "()", "modifiers": "@Override public", "return": "TransformGeometryRequest", "signature": "TransformGeometryRequest getEmptyCommandRequest()", "full_signature": "@Override public TransformGeometryRequest getEmptyCommandRequest()", "class_method_signature": "TransformGeometryCommand.getEmptyCommandRequest()", "testcase": false, "constructor": false}, {"identifier": "getEmptyCommandResponse", "parameters": "()", "modifiers": "@Override public", "return": "TransformGeometryResponse", "signature": "TransformGeometryResponse getEmptyCommandResponse()", "full_signature": "@Override public TransformGeometryResponse getEmptyCommandResponse()", "class_method_signature": "TransformGeometryCommand.getEmptyCommandResponse()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(TransformGeometryRequest request, TransformGeometryResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void execute(TransformGeometryRequest request, TransformGeometryResponse response)", "full_signature": "@Override public void execute(TransformGeometryRequest request, TransformGeometryResponse response)", "class_method_signature": "TransformGeometryCommand.execute(TransformGeometryRequest request, TransformGeometryResponse response)", "testcase": false, "constructor": false}], "file": "command/src/main/java/org/geomajas/command/geometry/TransformGeometryCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(TransformGeometryRequest request, TransformGeometryResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(TransformGeometryRequest request, TransformGeometryResponse response) throws Exception {\n\t\tCrs sourceCrs = geoService.getCrs2(request.getSourceCrs());\n\t\tCrs targetCrs = geoService.getCrs2(request.getTargetCrs());\n\t\tCrsTransform transform = geoService.getCrsTransform(sourceCrs, targetCrs);\n\n\t\tif (request.getBounds() != null) {\n\t\t\tEnvelope source = converter.toInternal(request.getBounds());\n\t\t\tEnvelope target = geoService.transform(source, transform);\n\t\t\tresponse.setBounds(converter.toDto(target));\n\t\t}\n\n\t\tif (request.getGeometry() != null) {\n\t\t\tGeometry source = converter.toInternal(request.getGeometry());\n\t\t\tGeometry target = geoService.transform(source, transform);\n\t\t\tresponse.setGeometry(converter.toDto(target));\n\t\t}\n\n\t\tif (request.getGeometryCollection() != null) {\n\t\t\tfor (org.geomajas.geometry.Geometry geometry : request.getGeometryCollection()) {\n\t\t\t\tGeometry source = converter.toInternal(geometry);\n\t\t\t\tGeometry target = geoService.transform(source, transform);\n\t\t\t\tresponse.getGeometryCollection().add(converter.toDto(target));\n\t\t\t}\n\t\t}\n\t}", "signature": "void execute(TransformGeometryRequest request, TransformGeometryResponse response)", "full_signature": "@Override public void execute(TransformGeometryRequest request, TransformGeometryResponse response)", "class_method_signature": "TransformGeometryCommand.execute(TransformGeometryRequest request, TransformGeometryResponse response)", "testcase": false, "constructor": false, "invocations": ["getCrs2", "getSourceCrs", "getCrs2", "getTargetCrs", "getCrsTransform", "getBounds", "toInternal", "getBounds", "transform", "setBounds", "toDto", "getGeometry", "toInternal", "getGeometry", "transform", "setGeometry", "toDto", "getGeometryCollection", "getGeometryCollection", "toInternal", "transform", "add", "getGeometryCollection", "toDto"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}