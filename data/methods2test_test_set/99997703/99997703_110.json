{"test_class": {"identifier": "StringIdGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/id/StringIdGeneratorTest.java"}, "test_case": {"identifier": "generateTwoStringIds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generateTwoStringIds() {\n        StringId<StringIdGeneratorTest> id1 = StringIdGenerator.getId(StringIdGeneratorTest.class);\n        StringId<StringIdGeneratorTest> id2 = StringIdGenerator.getId(StringIdGeneratorTest.class);\n        Assertions.assertNotNull(id1);\n        Assertions.assertNotNull(id2);\n        Assertions.assertNotEquals(id1, id2);\n    }", "signature": "void generateTwoStringIds()", "full_signature": "@Test public void generateTwoStringIds()", "class_method_signature": "StringIdGeneratorTest.generateTwoStringIds()", "testcase": true, "constructor": false, "invocations": ["getId", "getId", "assertNotNull", "assertNotNull", "assertNotEquals"]}, "focal_class": {"identifier": "StringIdGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getId", "parameters": "(Class<T> classForId)", "modifiers": "public static", "return": "StringId<T>", "signature": "StringId<T> getId(Class<T> classForId)", "full_signature": "public static StringId<T> getId(Class<T> classForId)", "class_method_signature": "StringIdGenerator.getId(Class<T> classForId)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/id/StringIdGenerator.java"}, "focal_method": {"identifier": "getId", "parameters": "(Class<T> classForId)", "modifiers": "public static", "return": "StringId<T>", "body": "public static <T> StringId<T> getId(Class<T> classForId) {\n        return StringId.create(Long.toString(IdGenerator.getId(classForId).id));\n    }", "signature": "StringId<T> getId(Class<T> classForId)", "full_signature": "public static StringId<T> getId(Class<T> classForId)", "class_method_signature": "StringIdGenerator.getId(Class<T> classForId)", "testcase": false, "constructor": false, "invocations": ["create", "toString", "getId"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}