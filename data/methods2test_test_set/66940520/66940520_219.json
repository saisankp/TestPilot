{"test_class": {"identifier": "DefaultReservedValueServiceTest", "superclass": "extends IntegrationTestBase", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ReservedValueService reservedValueService;", "modifier": "@Autowired\n    private", "type": "ReservedValueService", "declarator": "reservedValueService", "var_name": "reservedValueService"}, {"original_string": "@Autowired\n    private ReservedValueStore reservedValueStore;", "modifier": "@Autowired\n    private", "type": "ReservedValueStore", "declarator": "reservedValueStore", "var_name": "reservedValueStore"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private static Date future;", "modifier": "private static", "type": "Date", "declarator": "future", "var_name": "future"}, {"original_string": "private static TextPattern simpleTextPattern;", "modifier": "private static", "type": "TextPattern", "declarator": "simpleTextPattern", "var_name": "simpleTextPattern"}, {"original_string": "private static TextPattern simpleSequentialTextPattern;", "modifier": "private static", "type": "TextPattern", "declarator": "simpleSequentialTextPattern", "var_name": "simpleSequentialTextPattern"}, {"original_string": "private static TextPattern simpleRandomTextPattern;", "modifier": "private static", "type": "TextPattern", "declarator": "simpleRandomTextPattern", "var_name": "simpleRandomTextPattern"}, {"original_string": "private static TextPattern simpleStringPattern;", "modifier": "private static", "type": "TextPattern", "declarator": "simpleStringPattern", "var_name": "simpleStringPattern"}, {"original_string": "private static ReservedValue simpleReservedValue;", "modifier": "private static", "type": "ReservedValue", "declarator": "simpleReservedValue", "var_name": "simpleReservedValue"}], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/reservedvalue/DefaultReservedValueServiceTest.java"}, "test_case": {"identifier": "testUseReservationWhenNotReserved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUseReservationWhenNotReserved()\n    {\n        boolean res = reservedValueService.useReservedValue( simpleTextPattern, \"FOOBAR\" );\n\n        assertFalse( res );\n        assertEquals( 0, reservedValueStore.getCount() );\n    }", "signature": "void testUseReservationWhenNotReserved()", "full_signature": "@Test public void testUseReservationWhenNotReserved()", "class_method_signature": "DefaultReservedValueServiceTest.testUseReservationWhenNotReserved()", "testcase": true, "constructor": false, "invocations": ["useReservedValue", "assertFalse", "assertEquals", "getCount"]}, "focal_class": {"identifier": "DefaultReservedValueService", "superclass": "", "interfaces": "implements ReservedValueService", "fields": [{"original_string": "private static final long GENERATION_TIMEOUT = (1000 * 30);", "modifier": "private static final", "type": "long", "declarator": "GENERATION_TIMEOUT = (1000 * 30)", "var_name": "GENERATION_TIMEOUT"}, {"original_string": "private TextPatternService textPatternService;", "modifier": "private", "type": "TextPatternService", "declarator": "textPatternService", "var_name": "textPatternService"}, {"original_string": "private ReservedValueStore reservedValueStore;", "modifier": "private", "type": "ReservedValueStore", "declarator": "reservedValueStore", "var_name": "reservedValueStore"}, {"original_string": "private SequentialNumberCounterStore sequentialNumberCounterStore;", "modifier": "private", "type": "SequentialNumberCounterStore", "declarator": "sequentialNumberCounterStore", "var_name": "sequentialNumberCounterStore"}], "methods": [{"identifier": "DefaultReservedValueService", "parameters": "( TextPatternService textPatternService, ReservedValueStore reservedValueStore,\n        SequentialNumberCounterStore sequentialNumberCounterStore )", "modifiers": "public", "return": "", "signature": " DefaultReservedValueService( TextPatternService textPatternService, ReservedValueStore reservedValueStore,\n        SequentialNumberCounterStore sequentialNumberCounterStore )", "full_signature": "public  DefaultReservedValueService( TextPatternService textPatternService, ReservedValueStore reservedValueStore,\n        SequentialNumberCounterStore sequentialNumberCounterStore )", "class_method_signature": "DefaultReservedValueService.DefaultReservedValueService( TextPatternService textPatternService, ReservedValueStore reservedValueStore,\n        SequentialNumberCounterStore sequentialNumberCounterStore )", "testcase": false, "constructor": true}, {"identifier": "reserve", "parameters": "( TextPattern textPattern, int numberOfReservations, Map<String, String> values, Date expires )", "modifiers": "@Override @Transactional public", "return": "List<ReservedValue>", "signature": "List<ReservedValue> reserve( TextPattern textPattern, int numberOfReservations, Map<String, String> values, Date expires )", "full_signature": "@Override @Transactional public List<ReservedValue> reserve( TextPattern textPattern, int numberOfReservations, Map<String, String> values, Date expires )", "class_method_signature": "DefaultReservedValueService.reserve( TextPattern textPattern, int numberOfReservations, Map<String, String> values, Date expires )", "testcase": false, "constructor": false}, {"identifier": "useReservedValue", "parameters": "( TextPattern textPattern, String value )", "modifiers": "@Override @Transactional public", "return": "boolean", "signature": "boolean useReservedValue( TextPattern textPattern, String value )", "full_signature": "@Override @Transactional public boolean useReservedValue( TextPattern textPattern, String value )", "class_method_signature": "DefaultReservedValueService.useReservedValue( TextPattern textPattern, String value )", "testcase": false, "constructor": false}, {"identifier": "isReserved", "parameters": "( TextPattern textPattern, String value )", "modifiers": "@Override @Transactional(readOnly = true) public", "return": "boolean", "signature": "boolean isReserved( TextPattern textPattern, String value )", "full_signature": "@Override @Transactional(readOnly = true) public boolean isReserved( TextPattern textPattern, String value )", "class_method_signature": "DefaultReservedValueService.isReserved( TextPattern textPattern, String value )", "testcase": false, "constructor": false}, {"identifier": "removeExpiredReservations", "parameters": "()", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void removeExpiredReservations()", "full_signature": "@Override @Transactional public void removeExpiredReservations()", "class_method_signature": "DefaultReservedValueService.removeExpiredReservations()", "testcase": false, "constructor": false}, {"identifier": "deleteReservedValueByUid", "parameters": "( String uid )", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void deleteReservedValueByUid( String uid )", "full_signature": "@Override @Transactional public void deleteReservedValueByUid( String uid )", "class_method_signature": "DefaultReservedValueService.deleteReservedValueByUid( String uid )", "testcase": false, "constructor": false}, {"identifier": "getGeneratedSegment", "parameters": "( TextPattern textPattern )", "modifiers": "private", "return": "TextPatternSegment", "signature": "TextPatternSegment getGeneratedSegment( TextPattern textPattern )", "full_signature": "private TextPatternSegment getGeneratedSegment( TextPattern textPattern )", "class_method_signature": "DefaultReservedValueService.getGeneratedSegment( TextPattern textPattern )", "testcase": false, "constructor": false}, {"identifier": "generateValues", "parameters": "( TextPattern textPattern, String key, int numberOfValues )", "modifiers": "private", "return": "List<String>", "signature": "List<String> generateValues( TextPattern textPattern, String key, int numberOfValues )", "full_signature": "private List<String> generateValues( TextPattern textPattern, String key, int numberOfValues )", "class_method_signature": "DefaultReservedValueService.generateValues( TextPattern textPattern, String key, int numberOfValues )", "testcase": false, "constructor": false}, {"identifier": "hasEnoughValuesLeft", "parameters": "( ReservedValue reservedValue, long totalValues, int valuesRequired )", "modifiers": "private", "return": "boolean", "signature": "boolean hasEnoughValuesLeft( ReservedValue reservedValue, long totalValues, int valuesRequired )", "full_signature": "private boolean hasEnoughValuesLeft( ReservedValue reservedValue, long totalValues, int valuesRequired )", "class_method_signature": "DefaultReservedValueService.hasEnoughValuesLeft( ReservedValue reservedValue, long totalValues, int valuesRequired )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/reservedvalue/DefaultReservedValueService.java"}, "focal_method": {"identifier": "useReservedValue", "parameters": "( TextPattern textPattern, String value )", "modifiers": "@Override @Transactional public", "return": "boolean", "body": "@Override\n    @Transactional\n    public boolean useReservedValue( TextPattern textPattern, String value )\n    {\n        return reservedValueStore.useReservedValue( textPattern.getOwnerUid(), value );\n    }", "signature": "boolean useReservedValue( TextPattern textPattern, String value )", "full_signature": "@Override @Transactional public boolean useReservedValue( TextPattern textPattern, String value )", "class_method_signature": "DefaultReservedValueService.useReservedValue( TextPattern textPattern, String value )", "testcase": false, "constructor": false, "invocations": ["useReservedValue", "getOwnerUid"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}