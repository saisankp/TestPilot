{"test_class": {"identifier": "DefaultHttpSessionTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultHttpSessionTest.java"}, "test_case": {"identifier": "testGetLastAccessedTime", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetLastAccessedTime() {\n        DefaultWebApplication webApp = new DefaultWebApplication();\n        DefaultHttpSession session = new DefaultHttpSession(webApp);\n        assertTrue(session.getCreationTime() > 0);\n        assertTrue(session.getLastAccessedTime() >= session.getCreationTime());\n    }", "signature": "void testGetLastAccessedTime()", "full_signature": "@Test void testGetLastAccessedTime()", "class_method_signature": "DefaultHttpSessionTest.testGetLastAccessedTime()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getCreationTime", "assertTrue", "getLastAccessedTime", "getCreationTime"]}, "focal_class": {"identifier": "DefaultHttpSession", "superclass": "", "interfaces": "implements HttpSession", "fields": [{"original_string": "private HashMap<String, Object> attributes = new HashMap<>();", "modifier": "private", "type": "HashMap<String, Object>", "declarator": "attributes = new HashMap<>()", "var_name": "attributes"}, {"original_string": "private long creationTime;", "modifier": "private", "type": "long", "declarator": "creationTime", "var_name": "creationTime"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private long lastAccessedTime;", "modifier": "private", "type": "long", "declarator": "lastAccessedTime", "var_name": "lastAccessedTime"}, {"original_string": "private int maxInactiveInterval;", "modifier": "private", "type": "int", "declarator": "maxInactiveInterval", "var_name": "maxInactiveInterval"}, {"original_string": "private boolean newFlag;", "modifier": "private", "type": "boolean", "declarator": "newFlag", "var_name": "newFlag"}, {"original_string": "private ServletContext servletContext;", "modifier": "private", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}, {"original_string": "private HttpSessionManager sessionManager;", "modifier": "private", "type": "HttpSessionManager", "declarator": "sessionManager", "var_name": "sessionManager"}, {"original_string": "private boolean valid;", "modifier": "private", "type": "boolean", "declarator": "valid", "var_name": "valid"}], "methods": [{"identifier": "DefaultHttpSession", "parameters": "(ServletContext servletContext)", "modifiers": "public", "return": "", "signature": " DefaultHttpSession(ServletContext servletContext)", "full_signature": "public  DefaultHttpSession(ServletContext servletContext)", "class_method_signature": "DefaultHttpSession.DefaultHttpSession(ServletContext servletContext)", "testcase": false, "constructor": true}, {"identifier": "DefaultHttpSession", "parameters": "(ServletContext servletContext, String id, boolean newFlag)", "modifiers": "public", "return": "", "signature": " DefaultHttpSession(ServletContext servletContext, String id, boolean newFlag)", "full_signature": "public  DefaultHttpSession(ServletContext servletContext, String id, boolean newFlag)", "class_method_signature": "DefaultHttpSession.DefaultHttpSession(ServletContext servletContext, String id, boolean newFlag)", "testcase": false, "constructor": true}, {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getAttribute(String name)", "full_signature": "@Override public Object getAttribute(String name)", "class_method_signature": "DefaultHttpSession.getAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getAttributeNames()", "full_signature": "@Override public Enumeration<String> getAttributeNames()", "class_method_signature": "DefaultHttpSession.getAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getCreationTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCreationTime()", "full_signature": "@Override public long getCreationTime()", "class_method_signature": "DefaultHttpSession.getCreationTime()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "DefaultHttpSession.getId()", "testcase": false, "constructor": false}, {"identifier": "getLastAccessedTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastAccessedTime()", "full_signature": "@Override public long getLastAccessedTime()", "class_method_signature": "DefaultHttpSession.getLastAccessedTime()", "testcase": false, "constructor": false}, {"identifier": "getMaxInactiveInterval", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxInactiveInterval()", "full_signature": "@Override public int getMaxInactiveInterval()", "class_method_signature": "DefaultHttpSession.getMaxInactiveInterval()", "testcase": false, "constructor": false}, {"identifier": "getServletContext", "parameters": "()", "modifiers": "@Override public", "return": "ServletContext", "signature": "ServletContext getServletContext()", "full_signature": "@Override public ServletContext getServletContext()", "class_method_signature": "DefaultHttpSession.getServletContext()", "testcase": false, "constructor": false}, {"identifier": "getSessionContext", "parameters": "()", "modifiers": "@Override public", "return": "HttpSessionContext", "signature": "HttpSessionContext getSessionContext()", "full_signature": "@Override public HttpSessionContext getSessionContext()", "class_method_signature": "DefaultHttpSession.getSessionContext()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getValue(String name)", "full_signature": "@Override public Object getValue(String name)", "class_method_signature": "DefaultHttpSession.getValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getValueNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getValueNames()", "full_signature": "@Override public String[] getValueNames()", "class_method_signature": "DefaultHttpSession.getValueNames()", "testcase": false, "constructor": false}, {"identifier": "invalidate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void invalidate()", "full_signature": "@Override public void invalidate()", "class_method_signature": "DefaultHttpSession.invalidate()", "testcase": false, "constructor": false}, {"identifier": "isNew", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNew()", "full_signature": "@Override public boolean isNew()", "class_method_signature": "DefaultHttpSession.isNew()", "testcase": false, "constructor": false}, {"identifier": "putValue", "parameters": "(String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void putValue(String name, Object value)", "full_signature": "@Override public void putValue(String name, Object value)", "class_method_signature": "DefaultHttpSession.putValue(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "removeAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeAttribute(String name)", "full_signature": "@Override public void removeAttribute(String name)", "class_method_signature": "DefaultHttpSession.removeAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "removeValue", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeValue(String name)", "full_signature": "@Override public void removeValue(String name)", "class_method_signature": "DefaultHttpSession.removeValue(String name)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setAttribute(String name, Object value)", "full_signature": "@Override public void setAttribute(String name, Object value)", "class_method_signature": "DefaultHttpSession.setAttribute(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "DefaultHttpSession.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "setMaxInactiveInterval", "parameters": "(int maxInactiveInterval)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxInactiveInterval(int maxInactiveInterval)", "full_signature": "@Override public void setMaxInactiveInterval(int maxInactiveInterval)", "class_method_signature": "DefaultHttpSession.setMaxInactiveInterval(int maxInactiveInterval)", "testcase": false, "constructor": false}, {"identifier": "setNew", "parameters": "(boolean newFlag)", "modifiers": "public", "return": "void", "signature": "void setNew(boolean newFlag)", "full_signature": "public void setNew(boolean newFlag)", "class_method_signature": "DefaultHttpSession.setNew(boolean newFlag)", "testcase": false, "constructor": false}, {"identifier": "setSessionManager", "parameters": "(HttpSessionManager sessionManager)", "modifiers": "public", "return": "void", "signature": "void setSessionManager(HttpSessionManager sessionManager)", "full_signature": "public void setSessionManager(HttpSessionManager sessionManager)", "class_method_signature": "DefaultHttpSession.setSessionManager(HttpSessionManager sessionManager)", "testcase": false, "constructor": false}, {"identifier": "verifyValid", "parameters": "(String methodName)", "modifiers": "private", "return": "void", "signature": "void verifyValid(String methodName)", "full_signature": "private void verifyValid(String methodName)", "class_method_signature": "DefaultHttpSession.verifyValid(String methodName)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultHttpSession.java"}, "focal_method": {"identifier": "getLastAccessedTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getLastAccessedTime() {\n        verifyValid(\"getLastAccessedTime\");\n        return this.lastAccessedTime;\n    }", "signature": "long getLastAccessedTime()", "full_signature": "@Override public long getLastAccessedTime()", "class_method_signature": "DefaultHttpSession.getLastAccessedTime()", "testcase": false, "constructor": false, "invocations": ["verifyValid"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}