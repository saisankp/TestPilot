{"test_class": {"identifier": "RsaKemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Charset UTF_8 = Charset.forName(\"UTF-8\");", "modifier": "private static final", "type": "Charset", "declarator": "UTF_8 = Charset.forName(\"UTF-8\")", "var_name": "UTF_8"}], "file": "java_src/src/test/java/com/google/crypto/tink/hybrid/subtle/RsaKemTest.java"}, "test_case": {"identifier": "generateSecret", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void generateSecret() throws Exception {\n    BigInteger max = new BigInteger(2048, new Random());\n    int maxSizeInBytes = RsaKem.bigIntSizeInBytes(max);\n\n    Set<String> secrets = new TreeSet<>();\n    for (int i = 0; i < 100; i++) {\n      byte[] secret = RsaKem.generateSecret(max);\n      BigInteger secretBigInt = new BigInteger(1, secret);\n      secrets.add(new String(secret, UTF_8));\n\n      assertThat(secret).hasLength(maxSizeInBytes);\n      assertThat(secretBigInt.signum()).isEqualTo(1);\n      assertThat(secretBigInt.compareTo(max)).isLessThan(0);\n    }\n    assertThat(secrets).hasSize(100);\n  }", "signature": "void generateSecret()", "full_signature": "@Test public void generateSecret()", "class_method_signature": "RsaKemTest.generateSecret()", "testcase": true, "constructor": false, "invocations": ["bigIntSizeInBytes", "generateSecret", "add", "hasLength", "assertThat", "isEqualTo", "assertThat", "signum", "isLessThan", "assertThat", "compareTo", "hasSize", "assertThat"]}, "focal_class": {"identifier": "RsaKem", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final byte[] EMPTY_AAD = new byte[0];", "modifier": "static final", "type": "byte[]", "declarator": "EMPTY_AAD = new byte[0]", "var_name": "EMPTY_AAD"}, {"original_string": "static final int MIN_RSA_KEY_LENGTH_BITS = 2048;", "modifier": "static final", "type": "int", "declarator": "MIN_RSA_KEY_LENGTH_BITS = 2048", "var_name": "MIN_RSA_KEY_LENGTH_BITS"}], "methods": [{"identifier": "RsaKem", "parameters": "()", "modifiers": "private", "return": "", "signature": " RsaKem()", "full_signature": "private  RsaKem()", "class_method_signature": "RsaKem.RsaKem()", "testcase": false, "constructor": true}, {"identifier": "validateRsaModulus", "parameters": "(BigInteger mod)", "modifiers": "static", "return": "void", "signature": "void validateRsaModulus(BigInteger mod)", "full_signature": "static void validateRsaModulus(BigInteger mod)", "class_method_signature": "RsaKem.validateRsaModulus(BigInteger mod)", "testcase": false, "constructor": false}, {"identifier": "bigIntSizeInBytes", "parameters": "(BigInteger mod)", "modifiers": "static", "return": "int", "signature": "int bigIntSizeInBytes(BigInteger mod)", "full_signature": "static int bigIntSizeInBytes(BigInteger mod)", "class_method_signature": "RsaKem.bigIntSizeInBytes(BigInteger mod)", "testcase": false, "constructor": false}, {"identifier": "bigIntToByteArray", "parameters": "(BigInteger bigInt, int size)", "modifiers": "static", "return": "byte[]", "signature": "byte[] bigIntToByteArray(BigInteger bigInt, int size)", "full_signature": "static byte[] bigIntToByteArray(BigInteger bigInt, int size)", "class_method_signature": "RsaKem.bigIntToByteArray(BigInteger bigInt, int size)", "testcase": false, "constructor": false}, {"identifier": "generateSecret", "parameters": "(BigInteger max)", "modifiers": "static", "return": "byte[]", "signature": "byte[] generateSecret(BigInteger max)", "full_signature": "static byte[] generateSecret(BigInteger max)", "class_method_signature": "RsaKem.generateSecret(BigInteger max)", "testcase": false, "constructor": false}, {"identifier": "generateRsaKeyPair", "parameters": "(int keySize)", "modifiers": "static", "return": "KeyPair", "signature": "KeyPair generateRsaKeyPair(int keySize)", "full_signature": "static KeyPair generateRsaKeyPair(int keySize)", "class_method_signature": "RsaKem.generateRsaKeyPair(int keySize)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/hybrid/subtle/RsaKem.java"}, "focal_method": {"identifier": "generateSecret", "parameters": "(BigInteger max)", "modifiers": "static", "return": "byte[]", "body": "static byte[] generateSecret(BigInteger max) {\n    int maxSizeInBytes = bigIntSizeInBytes(max);\n    Random rand = new SecureRandom();\n    BigInteger r;\n    do {\n      r = new BigInteger(max.bitLength(), rand);\n    } while (r.signum() <= 0 || r.compareTo(max) >= 0);\n\n    return bigIntToByteArray(r, maxSizeInBytes);\n  }", "signature": "byte[] generateSecret(BigInteger max)", "full_signature": "static byte[] generateSecret(BigInteger max)", "class_method_signature": "RsaKem.generateSecret(BigInteger max)", "testcase": false, "constructor": false, "invocations": ["bigIntSizeInBytes", "bitLength", "signum", "compareTo", "bigIntToByteArray"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}