{"test_class": {"identifier": "LdapSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "InMemoryDirectoryServer inMemoryDirectoryServer = null;", "modifier": "", "type": "InMemoryDirectoryServer", "declarator": "inMemoryDirectoryServer = null", "var_name": "inMemoryDirectoryServer"}, {"original_string": "String baseDNs = \"dc=ibissource,dc=org\";", "modifier": "", "type": "String", "declarator": "baseDNs = \"dc=ibissource,dc=org\"", "var_name": "baseDNs"}], "file": "core/src/test/java/nl/nn/adapterframework/ldap/LdapSenderTest.java"}, "test_case": {"identifier": "init", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void init() throws SAXException, IOException,\n\t\t\tConfigurationException, SenderException, LDAPException, TimeOutException {\n\t\tcompareXML(\"Ldap/expected/init.xml\", getTree());\n\t}", "signature": "void init()", "full_signature": "@Test public void init()", "class_method_signature": "LdapSenderTest.init()", "testcase": true, "constructor": false, "invocations": ["compareXML", "getTree"]}, "focal_class": {"identifier": "LdapSender", "superclass": "extends JNDIBase", "interfaces": "implements ISenderWithParameters", "fields": [{"original_string": "private String FILTER = \"filterExpression\";", "modifier": "private", "type": "String", "declarator": "FILTER = \"filterExpression\"", "var_name": "FILTER"}, {"original_string": "private String ENTRYNAME = \"entryName\";", "modifier": "private", "type": "String", "declarator": "ENTRYNAME = \"entryName\"", "var_name": "ENTRYNAME"}, {"original_string": "private int searchTimeout=20000;", "modifier": "private", "type": "int", "declarator": "searchTimeout=20000", "var_name": "searchTimeout"}, {"original_string": "private static final String INITIAL_CONTEXT_FACTORY =\"com.sun.jndi.ldap.LdapCtxFactory\";", "modifier": "private static final", "type": "String", "declarator": "INITIAL_CONTEXT_FACTORY =\"com.sun.jndi.ldap.LdapCtxFactory\"", "var_name": "INITIAL_CONTEXT_FACTORY"}, {"original_string": "public static final String LDAP_ERROR_MAGIC_STRING=\"[LDAP: error code\";", "modifier": "public static final", "type": "String", "declarator": "LDAP_ERROR_MAGIC_STRING=\"[LDAP: error code\"", "var_name": "LDAP_ERROR_MAGIC_STRING"}, {"original_string": "public static final String OPERATION_READ   = \"read\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_READ   = \"read\"", "var_name": "OPERATION_READ"}, {"original_string": "public static final String OPERATION_CREATE = \"create\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_CREATE = \"create\"", "var_name": "OPERATION_CREATE"}, {"original_string": "public static final String OPERATION_UPDATE = \"update\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_UPDATE = \"update\"", "var_name": "OPERATION_UPDATE"}, {"original_string": "public static final String OPERATION_DELETE = \"delete\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_DELETE = \"delete\"", "var_name": "OPERATION_DELETE"}, {"original_string": "public static final String OPERATION_SEARCH = \"search\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_SEARCH = \"search\"", "var_name": "OPERATION_SEARCH"}, {"original_string": "public static final String OPERATION_DEEP_SEARCH = \"deepSearch\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_DEEP_SEARCH = \"deepSearch\"", "var_name": "OPERATION_DEEP_SEARCH"}, {"original_string": "public static final String OPERATION_SUB_CONTEXTS = \"getSubContexts\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_SUB_CONTEXTS = \"getSubContexts\"", "var_name": "OPERATION_SUB_CONTEXTS"}, {"original_string": "public static final String OPERATION_GET_TREE = \"getTree\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_GET_TREE = \"getTree\"", "var_name": "OPERATION_GET_TREE"}, {"original_string": "public static final String OPERATION_CHALLENGE = \"challenge\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_CHALLENGE = \"challenge\"", "var_name": "OPERATION_CHALLENGE"}, {"original_string": "public static final String OPERATION_CHANGE_UNICODE_PWD = \"changeUnicodePwd\";", "modifier": "public static final", "type": "String", "declarator": "OPERATION_CHANGE_UNICODE_PWD = \"changeUnicodePwd\"", "var_name": "OPERATION_CHANGE_UNICODE_PWD"}, {"original_string": "public static final String MANIPULATION_ENTRY = \"entry\";", "modifier": "public static final", "type": "String", "declarator": "MANIPULATION_ENTRY = \"entry\"", "var_name": "MANIPULATION_ENTRY"}, {"original_string": "public static final String MANIPULATION_ATTRIBUTE = \"attribute\";", "modifier": "public static final", "type": "String", "declarator": "MANIPULATION_ATTRIBUTE = \"attribute\"", "var_name": "MANIPULATION_ATTRIBUTE"}, {"original_string": "private static final String DEFAULT_RESULT = \"<LdapResult>Success</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT = \"<LdapResult>Success</LdapResult>\"", "var_name": "DEFAULT_RESULT"}, {"original_string": "private static final String DEFAULT_RESULT_READ = \"<LdapResult>No such object</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_READ = \"<LdapResult>No such object</LdapResult>\"", "var_name": "DEFAULT_RESULT_READ"}, {"original_string": "private static final String DEFAULT_RESULT_SEARCH = \"<LdapResult>Object not found</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_SEARCH = \"<LdapResult>Object not found</LdapResult>\"", "var_name": "DEFAULT_RESULT_SEARCH"}, {"original_string": "private static final String DEFAULT_RESULT_DELETE = \"<LdapResult>Delete Success - Never Existed</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_DELETE = \"<LdapResult>Delete Success - Never Existed</LdapResult>\"", "var_name": "DEFAULT_RESULT_DELETE"}, {"original_string": "private static final String DEFAULT_RESULT_CREATE_OK = \"<LdapResult>Create Success - Already There</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CREATE_OK = \"<LdapResult>Create Success - Already There</LdapResult>\"", "var_name": "DEFAULT_RESULT_CREATE_OK"}, {"original_string": "private static final String DEFAULT_RESULT_CREATE_NOK = \"<LdapResult>Create FAILED - Entry with given name already exists</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CREATE_NOK = \"<LdapResult>Create FAILED - Entry with given name already exists</LdapResult>\"", "var_name": "DEFAULT_RESULT_CREATE_NOK"}, {"original_string": "private static final String DEFAULT_RESULT_UPDATE_NOK = \"<LdapResult>Update FAILED</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_UPDATE_NOK = \"<LdapResult>Update FAILED</LdapResult>\"", "var_name": "DEFAULT_RESULT_UPDATE_NOK"}, {"original_string": "private static final String DEFAULT_RESULT_CHALLENGE_OK = DEFAULT_RESULT;", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CHALLENGE_OK = DEFAULT_RESULT", "var_name": "DEFAULT_RESULT_CHALLENGE_OK"}, {"original_string": "private static final String DEFAULT_RESULT_CHALLENGE_NOK = \"<LdapResult>Challenge FAILED - Invalid credentials</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CHALLENGE_NOK = \"<LdapResult>Challenge FAILED - Invalid credentials</LdapResult>\"", "var_name": "DEFAULT_RESULT_CHALLENGE_NOK"}, {"original_string": "private static final String DEFAULT_RESULT_CHANGE_UNICODE_PWD_OK = DEFAULT_RESULT;", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CHANGE_UNICODE_PWD_OK = DEFAULT_RESULT", "var_name": "DEFAULT_RESULT_CHANGE_UNICODE_PWD_OK"}, {"original_string": "private static final String DEFAULT_RESULT_CHANGE_UNICODE_PWD_NOK = \"<LdapResult>Change unicodePwd FAILED - Invalid old and/or new password</LdapResult>\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RESULT_CHANGE_UNICODE_PWD_NOK = \"<LdapResult>Change unicodePwd FAILED - Invalid old and/or new password</LdapResult>\"", "var_name": "DEFAULT_RESULT_CHANGE_UNICODE_PWD_NOK"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String operation = OPERATION_READ;", "modifier": "private", "type": "String", "declarator": "operation = OPERATION_READ", "var_name": "operation"}, {"original_string": "private String manipulationSubject = MANIPULATION_ATTRIBUTE;", "modifier": "private", "type": "String", "declarator": "manipulationSubject = MANIPULATION_ATTRIBUTE", "var_name": "manipulationSubject"}, {"original_string": "private String ldapProviderURL;", "modifier": "private", "type": "String", "declarator": "ldapProviderURL", "var_name": "ldapProviderURL"}, {"original_string": "private String attributesToReturn;", "modifier": "private", "type": "String", "declarator": "attributesToReturn", "var_name": "attributesToReturn"}, {"original_string": "private boolean usePooling=true;", "modifier": "private", "type": "boolean", "declarator": "usePooling=true", "var_name": "usePooling"}, {"original_string": "private String errorSessionKey=\"errorReason\";", "modifier": "private", "type": "String", "declarator": "errorSessionKey=\"errorReason\"", "var_name": "errorSessionKey"}, {"original_string": "private int maxEntriesReturned=0;", "modifier": "private", "type": "int", "declarator": "maxEntriesReturned=0", "var_name": "maxEntriesReturned"}, {"original_string": "private boolean unicodePwd = false;", "modifier": "private", "type": "boolean", "declarator": "unicodePwd = false", "var_name": "unicodePwd"}, {"original_string": "private boolean replyNotFound = false;", "modifier": "private", "type": "boolean", "declarator": "replyNotFound = false", "var_name": "replyNotFound"}, {"original_string": "protected ParameterList paramList = null;", "modifier": "protected", "type": "ParameterList", "declarator": "paramList = null", "var_name": "paramList"}, {"original_string": "private boolean principalParameterFound = false;", "modifier": "private", "type": "boolean", "declarator": "principalParameterFound = false", "var_name": "principalParameterFound"}, {"original_string": "private Hashtable jndiEnv=null;", "modifier": "private", "type": "Hashtable", "declarator": "jndiEnv=null", "var_name": "jndiEnv"}], "methods": [{"identifier": "LdapSender", "parameters": "()", "modifiers": "public", "return": "", "signature": " LdapSender()", "full_signature": "public  LdapSender()", "class_method_signature": "LdapSender.LdapSender()", "testcase": false, "constructor": true}, {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "LdapSender.configure()", "testcase": false, "constructor": false}, {"identifier": "storeLdapException", "parameters": "(Throwable t, IPipeLineSession session)", "modifiers": "public", "return": "void", "signature": "void storeLdapException(Throwable t, IPipeLineSession session)", "full_signature": "public void storeLdapException(Throwable t, IPipeLineSession session)", "class_method_signature": "LdapSender.storeLdapException(Throwable t, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "getAttributesReturnedParameter", "parameters": "()", "modifiers": "private", "return": "String[]", "signature": "String[] getAttributesReturnedParameter()", "full_signature": "private String[] getAttributesReturnedParameter()", "class_method_signature": "LdapSender.getAttributesReturnedParameter()", "testcase": false, "constructor": false}, {"identifier": "splitCommaSeparatedString", "parameters": "(String toSeparate)", "modifiers": "private", "return": "String[]", "signature": "String[] splitCommaSeparatedString(String toSeparate)", "full_signature": "private String[] splitCommaSeparatedString(String toSeparate)", "class_method_signature": "LdapSender.splitCommaSeparatedString(String toSeparate)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "LdapSender.open()", "testcase": false, "constructor": false}, {"identifier": "isSynchronous", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSynchronous()", "full_signature": "@Override public boolean isSynchronous()", "class_method_signature": "LdapSender.isSynchronous()", "testcase": false, "constructor": false}, {"identifier": "performOperationRead", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "String", "signature": "String performOperationRead(String entryName, IPipeLineSession session, Map paramValueMap)", "full_signature": "private String performOperationRead(String entryName, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.performOperationRead(String entryName, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "performOperationUpdate", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "modifiers": "private", "return": "String", "signature": "String performOperationUpdate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "full_signature": "private String performOperationUpdate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "class_method_signature": "LdapSender.performOperationUpdate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "testcase": false, "constructor": false}, {"identifier": "performOperationCreate", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "modifiers": "private", "return": "String", "signature": "String performOperationCreate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "full_signature": "private String performOperationCreate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "class_method_signature": "LdapSender.performOperationCreate(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "testcase": false, "constructor": false}, {"identifier": "performOperationDelete", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "modifiers": "private", "return": "String", "signature": "String performOperationDelete(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "full_signature": "private String performOperationDelete(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "class_method_signature": "LdapSender.performOperationDelete(String entryName, IPipeLineSession session, Map paramValueMap, Attributes attrs)", "testcase": false, "constructor": false}, {"identifier": "performOperationSearch", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap, String filterExpression, int scope)", "modifiers": "private", "return": "String", "signature": "String performOperationSearch(String entryName, IPipeLineSession session, Map paramValueMap, String filterExpression, int scope)", "full_signature": "private String performOperationSearch(String entryName, IPipeLineSession session, Map paramValueMap, String filterExpression, int scope)", "class_method_signature": "LdapSender.performOperationSearch(String entryName, IPipeLineSession session, Map paramValueMap, String filterExpression, int scope)", "testcase": false, "constructor": false}, {"identifier": "performOperationGetSubContexts", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "String", "signature": "String performOperationGetSubContexts(String entryName, IPipeLineSession session, Map paramValueMap)", "full_signature": "private String performOperationGetSubContexts(String entryName, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.performOperationGetSubContexts(String entryName, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "performOperationGetTree", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "String", "signature": "String performOperationGetTree(String entryName, IPipeLineSession session, Map paramValueMap)", "full_signature": "private String performOperationGetTree(String entryName, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.performOperationGetTree(String entryName, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "performOperationChallenge", "parameters": "(String principal, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "String", "signature": "String performOperationChallenge(String principal, IPipeLineSession session, Map paramValueMap)", "full_signature": "private String performOperationChallenge(String principal, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.performOperationChallenge(String principal, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "performOperationChangeUnicodePwd", "parameters": "(String entryName, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "String", "signature": "String performOperationChangeUnicodePwd(String entryName, IPipeLineSession session, Map paramValueMap)", "full_signature": "private String performOperationChangeUnicodePwd(String entryName, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.performOperationChangeUnicodePwd(String entryName, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "performOperation", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "public", "return": "String", "signature": "String performOperation(Message message, IPipeLineSession session)", "full_signature": "public String performOperation(Message message, IPipeLineSession session)", "class_method_signature": "LdapSender.performOperation(Message message, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "getTree", "parameters": "(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "XmlBuilder", "signature": "XmlBuilder getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "full_signature": "private XmlBuilder getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "subContextsToXml", "parameters": "(String entryName, String[] subs, DirContext dirContext)", "modifiers": "private", "return": "XmlBuilder", "signature": "XmlBuilder subContextsToXml(String entryName, String[] subs, DirContext dirContext)", "full_signature": "private XmlBuilder subContextsToXml(String entryName, String[] subs, DirContext dirContext)", "class_method_signature": "LdapSender.subContextsToXml(String entryName, String[] subs, DirContext dirContext)", "testcase": false, "constructor": false}, {"identifier": "getSubContextList", "parameters": "(DirContext parentContext, String relativeContext, IPipeLineSession session)", "modifiers": "public", "return": "String[]", "signature": "String[] getSubContextList(DirContext parentContext, String relativeContext, IPipeLineSession session)", "full_signature": "public String[] getSubContextList(DirContext parentContext, String relativeContext, IPipeLineSession session)", "class_method_signature": "LdapSender.getSubContextList(DirContext parentContext, String relativeContext, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "parseAttributesFromMessage", "parameters": "(Message message)", "modifiers": "private", "return": "Attributes", "signature": "Attributes parseAttributesFromMessage(Message message)", "full_signature": "private Attributes parseAttributesFromMessage(Message message)", "class_method_signature": "LdapSender.parseAttributesFromMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "@Override public", "return": "Message", "signature": "Message sendMessage(Message message, IPipeLineSession session)", "full_signature": "@Override public Message sendMessage(Message message, IPipeLineSession session)", "class_method_signature": "LdapSender.sendMessage(Message message, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "removeValuesFromAttributes", "parameters": "(Attributes input)", "modifiers": "protected", "return": "Attributes", "signature": "Attributes removeValuesFromAttributes(Attributes input)", "full_signature": "protected Attributes removeValuesFromAttributes(Attributes input)", "class_method_signature": "LdapSender.removeValuesFromAttributes(Attributes input)", "testcase": false, "constructor": false}, {"identifier": "loopkupDirContext", "parameters": "(Map paramValueMap)", "modifiers": "protected synchronized", "return": "DirContext", "signature": "DirContext loopkupDirContext(Map paramValueMap)", "full_signature": "protected synchronized DirContext loopkupDirContext(Map paramValueMap)", "class_method_signature": "LdapSender.loopkupDirContext(Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "getDirContext", "parameters": "(Map paramValueMap)", "modifiers": "protected", "return": "DirContext", "signature": "DirContext getDirContext(Map paramValueMap)", "full_signature": "protected DirContext getDirContext(Map paramValueMap)", "class_method_signature": "LdapSender.getDirContext(Map paramValueMap)", "testcase": false, "constructor": false}, {"identifier": "closeDirContext", "parameters": "(DirContext dirContext)", "modifiers": "protected", "return": "void", "signature": "void closeDirContext(DirContext dirContext)", "full_signature": "protected void closeDirContext(DirContext dirContext)", "class_method_signature": "LdapSender.closeDirContext(DirContext dirContext)", "testcase": false, "constructor": false}, {"identifier": "attributesToXml", "parameters": "(Attributes atts)", "modifiers": "protected", "return": "XmlBuilder", "signature": "XmlBuilder attributesToXml(Attributes atts)", "full_signature": "protected XmlBuilder attributesToXml(Attributes atts)", "class_method_signature": "LdapSender.attributesToXml(Attributes atts)", "testcase": false, "constructor": false}, {"identifier": "searchResultsToXml", "parameters": "(NamingEnumeration entries)", "modifiers": "private", "return": "XmlBuilder", "signature": "XmlBuilder searchResultsToXml(NamingEnumeration entries)", "full_signature": "private XmlBuilder searchResultsToXml(NamingEnumeration entries)", "class_method_signature": "LdapSender.searchResultsToXml(NamingEnumeration entries)", "testcase": false, "constructor": false}, {"identifier": "encodeUnicodePwd", "parameters": "(Object value)", "modifiers": "private", "return": "byte[]", "signature": "byte[] encodeUnicodePwd(Object value)", "full_signature": "private byte[] encodeUnicodePwd(Object value)", "class_method_signature": "LdapSender.encodeUnicodePwd(Object value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(Parameter p)", "modifiers": "@Override public", "return": "void", "signature": "void addParameter(Parameter p)", "full_signature": "@Override public void addParameter(Parameter p)", "class_method_signature": "LdapSender.addParameter(Parameter p)", "testcase": false, "constructor": false}, {"identifier": "getParameterList", "parameters": "()", "modifiers": "@Override public", "return": "ParameterList", "signature": "ParameterList getParameterList()", "full_signature": "@Override public ParameterList getParameterList()", "class_method_signature": "LdapSender.getParameterList()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@IbisDoc({\"name of the sender\", \"\"}) @Override public", "return": "void", "signature": "void setName(String name)", "full_signature": "@IbisDoc({\"name of the sender\", \"\"}) @Override public void setName(String name)", "class_method_signature": "LdapSender.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "LdapSender.getName()", "testcase": false, "constructor": false}, {"identifier": "setOperation", "parameters": "(String string)", "modifiers": "@IbisDoc({\"specifies operation to perform. Must be one of <ul><li><code>read</code>: read the contents of an entry</li><li><code>create</code>: create an attribute or an entry</li><li><code>update</code>: update an attribute or an entry</li><li><code>delete</code>: delete an attribute or an entry</li><li><code>search</code>: search for an entry in the direct children of the specified root</li><li><code>deepSearch</code>: search for an entry in the complete tree below the specified root</li><li><code>getSubContexts</code>: get a list of the direct children of the specifed root</li><li><code>getTree</code>: get a copy of the complete tree below the specified root</li><li><code>challenge</code>: check username and password against LDAP specifying principal and credential using parameters</li><li><code>changeUnicodePwd</code>: typical user change-password operation (one of the two methods to modify the unicodePwd attribute in AD (http://support.microsoft.com/kb/263991))</li></ul>\", \"read\"}) public", "return": "void", "signature": "void setOperation(String string)", "full_signature": "@IbisDoc({\"specifies operation to perform. Must be one of <ul><li><code>read</code>: read the contents of an entry</li><li><code>create</code>: create an attribute or an entry</li><li><code>update</code>: update an attribute or an entry</li><li><code>delete</code>: delete an attribute or an entry</li><li><code>search</code>: search for an entry in the direct children of the specified root</li><li><code>deepSearch</code>: search for an entry in the complete tree below the specified root</li><li><code>getSubContexts</code>: get a list of the direct children of the specifed root</li><li><code>getTree</code>: get a copy of the complete tree below the specified root</li><li><code>challenge</code>: check username and password against LDAP specifying principal and credential using parameters</li><li><code>changeUnicodePwd</code>: typical user change-password operation (one of the two methods to modify the unicodePwd attribute in AD (http://support.microsoft.com/kb/263991))</li></ul>\", \"read\"}) public void setOperation(String string)", "class_method_signature": "LdapSender.setOperation(String string)", "testcase": false, "constructor": false}, {"identifier": "getOperation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOperation()", "full_signature": "public String getOperation()", "class_method_signature": "LdapSender.getOperation()", "testcase": false, "constructor": false}, {"identifier": "setLdapProviderURL", "parameters": "(String string)", "modifiers": "@IbisDoc({\"url to context to search in, e.g. 'ldap://edsnlm01.group.intranet/ou=people, o=ing' to search in te people group of ing cds. used to overwrite the providerurl specified in jmsrealm.\", \"\"}) public", "return": "void", "signature": "void setLdapProviderURL(String string)", "full_signature": "@IbisDoc({\"url to context to search in, e.g. 'ldap://edsnlm01.group.intranet/ou=people, o=ing' to search in te people group of ing cds. used to overwrite the providerurl specified in jmsrealm.\", \"\"}) public void setLdapProviderURL(String string)", "class_method_signature": "LdapSender.setLdapProviderURL(String string)", "testcase": false, "constructor": false}, {"identifier": "getLdapProviderURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLdapProviderURL()", "full_signature": "public String getLdapProviderURL()", "class_method_signature": "LdapSender.getLdapProviderURL()", "testcase": false, "constructor": false}, {"identifier": "setManipulationSubject", "parameters": "(String string)", "modifiers": "@IbisDoc({\"specifies subject to perform operation on. must be one of 'entry' or 'attribute'\", \"attribute\"}) public", "return": "void", "signature": "void setManipulationSubject(String string)", "full_signature": "@IbisDoc({\"specifies subject to perform operation on. must be one of 'entry' or 'attribute'\", \"attribute\"}) public void setManipulationSubject(String string)", "class_method_signature": "LdapSender.setManipulationSubject(String string)", "testcase": false, "constructor": false}, {"identifier": "getManipulationSubject", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getManipulationSubject()", "full_signature": "public String getManipulationSubject()", "class_method_signature": "LdapSender.getManipulationSubject()", "testcase": false, "constructor": false}, {"identifier": "setAttributesToReturn", "parameters": "(String string)", "modifiers": "@IbisDoc({\"comma separated list of attributes to return. when no are attributes specified, all the attributes from the object read are returned.\", \"<i>all attributes</i>\"}) public", "return": "void", "signature": "void setAttributesToReturn(String string)", "full_signature": "@IbisDoc({\"comma separated list of attributes to return. when no are attributes specified, all the attributes from the object read are returned.\", \"<i>all attributes</i>\"}) public void setAttributesToReturn(String string)", "class_method_signature": "LdapSender.setAttributesToReturn(String string)", "testcase": false, "constructor": false}, {"identifier": "getAttributesToReturn", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAttributesToReturn()", "full_signature": "public String getAttributesToReturn()", "class_method_signature": "LdapSender.getAttributesToReturn()", "testcase": false, "constructor": false}, {"identifier": "setUsePooling", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"specifies whether connection pooling is used or not\", \"true when principal not set as parameter, false otherwise\"}) public", "return": "void", "signature": "void setUsePooling(boolean b)", "full_signature": "@IbisDoc({\"specifies whether connection pooling is used or not\", \"true when principal not set as parameter, false otherwise\"}) public void setUsePooling(boolean b)", "class_method_signature": "LdapSender.setUsePooling(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isUsePooling", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUsePooling()", "full_signature": "public boolean isUsePooling()", "class_method_signature": "LdapSender.isUsePooling()", "testcase": false, "constructor": false}, {"identifier": "setSearchTimeout", "parameters": "(int i)", "modifiers": "@IbisDoc({\"specifies the time (in ms) that is spent searching for results for operation search\", \"20000 ms\"}) public", "return": "void", "signature": "void setSearchTimeout(int i)", "full_signature": "@IbisDoc({\"specifies the time (in ms) that is spent searching for results for operation search\", \"20000 ms\"}) public void setSearchTimeout(int i)", "class_method_signature": "LdapSender.setSearchTimeout(int i)", "testcase": false, "constructor": false}, {"identifier": "getSearchTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSearchTimeout()", "full_signature": "public int getSearchTimeout()", "class_method_signature": "LdapSender.getSearchTimeout()", "testcase": false, "constructor": false}, {"identifier": "setErrorSessionKey", "parameters": "(String string)", "modifiers": "@IbisDoc({\"key of session variable used to store cause of errors\", \"errorreason\"}) public", "return": "void", "signature": "void setErrorSessionKey(String string)", "full_signature": "@IbisDoc({\"key of session variable used to store cause of errors\", \"errorreason\"}) public void setErrorSessionKey(String string)", "class_method_signature": "LdapSender.setErrorSessionKey(String string)", "testcase": false, "constructor": false}, {"identifier": "getErrorSessionKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorSessionKey()", "full_signature": "public String getErrorSessionKey()", "class_method_signature": "LdapSender.getErrorSessionKey()", "testcase": false, "constructor": false}, {"identifier": "setMaxEntriesReturned", "parameters": "(int i)", "modifiers": "@IbisDoc({\"the maximum number of entries to be returned by a search query, or 0 for unlimited\", \"<i>0 (unlimited)</i>\"}) public", "return": "void", "signature": "void setMaxEntriesReturned(int i)", "full_signature": "@IbisDoc({\"the maximum number of entries to be returned by a search query, or 0 for unlimited\", \"<i>0 (unlimited)</i>\"}) public void setMaxEntriesReturned(int i)", "class_method_signature": "LdapSender.setMaxEntriesReturned(int i)", "testcase": false, "constructor": false}, {"identifier": "getMaxEntriesReturned", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxEntriesReturned()", "full_signature": "public int getMaxEntriesReturned()", "class_method_signature": "LdapSender.getMaxEntriesReturned()", "testcase": false, "constructor": false}, {"identifier": "setUnicodePwd", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"when true the attributes passed by the input xml are scanned for an attribute with id unicodepwd, when found the value of this attribute will be encoded as required by active directory (a utf-16 encoded unicode string containing the password surrounded by quotation marks) before sending it to the ldap server\", \"false\"}) public", "return": "void", "signature": "void setUnicodePwd(boolean b)", "full_signature": "@IbisDoc({\"when true the attributes passed by the input xml are scanned for an attribute with id unicodepwd, when found the value of this attribute will be encoded as required by active directory (a utf-16 encoded unicode string containing the password surrounded by quotation marks) before sending it to the ldap server\", \"false\"}) public void setUnicodePwd(boolean b)", "class_method_signature": "LdapSender.setUnicodePwd(boolean b)", "testcase": false, "constructor": false}, {"identifier": "getUnicodePwd", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getUnicodePwd()", "full_signature": "public boolean getUnicodePwd()", "class_method_signature": "LdapSender.getUnicodePwd()", "testcase": false, "constructor": false}, {"identifier": "setReplyNotFound", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"(only used when <code>operation=search/deepsearch</code>) when <code>true</code> the xml '&lt;ldapresult&gt;object not found&lt;/ldapresult&gt;' is returned instead of the partialresultexception 'unprocessed continuation reference(s)'\", \"false\"}) public", "return": "void", "signature": "void setReplyNotFound(boolean b)", "full_signature": "@IbisDoc({\"(only used when <code>operation=search/deepsearch</code>) when <code>true</code> the xml '&lt;ldapresult&gt;object not found&lt;/ldapresult&gt;' is returned instead of the partialresultexception 'unprocessed continuation reference(s)'\", \"false\"}) public void setReplyNotFound(boolean b)", "class_method_signature": "LdapSender.setReplyNotFound(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isReplyNotFound", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReplyNotFound()", "full_signature": "public boolean isReplyNotFound()", "class_method_signature": "LdapSender.isReplyNotFound()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java"}, "focal_method": {"identifier": "getTree", "parameters": "(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "modifiers": "private", "return": "XmlBuilder", "body": "private XmlBuilder getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)\n\t{\n\t\tXmlBuilder contextElem = new XmlBuilder(\"context\");\n\t\tcontextElem.addAttribute(\"name\", context);\n\t\t\n\t\tString[] subCtxList = getSubContextList(parentContext, context, session);\n\t\ttry\t{\n\t\t\tif (subCtxList.length == 0) {\n\t\t\t\tXmlBuilder attrs = attributesToXml(parentContext.getAttributes(context, getAttributesReturnedParameter()));\n\t\t\t\tcontextElem.addSubElement(attrs);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int i = 0; i < subCtxList.length; i++)\n\t\t\t\t{\n\t\t\t\t\tcontextElem.addSubElement( getTree((DirContext)parentContext.lookup(context), subCtxList[i], session, paramValueMap) );\n\t\t\t\t}\n\t\t\t\tcontextElem.addSubElement( attributesToXml(parentContext.getAttributes(context, getAttributesReturnedParameter())));\n\t\t\t}\n\n\t\t} catch (NamingException e) {\n\t\t\tstoreLdapException(e, session);\n\t\t\tlog.error(\"Exception in operation [\" + getOperation()+ \"]: \", e);\n\t\t}\n\n\t\treturn contextElem;\n\t}", "signature": "XmlBuilder getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "full_signature": "private XmlBuilder getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "class_method_signature": "LdapSender.getTree(DirContext parentContext, String context, IPipeLineSession session, Map paramValueMap)", "testcase": false, "constructor": false, "invocations": ["addAttribute", "getSubContextList", "attributesToXml", "getAttributes", "getAttributesReturnedParameter", "addSubElement", "addSubElement", "getTree", "lookup", "addSubElement", "attributesToXml", "getAttributes", "getAttributesReturnedParameter", "storeLdapException", "error", "getOperation"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}