{"test_class": {"identifier": "StudentMappingByMartikelNumberTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StudentMappingByMartikelNumber studentMappingByMartikelNumberTestObject;", "modifier": "", "type": "StudentMappingByMartikelNumber", "declarator": "studentMappingByMartikelNumberTestObject", "var_name": "studentMappingByMartikelNumberTestObject"}, {"original_string": "BaseSecurity baseSecurityMock;", "modifier": "", "type": "BaseSecurity", "declarator": "baseSecurityMock", "var_name": "baseSecurityMock"}, {"original_string": "private Student studentMock;", "modifier": "private", "type": "Student", "declarator": "studentMock", "var_name": "studentMock"}, {"original_string": "private Identity identityMockOne;", "modifier": "private", "type": "Identity", "declarator": "identityMockOne", "var_name": "identityMockOne"}, {"original_string": "private Identity identityMockTwo;", "modifier": "private", "type": "Identity", "declarator": "identityMockTwo", "var_name": "identityMockTwo"}], "file": "olat7.8/src/test/java/org/olat/lms/core/course/campus/impl/mapper/StudentMappingByMartikelNumberTest.java"}, "test_case": {"identifier": "tryToMap_foundMoreThanOneMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToMap_foundMoreThanOneMapping() {\n        List<Identity> twoIdentities = new ArrayList<Identity>();\n        twoIdentities.add(identityMockOne);\n        twoIdentities.add(identityMockTwo);\n        when(\n                baseSecurityMock.getVisibleIdentitiesByPowerSearch(anyString(), anyMap(), anyBoolean(), any(SecurityGroup[].class),\n                        any(PermissionOnResourceable[].class), any(String[].class), any(Date.class), any(Date.class))).thenReturn(twoIdentities);\n\n        Identity mappedIdentity = studentMappingByMartikelNumberTestObject.tryToMap(studentMock);\n        assertNull(\"Must return null, when more than one mapping exists\", mappedIdentity);\n    }", "signature": "void tryToMap_foundMoreThanOneMapping()", "full_signature": "@Test public void tryToMap_foundMoreThanOneMapping()", "class_method_signature": "StudentMappingByMartikelNumberTest.tryToMap_foundMoreThanOneMapping()", "testcase": true, "constructor": false, "invocations": ["add", "add", "thenReturn", "when", "getVisibleIdentitiesByPowerSearch", "anyString", "anyMap", "anyBoolean", "any", "any", "any", "any", "any", "tryToMap", "assertNull"]}, "focal_class": {"identifier": "StudentMappingByMartikelNumber", "superclass": "extends AbstractMappingByInstitutionalIdentifier", "interfaces": "", "fields": [], "methods": [{"identifier": "tryToMap", "parameters": "(Student student)", "modifiers": "public", "return": "Identity", "signature": "Identity tryToMap(Student student)", "full_signature": "public Identity tryToMap(Student student)", "class_method_signature": "StudentMappingByMartikelNumber.tryToMap(Student student)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/core/course/campus/impl/mapper/StudentMappingByMartikelNumber.java"}, "focal_method": {"identifier": "tryToMap", "parameters": "(Student student)", "modifiers": "public", "return": "Identity", "body": "public Identity tryToMap(Student student) {\n        Identity identity = tryToMap(UserConstants.INSTITUTIONAL_MATRICULATION_NUMBER, student.getRegistrationNr());\n        if (identity == null) {\n            identity = tryToMap(UserConstants.INSTITUTIONAL_MATRICULATION_NUMBER, StringUtils.remove(student.getRegistrationNr(), \"-\"));\n        }\n        return identity;\n    }", "signature": "Identity tryToMap(Student student)", "full_signature": "public Identity tryToMap(Student student)", "class_method_signature": "StudentMappingByMartikelNumber.tryToMap(Student student)", "testcase": false, "constructor": false, "invocations": ["tryToMap", "getRegistrationNr", "tryToMap", "remove", "getRegistrationNr"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}