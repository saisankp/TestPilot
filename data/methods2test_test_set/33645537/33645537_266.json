{"test_class": {"identifier": "PalindromesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Palindromes palindromes;", "modifier": "private", "type": "Palindromes", "declarator": "palindromes", "var_name": "palindromes"}], "file": "algs/src/test/java/com/github/pedrovgs/problem26/PalindromesTest.java"}, "test_case": {"identifier": "shouldReturnTrueIfInputStringIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnTrueIfInputStringIsEmpty(){\n    assertTrue(palindromes.evaluate(\"\"));\n  }", "signature": "void shouldReturnTrueIfInputStringIsEmpty()", "full_signature": "@Test public void shouldReturnTrueIfInputStringIsEmpty()", "class_method_signature": "PalindromesTest.shouldReturnTrueIfInputStringIsEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "evaluate"]}, "focal_class": {"identifier": "Palindromes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "evaluate", "parameters": "(String word)", "modifiers": "public", "return": "boolean", "signature": "boolean evaluate(String word)", "full_signature": "public boolean evaluate(String word)", "class_method_signature": "Palindromes.evaluate(String word)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem26/Palindromes.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(String word)", "modifiers": "public", "return": "boolean", "body": "public boolean evaluate(String word) {\n    if (word == null) {\n      throw new IllegalArgumentException(\"You can't pass a null String as input.\");\n    }\n    boolean result = true;\n    int length = word.length();\n    for (int i = 0; i < length / 2; i++) {\n      if (word.charAt(i) != word.charAt(length - 1 - i)) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }", "signature": "boolean evaluate(String word)", "full_signature": "public boolean evaluate(String word)", "class_method_signature": "Palindromes.evaluate(String word)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "charAt"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}