{"test_class": {"identifier": "SeyrenRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_SEYREN_URL = \"coucou\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_SEYREN_URL = \"coucou\"", "var_name": "DEFAULT_SEYREN_URL"}, {"original_string": "@InjectMocks\n    private final SeyrenRepository repository = new SeyrenRepository();", "modifier": "@InjectMocks\n    private final", "type": "SeyrenRepository", "declarator": "repository = new SeyrenRepository()", "var_name": "repository"}, {"original_string": "@Mock\n    private RestTemplate restTemplate;", "modifier": "@Mock\n    private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}], "file": "services/src/test/java/com/vsct/supervision/notification/repository/SeyrenRepositoryTest.java"}, "test_case": {"identifier": "testGetAlarmOK", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAlarmOK() throws Exception {\n        Alarm alarm = repository.getAlarm(TestUtils.DEFAULT_ALARM_ID);\n\n        assertEquals(TestUtils.DEFAULT_ALARM_ID, alarm.getId());\n    }", "signature": "void testGetAlarmOK()", "full_signature": "@Test public void testGetAlarmOK()", "class_method_signature": "SeyrenRepositoryTest.testGetAlarmOK()", "testcase": true, "constructor": false, "invocations": ["getAlarm", "assertEquals", "getId"]}, "focal_class": {"identifier": "SeyrenRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String API_ALARMS = \"/api/checks\";", "modifier": "public static final", "type": "String", "declarator": "API_ALARMS = \"/api/checks\"", "var_name": "API_ALARMS"}, {"original_string": "public static final String API_ALERTS = \"/api/alerts\";", "modifier": "public static final", "type": "String", "declarator": "API_ALERTS = \"/api/alerts\"", "var_name": "API_ALERTS"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SeyrenRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SeyrenRepository.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    protected RestTemplate restTemplate;", "modifier": "@Autowired\n    protected", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}, {"original_string": "@Value(\"${seyren.host}\")\n    protected String seyrenUrl;", "modifier": "@Value(\"${seyren.host}\")\n    protected", "type": "String", "declarator": "seyrenUrl", "var_name": "seyrenUrl"}], "methods": [{"identifier": "setRestTemplate", "parameters": "(final RestTemplate restTemplate)", "modifiers": "public", "return": "void", "signature": "void setRestTemplate(final RestTemplate restTemplate)", "full_signature": "public void setRestTemplate(final RestTemplate restTemplate)", "class_method_signature": "SeyrenRepository.setRestTemplate(final RestTemplate restTemplate)", "testcase": false, "constructor": false}, {"identifier": "setSeyrenUrl", "parameters": "(final String seyrenUrl)", "modifiers": "public", "return": "void", "signature": "void setSeyrenUrl(final String seyrenUrl)", "full_signature": "public void setSeyrenUrl(final String seyrenUrl)", "class_method_signature": "SeyrenRepository.setSeyrenUrl(final String seyrenUrl)", "testcase": false, "constructor": false}, {"identifier": "getAlarm", "parameters": "(final String id)", "modifiers": "public", "return": "Alarm", "signature": "Alarm getAlarm(final String id)", "full_signature": "public Alarm getAlarm(final String id)", "class_method_signature": "SeyrenRepository.getAlarm(final String id)", "testcase": false, "constructor": false}, {"identifier": "getAllAlarms", "parameters": "()", "modifiers": "public", "return": "Alarm.Alarms", "signature": "Alarm.Alarms getAllAlarms()", "full_signature": "public Alarm.Alarms getAllAlarms()", "class_method_signature": "SeyrenRepository.getAllAlarms()", "testcase": false, "constructor": false}, {"identifier": "addAlarm", "parameters": "(final Alarm alarm)", "modifiers": "public", "return": "void", "signature": "void addAlarm(final Alarm alarm)", "full_signature": "public void addAlarm(final Alarm alarm)", "class_method_signature": "SeyrenRepository.addAlarm(final Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "updateAlarm", "parameters": "(final Alarm alarm)", "modifiers": "public", "return": "void", "signature": "void updateAlarm(final Alarm alarm)", "full_signature": "public void updateAlarm(final Alarm alarm)", "class_method_signature": "SeyrenRepository.updateAlarm(final Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "deleteAlarm", "parameters": "(final String alarmId)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteAlarm(final String alarmId)", "full_signature": "public boolean deleteAlarm(final String alarmId)", "class_method_signature": "SeyrenRepository.deleteAlarm(final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "addSubscription", "parameters": "(final Subscription subscription, final String alarmId)", "modifiers": "public", "return": "void", "signature": "void addSubscription(final Subscription subscription, final String alarmId)", "full_signature": "public void addSubscription(final Subscription subscription, final String alarmId)", "class_method_signature": "SeyrenRepository.addSubscription(final Subscription subscription, final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "updateSubscription", "parameters": "(final Subscription subscription, final String alarmId)", "modifiers": "public", "return": "void", "signature": "void updateSubscription(final Subscription subscription, final String alarmId)", "full_signature": "public void updateSubscription(final Subscription subscription, final String alarmId)", "class_method_signature": "SeyrenRepository.updateSubscription(final Subscription subscription, final String alarmId)", "testcase": false, "constructor": false}, {"identifier": "deleteSubscription", "parameters": "(final String alarmId, final String subscriptionId)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteSubscription(final String alarmId, final String subscriptionId)", "full_signature": "public boolean deleteSubscription(final String alarmId, final String subscriptionId)", "class_method_signature": "SeyrenRepository.deleteSubscription(final String alarmId, final String subscriptionId)", "testcase": false, "constructor": false}, {"identifier": "getAlerts", "parameters": "(final int start, final int items)", "modifiers": "public", "return": "Alert.Alerts", "signature": "Alert.Alerts getAlerts(final int start, final int items)", "full_signature": "public Alert.Alerts getAlerts(final int start, final int items)", "class_method_signature": "SeyrenRepository.getAlerts(final int start, final int items)", "testcase": false, "constructor": false}, {"identifier": "getAlarmAlerts", "parameters": "(final String alarmId, final int start, final int items)", "modifiers": "public", "return": "Alert.Alerts", "signature": "Alert.Alerts getAlarmAlerts(final String alarmId, final int start, final int items)", "full_signature": "public Alert.Alerts getAlarmAlerts(final String alarmId, final int start, final int items)", "class_method_signature": "SeyrenRepository.getAlarmAlerts(final String alarmId, final int start, final int items)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/vsct/supervision/notification/repository/SeyrenRepository.java"}, "focal_method": {"identifier": "getAlarm", "parameters": "(final String id)", "modifiers": "public", "return": "Alarm", "body": "public Alarm getAlarm(final String id) {\n        try {\n            return restTemplate.getForObject(seyrenUrl + API_ALARMS + \"/\" + id, Alarm.class);\n        } catch (final HttpStatusCodeException exception) {\n            throw new SeyrenException(\"getAlarm\", exception.getStatusCode().value());\n        } catch (final ResourceAccessException exception) {\n            throw new CerebroException(ErrorCode.ALARM_UNKNOWN, \"Alarm with id '\" + id + \"' not found\", exception);\n        }\n    }", "signature": "Alarm getAlarm(final String id)", "full_signature": "public Alarm getAlarm(final String id)", "class_method_signature": "SeyrenRepository.getAlarm(final String id)", "testcase": false, "constructor": false, "invocations": ["getForObject", "value", "getStatusCode"]}, "repository": {"repo_id": 78868092, "url": "https://github.com/voyages-sncf-technologies/cerebro", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 98, "size": 660, "license": "licensed"}}