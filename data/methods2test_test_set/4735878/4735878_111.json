{"test_class": {"identifier": "HaloTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/common/HaloTest.java"}, "test_case": {"identifier": "testGetChildren", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testGetChildren() throws Exception {\n                Halo h = new Halo();\n                assertTrue(h.getChildren().size() == 2);\n        }", "signature": "void testGetChildren()", "full_signature": "@Test public void testGetChildren()", "class_method_signature": "HaloTest.testGetChildren()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "size", "getChildren"]}, "focal_class": {"identifier": "Halo", "superclass": "extends AbstractSymbolizerNode", "interfaces": "implements  UomNode, FillNode", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Halo.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Halo.class)", "var_name": "LOGGER"}, {"original_string": "private static final I18n I18N = I18nFactory.getI18n(Halo.class);", "modifier": "private static final", "type": "I18n", "declarator": "I18N = I18nFactory.getI18n(Halo.class)", "var_name": "I18N"}, {"original_string": "public static final double DEFAULT_RADIUS = 1.0;", "modifier": "public static final", "type": "double", "declarator": "DEFAULT_RADIUS = 1.0", "var_name": "DEFAULT_RADIUS"}, {"original_string": "private Uom uom;", "modifier": "private", "type": "Uom", "declarator": "uom", "var_name": "uom"}, {"original_string": "private RealParameter radius;", "modifier": "private", "type": "RealParameter", "declarator": "radius", "var_name": "radius"}, {"original_string": "private Fill fill;", "modifier": "private", "type": "Fill", "declarator": "fill", "var_name": "fill"}], "methods": [{"identifier": "Halo", "parameters": "()", "modifiers": "public", "return": "", "signature": " Halo()", "full_signature": "public  Halo()", "class_method_signature": "Halo.Halo()", "testcase": false, "constructor": true}, {"identifier": "Halo", "parameters": "(Fill fill, RealParameter radius)", "modifiers": "public", "return": "", "signature": " Halo(Fill fill, RealParameter radius)", "full_signature": "public  Halo(Fill fill, RealParameter radius)", "class_method_signature": "Halo.Halo(Fill fill, RealParameter radius)", "testcase": false, "constructor": true}, {"identifier": "Halo", "parameters": "(HaloType halo)", "modifiers": "public", "return": "", "signature": " Halo(HaloType halo)", "full_signature": "public  Halo(HaloType halo)", "class_method_signature": "Halo.Halo(HaloType halo)", "testcase": false, "constructor": true}, {"identifier": "getUom", "parameters": "()", "modifiers": "@Override public", "return": "Uom", "signature": "Uom getUom()", "full_signature": "@Override public Uom getUom()", "class_method_signature": "Halo.getUom()", "testcase": false, "constructor": false}, {"identifier": "getOwnUom", "parameters": "()", "modifiers": "@Override public", "return": "Uom", "signature": "Uom getOwnUom()", "full_signature": "@Override public Uom getOwnUom()", "class_method_signature": "Halo.getOwnUom()", "testcase": false, "constructor": false}, {"identifier": "setUom", "parameters": "(Uom uom)", "modifiers": "@Override public", "return": "void", "signature": "void setUom(Uom uom)", "full_signature": "@Override public void setUom(Uom uom)", "class_method_signature": "Halo.setUom(Uom uom)", "testcase": false, "constructor": false}, {"identifier": "setFill", "parameters": "(Fill fill)", "modifiers": "@Override public", "return": "void", "signature": "void setFill(Fill fill)", "full_signature": "@Override public void setFill(Fill fill)", "class_method_signature": "Halo.setFill(Fill fill)", "testcase": false, "constructor": false}, {"identifier": "getFill", "parameters": "()", "modifiers": "@Override public", "return": "Fill", "signature": "Fill getFill()", "full_signature": "@Override public Fill getFill()", "class_method_signature": "Halo.getFill()", "testcase": false, "constructor": false}, {"identifier": "getRadius", "parameters": "()", "modifiers": "public", "return": "RealParameter", "signature": "RealParameter getRadius()", "full_signature": "public RealParameter getRadius()", "class_method_signature": "Halo.getRadius()", "testcase": false, "constructor": false}, {"identifier": "setRadius", "parameters": "(RealParameter radius)", "modifiers": "public", "return": "void", "signature": "void setRadius(RealParameter radius)", "full_signature": "public void setRadius(RealParameter radius)", "class_method_signature": "Halo.setRadius(RealParameter radius)", "testcase": false, "constructor": false}, {"identifier": "getHaloRadius", "parameters": "(Map<String,Object> map, MapTransform mt)", "modifiers": "public", "return": "double", "signature": "double getHaloRadius(Map<String,Object> map, MapTransform mt)", "full_signature": "public double getHaloRadius(Map<String,Object> map, MapTransform mt)", "class_method_signature": "Halo.getHaloRadius(Map<String,Object> map, MapTransform mt)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Shape shp, MapTransform mt, boolean substract)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Shape shp, MapTransform mt, boolean substract)", "full_signature": "public void draw(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Shape shp, MapTransform mt, boolean substract)", "class_method_signature": "Halo.draw(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Shape shp, MapTransform mt, boolean substract)", "testcase": false, "constructor": false}, {"identifier": "drawCircle", "parameters": "(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Arc2D shp, Shape atShp, MapTransform mt, boolean substract, \n            ViewBox viewBox, AffineTransform at)", "modifiers": "public", "return": "void", "signature": "void drawCircle(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Arc2D shp, Shape atShp, MapTransform mt, boolean substract, \n            ViewBox viewBox, AffineTransform at)", "full_signature": "public void drawCircle(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Arc2D shp, Shape atShp, MapTransform mt, boolean substract, \n            ViewBox viewBox, AffineTransform at)", "class_method_signature": "Halo.drawCircle(Graphics2D g2, Map<String,Object> map, boolean selected,\n            Arc2D shp, Shape atShp, MapTransform mt, boolean substract, \n            ViewBox viewBox, AffineTransform at)", "testcase": false, "constructor": false}, {"identifier": "fillHalo", "parameters": "(Shape halo, Shape initialShp, Graphics2D g2, \n                Map<String,Object> map, boolean selected,MapTransform mt, boolean substract)", "modifiers": "private", "return": "void", "signature": "void fillHalo(Shape halo, Shape initialShp, Graphics2D g2, \n                Map<String,Object> map, boolean selected,MapTransform mt, boolean substract)", "full_signature": "private void fillHalo(Shape halo, Shape initialShp, Graphics2D g2, \n                Map<String,Object> map, boolean selected,MapTransform mt, boolean substract)", "class_method_signature": "Halo.fillHalo(Shape halo, Shape initialShp, Graphics2D g2, \n                Map<String,Object> map, boolean selected,MapTransform mt, boolean substract)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<SymbolizerNode>", "signature": "List<SymbolizerNode> getChildren()", "full_signature": "@Override public List<SymbolizerNode> getChildren()", "class_method_signature": "Halo.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getJAXBType", "parameters": "()", "modifiers": "public", "return": "HaloType", "signature": "HaloType getJAXBType()", "full_signature": "public HaloType getJAXBType()", "class_method_signature": "Halo.getJAXBType()", "testcase": false, "constructor": false}, {"identifier": "getDefaultFill", "parameters": "()", "modifiers": "private", "return": "Fill", "signature": "Fill getDefaultFill()", "full_signature": "private Fill getDefaultFill()", "class_method_signature": "Halo.getDefaultFill()", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/common/Halo.java"}, "focal_method": {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<SymbolizerNode>", "body": "@Override\n    public List<SymbolizerNode> getChildren() {\n            List<SymbolizerNode> ls = new ArrayList<SymbolizerNode>();\n            ls.add(radius);\n            ls.add(fill);\n            return ls;\n    }", "signature": "List<SymbolizerNode> getChildren()", "full_signature": "@Override public List<SymbolizerNode> getChildren()", "class_method_signature": "Halo.getChildren()", "testcase": false, "constructor": false, "invocations": ["add", "add"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}