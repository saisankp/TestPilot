{"test_class": {"identifier": "TagHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private JsonHelper jsonHelper;", "modifier": "@Mock\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@InjectMocks\n    private TagHelper tagHelper;", "modifier": "@InjectMocks\n    private", "type": "TagHelper", "declarator": "tagHelper", "var_name": "tagHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/TagHelperTest.java"}, "test_case": {"identifier": "testSafeObjectMapperWriteValueAsStringJsonParseException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSafeObjectMapperWriteValueAsStringJsonParseException()\n    {\n        // Create a tag entity.\n        final TagEntity tagEntity = tagDaoTestHelper.createTagEntity(TAG_TYPE, TAG_CODE, TAG_DISPLAY_NAME, TAG_DESCRIPTION);\n\n        // Mock the external calls.\n        when(jsonHelper.objectToJson(any()))\n            .thenThrow(new IllegalStateException(new JsonParseException(\"Failed to Parse\", new JsonLocation(\"SRC\", 100L, 1, 2))));\n\n        // Call the method being tested.\n        String result = tagHelper.safeObjectMapperWriteValueAsString(tagEntity);\n\n        // Verify the external calls.\n        verify(jsonHelper).objectToJson(any());\n        verifyNoMoreInteractions(alternateKeyHelper, jsonHelper);\n\n        // Validate the returned object.\n        assertEquals(\"\", result);\n    }", "signature": "void testSafeObjectMapperWriteValueAsStringJsonParseException()", "full_signature": "@Test public void testSafeObjectMapperWriteValueAsStringJsonParseException()", "class_method_signature": "TagHelperTest.testSafeObjectMapperWriteValueAsStringJsonParseException()", "testcase": true, "constructor": false, "invocations": ["createTagEntity", "thenThrow", "when", "objectToJson", "any", "safeObjectMapperWriteValueAsString", "objectToJson", "verify", "any", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "TagHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TagHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TagHelper.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "methods": [{"identifier": "executeFunctionForTagEntities", "parameters": "(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "modifiers": "public", "return": "void", "signature": "void executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "full_signature": "public void executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "class_method_signature": "TagHelper.executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "testcase": false, "constructor": false}, {"identifier": "safeObjectMapperWriteValueAsString", "parameters": "(final TagEntity tagEntity)", "modifiers": "public", "return": "String", "signature": "String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "full_signature": "public String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "class_method_signature": "TagHelper.safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "testcase": false, "constructor": false}, {"identifier": "validateTagKey", "parameters": "(TagKey tagKey)", "modifiers": "public", "return": "void", "signature": "void validateTagKey(TagKey tagKey)", "full_signature": "public void validateTagKey(TagKey tagKey)", "class_method_signature": "TagHelper.validateTagKey(TagKey tagKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/TagHelper.java"}, "focal_method": {"identifier": "safeObjectMapperWriteValueAsString", "parameters": "(final TagEntity tagEntity)", "modifiers": "public", "return": "String", "body": "public String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)\n    {\n        String jsonString = \"\";\n\n        try\n        {\n            // Convert the tag entity to a JSON string\n            jsonString = jsonHelper.objectToJson(tagEntity);\n        }\n        catch (IllegalStateException illegalStateException)\n        {\n            LOGGER.warn(\"Could not parse tagEntity id={\" + tagEntity.getId() + \"} into JSON string. \", illegalStateException);\n        }\n\n        return jsonString;\n    }", "signature": "String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "full_signature": "public String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "class_method_signature": "TagHelper.safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "testcase": false, "constructor": false, "invocations": ["objectToJson", "warn", "getId"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}