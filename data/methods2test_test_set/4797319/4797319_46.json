{"test_class": {"identifier": "TestPofNodesMetadata", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ASTQueryContainer ast;", "modifier": "private", "type": "ASTQueryContainer", "declarator": "ast", "var_name": "ast"}], "file": "recommendation-servlet/src/test/java/org/sindice/analytics/queryProcessor/TestPofNodesMetadata.java"}, "test_case": {"identifier": "testPOFkeyword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPOFkeyword()\n  throws TokenMgrError, ParseException, MalformedQueryException,\n  VisitorException {\n    final String q = \"SELECT * {\\n ?s a rdf< }\";\n    ast = SyntaxTreeBuilder.parseQuery(q);\n    POFMetadata meta = PofNodesMetadata.retrieve(ast);\n\n    assertMetadata(meta.pofNode, SyntaxTreeBuilder.Keyword, \"rdf\");\n    assertCursor(meta.pofNode, 1, 1, 7, 9);\n    assertCursor(meta.pofClassAttribute, 1, 1, 5, 5);\n  }", "signature": "void testPOFkeyword()", "full_signature": "@Test public void testPOFkeyword()", "class_method_signature": "TestPofNodesMetadata.testPOFkeyword()", "testcase": true, "constructor": false, "invocations": ["parseQuery", "retrieve", "assertMetadata", "assertCursor", "assertCursor"]}, "focal_class": {"identifier": "PofNodesMetadata", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PofNodesMetadata", "parameters": "()", "modifiers": "private", "return": "", "signature": " PofNodesMetadata()", "full_signature": "private  PofNodesMetadata()", "class_method_signature": "PofNodesMetadata.PofNodesMetadata()", "testcase": false, "constructor": true}, {"identifier": "retrieve", "parameters": "(ASTQueryContainer ast)", "modifiers": "public static", "return": "POFMetadata", "signature": "POFMetadata retrieve(ASTQueryContainer ast)", "full_signature": "public static POFMetadata retrieve(ASTQueryContainer ast)", "class_method_signature": "PofNodesMetadata.retrieve(ASTQueryContainer ast)", "testcase": false, "constructor": false}], "file": "recommendation-servlet/src/main/java/org/sindice/analytics/queryProcessor/PofNodesMetadata.java"}, "focal_method": {"identifier": "retrieve", "parameters": "(ASTQueryContainer ast)", "modifiers": "public static", "return": "POFMetadata", "body": "public static POFMetadata retrieve(ASTQueryContainer ast)\n  throws VisitorException, MalformedQueryException {\n    final POFMetadata meta = new POFMetadata();\n    RetrievePofASTMetadata retrieve = new RetrievePofASTMetadata();\n\n    List<ASTPrefixDecl> prefixDeclList = ast.getPrefixDeclList();\n\n    // Build a prefix --> IRI map\n    final Map<String, String> prefixes = new LinkedHashMap<String, String>();\n    for (ASTPrefixDecl prefixDecl : prefixDeclList) {\n      String prefix = prefixDecl.getPrefix();\n      String iri = prefixDecl.getIRI().getValue();\n\n      prefixes.put(prefix, iri);\n    }\n\n    retrieve.visit(ast, prefixes);\n    meta.pofNode = retrieve.pofNode;\n    meta.pofClassAttribute = retrieve.pofClassAttribute;\n    return meta;\n  }", "signature": "POFMetadata retrieve(ASTQueryContainer ast)", "full_signature": "public static POFMetadata retrieve(ASTQueryContainer ast)", "class_method_signature": "PofNodesMetadata.retrieve(ASTQueryContainer ast)", "testcase": false, "constructor": false, "invocations": ["getPrefixDeclList", "getPrefix", "getValue", "getIRI", "put", "visit"]}, "repository": {"repo_id": 4797319, "url": "https://github.com/sindice/sparqled", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 33, "size": 12885, "license": "licensed"}}