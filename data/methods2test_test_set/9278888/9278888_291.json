{"test_class": {"identifier": "MessagingTracingTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Tracing tracing = mock(Tracing.class);", "modifier": "", "type": "Tracing", "declarator": "tracing = mock(Tracing.class)", "var_name": "tracing"}], "file": "instrumentation/messaging/src/test/java/brave/messaging/MessagingTracingTest.java"}, "test_case": {"identifier": "toBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void toBuilder() {\n    MessagingTracing messagingTracing = MessagingTracing.newBuilder(tracing).build();\n\n    assertThat(messagingTracing.toBuilder().build())\n      .usingRecursiveComparison()\n      .isEqualTo(messagingTracing);\n\n    assertThat(messagingTracing.toBuilder().producerSampler(neverSample()).build())\n      .usingRecursiveComparison()\n      .isEqualTo(MessagingTracing.newBuilder(tracing).producerSampler(neverSample()).build());\n  }", "signature": "void toBuilder()", "full_signature": "@Test public void toBuilder()", "class_method_signature": "MessagingTracingTest.toBuilder()", "testcase": true, "constructor": false, "invocations": ["build", "newBuilder", "isEqualTo", "usingRecursiveComparison", "assertThat", "build", "toBuilder", "isEqualTo", "usingRecursiveComparison", "assertThat", "build", "producerSampler", "toBuilder", "neverSample", "build", "producerSampler", "newBuilder", "neverSample"]}, "focal_class": {"identifier": "MessagingTracing", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "static final AtomicReference<MessagingTracing> CURRENT = new AtomicReference<>();", "modifier": "static final", "type": "AtomicReference<MessagingTracing>", "declarator": "CURRENT = new AtomicReference<>()", "var_name": "CURRENT"}, {"original_string": "final Tracing tracing;", "modifier": "final", "type": "Tracing", "declarator": "tracing", "var_name": "tracing"}, {"original_string": "final SamplerFunction<MessagingRequest> producerSampler;", "modifier": "final", "type": "SamplerFunction<MessagingRequest>", "declarator": "producerSampler", "var_name": "producerSampler"}, {"original_string": "final SamplerFunction<MessagingRequest> consumerSampler;", "modifier": "final", "type": "SamplerFunction<MessagingRequest>", "declarator": "consumerSampler", "var_name": "consumerSampler"}], "methods": [{"identifier": "create", "parameters": "(Tracing tracing)", "modifiers": "public static", "return": "MessagingTracing", "signature": "MessagingTracing create(Tracing tracing)", "full_signature": "public static MessagingTracing create(Tracing tracing)", "class_method_signature": "MessagingTracing.create(Tracing tracing)", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "(Tracing tracing)", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder(Tracing tracing)", "full_signature": "public static Builder newBuilder(Tracing tracing)", "class_method_signature": "MessagingTracing.newBuilder(Tracing tracing)", "testcase": false, "constructor": false}, {"identifier": "tracing", "parameters": "()", "modifiers": "public", "return": "Tracing", "signature": "Tracing tracing()", "full_signature": "public Tracing tracing()", "class_method_signature": "MessagingTracing.tracing()", "testcase": false, "constructor": false}, {"identifier": "producerSampler", "parameters": "()", "modifiers": "public", "return": "SamplerFunction<MessagingRequest>", "signature": "SamplerFunction<MessagingRequest> producerSampler()", "full_signature": "public SamplerFunction<MessagingRequest> producerSampler()", "class_method_signature": "MessagingTracing.producerSampler()", "testcase": false, "constructor": false}, {"identifier": "consumerSampler", "parameters": "()", "modifiers": "public", "return": "SamplerFunction<MessagingRequest>", "signature": "SamplerFunction<MessagingRequest> consumerSampler()", "full_signature": "public SamplerFunction<MessagingRequest> consumerSampler()", "class_method_signature": "MessagingTracing.consumerSampler()", "testcase": false, "constructor": false}, {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "MessagingTracing.toBuilder()", "testcase": false, "constructor": false}, {"identifier": "MessagingTracing", "parameters": "(Builder builder)", "modifiers": "", "return": "", "signature": " MessagingTracing(Builder builder)", "full_signature": "  MessagingTracing(Builder builder)", "class_method_signature": "MessagingTracing.MessagingTracing(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "current", "parameters": "()", "modifiers": "@Nullable public static", "return": "MessagingTracing", "signature": "MessagingTracing current()", "full_signature": "@Nullable public static MessagingTracing current()", "class_method_signature": "MessagingTracing.current()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MessagingTracing.close()", "testcase": false, "constructor": false}], "file": "instrumentation/messaging/src/main/java/brave/messaging/MessagingTracing.java"}, "focal_method": {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "body": "public Builder toBuilder() {\n    return new Builder(this);\n  }", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "MessagingTracing.toBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}