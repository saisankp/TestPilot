{"test_class": {"identifier": "PairTest", "superclass": "", "interfaces": "", "fields": [], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/utils/PairTest.java"}, "test_case": {"identifier": "testEqualsObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEqualsObject() {\n    Pair<String, Integer> p1 = new Pair<String, Integer>(\"a\", 123123);\n    Pair<String, Integer> p2 = new Pair<String, Integer>(\"a\", 123123);\n    assertTrue(p1.equals(p2));\n    p1 = new Pair<String, Integer>(\"a\", null);\n    p2 = new Pair<String, Integer>(\"a\", 123123);\n    assertFalse(p1.equals(p2));\n    p1 = new Pair<String, Integer>(\"a\", 123123);\n    p2 = new Pair<String, Integer>(\"a\", null);\n    assertFalse(p1.equals(p2));\n    p1 = new Pair<String, Integer>(null, 123123);\n    p2 = new Pair<String, Integer>(\"a\", 123123);\n    assertFalse(p1.equals(p2));\n    p1 = new Pair<String, Integer>(\"a\", 123123);\n    p2 = new Pair<String, Integer>(null, 123123);\n    assertFalse(p1.equals(p2));\n    p1 = new Pair<String, Integer>(null, 123123);\n    p2 = null;\n    assertFalse(p1.equals(p2));\n    p1 = new Pair<String, Integer>(null, 123123);\n    p2 = new Pair<String, Integer>(null, 123123);\n    Map<Pair<String, Integer>, Integer> map = new HashMap<Pair<String, Integer>, Integer>();\n    map.put(p1, 1);\n    assertTrue(map.containsKey(p2));\n    assertTrue(p1.equals(p2));\n    p1 = new Pair<String, Integer>(\"a\", null);\n    p2 = new Pair<String, Integer>(\"a\", null);\n    assertTrue(p1.equals(p2));\n    assertTrue(p1.equals(p1));\n    assertFalse(p1.equals(new Integer(1)));\n  }", "signature": "void testEqualsObject()", "full_signature": "@Test public void testEqualsObject()", "class_method_signature": "PairTest.testEqualsObject()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "put", "assertTrue", "containsKey", "assertTrue", "equals", "assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "Pair", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1398609631703707002L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1398609631703707002L", "var_name": "serialVersionUID"}, {"original_string": "public L left;", "modifier": "public", "type": "L", "declarator": "left", "var_name": "left"}, {"original_string": "public R right;", "modifier": "public", "type": "R", "declarator": "right", "var_name": "right"}], "methods": [{"identifier": "Pair", "parameters": "(L l, R r)", "modifiers": "public", "return": "", "signature": " Pair(L l, R r)", "full_signature": "public  Pair(L l, R r)", "class_method_signature": "Pair.Pair(L l, R r)", "testcase": false, "constructor": true}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Pair.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Pair.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Pair.toString()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/Pair.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Pair<?, ?> other = (Pair<?, ?>) obj;\n    if (left == null) {\n      if (other.left != null) {\n        return false;\n      }\n    } else if (!left.equals(other.left)) {\n      return false;\n    }\n    if (right == null) {\n      if (other.right != null) {\n        return false;\n      }\n    } else if (!right.equals(other.right)) {\n      return false;\n    }\n    return true;\n  }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Pair.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}