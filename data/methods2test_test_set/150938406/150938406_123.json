{"test_class": {"identifier": "OnlineLogLikelihoodTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/common/clustering/lda/OnlineLogLikelihoodTest.java"}, "test_case": {"identifier": "testSum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSum() {\n\t\tDenseMatrix gammad = new DenseMatrix(5, 1, new double[] {-0.7, 0.8, 0.9, 1.0, 1.1});\n\t\tdouble sum = OnlineLogLikelihood.logSumExp(gammad);\n\t\tSystem.out.println(sum);\n\t}", "signature": "void testSum()", "full_signature": "@Test public void testSum()", "class_method_signature": "OnlineLogLikelihoodTest.testSum()", "testcase": true, "constructor": false, "invocations": ["logSumExp", "println"]}, "focal_class": {"identifier": "OnlineLogLikelihood", "superclass": "extends ComputeFunction", "interfaces": "", "fields": [{"original_string": "private double beta;", "modifier": "private", "type": "double", "declarator": "beta", "var_name": "beta"}, {"original_string": "private int numTopic;", "modifier": "private", "type": "int", "declarator": "numTopic", "var_name": "numTopic"}, {"original_string": "private int numIter;", "modifier": "private", "type": "int", "declarator": "numIter", "var_name": "numIter"}], "methods": [{"identifier": "OnlineLogLikelihood", "parameters": "(double beta, int numTopic, int numIter)", "modifiers": "public", "return": "", "signature": " OnlineLogLikelihood(double beta, int numTopic, int numIter)", "full_signature": "public  OnlineLogLikelihood(double beta, int numTopic, int numIter)", "class_method_signature": "OnlineLogLikelihood.OnlineLogLikelihood(double beta, int numTopic, int numIter)", "testcase": false, "constructor": true}, {"identifier": "logLikelihood", "parameters": "(List <Vector> data, DenseMatrix lambda, DenseMatrix alpha, DenseMatrix gammad,\n\t\t\t\t\t\t\t\t\t   int numTopic, int vocabularySize, double beta, int taskNum)", "modifiers": "public static", "return": "double", "signature": "double logLikelihood(List <Vector> data, DenseMatrix lambda, DenseMatrix alpha, DenseMatrix gammad,\n\t\t\t\t\t\t\t\t\t   int numTopic, int vocabularySize, double beta, int taskNum)", "full_signature": "public static double logLikelihood(List <Vector> data, DenseMatrix lambda, DenseMatrix alpha, DenseMatrix gammad,\n\t\t\t\t\t\t\t\t\t   int numTopic, int vocabularySize, double beta, int taskNum)", "class_method_signature": "OnlineLogLikelihood.logLikelihood(List <Vector> data, DenseMatrix lambda, DenseMatrix alpha, DenseMatrix gammad,\n\t\t\t\t\t\t\t\t\t   int numTopic, int vocabularySize, double beta, int taskNum)", "testcase": false, "constructor": false}, {"identifier": "logSumExp", "parameters": "(DenseMatrix dm)", "modifiers": "public static", "return": "double", "signature": "double logSumExp(DenseMatrix dm)", "full_signature": "public static double logSumExp(DenseMatrix dm)", "class_method_signature": "OnlineLogLikelihood.logSumExp(DenseMatrix dm)", "testcase": false, "constructor": false}, {"identifier": "calc", "parameters": "(ComContext context)", "modifiers": "@Override public", "return": "void", "signature": "void calc(ComContext context)", "full_signature": "@Override public void calc(ComContext context)", "class_method_signature": "OnlineLogLikelihood.calc(ComContext context)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/clustering/lda/OnlineLogLikelihood.java"}, "focal_method": {"identifier": "logSumExp", "parameters": "(DenseMatrix dm)", "modifiers": "public static", "return": "double", "body": "public static double logSumExp(DenseMatrix dm) {\n\t\tdouble max = dm.get(0, 0);\n\t\tfor (int i = 0; i < dm.numRows(); i++) {\n\t\t\tfor (int j = 0; j < dm.numCols(); j++) {\n\t\t\t\tif (dm.get(i, j) > max) {\n\t\t\t\t\tmax = dm.get(i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble sum = 0;\n\t\tfor (int i = 0; i < dm.numRows(); i++) {\n\t\t\tfor (int j = 0; j < dm.numCols(); j++) {\n\t\t\t\tsum += Math.exp(dm.get(i, j) - max);\n\t\t\t}\n\t\t}\n\t\treturn max + Math.log(sum);\n\t}", "signature": "double logSumExp(DenseMatrix dm)", "full_signature": "public static double logSumExp(DenseMatrix dm)", "class_method_signature": "OnlineLogLikelihood.logSumExp(DenseMatrix dm)", "testcase": false, "constructor": false, "invocations": ["get", "numRows", "numCols", "get", "get", "numRows", "numCols", "exp", "get", "log"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}