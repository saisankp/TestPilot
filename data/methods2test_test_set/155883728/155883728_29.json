{"test_class": {"identifier": "ScanArtifactMojoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File testOutBaseDir = new File(\"target/test-out/ScanArtifactMojoTest\");", "modifier": "private final", "type": "File", "declarator": "testOutBaseDir = new File(\"target/test-out/ScanArtifactMojoTest\")", "var_name": "testOutBaseDir"}], "file": "maven/src/test/java/net/adamcin/oakpal/maven/mojo/ScanArtifactMojoTest.java"}, "test_case": {"identifier": "testExecuteGuardedIntegrationTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecuteGuardedIntegrationTest() throws Exception {\n        final File testPackage = TestPackageUtil.prepareTestPackage(\"tmp_foo_bar.zip\");\n        final File testOutDir = new File(testOutBaseDir, \"testExecuteGuardedIntegrationTest\");\n        FileUtils.deleteDirectory(testOutDir);\n        testOutDir.mkdirs();\n        final File artifactFile = testPackage;\n\n        final MavenProject project = mock(MavenProject.class);\n        ScanArtifactMojo mojo = newMojo();\n        mojo.summaryFile = new File(testOutDir, \"summary.json\");\n        mojo.project = project;\n        final Artifact artifact = mock(Artifact.class);\n        when(project.getArtifact()).thenReturn(artifact);\n        when(artifact.getFile()).thenReturn(artifactFile);\n        mojo.executeGuardedIntegrationTest();\n    }", "signature": "void testExecuteGuardedIntegrationTest()", "full_signature": "@Test public void testExecuteGuardedIntegrationTest()", "class_method_signature": "ScanArtifactMojoTest.testExecuteGuardedIntegrationTest()", "testcase": true, "constructor": false, "invocations": ["prepareTestPackage", "deleteDirectory", "mkdirs", "mock", "newMojo", "mock", "thenReturn", "when", "getArtifact", "thenReturn", "when", "getFile", "executeGuardedIntegrationTest"]}, "focal_class": {"identifier": "ScanArtifactMojo", "superclass": "extends AbstractITestWithPlanMojo", "interfaces": "", "fields": [{"original_string": "@Parameter(property = \"oakpal.scan.skip\")\n    public boolean skip;", "modifier": "@Parameter(property = \"oakpal.scan.skip\")\n    public", "type": "boolean", "declarator": "skip", "var_name": "skip"}], "methods": [{"identifier": "isIndividuallySkipped", "parameters": "()", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean isIndividuallySkipped()", "full_signature": "@Override protected boolean isIndividuallySkipped()", "class_method_signature": "ScanArtifactMojo.isIndividuallySkipped()", "testcase": false, "constructor": false}, {"identifier": "getScanArtifactFile", "parameters": "()", "modifiers": "final @NotNull", "return": "File", "signature": "File getScanArtifactFile()", "full_signature": "final @NotNull File getScanArtifactFile()", "class_method_signature": "ScanArtifactMojo.getScanArtifactFile()", "testcase": false, "constructor": false}, {"identifier": "executeGuardedIntegrationTest", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void executeGuardedIntegrationTest()", "full_signature": "@Override protected void executeGuardedIntegrationTest()", "class_method_signature": "ScanArtifactMojo.executeGuardedIntegrationTest()", "testcase": false, "constructor": false}], "file": "maven/src/main/java/net/adamcin/oakpal/maven/mojo/ScanArtifactMojo.java"}, "focal_method": {"identifier": "executeGuardedIntegrationTest", "parameters": "()", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void executeGuardedIntegrationTest() throws MojoFailureException {\n        performScan(Collections.singletonList(getScanArtifactFile()));\n    }", "signature": "void executeGuardedIntegrationTest()", "full_signature": "@Override protected void executeGuardedIntegrationTest()", "class_method_signature": "ScanArtifactMojo.executeGuardedIntegrationTest()", "testcase": false, "constructor": false, "invocations": ["performScan", "singletonList", "getScanArtifactFile"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}