{"test_class": {"identifier": "LogReadServiceImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-mvc-dwr/src/test/java/services/impl/LogReadServiceImplTest.java"}, "test_case": {"identifier": "testRead_log", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRead_log() throws Exception {\n\n\t\tLogReadServiceImpl logReadService = new LogReadServiceImpl();\n\t\tlogReadService.setLog_folder(\"/iflytek/temp\");\n\t\tList<String> contents = logReadService.read_log(\"jenkins-test\", 199000);\n\t\tSystem.out.println(contents.size());\n\t}", "signature": "void testRead_log()", "full_signature": "@Test public void testRead_log()", "class_method_signature": "LogReadServiceImplTest.testRead_log()", "testcase": true, "constructor": false, "invocations": ["setLog_folder", "read_log", "println", "size"]}, "focal_class": {"identifier": "LogReadServiceImpl", "superclass": "", "interfaces": "implements LogReadService", "fields": [{"original_string": "@Value(value = \"#{settings['logFolder']}\")\n\tprivate String log_folder;", "modifier": "@Value(value = \"#{settings['logFolder']}\")\n\tprivate", "type": "String", "declarator": "log_folder", "var_name": "log_folder"}], "methods": [{"identifier": "setLog_folder", "parameters": "(String log_folder)", "modifiers": "public", "return": "void", "signature": "void setLog_folder(String log_folder)", "full_signature": "public void setLog_folder(String log_folder)", "class_method_signature": "LogReadServiceImpl.setLog_folder(String log_folder)", "testcase": false, "constructor": false}, {"identifier": "read_log", "parameters": "(String log_name, int line)", "modifiers": "@Override @RemoteMethod public", "return": "List<String>", "signature": "List<String> read_log(String log_name, int line)", "full_signature": "@Override @RemoteMethod public List<String> read_log(String log_name, int line)", "class_method_signature": "LogReadServiceImpl.read_log(String log_name, int line)", "testcase": false, "constructor": false}, {"identifier": "sayHello", "parameters": "(String abc)", "modifiers": "@Override @RemoteMethod public", "return": "String", "signature": "String sayHello(String abc)", "full_signature": "@Override @RemoteMethod public String sayHello(String abc)", "class_method_signature": "LogReadServiceImpl.sayHello(String abc)", "testcase": false, "constructor": false}], "file": "spring-mvc-dwr/src/main/java/services/impl/LogReadServiceImpl.java"}, "focal_method": {"identifier": "read_log", "parameters": "(String log_name, int line)", "modifiers": "@Override @RemoteMethod public", "return": "List<String>", "body": "@Override\n\t@RemoteMethod\n\tpublic List<String> read_log(String log_name, int line) {\n\n\t\ttry {\n\t\t\tList<String> lines = Files.readLines(new File(log_folder + File.separator + log_name + \".txt\"), Charset.defaultCharset());\n\t\t\treturn lines.subList(line, lines.size());\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}", "signature": "List<String> read_log(String log_name, int line)", "full_signature": "@Override @RemoteMethod public List<String> read_log(String log_name, int line)", "class_method_signature": "LogReadServiceImpl.read_log(String log_name, int line)", "testcase": false, "constructor": false, "invocations": ["readLines", "defaultCharset", "subList", "size", "printStackTrace"]}, "repository": {"repo_id": 2480222, "url": "https://github.com/fitzyyf/plum-sample", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 468, "license": "licensed"}}