{"test_class": {"identifier": "DoubleVectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DoubleVector emptyVector, array5Vector;", "modifier": "private", "type": "DoubleVector", "declarator": "emptyVector", "var_name": "emptyVector"}], "file": "samoa-api/src/test/java/com/yahoo/labs/samoa/core/DoubleVectorTest.java"}, "test_case": {"identifier": "testSetValue", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n    public void testSetValue() {\n        // test automatic vector enlargement\n        emptyVector.setValue(0, 1.0);\n        assertEquals(1, emptyVector.getArrayRef().length);\n        assertEquals(1.0, emptyVector.getArrayRef()[0], 0.0); // should be exactly the same, so delta=0.0\n\n        emptyVector.setValue(5, 5.5);\n        assertEquals(6, emptyVector.getArrayRef().length);\n        assertEquals(2, emptyVector.numNonZeroEntries());\n        assertEquals(5.5, emptyVector.getArrayRef()[5], 0.0); // should be exactly the same, so delta=0.0\n    }", "signature": "void testSetValue()", "full_signature": "@Test() public void testSetValue()", "class_method_signature": "DoubleVectorTest.testSetValue()", "testcase": true, "constructor": false, "invocations": ["setValue", "assertEquals", "getArrayRef", "assertEquals", "getArrayRef", "setValue", "assertEquals", "getArrayRef", "assertEquals", "numNonZeroEntries", "assertEquals", "getArrayRef"]}, "focal_class": {"identifier": "DoubleVector", "superclass": "", "interfaces": "implements java.io.Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 8243012708860261398L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8243012708860261398L", "var_name": "serialVersionUID"}, {"original_string": "private double[] doubleArray;", "modifier": "private", "type": "double[]", "declarator": "doubleArray", "var_name": "doubleArray"}], "methods": [{"identifier": "DoubleVector", "parameters": "()", "modifiers": "public", "return": "", "signature": " DoubleVector()", "full_signature": "public  DoubleVector()", "class_method_signature": "DoubleVector.DoubleVector()", "testcase": false, "constructor": true}, {"identifier": "DoubleVector", "parameters": "(double[] toCopy)", "modifiers": "public", "return": "", "signature": " DoubleVector(double[] toCopy)", "full_signature": "public  DoubleVector(double[] toCopy)", "class_method_signature": "DoubleVector.DoubleVector(double[] toCopy)", "testcase": false, "constructor": true}, {"identifier": "DoubleVector", "parameters": "(DoubleVector toCopy)", "modifiers": "public", "return": "", "signature": " DoubleVector(DoubleVector toCopy)", "full_signature": "public  DoubleVector(DoubleVector toCopy)", "class_method_signature": "DoubleVector.DoubleVector(DoubleVector toCopy)", "testcase": false, "constructor": true}, {"identifier": "getArrayRef", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] getArrayRef()", "full_signature": "public double[] getArrayRef()", "class_method_signature": "DoubleVector.getArrayRef()", "testcase": false, "constructor": false}, {"identifier": "getArrayCopy", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] getArrayCopy()", "full_signature": "public double[] getArrayCopy()", "class_method_signature": "DoubleVector.getArrayCopy()", "testcase": false, "constructor": false}, {"identifier": "numNonZeroEntries", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int numNonZeroEntries()", "full_signature": "public int numNonZeroEntries()", "class_method_signature": "DoubleVector.numNonZeroEntries()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(int index, double value)", "modifiers": "public", "return": "void", "signature": "void setValue(int index, double value)", "full_signature": "public void setValue(int index, double value)", "class_method_signature": "DoubleVector.setValue(int index, double value)", "testcase": false, "constructor": false}, {"identifier": "addToValue", "parameters": "(int index, double value)", "modifiers": "public", "return": "void", "signature": "void addToValue(int index, double value)", "full_signature": "public void addToValue(int index, double value)", "class_method_signature": "DoubleVector.addToValue(int index, double value)", "testcase": false, "constructor": false}, {"identifier": "sumOfValues", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double sumOfValues()", "full_signature": "public double sumOfValues()", "class_method_signature": "DoubleVector.sumOfValues()", "testcase": false, "constructor": false}, {"identifier": "getSingleLineDescription", "parameters": "(StringBuilder out)", "modifiers": "public", "return": "void", "signature": "void getSingleLineDescription(StringBuilder out)", "full_signature": "public void getSingleLineDescription(StringBuilder out)", "class_method_signature": "DoubleVector.getSingleLineDescription(StringBuilder out)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DoubleVector.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DoubleVector.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DoubleVector.equals(Object obj)", "testcase": false, "constructor": false}], "file": "samoa-api/src/main/java/com/yahoo/labs/samoa/core/DoubleVector.java"}, "focal_method": {"identifier": "setValue", "parameters": "(int index, double value)", "modifiers": "public", "return": "void", "body": "public void setValue(int index, double value) {\n        if (index >= doubleArray.length) {\n            this.doubleArray = Doubles.ensureCapacity(this.doubleArray, index + 1, 0);\n        }\n        this.doubleArray[index] = value;\n    }", "signature": "void setValue(int index, double value)", "full_signature": "public void setValue(int index, double value)", "class_method_signature": "DoubleVector.setValue(int index, double value)", "testcase": false, "constructor": false, "invocations": ["ensureCapacity"]}, "repository": {"repo_id": 13505122, "url": "https://github.com/YahooArchive/samoa", "language": "Java", "is_fork": false, "fork_count": 82, "stargazer_count": 424, "size": 6642, "license": "licensed"}}