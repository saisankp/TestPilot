{"test_class": {"identifier": "DownloaderWebClientTest", "superclass": "extends AbstractDownloaderTest", "interfaces": "", "fields": [], "file": "herd-code/herd-tools/herd-downloader/src/test/java/org/finra/herd/tools/downloader/DownloaderWebClientTest.java"}, "test_case": {"identifier": "testGetBusinessObjectDataDownloadCredential2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBusinessObjectDataDownloadCredential2() throws Exception\n    {\n        DownloaderInputManifestDto manifest = new DownloaderInputManifestDto();\n        manifest.setNamespace(\"test1\");\n        manifest.setBusinessObjectDefinitionName(\"test2\");\n        manifest.setBusinessObjectFormatUsage(\"test3\");\n        manifest.setBusinessObjectFormatFileType(\"test4\");\n        manifest.setBusinessObjectFormatVersion(\"test5\");\n        manifest.setPartitionValue(\"test6\");\n        manifest.setBusinessObjectDataVersion(\"test9\");\n        String storageName = \"test10\";\n        downloaderWebClient.getRegServerAccessParamsDto().setUseSsl(true);\n        StorageUnitDownloadCredential storageUnitDownloadCredential = downloaderWebClient.getStorageUnitDownloadCredential(manifest, storageName);\n        Assert.assertNotNull(storageUnitDownloadCredential);\n        AwsCredential awsCredential = storageUnitDownloadCredential.getAwsCredential();\n        Assert.assertNotNull(awsCredential);\n        Assert.assertEquals(\"https://testWebServiceHostname:1234/herd-app/rest/storageUnits/download/credential/namespaces/test1\" +\n            \"/businessObjectDefinitionNames/test2/businessObjectFormatUsages/test3/businessObjectFormatFileTypes/test4/businessObjectFormatVersions/test5\" +\n            \"/partitionValues/test6/businessObjectDataVersions/test9/storageNames/test10\", awsCredential.getAwsAccessKey());\n    }", "signature": "void testGetBusinessObjectDataDownloadCredential2()", "full_signature": "@Test public void testGetBusinessObjectDataDownloadCredential2()", "class_method_signature": "DownloaderWebClientTest.testGetBusinessObjectDataDownloadCredential2()", "testcase": true, "constructor": false, "invocations": ["setNamespace", "setBusinessObjectDefinitionName", "setBusinessObjectFormatUsage", "setBusinessObjectFormatFileType", "setBusinessObjectFormatVersion", "setPartitionValue", "setBusinessObjectDataVersion", "setUseSsl", "getRegServerAccessParamsDto", "getStorageUnitDownloadCredential", "assertNotNull", "getAwsCredential", "assertNotNull", "assertEquals", "getAwsAccessKey"]}, "focal_class": {"identifier": "DownloaderWebClient", "superclass": "extends DataBridgeWebClient", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DownloaderWebClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DownloaderWebClient.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "getBusinessObjectData", "parameters": "(DownloaderInputManifestDto manifest)", "modifiers": "public", "return": "BusinessObjectData", "signature": "BusinessObjectData getBusinessObjectData(DownloaderInputManifestDto manifest)", "full_signature": "public BusinessObjectData getBusinessObjectData(DownloaderInputManifestDto manifest)", "class_method_signature": "DownloaderWebClient.getBusinessObjectData(DownloaderInputManifestDto manifest)", "testcase": false, "constructor": false}, {"identifier": "getS3KeyPrefix", "parameters": "(BusinessObjectData businessObjectData)", "modifiers": "public", "return": "S3KeyPrefixInformation", "signature": "S3KeyPrefixInformation getS3KeyPrefix(BusinessObjectData businessObjectData)", "full_signature": "public S3KeyPrefixInformation getS3KeyPrefix(BusinessObjectData businessObjectData)", "class_method_signature": "DownloaderWebClient.getS3KeyPrefix(BusinessObjectData businessObjectData)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitDownloadCredential", "parameters": "(DownloaderInputManifestDto manifest, String storageName)", "modifiers": "public", "return": "StorageUnitDownloadCredential", "signature": "StorageUnitDownloadCredential getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "full_signature": "public StorageUnitDownloadCredential getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "class_method_signature": "DownloaderWebClient.getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitDownloadCredential", "parameters": "(CloseableHttpResponse response)", "modifiers": "private", "return": "StorageUnitDownloadCredential", "signature": "StorageUnitDownloadCredential getStorageUnitDownloadCredential(CloseableHttpResponse response)", "full_signature": "private StorageUnitDownloadCredential getStorageUnitDownloadCredential(CloseableHttpResponse response)", "class_method_signature": "DownloaderWebClient.getStorageUnitDownloadCredential(CloseableHttpResponse response)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-downloader/src/main/java/org/finra/herd/tools/downloader/DownloaderWebClient.java"}, "focal_method": {"identifier": "getStorageUnitDownloadCredential", "parameters": "(DownloaderInputManifestDto manifest, String storageName)", "modifiers": "public", "return": "StorageUnitDownloadCredential", "body": "public StorageUnitDownloadCredential getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)\n        throws URISyntaxException, IOException, JAXBException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException\n    {\n        URIBuilder uriBuilder =\n            new URIBuilder().setScheme(getUriScheme()).setHost(regServerAccessParamsDto.getRegServerHost()).setPort(regServerAccessParamsDto.getRegServerPort())\n                .setPath(String.join(\"/\", HERD_APP_REST_URI_PREFIX, \"storageUnits\", \"download\", \"credential\", \"namespaces\", manifest.getNamespace(),\n                    \"businessObjectDefinitionNames\", manifest.getBusinessObjectDefinitionName(), \"businessObjectFormatUsages\",\n                    manifest.getBusinessObjectFormatUsage(), \"businessObjectFormatFileTypes\", manifest.getBusinessObjectFormatFileType(),\n                    \"businessObjectFormatVersions\", manifest.getBusinessObjectFormatVersion(), \"partitionValues\", manifest.getPartitionValue(),\n                    \"businessObjectDataVersions\", manifest.getBusinessObjectDataVersion(), \"storageNames\", storageName));\n        if (manifest.getSubPartitionValues() != null)\n        {\n            uriBuilder.addParameter(\"subPartitionValues\", herdStringHelper.join(manifest.getSubPartitionValues(), \"|\", \"\\\\\"));\n        }\n        HttpGet httpGet = new HttpGet(uriBuilder.build());\n        httpGet.addHeader(\"Accept\", DEFAULT_ACCEPT);\n        if (regServerAccessParamsDto.isUseSsl())\n        {\n            httpGet.addHeader(getAuthorizationHeader());\n        }\n        try (CloseableHttpClient httpClient = httpClientHelper\n            .createHttpClient(regServerAccessParamsDto.isTrustSelfSignedCertificate(), regServerAccessParamsDto.isDisableHostnameVerification()))\n        {\n            LOGGER.info(\"Retrieving download credentials from registration server...\");\n            return getStorageUnitDownloadCredential(httpClientOperations.execute(httpClient, httpGet));\n        }\n    }", "signature": "StorageUnitDownloadCredential getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "full_signature": "public StorageUnitDownloadCredential getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "class_method_signature": "DownloaderWebClient.getStorageUnitDownloadCredential(DownloaderInputManifestDto manifest, String storageName)", "testcase": false, "constructor": false, "invocations": ["setPath", "setPort", "setHost", "setScheme", "getUriScheme", "getRegServerHost", "getRegServerPort", "join", "getNamespace", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "getBusinessObjectFormatVersion", "getPartitionValue", "getBusinessObjectDataVersion", "getSubPartitionValues", "addParameter", "join", "getSubPartitionValues", "build", "addHeader", "isUseSsl", "addHeader", "getAuthorizationHeader", "createHttpClient", "isTrustSelfSignedCertificate", "isDisableHostnameVerification", "info", "getStorageUnitDownloadCredential", "execute"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}