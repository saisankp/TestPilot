{"test_class": {"identifier": "SocketAddressTemplateTest", "superclass": "", "interfaces": "", "fields": [], "file": "cocaine-client/src/test/java/cocaine/msgpack/SocketAddressTemplateTest.java"}, "test_case": {"identifier": "write", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void write() throws IOException {\n        String hostname = \"localhost\";\n        int port = 3456;\n\n        MessagePack pack = new MessagePack();\n        byte[] bytes = pack.write(Arrays.asList(hostname, port));\n\n        byte[] result = pack.write(new InetSocketAddress(hostname, port), SocketAddressTemplate.getInstance());\n\n        Assert.assertArrayEquals(bytes, result);\n    }", "signature": "void write()", "full_signature": "@Test public void write()", "class_method_signature": "SocketAddressTemplateTest.write()", "testcase": true, "constructor": false, "invocations": ["write", "asList", "write", "getInstance", "assertArrayEquals"]}, "focal_class": {"identifier": "SocketAddressTemplate", "superclass": "extends AbstractTemplate<SocketAddress>", "interfaces": "", "fields": [{"original_string": "private static final Template<SocketAddress> instance = new SocketAddressTemplate();", "modifier": "private static final", "type": "Template<SocketAddress>", "declarator": "instance = new SocketAddressTemplate()", "var_name": "instance"}], "methods": [{"identifier": "SocketAddressTemplate", "parameters": "()", "modifiers": "private", "return": "", "signature": " SocketAddressTemplate()", "full_signature": "private  SocketAddressTemplate()", "class_method_signature": "SocketAddressTemplate.SocketAddressTemplate()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Template<SocketAddress>", "signature": "Template<SocketAddress> getInstance()", "full_signature": "public static Template<SocketAddress> getInstance()", "class_method_signature": "SocketAddressTemplate.getInstance()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Packer packer, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "void", "signature": "void write(Packer packer, SocketAddress endpoint, boolean required)", "full_signature": "@Override public void write(Packer packer, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.write(Packer packer, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Unpacker unpacker, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "SocketAddress", "signature": "SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "full_signature": "@Override public SocketAddress read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.read(Unpacker unpacker, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false}], "file": "cocaine-client/src/main/java/cocaine/msgpack/SocketAddressTemplate.java"}, "focal_method": {"identifier": "write", "parameters": "(Packer packer, SocketAddress endpoint, boolean required)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(Packer packer, SocketAddress endpoint, boolean required) throws IOException {\n        if (!InetSocketAddress.class.isAssignableFrom(endpoint.getClass())) {\n            throw new IllegalArgumentException(endpoint.getClass().getSimpleName()\n                    + \" can not be encoded by \" + SocketAddressTemplate.class.getSimpleName());\n        }\n\n        InetSocketAddress inetEndpoint = (InetSocketAddress) endpoint;\n        packer.writeArrayBegin(2);\n        packer.write(inetEndpoint.getHostName());\n        packer.write(inetEndpoint.getPort());\n        packer.writeArrayEnd();\n    }", "signature": "void write(Packer packer, SocketAddress endpoint, boolean required)", "full_signature": "@Override public void write(Packer packer, SocketAddress endpoint, boolean required)", "class_method_signature": "SocketAddressTemplate.write(Packer packer, SocketAddress endpoint, boolean required)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom", "getClass", "getSimpleName", "getClass", "getSimpleName", "writeArrayBegin", "write", "getHostName", "write", "getPort", "writeArrayEnd"]}, "repository": {"repo_id": 5264970, "url": "https://github.com/cocaine/cocaine-framework-java", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 22, "size": 567, "license": "licensed"}}