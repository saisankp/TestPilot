{"test_class": {"identifier": "NamedInternalThreadFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/threadlocal/NamedInternalThreadFactoryTest.java"}, "test_case": {"identifier": "newThread", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newThread() throws Exception {\n        NamedInternalThreadFactory namedInternalThreadFactory = new NamedInternalThreadFactory();\n        Thread t = namedInternalThreadFactory.newThread(new Runnable() {\n            @Override\n            public void run() {\n\n            }\n        });\n        Assert.assertTrue(\"thread is not InternalThread\", t.getClass().equals(InternalThread.class));\n    }", "signature": "void newThread()", "full_signature": "@Test public void newThread()", "class_method_signature": "NamedInternalThreadFactoryTest.newThread()", "testcase": true, "constructor": false, "invocations": ["newThread", "assertTrue", "equals", "getClass"]}, "focal_class": {"identifier": "NamedInternalThreadFactory", "superclass": "extends NamedThreadFactory", "interfaces": "", "fields": [], "methods": [{"identifier": "NamedInternalThreadFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " NamedInternalThreadFactory()", "full_signature": "public  NamedInternalThreadFactory()", "class_method_signature": "NamedInternalThreadFactory.NamedInternalThreadFactory()", "testcase": false, "constructor": true}, {"identifier": "NamedInternalThreadFactory", "parameters": "(String prefix)", "modifiers": "public", "return": "", "signature": " NamedInternalThreadFactory(String prefix)", "full_signature": "public  NamedInternalThreadFactory(String prefix)", "class_method_signature": "NamedInternalThreadFactory.NamedInternalThreadFactory(String prefix)", "testcase": false, "constructor": true}, {"identifier": "NamedInternalThreadFactory", "parameters": "(String prefix, boolean daemon)", "modifiers": "public", "return": "", "signature": " NamedInternalThreadFactory(String prefix, boolean daemon)", "full_signature": "public  NamedInternalThreadFactory(String prefix, boolean daemon)", "class_method_signature": "NamedInternalThreadFactory.NamedInternalThreadFactory(String prefix, boolean daemon)", "testcase": false, "constructor": true}, {"identifier": "newThread", "parameters": "(Runnable runnable)", "modifiers": "@Override public", "return": "Thread", "signature": "Thread newThread(Runnable runnable)", "full_signature": "@Override public Thread newThread(Runnable runnable)", "class_method_signature": "NamedInternalThreadFactory.newThread(Runnable runnable)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/threadlocal/NamedInternalThreadFactory.java"}, "focal_method": {"identifier": "newThread", "parameters": "(Runnable runnable)", "modifiers": "@Override public", "return": "Thread", "body": "@Override\n    public Thread newThread(Runnable runnable) {\n        String name = mPrefix + mThreadNum.getAndIncrement();\n        InternalThread ret = new InternalThread(mGroup, runnable, name, 0);\n        ret.setDaemon(mDaemon);\n        return ret;\n    }", "signature": "Thread newThread(Runnable runnable)", "full_signature": "@Override public Thread newThread(Runnable runnable)", "class_method_signature": "NamedInternalThreadFactory.newThread(Runnable runnable)", "testcase": false, "constructor": false, "invocations": ["getAndIncrement", "setDaemon"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}