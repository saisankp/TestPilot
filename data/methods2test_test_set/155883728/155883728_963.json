{"test_class": {"identifier": "ReportMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File baseDir = new File(\"target/test-output/ReportMapperTest\");", "modifier": "private final", "type": "File", "declarator": "baseDir = new File(\"target/test-output/ReportMapperTest\")", "var_name": "baseDir"}], "file": "core/src/test/java/net/adamcin/oakpal/core/ReportMapperTest.java"}, "test_case": {"identifier": "testReportsToJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReportsToJson() throws Exception {\n        final List<CheckReport> originalReports = asList(\n                new SimpleReport(\"test/first\",\n                        singletonList(\n                                new SimpleViolation(Severity.MINOR,\n                                        \"one\",\n                                        PackageId.fromString(\"test:first\")))\n                ),\n                new SimpleReport(\"test/second\",\n                        asList(\n                                new SimpleViolation(Severity.MINOR,\n                                        \"one\", PackageId.fromString(\"test:first\")),\n                                new SimpleViolation(Severity.MINOR,\n                                        \"two\",\n                                        PackageId.fromString(\"test:first\"),\n                                        PackageId.fromString(\"test:second\"))\n                        )\n                )\n        );\n\n        final StringWriter writer = new StringWriter();\n        ReportMapper.writeReports(originalReports, () -> writer);\n        assertEquals(\"CheckReports should round trip\",\n                new ArrayList<>(originalReports),\n                new ArrayList<>(ReportMapper.readReports(() -> new StringReader(writer.toString()))));\n    }", "signature": "void testReportsToJson()", "full_signature": "@Test public void testReportsToJson()", "class_method_signature": "ReportMapperTest.testReportsToJson()", "testcase": true, "constructor": false, "invocations": ["asList", "singletonList", "fromString", "asList", "fromString", "fromString", "fromString", "writeReports", "assertEquals", "readReports", "toString"]}, "focal_class": {"identifier": "ReportMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonKeys KEYS = new JsonKeys() {\n        @Override\n        public String reports() {\n            return \"reports\";\n        }\n\n        @Override\n        public String checkName() {\n            return \"checkName\";\n        }\n\n        @Override\n        public String violations() {\n            return \"violations\";\n        }\n    };", "modifier": "private static final", "type": "JsonKeys", "declarator": "KEYS = new JsonKeys() {\n        @Override\n        public String reports() {\n            return \"reports\";\n        }\n\n        @Override\n        public String checkName() {\n            return \"checkName\";\n        }\n\n        @Override\n        public String violations() {\n            return \"violations\";\n        }\n    }", "var_name": "KEYS"}], "methods": [{"identifier": "keys", "parameters": "()", "modifiers": "public static", "return": "JsonKeys", "signature": "JsonKeys keys()", "full_signature": "public static JsonKeys keys()", "class_method_signature": "ReportMapper.keys()", "testcase": false, "constructor": false}, {"identifier": "ReportMapper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReportMapper()", "full_signature": "private  ReportMapper()", "class_method_signature": "ReportMapper.ReportMapper()", "testcase": false, "constructor": true}, {"identifier": "readReports", "parameters": "(final @NotNull ReaderSupplier readerSupplier)", "modifiers": "public static", "return": "List<CheckReport>", "signature": "List<CheckReport> readReports(final @NotNull ReaderSupplier readerSupplier)", "full_signature": "public static List<CheckReport> readReports(final @NotNull ReaderSupplier readerSupplier)", "class_method_signature": "ReportMapper.readReports(final @NotNull ReaderSupplier readerSupplier)", "testcase": false, "constructor": false}, {"identifier": "readReportsFromFile", "parameters": "(final @NotNull File jsonFile)", "modifiers": "public static", "return": "List<CheckReport>", "signature": "List<CheckReport> readReportsFromFile(final @NotNull File jsonFile)", "full_signature": "public static List<CheckReport> readReportsFromFile(final @NotNull File jsonFile)", "class_method_signature": "ReportMapper.readReportsFromFile(final @NotNull File jsonFile)", "testcase": false, "constructor": false}, {"identifier": "writeReports", "parameters": "(final @NotNull Collection<CheckReport> reports,\n                                    final @NotNull WriterSupplier writerSupplier)", "modifiers": "public static", "return": "void", "signature": "void writeReports(final @NotNull Collection<CheckReport> reports,\n                                    final @NotNull WriterSupplier writerSupplier)", "full_signature": "public static void writeReports(final @NotNull Collection<CheckReport> reports,\n                                    final @NotNull WriterSupplier writerSupplier)", "class_method_signature": "ReportMapper.writeReports(final @NotNull Collection<CheckReport> reports,\n                                    final @NotNull WriterSupplier writerSupplier)", "testcase": false, "constructor": false}, {"identifier": "writeReportsToFile", "parameters": "(final Collection<CheckReport> reports,\n                                          final @NotNull File outputFile)", "modifiers": "public static", "return": "void", "signature": "void writeReportsToFile(final Collection<CheckReport> reports,\n                                          final @NotNull File outputFile)", "full_signature": "public static void writeReportsToFile(final Collection<CheckReport> reports,\n                                          final @NotNull File outputFile)", "class_method_signature": "ReportMapper.writeReportsToFile(final Collection<CheckReport> reports,\n                                          final @NotNull File outputFile)", "testcase": false, "constructor": false}, {"identifier": "reportFromJson", "parameters": "(final JsonObject jsonReport)", "modifiers": "static", "return": "CheckReport", "signature": "CheckReport reportFromJson(final JsonObject jsonReport)", "full_signature": "static CheckReport reportFromJson(final JsonObject jsonReport)", "class_method_signature": "ReportMapper.reportFromJson(final JsonObject jsonReport)", "testcase": false, "constructor": false}, {"identifier": "violationFromJson", "parameters": "(final JsonObject jsonViolation)", "modifiers": "static", "return": "Violation", "signature": "Violation violationFromJson(final JsonObject jsonViolation)", "full_signature": "static Violation violationFromJson(final JsonObject jsonViolation)", "class_method_signature": "ReportMapper.violationFromJson(final JsonObject jsonViolation)", "testcase": false, "constructor": false}, {"identifier": "reportsToJson", "parameters": "(final @NotNull Collection<CheckReport> reports)", "modifiers": "public static", "return": "JsonArray", "signature": "JsonArray reportsToJson(final @NotNull Collection<CheckReport> reports)", "full_signature": "public static JsonArray reportsToJson(final @NotNull Collection<CheckReport> reports)", "class_method_signature": "ReportMapper.reportsToJson(final @NotNull Collection<CheckReport> reports)", "testcase": false, "constructor": false}, {"identifier": "reportsToJsonObject", "parameters": "(final @NotNull Collection<CheckReport> reports)", "modifiers": "public static", "return": "JsonObject", "signature": "JsonObject reportsToJsonObject(final @NotNull Collection<CheckReport> reports)", "full_signature": "public static JsonObject reportsToJsonObject(final @NotNull Collection<CheckReport> reports)", "class_method_signature": "ReportMapper.reportsToJsonObject(final @NotNull Collection<CheckReport> reports)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/ReportMapper.java"}, "focal_method": {"identifier": "reportsToJson", "parameters": "(final @NotNull Collection<CheckReport> reports)", "modifiers": "public static", "return": "JsonArray", "body": "public static JsonArray reportsToJson(final @NotNull Collection<CheckReport> reports) {\n        return reports.stream()\n                .map(CheckReport::toJson)\n                .collect(JsonCollectors.toJsonArray());\n    }", "signature": "JsonArray reportsToJson(final @NotNull Collection<CheckReport> reports)", "full_signature": "public static JsonArray reportsToJson(final @NotNull Collection<CheckReport> reports)", "class_method_signature": "ReportMapper.reportsToJson(final @NotNull Collection<CheckReport> reports)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "toJsonArray"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}