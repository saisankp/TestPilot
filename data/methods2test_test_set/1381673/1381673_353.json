{"test_class": {"identifier": "SubstringAfterFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SubstringAfterFunction substringAfterFunction;", "modifier": "private", "type": "SubstringAfterFunction", "declarator": "substringAfterFunction", "var_name": "substringAfterFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/SubstringAfterFunctionTest.java"}, "test_case": {"identifier": "invokeMatchExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeMatchExists() {\n        FunctionTestUtil.assertResult(substringAfterFunction.invoke(\"foobar\", \"ob\"), \"ar\");\n        FunctionTestUtil.assertResult(substringAfterFunction.invoke(\"foobar\", \"o\"), \"obar\");\n    }", "signature": "void invokeMatchExists()", "full_signature": "@Test public void invokeMatchExists()", "class_method_signature": "SubstringAfterFunctionTest.invokeMatchExists()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "assertResult", "invoke"]}, "focal_class": {"identifier": "SubstringAfterFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "SubstringAfterFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " SubstringAfterFunction()", "full_signature": "public  SubstringAfterFunction()", "class_method_signature": "SubstringAfterFunction.SubstringAfterFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "modifiers": "public", "return": "FEELFnResult<String>", "signature": "FEELFnResult<String> invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "full_signature": "public FEELFnResult<String> invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "class_method_signature": "SubstringAfterFunction.invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/SubstringAfterFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "modifiers": "public", "return": "FEELFnResult<String>", "body": "public FEELFnResult<String> invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match) {\n        if ( string == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"string\", \"cannot be null\"));\n        }\n        if ( match == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"match\", \"cannot be null\"));\n        }\n        \n        int index = string.indexOf( match );\n        if( index >= 0 ) {\n            return FEELFnResult.ofResult( string.substring( index+match.length() ) );\n        } else {\n            return FEELFnResult.ofResult( \"\" );\n        }\n    }", "signature": "FEELFnResult<String> invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "full_signature": "public FEELFnResult<String> invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "class_method_signature": "SubstringAfterFunction.invoke(@ParameterName( \"string\" ) String string, @ParameterName( \"match\" ) String match)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofError", "indexOf", "ofResult", "substring", "length", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}