{"test_class": {"identifier": "RandomMessageSpoutTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int messageSize = 100;", "modifier": "private static final", "type": "int", "declarator": "messageSize = 100", "var_name": "messageSize"}, {"original_string": "private static final Map ANY_CONF = new HashMap();", "modifier": "private static final", "type": "Map", "declarator": "ANY_CONF = new HashMap()", "var_name": "ANY_CONF"}, {"original_string": "private OutputFieldsDeclarer declarer;", "modifier": "private", "type": "OutputFieldsDeclarer", "declarator": "declarer", "var_name": "declarer"}, {"original_string": "private TopologyContext context;", "modifier": "private", "type": "TopologyContext", "declarator": "context", "var_name": "context"}, {"original_string": "private SpoutOutputCollector collector;", "modifier": "private", "type": "SpoutOutputCollector", "declarator": "collector", "var_name": "collector"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/spout/RandomMessageSpoutTest.java"}, "test_case": {"identifier": "shouldDeclareOutputFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldDeclareOutputFields() {\n    RandomMessageSpout spout = new RandomMessageSpout(messageSize, false);\n\n    spout.declareOutputFields(declarer);\n\n    verify(declarer, times(1)).declare(any(Fields.class));\n  }", "signature": "void shouldDeclareOutputFields()", "full_signature": "@Test public void shouldDeclareOutputFields()", "class_method_signature": "RandomMessageSpoutTest.shouldDeclareOutputFields()", "testcase": true, "constructor": false, "invocations": ["declareOutputFields", "declare", "verify", "times", "any"]}, "focal_class": {"identifier": "RandomMessageSpout", "superclass": "extends BaseRichSpout", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -4100642374496292646L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4100642374496292646L", "var_name": "serialVersionUID"}, {"original_string": "public static final String FIELDS = \"message\";", "modifier": "public static final", "type": "String", "declarator": "FIELDS = \"message\"", "var_name": "FIELDS"}, {"original_string": "public static final String MESSAGE_SIZE = \"message.size\";", "modifier": "public static final", "type": "String", "declarator": "MESSAGE_SIZE = \"message.size\"", "var_name": "MESSAGE_SIZE"}, {"original_string": "public static final int DEFAULT_MESSAGE_SIZE = 100;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MESSAGE_SIZE = 100", "var_name": "DEFAULT_MESSAGE_SIZE"}, {"original_string": "private final int sizeInBytes;", "modifier": "private final", "type": "int", "declarator": "sizeInBytes", "var_name": "sizeInBytes"}, {"original_string": "private long messageCount = 0;", "modifier": "private", "type": "long", "declarator": "messageCount = 0", "var_name": "messageCount"}, {"original_string": "private SpoutOutputCollector collector;", "modifier": "private", "type": "SpoutOutputCollector", "declarator": "collector", "var_name": "collector"}, {"original_string": "private String [] messages = null;", "modifier": "private", "type": "String []", "declarator": "messages = null", "var_name": "messages"}, {"original_string": "private final boolean ackEnabled;", "modifier": "private final", "type": "boolean", "declarator": "ackEnabled", "var_name": "ackEnabled"}, {"original_string": "private Random rand = null;", "modifier": "private", "type": "Random", "declarator": "rand = null", "var_name": "rand"}], "methods": [{"identifier": "RandomMessageSpout", "parameters": "(boolean ackEnabled)", "modifiers": "public", "return": "", "signature": " RandomMessageSpout(boolean ackEnabled)", "full_signature": "public  RandomMessageSpout(boolean ackEnabled)", "class_method_signature": "RandomMessageSpout.RandomMessageSpout(boolean ackEnabled)", "testcase": false, "constructor": true}, {"identifier": "RandomMessageSpout", "parameters": "(int sizeInBytes, boolean ackEnabled)", "modifiers": "public", "return": "", "signature": " RandomMessageSpout(int sizeInBytes, boolean ackEnabled)", "full_signature": "public  RandomMessageSpout(int sizeInBytes, boolean ackEnabled)", "class_method_signature": "RandomMessageSpout.RandomMessageSpout(int sizeInBytes, boolean ackEnabled)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "(Map conf, TopologyContext context, SpoutOutputCollector collector)", "modifiers": "public", "return": "void", "signature": "void open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "full_signature": "public void open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "class_method_signature": "RandomMessageSpout.open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "testcase": false, "constructor": false}, {"identifier": "nextTuple", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void nextTuple()", "full_signature": "@Override public void nextTuple()", "class_method_signature": "RandomMessageSpout.nextTuple()", "testcase": false, "constructor": false}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "RandomMessageSpout.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/spout/RandomMessageSpout.java"}, "focal_method": {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    declarer.declare(new Fields(FIELDS));\n  }", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "RandomMessageSpout.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false, "invocations": ["declare"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}