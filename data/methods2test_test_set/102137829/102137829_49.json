{"test_class": {"identifier": "KeyFileTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/domain/KeyFileTest.java"}, "test_case": {"identifier": "shouldUnmarshallObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUnmarshallObject() {\n        String xml = \"<KeyFile><Key><Data>RP+rYNZL4lrGtDMBPzOuctlh3NAutSG5KGsT38C+qPQ=</Data></Key></KeyFile>\";\n        \n        ByteArrayInputStream inputStream = new ByteArrayInputStream(xml.getBytes());\n        KeyFile keyFile = new SimpleXmlParser().fromXml(inputStream, new NullProtectionStrategy(), KeyFile.class);\n\n        Assert.assertEquals(\"RP+rYNZL4lrGtDMBPzOuctlh3NAutSG5KGsT38C+qPQ=\", keyFile.getKey().getData());\n    }", "signature": "void shouldUnmarshallObject()", "full_signature": "@Test public void shouldUnmarshallObject()", "class_method_signature": "KeyFileTest.shouldUnmarshallObject()", "testcase": true, "constructor": false, "invocations": ["getBytes", "fromXml", "assertEquals", "getData", "getKey"]}, "focal_class": {"identifier": "KeyFile", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Element(name = \"Key\")\n    private Key key;", "modifier": "@Element(name = \"Key\")\n    private", "type": "Key", "declarator": "key", "var_name": "key"}, {"original_string": "private boolean isXmlFile = true;", "modifier": "private", "type": "boolean", "declarator": "isXmlFile = true", "var_name": "isXmlFile"}], "methods": [{"identifier": "KeyFile", "parameters": "()", "modifiers": "public", "return": "", "signature": " KeyFile()", "full_signature": "public  KeyFile()", "class_method_signature": "KeyFile.KeyFile()", "testcase": false, "constructor": true}, {"identifier": "KeyFile", "parameters": "(boolean isXmlFile)", "modifiers": "public", "return": "", "signature": " KeyFile(boolean isXmlFile)", "full_signature": "public  KeyFile(boolean isXmlFile)", "class_method_signature": "KeyFile.KeyFile(boolean isXmlFile)", "testcase": false, "constructor": true}, {"identifier": "KeyFile", "parameters": "(boolean isXmlFile, Key key)", "modifiers": "public", "return": "", "signature": " KeyFile(boolean isXmlFile, Key key)", "full_signature": "public  KeyFile(boolean isXmlFile, Key key)", "class_method_signature": "KeyFile.KeyFile(boolean isXmlFile, Key key)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "Key", "signature": "Key getKey()", "full_signature": "public Key getKey()", "class_method_signature": "KeyFile.getKey()", "testcase": false, "constructor": false}, {"identifier": "isXmlFile", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isXmlFile()", "full_signature": "public boolean isXmlFile()", "class_method_signature": "KeyFile.isXmlFile()", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/domain/KeyFile.java"}, "focal_method": {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "Key", "body": "public Key getKey() {\n        return key;\n    }", "signature": "Key getKey()", "full_signature": "public Key getKey()", "class_method_signature": "KeyFile.getKey()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}