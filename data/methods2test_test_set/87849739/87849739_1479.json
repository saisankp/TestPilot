{"test_class": {"identifier": "DittoDurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/headers/DittoDurationTest.java"}, "test_case": {"identifier": "tryToGetInstanceFromNullDuration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToGetInstanceFromNullDuration() {\n        assertThatNullPointerException()\n                .isThrownBy(() -> DittoDuration.of(null))\n                .withMessage(\"The duration must not be null!\")\n                .withNoCause();\n    }", "signature": "void tryToGetInstanceFromNullDuration()", "full_signature": "@Test public void tryToGetInstanceFromNullDuration()", "class_method_signature": "DittoDurationTest.tryToGetInstanceFromNullDuration()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatNullPointerException", "of"]}, "focal_class": {"identifier": "DittoDuration", "superclass": "", "interfaces": "implements CharSequence", "fields": [{"original_string": "private final long amount;", "modifier": "private final", "type": "long", "declarator": "amount", "var_name": "amount"}, {"original_string": "private final DittoTimeUnit dittoTimeUnit;", "modifier": "private final", "type": "DittoTimeUnit", "declarator": "dittoTimeUnit", "var_name": "dittoTimeUnit"}], "methods": [{"identifier": "DittoDuration", "parameters": "(final long amount, final DittoTimeUnit dittoTimeUnit)", "modifiers": "private", "return": "", "signature": " DittoDuration(final long amount, final DittoTimeUnit dittoTimeUnit)", "full_signature": "private  DittoDuration(final long amount, final DittoTimeUnit dittoTimeUnit)", "class_method_signature": "DittoDuration.DittoDuration(final long amount, final DittoTimeUnit dittoTimeUnit)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final Duration duration)", "modifiers": "static", "return": "DittoDuration", "signature": "DittoDuration of(final Duration duration)", "full_signature": "static DittoDuration of(final Duration duration)", "class_method_signature": "DittoDuration.of(final Duration duration)", "testcase": false, "constructor": false}, {"identifier": "parseDuration", "parameters": "(final CharSequence duration)", "modifiers": "static", "return": "DittoDuration", "signature": "DittoDuration parseDuration(final CharSequence duration)", "full_signature": "static DittoDuration parseDuration(final CharSequence duration)", "class_method_signature": "DittoDuration.parseDuration(final CharSequence duration)", "testcase": false, "constructor": false}, {"identifier": "parseDuration", "parameters": "(final CharSequence duration, final DittoTimeUnit[] dittoTimeUnits)", "modifiers": "private static", "return": "DittoDuration", "signature": "DittoDuration parseDuration(final CharSequence duration, final DittoTimeUnit[] dittoTimeUnits)", "full_signature": "private static DittoDuration parseDuration(final CharSequence duration, final DittoTimeUnit[] dittoTimeUnits)", "class_method_signature": "DittoDuration.parseDuration(final CharSequence duration, final DittoTimeUnit[] dittoTimeUnits)", "testcase": false, "constructor": false}, {"identifier": "parseDurationRegexBased", "parameters": "(final CharSequence duration, final DittoTimeUnit dittoTimeUnit)", "modifiers": "@Nullable private static", "return": "Long", "signature": "Long parseDurationRegexBased(final CharSequence duration, final DittoTimeUnit dittoTimeUnit)", "full_signature": "@Nullable private static Long parseDurationRegexBased(final CharSequence duration, final DittoTimeUnit dittoTimeUnit)", "class_method_signature": "DittoDuration.parseDurationRegexBased(final CharSequence duration, final DittoTimeUnit dittoTimeUnit)", "testcase": false, "constructor": false}, {"identifier": "parseDurationPlain", "parameters": "(final CharSequence charSequence, final CharSequence timeUnitSuffix)", "modifiers": "private static", "return": "Long", "signature": "Long parseDurationPlain(final CharSequence charSequence, final CharSequence timeUnitSuffix)", "full_signature": "private static Long parseDurationPlain(final CharSequence charSequence, final CharSequence timeUnitSuffix)", "class_method_signature": "DittoDuration.parseDurationPlain(final CharSequence charSequence, final CharSequence timeUnitSuffix)", "testcase": false, "constructor": false}, {"identifier": "isZero", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isZero()", "full_signature": " boolean isZero()", "class_method_signature": "DittoDuration.isZero()", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "()", "modifiers": "", "return": "Duration", "signature": "Duration getDuration()", "full_signature": " Duration getDuration()", "class_method_signature": "DittoDuration.getDuration()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "DittoDuration.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "DittoDuration.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "DittoDuration.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DittoDuration.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "DittoDuration.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DittoDuration.hashCode()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/headers/DittoDuration.java"}, "focal_method": {"identifier": "of", "parameters": "(final Duration duration)", "modifiers": "static", "return": "DittoDuration", "body": "static DittoDuration of(final Duration duration) {\n        checkNotNull(duration, \"duration\");\n        checkArgument(duration, d -> !d.isNegative(),\n                () -> MessageFormat.format(\"The duration must not be negative but was <{0}>!\", duration));\n\n        return new DittoDuration(duration.toMillis(), DittoTimeUnit.MILLISECONDS);\n    }", "signature": "DittoDuration of(final Duration duration)", "full_signature": "static DittoDuration of(final Duration duration)", "class_method_signature": "DittoDuration.of(final Duration duration)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkArgument", "isNegative", "format", "toMillis"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}