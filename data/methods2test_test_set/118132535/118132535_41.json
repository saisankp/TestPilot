{"test_class": {"identifier": "MobiusHooksTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ListAppender<ILoggingEvent> appender;", "modifier": "private", "type": "ListAppender<ILoggingEvent>", "declarator": "appender", "var_name": "appender"}, {"original_string": "private Logger logbackLogger;", "modifier": "private", "type": "Logger", "declarator": "logbackLogger", "var_name": "logbackLogger"}], "file": "mobius-core/src/test/java/com/spotify/mobius/MobiusHooksTest.java"}, "test_case": {"identifier": "shouldHaveADefaultHandlerThatLogs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldHaveADefaultHandlerThatLogs() throws Exception {\n    Exception expected = new RuntimeException(\"I'm expected\");\n\n    MobiusHooks.handleError(expected);\n\n    assertThat(appender.list)\n        .extracting(ILoggingEvent::getFormattedMessage)\n        .containsExactly(\"Uncaught error\");\n\n    assertThat(appender.list)\n        .extracting((ILoggingEvent event) -> event.getThrowableProxy().getMessage())\n        .containsExactly(\"I'm expected\");\n  }", "signature": "void shouldHaveADefaultHandlerThatLogs()", "full_signature": "@Test public void shouldHaveADefaultHandlerThatLogs()", "class_method_signature": "MobiusHooksTest.shouldHaveADefaultHandlerThatLogs()", "testcase": true, "constructor": false, "invocations": ["handleError", "containsExactly", "extracting", "assertThat", "containsExactly", "extracting", "assertThat", "getMessage", "getThrowableProxy"]}, "focal_class": {"identifier": "MobiusHooks", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MobiusHooks.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MobiusHooks.class)", "var_name": "LOGGER"}, {"original_string": "private static final ErrorHandler DEFAULT_ERROR_HANDLER =\n      error -> LOGGER.error(\"Uncaught error\", error);", "modifier": "private static final", "type": "ErrorHandler", "declarator": "DEFAULT_ERROR_HANDLER =\n      error -> LOGGER.error(\"Uncaught error\", error)", "var_name": "DEFAULT_ERROR_HANDLER"}, {"original_string": "@Nonnull private static ErrorHandler errorHandler = DEFAULT_ERROR_HANDLER;", "modifier": "@Nonnull private static", "type": "ErrorHandler", "declarator": "errorHandler = DEFAULT_ERROR_HANDLER", "var_name": "errorHandler"}], "methods": [{"identifier": "MobiusHooks", "parameters": "()", "modifiers": "private", "return": "", "signature": " MobiusHooks()", "full_signature": "private  MobiusHooks()", "class_method_signature": "MobiusHooks.MobiusHooks()", "testcase": false, "constructor": true}, {"identifier": "handleError", "parameters": "(Throwable error)", "modifiers": "public static synchronized", "return": "void", "signature": "void handleError(Throwable error)", "full_signature": "public static synchronized void handleError(Throwable error)", "class_method_signature": "MobiusHooks.handleError(Throwable error)", "testcase": false, "constructor": false}, {"identifier": "setErrorHandler", "parameters": "(ErrorHandler newHandler)", "modifiers": "public static synchronized", "return": "void", "signature": "void setErrorHandler(ErrorHandler newHandler)", "full_signature": "public static synchronized void setErrorHandler(ErrorHandler newHandler)", "class_method_signature": "MobiusHooks.setErrorHandler(ErrorHandler newHandler)", "testcase": false, "constructor": false}, {"identifier": "setDefaultErrorHandler", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void setDefaultErrorHandler()", "full_signature": "public static synchronized void setDefaultErrorHandler()", "class_method_signature": "MobiusHooks.setDefaultErrorHandler()", "testcase": false, "constructor": false}], "file": "mobius-core/src/main/java/com/spotify/mobius/MobiusHooks.java"}, "focal_method": {"identifier": "handleError", "parameters": "(Throwable error)", "modifiers": "public static synchronized", "return": "void", "body": "public static synchronized void handleError(Throwable error) {\n    errorHandler.handleError(error);\n  }", "signature": "void handleError(Throwable error)", "full_signature": "public static synchronized void handleError(Throwable error)", "class_method_signature": "MobiusHooks.handleError(Throwable error)", "testcase": false, "constructor": false, "invocations": ["handleError"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}