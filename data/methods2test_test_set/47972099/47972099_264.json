{"test_class": {"identifier": "BufferSpillerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BufferSpillerTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BufferSpillerTest.class)", "var_name": "LOG"}, {"original_string": "private static final int PAGE_SIZE = 4096;", "modifier": "private static final", "type": "int", "declarator": "PAGE_SIZE = 4096", "var_name": "PAGE_SIZE"}, {"original_string": "private static IOManager IO_MANAGER;", "modifier": "private static", "type": "IOManager", "declarator": "IO_MANAGER", "var_name": "IO_MANAGER"}, {"original_string": "private BufferSpiller spiller;", "modifier": "private", "type": "BufferSpiller", "declarator": "spiller", "var_name": "spiller"}], "file": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/BufferSpillerTest.java"}, "test_case": {"identifier": "testRollOverEmptySequences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRollOverEmptySequences() {\n\t\ttry {\n\t\t\tassertNull(spiller.rollOver());\n\t\t\tassertNull(spiller.rollOver());\n\t\t\tassertNull(spiller.rollOver());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}", "signature": "void testRollOverEmptySequences()", "full_signature": "@Test public void testRollOverEmptySequences()", "class_method_signature": "BufferSpillerTest.testRollOverEmptySequences()", "testcase": true, "constructor": false, "invocations": ["assertNull", "rollOver", "assertNull", "rollOver", "assertNull", "rollOver", "printStackTrace", "fail", "getMessage"]}, "focal_class": {"identifier": "BufferSpiller", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AtomicInteger DIRECTORY_INDEX = new AtomicInteger(0);", "modifier": "private static final", "type": "AtomicInteger", "declarator": "DIRECTORY_INDEX = new AtomicInteger(0)", "var_name": "DIRECTORY_INDEX"}, {"original_string": "private static final int READ_BUFFER_SIZE = 1024 * 1024;", "modifier": "private static final", "type": "int", "declarator": "READ_BUFFER_SIZE = 1024 * 1024", "var_name": "READ_BUFFER_SIZE"}, {"original_string": "private final File tempDir;", "modifier": "private final", "type": "File", "declarator": "tempDir", "var_name": "tempDir"}, {"original_string": "private final String spillFilePrefix;", "modifier": "private final", "type": "String", "declarator": "spillFilePrefix", "var_name": "spillFilePrefix"}, {"original_string": "private final ByteBuffer readBuffer;", "modifier": "private final", "type": "ByteBuffer", "declarator": "readBuffer", "var_name": "readBuffer"}, {"original_string": "private final ByteBuffer headBuffer;", "modifier": "private final", "type": "ByteBuffer", "declarator": "headBuffer", "var_name": "headBuffer"}, {"original_string": "private final ByteBuffer[] sources;", "modifier": "private final", "type": "ByteBuffer[]", "declarator": "sources", "var_name": "sources"}, {"original_string": "private File currentSpillFile;", "modifier": "private", "type": "File", "declarator": "currentSpillFile", "var_name": "currentSpillFile"}, {"original_string": "private FileChannel currentChannel;", "modifier": "private", "type": "FileChannel", "declarator": "currentChannel", "var_name": "currentChannel"}, {"original_string": "private final int pageSize;", "modifier": "private final", "type": "int", "declarator": "pageSize", "var_name": "pageSize"}, {"original_string": "private int fileCounter;", "modifier": "private", "type": "int", "declarator": "fileCounter", "var_name": "fileCounter"}, {"original_string": "private boolean hasWritten;", "modifier": "private", "type": "boolean", "declarator": "hasWritten", "var_name": "hasWritten"}], "methods": [{"identifier": "BufferSpiller", "parameters": "(IOManager ioManager, int pageSize)", "modifiers": "public", "return": "", "signature": " BufferSpiller(IOManager ioManager, int pageSize)", "full_signature": "public  BufferSpiller(IOManager ioManager, int pageSize)", "class_method_signature": "BufferSpiller.BufferSpiller(IOManager ioManager, int pageSize)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(BufferOrEvent boe)", "modifiers": "public", "return": "void", "signature": "void add(BufferOrEvent boe)", "full_signature": "public void add(BufferOrEvent boe)", "class_method_signature": "BufferSpiller.add(BufferOrEvent boe)", "testcase": false, "constructor": false}, {"identifier": "rollOver", "parameters": "()", "modifiers": "public", "return": "SpilledBufferOrEventSequence", "signature": "SpilledBufferOrEventSequence rollOver()", "full_signature": "public SpilledBufferOrEventSequence rollOver()", "class_method_signature": "BufferSpiller.rollOver()", "testcase": false, "constructor": false}, {"identifier": "rollOverWithNewBuffer", "parameters": "()", "modifiers": "public", "return": "SpilledBufferOrEventSequence", "signature": "SpilledBufferOrEventSequence rollOverWithNewBuffer()", "full_signature": "public SpilledBufferOrEventSequence rollOverWithNewBuffer()", "class_method_signature": "BufferSpiller.rollOverWithNewBuffer()", "testcase": false, "constructor": false}, {"identifier": "rollOverInternal", "parameters": "(boolean newBuffer)", "modifiers": "private", "return": "SpilledBufferOrEventSequence", "signature": "SpilledBufferOrEventSequence rollOverInternal(boolean newBuffer)", "full_signature": "private SpilledBufferOrEventSequence rollOverInternal(boolean newBuffer)", "class_method_signature": "BufferSpiller.rollOverInternal(boolean newBuffer)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "BufferSpiller.close()", "testcase": false, "constructor": false}, {"identifier": "getCurrentSpillFile", "parameters": "()", "modifiers": "", "return": "File", "signature": "File getCurrentSpillFile()", "full_signature": " File getCurrentSpillFile()", "class_method_signature": "BufferSpiller.getCurrentSpillFile()", "testcase": false, "constructor": false}, {"identifier": "getCurrentChannel", "parameters": "()", "modifiers": "", "return": "FileChannel", "signature": "FileChannel getCurrentChannel()", "full_signature": " FileChannel getCurrentChannel()", "class_method_signature": "BufferSpiller.getCurrentChannel()", "testcase": false, "constructor": false}, {"identifier": "createSpillingChannel", "parameters": "()", "modifiers": "@SuppressWarnings(\"resource\") private", "return": "void", "signature": "void createSpillingChannel()", "full_signature": "@SuppressWarnings(\"resource\") private void createSpillingChannel()", "class_method_signature": "BufferSpiller.createSpillingChannel()", "testcase": false, "constructor": false}], "file": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/BufferSpiller.java"}, "focal_method": {"identifier": "rollOver", "parameters": "()", "modifiers": "public", "return": "SpilledBufferOrEventSequence", "body": "public SpilledBufferOrEventSequence rollOver() throws IOException {\n\t\treturn rollOverInternal(false);\n\t}", "signature": "SpilledBufferOrEventSequence rollOver()", "full_signature": "public SpilledBufferOrEventSequence rollOver()", "class_method_signature": "BufferSpiller.rollOver()", "testcase": false, "constructor": false, "invocations": ["rollOverInternal"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}