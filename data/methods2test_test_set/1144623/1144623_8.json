{"test_class": {"identifier": "TestOps", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TemplateContext ctx;", "modifier": "private", "type": "TemplateContext", "declarator": "ctx", "var_name": "ctx"}], "file": "stencil/src/test/java/net/stencilproject/template/TestOps.java"}, "test_case": {"identifier": "testIn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIn() {\n\t\tassertTrue(Ops.in(null, 1, new LongRange(1, 2)));\n\t\tassertTrue(Ops.in(null, 1, new DoubleRange(1, 2)));\n\t\tassertFalse(Ops.in(null, 0, new LongRange(1, 2)));\n\t\tassertFalse(Ops.in(null, 0, new DoubleRange(1, 2)));\n\n\t\tassertTrue(Ops.in(null, \"a\", \"cat\"));\n\t\tassertTrue(Ops.in(null, \"a\", 'a'));\n\t\tassertFalse(Ops.in(null, \"a\", \"boo\"));\n\t\tassertFalse(Ops.in(null, \"a\", 'o'));\n\n\t\tassertTrue(Ops.in(null, 1, Arrays.asList(1, 2, 3)));\n\t\tassertTrue(Ops.in(null, 1L, Arrays.asList(1, 2, 3)));\n\t\tassertFalse(Ops.in(null, 10, Arrays.asList(1, 2, 3)));\n\t\tassertFalse(Ops.in(null, 10L, Arrays.asList(1, 2, 3)));\n\n\t\tassertTrue(Ops.in(null, 1, new Object[] { 1, 2, 3 }));\n\t\tassertTrue(Ops.in(null, 1, new int[] { 1, 2, 3 }));\n\t\tassertTrue(Ops.in(null, 1, new long[] { 1, 2, 3 }));\n\t\tassertTrue(Ops.in(null, 1L, new Object[] { 1, 2, 3 }));\n\t\tassertTrue(Ops.in(null, 1L, new int[] { 1, 2, 3 }));\n\t\tassertTrue(Ops.in(null, 1L, new long[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10, new Object[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10, new int[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10, new long[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10L, new Object[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10L, new int[] { 1, 2, 3 }));\n\t\tassertFalse(Ops.in(null, 10L, new long[] { 1, 2, 3 }));\n\n\t\tMap<Object, Object> map = Maps.newHashMap();\n\t\tmap.put(\"a\", \"b\");\n\n\t\tassertTrue(Ops.in(null, \"a\", map));\n\t\tassertTrue(Ops.in(null, 'a', map));\n\t\tassertFalse(Ops.in(null, \"b\", map));\n\t\tassertFalse(Ops.in(null, 'b', map));\n\t}", "signature": "void testIn()", "full_signature": "@Test public void testIn()", "class_method_signature": "TestOps.testIn()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "in", "assertTrue", "in", "assertFalse", "in", "assertFalse", "in", "assertTrue", "in", "assertTrue", "in", "assertFalse", "in", "assertFalse", "in", "assertTrue", "in", "asList", "assertTrue", "in", "asList", "assertFalse", "in", "asList", "assertFalse", "in", "asList", "assertTrue", "in", "assertTrue", "in", "assertTrue", "in", "assertTrue", "in", "assertTrue", "in", "assertTrue", "in", "assertFalse", "in", "assertFalse", "in", "assertFalse", "in", "assertFalse", "in", "assertFalse", "in", "assertFalse", "in", "newHashMap", "put", "assertTrue", "in", "assertTrue", "in", "assertFalse", "in", "assertFalse", "in"]}, "focal_class": {"identifier": "Ops", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int UNDEFINED_COMPARISON = 0;", "modifier": "private static final", "type": "int", "declarator": "UNDEFINED_COMPARISON = 0", "var_name": "UNDEFINED_COMPARISON"}], "methods": [{"identifier": "and", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object and(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object and(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.and(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object or(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object or(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.or(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object iand(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object iand(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.iand(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object ior(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object ior(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.ior(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object xor(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object xor(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.xor(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "div", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object div(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object div(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.div(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "mul", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object mul(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object mul(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.mul(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "mod", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object mod(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object mod(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.mod(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "binaryPlus", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object binaryPlus(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object binaryPlus(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.binaryPlus(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "binaryMinus", "parameters": "(TemplateContext ctx, Object value1, final Object value2)", "modifiers": "public static", "return": "Object", "signature": "Object binaryMinus(TemplateContext ctx, Object value1, final Object value2)", "full_signature": "public static Object binaryMinus(TemplateContext ctx, Object value1, final Object value2)", "class_method_signature": "Ops.binaryMinus(TemplateContext ctx, Object value1, final Object value2)", "testcase": false, "constructor": false}, {"identifier": "unaryMinus", "parameters": "(TemplateContext ctx, Object value)", "modifiers": "public static", "return": "Object", "signature": "Object unaryMinus(TemplateContext ctx, Object value)", "full_signature": "public static Object unaryMinus(TemplateContext ctx, Object value)", "class_method_signature": "Ops.unaryMinus(TemplateContext ctx, Object value)", "testcase": false, "constructor": false}, {"identifier": "unaryPlus", "parameters": "(TemplateContext ctx, Object value)", "modifiers": "public static", "return": "Object", "signature": "Object unaryPlus(TemplateContext ctx, Object value)", "full_signature": "public static Object unaryPlus(TemplateContext ctx, Object value)", "class_method_signature": "Ops.unaryPlus(TemplateContext ctx, Object value)", "testcase": false, "constructor": false}, {"identifier": "bitwiseNot", "parameters": "(TemplateContext ctx, Object value)", "modifiers": "public static", "return": "long", "signature": "long bitwiseNot(TemplateContext ctx, Object value)", "full_signature": "public static long bitwiseNot(TemplateContext ctx, Object value)", "class_method_signature": "Ops.bitwiseNot(TemplateContext ctx, Object value)", "testcase": false, "constructor": false}, {"identifier": "booleanNot", "parameters": "(TemplateContext ctx, Object value)", "modifiers": "public static", "return": "boolean", "signature": "boolean booleanNot(TemplateContext ctx, Object value)", "full_signature": "public static boolean booleanNot(TemplateContext ctx, Object value)", "class_method_signature": "Ops.booleanNot(TemplateContext ctx, Object value)", "testcase": false, "constructor": false}, {"identifier": "lshift", "parameters": "(TemplateContext ctx, Object value, Object count)", "modifiers": "public static", "return": "long", "signature": "long lshift(TemplateContext ctx, Object value, Object count)", "full_signature": "public static long lshift(TemplateContext ctx, Object value, Object count)", "class_method_signature": "Ops.lshift(TemplateContext ctx, Object value, Object count)", "testcase": false, "constructor": false}, {"identifier": "rshift", "parameters": "(TemplateContext ctx, Object value, Object count)", "modifiers": "public static", "return": "long", "signature": "long rshift(TemplateContext ctx, Object value, Object count)", "full_signature": "public static long rshift(TemplateContext ctx, Object value, Object count)", "class_method_signature": "Ops.rshift(TemplateContext ctx, Object value, Object count)", "testcase": false, "constructor": false}, {"identifier": "sliceFixup", "parameters": "(int i, int length)", "modifiers": "private static", "return": "int", "signature": "int sliceFixup(int i, int length)", "full_signature": "private static int sliceFixup(int i, int length)", "class_method_signature": "Ops.sliceFixup(int i, int length)", "testcase": false, "constructor": false}, {"identifier": "slice", "parameters": "(TemplateContext ctx, Object target, Object startObject, Object endObject, Object strideObject)", "modifiers": "public static", "return": "Object", "signature": "Object slice(TemplateContext ctx, Object target, Object startObject, Object endObject, Object strideObject)", "full_signature": "public static Object slice(TemplateContext ctx, Object target, Object startObject, Object endObject, Object strideObject)", "class_method_signature": "Ops.slice(TemplateContext ctx, Object target, Object startObject, Object endObject, Object strideObject)", "testcase": false, "constructor": false}, {"identifier": "safeInvoke", "parameters": "(TemplateContext ctx, CachedMethodInfo method, Object target, Object... args)", "modifiers": "private static", "return": "Object", "signature": "Object safeInvoke(TemplateContext ctx, CachedMethodInfo method, Object target, Object... args)", "full_signature": "private static Object safeInvoke(TemplateContext ctx, CachedMethodInfo method, Object target, Object... args)", "class_method_signature": "Ops.safeInvoke(TemplateContext ctx, CachedMethodInfo method, Object target, Object... args)", "testcase": false, "constructor": false}, {"identifier": "indexFixup", "parameters": "(int i, int length)", "modifiers": "private static", "return": "int", "signature": "int indexFixup(int i, int length)", "full_signature": "private static int indexFixup(int i, int length)", "class_method_signature": "Ops.indexFixup(int i, int length)", "testcase": false, "constructor": false}, {"identifier": "dot", "parameters": "(TemplateContext ctx, Object target, Object child)", "modifiers": "public static", "return": "Object", "signature": "Object dot(TemplateContext ctx, Object target, Object child)", "full_signature": "public static Object dot(TemplateContext ctx, Object target, Object child)", "class_method_signature": "Ops.dot(TemplateContext ctx, Object target, Object child)", "testcase": false, "constructor": false}, {"identifier": "qdot", "parameters": "(TemplateContext ctx, Object target, Object child)", "modifiers": "public static", "return": "Object", "signature": "Object qdot(TemplateContext ctx, Object target, Object child)", "full_signature": "public static Object qdot(TemplateContext ctx, Object target, Object child)", "class_method_signature": "Ops.qdot(TemplateContext ctx, Object target, Object child)", "testcase": false, "constructor": false}, {"identifier": "dotInternal", "parameters": "(TemplateContext ctx, Object target, Object child)", "modifiers": "private static", "return": "Object", "signature": "Object dotInternal(TemplateContext ctx, Object target, Object child)", "full_signature": "private static Object dotInternal(TemplateContext ctx, Object target, Object child)", "class_method_signature": "Ops.dotInternal(TemplateContext ctx, Object target, Object child)", "testcase": false, "constructor": false}, {"identifier": "pipe", "parameters": "(TemplateContext ctx, Object target, Object filterName, Object[] params)", "modifiers": "public static", "return": "Object", "signature": "Object pipe(TemplateContext ctx, Object target, Object filterName, Object[] params)", "full_signature": "public static Object pipe(TemplateContext ctx, Object target, Object filterName, Object[] params)", "class_method_signature": "Ops.pipe(TemplateContext ctx, Object target, Object filterName, Object[] params)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(TemplateContext ctx, Object target, Object methodName, Object[] params)", "modifiers": "public static", "return": "Object", "signature": "Object invoke(TemplateContext ctx, Object target, Object methodName, Object[] params)", "full_signature": "public static Object invoke(TemplateContext ctx, Object target, Object methodName, Object[] params)", "class_method_signature": "Ops.invoke(TemplateContext ctx, Object target, Object methodName, Object[] params)", "testcase": false, "constructor": false}, {"identifier": "newRange", "parameters": "(TemplateContext ctx, Object from, Object to)", "modifiers": "public static", "return": "Object", "signature": "Object newRange(TemplateContext ctx, Object from, Object to)", "full_signature": "public static Object newRange(TemplateContext ctx, Object from, Object to)", "class_method_signature": "Ops.newRange(TemplateContext ctx, Object from, Object to)", "testcase": false, "constructor": false}, {"identifier": "newRangeBy", "parameters": "(TemplateContext ctx, Object from, Object to, Object by)", "modifiers": "public static", "return": "Object", "signature": "Object newRangeBy(TemplateContext ctx, Object from, Object to, Object by)", "full_signature": "public static Object newRangeBy(TemplateContext ctx, Object from, Object to, Object by)", "class_method_signature": "Ops.newRangeBy(TemplateContext ctx, Object from, Object to, Object by)", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "(TemplateContext ctx, Object o, Object in)", "modifiers": "public static", "return": "boolean", "signature": "boolean in(TemplateContext ctx, Object o, Object in)", "full_signature": "public static boolean in(TemplateContext ctx, Object o, Object in)", "class_method_signature": "Ops.in(TemplateContext ctx, Object o, Object in)", "testcase": false, "constructor": false}], "file": "stencil/src/main/java/net/stencilproject/template/Ops.java"}, "focal_method": {"identifier": "in", "parameters": "(TemplateContext ctx, Object o, Object in)", "modifiers": "public static", "return": "boolean", "body": "public static boolean in(TemplateContext ctx, Object o, Object in) {\n\t\tif (in == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (in instanceof LongRange) {\n\t\t\treturn ((LongRange) in).in(Types.toLong(ctx, o));\n\t\t}\n\n\t\tif (in instanceof DoubleRange) {\n\t\t\treturn ((DoubleRange) in).in(Types.toDouble(ctx, o));\n\t\t}\n\n\t\tif (in instanceof Map<?, ?>) {\n\t\t\tMap<?, ?> map = (Map<?, ?>) in;\n\t\t\treturn map.containsKey(o) || map.containsKey(Types.toString(ctx, o));\n\t\t}\n\n\t\tif (Types.isString(ctx, in)) {\n\t\t\treturn Types.toString(ctx, in).contains(Types.toString(ctx, o));\n\t\t}\n\n\t\tif (in instanceof Iterable<?> || Types.isArray(ctx, in)) {\n\t\t\tIterator<?> it = Types.toIterator(ctx, in);\n\t\t\twhile (it.hasNext()) {\n\t\t\t\tObject item = it.next();\n\t\t\t\tif (CompareOps.eq(ctx, o, item)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}", "signature": "boolean in(TemplateContext ctx, Object o, Object in)", "full_signature": "public static boolean in(TemplateContext ctx, Object o, Object in)", "class_method_signature": "Ops.in(TemplateContext ctx, Object o, Object in)", "testcase": false, "constructor": false, "invocations": ["in", "toLong", "in", "toDouble", "containsKey", "containsKey", "toString", "isString", "contains", "toString", "toString", "isArray", "toIterator", "hasNext", "next", "eq"]}, "repository": {"repo_id": 1144623, "url": "https://github.com/mmastrac/Stencil", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 4680, "license": "licensed"}}