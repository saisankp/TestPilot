{"test_class": {"identifier": "TomcatXmppWebSocketServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServerRuntimeContext serverRuntimeContext = Mockito.mock(ServerRuntimeContext.class);", "modifier": "private", "type": "ServerRuntimeContext", "declarator": "serverRuntimeContext = Mockito.mock(ServerRuntimeContext.class)", "var_name": "serverRuntimeContext"}, {"original_string": "private StanzaProcessor stanzaProcessor = Mockito.mock(StanzaProcessor.class);", "modifier": "private", "type": "StanzaProcessor", "declarator": "stanzaProcessor = Mockito.mock(StanzaProcessor.class)", "var_name": "stanzaProcessor"}], "file": "server/extensions/websockets/src/test/java/org/apache/vysper/xmpp/extension/websockets/TomcatXmppWebSocketServletTest.java"}, "test_case": {"identifier": "doWebSocketConnectMissingAttribute", "parameters": "()", "modifiers": "@Test(expected=RuntimeException.class) public", "return": "void", "body": "@Test(expected=RuntimeException.class)\n    public void doWebSocketConnectMissingAttribute() throws ServletException {\n        ServletContext servletContext = Mockito.mock(ServletContext.class);\n\n        ServletConfig servletConfig = Mockito.mock(ServletConfig.class);\n        Mockito.when(servletConfig.getServletContext()).thenReturn(servletContext);\n\n        JettyXmppWebSocketServlet servlet = new JettyXmppWebSocketServlet();\n        servlet.init(servletConfig);\n    }", "signature": "void doWebSocketConnectMissingAttribute()", "full_signature": "@Test(expected=RuntimeException.class) public void doWebSocketConnectMissingAttribute()", "class_method_signature": "TomcatXmppWebSocketServletTest.doWebSocketConnectMissingAttribute()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getServletContext", "init"]}, "focal_class": {"identifier": "TomcatXmppWebSocketServlet", "superclass": "extends WebSocketServlet", "interfaces": "", "fields": [{"original_string": "public static final String SERVER_RUNTIME_CONTEXT_ATTRIBUTE = \"org.apache.vysper.xmpp.server.ServerRuntimeContext\";", "modifier": "public static final", "type": "String", "declarator": "SERVER_RUNTIME_CONTEXT_ATTRIBUTE = \"org.apache.vysper.xmpp.server.ServerRuntimeContext\"", "var_name": "SERVER_RUNTIME_CONTEXT_ATTRIBUTE"}, {"original_string": "private static final long serialVersionUID = 197413099255392884L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 197413099255392884L", "var_name": "serialVersionUID"}, {"original_string": "private static final String SUB_PROTOCOL = \"xmpp\";", "modifier": "private static final", "type": "String", "declarator": "SUB_PROTOCOL = \"xmpp\"", "var_name": "SUB_PROTOCOL"}, {"original_string": "private ServerRuntimeContext serverRuntimeContext;", "modifier": "private", "type": "ServerRuntimeContext", "declarator": "serverRuntimeContext", "var_name": "serverRuntimeContext"}, {"original_string": "private StanzaProcessor stanzaProcessor;", "modifier": "private", "type": "StanzaProcessor", "declarator": "stanzaProcessor", "var_name": "stanzaProcessor"}], "methods": [{"identifier": "TomcatXmppWebSocketServlet", "parameters": "()", "modifiers": "public", "return": "", "signature": " TomcatXmppWebSocketServlet()", "full_signature": "public  TomcatXmppWebSocketServlet()", "class_method_signature": "TomcatXmppWebSocketServlet.TomcatXmppWebSocketServlet()", "testcase": false, "constructor": true}, {"identifier": "TomcatXmppWebSocketServlet", "parameters": "(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "modifiers": "public", "return": "", "signature": " TomcatXmppWebSocketServlet(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "full_signature": "public  TomcatXmppWebSocketServlet(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "class_method_signature": "TomcatXmppWebSocketServlet.TomcatXmppWebSocketServlet(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "TomcatXmppWebSocketServlet.init()", "testcase": false, "constructor": false}, {"identifier": "selectSubProtocol", "parameters": "(List<String> subProtocols)", "modifiers": "@Override protected", "return": "String", "signature": "String selectSubProtocol(List<String> subProtocols)", "full_signature": "@Override protected String selectSubProtocol(List<String> subProtocols)", "class_method_signature": "TomcatXmppWebSocketServlet.selectSubProtocol(List<String> subProtocols)", "testcase": false, "constructor": false}, {"identifier": "createWebSocketInbound", "parameters": "(String subProtocol)", "modifiers": "@Override protected", "return": "StreamInbound", "signature": "StreamInbound createWebSocketInbound(String subProtocol)", "full_signature": "@Override protected StreamInbound createWebSocketInbound(String subProtocol)", "class_method_signature": "TomcatXmppWebSocketServlet.createWebSocketInbound(String subProtocol)", "testcase": false, "constructor": false}], "file": "server/extensions/websockets/src/main/java/org/apache/vysper/xmpp/extension/websockets/TomcatXmppWebSocketServlet.java"}, "focal_method": {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void init() throws ServletException {\n        super.init();\n\n        if (serverRuntimeContext == null) {\n            serverRuntimeContext = (ServerRuntimeContext) getServletContext()\n                    .getAttribute(SERVER_RUNTIME_CONTEXT_ATTRIBUTE);\n            if (serverRuntimeContext == null) {\n                throw new RuntimeException(\"Failed to get Vysper ServerRuntimeContext from servlet context attribute \\\"\"\n                        + SERVER_RUNTIME_CONTEXT_ATTRIBUTE + \"\\\"\");\n            }\n        }\n\n        if (stanzaProcessor == null) {\n            stanzaProcessor = (StanzaProcessor) getServletContext()\n                    .getAttribute(StanzaProcessor.class.getCanonicalName());\n            if (stanzaProcessor == null) {\n                throw new RuntimeException(\"Failed to get Vysper StanzaProcessor from servlet context attribute \\\"\"\n                        + StanzaProcessor.class.getCanonicalName() + \"\\\"\");\n            }\n        }\n    }", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "TomcatXmppWebSocketServlet.init()", "testcase": false, "constructor": false, "invocations": ["init", "getAttribute", "getServletContext", "getAttribute", "getServletContext", "getCanonicalName", "getCanonicalName"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}