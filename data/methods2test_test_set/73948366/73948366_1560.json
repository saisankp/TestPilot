{"test_class": {"identifier": "FileConnectionTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/zms/src/test/java/com/yahoo/athenz/zms/store/file/FileConnectionTest.java"}, "test_case": {"identifier": "testDeleteRole", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteRole() {\n        File fileDir = new File(\"/home/athenz/zms_store\");\n        File quotaDir = new File(\"/home/athenz/zms_quota\");\n        try (FileConnection fileconnection = new FileConnection(fileDir, quotaDir)) {\n            try {\n                fileconnection.deleteRole(\"domain1\", \"role1\");\n                fail();\n            } catch (Exception ex) {\n                assertTrue(true);\n            }\n        }\n    }", "signature": "void testDeleteRole()", "full_signature": "@Test public void testDeleteRole()", "class_method_signature": "FileConnectionTest.testDeleteRole()", "testcase": true, "constructor": false, "invocations": ["deleteRole", "fail", "assertTrue"]}, "focal_class": {"identifier": "FileConnection", "superclass": "", "interfaces": "implements ObjectStoreConnection", "fields": [{"original_string": "private static final String ALL_PRINCIPALS  = \"*\";", "modifier": "private static final", "type": "String", "declarator": "ALL_PRINCIPALS  = \"*\"", "var_name": "ALL_PRINCIPALS"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(FileConnection.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(FileConnection.class)", "var_name": "LOG"}, {"original_string": "final File rootDir;", "modifier": "final", "type": "File", "declarator": "rootDir", "var_name": "rootDir"}, {"original_string": "File quotaDir;", "modifier": "", "type": "File", "declarator": "quotaDir", "var_name": "quotaDir"}], "methods": [{"identifier": "FileConnection", "parameters": "(File rootDir, File quotaDir)", "modifiers": "public", "return": "", "signature": " FileConnection(File rootDir, File quotaDir)", "full_signature": "public  FileConnection(File rootDir, File quotaDir)", "class_method_signature": "FileConnection.FileConnection(File rootDir, File quotaDir)", "testcase": false, "constructor": true}, {"identifier": "commitChanges", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void commitChanges()", "full_signature": "@Override public void commitChanges()", "class_method_signature": "FileConnection.commitChanges()", "testcase": false, "constructor": false}, {"identifier": "rollbackChanges", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void rollbackChanges()", "full_signature": "@Override public void rollbackChanges()", "class_method_signature": "FileConnection.rollbackChanges()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "FileConnection.close()", "testcase": false, "constructor": false}, {"identifier": "setOperationTimeout", "parameters": "(int opTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void setOperationTimeout(int opTimeout)", "full_signature": "@Override public void setOperationTimeout(int opTimeout)", "class_method_signature": "FileConnection.setOperationTimeout(int opTimeout)", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "Domain", "signature": "Domain getDomain(String domainName)", "full_signature": "@Override public Domain getDomain(String domainName)", "class_method_signature": "FileConnection.getDomain(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "(DomainStruct domainStruct)", "modifiers": "private", "return": "Domain", "signature": "Domain getDomain(DomainStruct domainStruct)", "full_signature": "private Domain getDomain(DomainStruct domainStruct)", "class_method_signature": "FileConnection.getDomain(DomainStruct domainStruct)", "testcase": false, "constructor": false}, {"identifier": "getDomainList", "parameters": "()", "modifiers": "private", "return": "String[]", "signature": "String[] getDomainList()", "full_signature": "private String[] getDomainList()", "class_method_signature": "FileConnection.getDomainList()", "testcase": false, "constructor": false}, {"identifier": "getDomainModTimestamp", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "long", "signature": "long getDomainModTimestamp(String domainName)", "full_signature": "@Override public long getDomainModTimestamp(String domainName)", "class_method_signature": "FileConnection.getDomainModTimestamp(String domainName)", "testcase": false, "constructor": false}, {"identifier": "insertDomain", "parameters": "(Domain domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertDomain(Domain domain)", "full_signature": "@Override public boolean insertDomain(Domain domain)", "class_method_signature": "FileConnection.insertDomain(Domain domain)", "testcase": false, "constructor": false}, {"identifier": "verifyDomainProductIdUniqueness", "parameters": "(String name, Integer productId, String caller)", "modifiers": "", "return": "void", "signature": "void verifyDomainProductIdUniqueness(String name, Integer productId, String caller)", "full_signature": " void verifyDomainProductIdUniqueness(String name, Integer productId, String caller)", "class_method_signature": "FileConnection.verifyDomainProductIdUniqueness(String name, Integer productId, String caller)", "testcase": false, "constructor": false}, {"identifier": "updateDomain", "parameters": "(Domain domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateDomain(Domain domain)", "full_signature": "@Override public boolean updateDomain(Domain domain)", "class_method_signature": "FileConnection.updateDomain(Domain domain)", "testcase": false, "constructor": false}, {"identifier": "deleteDomain", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteDomain(String domainName)", "full_signature": "@Override public boolean deleteDomain(String domainName)", "class_method_signature": "FileConnection.deleteDomain(String domainName)", "testcase": false, "constructor": false}, {"identifier": "updateDomainModTimestamp", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateDomainModTimestamp(String domainName)", "full_signature": "@Override public boolean updateDomainModTimestamp(String domainName)", "class_method_signature": "FileConnection.updateDomainModTimestamp(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listDomains", "parameters": "(String prefix, long modifiedSince)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listDomains(String prefix, long modifiedSince)", "full_signature": "@Override public List<String> listDomains(String prefix, long modifiedSince)", "class_method_signature": "FileConnection.listDomains(String prefix, long modifiedSince)", "testcase": false, "constructor": false}, {"identifier": "lookupDomainByRole", "parameters": "(String roleMember, String roleName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> lookupDomainByRole(String roleMember, String roleName)", "full_signature": "@Override public List<String> lookupDomainByRole(String roleMember, String roleName)", "class_method_signature": "FileConnection.lookupDomainByRole(String roleMember, String roleName)", "testcase": false, "constructor": false}, {"identifier": "lookupDomainById", "parameters": "(String account, int productId)", "modifiers": "@Override public", "return": "String", "signature": "String lookupDomainById(String account, int productId)", "full_signature": "@Override public String lookupDomainById(String account, int productId)", "class_method_signature": "FileConnection.lookupDomainById(String account, int productId)", "testcase": false, "constructor": false}, {"identifier": "getAthenzDomain", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "AthenzDomain", "signature": "AthenzDomain getAthenzDomain(String domainName)", "full_signature": "@Override public AthenzDomain getAthenzDomain(String domainName)", "class_method_signature": "FileConnection.getAthenzDomain(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listModifiedDomains", "parameters": "(long modifiedSince)", "modifiers": "@Override public", "return": "DomainMetaList", "signature": "DomainMetaList listModifiedDomains(long modifiedSince)", "full_signature": "@Override public DomainMetaList listModifiedDomains(long modifiedSince)", "class_method_signature": "FileConnection.listModifiedDomains(long modifiedSince)", "testcase": false, "constructor": false}, {"identifier": "insertDomainTemplate", "parameters": "(String domainName, String templateName, String params)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertDomainTemplate(String domainName, String templateName, String params)", "full_signature": "@Override public boolean insertDomainTemplate(String domainName, String templateName, String params)", "class_method_signature": "FileConnection.insertDomainTemplate(String domainName, String templateName, String params)", "testcase": false, "constructor": false}, {"identifier": "updateDomainTemplate", "parameters": "(String domainName, String templateName, TemplateMetaData templateMetaData)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateDomainTemplate(String domainName, String templateName, TemplateMetaData templateMetaData)", "full_signature": "@Override public boolean updateDomainTemplate(String domainName, String templateName, TemplateMetaData templateMetaData)", "class_method_signature": "FileConnection.updateDomainTemplate(String domainName, String templateName, TemplateMetaData templateMetaData)", "testcase": false, "constructor": false}, {"identifier": "deleteDomainTemplate", "parameters": "(String domainName, String templateName, String params)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteDomainTemplate(String domainName, String templateName, String params)", "full_signature": "@Override public boolean deleteDomainTemplate(String domainName, String templateName, String params)", "class_method_signature": "FileConnection.deleteDomainTemplate(String domainName, String templateName, String params)", "testcase": false, "constructor": false}, {"identifier": "listDomainTemplates", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listDomainTemplates(String domainName)", "full_signature": "@Override public List<String> listDomainTemplates(String domainName)", "class_method_signature": "FileConnection.listDomainTemplates(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getDomainFromTemplateName", "parameters": "(Map<String, Integer> templateNameAndLatestVersion)", "modifiers": "@Override public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion)", "full_signature": "@Override public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion)", "class_method_signature": "FileConnection.getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion)", "testcase": false, "constructor": false}, {"identifier": "listPrincipalRoles", "parameters": "(String domainName, String principalName)", "modifiers": "@Override public", "return": "List<PrincipalRole>", "signature": "List<PrincipalRole> listPrincipalRoles(String domainName, String principalName)", "full_signature": "@Override public List<PrincipalRole> listPrincipalRoles(String domainName, String principalName)", "class_method_signature": "FileConnection.listPrincipalRoles(String domainName, String principalName)", "testcase": false, "constructor": false}, {"identifier": "addPrincipalRoles", "parameters": "(DomainStruct domainStruct, List<PrincipalRole> roles,\n            String domainName, String principalName)", "modifiers": "public", "return": "void", "signature": "void addPrincipalRoles(DomainStruct domainStruct, List<PrincipalRole> roles,\n            String domainName, String principalName)", "full_signature": "public void addPrincipalRoles(DomainStruct domainStruct, List<PrincipalRole> roles,\n            String domainName, String principalName)", "class_method_signature": "FileConnection.addPrincipalRoles(DomainStruct domainStruct, List<PrincipalRole> roles,\n            String domainName, String principalName)", "testcase": false, "constructor": false}, {"identifier": "listPrincipals", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listPrincipals(String domainName)", "full_signature": "@Override public List<String> listPrincipals(String domainName)", "class_method_signature": "FileConnection.listPrincipals(String domainName)", "testcase": false, "constructor": false}, {"identifier": "deletePrincipal", "parameters": "(String principalName, boolean subDomains)", "modifiers": "@SuppressWarnings(\"SuspiciousListRemoveInLoop\") @Override public", "return": "boolean", "signature": "boolean deletePrincipal(String principalName, boolean subDomains)", "full_signature": "@SuppressWarnings(\"SuspiciousListRemoveInLoop\") @Override public boolean deletePrincipal(String principalName, boolean subDomains)", "class_method_signature": "FileConnection.deletePrincipal(String principalName, boolean subDomains)", "testcase": false, "constructor": false}, {"identifier": "getRoleObject", "parameters": "(DomainStruct domain, String roleName)", "modifiers": "", "return": "Role", "signature": "Role getRoleObject(DomainStruct domain, String roleName)", "full_signature": " Role getRoleObject(DomainStruct domain, String roleName)", "class_method_signature": "FileConnection.getRoleObject(DomainStruct domain, String roleName)", "testcase": false, "constructor": false}, {"identifier": "getRoleObject", "parameters": "(DomainStruct domain, String roleName, Boolean pending)", "modifiers": "", "return": "Role", "signature": "Role getRoleObject(DomainStruct domain, String roleName, Boolean pending)", "full_signature": " Role getRoleObject(DomainStruct domain, String roleName, Boolean pending)", "class_method_signature": "FileConnection.getRoleObject(DomainStruct domain, String roleName, Boolean pending)", "testcase": false, "constructor": false}, {"identifier": "getPolicyObject", "parameters": "(DomainStruct domain, String policyName)", "modifiers": "", "return": "Policy", "signature": "Policy getPolicyObject(DomainStruct domain, String policyName)", "full_signature": " Policy getPolicyObject(DomainStruct domain, String policyName)", "class_method_signature": "FileConnection.getPolicyObject(DomainStruct domain, String policyName)", "testcase": false, "constructor": false}, {"identifier": "getServiceObject", "parameters": "(DomainStruct domain, String serviceName)", "modifiers": "", "return": "ServiceIdentity", "signature": "ServiceIdentity getServiceObject(DomainStruct domain, String serviceName)", "full_signature": " ServiceIdentity getServiceObject(DomainStruct domain, String serviceName)", "class_method_signature": "FileConnection.getServiceObject(DomainStruct domain, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "getEntityObject", "parameters": "(DomainStruct domain, String entityName)", "modifiers": "", "return": "Entity", "signature": "Entity getEntityObject(DomainStruct domain, String entityName)", "full_signature": " Entity getEntityObject(DomainStruct domain, String entityName)", "class_method_signature": "FileConnection.getEntityObject(DomainStruct domain, String entityName)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "Role", "signature": "Role getRole(String domainName, String roleName)", "full_signature": "@Override public Role getRole(String domainName, String roleName)", "class_method_signature": "FileConnection.getRole(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "insertRole", "parameters": "(String domainName, Role role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertRole(String domainName, Role role)", "full_signature": "@Override public boolean insertRole(String domainName, Role role)", "class_method_signature": "FileConnection.insertRole(String domainName, Role role)", "testcase": false, "constructor": false}, {"identifier": "updateRole", "parameters": "(String domainName, Role role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRole(String domainName, Role role)", "full_signature": "@Override public boolean updateRole(String domainName, Role role)", "class_method_signature": "FileConnection.updateRole(String domainName, Role role)", "testcase": false, "constructor": false}, {"identifier": "updateRoleModTimestamp", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRoleModTimestamp(String domainName, String roleName)", "full_signature": "@Override public boolean updateRoleModTimestamp(String domainName, String roleName)", "class_method_signature": "FileConnection.updateRoleModTimestamp(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "deleteRole", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteRole(String domainName, String roleName)", "full_signature": "@Override public boolean deleteRole(String domainName, String roleName)", "class_method_signature": "FileConnection.deleteRole(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "listEntities", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listEntities(String domainName)", "full_signature": "@Override public List<String> listEntities(String domainName)", "class_method_signature": "FileConnection.listEntities(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listRoles", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listRoles(String domainName)", "full_signature": "@Override public List<String> listRoles(String domainName)", "class_method_signature": "FileConnection.listRoles(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listRoleMembers", "parameters": "(String domainName, String roleName, Boolean pending)", "modifiers": "@Override public", "return": "List<RoleMember>", "signature": "List<RoleMember> listRoleMembers(String domainName, String roleName, Boolean pending)", "full_signature": "@Override public List<RoleMember> listRoleMembers(String domainName, String roleName, Boolean pending)", "class_method_signature": "FileConnection.listRoleMembers(String domainName, String roleName, Boolean pending)", "testcase": false, "constructor": false}, {"identifier": "matchExpiration", "parameters": "(long expiration, Timestamp expiry)", "modifiers": "", "return": "boolean", "signature": "boolean matchExpiration(long expiration, Timestamp expiry)", "full_signature": " boolean matchExpiration(long expiration, Timestamp expiry)", "class_method_signature": "FileConnection.matchExpiration(long expiration, Timestamp expiry)", "testcase": false, "constructor": false}, {"identifier": "getRoleMember", "parameters": "(String domainName, String roleName, String principal,\n            long expiration, boolean pending)", "modifiers": "@Override public", "return": "Membership", "signature": "Membership getRoleMember(String domainName, String roleName, String principal,\n            long expiration, boolean pending)", "full_signature": "@Override public Membership getRoleMember(String domainName, String roleName, String principal,\n            long expiration, boolean pending)", "class_method_signature": "FileConnection.getRoleMember(String domainName, String roleName, String principal,\n            long expiration, boolean pending)", "testcase": false, "constructor": false}, {"identifier": "insertRoleMember", "parameters": "(String domainName, String roleName, RoleMember member,\n            String admin, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertRoleMember(String domainName, String roleName, RoleMember member,\n            String admin, String auditRef)", "full_signature": "@Override public boolean insertRoleMember(String domainName, String roleName, RoleMember member,\n            String admin, String auditRef)", "class_method_signature": "FileConnection.insertRoleMember(String domainName, String roleName, RoleMember member,\n            String admin, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "validatePrincipalDomain", "parameters": "(String principal)", "modifiers": "", "return": "boolean", "signature": "boolean validatePrincipalDomain(String principal)", "full_signature": " boolean validatePrincipalDomain(String principal)", "class_method_signature": "FileConnection.validatePrincipalDomain(String principal)", "testcase": false, "constructor": false}, {"identifier": "updateRoleMemberDisabledState", "parameters": "(String domainName, String roleName, String principal,\n            String admin, int disabledState, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRoleMemberDisabledState(String domainName, String roleName, String principal,\n            String admin, int disabledState, String auditRef)", "full_signature": "@Override public boolean updateRoleMemberDisabledState(String domainName, String roleName, String principal,\n            String admin, int disabledState, String auditRef)", "class_method_signature": "FileConnection.updateRoleMemberDisabledState(String domainName, String roleName, String principal,\n            String admin, int disabledState, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteRoleMember", "parameters": "(String domainName, String roleName, String principal,\n            String admin, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteRoleMember(String domainName, String roleName, String principal,\n            String admin, String auditRef)", "full_signature": "@Override public boolean deleteRoleMember(String domainName, String roleName, String principal,\n            String admin, String auditRef)", "class_method_signature": "FileConnection.deleteRoleMember(String domainName, String roleName, String principal,\n            String admin, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPolicy", "parameters": "(String domainName, String policyName)", "modifiers": "@Override public", "return": "Policy", "signature": "Policy getPolicy(String domainName, String policyName)", "full_signature": "@Override public Policy getPolicy(String domainName, String policyName)", "class_method_signature": "FileConnection.getPolicy(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "insertPolicy", "parameters": "(String domainName, Policy policy)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertPolicy(String domainName, Policy policy)", "full_signature": "@Override public boolean insertPolicy(String domainName, Policy policy)", "class_method_signature": "FileConnection.insertPolicy(String domainName, Policy policy)", "testcase": false, "constructor": false}, {"identifier": "updatePolicy", "parameters": "(String domainName, Policy policy)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatePolicy(String domainName, Policy policy)", "full_signature": "@Override public boolean updatePolicy(String domainName, Policy policy)", "class_method_signature": "FileConnection.updatePolicy(String domainName, Policy policy)", "testcase": false, "constructor": false}, {"identifier": "deletePolicy", "parameters": "(String domainName, String policyName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deletePolicy(String domainName, String policyName)", "full_signature": "@Override public boolean deletePolicy(String domainName, String policyName)", "class_method_signature": "FileConnection.deletePolicy(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "listPolicies", "parameters": "(String domainName, String assertionRoleName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listPolicies(String domainName, String assertionRoleName)", "full_signature": "@Override public List<String> listPolicies(String domainName, String assertionRoleName)", "class_method_signature": "FileConnection.listPolicies(String domainName, String assertionRoleName)", "testcase": false, "constructor": false}, {"identifier": "insertAssertion", "parameters": "(String domainName, String policyName, Assertion assertion)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertAssertion(String domainName, String policyName, Assertion assertion)", "full_signature": "@Override public boolean insertAssertion(String domainName, String policyName, Assertion assertion)", "class_method_signature": "FileConnection.insertAssertion(String domainName, String policyName, Assertion assertion)", "testcase": false, "constructor": false}, {"identifier": "assertionMatch", "parameters": "(Assertion assertion1, Assertion assertion2)", "modifiers": "", "return": "boolean", "signature": "boolean assertionMatch(Assertion assertion1, Assertion assertion2)", "full_signature": " boolean assertionMatch(Assertion assertion1, Assertion assertion2)", "class_method_signature": "FileConnection.assertionMatch(Assertion assertion1, Assertion assertion2)", "testcase": false, "constructor": false}, {"identifier": "deleteAssertion", "parameters": "(String domainName, String policyName, Long assertionId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteAssertion(String domainName, String policyName, Long assertionId)", "full_signature": "@Override public boolean deleteAssertion(String domainName, String policyName, Long assertionId)", "class_method_signature": "FileConnection.deleteAssertion(String domainName, String policyName, Long assertionId)", "testcase": false, "constructor": false}, {"identifier": "listAssertions", "parameters": "(String domainName, String policyName)", "modifiers": "@Override public", "return": "List<Assertion>", "signature": "List<Assertion> listAssertions(String domainName, String policyName)", "full_signature": "@Override public List<Assertion> listAssertions(String domainName, String policyName)", "class_method_signature": "FileConnection.listAssertions(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "getServiceIdentity", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "ServiceIdentity", "signature": "ServiceIdentity getServiceIdentity(String domainName, String serviceName)", "full_signature": "@Override public ServiceIdentity getServiceIdentity(String domainName, String serviceName)", "class_method_signature": "FileConnection.getServiceIdentity(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "insertServiceIdentity", "parameters": "(String domainName, ServiceIdentity service)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertServiceIdentity(String domainName, ServiceIdentity service)", "full_signature": "@Override public boolean insertServiceIdentity(String domainName, ServiceIdentity service)", "class_method_signature": "FileConnection.insertServiceIdentity(String domainName, ServiceIdentity service)", "testcase": false, "constructor": false}, {"identifier": "updateServiceIdentity", "parameters": "(String domainName, ServiceIdentity service)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateServiceIdentity(String domainName, ServiceIdentity service)", "full_signature": "@Override public boolean updateServiceIdentity(String domainName, ServiceIdentity service)", "class_method_signature": "FileConnection.updateServiceIdentity(String domainName, ServiceIdentity service)", "testcase": false, "constructor": false}, {"identifier": "deleteServiceIdentity", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteServiceIdentity(String domainName, String serviceName)", "full_signature": "@Override public boolean deleteServiceIdentity(String domainName, String serviceName)", "class_method_signature": "FileConnection.deleteServiceIdentity(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "listServiceIdentities", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listServiceIdentities(String domainName)", "full_signature": "@Override public List<String> listServiceIdentities(String domainName)", "class_method_signature": "FileConnection.listServiceIdentities(String domainName)", "testcase": false, "constructor": false}, {"identifier": "updateServiceIdentityModTimestamp", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateServiceIdentityModTimestamp(String domainName, String serviceName)", "full_signature": "@Override public boolean updateServiceIdentityModTimestamp(String domainName, String serviceName)", "class_method_signature": "FileConnection.updateServiceIdentityModTimestamp(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyEntry", "parameters": "(String domainName, String serviceName,\n            String keyId, boolean domainStateCheck)", "modifiers": "@Override public", "return": "PublicKeyEntry", "signature": "PublicKeyEntry getPublicKeyEntry(String domainName, String serviceName,\n            String keyId, boolean domainStateCheck)", "full_signature": "@Override public PublicKeyEntry getPublicKeyEntry(String domainName, String serviceName,\n            String keyId, boolean domainStateCheck)", "class_method_signature": "FileConnection.getPublicKeyEntry(String domainName, String serviceName,\n            String keyId, boolean domainStateCheck)", "testcase": false, "constructor": false}, {"identifier": "insertPublicKeyEntry", "parameters": "(String domainName, String serviceName, PublicKeyEntry publicKey)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertPublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "full_signature": "@Override public boolean insertPublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "class_method_signature": "FileConnection.insertPublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "testcase": false, "constructor": false}, {"identifier": "removePublicKeyEntry", "parameters": "(List<PublicKeyEntry> keyList, String keyId)", "modifiers": "", "return": "boolean", "signature": "boolean removePublicKeyEntry(List<PublicKeyEntry> keyList, String keyId)", "full_signature": " boolean removePublicKeyEntry(List<PublicKeyEntry> keyList, String keyId)", "class_method_signature": "FileConnection.removePublicKeyEntry(List<PublicKeyEntry> keyList, String keyId)", "testcase": false, "constructor": false}, {"identifier": "updatePublicKeyEntry", "parameters": "(ServiceIdentity service, PublicKeyEntry keyEntry)", "modifiers": "", "return": "void", "signature": "void updatePublicKeyEntry(ServiceIdentity service, PublicKeyEntry keyEntry)", "full_signature": " void updatePublicKeyEntry(ServiceIdentity service, PublicKeyEntry keyEntry)", "class_method_signature": "FileConnection.updatePublicKeyEntry(ServiceIdentity service, PublicKeyEntry keyEntry)", "testcase": false, "constructor": false}, {"identifier": "updatePublicKeyEntry", "parameters": "(String domainName, String serviceName, PublicKeyEntry publicKey)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatePublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "full_signature": "@Override public boolean updatePublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "class_method_signature": "FileConnection.updatePublicKeyEntry(String domainName, String serviceName, PublicKeyEntry publicKey)", "testcase": false, "constructor": false}, {"identifier": "deletePublicKeyEntry", "parameters": "(String domainName, String serviceName, String keyId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deletePublicKeyEntry(String domainName, String serviceName, String keyId)", "full_signature": "@Override public boolean deletePublicKeyEntry(String domainName, String serviceName, String keyId)", "class_method_signature": "FileConnection.deletePublicKeyEntry(String domainName, String serviceName, String keyId)", "testcase": false, "constructor": false}, {"identifier": "listPublicKeys", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "List<PublicKeyEntry>", "signature": "List<PublicKeyEntry> listPublicKeys(String domainName, String serviceName)", "full_signature": "@Override public List<PublicKeyEntry> listPublicKeys(String domainName, String serviceName)", "class_method_signature": "FileConnection.listPublicKeys(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "listServiceHosts", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listServiceHosts(String domainName, String serviceName)", "full_signature": "@Override public List<String> listServiceHosts(String domainName, String serviceName)", "class_method_signature": "FileConnection.listServiceHosts(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "insertServiceHost", "parameters": "(String domainName, String serviceName, String hostName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertServiceHost(String domainName, String serviceName, String hostName)", "full_signature": "@Override public boolean insertServiceHost(String domainName, String serviceName, String hostName)", "class_method_signature": "FileConnection.insertServiceHost(String domainName, String serviceName, String hostName)", "testcase": false, "constructor": false}, {"identifier": "deleteServiceHost", "parameters": "(String domainName, String serviceName, String hostName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteServiceHost(String domainName, String serviceName, String hostName)", "full_signature": "@Override public boolean deleteServiceHost(String domainName, String serviceName, String hostName)", "class_method_signature": "FileConnection.deleteServiceHost(String domainName, String serviceName, String hostName)", "testcase": false, "constructor": false}, {"identifier": "getEntity", "parameters": "(String domainName, String entityName)", "modifiers": "@Override public", "return": "Entity", "signature": "Entity getEntity(String domainName, String entityName)", "full_signature": "@Override public Entity getEntity(String domainName, String entityName)", "class_method_signature": "FileConnection.getEntity(String domainName, String entityName)", "testcase": false, "constructor": false}, {"identifier": "insertEntity", "parameters": "(String domainName, Entity entity)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertEntity(String domainName, Entity entity)", "full_signature": "@Override public boolean insertEntity(String domainName, Entity entity)", "class_method_signature": "FileConnection.insertEntity(String domainName, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "updateEntity", "parameters": "(String domainName, Entity entity)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateEntity(String domainName, Entity entity)", "full_signature": "@Override public boolean updateEntity(String domainName, Entity entity)", "class_method_signature": "FileConnection.updateEntity(String domainName, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "deleteEntity", "parameters": "(String domainName, String entityName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteEntity(String domainName, String entityName)", "full_signature": "@Override public boolean deleteEntity(String domainName, String entityName)", "class_method_signature": "FileConnection.deleteEntity(String domainName, String entityName)", "testcase": false, "constructor": false}, {"identifier": "getDomainStruct", "parameters": "(String name)", "modifiers": "public synchronized", "return": "DomainStruct", "signature": "DomainStruct getDomainStruct(String name)", "full_signature": "public synchronized DomainStruct getDomainStruct(String name)", "class_method_signature": "FileConnection.getDomainStruct(String name)", "testcase": false, "constructor": false}, {"identifier": "putDomainStruct", "parameters": "(String name, DomainStruct data)", "modifiers": "public synchronized", "return": "void", "signature": "void putDomainStruct(String name, DomainStruct data)", "full_signature": "public synchronized void putDomainStruct(String name, DomainStruct data)", "class_method_signature": "FileConnection.putDomainStruct(String name, DomainStruct data)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(File f)", "modifiers": "private static", "return": "boolean", "signature": "boolean delete(File f)", "full_signature": "private static boolean delete(File f)", "class_method_signature": "FileConnection.delete(File f)", "testcase": false, "constructor": false}, {"identifier": "deleteDirectory", "parameters": "(File f)", "modifiers": "public static", "return": "void", "signature": "void deleteDirectory(File f)", "full_signature": "public static void deleteDirectory(File f)", "class_method_signature": "FileConnection.deleteDirectory(File f)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String name)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean delete(String name)", "full_signature": "public synchronized boolean delete(String name)", "class_method_signature": "FileConnection.delete(String name)", "testcase": false, "constructor": false}, {"identifier": "listRoleAuditLogs", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "List<RoleAuditLog>", "signature": "List<RoleAuditLog> listRoleAuditLogs(String domainName, String roleName)", "full_signature": "@Override public List<RoleAuditLog> listRoleAuditLogs(String domainName, String roleName)", "class_method_signature": "FileConnection.listRoleAuditLogs(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "listResourceAccess", "parameters": "(String principal, String action, String userDomain)", "modifiers": "@Override public", "return": "ResourceAccessList", "signature": "ResourceAccessList listResourceAccess(String principal, String action, String userDomain)", "full_signature": "@Override public ResourceAccessList listResourceAccess(String principal, String action, String userDomain)", "class_method_signature": "FileConnection.listResourceAccess(String principal, String action, String userDomain)", "testcase": false, "constructor": false}, {"identifier": "getAssertion", "parameters": "(String domainName, String policyName, Long assertionId)", "modifiers": "@Override public", "return": "Assertion", "signature": "Assertion getAssertion(String domainName, String policyName, Long assertionId)", "full_signature": "@Override public Assertion getAssertion(String domainName, String policyName, Long assertionId)", "class_method_signature": "FileConnection.getAssertion(String domainName, String policyName, Long assertionId)", "testcase": false, "constructor": false}, {"identifier": "updatePolicyModTimestamp", "parameters": "(String domainName, String policyName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatePolicyModTimestamp(String domainName, String policyName)", "full_signature": "@Override public boolean updatePolicyModTimestamp(String domainName, String policyName)", "class_method_signature": "FileConnection.updatePolicyModTimestamp(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "getQuota", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "Quota", "signature": "Quota getQuota(String domainName)", "full_signature": "@Override public Quota getQuota(String domainName)", "class_method_signature": "FileConnection.getQuota(String domainName)", "testcase": false, "constructor": false}, {"identifier": "putQuota", "parameters": "(String domainName, Quota quota)", "modifiers": "", "return": "boolean", "signature": "boolean putQuota(String domainName, Quota quota)", "full_signature": " boolean putQuota(String domainName, Quota quota)", "class_method_signature": "FileConnection.putQuota(String domainName, Quota quota)", "testcase": false, "constructor": false}, {"identifier": "insertQuota", "parameters": "(String domainName, Quota quota)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertQuota(String domainName, Quota quota)", "full_signature": "@Override public boolean insertQuota(String domainName, Quota quota)", "class_method_signature": "FileConnection.insertQuota(String domainName, Quota quota)", "testcase": false, "constructor": false}, {"identifier": "updateQuota", "parameters": "(String domainName, Quota quota)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateQuota(String domainName, Quota quota)", "full_signature": "@Override public boolean updateQuota(String domainName, Quota quota)", "class_method_signature": "FileConnection.updateQuota(String domainName, Quota quota)", "testcase": false, "constructor": false}, {"identifier": "deleteQuota", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteQuota(String domainName)", "full_signature": "@Override public boolean deleteQuota(String domainName)", "class_method_signature": "FileConnection.deleteQuota(String domainName)", "testcase": false, "constructor": false}, {"identifier": "countRoles", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "int", "signature": "int countRoles(String domainName)", "full_signature": "@Override public int countRoles(String domainName)", "class_method_signature": "FileConnection.countRoles(String domainName)", "testcase": false, "constructor": false}, {"identifier": "countRoleMembers", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "int", "signature": "int countRoleMembers(String domainName, String roleName)", "full_signature": "@Override public int countRoleMembers(String domainName, String roleName)", "class_method_signature": "FileConnection.countRoleMembers(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "countPolicies", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "int", "signature": "int countPolicies(String domainName)", "full_signature": "@Override public int countPolicies(String domainName)", "class_method_signature": "FileConnection.countPolicies(String domainName)", "testcase": false, "constructor": false}, {"identifier": "countAssertions", "parameters": "(String domainName, String policyName)", "modifiers": "@Override public", "return": "int", "signature": "int countAssertions(String domainName, String policyName)", "full_signature": "@Override public int countAssertions(String domainName, String policyName)", "class_method_signature": "FileConnection.countAssertions(String domainName, String policyName)", "testcase": false, "constructor": false}, {"identifier": "countServiceIdentities", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "int", "signature": "int countServiceIdentities(String domainName)", "full_signature": "@Override public int countServiceIdentities(String domainName)", "class_method_signature": "FileConnection.countServiceIdentities(String domainName)", "testcase": false, "constructor": false}, {"identifier": "countPublicKeys", "parameters": "(String domainName, String serviceName)", "modifiers": "@Override public", "return": "int", "signature": "int countPublicKeys(String domainName, String serviceName)", "full_signature": "@Override public int countPublicKeys(String domainName, String serviceName)", "class_method_signature": "FileConnection.countPublicKeys(String domainName, String serviceName)", "testcase": false, "constructor": false}, {"identifier": "countEntities", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "int", "signature": "int countEntities(String domainName)", "full_signature": "@Override public int countEntities(String domainName)", "class_method_signature": "FileConnection.countEntities(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listDomainRoleMembers", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "DomainRoleMembers", "signature": "DomainRoleMembers listDomainRoleMembers(String domainName)", "full_signature": "@Override public DomainRoleMembers listDomainRoleMembers(String domainName)", "class_method_signature": "FileConnection.listDomainRoleMembers(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getPrincipalRoles", "parameters": "(String principal, String domainName)", "modifiers": "@Override public", "return": "DomainRoleMember", "signature": "DomainRoleMember getPrincipalRoles(String principal, String domainName)", "full_signature": "@Override public DomainRoleMember getPrincipalRoles(String principal, String domainName)", "class_method_signature": "FileConnection.getPrincipalRoles(String principal, String domainName)", "testcase": false, "constructor": false}, {"identifier": "getDomainRolesForPrincipal", "parameters": "(String principal, DomainRoleMember domainRoleMember, String domain)", "modifiers": "private", "return": "void", "signature": "void getDomainRolesForPrincipal(String principal, DomainRoleMember domainRoleMember, String domain)", "full_signature": "private void getDomainRolesForPrincipal(String principal, DomainRoleMember domainRoleMember, String domain)", "class_method_signature": "FileConnection.getDomainRolesForPrincipal(String principal, DomainRoleMember domainRoleMember, String domain)", "testcase": false, "constructor": false}, {"identifier": "listOverdueReviewRoleMembers", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "DomainRoleMembers", "signature": "DomainRoleMembers listOverdueReviewRoleMembers(String domainName)", "full_signature": "@Override public DomainRoleMembers listOverdueReviewRoleMembers(String domainName)", "class_method_signature": "FileConnection.listOverdueReviewRoleMembers(String domainName)", "testcase": false, "constructor": false}, {"identifier": "getPendingDomainGroupMembers", "parameters": "(String principal)", "modifiers": "@Override public", "return": "Map<String, List<DomainGroupMember>>", "signature": "Map<String, List<DomainGroupMember>> getPendingDomainGroupMembers(String principal)", "full_signature": "@Override public Map<String, List<DomainGroupMember>> getPendingDomainGroupMembers(String principal)", "class_method_signature": "FileConnection.getPendingDomainGroupMembers(String principal)", "testcase": false, "constructor": false}, {"identifier": "getExpiredPendingDomainGroupMembers", "parameters": "(int pendingRoleMemberLifespan)", "modifiers": "@Override public", "return": "Map<String, List<DomainGroupMember>>", "signature": "Map<String, List<DomainGroupMember>> getExpiredPendingDomainGroupMembers(int pendingRoleMemberLifespan)", "full_signature": "@Override public Map<String, List<DomainGroupMember>> getExpiredPendingDomainGroupMembers(int pendingRoleMemberLifespan)", "class_method_signature": "FileConnection.getExpiredPendingDomainGroupMembers(int pendingRoleMemberLifespan)", "testcase": false, "constructor": false}, {"identifier": "getPendingGroupMembershipApproverRoles", "parameters": "(String server, long timestamp)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getPendingGroupMembershipApproverRoles(String server, long timestamp)", "full_signature": "@Override public Set<String> getPendingGroupMembershipApproverRoles(String server, long timestamp)", "class_method_signature": "FileConnection.getPendingGroupMembershipApproverRoles(String server, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "updatePendingGroupMembersNotificationTimestamp", "parameters": "(String server, long timestamp, int delayDays)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatePendingGroupMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "full_signature": "@Override public boolean updatePendingGroupMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "class_method_signature": "FileConnection.updatePendingGroupMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "testcase": false, "constructor": false}, {"identifier": "getNotifyTemporaryGroupMembers", "parameters": "(String server, long timestamp)", "modifiers": "@Override public", "return": "Map<String, DomainGroupMember>", "signature": "Map<String, DomainGroupMember> getNotifyTemporaryGroupMembers(String server, long timestamp)", "full_signature": "@Override public Map<String, DomainGroupMember> getNotifyTemporaryGroupMembers(String server, long timestamp)", "class_method_signature": "FileConnection.getNotifyTemporaryGroupMembers(String server, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "updateGroupMemberExpirationNotificationTimestamp", "parameters": "(String server, long timestamp, int delayDays)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateGroupMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "full_signature": "@Override public boolean updateGroupMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "class_method_signature": "FileConnection.updateGroupMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "testcase": false, "constructor": false}, {"identifier": "listReviewRoleMembersWithFilter", "parameters": "(String domainName, Function<RoleMember, Boolean> filterFunc, String caller)", "modifiers": "private", "return": "DomainRoleMembers", "signature": "DomainRoleMembers listReviewRoleMembersWithFilter(String domainName, Function<RoleMember, Boolean> filterFunc, String caller)", "full_signature": "private DomainRoleMembers listReviewRoleMembersWithFilter(String domainName, Function<RoleMember, Boolean> filterFunc, String caller)", "class_method_signature": "FileConnection.listReviewRoleMembersWithFilter(String domainName, Function<RoleMember, Boolean> filterFunc, String caller)", "testcase": false, "constructor": false}, {"identifier": "confirmRoleMember", "parameters": "(String domainName, String roleName, RoleMember member,\n                                    String admin, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean confirmRoleMember(String domainName, String roleName, RoleMember member,\n                                    String admin, String auditRef)", "full_signature": "@Override public boolean confirmRoleMember(String domainName, String roleName, RoleMember member,\n                                    String admin, String auditRef)", "class_method_signature": "FileConnection.confirmRoleMember(String domainName, String roleName, RoleMember member,\n                                    String admin, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "containsRoleMember", "parameters": "(List<RoleMember> rolesMembers, String principal)", "modifiers": "", "return": "boolean", "signature": "boolean containsRoleMember(List<RoleMember> rolesMembers, String principal)", "full_signature": " boolean containsRoleMember(List<RoleMember> rolesMembers, String principal)", "class_method_signature": "FileConnection.containsRoleMember(List<RoleMember> rolesMembers, String principal)", "testcase": false, "constructor": false}, {"identifier": "getPendingDomainRoleMembers", "parameters": "(String principal)", "modifiers": "@Override public", "return": "Map<String, List<DomainRoleMember>>", "signature": "Map<String, List<DomainRoleMember>> getPendingDomainRoleMembers(String principal)", "full_signature": "@Override public Map<String, List<DomainRoleMember>> getPendingDomainRoleMembers(String principal)", "class_method_signature": "FileConnection.getPendingDomainRoleMembers(String principal)", "testcase": false, "constructor": false}, {"identifier": "getPendingMembershipApproverRoles", "parameters": "(String server, long timestamp)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getPendingMembershipApproverRoles(String server, long timestamp)", "full_signature": "@Override public Set<String> getPendingMembershipApproverRoles(String server, long timestamp)", "class_method_signature": "FileConnection.getPendingMembershipApproverRoles(String server, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getPendingMembershipApproverRolesForDomain", "parameters": "(String domain, Set<String> roleNames)", "modifiers": "", "return": "void", "signature": "void getPendingMembershipApproverRolesForDomain(String domain, Set<String> roleNames)", "full_signature": " void getPendingMembershipApproverRolesForDomain(String domain, Set<String> roleNames)", "class_method_signature": "FileConnection.getPendingMembershipApproverRolesForDomain(String domain, Set<String> roleNames)", "testcase": false, "constructor": false}, {"identifier": "getExpiredPendingDomainRoleMembers", "parameters": "(int pendingRoleMemberLifespan)", "modifiers": "@Override public", "return": "Map<String, List<DomainRoleMember>>", "signature": "Map<String, List<DomainRoleMember>> getExpiredPendingDomainRoleMembers(int pendingRoleMemberLifespan)", "full_signature": "@Override public Map<String, List<DomainRoleMember>> getExpiredPendingDomainRoleMembers(int pendingRoleMemberLifespan)", "class_method_signature": "FileConnection.getExpiredPendingDomainRoleMembers(int pendingRoleMemberLifespan)", "testcase": false, "constructor": false}, {"identifier": "updatePendingRoleMembersNotificationTimestamp", "parameters": "(String server, long timestamp, int delayDays)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updatePendingRoleMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "full_signature": "@Override public boolean updatePendingRoleMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "class_method_signature": "FileConnection.updatePendingRoleMembersNotificationTimestamp(String server, long timestamp, int delayDays)", "testcase": false, "constructor": false}, {"identifier": "deletePendingRoleMember", "parameters": "(String domainName, String roleName, String principal,\n             String admin, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deletePendingRoleMember(String domainName, String roleName, String principal,\n             String admin, String auditRef)", "full_signature": "@Override public boolean deletePendingRoleMember(String domainName, String roleName, String principal,\n             String admin, String auditRef)", "class_method_signature": "FileConnection.deletePendingRoleMember(String domainName, String roleName, String principal,\n             String admin, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getNotifyTemporaryRoleMembers", "parameters": "(String server, long timestamp)", "modifiers": "@Override public", "return": "Map<String, DomainRoleMember>", "signature": "Map<String, DomainRoleMember> getNotifyTemporaryRoleMembers(String server, long timestamp)", "full_signature": "@Override public Map<String, DomainRoleMember> getNotifyTemporaryRoleMembers(String server, long timestamp)", "class_method_signature": "FileConnection.getNotifyTemporaryRoleMembers(String server, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getNotifyReviewRoleMembers", "parameters": "(String server, long timestamp)", "modifiers": "@Override public", "return": "Map<String, DomainRoleMember>", "signature": "Map<String, DomainRoleMember> getNotifyReviewRoleMembers(String server, long timestamp)", "full_signature": "@Override public Map<String, DomainRoleMember> getNotifyReviewRoleMembers(String server, long timestamp)", "class_method_signature": "FileConnection.getNotifyReviewRoleMembers(String server, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getNotifyRoleMembers", "parameters": "(String server, long timestamp, boolean isTemporaryRole)", "modifiers": "private", "return": "Map<String, DomainRoleMember>", "signature": "Map<String, DomainRoleMember> getNotifyRoleMembers(String server, long timestamp, boolean isTemporaryRole)", "full_signature": "private Map<String, DomainRoleMember> getNotifyRoleMembers(String server, long timestamp, boolean isTemporaryRole)", "class_method_signature": "FileConnection.getNotifyRoleMembers(String server, long timestamp, boolean isTemporaryRole)", "testcase": false, "constructor": false}, {"identifier": "addRoleMemberToMap", "parameters": "(Map<String, DomainRoleMember> memberMap, RoleMember roleMember, final String domainName,\n            final String roleName)", "modifiers": "", "return": "void", "signature": "void addRoleMemberToMap(Map<String, DomainRoleMember> memberMap, RoleMember roleMember, final String domainName,\n            final String roleName)", "full_signature": " void addRoleMemberToMap(Map<String, DomainRoleMember> memberMap, RoleMember roleMember, final String domainName,\n            final String roleName)", "class_method_signature": "FileConnection.addRoleMemberToMap(Map<String, DomainRoleMember> memberMap, RoleMember roleMember, final String domainName,\n            final String roleName)", "testcase": false, "constructor": false}, {"identifier": "updateRoleMemberExpirationNotificationTimestamp", "parameters": "(String server, long timestamp, int delayDays)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRoleMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "full_signature": "@Override public boolean updateRoleMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "class_method_signature": "FileConnection.updateRoleMemberExpirationNotificationTimestamp(String server, long timestamp, int delayDays)", "testcase": false, "constructor": false}, {"identifier": "updateRoleMemberReviewNotificationTimestamp", "parameters": "(String server, long timestamp, int delayDays)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRoleMemberReviewNotificationTimestamp(String server, long timestamp, int delayDays)", "full_signature": "@Override public boolean updateRoleMemberReviewNotificationTimestamp(String server, long timestamp, int delayDays)", "class_method_signature": "FileConnection.updateRoleMemberReviewNotificationTimestamp(String server, long timestamp, int delayDays)", "testcase": false, "constructor": false}, {"identifier": "updateRoleMemberNotificationTimestamp", "parameters": "(long timestamp, boolean isTemporaryRole)", "modifiers": "private", "return": "boolean", "signature": "boolean updateRoleMemberNotificationTimestamp(long timestamp, boolean isTemporaryRole)", "full_signature": "private boolean updateRoleMemberNotificationTimestamp(long timestamp, boolean isTemporaryRole)", "class_method_signature": "FileConnection.updateRoleMemberNotificationTimestamp(long timestamp, boolean isTemporaryRole)", "testcase": false, "constructor": false}, {"identifier": "getDomainTemplates", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "List<TemplateMetaData>", "signature": "List<TemplateMetaData> getDomainTemplates(String domainName)", "full_signature": "@Override public List<TemplateMetaData> getDomainTemplates(String domainName)", "class_method_signature": "FileConnection.getDomainTemplates(String domainName)", "testcase": false, "constructor": false}, {"identifier": "updateRoleReviewTimestamp", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateRoleReviewTimestamp(String domainName, String roleName)", "full_signature": "@Override public boolean updateRoleReviewTimestamp(String domainName, String roleName)", "class_method_signature": "FileConnection.updateRoleReviewTimestamp(String domainName, String roleName)", "testcase": false, "constructor": false}, {"identifier": "listRolesWithUserAuthorityRestrictions", "parameters": "()", "modifiers": "@Override public", "return": "List<PrincipalRole>", "signature": "List<PrincipalRole> listRolesWithUserAuthorityRestrictions()", "full_signature": "@Override public List<PrincipalRole> listRolesWithUserAuthorityRestrictions()", "class_method_signature": "FileConnection.listRolesWithUserAuthorityRestrictions()", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "Group", "signature": "Group getGroup(String domainName, String groupName)", "full_signature": "@Override public Group getGroup(String domainName, String groupName)", "class_method_signature": "FileConnection.getGroup(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "insertGroup", "parameters": "(String domainName, Group group)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertGroup(String domainName, Group group)", "full_signature": "@Override public boolean insertGroup(String domainName, Group group)", "class_method_signature": "FileConnection.insertGroup(String domainName, Group group)", "testcase": false, "constructor": false}, {"identifier": "updateGroup", "parameters": "(String domainName, Group group)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateGroup(String domainName, Group group)", "full_signature": "@Override public boolean updateGroup(String domainName, Group group)", "class_method_signature": "FileConnection.updateGroup(String domainName, Group group)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteGroup(String domainName, String groupName)", "full_signature": "@Override public boolean deleteGroup(String domainName, String groupName)", "class_method_signature": "FileConnection.deleteGroup(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "updateGroupModTimestamp", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateGroupModTimestamp(String domainName, String groupName)", "full_signature": "@Override public boolean updateGroupModTimestamp(String domainName, String groupName)", "class_method_signature": "FileConnection.updateGroupModTimestamp(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "countGroups", "parameters": "(String domainName)", "modifiers": "@Override public", "return": "int", "signature": "int countGroups(String domainName)", "full_signature": "@Override public int countGroups(String domainName)", "class_method_signature": "FileConnection.countGroups(String domainName)", "testcase": false, "constructor": false}, {"identifier": "listGroupAuditLogs", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "List<GroupAuditLog>", "signature": "List<GroupAuditLog> listGroupAuditLogs(String domainName, String groupName)", "full_signature": "@Override public List<GroupAuditLog> listGroupAuditLogs(String domainName, String groupName)", "class_method_signature": "FileConnection.listGroupAuditLogs(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "updateGroupReviewTimestamp", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateGroupReviewTimestamp(String domainName, String groupName)", "full_signature": "@Override public boolean updateGroupReviewTimestamp(String domainName, String groupName)", "class_method_signature": "FileConnection.updateGroupReviewTimestamp(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "listGroupMembers", "parameters": "(String domainName, String groupName, Boolean pending)", "modifiers": "@Override public", "return": "List<GroupMember>", "signature": "List<GroupMember> listGroupMembers(String domainName, String groupName, Boolean pending)", "full_signature": "@Override public List<GroupMember> listGroupMembers(String domainName, String groupName, Boolean pending)", "class_method_signature": "FileConnection.listGroupMembers(String domainName, String groupName, Boolean pending)", "testcase": false, "constructor": false}, {"identifier": "countGroupMembers", "parameters": "(String domainName, String groupName)", "modifiers": "@Override public", "return": "int", "signature": "int countGroupMembers(String domainName, String groupName)", "full_signature": "@Override public int countGroupMembers(String domainName, String groupName)", "class_method_signature": "FileConnection.countGroupMembers(String domainName, String groupName)", "testcase": false, "constructor": false}, {"identifier": "getGroupMember", "parameters": "(String domainName, String groupName, String member, long expiration, boolean pending)", "modifiers": "@Override public", "return": "GroupMembership", "signature": "GroupMembership getGroupMember(String domainName, String groupName, String member, long expiration, boolean pending)", "full_signature": "@Override public GroupMembership getGroupMember(String domainName, String groupName, String member, long expiration, boolean pending)", "class_method_signature": "FileConnection.getGroupMember(String domainName, String groupName, String member, long expiration, boolean pending)", "testcase": false, "constructor": false}, {"identifier": "insertGroupMember", "parameters": "(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean insertGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "full_signature": "@Override public boolean insertGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "class_method_signature": "FileConnection.insertGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deleteGroupMember", "parameters": "(String domainName, String groupName, String member, String principal, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "full_signature": "@Override public boolean deleteGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "class_method_signature": "FileConnection.deleteGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "updateGroupMemberDisabledState", "parameters": "(String domainName, String groupName, String member, String principal, int disabledState, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateGroupMemberDisabledState(String domainName, String groupName, String member, String principal, int disabledState, String auditRef)", "full_signature": "@Override public boolean updateGroupMemberDisabledState(String domainName, String groupName, String member, String principal, int disabledState, String auditRef)", "class_method_signature": "FileConnection.updateGroupMemberDisabledState(String domainName, String groupName, String member, String principal, int disabledState, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "deletePendingGroupMember", "parameters": "(String domainName, String groupName, String member, String principal, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deletePendingGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "full_signature": "@Override public boolean deletePendingGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "class_method_signature": "FileConnection.deletePendingGroupMember(String domainName, String groupName, String member, String principal, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "confirmGroupMember", "parameters": "(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean confirmGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "full_signature": "@Override public boolean confirmGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "class_method_signature": "FileConnection.confirmGroupMember(String domainName, String groupName, GroupMember groupMember, String principal, String auditRef)", "testcase": false, "constructor": false}, {"identifier": "getPrincipalGroups", "parameters": "(String principal, String domainName)", "modifiers": "@Override public", "return": "DomainGroupMember", "signature": "DomainGroupMember getPrincipalGroups(String principal, String domainName)", "full_signature": "@Override public DomainGroupMember getPrincipalGroups(String principal, String domainName)", "class_method_signature": "FileConnection.getPrincipalGroups(String principal, String domainName)", "testcase": false, "constructor": false}, {"identifier": "listGroupsWithUserAuthorityRestrictions", "parameters": "()", "modifiers": "@Override public", "return": "List<PrincipalGroup>", "signature": "List<PrincipalGroup> listGroupsWithUserAuthorityRestrictions()", "full_signature": "@Override public List<PrincipalGroup> listGroupsWithUserAuthorityRestrictions()", "class_method_signature": "FileConnection.listGroupsWithUserAuthorityRestrictions()", "testcase": false, "constructor": false}], "file": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java"}, "focal_method": {"identifier": "deleteRole", "parameters": "(String domainName, String roleName)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean deleteRole(String domainName, String roleName) {\n        DomainStruct domainStruct = getDomainStruct(domainName);\n        if (domainStruct == null) {\n            throw ZMSUtils.error(ResourceException.NOT_FOUND, \"domain not found\", \"deleteRole\");\n        }\n        HashMap<String, Role> roles = domainStruct.getRoles();\n\n        if (roles != null) {\n            roles.remove(roleName);\n            putDomainStruct(domainName, domainStruct);\n        }\n        return true;\n    }", "signature": "boolean deleteRole(String domainName, String roleName)", "full_signature": "@Override public boolean deleteRole(String domainName, String roleName)", "class_method_signature": "FileConnection.deleteRole(String domainName, String roleName)", "testcase": false, "constructor": false, "invocations": ["getDomainStruct", "error", "getRoles", "remove", "putDomainStruct"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}