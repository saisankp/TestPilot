{"test_class": {"identifier": "FixMessageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char SOH_CHAR = '\\u0001';", "modifier": "private static final", "type": "char", "declarator": "SOH_CHAR = '\\u0001'", "var_name": "SOH_CHAR"}, {"original_string": "private static final char PIPE_CHAR = '|';", "modifier": "private static final", "type": "char", "declarator": "PIPE_CHAR = '|'", "var_name": "PIPE_CHAR"}], "file": "nanofix-client/src/test/java/com/lmax/nanofix/incoming/FixMessageTest.java"}, "test_case": {"identifier": "shouldReturnFixMessageWithDuplicateKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnFixMessageWithDuplicateKeys() throws Exception\n    {\n        final Multimap<Integer, String> multimap = ArrayListMultimap.create();\n        multimap.put(1, \"firstKey\");\n        multimap.put(2, \"secondKey\");\n        multimap.put(2, \"anotherSecondKey\");\n        multimap.put(3, \"thirdKey\");\n\n        final FixMessage fixMessage = new FixMessage(multimap);\n        final String expectedString = \"1=firstKey\" + SOH_CHAR + \"2=secondKey\" + SOH_CHAR + \"2=anotherSecondKey\" + SOH_CHAR + \"3=thirdKey\" + SOH_CHAR;\n        Assert.assertThat(fixMessage.toFixString(), is(expectedString));\n\n    }", "signature": "void shouldReturnFixMessageWithDuplicateKeys()", "full_signature": "@Test public void shouldReturnFixMessageWithDuplicateKeys()", "class_method_signature": "FixMessageTest.shouldReturnFixMessageWithDuplicateKeys()", "testcase": true, "constructor": false, "invocations": ["create", "put", "put", "put", "put", "assertThat", "toFixString", "is"]}, "focal_class": {"identifier": "FixMessage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Multimap<Integer, String> multimap;", "modifier": "private final", "type": "Multimap<Integer, String>", "declarator": "multimap", "var_name": "multimap"}], "methods": [{"identifier": "FixMessage", "parameters": "(final Multimap<Integer, String> multimap)", "modifiers": "public", "return": "", "signature": " FixMessage(final Multimap<Integer, String> multimap)", "full_signature": "public  FixMessage(final Multimap<Integer, String> multimap)", "class_method_signature": "FixMessage.FixMessage(final Multimap<Integer, String> multimap)", "testcase": false, "constructor": true}, {"identifier": "getValues", "parameters": "(int tagId)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getValues(int tagId)", "full_signature": "public Collection<String> getValues(int tagId)", "class_method_signature": "FixMessage.getValues(int tagId)", "testcase": false, "constructor": false}, {"identifier": "getFirstValue", "parameters": "(int tagId)", "modifiers": "public", "return": "String", "signature": "String getFirstValue(int tagId)", "full_signature": "public String getFirstValue(int tagId)", "class_method_signature": "FixMessage.getFirstValue(int tagId)", "testcase": false, "constructor": false}, {"identifier": "hasValue", "parameters": "(int tagId)", "modifiers": "public", "return": "boolean", "signature": "boolean hasValue(int tagId)", "full_signature": "public boolean hasValue(int tagId)", "class_method_signature": "FixMessage.hasValue(int tagId)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(int tagId, String value)", "modifiers": "public", "return": "void", "signature": "void replace(int tagId, String value)", "full_signature": "public void replace(int tagId, String value)", "class_method_signature": "FixMessage.replace(int tagId, String value)", "testcase": false, "constructor": false}, {"identifier": "toFixString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toFixString()", "full_signature": "public String toFixString()", "class_method_signature": "FixMessage.toFixString()", "testcase": false, "constructor": false}, {"identifier": "toHumanString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toHumanString()", "full_signature": "public String toHumanString()", "class_method_signature": "FixMessage.toHumanString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FixMessage.toString()", "testcase": false, "constructor": false}, {"identifier": "buildString", "parameters": "(final char tagSeparator)", "modifiers": "private", "return": "String", "signature": "String buildString(final char tagSeparator)", "full_signature": "private String buildString(final char tagSeparator)", "class_method_signature": "FixMessage.buildString(final char tagSeparator)", "testcase": false, "constructor": false}], "file": "nanofix-client/src/main/java/com/lmax/nanofix/incoming/FixMessage.java"}, "focal_method": {"identifier": "toFixString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toFixString()\n    {\n        final char tagSeparator = '\\u0001';\n\n        return buildString(tagSeparator);\n    }", "signature": "String toFixString()", "full_signature": "public String toFixString()", "class_method_signature": "FixMessage.toFixString()", "testcase": false, "constructor": false, "invocations": ["buildString"]}, "repository": {"repo_id": 30593072, "url": "https://github.com/LMAX-Exchange/nanofix", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 24, "size": 193, "license": "licensed"}}