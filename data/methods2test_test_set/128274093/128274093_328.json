{"test_class": {"identifier": "SchedulerPoolFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/internal/schedulers/SchedulerPoolFactoryTest.java"}, "test_case": {"identifier": "putIntoPoolNonThreadPool", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void putIntoPoolNonThreadPool() {\n        int s = SchedulerPoolFactory.POOLS.size();\n\n        SchedulerPoolFactory.tryPutIntoPool(true, null);\n\n        assertEquals(s, SchedulerPoolFactory.POOLS.size());\n    }", "signature": "void putIntoPoolNonThreadPool()", "full_signature": "@Test public void putIntoPoolNonThreadPool()", "class_method_signature": "SchedulerPoolFactoryTest.putIntoPoolNonThreadPool()", "testcase": true, "constructor": false, "invocations": ["size", "tryPutIntoPool", "assertEquals", "size"]}, "focal_class": {"identifier": "SchedulerPoolFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String PURGE_ENABLED_KEY = \"rx2.purge-enabled\";", "modifier": "static final", "type": "String", "declarator": "PURGE_ENABLED_KEY = \"rx2.purge-enabled\"", "var_name": "PURGE_ENABLED_KEY"}, {"original_string": "public static final boolean PURGE_ENABLED;", "modifier": "public static final", "type": "boolean", "declarator": "PURGE_ENABLED", "var_name": "PURGE_ENABLED"}, {"original_string": "static final String PURGE_PERIOD_SECONDS_KEY = \"rx2.purge-period-seconds\";", "modifier": "static final", "type": "String", "declarator": "PURGE_PERIOD_SECONDS_KEY = \"rx2.purge-period-seconds\"", "var_name": "PURGE_PERIOD_SECONDS_KEY"}, {"original_string": "public static final int PURGE_PERIOD_SECONDS;", "modifier": "public static final", "type": "int", "declarator": "PURGE_PERIOD_SECONDS", "var_name": "PURGE_PERIOD_SECONDS"}, {"original_string": "static final AtomicReference<ScheduledExecutorService> PURGE_THREAD =\n            new AtomicReference<ScheduledExecutorService>();", "modifier": "static final", "type": "AtomicReference<ScheduledExecutorService>", "declarator": "PURGE_THREAD =\n            new AtomicReference<ScheduledExecutorService>()", "var_name": "PURGE_THREAD"}, {"original_string": "static final Map<ScheduledThreadPoolExecutor, Object> POOLS =\n            new ConcurrentHashMap<ScheduledThreadPoolExecutor, Object>();", "modifier": "static final", "type": "Map<ScheduledThreadPoolExecutor, Object>", "declarator": "POOLS =\n            new ConcurrentHashMap<ScheduledThreadPoolExecutor, Object>()", "var_name": "POOLS"}], "methods": [{"identifier": "SchedulerPoolFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " SchedulerPoolFactory()", "full_signature": "private  SchedulerPoolFactory()", "class_method_signature": "SchedulerPoolFactory.SchedulerPoolFactory()", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void start()", "full_signature": "public static void start()", "class_method_signature": "SchedulerPoolFactory.start()", "testcase": false, "constructor": false}, {"identifier": "tryStart", "parameters": "(boolean purgeEnabled)", "modifiers": "static", "return": "void", "signature": "void tryStart(boolean purgeEnabled)", "full_signature": "static void tryStart(boolean purgeEnabled)", "class_method_signature": "SchedulerPoolFactory.tryStart(boolean purgeEnabled)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void shutdown()", "full_signature": "public static void shutdown()", "class_method_signature": "SchedulerPoolFactory.shutdown()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ThreadFactory factory)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService create(ThreadFactory factory)", "full_signature": "public static ScheduledExecutorService create(ThreadFactory factory)", "class_method_signature": "SchedulerPoolFactory.create(ThreadFactory factory)", "testcase": false, "constructor": false}, {"identifier": "tryPutIntoPool", "parameters": "(boolean purgeEnabled, ScheduledExecutorService exec)", "modifiers": "static", "return": "void", "signature": "void tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "full_signature": "static void tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "class_method_signature": "SchedulerPoolFactory.tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/schedulers/SchedulerPoolFactory.java"}, "focal_method": {"identifier": "tryPutIntoPool", "parameters": "(boolean purgeEnabled, ScheduledExecutorService exec)", "modifiers": "static", "return": "void", "body": "static void tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec) {\n        if (purgeEnabled && exec instanceof ScheduledThreadPoolExecutor) {\n            ScheduledThreadPoolExecutor e = (ScheduledThreadPoolExecutor) exec;\n            POOLS.put(e, exec);\n        }\n    }", "signature": "void tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "full_signature": "static void tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "class_method_signature": "SchedulerPoolFactory.tryPutIntoPool(boolean purgeEnabled, ScheduledExecutorService exec)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}