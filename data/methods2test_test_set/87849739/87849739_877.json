{"test_class": {"identifier": "ImmutableTargetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ADDRESS = \"amqp/target1\";", "modifier": "private static final", "type": "String", "declarator": "ADDRESS = \"amqp/target1\"", "var_name": "ADDRESS"}, {"original_string": "private static final AuthorizationContext AUTHORIZATION_CONTEXT =\n            AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.PRE_AUTHENTICATED_CONNECTION,\n                    AuthorizationModelFactory.newAuthSubject(\"eclipse\"),\n                    AuthorizationModelFactory.newAuthSubject(\"ditto\"));", "modifier": "private static final", "type": "AuthorizationContext", "declarator": "AUTHORIZATION_CONTEXT =\n            AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.PRE_AUTHENTICATED_CONNECTION,\n                    AuthorizationModelFactory.newAuthSubject(\"eclipse\"),\n                    AuthorizationModelFactory.newAuthSubject(\"ditto\"))", "var_name": "AUTHORIZATION_CONTEXT"}, {"original_string": "private static final String CUSTOM_MAPPING = \"custom-mapping\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_MAPPING = \"custom-mapping\"", "var_name": "CUSTOM_MAPPING"}, {"original_string": "private static final String DITTO_MAPPING = \"ditto-mapping\";", "modifier": "private static final", "type": "String", "declarator": "DITTO_MAPPING = \"ditto-mapping\"", "var_name": "DITTO_MAPPING"}, {"original_string": "private static final AcknowledgementLabel ACKNOWLEDGEMENT_LABEL = AcknowledgementLabel.of(\"custom-ack\");", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "ACKNOWLEDGEMENT_LABEL = AcknowledgementLabel.of(\"custom-ack\")", "var_name": "ACKNOWLEDGEMENT_LABEL"}, {"original_string": "private static final Target TARGET_WITH_AUTH_CONTEXT = ConnectivityModelFactory\n            .newTargetBuilder()\n            .address(ADDRESS)\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .topics(TWIN_EVENTS)\n            .issuedAcknowledgementLabel(ACKNOWLEDGEMENT_LABEL)\n            .payloadMapping(ConnectivityModelFactory.newPayloadMapping(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build();", "modifier": "private static final", "type": "Target", "declarator": "TARGET_WITH_AUTH_CONTEXT = ConnectivityModelFactory\n            .newTargetBuilder()\n            .address(ADDRESS)\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .topics(TWIN_EVENTS)\n            .issuedAcknowledgementLabel(ACKNOWLEDGEMENT_LABEL)\n            .payloadMapping(ConnectivityModelFactory.newPayloadMapping(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build()", "var_name": "TARGET_WITH_AUTH_CONTEXT"}, {"original_string": "private static final JsonObject TARGET_JSON_WITH_EMPTY_AUTH_CONTEXT = JsonObject\n            .newBuilder()\n            .set(Target.JsonFields.TOPICS, JsonFactory.newArrayBuilder().add(TWIN_EVENTS.getName()).build())\n            .set(Target.JsonFields.ADDRESS, ADDRESS)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "TARGET_JSON_WITH_EMPTY_AUTH_CONTEXT = JsonObject\n            .newBuilder()\n            .set(Target.JsonFields.TOPICS, JsonFactory.newArrayBuilder().add(TWIN_EVENTS.getName()).build())\n            .set(Target.JsonFields.ADDRESS, ADDRESS)\n            .build()", "var_name": "TARGET_JSON_WITH_EMPTY_AUTH_CONTEXT"}, {"original_string": "private static final JsonObject TARGET_JSON_WITH_AUTH_CONTEXT = TARGET_JSON_WITH_EMPTY_AUTH_CONTEXT.toBuilder()\n            .set(Target.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Target.JsonFields.ISSUED_ACKNOWLEDGEMENT_LABEL, \"custom-ack\")\n            .set(Target.JsonFields.PAYLOAD_MAPPING, JsonArray.of(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "TARGET_JSON_WITH_AUTH_CONTEXT = TARGET_JSON_WITH_EMPTY_AUTH_CONTEXT.toBuilder()\n            .set(Target.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Target.JsonFields.ISSUED_ACKNOWLEDGEMENT_LABEL, \"custom-ack\")\n            .set(Target.JsonFields.PAYLOAD_MAPPING, JsonArray.of(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build()", "var_name": "TARGET_JSON_WITH_AUTH_CONTEXT"}, {"original_string": "private static final String MQTT_ADDRESS = \"mqtt/target1\";", "modifier": "private static final", "type": "String", "declarator": "MQTT_ADDRESS = \"mqtt/target1\"", "var_name": "MQTT_ADDRESS"}, {"original_string": "private static final Target MQTT_TARGET = ConnectivityModelFactory.newTargetBuilder()\n            .address(MQTT_ADDRESS)\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .qos(1)\n            .topics(TWIN_EVENTS)\n            .build();", "modifier": "private static final", "type": "Target", "declarator": "MQTT_TARGET = ConnectivityModelFactory.newTargetBuilder()\n            .address(MQTT_ADDRESS)\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .qos(1)\n            .topics(TWIN_EVENTS)\n            .build()", "var_name": "MQTT_TARGET"}, {"original_string": "private static final JsonObject MQTT_TARGET_JSON = JsonObject.newBuilder()\n            .set(Target.JsonFields.TOPICS, JsonFactory.newArrayBuilder().add(TWIN_EVENTS.getName()).build())\n            .set(Target.JsonFields.ADDRESS, MQTT_ADDRESS)\n            .set(Target.JsonFields.QOS, 1)\n            .set(Target.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "MQTT_TARGET_JSON = JsonObject.newBuilder()\n            .set(Target.JsonFields.TOPICS, JsonFactory.newArrayBuilder().add(TWIN_EVENTS.getName()).build())\n            .set(Target.JsonFields.ADDRESS, MQTT_ADDRESS)\n            .set(Target.JsonFields.QOS, 1)\n            .set(Target.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .build()", "var_name": "MQTT_TARGET_JSON"}], "file": "model/connectivity/src/test/java/org/eclipse/ditto/model/connectivity/ImmutableTargetTest.java"}, "test_case": {"identifier": "fromJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromJsonReturnsExpected() {\n        final Target actual = ImmutableTarget.fromJson(TARGET_JSON_WITH_AUTH_CONTEXT);\n\n        assertThat(actual).isEqualTo(TARGET_WITH_AUTH_CONTEXT);\n    }", "signature": "void fromJsonReturnsExpected()", "full_signature": "@Test public void fromJsonReturnsExpected()", "class_method_signature": "ImmutableTargetTest.fromJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["fromJson", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ImmutableTarget", "superclass": "", "interfaces": "implements Target", "fields": [{"original_string": "static final HeaderMapping DEFAULT_HEADER_MAPPING = ImmutableSource.DEFAULT_SOURCE_HEADER_MAPPING;", "modifier": "static final", "type": "HeaderMapping", "declarator": "DEFAULT_HEADER_MAPPING = ImmutableSource.DEFAULT_SOURCE_HEADER_MAPPING", "var_name": "DEFAULT_HEADER_MAPPING"}, {"original_string": "private final String address;", "modifier": "private final", "type": "String", "declarator": "address", "var_name": "address"}, {"original_string": "private final Set<FilteredTopic> topics;", "modifier": "private final", "type": "Set<FilteredTopic>", "declarator": "topics", "var_name": "topics"}, {"original_string": "@Nullable private final Integer qos;", "modifier": "@Nullable private final", "type": "Integer", "declarator": "qos", "var_name": "qos"}, {"original_string": "private final AuthorizationContext authorizationContext;", "modifier": "private final", "type": "AuthorizationContext", "declarator": "authorizationContext", "var_name": "authorizationContext"}, {"original_string": "private final String originalAddress;", "modifier": "private final", "type": "String", "declarator": "originalAddress", "var_name": "originalAddress"}, {"original_string": "@Nullable private final AcknowledgementLabel issuedAcknowledgementLabel;", "modifier": "@Nullable private final", "type": "AcknowledgementLabel", "declarator": "issuedAcknowledgementLabel", "var_name": "issuedAcknowledgementLabel"}, {"original_string": "@Nullable private final HeaderMapping headerMapping;", "modifier": "@Nullable private final", "type": "HeaderMapping", "declarator": "headerMapping", "var_name": "headerMapping"}, {"original_string": "private final PayloadMapping payloadMapping;", "modifier": "private final", "type": "PayloadMapping", "declarator": "payloadMapping", "var_name": "payloadMapping"}], "methods": [{"identifier": "ImmutableTarget", "parameters": "(final ImmutableTarget.Builder builder)", "modifiers": "private", "return": "", "signature": " ImmutableTarget(final ImmutableTarget.Builder builder)", "full_signature": "private  ImmutableTarget(final ImmutableTarget.Builder builder)", "class_method_signature": "ImmutableTarget.ImmutableTarget(final ImmutableTarget.Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAddress()", "full_signature": "@Override public String getAddress()", "class_method_signature": "ImmutableTarget.getAddress()", "testcase": false, "constructor": false}, {"identifier": "getOriginalAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getOriginalAddress()", "full_signature": "@Override public String getOriginalAddress()", "class_method_signature": "ImmutableTarget.getOriginalAddress()", "testcase": false, "constructor": false}, {"identifier": "withAddress", "parameters": "(final String newAddress)", "modifiers": "@Override public", "return": "Target", "signature": "Target withAddress(final String newAddress)", "full_signature": "@Override public Target withAddress(final String newAddress)", "class_method_signature": "ImmutableTarget.withAddress(final String newAddress)", "testcase": false, "constructor": false}, {"identifier": "getTopics", "parameters": "()", "modifiers": "@Override public", "return": "Set<FilteredTopic>", "signature": "Set<FilteredTopic> getTopics()", "full_signature": "@Override public Set<FilteredTopic> getTopics()", "class_method_signature": "ImmutableTarget.getTopics()", "testcase": false, "constructor": false}, {"identifier": "getQos", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Integer>", "signature": "Optional<Integer> getQos()", "full_signature": "@Override public Optional<Integer> getQos()", "class_method_signature": "ImmutableTarget.getQos()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContext", "parameters": "()", "modifiers": "@Override public", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContext()", "full_signature": "@Override public AuthorizationContext getAuthorizationContext()", "class_method_signature": "ImmutableTarget.getAuthorizationContext()", "testcase": false, "constructor": false}, {"identifier": "getIssuedAcknowledgementLabel", "parameters": "()", "modifiers": "@Override public", "return": "Optional<AcknowledgementLabel>", "signature": "Optional<AcknowledgementLabel> getIssuedAcknowledgementLabel()", "full_signature": "@Override public Optional<AcknowledgementLabel> getIssuedAcknowledgementLabel()", "class_method_signature": "ImmutableTarget.getIssuedAcknowledgementLabel()", "testcase": false, "constructor": false}, {"identifier": "getHeaderMapping", "parameters": "()", "modifiers": "@Override public", "return": "Optional<HeaderMapping>", "signature": "Optional<HeaderMapping> getHeaderMapping()", "full_signature": "@Override public Optional<HeaderMapping> getHeaderMapping()", "class_method_signature": "ImmutableTarget.getHeaderMapping()", "testcase": false, "constructor": false}, {"identifier": "getPayloadMapping", "parameters": "()", "modifiers": "@Override public", "return": "PayloadMapping", "signature": "PayloadMapping getPayloadMapping()", "full_signature": "@Override public PayloadMapping getPayloadMapping()", "class_method_signature": "ImmutableTarget.getPayloadMapping()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableTarget.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Target", "signature": "Target fromJson(final JsonObject jsonObject)", "full_signature": "public static Target fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableTarget.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableTarget.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableTarget.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableTarget.toString()", "testcase": false, "constructor": false}], "file": "model/connectivity/src/main/java/org/eclipse/ditto/model/connectivity/ImmutableTarget.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Target", "body": "public static Target fromJson(final JsonObject jsonObject) {\n\n        final Set<FilteredTopic> readTopics = jsonObject.getValue(JsonFields.TOPICS)\n                .map(array -> array.stream()\n                        .map(JsonValue::asString)\n                        .map(ConnectivityModelFactory::newFilteredTopic)\n                        .collect(Collectors.toSet()))\n                .orElse(Collections.emptySet());\n\n        final JsonArray authContext = jsonObject.getValue(JsonFields.AUTHORIZATION_CONTEXT)\n                .orElseGet(() -> JsonArray.newBuilder().build());\n        final List<AuthorizationSubject> authorizationSubjects = authContext.stream()\n                .filter(JsonValue::isString)\n                .map(JsonValue::asString)\n                .map(AuthorizationSubject::newInstance)\n                .collect(Collectors.toList());\n        final AuthorizationContext readAuthorizationContext =\n                AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.PRE_AUTHENTICATED_CONNECTION,\n                        authorizationSubjects);\n\n        final AcknowledgementLabel readIssuedAcknowledgementLabel =\n                jsonObject.getValue(Target.JsonFields.ISSUED_ACKNOWLEDGEMENT_LABEL)\n                        .map(AcknowledgementLabel::of)\n                        .orElse(null);\n\n        final HeaderMapping readHeaderMapping =\n                jsonObject.getValue(JsonFields.HEADER_MAPPING)\n                        .map(ImmutableHeaderMapping::fromJson)\n                        .orElse(null);\n\n        final PayloadMapping readMapping =\n                jsonObject.getValue(JsonFields.PAYLOAD_MAPPING)\n                        .map(ImmutablePayloadMapping::fromJson)\n                        .orElse(ConnectivityModelFactory.emptyPayloadMapping());\n\n        return new Builder()\n                .address(jsonObject.getValueOrThrow(JsonFields.ADDRESS))\n                .topics(readTopics)\n                .qos(jsonObject.getValue(JsonFields.QOS).orElse(null))\n                .authorizationContext(readAuthorizationContext)\n                .issuedAcknowledgementLabel(readIssuedAcknowledgementLabel)\n                .headerMapping(readHeaderMapping)\n                .payloadMapping(readMapping)\n                .build();\n\n    }", "signature": "Target fromJson(final JsonObject jsonObject)", "full_signature": "public static Target fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableTarget.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false, "invocations": ["orElse", "map", "getValue", "collect", "map", "map", "stream", "toSet", "emptySet", "orElseGet", "getValue", "build", "newBuilder", "collect", "map", "map", "filter", "stream", "toList", "newAuthContext", "orElse", "map", "getValue", "orElse", "map", "getValue", "orElse", "map", "getValue", "emptyPayloadMapping", "build", "payloadMapping", "headerMapping", "issuedAcknowledgementLabel", "authorizationContext", "qos", "topics", "address", "getValueOrThrow", "orElse", "getValue"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}