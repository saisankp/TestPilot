{"test_class": {"identifier": "SimpleParameterTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-editor/src/test/java/org/smartparam/editor/model/simple/SimpleParameterTest.java"}, "test_case": {"identifier": "shouldNotCopyAnyParameterEntriesWhenUsingCloneContructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotCopyAnyParameterEntriesWhenUsingCloneContructor() {\n        // given\n        SimpleParameter parameter = new SimpleParameter();\n        parameter.setEntries(new HashSet<ParameterEntry>(Arrays.asList(new SimpleParameterEntry())));\n\n        // when\n        SimpleParameter clonedParameter = new SimpleParameter(parameter);\n\n        // then\n        assertThat(clonedParameter).hasNoEntries();\n    }", "signature": "void shouldNotCopyAnyParameterEntriesWhenUsingCloneContructor()", "full_signature": "@Test public void shouldNotCopyAnyParameterEntriesWhenUsingCloneContructor()", "class_method_signature": "SimpleParameterTest.shouldNotCopyAnyParameterEntriesWhenUsingCloneContructor()", "testcase": true, "constructor": false, "invocations": ["setEntries", "asList", "hasNoEntries", "assertThat"]}, "focal_class": {"identifier": "SimpleParameter", "superclass": "", "interfaces": "implements Parameter", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final List<Level> levels = new ArrayList<Level>();", "modifier": "private final", "type": "List<Level>", "declarator": "levels = new ArrayList<Level>()", "var_name": "levels"}, {"original_string": "private int inputLevels;", "modifier": "private", "type": "int", "declarator": "inputLevels", "var_name": "inputLevels"}, {"original_string": "private final Set<ParameterEntry> entries = new HashSet<ParameterEntry>();", "modifier": "private final", "type": "Set<ParameterEntry>", "declarator": "entries = new HashSet<ParameterEntry>()", "var_name": "entries"}, {"original_string": "private char arraySeparator = Parameter.DEFAULT_ARRAY_SEPARATOR;", "modifier": "private", "type": "char", "declarator": "arraySeparator = Parameter.DEFAULT_ARRAY_SEPARATOR", "var_name": "arraySeparator"}, {"original_string": "private boolean cacheable = true;", "modifier": "private", "type": "boolean", "declarator": "cacheable = true", "var_name": "cacheable"}, {"original_string": "private boolean nullable = false;", "modifier": "private", "type": "boolean", "declarator": "nullable = false", "var_name": "nullable"}, {"original_string": "private boolean identifyEntries = false;", "modifier": "private", "type": "boolean", "declarator": "identifyEntries = false", "var_name": "identifyEntries"}], "methods": [{"identifier": "SimpleParameter", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimpleParameter()", "full_signature": "public  SimpleParameter()", "class_method_signature": "SimpleParameter.SimpleParameter()", "testcase": false, "constructor": true}, {"identifier": "SimpleParameter", "parameters": "(Parameter parameter)", "modifiers": "public", "return": "", "signature": " SimpleParameter(Parameter parameter)", "full_signature": "public  SimpleParameter(Parameter parameter)", "class_method_signature": "SimpleParameter.SimpleParameter(Parameter parameter)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "ParameterKey", "signature": "ParameterKey getKey()", "full_signature": "@Override public ParameterKey getKey()", "class_method_signature": "SimpleParameter.getKey()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "SimpleParameter.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "SimpleParameter.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "withName", "parameters": "(String name)", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter withName(String name)", "full_signature": "public SimpleParameter withName(String name)", "class_method_signature": "SimpleParameter.withName(String name)", "testcase": false, "constructor": false}, {"identifier": "getLevels", "parameters": "()", "modifiers": "@Override public", "return": "List<Level>", "signature": "List<Level> getLevels()", "full_signature": "@Override public List<Level> getLevels()", "class_method_signature": "SimpleParameter.getLevels()", "testcase": false, "constructor": false}, {"identifier": "setLevels", "parameters": "(List<Level> levels)", "modifiers": "public", "return": "void", "signature": "void setLevels(List<Level> levels)", "full_signature": "public void setLevels(List<Level> levels)", "class_method_signature": "SimpleParameter.setLevels(List<Level> levels)", "testcase": false, "constructor": false}, {"identifier": "withLevel", "parameters": "(Level level)", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter withLevel(Level level)", "full_signature": "public SimpleParameter withLevel(Level level)", "class_method_signature": "SimpleParameter.withLevel(Level level)", "testcase": false, "constructor": false}, {"identifier": "getInputLevels", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getInputLevels()", "full_signature": "@Override public int getInputLevels()", "class_method_signature": "SimpleParameter.getInputLevels()", "testcase": false, "constructor": false}, {"identifier": "setInputLevels", "parameters": "(int inputLevels)", "modifiers": "public", "return": "void", "signature": "void setInputLevels(int inputLevels)", "full_signature": "public void setInputLevels(int inputLevels)", "class_method_signature": "SimpleParameter.setInputLevels(int inputLevels)", "testcase": false, "constructor": false}, {"identifier": "withInputLevels", "parameters": "(int inputLevels)", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter withInputLevels(int inputLevels)", "full_signature": "public SimpleParameter withInputLevels(int inputLevels)", "class_method_signature": "SimpleParameter.withInputLevels(int inputLevels)", "testcase": false, "constructor": false}, {"identifier": "getEntries", "parameters": "()", "modifiers": "@Override public", "return": "Set<ParameterEntry>", "signature": "Set<ParameterEntry> getEntries()", "full_signature": "@Override public Set<ParameterEntry> getEntries()", "class_method_signature": "SimpleParameter.getEntries()", "testcase": false, "constructor": false}, {"identifier": "setEntries", "parameters": "(Set<ParameterEntry> entries)", "modifiers": "public", "return": "void", "signature": "void setEntries(Set<ParameterEntry> entries)", "full_signature": "public void setEntries(Set<ParameterEntry> entries)", "class_method_signature": "SimpleParameter.setEntries(Set<ParameterEntry> entries)", "testcase": false, "constructor": false}, {"identifier": "getArraySeparator", "parameters": "()", "modifiers": "@Override public", "return": "char", "signature": "char getArraySeparator()", "full_signature": "@Override public char getArraySeparator()", "class_method_signature": "SimpleParameter.getArraySeparator()", "testcase": false, "constructor": false}, {"identifier": "setArraySeparator", "parameters": "(char arraySeparator)", "modifiers": "public", "return": "void", "signature": "void setArraySeparator(char arraySeparator)", "full_signature": "public void setArraySeparator(char arraySeparator)", "class_method_signature": "SimpleParameter.setArraySeparator(char arraySeparator)", "testcase": false, "constructor": false}, {"identifier": "withArraySeparator", "parameters": "(char arraySeparator)", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter withArraySeparator(char arraySeparator)", "full_signature": "public SimpleParameter withArraySeparator(char arraySeparator)", "class_method_signature": "SimpleParameter.withArraySeparator(char arraySeparator)", "testcase": false, "constructor": false}, {"identifier": "isCacheable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCacheable()", "full_signature": "@Override public boolean isCacheable()", "class_method_signature": "SimpleParameter.isCacheable()", "testcase": false, "constructor": false}, {"identifier": "setCacheable", "parameters": "(boolean cacheable)", "modifiers": "public", "return": "void", "signature": "void setCacheable(boolean cacheable)", "full_signature": "public void setCacheable(boolean cacheable)", "class_method_signature": "SimpleParameter.setCacheable(boolean cacheable)", "testcase": false, "constructor": false}, {"identifier": "notCacheable", "parameters": "()", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter notCacheable()", "full_signature": "public SimpleParameter notCacheable()", "class_method_signature": "SimpleParameter.notCacheable()", "testcase": false, "constructor": false}, {"identifier": "isNullable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNullable()", "full_signature": "@Override public boolean isNullable()", "class_method_signature": "SimpleParameter.isNullable()", "testcase": false, "constructor": false}, {"identifier": "setNullable", "parameters": "(boolean nullable)", "modifiers": "public", "return": "void", "signature": "void setNullable(boolean nullable)", "full_signature": "public void setNullable(boolean nullable)", "class_method_signature": "SimpleParameter.setNullable(boolean nullable)", "testcase": false, "constructor": false}, {"identifier": "nullable", "parameters": "()", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter nullable()", "full_signature": "public SimpleParameter nullable()", "class_method_signature": "SimpleParameter.nullable()", "testcase": false, "constructor": false}, {"identifier": "isIdentifyEntries", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isIdentifyEntries()", "full_signature": "@Override public boolean isIdentifyEntries()", "class_method_signature": "SimpleParameter.isIdentifyEntries()", "testcase": false, "constructor": false}, {"identifier": "setIdentifyEntries", "parameters": "(boolean identifyEntries)", "modifiers": "public", "return": "void", "signature": "void setIdentifyEntries(boolean identifyEntries)", "full_signature": "public void setIdentifyEntries(boolean identifyEntries)", "class_method_signature": "SimpleParameter.setIdentifyEntries(boolean identifyEntries)", "testcase": false, "constructor": false}, {"identifier": "identifyEntries", "parameters": "()", "modifiers": "public", "return": "SimpleParameter", "signature": "SimpleParameter identifyEntries()", "full_signature": "public SimpleParameter identifyEntries()", "class_method_signature": "SimpleParameter.identifyEntries()", "testcase": false, "constructor": false}], "file": "smartparam-editor/src/main/java/org/smartparam/editor/model/simple/SimpleParameter.java"}, "focal_method": {"identifier": "setEntries", "parameters": "(Set<ParameterEntry> entries)", "modifiers": "public", "return": "void", "body": "public void setEntries(Set<ParameterEntry> entries) {\n        this.entries.addAll(entries);\n    }", "signature": "void setEntries(Set<ParameterEntry> entries)", "full_signature": "public void setEntries(Set<ParameterEntry> entries)", "class_method_signature": "SimpleParameter.setEntries(Set<ParameterEntry> entries)", "testcase": false, "constructor": false, "invocations": ["addAll"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}