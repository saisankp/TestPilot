{"test_class": {"identifier": "AbstractSeSelectionRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AID = \"112233445566\";", "modifier": "private static final", "type": "String", "declarator": "AID = \"112233445566\"", "var_name": "AID"}, {"original_string": "private static final String APDU1 = \"00 11 2233 01 11\";", "modifier": "private static final", "type": "String", "declarator": "APDU1 = \"00 11 2233 01 11\"", "var_name": "APDU1"}, {"original_string": "private static final String APDU2 = \"00 11 2233 01 22\";", "modifier": "private static final", "type": "String", "declarator": "APDU2 = \"00 11 2233 01 22\"", "var_name": "APDU2"}], "file": "java/component/keyple-core/src/test/java/org/eclipse/keyple/core/selection/AbstractSeSelectionRequestTest.java"}, "test_case": {"identifier": "testGetSeSelector", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSeSelector() {\n    SeSelector seSelector =\n        SeSelector.builder()\n            .seProtocol(SeCommonProtocols.PROTOCOL_ISO14443_4)\n            .aidSelector(SeSelector.AidSelector.builder().aidToSelect(AID).build())\n            .build();\n    TestSeSelectionRequest testSeSelectionRequest = new TestSeSelectionRequest(seSelector);\n    assertThat(testSeSelectionRequest.getSeSelector()).isEqualTo(seSelector);\n  }", "signature": "void testGetSeSelector()", "full_signature": "@Test public void testGetSeSelector()", "class_method_signature": "AbstractSeSelectionRequestTest.testGetSeSelector()", "testcase": true, "constructor": false, "invocations": ["build", "aidSelector", "seProtocol", "builder", "build", "aidToSelect", "builder", "isEqualTo", "assertThat", "getSeSelector"]}, "focal_class": {"identifier": "AbstractSeSelectionRequest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final SeSelector seSelector;", "modifier": "protected final", "type": "SeSelector", "declarator": "seSelector", "var_name": "seSelector"}, {"original_string": "private final List<T> commandBuilders = new ArrayList<T>();", "modifier": "private final", "type": "List<T>", "declarator": "commandBuilders = new ArrayList<T>()", "var_name": "commandBuilders"}], "methods": [{"identifier": "AbstractSeSelectionRequest", "parameters": "(SeSelector seSelector)", "modifiers": "public", "return": "", "signature": " AbstractSeSelectionRequest(SeSelector seSelector)", "full_signature": "public  AbstractSeSelectionRequest(SeSelector seSelector)", "class_method_signature": "AbstractSeSelectionRequest.AbstractSeSelectionRequest(SeSelector seSelector)", "testcase": false, "constructor": true}, {"identifier": "getSelectionRequest", "parameters": "()", "modifiers": "final", "return": "SeRequest", "signature": "SeRequest getSelectionRequest()", "full_signature": "final SeRequest getSelectionRequest()", "class_method_signature": "AbstractSeSelectionRequest.getSelectionRequest()", "testcase": false, "constructor": false}, {"identifier": "getSeSelector", "parameters": "()", "modifiers": "public", "return": "SeSelector", "signature": "SeSelector getSeSelector()", "full_signature": "public SeSelector getSeSelector()", "class_method_signature": "AbstractSeSelectionRequest.getSeSelector()", "testcase": false, "constructor": false}, {"identifier": "addCommandBuilder", "parameters": "(T commandBuilder)", "modifiers": "protected final", "return": "void", "signature": "void addCommandBuilder(T commandBuilder)", "full_signature": "protected final void addCommandBuilder(T commandBuilder)", "class_method_signature": "AbstractSeSelectionRequest.addCommandBuilder(T commandBuilder)", "testcase": false, "constructor": false}, {"identifier": "getCommandBuilders", "parameters": "()", "modifiers": "protected final", "return": "List<T>", "signature": "List<T> getCommandBuilders()", "full_signature": "protected final List<T> getCommandBuilders()", "class_method_signature": "AbstractSeSelectionRequest.getCommandBuilders()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(SeResponse seResponse)", "modifiers": "protected abstract", "return": "AbstractMatchingSe", "signature": "AbstractMatchingSe parse(SeResponse seResponse)", "full_signature": "protected abstract AbstractMatchingSe parse(SeResponse seResponse)", "class_method_signature": "AbstractSeSelectionRequest.parse(SeResponse seResponse)", "testcase": false, "constructor": false}], "file": "java/component/keyple-core/src/main/java/org/eclipse/keyple/core/selection/AbstractSeSelectionRequest.java"}, "focal_method": {"identifier": "getSeSelector", "parameters": "()", "modifiers": "public", "return": "SeSelector", "body": "public SeSelector getSeSelector() {\n    return seSelector;\n  }", "signature": "SeSelector getSeSelector()", "full_signature": "public SeSelector getSeSelector()", "class_method_signature": "AbstractSeSelectionRequest.getSeSelector()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}