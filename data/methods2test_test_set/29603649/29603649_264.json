{"test_class": {"identifier": "AndHeaderCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ParameterList paramList;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "paramList", "var_name": "paramList"}, {"original_string": "@Mock\n    private ConditionCheckerOperator operator;", "modifier": "@Mock\n    private", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}, {"original_string": "private AndHeaderChecker underTest;", "modifier": "private", "type": "AndHeaderChecker", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private List<Parameter> params;", "modifier": "private", "type": "List<Parameter>", "declarator": "params", "var_name": "params"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/condition/checker/general/header/AndHeaderCheckerTest.java"}, "test_case": {"identifier": "testCheckConditionShouldReturnFalseWhenHeadersDoesNotContainSecondParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConditionShouldReturnFalseWhenHeadersDoesNotContainSecondParameter() {\n        //GIVEN\n        Map<String, String> headers = new HashMap<String, String>();\n        headers.put(\"a\", \"aa\");\n        headers.put(\"b\", \"bb\");\n        given(request.getHeaders()).willReturn(headers);\n        given(paramList.getAllParameters()).willReturn(params);\n        given(operator.checkTarget(anyString(), anyString())).willReturn(false);\n        params.add(new Parameter(\"a\", \"aa\"));\n        params.add(new Parameter(\"c\", \"aac\"));\n        //WHEN\n        boolean actual = underTest.checkCondition(request, paramList);\n        //THEN\n        assertFalse(actual);\n    }", "signature": "void testCheckConditionShouldReturnFalseWhenHeadersDoesNotContainSecondParameter()", "full_signature": "@Test public void testCheckConditionShouldReturnFalseWhenHeadersDoesNotContainSecondParameter()", "class_method_signature": "AndHeaderCheckerTest.testCheckConditionShouldReturnFalseWhenHeadersDoesNotContainSecondParameter()", "testcase": true, "constructor": false, "invocations": ["put", "put", "willReturn", "given", "getHeaders", "willReturn", "given", "getAllParameters", "willReturn", "given", "checkTarget", "anyString", "anyString", "add", "add", "checkCondition", "assertFalse"]}, "focal_class": {"identifier": "AndHeaderChecker", "superclass": "", "interfaces": "implements ConditionChecker", "fields": [{"original_string": "private final ConditionCheckerOperator operator;", "modifier": "private final", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}], "methods": [{"identifier": "AndHeaderChecker", "parameters": "(final ConditionCheckerOperator operator)", "modifiers": "public", "return": "", "signature": " AndHeaderChecker(final ConditionCheckerOperator operator)", "full_signature": "public  AndHeaderChecker(final ConditionCheckerOperator operator)", "class_method_signature": "AndHeaderChecker.AndHeaderChecker(final ConditionCheckerOperator operator)", "testcase": false, "constructor": true}, {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "AndHeaderChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false}, {"identifier": "evaluateParameter", "parameters": "(final WilmaHttpRequest request, final String parameterValue)", "modifiers": "private", "return": "boolean", "signature": "boolean evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "full_signature": "private boolean evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "class_method_signature": "AndHeaderChecker.evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "testcase": false, "constructor": false}, {"identifier": "checkParameterValueInHeaders", "parameters": "(final WilmaHttpRequest request, final String parameterValue)", "modifiers": "private", "return": "boolean", "signature": "boolean checkParameterValueInHeaders(final WilmaHttpRequest request, final String parameterValue)", "full_signature": "private boolean checkParameterValueInHeaders(final WilmaHttpRequest request, final String parameterValue)", "class_method_signature": "AndHeaderChecker.checkParameterValueInHeaders(final WilmaHttpRequest request, final String parameterValue)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/condition/checker/general/header/AndHeaderChecker.java"}, "focal_method": {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList) {\n        List<Parameter> params = parameterList.getAllParameters();\n        Iterator<Parameter> iterator = params.iterator();\n        boolean result = !params.isEmpty();\n        while (iterator.hasNext() && result) {\n            Parameter parameter = iterator.next();\n            String parameterValue = parameter.getValue();\n            result = evaluateParameter(request, parameterValue);\n        }\n        return result;\n    }", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "AndHeaderChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "iterator", "isEmpty", "hasNext", "next", "getValue", "evaluateParameter"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}