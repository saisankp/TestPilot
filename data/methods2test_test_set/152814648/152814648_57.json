{"test_class": {"identifier": "WarningsPluginConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final PathUtil PATH_UTIL = new PathUtil();", "modifier": "private static final", "type": "PathUtil", "declarator": "PATH_UTIL = new PathUtil()", "var_name": "PATH_UTIL"}, {"original_string": "private static final String FIRST = \"/One\";", "modifier": "private static final", "type": "String", "declarator": "FIRST = \"/One\"", "var_name": "FIRST"}, {"original_string": "private static final String SECOND = \"/Two\";", "modifier": "private static final", "type": "String", "declarator": "SECOND = \"/Two\"", "var_name": "SECOND"}, {"original_string": "private static final String ABSOLUTE_NOT_EXISTING = \"/Three\";", "modifier": "private static final", "type": "String", "declarator": "ABSOLUTE_NOT_EXISTING = \"/Three\"", "var_name": "ABSOLUTE_NOT_EXISTING"}, {"original_string": "private static final String RELATIVE = \"Relative\";", "modifier": "private static final", "type": "String", "declarator": "RELATIVE = \"Relative\"", "var_name": "RELATIVE"}, {"original_string": "private static final String NORMALIZED = PATH_UTIL.getAbsolutePath(\"/workspace\");", "modifier": "private static final", "type": "String", "declarator": "NORMALIZED = PATH_UTIL.getAbsolutePath(\"/workspace\")", "var_name": "NORMALIZED"}, {"original_string": "private static final List<SourceDirectory> SOURCE_ROOTS\n            = Arrays.asList(new SourceDirectory(FIRST), new SourceDirectory(SECOND));", "modifier": "private static final", "type": "List<SourceDirectory>", "declarator": "SOURCE_ROOTS\n            = Arrays.asList(new SourceDirectory(FIRST), new SourceDirectory(SECOND))", "var_name": "SOURCE_ROOTS"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/WarningsPluginConfigurationTest.java"}, "test_case": {"identifier": "shouldHaveNoRootFoldersWhenCreated", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldHaveNoRootFoldersWhenCreated() {\n        WarningsPluginConfiguration configuration = createConfiguration();\n\n        assertThat(configuration.getSourceDirectories()).isEmpty();\n\n        assertThat(get(configuration, \"\")).isEqualTo(NORMALIZED);\n        assertThat(get(configuration, \"-\")).isEqualTo(NORMALIZED);\n        assertThat(get(configuration, ABSOLUTE_NOT_EXISTING)).isEqualTo(NORMALIZED);\n        assertThat(get(configuration, RELATIVE)).isEqualTo(getWorkspaceChild(RELATIVE));\n    }", "signature": "void shouldHaveNoRootFoldersWhenCreated()", "full_signature": "@Test void shouldHaveNoRootFoldersWhenCreated()", "class_method_signature": "WarningsPluginConfigurationTest.shouldHaveNoRootFoldersWhenCreated()", "testcase": true, "constructor": false, "invocations": ["createConfiguration", "isEmpty", "assertThat", "getSourceDirectories", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "getWorkspaceChild"]}, "focal_class": {"identifier": "WarningsPluginConfiguration", "superclass": "extends GlobalConfigurationItem", "interfaces": "", "fields": [{"original_string": "private static final PathUtil PATH_UTIL = new PathUtil();", "modifier": "private static final", "type": "PathUtil", "declarator": "PATH_UTIL = new PathUtil()", "var_name": "PATH_UTIL"}, {"original_string": "private List<SourceDirectory> sourceDirectories = Collections.emptyList();", "modifier": "private", "type": "List<SourceDirectory>", "declarator": "sourceDirectories = Collections.emptyList()", "var_name": "sourceDirectories"}, {"original_string": "private Set<String> normalizedSourceDirectories = Collections.emptySet();", "modifier": "private", "type": "Set<String>", "declarator": "normalizedSourceDirectories = Collections.emptySet()", "var_name": "normalizedSourceDirectories"}], "methods": [{"identifier": "WarningsPluginConfiguration", "parameters": "()", "modifiers": "public", "return": "", "signature": " WarningsPluginConfiguration()", "full_signature": "public  WarningsPluginConfiguration()", "class_method_signature": "WarningsPluginConfiguration.WarningsPluginConfiguration()", "testcase": false, "constructor": true}, {"identifier": "WarningsPluginConfiguration", "parameters": "(final GlobalConfigurationFacade facade)", "modifiers": "@VisibleForTesting", "return": "", "signature": " WarningsPluginConfiguration(final GlobalConfigurationFacade facade)", "full_signature": "@VisibleForTesting  WarningsPluginConfiguration(final GlobalConfigurationFacade facade)", "class_method_signature": "WarningsPluginConfiguration.WarningsPluginConfiguration(final GlobalConfigurationFacade facade)", "testcase": false, "constructor": true}, {"identifier": "clearRepeatableProperties", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void clearRepeatableProperties()", "full_signature": "@Override protected void clearRepeatableProperties()", "class_method_signature": "WarningsPluginConfiguration.clearRepeatableProperties()", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "WarningsPluginConfiguration", "signature": "WarningsPluginConfiguration getInstance()", "full_signature": "public static WarningsPluginConfiguration getInstance()", "class_method_signature": "WarningsPluginConfiguration.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getSourceDirectories", "parameters": "()", "modifiers": "public", "return": "List<SourceDirectory>", "signature": "List<SourceDirectory> getSourceDirectories()", "full_signature": "public List<SourceDirectory> getSourceDirectories()", "class_method_signature": "WarningsPluginConfiguration.getSourceDirectories()", "testcase": false, "constructor": false}, {"identifier": "setSourceDirectories", "parameters": "(final List<SourceDirectory> sourceDirectories)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setSourceDirectories(final List<SourceDirectory> sourceDirectories)", "full_signature": "@DataBoundSetter public void setSourceDirectories(final List<SourceDirectory> sourceDirectories)", "class_method_signature": "WarningsPluginConfiguration.setSourceDirectories(final List<SourceDirectory> sourceDirectories)", "testcase": false, "constructor": false}, {"identifier": "getPermittedSourceDirectory", "parameters": "(final FilePath workspace, final String sourceDirectory)", "modifiers": "public", "return": "FilePath", "signature": "FilePath getPermittedSourceDirectory(final FilePath workspace, final String sourceDirectory)", "full_signature": "public FilePath getPermittedSourceDirectory(final FilePath workspace, final String sourceDirectory)", "class_method_signature": "WarningsPluginConfiguration.getPermittedSourceDirectory(final FilePath workspace, final String sourceDirectory)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/WarningsPluginConfiguration.java"}, "focal_method": {"identifier": "getSourceDirectories", "parameters": "()", "modifiers": "public", "return": "List<SourceDirectory>", "body": "public List<SourceDirectory> getSourceDirectories() {\n        return sourceDirectories;\n    }", "signature": "List<SourceDirectory> getSourceDirectories()", "full_signature": "public List<SourceDirectory> getSourceDirectories()", "class_method_signature": "WarningsPluginConfiguration.getSourceDirectories()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}