{"test_class": {"identifier": "MessageFileFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private MessageFileFilter underTest;", "modifier": "@InjectMocks\n    private", "type": "MessageFileFilter", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private File file;", "modifier": "@Mock\n    private", "type": "File", "declarator": "file", "var_name": "file"}], "file": "wilma-application/modules/wilma-message-maintainer/src/test/java/com/epam/wilma/maintainer/task/helper/MessageFileFilterTest.java"}, "test_case": {"identifier": "testIsMatchWithRegExpShouldReturnTrueWhenNameDoesMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsMatchWithRegExpShouldReturnTrueWhenNameDoesMatch() {\n        //GIVEN\n        String fileName = \"20130701132107.0025resp.txt\";\n        given(file.getName()).willReturn(fileName);\n        //WHEN\n        boolean result = underTest.isMatchWithRegExp(file);\n        //THEN\n        assertTrue(result);\n    }", "signature": "void testIsMatchWithRegExpShouldReturnTrueWhenNameDoesMatch()", "full_signature": "@Test public void testIsMatchWithRegExpShouldReturnTrueWhenNameDoesMatch()", "class_method_signature": "MessageFileFilterTest.testIsMatchWithRegExpShouldReturnTrueWhenNameDoesMatch()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getName", "isMatchWithRegExp", "assertTrue"]}, "focal_class": {"identifier": "MessageFileFilter", "superclass": "", "interfaces": "implements FileFilter", "fields": [{"original_string": "private static final String FILE_NAME_EXP = \"[0-9]{14}.[0-9]{4}re(q|sp)(FI)?.txt\";", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME_EXP = \"[0-9]{14}.[0-9]{4}re(q|sp)(FI)?.txt\"", "var_name": "FILE_NAME_EXP"}], "methods": [{"identifier": "accept", "parameters": "(final File file)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(final File file)", "full_signature": "@Override public boolean accept(final File file)", "class_method_signature": "MessageFileFilter.accept(final File file)", "testcase": false, "constructor": false}, {"identifier": "isMatchWithRegExp", "parameters": "(final File file)", "modifiers": "", "return": "boolean", "signature": "boolean isMatchWithRegExp(final File file)", "full_signature": " boolean isMatchWithRegExp(final File file)", "class_method_signature": "MessageFileFilter.isMatchWithRegExp(final File file)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-maintainer/src/main/java/com/epam/wilma/maintainer/task/helper/MessageFileFilter.java"}, "focal_method": {"identifier": "isMatchWithRegExp", "parameters": "(final File file)", "modifiers": "", "return": "boolean", "body": "boolean isMatchWithRegExp(final File file) {\n        return file.getName().matches(FILE_NAME_EXP);\n    }", "signature": "boolean isMatchWithRegExp(final File file)", "full_signature": " boolean isMatchWithRegExp(final File file)", "class_method_signature": "MessageFileFilter.isMatchWithRegExp(final File file)", "testcase": false, "constructor": false, "invocations": ["matches", "getName"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}