{"test_class": {"identifier": "ProBPreferenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "de.prob2.kernel/src/test/java/de/prob/animator/domainobjects/ProBPreferenceTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tVariablePrologTerm typeAwesome = new VariablePrologTerm(\"TypeAwesome\");\n\t\tCompoundPrologTerm cpt = new CompoundPrologTerm(\"cpt\",\n\t\t\t\tnew CompoundPrologTerm(\"IamAwesome\"), typeAwesome,\n\t\t\t\tnew CompoundPrologTerm(\"descriptionAwesome\"),\n\t\t\t\tnew CompoundPrologTerm(\"categoryAwesome\"),\n\t\t\t\tnew CompoundPrologTerm(\"awesomeDefaultValue\"));\n\t\tProBPreference a = new ProBPreference(cpt);\n\n\t\tassertEquals(\"IamAwesome\", a.name);\n\t\tassertEquals(typeAwesome, a.type);\n\t\tassertEquals(\"descriptionAwesome\", a.description);\n\t\tassertEquals(\"categoryAwesome\", a.category);\n\t\tassertEquals(\"awesomeDefaultValue\", a.defaultValue);\n\n\t\tassertEquals(\n\t\t\t\t\"IamAwesome(cat. categoryAwesome, type TypeAwesome, default awesomeDefaultValue) descriptionAwesome\",\n\t\t\t\ta.toString());\n\n\t\tCompoundPrologTerm cpt2 = new CompoundPrologTerm(\"cpt\",\n\t\t\t\tnew CompoundPrologTerm(\"IamAwesome\"), typeAwesome,\n\t\t\t\tnew CompoundPrologTerm(\"descriptionAwesome\"),\n\t\t\t\tnew CompoundPrologTerm(\"categoryAwesome\"),\n\t\t\t\tnew CompoundPrologTerm(\"awesomeDefaultValue\",\n\t\t\t\t\t\tnew CompoundPrologTerm(\"I\"), new CompoundPrologTerm(\n\t\t\t\t\t\t\t\t\" am\"), new CompoundPrologTerm(\" not\"),\n\t\t\t\t\t\tnew CompoundPrologTerm(\" simple.\")));\n\t\ta = new ProBPreference(cpt2);\n\n\t\tassertEquals(\"IamAwesome\", a.name);\n\t\tassertEquals(typeAwesome, a.type);\n\t\tassertEquals(\"descriptionAwesome\", a.description);\n\t\tassertEquals(\"categoryAwesome\", a.category);\n\t\tassertEquals(\"awesomeDefaultValue('I',' am',' not',' simple.')\",\n\t\t\t\ta.defaultValue);\n\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ProBPreferenceTest.test()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "toString", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ProBPreference", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final String name;", "modifier": "public final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "public final PrologTerm type;", "modifier": "public final", "type": "PrologTerm", "declarator": "type", "var_name": "type"}, {"original_string": "public final String description;", "modifier": "public final", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "public final String category;", "modifier": "public final", "type": "String", "declarator": "category", "var_name": "category"}, {"original_string": "public final String defaultValue;", "modifier": "public final", "type": "String", "declarator": "defaultValue", "var_name": "defaultValue"}, {"original_string": "private static final int NAME_POSITION = 1;", "modifier": "private static final", "type": "int", "declarator": "NAME_POSITION = 1", "var_name": "NAME_POSITION"}, {"original_string": "private static final int TYPE_POSITION = 2;", "modifier": "private static final", "type": "int", "declarator": "TYPE_POSITION = 2", "var_name": "TYPE_POSITION"}, {"original_string": "private static final int DESC_POSITION = 3;", "modifier": "private static final", "type": "int", "declarator": "DESC_POSITION = 3", "var_name": "DESC_POSITION"}, {"original_string": "private static final int CAT_POSITION = 4;", "modifier": "private static final", "type": "int", "declarator": "CAT_POSITION = 4", "var_name": "CAT_POSITION"}, {"original_string": "private static final int DEFAULT_POSITION = 5;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_POSITION = 5", "var_name": "DEFAULT_POSITION"}], "methods": [{"identifier": "ProBPreference", "parameters": "(final CompoundPrologTerm term)", "modifiers": "public", "return": "", "signature": " ProBPreference(final CompoundPrologTerm term)", "full_signature": "public  ProBPreference(final CompoundPrologTerm term)", "class_method_signature": "ProBPreference.ProBPreference(final CompoundPrologTerm term)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProBPreference.toString()", "testcase": false, "constructor": false}], "file": "de.prob2.kernel/src/main/java/de/prob/animator/domainobjects/ProBPreference.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString() {\n\t\treturn name + \"(cat. \" + category + \", type \" + type + \", default \" + defaultValue + \") \" + description;\n\t}", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProBPreference.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 5495723, "url": "https://github.com/bendisposto/prob2", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 11, "size": 32880, "license": "licensed"}}