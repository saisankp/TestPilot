{"test_class": {"identifier": "LandsatLevel2MetadataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LandsatLevel2Metadata metadata;", "modifier": "private", "type": "LandsatLevel2Metadata", "declarator": "metadata", "var_name": "metadata"}], "file": "s3tbx-landsat-reader/src/test/java/org/esa/s3tbx/dataio/landsat/geotiff/level2/LandsatLevel2MetadataTest.java"}, "test_case": {"identifier": "testRasterFileNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRasterFileNames() throws Exception {\n        String[] name = metadata.getRasterFileNames();\n        assertEquals(name.length,10);\n    }", "signature": "void testRasterFileNames()", "full_signature": "@Test public void testRasterFileNames()", "class_method_signature": "LandsatLevel2MetadataTest.testRasterFileNames()", "testcase": true, "constructor": false, "invocations": ["getRasterFileNames", "assertEquals"]}, "focal_class": {"identifier": "LandsatLevel2Metadata", "superclass": "extends XmlMetadata", "interfaces": "", "fields": [{"original_string": "private static final float[] ETM_PLUS_WAVELENGTHS = {\n            485.0f,\n            560.0f,\n            660.0f,\n            835.0f,\n            1650.0f,\n            11450.0f,\n            2220.0f,\n            710.0f\n    };", "modifier": "private static final", "type": "float[]", "declarator": "ETM_PLUS_WAVELENGTHS = {\n            485.0f,\n            560.0f,\n            660.0f,\n            835.0f,\n            1650.0f,\n            11450.0f,\n            2220.0f,\n            710.0f\n    }", "var_name": "ETM_PLUS_WAVELENGTHS"}, {"original_string": "private static final float[] ETM_PLUS_BANDWIDTHS = {\n            70.0f,\n            80.0f,\n            60.0f,\n            130.0f,\n            200.0f,\n            2100.0f,\n            260.0f,\n            380.0f\n    };", "modifier": "private static final", "type": "float[]", "declarator": "ETM_PLUS_BANDWIDTHS = {\n            70.0f,\n            80.0f,\n            60.0f,\n            130.0f,\n            200.0f,\n            2100.0f,\n            260.0f,\n            380.0f\n    }", "var_name": "ETM_PLUS_BANDWIDTHS"}, {"original_string": "private static final float[] TM_WAVELENGTHS = {\n            490,\n            560,\n            660,\n            830,\n            1670,\n            11500,\n            2240,\n            710\n    };", "modifier": "private static final", "type": "float[]", "declarator": "TM_WAVELENGTHS = {\n            490,\n            560,\n            660,\n            830,\n            1670,\n            11500,\n            2240,\n            710\n    }", "var_name": "TM_WAVELENGTHS"}, {"original_string": "private static final float[] TM_BANDWIDTHS = {\n            66,\n            82,\n            67,\n            128,\n            217,\n            1000,\n            252,\n            380\n    };", "modifier": "private static final", "type": "float[]", "declarator": "TM_BANDWIDTHS = {\n            66,\n            82,\n            67,\n            128,\n            217,\n            1000,\n            252,\n            380\n    }", "var_name": "TM_BANDWIDTHS"}, {"original_string": "private static final float[] L8_WAVELENGTHS = {\n            440,\n            480,\n            560,\n            655,\n            865,\n            1610,\n            2200,\n            590,\n            1370,\n            10895,\n            12005\n    };", "modifier": "private static final", "type": "float[]", "declarator": "L8_WAVELENGTHS = {\n            440,\n            480,\n            560,\n            655,\n            865,\n            1610,\n            2200,\n            590,\n            1370,\n            10895,\n            12005\n    }", "var_name": "L8_WAVELENGTHS"}, {"original_string": "private static final float[] L8_BANDWIDTHS = {\n            20,\n            60,\n            60,\n            30,\n            30,\n            80,\n            180,\n            180,\n            20,\n            590,\n            1010\n    };", "modifier": "private static final", "type": "float[]", "declarator": "L8_BANDWIDTHS = {\n            20,\n            60,\n            60,\n            30,\n            30,\n            80,\n            180,\n            180,\n            20,\n            590,\n            1010\n    }", "var_name": "L8_BANDWIDTHS"}], "methods": [{"identifier": "LandsatLevel2Metadata", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " LandsatLevel2Metadata(String name)", "full_signature": "public  LandsatLevel2Metadata(String name)", "class_method_signature": "LandsatLevel2Metadata.LandsatLevel2Metadata(String name)", "testcase": false, "constructor": true}, {"identifier": "getFileName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFileName()", "full_signature": "@Override public String getFileName()", "class_method_signature": "LandsatLevel2Metadata.getFileName()", "testcase": false, "constructor": false}, {"identifier": "getProductName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProductName()", "full_signature": "@Override public String getProductName()", "class_method_signature": "LandsatLevel2Metadata.getProductName()", "testcase": false, "constructor": false}, {"identifier": "getProductDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProductDescription()", "full_signature": "public String getProductDescription()", "class_method_signature": "LandsatLevel2Metadata.getProductDescription()", "testcase": false, "constructor": false}, {"identifier": "getFormatName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFormatName()", "full_signature": "@Override public String getFormatName()", "class_method_signature": "LandsatLevel2Metadata.getFormatName()", "testcase": false, "constructor": false}, {"identifier": "getMetadataProfile", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMetadataProfile()", "full_signature": "@Override public String getMetadataProfile()", "class_method_signature": "LandsatLevel2Metadata.getMetadataProfile()", "testcase": false, "constructor": false}, {"identifier": "getRasterWidth", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRasterWidth()", "full_signature": "@Override public int getRasterWidth()", "class_method_signature": "LandsatLevel2Metadata.getRasterWidth()", "testcase": false, "constructor": false}, {"identifier": "getRasterHeight", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRasterHeight()", "full_signature": "@Override public int getRasterHeight()", "class_method_signature": "LandsatLevel2Metadata.getRasterHeight()", "testcase": false, "constructor": false}, {"identifier": "getRasterFileNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getRasterFileNames()", "full_signature": "@Override public String[] getRasterFileNames()", "class_method_signature": "LandsatLevel2Metadata.getRasterFileNames()", "testcase": false, "constructor": false}, {"identifier": "getProductStartTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "signature": "ProductData.UTC getProductStartTime()", "full_signature": "@Override public ProductData.UTC getProductStartTime()", "class_method_signature": "LandsatLevel2Metadata.getProductStartTime()", "testcase": false, "constructor": false}, {"identifier": "getProductEndTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "signature": "ProductData.UTC getProductEndTime()", "full_signature": "@Override public ProductData.UTC getProductEndTime()", "class_method_signature": "LandsatLevel2Metadata.getProductEndTime()", "testcase": false, "constructor": false}, {"identifier": "getCenterTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "signature": "ProductData.UTC getCenterTime()", "full_signature": "@Override public ProductData.UTC getCenterTime()", "class_method_signature": "LandsatLevel2Metadata.getCenterTime()", "testcase": false, "constructor": false}, {"identifier": "getNumBands", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNumBands()", "full_signature": "@Override public int getNumBands()", "class_method_signature": "LandsatLevel2Metadata.getNumBands()", "testcase": false, "constructor": false}, {"identifier": "getUpperLeft", "parameters": "()", "modifiers": "public", "return": "Point2D.Double", "signature": "Point2D.Double getUpperLeft()", "full_signature": "public Point2D.Double getUpperLeft()", "class_method_signature": "LandsatLevel2Metadata.getUpperLeft()", "testcase": false, "constructor": false}, {"identifier": "getBandName", "parameters": "(String filename)", "modifiers": "public", "return": "String", "signature": "String getBandName(String filename)", "full_signature": "public String getBandName(String filename)", "class_method_signature": "LandsatLevel2Metadata.getBandName(String filename)", "testcase": false, "constructor": false}, {"identifier": "getScalingFactor", "parameters": "(String filename)", "modifiers": "public", "return": "double", "signature": "double getScalingFactor(String filename)", "full_signature": "public double getScalingFactor(String filename)", "class_method_signature": "LandsatLevel2Metadata.getScalingFactor(String filename)", "testcase": false, "constructor": false}, {"identifier": "getScalingOffset", "parameters": "(String filename)", "modifiers": "public", "return": "double", "signature": "double getScalingOffset(String filename)", "full_signature": "public double getScalingOffset(String filename)", "class_method_signature": "LandsatLevel2Metadata.getScalingOffset(String filename)", "testcase": false, "constructor": false}, {"identifier": "getWavelength", "parameters": "(String filename)", "modifiers": "public", "return": "float", "signature": "float getWavelength(String filename)", "full_signature": "public float getWavelength(String filename)", "class_method_signature": "LandsatLevel2Metadata.getWavelength(String filename)", "testcase": false, "constructor": false}, {"identifier": "getBandwidth", "parameters": "(String filename)", "modifiers": "public", "return": "float", "signature": "float getBandwidth(String filename)", "full_signature": "public float getBandwidth(String filename)", "class_method_signature": "LandsatLevel2Metadata.getBandwidth(String filename)", "testcase": false, "constructor": false}, {"identifier": "getBandDescription", "parameters": "(String filename)", "modifiers": "public", "return": "String", "signature": "String getBandDescription(String filename)", "full_signature": "public String getBandDescription(String filename)", "class_method_signature": "LandsatLevel2Metadata.getBandDescription(String filename)", "testcase": false, "constructor": false}, {"identifier": "isReflectanceBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isReflectanceBand(String filename)", "full_signature": "public boolean isReflectanceBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isReflectanceBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "isSaturationBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isSaturationBand(String filename)", "full_signature": "public boolean isSaturationBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isSaturationBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "isAerosolBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isAerosolBand(String filename)", "full_signature": "public boolean isAerosolBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isAerosolBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "isQualityBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isQualityBand(String filename)", "full_signature": "public boolean isQualityBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isQualityBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "isAtmosBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isAtmosBand(String filename)", "full_signature": "public boolean isAtmosBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isAtmosBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "isCloudBand", "parameters": "(String filename)", "modifiers": "public", "return": "boolean", "signature": "boolean isCloudBand(String filename)", "full_signature": "public boolean isCloudBand(String filename)", "class_method_signature": "LandsatLevel2Metadata.isCloudBand(String filename)", "testcase": false, "constructor": false}, {"identifier": "getSatellite", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSatellite()", "full_signature": "public String getSatellite()", "class_method_signature": "LandsatLevel2Metadata.getSatellite()", "testcase": false, "constructor": false}, {"identifier": "getInstrument", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInstrument()", "full_signature": "public String getInstrument()", "class_method_signature": "LandsatLevel2Metadata.getInstrument()", "testcase": false, "constructor": false}, {"identifier": "createSaturationFlagCoding", "parameters": "(String bandName)", "modifiers": "public", "return": "FlagCoding", "signature": "FlagCoding createSaturationFlagCoding(String bandName)", "full_signature": "public FlagCoding createSaturationFlagCoding(String bandName)", "class_method_signature": "LandsatLevel2Metadata.createSaturationFlagCoding(String bandName)", "testcase": false, "constructor": false}], "file": "s3tbx-landsat-reader/src/main/java/org/esa/s3tbx/dataio/landsat/geotiff/level2/LandsatLevel2Metadata.java"}, "focal_method": {"identifier": "getRasterFileNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] getRasterFileNames() {\n        ArrayList<String> fileNamesArray = new ArrayList<>();\n        MetadataElement[] bandElements = getRootElement().getElement(\"bands\").getElements();\n        for (MetadataElement bandElement : bandElements) {\n            String name = bandElement.getAttribute(\"file_name\").getData().toString();\n            fileNamesArray.add(name);\n        }\n        return fileNamesArray.toArray(new String[fileNamesArray.size()]);\n    }", "signature": "String[] getRasterFileNames()", "full_signature": "@Override public String[] getRasterFileNames()", "class_method_signature": "LandsatLevel2Metadata.getRasterFileNames()", "testcase": false, "constructor": false, "invocations": ["getElements", "getElement", "getRootElement", "toString", "getData", "getAttribute", "add", "toArray", "size"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}