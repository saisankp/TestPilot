{"test_class": {"identifier": "ReflectionUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-core/src/test/java/org/sejda/core/support/util/ReflectionUtilsTest.java"}, "test_case": {"identifier": "testFailingInfer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFailingInfer() {\n        TestListener<TaskExecutionFailedEvent> victim = new TestListener<TaskExecutionFailedEvent>();\n        assertEquals(null, ReflectionUtils.inferParameterClass(victim.getClass(), \"onEvent\"));\n    }", "signature": "void testFailingInfer()", "full_signature": "@Test public void testFailingInfer()", "class_method_signature": "ReflectionUtilsTest.testFailingInfer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "inferParameterClass", "getClass"]}, "focal_class": {"identifier": "ReflectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ReflectionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReflectionUtils()", "full_signature": "private  ReflectionUtils()", "class_method_signature": "ReflectionUtils.ReflectionUtils()", "testcase": false, "constructor": true}, {"identifier": "inferParameterClass", "parameters": "(Class clazz, String methodName)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "Class", "signature": "Class inferParameterClass(Class clazz, String methodName)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static Class inferParameterClass(Class clazz, String methodName)", "class_method_signature": "ReflectionUtils.inferParameterClass(Class clazz, String methodName)", "testcase": false, "constructor": false}], "file": "sejda-core/src/main/java/org/sejda/core/support/util/ReflectionUtils.java"}, "focal_method": {"identifier": "inferParameterClass", "parameters": "(Class clazz, String methodName)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "Class", "body": "@SuppressWarnings(\"rawtypes\")\n    public static Class inferParameterClass(Class clazz, String methodName) {\n        Method[] methods = clazz.getMethods();\n        for (Method method : methods) {\n            if (method.getName().equals(methodName) && !method.isBridge()) {\n                Type[] types = method.getGenericParameterTypes();\n                for (Type type : types) {\n                    if (type instanceof Class && !((Class) type).isInterface()) {\n                        return (Class) type;\n                    }\n                }\n            }\n        }\n        return null;\n    }", "signature": "Class inferParameterClass(Class clazz, String methodName)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static Class inferParameterClass(Class clazz, String methodName)", "class_method_signature": "ReflectionUtils.inferParameterClass(Class clazz, String methodName)", "testcase": false, "constructor": false, "invocations": ["getMethods", "equals", "getName", "isBridge", "getGenericParameterTypes", "isInterface"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}