{"test_class": {"identifier": "OrUrlPatternCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private ParameterList paramList;", "modifier": "private", "type": "ParameterList", "declarator": "paramList", "var_name": "paramList"}, {"original_string": "private OrUrlPatternChecker underTest;", "modifier": "private", "type": "OrUrlPatternChecker", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/condition/checker/general/url/OrUrlPatternCheckerTest.java"}, "test_case": {"identifier": "testCheckConditionShouldReturnTrueWhenParameterListContainsOneMatcherElement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConditionShouldReturnTrueWhenParameterListContainsOneMatcherElement() {\n        //GIVEN\n        paramList.addParameter(new Parameter(\"key1\", \"aba\"));\n        given(request.getRequestLine()).willReturn(\"aba\");\n        //WHEN\n        boolean result = underTest.checkCondition(request, paramList);\n        //THEN\n        assertTrue(result);\n    }", "signature": "void testCheckConditionShouldReturnTrueWhenParameterListContainsOneMatcherElement()", "full_signature": "@Test public void testCheckConditionShouldReturnTrueWhenParameterListContainsOneMatcherElement()", "class_method_signature": "OrUrlPatternCheckerTest.testCheckConditionShouldReturnTrueWhenParameterListContainsOneMatcherElement()", "testcase": true, "constructor": false, "invocations": ["addParameter", "willReturn", "given", "getRequestLine", "checkCondition", "assertTrue"]}, "focal_class": {"identifier": "OrUrlPatternChecker", "superclass": "", "interfaces": "implements ConditionChecker", "fields": [], "methods": [{"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameters)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "class_method_signature": "OrUrlPatternChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "testcase": false, "constructor": false}, {"identifier": "evaluateParameter", "parameters": "(final WilmaHttpRequest request, final Parameter parameter)", "modifiers": "private", "return": "boolean", "signature": "boolean evaluateParameter(final WilmaHttpRequest request, final Parameter parameter)", "full_signature": "private boolean evaluateParameter(final WilmaHttpRequest request, final Parameter parameter)", "class_method_signature": "OrUrlPatternChecker.evaluateParameter(final WilmaHttpRequest request, final Parameter parameter)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/condition/checker/general/url/OrUrlPatternChecker.java"}, "focal_method": {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameters)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameters) {\n        List<Parameter> params = parameters.getAllParameters();\n        Iterator<Parameter> iterator = params.iterator();\n        boolean result = false;\n        if (!params.isEmpty()) {\n            while (iterator.hasNext() && !result) {\n                result = evaluateParameter(request, iterator.next());\n            }\n        }\n        return result;\n    }", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "class_method_signature": "OrUrlPatternChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameters)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "iterator", "isEmpty", "hasNext", "evaluateParameter", "next"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}