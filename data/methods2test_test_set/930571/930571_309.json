{"test_class": {"identifier": "CacheManagerImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/CacheManagerImplTest.java"}, "test_case": {"identifier": "testDispose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDispose() throws Exception {\n\t\tCacheManager cacheManager = new CacheManagerImpl();\n\t\tCacheable cacheable = mock(Cacheable.class);\n\t\tCacheable otherCacheable = mock(Cacheable.class);\n\t\tObject cached = new Object();\n\n\t\tcacheManager.add(\"cacheable\", cacheable);\n\t\tcacheManager.add(\"other_cacheable\", otherCacheable);\n\t\tcacheManager.add(\"cached\", cached);\n\n\t\t// verify that objects have been added correctly\n\t\tassertEquals(cacheable, cacheManager.get(\"cacheable\"));\n\t\tassertEquals(otherCacheable, cacheManager.get(\"other_cacheable\"));\n\t\tassertEquals(cached, cacheManager.get(\"cached\"));\n\n\t\tcacheManager.dispose();\n\n\t\t// cache should be empty after dispose\n\t\tassertNull(cacheManager.get(\"cacheable\"));\n\t\tassertNull(cacheManager.get(\"other_cacheable\"));\n\t\tassertNull(cacheManager.get(\"cached\"));\n\n\t\t// close() method has been called on cached objects which implement Cacheable\n\t\tverify(cacheable).close();\n\t\tverify(otherCacheable).close();\t\n\t}", "signature": "void testDispose()", "full_signature": "@Test public void testDispose()", "class_method_signature": "CacheManagerImplTest.testDispose()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "add", "add", "add", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "dispose", "assertNull", "get", "assertNull", "get", "assertNull", "get", "close", "verify", "close", "verify"]}, "focal_class": {"identifier": "CacheManagerImpl", "superclass": "", "interfaces": "implements CacheManager", "fields": [{"original_string": "private ConcurrentHashMap<String, Object> cache = new ConcurrentHashMap<String, Object>();", "modifier": "private", "type": "ConcurrentHashMap<String, Object>", "declarator": "cache = new ConcurrentHashMap<String, Object>()", "var_name": "cache"}], "methods": [{"identifier": "add", "parameters": "(String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void add(String key, Object value)", "full_signature": "@Override public void add(String key, Object value)", "class_method_signature": "CacheManagerImpl.add(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object get(String key)", "full_signature": "@Override public Object get(String key)", "class_method_signature": "CacheManagerImpl.get(String key)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object remove(String key)", "full_signature": "@Override public Object remove(String key)", "class_method_signature": "CacheManagerImpl.remove(String key)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "CacheManagerImpl.dispose()", "testcase": false, "constructor": false}], "file": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/CacheManagerImpl.java"}, "focal_method": {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void dispose() {\n\t\tfor (Map.Entry<String, Object> entry : cache.entrySet()) {\n\t\t\tif (entry.getValue() instanceof Cacheable) {\n\t\t\t\t((Cacheable) entry.getValue()).close();\n\t\t\t}\n\t\t}\n\t\tcache.clear();\n\t}", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "CacheManagerImpl.dispose()", "testcase": false, "constructor": false, "invocations": ["entrySet", "getValue", "close", "getValue", "clear"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}