{"test_class": {"identifier": "RestorableTsFileIOWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE_NAME = TestConstant.BASE_OUTPUT_PATH.concat(\"test.ts\");", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME = TestConstant.BASE_OUTPUT_PATH.concat(\"test.ts\")", "var_name": "FILE_NAME"}, {"original_string": "private static FSFactory fsFactory = FSFactoryProducer.getFSFactory();", "modifier": "private static", "type": "FSFactory", "declarator": "fsFactory = FSFactoryProducer.getFSFactory()", "var_name": "fsFactory"}], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriterTest.java"}, "test_case": {"identifier": "testAppendDataOnCompletedFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAppendDataOnCompletedFile() throws Exception {\n    File file = fsFactory.getFile(FILE_NAME);\n    TsFileWriter writer = new TsFileWriter(file);\n    writer.registerTimeseries(new Path(\"d1\", \"s1\"),\n        new MeasurementSchema(\"s1\", TSDataType.FLOAT, TSEncoding.RLE));\n    writer.registerTimeseries(new Path(\"d1\", \"s2\"),\n        new MeasurementSchema(\"s2\", TSDataType.FLOAT, TSEncoding.RLE));\n    writer.write(new TSRecord(1, \"d1\").addTuple(new FloatDataPoint(\"s1\", 5))\n        .addTuple(new FloatDataPoint(\"s2\", 4)));\n    writer.write(new TSRecord(2, \"d1\").addTuple(new FloatDataPoint(\"s1\", 5))\n        .addTuple(new FloatDataPoint(\"s2\", 4)));\n\n    writer.close();\n\n    long size = file.length();\n    RestorableTsFileIOWriter rWriter = RestorableTsFileIOWriter\n        .getWriterForAppendingDataOnCompletedTsFile(file);\n    TsFileWriter write = new TsFileWriter(rWriter);\n    write.close();\n    assertEquals(size, file.length());\n    assertTrue(file.delete());\n\n  }", "signature": "void testAppendDataOnCompletedFile()", "full_signature": "@Test public void testAppendDataOnCompletedFile()", "class_method_signature": "RestorableTsFileIOWriterTest.testAppendDataOnCompletedFile()", "testcase": true, "constructor": false, "invocations": ["getFile", "registerTimeseries", "registerTimeseries", "write", "addTuple", "addTuple", "write", "addTuple", "addTuple", "close", "length", "getWriterForAppendingDataOnCompletedTsFile", "close", "assertEquals", "length", "assertTrue", "delete"]}, "focal_class": {"identifier": "RestorableTsFileIOWriter", "superclass": "extends TsFileIOWriter", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(\"FileMonitor\");", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(\"FileMonitor\")", "var_name": "logger"}, {"original_string": "private long truncatedSize = -1;", "modifier": "private", "type": "long", "declarator": "truncatedSize = -1", "var_name": "truncatedSize"}, {"original_string": "private Map<Path, MeasurementSchema> knownSchemas = new HashMap<>();", "modifier": "private", "type": "Map<Path, MeasurementSchema>", "declarator": "knownSchemas = new HashMap<>()", "var_name": "knownSchemas"}, {"original_string": "private int lastFlushedChunkGroupIndex = 0;", "modifier": "private", "type": "int", "declarator": "lastFlushedChunkGroupIndex = 0", "var_name": "lastFlushedChunkGroupIndex"}, {"original_string": "private boolean crashed;", "modifier": "private", "type": "boolean", "declarator": "crashed", "var_name": "crashed"}, {"original_string": "private Map<String, Map<String, List<ChunkMetadata>>> metadatasForQuery = new HashMap<>();", "modifier": "private", "type": "Map<String, Map<String, List<ChunkMetadata>>>", "declarator": "metadatasForQuery = new HashMap<>()", "var_name": "metadatasForQuery"}], "methods": [{"identifier": "RestorableTsFileIOWriter", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " RestorableTsFileIOWriter(File file)", "full_signature": "public  RestorableTsFileIOWriter(File file)", "class_method_signature": "RestorableTsFileIOWriter.RestorableTsFileIOWriter(File file)", "testcase": false, "constructor": true}, {"identifier": "getWriterForAppendingDataOnCompletedTsFile", "parameters": "(File file)", "modifiers": "public static", "return": "RestorableTsFileIOWriter", "signature": "RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFile(File file)", "full_signature": "public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFile(File file)", "class_method_signature": "RestorableTsFileIOWriter.getWriterForAppendingDataOnCompletedTsFile(File file)", "testcase": false, "constructor": false}, {"identifier": "getTruncatedSize", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getTruncatedSize()", "full_signature": " long getTruncatedSize()", "class_method_signature": "RestorableTsFileIOWriter.getTruncatedSize()", "testcase": false, "constructor": false}, {"identifier": "getKnownSchema", "parameters": "()", "modifiers": "public", "return": "Map<Path, MeasurementSchema>", "signature": "Map<Path, MeasurementSchema> getKnownSchema()", "full_signature": "public Map<Path, MeasurementSchema> getKnownSchema()", "class_method_signature": "RestorableTsFileIOWriter.getKnownSchema()", "testcase": false, "constructor": false}, {"identifier": "getVisibleMetadataList", "parameters": "(String deviceId, String measurementId,\n      TSDataType dataType)", "modifiers": "public", "return": "List<ChunkMetadata>", "signature": "List<ChunkMetadata> getVisibleMetadataList(String deviceId, String measurementId,\n      TSDataType dataType)", "full_signature": "public List<ChunkMetadata> getVisibleMetadataList(String deviceId, String measurementId,\n      TSDataType dataType)", "class_method_signature": "RestorableTsFileIOWriter.getVisibleMetadataList(String deviceId, String measurementId,\n      TSDataType dataType)", "testcase": false, "constructor": false}, {"identifier": "getMetadatasForQuery", "parameters": "()", "modifiers": "public", "return": "Map<String, Map<String, List<ChunkMetadata>>>", "signature": "Map<String, Map<String, List<ChunkMetadata>>> getMetadatasForQuery()", "full_signature": "public Map<String, Map<String, List<ChunkMetadata>>> getMetadatasForQuery()", "class_method_signature": "RestorableTsFileIOWriter.getMetadatasForQuery()", "testcase": false, "constructor": false}, {"identifier": "makeMetadataVisible", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void makeMetadataVisible()", "full_signature": "public void makeMetadataVisible()", "class_method_signature": "RestorableTsFileIOWriter.makeMetadataVisible()", "testcase": false, "constructor": false}, {"identifier": "hasCrashed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasCrashed()", "full_signature": "public boolean hasCrashed()", "class_method_signature": "RestorableTsFileIOWriter.hasCrashed()", "testcase": false, "constructor": false}, {"identifier": "getAppendedRowMetadata", "parameters": "()", "modifiers": "private", "return": "List<ChunkGroupMetadata>", "signature": "List<ChunkGroupMetadata> getAppendedRowMetadata()", "full_signature": "private List<ChunkGroupMetadata> getAppendedRowMetadata()", "class_method_signature": "RestorableTsFileIOWriter.getAppendedRowMetadata()", "testcase": false, "constructor": false}, {"identifier": "addSchema", "parameters": "(Path path, MeasurementSchema schema)", "modifiers": "public", "return": "void", "signature": "void addSchema(Path path, MeasurementSchema schema)", "full_signature": "public void addSchema(Path path, MeasurementSchema schema)", "class_method_signature": "RestorableTsFileIOWriter.addSchema(Path path, MeasurementSchema schema)", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriter.java"}, "focal_method": {"identifier": "getWriterForAppendingDataOnCompletedTsFile", "parameters": "(File file)", "modifiers": "public static", "return": "RestorableTsFileIOWriter", "body": "public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFile(File file)\n      throws IOException {\n    long position = file.length();\n\n    try (TsFileSequenceReader reader = new TsFileSequenceReader(file.getAbsolutePath(), false)) {\n      // this tsfile is complete\n      if (reader.isComplete()) {\n        reader.loadMetadataSize();\n        position = reader.getFileMetadataPos();\n      }\n    }\n\n    if (position != file.length()) {\n      // if the file is complete, we will remove all file metadatas\n      try (FileChannel channel = FileChannel\n          .open(Paths.get(file.getAbsolutePath()), StandardOpenOption.WRITE)) {\n        channel.truncate(position - 1);// remove the last marker.\n      }\n    }\n    return new RestorableTsFileIOWriter(file);\n  }", "signature": "RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFile(File file)", "full_signature": "public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFile(File file)", "class_method_signature": "RestorableTsFileIOWriter.getWriterForAppendingDataOnCompletedTsFile(File file)", "testcase": false, "constructor": false, "invocations": ["length", "getAbsolutePath", "isComplete", "loadMetadataSize", "getFileMetadataPos", "length", "open", "get", "getAbsolutePath", "truncate"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}