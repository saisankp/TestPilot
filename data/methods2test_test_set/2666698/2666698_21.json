{"test_class": {"identifier": "IncludeValidationHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IncludeValidationHelper subject = new IncludeValidationHelper(new SilentLog());", "modifier": "private", "type": "IncludeValidationHelper", "declarator": "subject = new IncludeValidationHelper(new SilentLog())", "var_name": "subject"}], "file": "tycho-packaging-plugin/src/test/java/org/eclipse/tycho/packaging/IncludeValidationHelperTest.java"}, "test_case": {"identifier": "testWarning", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWarning() throws Exception {\n        final List<String> warnings = new ArrayList<>();\n\n        Logger log = new AbstractLogger(Logger.LEVEL_DEBUG, null) {\n\n            @Override\n            public void warn(String message, Throwable throwable) {\n                warnings.add(message);\n            }\n\n            @Override\n            public void info(String message, Throwable throwable) {\n                fail();\n            }\n\n            @Override\n            public Logger getChildLogger(String name) {\n                return null;\n            }\n\n            @Override\n            public void fatalError(String message, Throwable throwable) {\n                fail();\n            }\n\n            @Override\n            public void error(String message, Throwable throwable) {\n                fail();\n            }\n\n            @Override\n            public void debug(String message, Throwable throwable) {\n                fail();\n            }\n        };\n\n        IncludeValidationHelper subject = new IncludeValidationHelper(log);\n\n        BuildPropertiesImpl buildProperties = createBuildProperties(\"src.includes\", \"foo3, bar3*,**/*.me\");\n        MavenProject project = createMockProject();\n        subject.checkSourceIncludesExist(project, buildProperties, false);\n\n        assertEquals(1, warnings.size());\n        assertEquals(new File(project.getBasedir(), \"build.properties\").getAbsolutePath()\n                + \": src.includes value(s) [foo3, bar3*] do not match any files.\", warnings.get(0));\n    }", "signature": "void testWarning()", "full_signature": "@Test public void testWarning()", "class_method_signature": "IncludeValidationHelperTest.testWarning()", "testcase": true, "constructor": false, "invocations": ["add", "fail", "fail", "fail", "fail", "createBuildProperties", "createMockProject", "checkSourceIncludesExist", "assertEquals", "size", "assertEquals", "getAbsolutePath", "getBasedir", "get"]}, "focal_class": {"identifier": "IncludeValidationHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Requirement\n    private Logger log;", "modifier": "@Requirement\n    private", "type": "Logger", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "IncludeValidationHelper", "parameters": "()", "modifiers": "public", "return": "", "signature": " IncludeValidationHelper()", "full_signature": "public  IncludeValidationHelper()", "class_method_signature": "IncludeValidationHelper.IncludeValidationHelper()", "testcase": false, "constructor": true}, {"identifier": "IncludeValidationHelper", "parameters": "(Logger log)", "modifiers": "public", "return": "", "signature": " IncludeValidationHelper(Logger log)", "full_signature": "public  IncludeValidationHelper(Logger log)", "class_method_signature": "IncludeValidationHelper.IncludeValidationHelper(Logger log)", "testcase": false, "constructor": true}, {"identifier": "checkBinIncludesExist", "parameters": "(MavenProject project, BuildProperties buildProperties, boolean strict,\n            String... ignoredIncludes)", "modifiers": "public", "return": "void", "signature": "void checkBinIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict,\n            String... ignoredIncludes)", "full_signature": "public void checkBinIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict,\n            String... ignoredIncludes)", "class_method_signature": "IncludeValidationHelper.checkBinIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict,\n            String... ignoredIncludes)", "testcase": false, "constructor": false}, {"identifier": "checkSourceIncludesExist", "parameters": "(MavenProject project, BuildProperties buildProperties, boolean strict)", "modifiers": "public", "return": "void", "signature": "void checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "full_signature": "public void checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "class_method_signature": "IncludeValidationHelper.checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "checkIncludesExist", "parameters": "(String buildPropertiesKey, List<String> includePatterns, MavenProject project,\n            boolean strict, String... ignoredIncludes)", "modifiers": "private", "return": "void", "signature": "void checkIncludesExist(String buildPropertiesKey, List<String> includePatterns, MavenProject project,\n            boolean strict, String... ignoredIncludes)", "full_signature": "private void checkIncludesExist(String buildPropertiesKey, List<String> includePatterns, MavenProject project,\n            boolean strict, String... ignoredIncludes)", "class_method_signature": "IncludeValidationHelper.checkIncludesExist(String buildPropertiesKey, List<String> includePatterns, MavenProject project,\n            boolean strict, String... ignoredIncludes)", "testcase": false, "constructor": false}], "file": "tycho-packaging-plugin/src/main/java/org/eclipse/tycho/packaging/IncludeValidationHelper.java"}, "focal_method": {"identifier": "checkSourceIncludesExist", "parameters": "(MavenProject project, BuildProperties buildProperties, boolean strict)", "modifiers": "public", "return": "void", "body": "public void checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)\n            throws MojoExecutionException {\n        checkIncludesExist(\"src.includes\", buildProperties.getSourceIncludes(), project, strict);\n    }", "signature": "void checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "full_signature": "public void checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "class_method_signature": "IncludeValidationHelper.checkSourceIncludesExist(MavenProject project, BuildProperties buildProperties, boolean strict)", "testcase": false, "constructor": false, "invocations": ["checkIncludesExist", "getSourceIncludes"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}