{"test_class": {"identifier": "DerivativeGaugeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gauge<String> gauge1 = () -> \"woo\";", "modifier": "private final", "type": "Gauge<String>", "declarator": "gauge1 = () -> \"woo\"", "var_name": "gauge1"}, {"original_string": "private final Gauge<Integer> gauge2 = new DerivativeGauge<String, Integer>(gauge1) {\n        @Override\n        protected Integer transform(String value) {\n            return value.length();\n        }\n    };", "modifier": "private final", "type": "Gauge<Integer>", "declarator": "gauge2 = new DerivativeGauge<String, Integer>(gauge1) {\n        @Override\n        protected Integer transform(String value) {\n            return value.length();\n        }\n    }", "var_name": "gauge2"}], "file": "metrics-core/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java"}, "test_case": {"identifier": "returnsATransformedValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void returnsATransformedValue() {\n        assertThat(gauge2.getValue())\n                .isEqualTo(3);\n    }", "signature": "void returnsATransformedValue()", "full_signature": "@Test public void returnsATransformedValue()", "class_method_signature": "DerivativeGaugeTest.returnsATransformedValue()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "DerivativeGauge", "superclass": "", "interfaces": "implements Gauge<T>", "fields": [{"original_string": "private final Gauge<F> base;", "modifier": "private final", "type": "Gauge<F>", "declarator": "base", "var_name": "base"}], "methods": [{"identifier": "DerivativeGauge", "parameters": "(Gauge<F> base)", "modifiers": "protected", "return": "", "signature": " DerivativeGauge(Gauge<F> base)", "full_signature": "protected  DerivativeGauge(Gauge<F> base)", "class_method_signature": "DerivativeGauge.DerivativeGauge(Gauge<F> base)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T getValue()", "full_signature": "@Override public T getValue()", "class_method_signature": "DerivativeGauge.getValue()", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(F value)", "modifiers": "protected abstract", "return": "T", "signature": "T transform(F value)", "full_signature": "protected abstract T transform(F value)", "class_method_signature": "DerivativeGauge.transform(F value)", "testcase": false, "constructor": false}], "file": "metrics-core/src/main/java/com/codahale/metrics/DerivativeGauge.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public T getValue() {\n        return transform(base.getValue());\n    }", "signature": "T getValue()", "full_signature": "@Override public T getValue()", "class_method_signature": "DerivativeGauge.getValue()", "testcase": false, "constructor": false, "invocations": ["transform", "getValue"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}