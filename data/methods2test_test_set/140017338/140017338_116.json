{"test_class": {"identifier": "SW360LicenseClientAdapterAsyncImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LICENSE_NAME = \"licenseName\";", "modifier": "private static final", "type": "String", "declarator": "LICENSE_NAME = \"licenseName\"", "var_name": "LICENSE_NAME"}, {"original_string": "private SW360LicenseClientAdapterAsync licenseClientAdapter;", "modifier": "private", "type": "SW360LicenseClientAdapterAsync", "declarator": "licenseClientAdapter", "var_name": "licenseClientAdapter"}, {"original_string": "private SW360LicenseClient licenseClient;", "modifier": "private", "type": "SW360LicenseClient", "declarator": "licenseClient", "var_name": "licenseClient"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360LicenseClientAdapterAsyncImplTest.java"}, "test_case": {"identifier": "testGetLicenses", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLicenses() {\n        List<SW360SparseLicense> licenses = Arrays.asList(new SW360SparseLicense().setShortName(\"l1\"),\n                new SW360SparseLicense().setShortName(\"l2\"));\n        when(licenseClient.getLicenses())\n                .thenReturn(CompletableFuture.completedFuture(licenses));\n\n        List<SW360SparseLicense> result = block(licenseClientAdapter.getLicenses());\n        assertThat(result).isEqualTo(licenses);\n    }", "signature": "void testGetLicenses()", "full_signature": "@Test public void testGetLicenses()", "class_method_signature": "SW360LicenseClientAdapterAsyncImplTest.testGetLicenses()", "testcase": true, "constructor": false, "invocations": ["asList", "setShortName", "setShortName", "thenReturn", "when", "getLicenses", "completedFuture", "block", "getLicenses", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "SW360LicenseClientAdapterAsyncImpl", "superclass": "", "interfaces": "implements SW360LicenseClientAdapterAsync", "fields": [{"original_string": "private final SW360LicenseClient licenseClient;", "modifier": "private final", "type": "SW360LicenseClient", "declarator": "licenseClient", "var_name": "licenseClient"}], "methods": [{"identifier": "SW360LicenseClientAdapterAsyncImpl", "parameters": "(SW360LicenseClient client)", "modifiers": "public", "return": "", "signature": " SW360LicenseClientAdapterAsyncImpl(SW360LicenseClient client)", "full_signature": "public  SW360LicenseClientAdapterAsyncImpl(SW360LicenseClient client)", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.SW360LicenseClientAdapterAsyncImpl(SW360LicenseClient client)", "testcase": false, "constructor": true}, {"identifier": "getLicenseClient", "parameters": "()", "modifiers": "@Override public", "return": "SW360LicenseClient", "signature": "SW360LicenseClient getLicenseClient()", "full_signature": "@Override public SW360LicenseClient getLicenseClient()", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.getLicenseClient()", "testcase": false, "constructor": false}, {"identifier": "getLicenses", "parameters": "()", "modifiers": "@Override public", "return": "CompletableFuture<List<SW360SparseLicense>>", "signature": "CompletableFuture<List<SW360SparseLicense>> getLicenses()", "full_signature": "@Override public CompletableFuture<List<SW360SparseLicense>> getLicenses()", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.getLicenses()", "testcase": false, "constructor": false}, {"identifier": "getLicenseByName", "parameters": "(String license)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<SW360License>>", "signature": "CompletableFuture<Optional<SW360License>> getLicenseByName(String license)", "full_signature": "@Override public CompletableFuture<Optional<SW360License>> getLicenseByName(String license)", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.getLicenseByName(String license)", "testcase": false, "constructor": false}, {"identifier": "enrichSparseLicense", "parameters": "(SW360SparseLicense sparseLicense)", "modifiers": "@Override public", "return": "CompletableFuture<SW360License>", "signature": "CompletableFuture<SW360License> enrichSparseLicense(SW360SparseLicense sparseLicense)", "full_signature": "@Override public CompletableFuture<SW360License> enrichSparseLicense(SW360SparseLicense sparseLicense)", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.enrichSparseLicense(SW360SparseLicense sparseLicense)", "testcase": false, "constructor": false}, {"identifier": "createLicense", "parameters": "(SW360License license)", "modifiers": "@Override public", "return": "CompletableFuture<SW360License>", "signature": "CompletableFuture<SW360License> createLicense(SW360License license)", "full_signature": "@Override public CompletableFuture<SW360License> createLicense(SW360License license)", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.createLicense(SW360License license)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360LicenseClientAdapterAsyncImpl.java"}, "focal_method": {"identifier": "getLicenses", "parameters": "()", "modifiers": "@Override public", "return": "CompletableFuture<List<SW360SparseLicense>>", "body": "@Override\n    public CompletableFuture<List<SW360SparseLicense>> getLicenses() {\n        return getLicenseClient().getLicenses();\n    }", "signature": "CompletableFuture<List<SW360SparseLicense>> getLicenses()", "full_signature": "@Override public CompletableFuture<List<SW360SparseLicense>> getLicenses()", "class_method_signature": "SW360LicenseClientAdapterAsyncImpl.getLicenses()", "testcase": false, "constructor": false, "invocations": ["getLicenses", "getLicenseClient"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}