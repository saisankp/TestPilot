{"test_class": {"identifier": "TargetPropertyWriterFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "link-move/src/test/java/com/nhl/link/move/writer/TargetPropertyWriterFactoryTest.java"}, "test_case": {"identifier": "testGetOrCreateWriter_Setter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOrCreateWriter_Setter() {\n        TargetPropertyWriter defaultWriter = (t, v) -> {};\n\n        TargetPropertyWriterFactory<C1> factory = new TargetPropertyWriterFactory<>(C1.class, mock(ObjEntity.class));\n        TargetPropertyWriter setter = factory.getOrCreateWriter(\"me\", \"dbDummy\", () -> defaultWriter);\n        assertNotSame(defaultWriter, setter);\n        assertSame(setter, factory.getOrCreateWriter(\"me\", \"dbDummy\", () -> defaultWriter));\n    }", "signature": "void testGetOrCreateWriter_Setter()", "full_signature": "@Test public void testGetOrCreateWriter_Setter()", "class_method_signature": "TargetPropertyWriterFactoryTest.testGetOrCreateWriter_Setter()", "testcase": true, "constructor": false, "invocations": ["mock", "getOrCreateWriter", "assertNotSame", "assertSame", "getOrCreateWriter"]}, "focal_class": {"identifier": "TargetPropertyWriterFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final TargetPropertyWriter NULL_WRITER = (t, v) -> {\n    };", "modifier": "private static final", "type": "TargetPropertyWriter", "declarator": "NULL_WRITER = (t, v) -> {\n    }", "var_name": "NULL_WRITER"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TargetPropertyWriterFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TargetPropertyWriterFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private final ObjEntity entity;", "modifier": "private final", "type": "ObjEntity", "declarator": "entity", "var_name": "entity"}, {"original_string": "private final Map<String, TargetPropertyWriter> writers = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, TargetPropertyWriter>", "declarator": "writers = new ConcurrentHashMap<>()", "var_name": "writers"}], "methods": [{"identifier": "TargetPropertyWriterFactory", "parameters": "(Class<T> type, ObjEntity entity)", "modifiers": "public", "return": "", "signature": " TargetPropertyWriterFactory(Class<T> type, ObjEntity entity)", "full_signature": "public  TargetPropertyWriterFactory(Class<T> type, ObjEntity entity)", "class_method_signature": "TargetPropertyWriterFactory.TargetPropertyWriterFactory(Class<T> type, ObjEntity entity)", "testcase": false, "constructor": true}, {"identifier": "getSetterName", "parameters": "(String propertyName)", "modifiers": "private static", "return": "String", "signature": "String getSetterName(String propertyName)", "full_signature": "private static String getSetterName(String propertyName)", "class_method_signature": "TargetPropertyWriterFactory.getSetterName(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "initPkWriter", "parameters": "(DbAttribute pkAttribute)", "modifiers": "protected", "return": "void", "signature": "void initPkWriter(DbAttribute pkAttribute)", "full_signature": "protected void initPkWriter(DbAttribute pkAttribute)", "class_method_signature": "TargetPropertyWriterFactory.initPkWriter(DbAttribute pkAttribute)", "testcase": false, "constructor": false}, {"identifier": "initWriter", "parameters": "(AttributeProperty property)", "modifiers": "protected", "return": "void", "signature": "void initWriter(AttributeProperty property)", "full_signature": "protected void initWriter(AttributeProperty property)", "class_method_signature": "TargetPropertyWriterFactory.initWriter(AttributeProperty property)", "testcase": false, "constructor": false}, {"identifier": "initWriter", "parameters": "(ToOneProperty property)", "modifiers": "protected", "return": "void", "signature": "void initWriter(ToOneProperty property)", "full_signature": "protected void initWriter(ToOneProperty property)", "class_method_signature": "TargetPropertyWriterFactory.initWriter(ToOneProperty property)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateWriter", "parameters": "(String property)", "modifiers": "public", "return": "TargetPropertyWriter", "signature": "TargetPropertyWriter getOrCreateWriter(String property)", "full_signature": "public TargetPropertyWriter getOrCreateWriter(String property)", "class_method_signature": "TargetPropertyWriterFactory.getOrCreateWriter(String property)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateWriter", "parameters": "(\n            String propertyName,\n            String dbName,\n            Supplier<TargetPropertyWriter> defaultWriterSupplier)", "modifiers": "public", "return": "TargetPropertyWriter", "signature": "TargetPropertyWriter getOrCreateWriter(\n            String propertyName,\n            String dbName,\n            Supplier<TargetPropertyWriter> defaultWriterSupplier)", "full_signature": "public TargetPropertyWriter getOrCreateWriter(\n            String propertyName,\n            String dbName,\n            Supplier<TargetPropertyWriter> defaultWriterSupplier)", "class_method_signature": "TargetPropertyWriterFactory.getOrCreateWriter(\n            String propertyName,\n            String dbName,\n            Supplier<TargetPropertyWriter> defaultWriterSupplier)", "testcase": false, "constructor": false}, {"identifier": "createWriter", "parameters": "(String propertyName, Supplier<TargetPropertyWriter> defaultWriterSupplier)", "modifiers": "private", "return": "TargetPropertyWriter", "signature": "TargetPropertyWriter createWriter(String propertyName, Supplier<TargetPropertyWriter> defaultWriterSupplier)", "full_signature": "private TargetPropertyWriter createWriter(String propertyName, Supplier<TargetPropertyWriter> defaultWriterSupplier)", "class_method_signature": "TargetPropertyWriterFactory.createWriter(String propertyName, Supplier<TargetPropertyWriter> defaultWriterSupplier)", "testcase": false, "constructor": false}, {"identifier": "getSetter", "parameters": "(String propertyName)", "modifiers": "private", "return": "Method", "signature": "Method getSetter(String propertyName)", "full_signature": "private Method getSetter(String propertyName)", "class_method_signature": "TargetPropertyWriterFactory.getSetter(String propertyName)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/writer/TargetPropertyWriterFactory.java"}, "focal_method": {"identifier": "getOrCreateWriter", "parameters": "(String property)", "modifiers": "public", "return": "TargetPropertyWriter", "body": "public TargetPropertyWriter getOrCreateWriter(String property) {\n        return getOrCreateWriter(property, property, () -> NULL_WRITER);\n    }", "signature": "TargetPropertyWriter getOrCreateWriter(String property)", "full_signature": "public TargetPropertyWriter getOrCreateWriter(String property)", "class_method_signature": "TargetPropertyWriterFactory.getOrCreateWriter(String property)", "testcase": false, "constructor": false, "invocations": ["getOrCreateWriter"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}