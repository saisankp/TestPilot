{"test_class": {"identifier": "GeosupportServiceImplTest", "superclass": "extends AbstractMockInvokerTests", "interfaces": "", "fields": [], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/invoker/GeosupportServiceImplTest.java"}, "test_case": {"identifier": "testCallFunctionBL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCallFunctionBL() {\n        Map<String, Object> arguments = new HashMap<String, Object>();\n        arguments.put(BBL_BOROUGH_CODE, 1);\n        arguments.put(BBL_TAX_BLOCK, \"1889\");\n        arguments.put(BBL_TAX_LOT, \"24\");\n        mockFunctionCall(FBL, arguments);\n        Map<String, Object> actualResult = geosupportServiceImpl.callFunctionBL(\"Manhattan\", \"1889\", \"24\");\n        verifyMocks(actualResult);\n    }", "signature": "void testCallFunctionBL()", "full_signature": "@Test public void testCallFunctionBL()", "class_method_signature": "GeosupportServiceImplTest.testCallFunctionBL()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "mockFunctionCall", "callFunctionBL", "verifyMocks"]}, "focal_class": {"identifier": "GeosupportServiceImpl", "superclass": "", "interfaces": "implements GeosupportService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(GeosupportServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(GeosupportServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private AppConfig serviceConfiguration;", "modifier": "private", "type": "AppConfig", "declarator": "serviceConfiguration", "var_name": "serviceConfiguration"}], "methods": [{"identifier": "GeosupportServiceImpl", "parameters": "(AppConfig serviceConfiguration)", "modifiers": "public", "return": "", "signature": " GeosupportServiceImpl(AppConfig serviceConfiguration)", "full_signature": "public  GeosupportServiceImpl(AppConfig serviceConfiguration)", "class_method_signature": "GeosupportServiceImpl.GeosupportServiceImpl(AppConfig serviceConfiguration)", "testcase": false, "constructor": true}, {"identifier": "callFunctionAP", "parameters": "(String houseNumber, String street, String borough, String zip)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionAP(String houseNumber, String street, String borough, String zip)", "full_signature": "@Override public Map<String, Object> callFunctionAP(String houseNumber, String street, String borough, String zip)", "class_method_signature": "GeosupportServiceImpl.callFunctionAP(String houseNumber, String street, String borough, String zip)", "testcase": false, "constructor": false}, {"identifier": "callFunction1B", "parameters": "(final String houseNumber, final String street, final String borough,\n            final String zip)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunction1B(final String houseNumber, final String street, final String borough,\n            final String zip)", "full_signature": "@Override public Map<String, Object> callFunction1B(final String houseNumber, final String street, final String borough,\n            final String zip)", "class_method_signature": "GeosupportServiceImpl.callFunction1B(final String houseNumber, final String street, final String borough,\n            final String zip)", "testcase": false, "constructor": false}, {"identifier": "callFunction2", "parameters": "(final String crossStreetOne, final String boroughCrossStreetOne,\n            final String crossStreetTwo, final String boroughCrossStreetTwo, final String compassDirection)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunction2(final String crossStreetOne, final String boroughCrossStreetOne,\n            final String crossStreetTwo, final String boroughCrossStreetTwo, final String compassDirection)", "full_signature": "@Override public Map<String, Object> callFunction2(final String crossStreetOne, final String boroughCrossStreetOne,\n            final String crossStreetTwo, final String boroughCrossStreetTwo, final String compassDirection)", "class_method_signature": "GeosupportServiceImpl.callFunction2(final String crossStreetOne, final String boroughCrossStreetOne,\n            final String crossStreetTwo, final String boroughCrossStreetTwo, final String compassDirection)", "testcase": false, "constructor": false}, {"identifier": "callFunction3", "parameters": "(final String onStreet, final String boroughOnStreet,\n            final String crossStreetOne, final String boroughCrossStreetOne, final String crossStreetTwo,\n            final String boroughCrossStreetTwo, final String compassDirection)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunction3(final String onStreet, final String boroughOnStreet,\n            final String crossStreetOne, final String boroughCrossStreetOne, final String crossStreetTwo,\n            final String boroughCrossStreetTwo, final String compassDirection)", "full_signature": "@Override public Map<String, Object> callFunction3(final String onStreet, final String boroughOnStreet,\n            final String crossStreetOne, final String boroughCrossStreetOne, final String crossStreetTwo,\n            final String boroughCrossStreetTwo, final String compassDirection)", "class_method_signature": "GeosupportServiceImpl.callFunction3(final String onStreet, final String boroughOnStreet,\n            final String crossStreetOne, final String boroughCrossStreetOne, final String crossStreetTwo,\n            final String boroughCrossStreetTwo, final String compassDirection)", "testcase": false, "constructor": false}, {"identifier": "callFunctionBL", "parameters": "(final String borough, final String block, final String lot)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionBL(final String borough, final String block, final String lot)", "full_signature": "@Override public Map<String, Object> callFunctionBL(final String borough, final String block, final String lot)", "class_method_signature": "GeosupportServiceImpl.callFunctionBL(final String borough, final String block, final String lot)", "testcase": false, "constructor": false}, {"identifier": "callFunctionBN", "parameters": "(final String bin)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionBN(final String bin)", "full_signature": "@Override public Map<String, Object> callFunctionBN(final String bin)", "class_method_signature": "GeosupportServiceImpl.callFunctionBN(final String bin)", "testcase": false, "constructor": false}, {"identifier": "callFunctionHR", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionHR()", "full_signature": "@Override public Map<String, Object> callFunctionHR()", "class_method_signature": "GeosupportServiceImpl.callFunctionHR()", "testcase": false, "constructor": false}, {"identifier": "callGeosupport", "parameters": "(final Map<String, Object> clientParams)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callGeosupport(final Map<String, Object> clientParams)", "full_signature": "@Override public Map<String, Object> callGeosupport(final Map<String, Object> clientParams)", "class_method_signature": "GeosupportServiceImpl.callGeosupport(final Map<String, Object> clientParams)", "testcase": false, "constructor": false}, {"identifier": "callFunctionN", "parameters": "(String streetName, Integer length, String format)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionN(String streetName, Integer length, String format)", "full_signature": "@Override public Map<String, Object> callFunctionN(String streetName, Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.callFunctionN(String streetName, Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "getStreetCodeOrNull", "parameters": "(String code)", "modifiers": "private", "return": "StreetCode", "signature": "StreetCode getStreetCodeOrNull(String code)", "full_signature": "private StreetCode getStreetCodeOrNull(String code)", "class_method_signature": "GeosupportServiceImpl.getStreetCodeOrNull(String code)", "testcase": false, "constructor": false}, {"identifier": "callStreetNameFunction", "parameters": "(String codeOne, String codeTwo, String codeThree, Integer length, String format)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callStreetNameFunction(String codeOne, String codeTwo, String codeThree, Integer length, String format)", "full_signature": "@Override public Map<String, Object> callStreetNameFunction(String codeOne, String codeTwo, String codeThree, Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.callStreetNameFunction(String codeOne, String codeTwo, String codeThree, Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "callFunctionD", "parameters": "(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionD(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "full_signature": "@Override public Map<String, Object> callFunctionD(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.callFunctionD(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "callFunctionDG", "parameters": "(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionDG(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "full_signature": "@Override public Map<String, Object> callFunctionDG(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.callFunctionDG(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "callFunctionDN", "parameters": "(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> callFunctionDN(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "full_signature": "@Override public Map<String, Object> callFunctionDN(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.callFunctionDN(String streetCodeOne, String streetCodeTwo, String streetCodeThree,\n            Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "populateStreetNameCall", "parameters": "(Function function, StreetCode streetCodeOne, StreetCode streetCodeTwo,\n            StreetCode streetCodeThree, Integer length, String format)", "modifiers": "private", "return": "Call", "signature": "Call populateStreetNameCall(Function function, StreetCode streetCodeOne, StreetCode streetCodeTwo,\n            StreetCode streetCodeThree, Integer length, String format)", "full_signature": "private Call populateStreetNameCall(Function function, StreetCode streetCodeOne, StreetCode streetCodeTwo,\n            StreetCode streetCodeThree, Integer length, String format)", "class_method_signature": "GeosupportServiceImpl.populateStreetNameCall(Function function, StreetCode streetCodeOne, StreetCode streetCodeTwo,\n            StreetCode streetCodeThree, Integer length, String format)", "testcase": false, "constructor": false}, {"identifier": "isValidNormalizationFormat", "parameters": "(String format)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidNormalizationFormat(String format)", "full_signature": "private boolean isValidNormalizationFormat(String format)", "class_method_signature": "GeosupportServiceImpl.isValidNormalizationFormat(String format)", "testcase": false, "constructor": false}, {"identifier": "getDocumentation", "parameters": "()", "modifiers": "public", "return": "Documentation", "signature": "Documentation getDocumentation()", "full_signature": "public Documentation getDocumentation()", "class_method_signature": "GeosupportServiceImpl.getDocumentation()", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "()", "modifiers": "@Override public", "return": "Version", "signature": "Version version()", "full_signature": "@Override public Version version()", "class_method_signature": "GeosupportServiceImpl.version()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/invoker/GeosupportServiceImpl.java"}, "focal_method": {"identifier": "callFunctionBL", "parameters": "(final String borough, final String block, final String lot)", "modifiers": "@Override public", "return": "Map<String, Object>", "body": "@Override\n    public Map<String, Object> callFunctionBL(final String borough, final String block, final String lot) {\n        return new Call(serviceConfiguration.functionBL(), serviceConfiguration.latLongEnhancer()) {\n            @Override\n            public Map<String, Object> userArguments() {\n                Map<String, Object> params = newMap();\n                params.put(BBL_BOROUGH_CODE, Boroughs.parseInt(borough));\n                params.put(BBL_TAX_BLOCK, block);\n                params.put(BBL_TAX_LOT, lot);\n                return params;\n            }\n        }.execute();\n    }", "signature": "Map<String, Object> callFunctionBL(final String borough, final String block, final String lot)", "full_signature": "@Override public Map<String, Object> callFunctionBL(final String borough, final String block, final String lot)", "class_method_signature": "GeosupportServiceImpl.callFunctionBL(final String borough, final String block, final String lot)", "testcase": false, "constructor": false, "invocations": ["execute", "functionBL", "latLongEnhancer", "newMap", "put", "parseInt", "put", "put"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}