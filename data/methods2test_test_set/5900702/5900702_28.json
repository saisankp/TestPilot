{"test_class": {"identifier": "ListFieldProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n\tprivate Resource resource;", "modifier": "@Mock\n\tprivate", "type": "Resource", "declarator": "resource", "var_name": "resource"}, {"original_string": "@Mock\n\tprivate ValueMap valueMap;", "modifier": "@Mock\n\tprivate", "type": "ValueMap", "declarator": "valueMap", "var_name": "valueMap"}, {"original_string": "String propertyName;", "modifier": "", "type": "String", "declarator": "propertyName", "var_name": "propertyName"}, {"original_string": "ListFieldProcessor processor;", "modifier": "", "type": "ListFieldProcessor", "declarator": "processor", "var_name": "processor"}], "file": "slice-mapper/src/test/java/com/cognifide/slice/mapper/impl/processor/ListFieldProcessorTest.java"}, "test_case": {"identifier": "testMapResourceToField_nullValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testMapResourceToField_nullValue() {\n\t\tString resultProperty = \"result\";\n\t\tMockito.when(valueMap.get(propertyName)).thenReturn(resultProperty);\n\t\t\n\t\tObject result = processor.mapResourceToField(resource, null, null, propertyName);\n\t\tAssert.assertNull(result);\n\t\t\n\t\tMockito.when(valueMap.get(propertyName)).thenReturn(null);\n\t\tresult = processor.mapResourceToField(resource, valueMap, null, propertyName);\n\t\tAssert.assertNull(result);\n\t}", "signature": "void testMapResourceToField_nullValue()", "full_signature": "@Test public void testMapResourceToField_nullValue()", "class_method_signature": "ListFieldProcessorTest.testMapResourceToField_nullValue()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "get", "mapResourceToField", "assertNull", "thenReturn", "when", "get", "mapResourceToField", "assertNull"]}, "focal_class": {"identifier": "ListFieldProcessor", "superclass": "", "interfaces": "implements FieldProcessor", "fields": [], "methods": [{"identifier": "accepts", "parameters": "(Resource resource, Field field)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Resource resource, Field field)", "full_signature": "@Override public boolean accepts(Resource resource, Field field)", "class_method_signature": "ListFieldProcessor.accepts(Resource resource, Field field)", "testcase": false, "constructor": false}, {"identifier": "mapResourceToField", "parameters": "(Resource resource, ValueMap valueMap, Field field, String propertyName)", "modifiers": "@Override public", "return": "Object", "signature": "Object mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "full_signature": "@Override public Object mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "class_method_signature": "ListFieldProcessor.mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "testcase": false, "constructor": false}], "file": "slice-mapper/src/main/java/com/cognifide/slice/mapper/impl/processor/ListFieldProcessor.java"}, "focal_method": {"identifier": "mapResourceToField", "parameters": "(Resource resource, ValueMap valueMap, Field field, String propertyName)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n\tpublic Object mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName) {\n\t\tif (valueMap == null) {\n\t\t\treturn null;\n\t\t}\n\t\tObject value = valueMap.get(propertyName);\n\t\tif (value == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (value.getClass().isArray()) {\n\t\t\treturn Arrays.asList((Object[]) value);\n\t\t} else {\n\t\t\treturn Arrays.asList(value);\n\t\t}\n\t}", "signature": "Object mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "full_signature": "@Override public Object mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "class_method_signature": "ListFieldProcessor.mapResourceToField(Resource resource, ValueMap valueMap, Field field, String propertyName)", "testcase": false, "constructor": false, "invocations": ["get", "isArray", "getClass", "asList", "asList"]}, "repository": {"repo_id": 5900702, "url": "https://github.com/Cognifide/Slice", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 61, "size": 11367, "license": "licensed"}}