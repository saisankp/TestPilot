{"test_class": {"identifier": "PseudoOtpTest", "superclass": "", "interfaces": "", "fields": [], "file": "tools/ot/src/test/java/dk/alexandra/fresco/tools/ot/otextension/PseudoOtpTest.java"}, "test_case": {"identifier": "testDecryptNullCipher", "parameters": "()", "modifiers": "@Test (expected = NullPointerException.class) public", "return": "void", "body": "@Test (expected = NullPointerException.class)\n  public void testDecryptNullCipher() {\n    PseudoOtp.decrypt(null, new byte[] { 0x00 });\n  }", "signature": "void testDecryptNullCipher()", "full_signature": "@Test (expected = NullPointerException.class) public void testDecryptNullCipher()", "class_method_signature": "PseudoOtpTest.testDecryptNullCipher()", "testcase": true, "constructor": false, "invocations": ["decrypt"]}, "focal_class": {"identifier": "PseudoOtp", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PseudoOtp", "parameters": "()", "modifiers": "private", "return": "", "signature": " PseudoOtp()", "full_signature": "private  PseudoOtp()", "class_method_signature": "PseudoOtp.PseudoOtp()", "testcase": false, "constructor": true}, {"identifier": "encrypt", "parameters": "(byte[] message, byte[] keyCandidate)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encrypt(byte[] message, byte[] keyCandidate)", "full_signature": "public static byte[] encrypt(byte[] message, byte[] keyCandidate)", "class_method_signature": "PseudoOtp.encrypt(byte[] message, byte[] keyCandidate)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(byte[] message, byte[] keyCandidate, int messageLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] encrypt(byte[] message, byte[] keyCandidate, int messageLength)", "full_signature": "public static byte[] encrypt(byte[] message, byte[] keyCandidate, int messageLength)", "class_method_signature": "PseudoOtp.encrypt(byte[] message, byte[] keyCandidate, int messageLength)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(byte[] cipherText, byte[] keyCandidate)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decrypt(byte[] cipherText, byte[] keyCandidate)", "full_signature": "public static byte[] decrypt(byte[] cipherText, byte[] keyCandidate)", "class_method_signature": "PseudoOtp.decrypt(byte[] cipherText, byte[] keyCandidate)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(byte[] cipherText, byte[] keyCandidate, int messageLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decrypt(byte[] cipherText, byte[] keyCandidate, int messageLength)", "full_signature": "public static byte[] decrypt(byte[] cipherText, byte[] keyCandidate, int messageLength)", "class_method_signature": "PseudoOtp.decrypt(byte[] cipherText, byte[] keyCandidate, int messageLength)", "testcase": false, "constructor": false}], "file": "tools/ot/src/main/java/dk/alexandra/fresco/tools/ot/otextension/PseudoOtp.java"}, "focal_method": {"identifier": "decrypt", "parameters": "(byte[] cipherText, byte[] keyCandidate)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] decrypt(byte[] cipherText, byte[] keyCandidate) {\n    return decrypt(cipherText, keyCandidate, cipherText.length);\n  }", "signature": "byte[] decrypt(byte[] cipherText, byte[] keyCandidate)", "full_signature": "public static byte[] decrypt(byte[] cipherText, byte[] keyCandidate)", "class_method_signature": "PseudoOtp.decrypt(byte[] cipherText, byte[] keyCandidate)", "testcase": false, "constructor": false, "invocations": ["decrypt"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}