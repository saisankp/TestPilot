{"test_class": {"identifier": "MergeRequestRestTest", "superclass": "extends MobiRestTestNg", "interfaces": "", "fields": [{"original_string": "private MergeRequestRest rest;", "modifier": "private", "type": "MergeRequestRest", "declarator": "rest", "var_name": "rest"}, {"original_string": "private MergeRequestFactory mergeRequestFactory;", "modifier": "private", "type": "MergeRequestFactory", "declarator": "mergeRequestFactory", "var_name": "mergeRequestFactory"}, {"original_string": "private CommentFactory commentFactory;", "modifier": "private", "type": "CommentFactory", "declarator": "commentFactory", "var_name": "commentFactory"}, {"original_string": "private UserFactory userFactory;", "modifier": "private", "type": "UserFactory", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private ValueConverterRegistry vcr;", "modifier": "private", "type": "ValueConverterRegistry", "declarator": "vcr", "var_name": "vcr"}, {"original_string": "private MergeRequest request1;", "modifier": "private", "type": "MergeRequest", "declarator": "request1", "var_name": "request1"}, {"original_string": "private MergeRequest request2;", "modifier": "private", "type": "MergeRequest", "declarator": "request2", "var_name": "request2"}, {"original_string": "private Comment comment1;", "modifier": "private", "type": "Comment", "declarator": "comment1", "var_name": "comment1"}, {"original_string": "private Comment comment2;", "modifier": "private", "type": "Comment", "declarator": "comment2", "var_name": "comment2"}, {"original_string": "private Comment comment3;", "modifier": "private", "type": "Comment", "declarator": "comment3", "var_name": "comment3"}, {"original_string": "private List<List<Comment>> commentChains;", "modifier": "private", "type": "List<List<Comment>>", "declarator": "commentChains", "var_name": "commentChains"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private final String CATALOG_IRI = \"http://test.org/catalog\";", "modifier": "private final", "type": "String", "declarator": "CATALOG_IRI = \"http://test.org/catalog\"", "var_name": "CATALOG_IRI"}, {"original_string": "private final String RECORD_ID = \"http://mobi.com/records#record\";", "modifier": "private final", "type": "String", "declarator": "RECORD_ID = \"http://mobi.com/records#record\"", "var_name": "RECORD_ID"}, {"original_string": "private final String BRANCH_ID = \"http://mobi.com/branches#branch\";", "modifier": "private final", "type": "String", "declarator": "BRANCH_ID = \"http://mobi.com/branches#branch\"", "var_name": "BRANCH_ID"}, {"original_string": "private final String doesNotExist = \"urn:doesNotExist\";", "modifier": "private final", "type": "String", "declarator": "doesNotExist = \"urn:doesNotExist\"", "var_name": "doesNotExist"}, {"original_string": "private final String invalidIRIString = \"invalidIRI\";", "modifier": "private final", "type": "String", "declarator": "invalidIRIString = \"invalidIRI\"", "var_name": "invalidIRIString"}, {"original_string": "private final String commentText = \"This is a comment\";", "modifier": "private final", "type": "String", "declarator": "commentText = \"This is a comment\"", "var_name": "commentText"}, {"original_string": "private final String updateCommentText = \"updated comment\";", "modifier": "private final", "type": "String", "declarator": "updateCommentText = \"updated comment\"", "var_name": "updateCommentText"}, {"original_string": "private final String largeComment = StringUtils.repeat(\"*\", 2000000);", "modifier": "private final", "type": "String", "declarator": "largeComment = StringUtils.repeat(\"*\", 2000000)", "var_name": "largeComment"}, {"original_string": "@Mock\n    private MergeRequestManager requestManager;", "modifier": "@Mock\n    private", "type": "MergeRequestManager", "declarator": "requestManager", "var_name": "requestManager"}, {"original_string": "@Mock\n    private EngineManager engineManager;", "modifier": "@Mock\n    private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "@Mock\n    private SesameTransformer transformer;", "modifier": "@Mock\n    private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Mock\n    private CatalogConfigProvider configProvider;", "modifier": "@Mock\n    private", "type": "CatalogConfigProvider", "declarator": "configProvider", "var_name": "configProvider"}], "file": "com.mobi.catalog.rest/src/test/java/com/mobi/catalog/rest/MergeRequestRestTest.java"}, "test_case": {"identifier": "createReplyCommentTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createReplyCommentTest() {\n        Response response = target().path(\"merge-requests/\" + encode(request1.getResource().stringValue()) + \"/comments\")\n                .queryParam(\"commentId\", comment1.getResource().stringValue())\n                .request().post(Entity.text(commentText));\n        assertEquals(response.getStatus(), 201);\n        verify(engineManager, atLeastOnce()).retrieveUser(UsernameTestFilter.USERNAME);\n        verify(requestManager).createComment(eq(request1.getResource()), any(User.class), anyString(), eq(comment1.getResource()));\n        assertEquals(comment2.getResource().stringValue(), response.readEntity(String.class));\n    }", "signature": "void createReplyCommentTest()", "full_signature": "@Test public void createReplyCommentTest()", "class_method_signature": "MergeRequestRestTest.createReplyCommentTest()", "testcase": true, "constructor": false, "invocations": ["post", "request", "queryParam", "path", "target", "encode", "stringValue", "getResource", "stringValue", "getResource", "text", "assertEquals", "getStatus", "retrieveUser", "verify", "atLeastOnce", "createComment", "verify", "eq", "getResource", "any", "anyString", "eq", "getResource", "assertEquals", "stringValue", "getResource", "readEntity"]}, "focal_class": {"identifier": "MergeRequestRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MergeRequestManager manager;", "modifier": "private", "type": "MergeRequestManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "private CatalogConfigProvider configProvider;", "modifier": "private", "type": "CatalogConfigProvider", "declarator": "configProvider", "var_name": "configProvider"}, {"original_string": "private SesameTransformer transformer;", "modifier": "private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private EngineManager engineManager;", "modifier": "private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "private MergeRequestFactory mergeRequestFactory;", "modifier": "private", "type": "MergeRequestFactory", "declarator": "mergeRequestFactory", "var_name": "mergeRequestFactory"}, {"original_string": "private CommentFactory commentFactory;", "modifier": "private", "type": "CommentFactory", "declarator": "commentFactory", "var_name": "commentFactory"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}], "methods": [{"identifier": "setManager", "parameters": "(MergeRequestManager manager)", "modifiers": "@Reference", "return": "void", "signature": "void setManager(MergeRequestManager manager)", "full_signature": "@Reference void setManager(MergeRequestManager manager)", "class_method_signature": "MergeRequestRest.setManager(MergeRequestManager manager)", "testcase": false, "constructor": false}, {"identifier": "setConfigProvider", "parameters": "(CatalogConfigProvider configProvider)", "modifiers": "@Reference", "return": "void", "signature": "void setConfigProvider(CatalogConfigProvider configProvider)", "full_signature": "@Reference void setConfigProvider(CatalogConfigProvider configProvider)", "class_method_signature": "MergeRequestRest.setConfigProvider(CatalogConfigProvider configProvider)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(SesameTransformer transformer)", "modifiers": "@Reference", "return": "void", "signature": "void setTransformer(SesameTransformer transformer)", "full_signature": "@Reference void setTransformer(SesameTransformer transformer)", "class_method_signature": "MergeRequestRest.setTransformer(SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "setEngineManager", "parameters": "(EngineManager engineManager)", "modifiers": "@Reference", "return": "void", "signature": "void setEngineManager(EngineManager engineManager)", "full_signature": "@Reference void setEngineManager(EngineManager engineManager)", "class_method_signature": "MergeRequestRest.setEngineManager(EngineManager engineManager)", "testcase": false, "constructor": false}, {"identifier": "setMergeRequestFactory", "parameters": "(MergeRequestFactory mergeRequestFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setMergeRequestFactory(MergeRequestFactory mergeRequestFactory)", "full_signature": "@Reference void setMergeRequestFactory(MergeRequestFactory mergeRequestFactory)", "class_method_signature": "MergeRequestRest.setMergeRequestFactory(MergeRequestFactory mergeRequestFactory)", "testcase": false, "constructor": false}, {"identifier": "setCommentFactory", "parameters": "(CommentFactory commentFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setCommentFactory(CommentFactory commentFactory)", "full_signature": "@Reference void setCommentFactory(CommentFactory commentFactory)", "class_method_signature": "MergeRequestRest.setCommentFactory(CommentFactory commentFactory)", "testcase": false, "constructor": false}, {"identifier": "setVf", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setVf(ValueFactory vf)", "full_signature": "@Reference void setVf(ValueFactory vf)", "class_method_signature": "MergeRequestRest.setVf(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "getMergeRequests", "parameters": "(@QueryParam(\"sort\") String sort,\n                              @DefaultValue(\"false\") @QueryParam(\"ascending\") boolean asc,\n                              @DefaultValue(\"false\") @QueryParam(\"accepted\") boolean accepted)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all MergeRequests in the application\") public", "return": "Response", "signature": "Response getMergeRequests(@QueryParam(\"sort\") String sort,\n                              @DefaultValue(\"false\") @QueryParam(\"ascending\") boolean asc,\n                              @DefaultValue(\"false\") @QueryParam(\"accepted\") boolean accepted)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all MergeRequests in the application\") public Response getMergeRequests(@QueryParam(\"sort\") String sort,\n                              @DefaultValue(\"false\") @QueryParam(\"ascending\") boolean asc,\n                              @DefaultValue(\"false\") @QueryParam(\"accepted\") boolean accepted)", "class_method_signature": "MergeRequestRest.getMergeRequests(@QueryParam(\"sort\") String sort,\n                              @DefaultValue(\"false\") @QueryParam(\"ascending\") boolean asc,\n                              @DefaultValue(\"false\") @QueryParam(\"accepted\") boolean accepted)", "testcase": false, "constructor": false}, {"identifier": "createMergeRequests", "parameters": "(@Context ContainerRequestContext context,\n                                 @FormDataParam(\"title\") String title,\n                                 @FormDataParam(\"description\") String description,\n                                 @FormDataParam(\"recordId\") String recordId,\n                                 @FormDataParam(\"sourceBranchId\") String sourceBranchId,\n                                 @FormDataParam(\"targetBranchId\") String targetBranchId,\n                                 @FormDataParam(\"assignees\") List<FormDataBodyPart> assignees,\n                                 @FormDataParam(\"removeSource\") @DefaultValue(\"false\") boolean removeSource)", "modifiers": "@POST @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new MergeRequest in the application with the provided information\") public", "return": "Response", "signature": "Response createMergeRequests(@Context ContainerRequestContext context,\n                                 @FormDataParam(\"title\") String title,\n                                 @FormDataParam(\"description\") String description,\n                                 @FormDataParam(\"recordId\") String recordId,\n                                 @FormDataParam(\"sourceBranchId\") String sourceBranchId,\n                                 @FormDataParam(\"targetBranchId\") String targetBranchId,\n                                 @FormDataParam(\"assignees\") List<FormDataBodyPart> assignees,\n                                 @FormDataParam(\"removeSource\") @DefaultValue(\"false\") boolean removeSource)", "full_signature": "@POST @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new MergeRequest in the application with the provided information\") public Response createMergeRequests(@Context ContainerRequestContext context,\n                                 @FormDataParam(\"title\") String title,\n                                 @FormDataParam(\"description\") String description,\n                                 @FormDataParam(\"recordId\") String recordId,\n                                 @FormDataParam(\"sourceBranchId\") String sourceBranchId,\n                                 @FormDataParam(\"targetBranchId\") String targetBranchId,\n                                 @FormDataParam(\"assignees\") List<FormDataBodyPart> assignees,\n                                 @FormDataParam(\"removeSource\") @DefaultValue(\"false\") boolean removeSource)", "class_method_signature": "MergeRequestRest.createMergeRequests(@Context ContainerRequestContext context,\n                                 @FormDataParam(\"title\") String title,\n                                 @FormDataParam(\"description\") String description,\n                                 @FormDataParam(\"recordId\") String recordId,\n                                 @FormDataParam(\"sourceBranchId\") String sourceBranchId,\n                                 @FormDataParam(\"targetBranchId\") String targetBranchId,\n                                 @FormDataParam(\"assignees\") List<FormDataBodyPart> assignees,\n                                 @FormDataParam(\"removeSource\") @DefaultValue(\"false\") boolean removeSource)", "testcase": false, "constructor": false}, {"identifier": "getMergeRequest", "parameters": "(@PathParam(\"requestId\") String requestId)", "modifiers": "@GET @Path(\"{requestId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves a MergeRequest from the application by its ID\") public", "return": "Response", "signature": "Response getMergeRequest(@PathParam(\"requestId\") String requestId)", "full_signature": "@GET @Path(\"{requestId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves a MergeRequest from the application by its ID\") public Response getMergeRequest(@PathParam(\"requestId\") String requestId)", "class_method_signature": "MergeRequestRest.getMergeRequest(@PathParam(\"requestId\") String requestId)", "testcase": false, "constructor": false}, {"identifier": "updateMergeRequest", "parameters": "(@PathParam(\"requestId\") String requestId, String newMergeRequest)", "modifiers": "@PUT @Path(\"{requestId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a MergeRequest by its ID using the provided JSON-LD\") public", "return": "Response", "signature": "Response updateMergeRequest(@PathParam(\"requestId\") String requestId, String newMergeRequest)", "full_signature": "@PUT @Path(\"{requestId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a MergeRequest by its ID using the provided JSON-LD\") public Response updateMergeRequest(@PathParam(\"requestId\") String requestId, String newMergeRequest)", "class_method_signature": "MergeRequestRest.updateMergeRequest(@PathParam(\"requestId\") String requestId, String newMergeRequest)", "testcase": false, "constructor": false}, {"identifier": "acceptMergeRequest", "parameters": "(@Context ContainerRequestContext context,\n                                @PathParam(\"requestId\") String requestId)", "modifiers": "@POST @Path(\"{requestId}\") @RolesAllowed(\"user\") @ApiOperation(\"Accepts a MergeRequest by performing the merge and changing the type\") @ActionId(Modify.TYPE) @ResourceId(type = ValueType.PROP_PATH, value = \"<\" + MergeRequest.onRecord_IRI + \">\", start = @Value(type = ValueType.PATH, value = \"requestId\")) @ActionAttributes(@AttributeValue(type = ValueType.PROP_PATH, value = \"<\" + MergeRequest.targetBranch_IRI + \">\", id = VersionedRDFRecord.branch_IRI, start = @Value(type = ValueType.PATH, value = \"requestId\"))) public", "return": "Response", "signature": "Response acceptMergeRequest(@Context ContainerRequestContext context,\n                                @PathParam(\"requestId\") String requestId)", "full_signature": "@POST @Path(\"{requestId}\") @RolesAllowed(\"user\") @ApiOperation(\"Accepts a MergeRequest by performing the merge and changing the type\") @ActionId(Modify.TYPE) @ResourceId(type = ValueType.PROP_PATH, value = \"<\" + MergeRequest.onRecord_IRI + \">\", start = @Value(type = ValueType.PATH, value = \"requestId\")) @ActionAttributes(@AttributeValue(type = ValueType.PROP_PATH, value = \"<\" + MergeRequest.targetBranch_IRI + \">\", id = VersionedRDFRecord.branch_IRI, start = @Value(type = ValueType.PATH, value = \"requestId\"))) public Response acceptMergeRequest(@Context ContainerRequestContext context,\n                                @PathParam(\"requestId\") String requestId)", "class_method_signature": "MergeRequestRest.acceptMergeRequest(@Context ContainerRequestContext context,\n                                @PathParam(\"requestId\") String requestId)", "testcase": false, "constructor": false}, {"identifier": "deleteMergeRequest", "parameters": "(@PathParam(\"requestId\") String requestId)", "modifiers": "@DELETE @Path(\"{requestId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes a MergeRequest that has the provided requestId\") public", "return": "Response", "signature": "Response deleteMergeRequest(@PathParam(\"requestId\") String requestId)", "full_signature": "@DELETE @Path(\"{requestId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes a MergeRequest that has the provided requestId\") public Response deleteMergeRequest(@PathParam(\"requestId\") String requestId)", "class_method_signature": "MergeRequestRest.deleteMergeRequest(@PathParam(\"requestId\") String requestId)", "testcase": false, "constructor": false}, {"identifier": "getComments", "parameters": "(@PathParam(\"requestId\") String requestId)", "modifiers": "@GET @Path(\"{requestId}/comments\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all Comment threads on a MergeRequest\") public", "return": "Response", "signature": "Response getComments(@PathParam(\"requestId\") String requestId)", "full_signature": "@GET @Path(\"{requestId}/comments\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all Comment threads on a MergeRequest\") public Response getComments(@PathParam(\"requestId\") String requestId)", "class_method_signature": "MergeRequestRest.getComments(@PathParam(\"requestId\") String requestId)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "(@PathParam(\"requestId\") String requestId, @PathParam(\"commentId\") String commentId)", "modifiers": "@GET @Path(\"{requestId}/comments/{commentId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves a Comment from the application by its ID\") public", "return": "Response", "signature": "Response getComment(@PathParam(\"requestId\") String requestId, @PathParam(\"commentId\") String commentId)", "full_signature": "@GET @Path(\"{requestId}/comments/{commentId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves a Comment from the application by its ID\") public Response getComment(@PathParam(\"requestId\") String requestId, @PathParam(\"commentId\") String commentId)", "class_method_signature": "MergeRequestRest.getComment(@PathParam(\"requestId\") String requestId, @PathParam(\"commentId\") String commentId)", "testcase": false, "constructor": false}, {"identifier": "createComment", "parameters": "(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "modifiers": "@POST @Path(\"{requestId}/comments\") @Consumes(MediaType.TEXT_PLAIN) @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Comment on the MergeRequest in the application with the provided information\") public", "return": "Response", "signature": "Response createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "full_signature": "@POST @Path(\"{requestId}/comments\") @Consumes(MediaType.TEXT_PLAIN) @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Comment on the MergeRequest in the application with the provided information\") public Response createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "class_method_signature": "MergeRequestRest.createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "testcase": false, "constructor": false}, {"identifier": "updateComment", "parameters": "(@PathParam(\"commentId\") String commentId, String newCommentStr)", "modifiers": "@PUT @Path(\"{requestId}/comments/{commentId}\") @Consumes(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Updates a Comment by its ID using the provided String\") public", "return": "Response", "signature": "Response updateComment(@PathParam(\"commentId\") String commentId, String newCommentStr)", "full_signature": "@PUT @Path(\"{requestId}/comments/{commentId}\") @Consumes(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Updates a Comment by its ID using the provided String\") public Response updateComment(@PathParam(\"commentId\") String commentId, String newCommentStr)", "class_method_signature": "MergeRequestRest.updateComment(@PathParam(\"commentId\") String commentId, String newCommentStr)", "testcase": false, "constructor": false}, {"identifier": "deleteComment", "parameters": "(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @PathParam(\"commentId\") String commentId)", "modifiers": "@DELETE @Path(\"{requestId}/comments/{commentId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes a Comment that has the provided commentId\") public", "return": "Response", "signature": "Response deleteComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @PathParam(\"commentId\") String commentId)", "full_signature": "@DELETE @Path(\"{requestId}/comments/{commentId}\") @RolesAllowed(\"user\") @ApiOperation(\"Deletes a Comment that has the provided commentId\") public Response deleteComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @PathParam(\"commentId\") String commentId)", "class_method_signature": "MergeRequestRest.deleteComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @PathParam(\"commentId\") String commentId)", "testcase": false, "constructor": false}, {"identifier": "jsonToMergeRequest", "parameters": "(Resource requestId, String jsonMergeRequest)", "modifiers": "private", "return": "MergeRequest", "signature": "MergeRequest jsonToMergeRequest(Resource requestId, String jsonMergeRequest)", "full_signature": "private MergeRequest jsonToMergeRequest(Resource requestId, String jsonMergeRequest)", "class_method_signature": "MergeRequestRest.jsonToMergeRequest(Resource requestId, String jsonMergeRequest)", "testcase": false, "constructor": false}, {"identifier": "jsonToComment", "parameters": "(Resource commentId, String jsonComment)", "modifiers": "private", "return": "Comment", "signature": "Comment jsonToComment(Resource commentId, String jsonComment)", "full_signature": "private Comment jsonToComment(Resource commentId, String jsonComment)", "class_method_signature": "MergeRequestRest.jsonToComment(Resource commentId, String jsonComment)", "testcase": false, "constructor": false}], "file": "com.mobi.catalog.rest/src/main/java/com/mobi/catalog/rest/MergeRequestRest.java"}, "focal_method": {"identifier": "createComment", "parameters": "(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "modifiers": "@POST @Path(\"{requestId}/comments\") @Consumes(MediaType.TEXT_PLAIN) @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Comment on the MergeRequest in the application with the provided information\") public", "return": "Response", "body": "@POST\n    @Path(\"{requestId}/comments\")\n    @Consumes(MediaType.TEXT_PLAIN)\n    @Produces(MediaType.TEXT_PLAIN)\n    @RolesAllowed(\"user\")\n    @ApiOperation(\"Creates a new Comment on the MergeRequest in the application with the provided information\")\n    public Response createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr) {\n        checkStringParam(commentStr, \"Comment string is required\");\n        User activeUser = getActiveUser(context, engineManager);\n\n        try {\n            Comment comment = null;\n            if (StringUtils.isEmpty(commentId)) {\n                comment = manager.createComment(createIRI(requestId, vf), activeUser, commentStr);\n            } else {\n                comment = manager.createComment(createIRI(requestId, vf), activeUser, commentStr,\n                        createIRI(commentId, vf));\n            }\n            return Response.status(201).entity(comment.getResource().stringValue()).build();\n        } catch (IllegalArgumentException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.BAD_REQUEST);\n        } catch (IllegalStateException | MobiException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n        }\n    }", "signature": "Response createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "full_signature": "@POST @Path(\"{requestId}/comments\") @Consumes(MediaType.TEXT_PLAIN) @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Comment on the MergeRequest in the application with the provided information\") public Response createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "class_method_signature": "MergeRequestRest.createComment(@Context ContainerRequestContext context,\n                           @PathParam(\"requestId\") String requestId,\n                           @QueryParam(\"commentId\") String commentId,\n                           String commentStr)", "testcase": false, "constructor": false, "invocations": ["checkStringParam", "getActiveUser", "isEmpty", "createComment", "createIRI", "createComment", "createIRI", "createIRI", "build", "entity", "status", "stringValue", "getResource", "sendError", "getMessage", "sendError", "getMessage"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}