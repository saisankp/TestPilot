{"test_class": {"identifier": "AxivionParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AxivionParser parser = new AxivionParser(\"testUrl\", \"/root\");", "modifier": "private final", "type": "AxivionParser", "declarator": "parser = new AxivionParser(\"testUrl\", \"/root\")", "var_name": "parser"}, {"original_string": "private final TestDashboard dashboard = new TestDashboard();", "modifier": "private final", "type": "TestDashboard", "declarator": "dashboard = new TestDashboard()", "var_name": "dashboard"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/axivion/AxivionParserTest.java"}, "test_case": {"identifier": "canParseMultipleViolationInRows", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void canParseMultipleViolationInRows() {\n        Report report = new Report();\n        parser.parse(report, AxIssueKind.SV, dashboard.getIssuesFrom(\n                \"/io/jenkins/plugins/analysis/warnings/axivion/multiple-violations.json\"));\n        assertThat(report).hasSize(3);\n    }", "signature": "void canParseMultipleViolationInRows()", "full_signature": "@Test void canParseMultipleViolationInRows()", "class_method_signature": "AxivionParserTest.canParseMultipleViolationInRows()", "testcase": true, "constructor": false, "invocations": ["parse", "getIssuesFrom", "hasSize", "assertThat"]}, "focal_class": {"identifier": "AxivionParser", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1055658369957572701L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1055658369957572701L", "var_name": "serialVersionUID"}, {"original_string": "private final String projectUrl;", "modifier": "private final", "type": "String", "declarator": "projectUrl", "var_name": "projectUrl"}, {"original_string": "private final String baseDir;", "modifier": "private final", "type": "String", "declarator": "baseDir", "var_name": "baseDir"}], "methods": [{"identifier": "AxivionParser", "parameters": "(\n            final String projectUrl,\n            final String baseDir)", "modifiers": "", "return": "", "signature": " AxivionParser(\n            final String projectUrl,\n            final String baseDir)", "full_signature": "  AxivionParser(\n            final String projectUrl,\n            final String baseDir)", "class_method_signature": "AxivionParser.AxivionParser(\n            final String projectUrl,\n            final String baseDir)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(final Report report, final AxIssueKind kind, final JsonObject payload)", "modifiers": "", "return": "void", "signature": "void parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "full_signature": " void parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "class_method_signature": "AxivionParser.parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/axivion/AxivionParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(final Report report, final AxIssueKind kind, final JsonObject payload)", "modifiers": "", "return": "void", "body": "void parse(final Report report, final AxIssueKind kind, final JsonObject payload) {\n        final JsonArray jsonArray = payload.getAsJsonArray(\"rows\");\n        if (jsonArray != null) {\n            report.logInfo(\"Importing %s %s\", jsonArray.size(), kind.plural());\n            StreamSupport.stream(jsonArray.spliterator(), false)\n                    .filter(JsonObject.class::isInstance)\n                    .map(JsonObject.class::cast)\n                    .map(issueAsJson -> new AxRawIssue(projectUrl, baseDir, issueAsJson, kind))\n                    .map(kind::transform)\n                    .forEach(report::add);\n        }\n    }", "signature": "void parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "full_signature": " void parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "class_method_signature": "AxivionParser.parse(final Report report, final AxIssueKind kind, final JsonObject payload)", "testcase": false, "constructor": false, "invocations": ["getAsJsonArray", "logInfo", "size", "plural", "forEach", "map", "map", "map", "filter", "stream", "spliterator"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}