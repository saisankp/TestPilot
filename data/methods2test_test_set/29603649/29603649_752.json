{"test_class": {"identifier": "XslOutputProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ByteArrayOutputStreamFactory byteArrayOutputStreamFactory;", "modifier": "@Mock\n    private", "type": "ByteArrayOutputStreamFactory", "declarator": "byteArrayOutputStreamFactory", "var_name": "byteArrayOutputStreamFactory"}, {"original_string": "@Mock\n    private SerializerFactory serializerFactory;", "modifier": "@Mock\n    private", "type": "SerializerFactory", "declarator": "serializerFactory", "var_name": "serializerFactory"}, {"original_string": "@Mock\n    private XsltTransformer xsltTransformer;", "modifier": "@Mock\n    private", "type": "XsltTransformer", "declarator": "xsltTransformer", "var_name": "xsltTransformer"}, {"original_string": "@Mock\n    private Serializer serializer;", "modifier": "@Mock\n    private", "type": "Serializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "@Mock\n    private ByteArrayOutputStream byteArrayOutputStream;", "modifier": "@Mock\n    private", "type": "ByteArrayOutputStream", "declarator": "byteArrayOutputStream", "var_name": "byteArrayOutputStream"}, {"original_string": "@InjectMocks\n    private XslOutputProvider underTest;", "modifier": "@InjectMocks\n    private", "type": "XslOutputProvider", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/stub/response/formatter/xsl/XslOutputProviderTest.java"}, "test_case": {"identifier": "testGetOutputShouldReturnOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOutputShouldReturnOutput() {\n        //GIVEN\n        given(serializerFactory.createSerializer()).willReturn(serializer);\n        given(byteArrayOutputStreamFactory.createByteArrayOutputStream()).willReturn(byteArrayOutputStream);\n        //WHEN\n        ByteArrayOutputStream actual = underTest.getOutput(xsltTransformer);\n        //THEN\n        assertEquals(actual, byteArrayOutputStream);\n    }", "signature": "void testGetOutputShouldReturnOutput()", "full_signature": "@Test public void testGetOutputShouldReturnOutput()", "class_method_signature": "XslOutputProviderTest.testGetOutputShouldReturnOutput()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "createSerializer", "willReturn", "given", "createByteArrayOutputStream", "getOutput", "assertEquals"]}, "focal_class": {"identifier": "XslOutputProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ByteArrayOutputStreamFactory byteArrayOutputStreamFactory;", "modifier": "@Autowired\n    private", "type": "ByteArrayOutputStreamFactory", "declarator": "byteArrayOutputStreamFactory", "var_name": "byteArrayOutputStreamFactory"}, {"original_string": "@Autowired\n    private SerializerFactory serializerFactory;", "modifier": "@Autowired\n    private", "type": "SerializerFactory", "declarator": "serializerFactory", "var_name": "serializerFactory"}], "methods": [{"identifier": "getOutput", "parameters": "(final XsltTransformer xsltTransformer)", "modifiers": "public", "return": "ByteArrayOutputStream", "signature": "ByteArrayOutputStream getOutput(final XsltTransformer xsltTransformer)", "full_signature": "public ByteArrayOutputStream getOutput(final XsltTransformer xsltTransformer)", "class_method_signature": "XslOutputProvider.getOutput(final XsltTransformer xsltTransformer)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/stub/response/formatter/xsl/XslOutputProvider.java"}, "focal_method": {"identifier": "getOutput", "parameters": "(final XsltTransformer xsltTransformer)", "modifiers": "public", "return": "ByteArrayOutputStream", "body": "public ByteArrayOutputStream getOutput(final XsltTransformer xsltTransformer) {\n        Serializer serializer = serializerFactory.createSerializer();\n        serializer.setOutputProperty(Serializer.Property.METHOD, \"xml\");\n        serializer.setOutputProperty(Serializer.Property.INDENT, \"no\");\n        ByteArrayOutputStream output = byteArrayOutputStreamFactory.createByteArrayOutputStream();\n        serializer.setOutputStream(output);\n        xsltTransformer.setDestination(serializer);\n        return output;\n    }", "signature": "ByteArrayOutputStream getOutput(final XsltTransformer xsltTransformer)", "full_signature": "public ByteArrayOutputStream getOutput(final XsltTransformer xsltTransformer)", "class_method_signature": "XslOutputProvider.getOutput(final XsltTransformer xsltTransformer)", "testcase": false, "constructor": false, "invocations": ["createSerializer", "setOutputProperty", "setOutputProperty", "createByteArrayOutputStream", "setOutputStream", "setDestination"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}