{"test_class": {"identifier": "MessageServiceImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "rice-framework/krad-web-framework/src/test/java/org/kuali/rice/krad/messages/MessageServiceImplTest.java"}, "test_case": {"identifier": "testMergeMessages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMergeMessages() {\n        Collection<Message> messages1 = new ArrayList<Message>();\n        Collection<Message> messages2 = new ArrayList<Message>();\n\n        MessageBuilder builder = MessageBuilder.create(\"Default\", \"All\", \"Test Message\");\n\n        Message message1 = builder.build();\n\n        builder.setKey(\"Test Message 2\");\n        Message message2 = builder.build();\n\n        builder.setComponentCode(\"TestView\");\n        Message message3 = builder.build();\n\n        builder.setNamespaceCode(\"KR-SAP\");\n        Message message4 = builder.build();\n\n        Message message5 = builder.build();\n\n        messages1.add(message1);\n        messages1.add(message2);\n        messages1.add(message4);\n\n        messages2.add(message1);\n        messages2.add(message3);\n        messages2.add(message4);\n        messages2.add(message5);\n\n        MessageServiceImpl messageServiceImpl = new MessageServiceImpl();\n        messageServiceImpl.mergeMessages(messages1, messages2);\n\n        assertEquals(\"Merged map is not correct size\", 5, messages1.size());\n\n    }", "signature": "void testMergeMessages()", "full_signature": "@Test public void testMergeMessages()", "class_method_signature": "MessageServiceImplTest.testMergeMessages()", "testcase": true, "constructor": false, "invocations": ["create", "build", "setKey", "build", "setComponentCode", "build", "setNamespaceCode", "build", "build", "add", "add", "add", "add", "add", "add", "add", "mergeMessages", "assertEquals", "size"]}, "focal_class": {"identifier": "MessageServiceImpl", "superclass": "", "interfaces": "implements MessageService", "fields": [{"original_string": "private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(MessageServiceImpl.class);", "modifier": "private static", "type": "org.apache.log4j.Logger", "declarator": "LOG = org.apache.log4j.Logger.getLogger(MessageServiceImpl.class)", "var_name": "LOG"}, {"original_string": "private List<MessageProvider> messageProviders;", "modifier": "private", "type": "List<MessageProvider>", "declarator": "messageProviders", "var_name": "messageProviders"}], "methods": [{"identifier": "getMessage", "parameters": "(String namespace, String component, String key)", "modifiers": "public", "return": "Message", "signature": "Message getMessage(String namespace, String component, String key)", "full_signature": "public Message getMessage(String namespace, String component, String key)", "class_method_signature": "MessageServiceImpl.getMessage(String namespace, String component, String key)", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "(String namespace, String component, String key, String locale)", "modifiers": "public", "return": "Message", "signature": "Message getMessage(String namespace, String component, String key, String locale)", "full_signature": "public Message getMessage(String namespace, String component, String key, String locale)", "class_method_signature": "MessageServiceImpl.getMessage(String namespace, String component, String key, String locale)", "testcase": false, "constructor": false}, {"identifier": "getMessageText", "parameters": "(String namespace, String component, String key)", "modifiers": "public", "return": "String", "signature": "String getMessageText(String namespace, String component, String key)", "full_signature": "public String getMessageText(String namespace, String component, String key)", "class_method_signature": "MessageServiceImpl.getMessageText(String namespace, String component, String key)", "testcase": false, "constructor": false}, {"identifier": "getMessageText", "parameters": "(String namespace, String component, String key, String locale)", "modifiers": "public", "return": "String", "signature": "String getMessageText(String namespace, String component, String key, String locale)", "full_signature": "public String getMessageText(String namespace, String component, String key, String locale)", "class_method_signature": "MessageServiceImpl.getMessageText(String namespace, String component, String key, String locale)", "testcase": false, "constructor": false}, {"identifier": "getMessageText", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getMessageText(String key)", "full_signature": "public String getMessageText(String key)", "class_method_signature": "MessageServiceImpl.getMessageText(String key)", "testcase": false, "constructor": false}, {"identifier": "getMessageText", "parameters": "(String key, String locale)", "modifiers": "public", "return": "String", "signature": "String getMessageText(String key, String locale)", "full_signature": "public String getMessageText(String key, String locale)", "class_method_signature": "MessageServiceImpl.getMessageText(String key, String locale)", "testcase": false, "constructor": false}, {"identifier": "getAllMessagesForComponent", "parameters": "(String namespace, String component)", "modifiers": "public", "return": "Collection<Message>", "signature": "Collection<Message> getAllMessagesForComponent(String namespace, String component)", "full_signature": "public Collection<Message> getAllMessagesForComponent(String namespace, String component)", "class_method_signature": "MessageServiceImpl.getAllMessagesForComponent(String namespace, String component)", "testcase": false, "constructor": false}, {"identifier": "getAllMessagesForComponent", "parameters": "(String namespace, String component, String locale)", "modifiers": "public", "return": "Collection<Message>", "signature": "Collection<Message> getAllMessagesForComponent(String namespace, String component, String locale)", "full_signature": "public Collection<Message> getAllMessagesForComponent(String namespace, String component, String locale)", "class_method_signature": "MessageServiceImpl.getAllMessagesForComponent(String namespace, String component, String locale)", "testcase": false, "constructor": false}, {"identifier": "mergeMessages", "parameters": "(Collection<Message> messages, Collection<Message> messagesToMerge)", "modifiers": "protected", "return": "void", "signature": "void mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "full_signature": "protected void mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "class_method_signature": "MessageServiceImpl.mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "testcase": false, "constructor": false}, {"identifier": "getDefaultLocaleCode", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDefaultLocaleCode()", "full_signature": "protected String getDefaultLocaleCode()", "class_method_signature": "MessageServiceImpl.getDefaultLocaleCode()", "testcase": false, "constructor": false}, {"identifier": "getMessageProviders", "parameters": "()", "modifiers": "protected", "return": "List<MessageProvider>", "signature": "List<MessageProvider> getMessageProviders()", "full_signature": "protected List<MessageProvider> getMessageProviders()", "class_method_signature": "MessageServiceImpl.getMessageProviders()", "testcase": false, "constructor": false}, {"identifier": "setMessageProviders", "parameters": "(List<MessageProvider> messageProviders)", "modifiers": "public", "return": "void", "signature": "void setMessageProviders(List<MessageProvider> messageProviders)", "full_signature": "public void setMessageProviders(List<MessageProvider> messageProviders)", "class_method_signature": "MessageServiceImpl.setMessageProviders(List<MessageProvider> messageProviders)", "testcase": false, "constructor": false}], "file": "rice-framework/krad-web-framework/src/main/java/org/kuali/rice/krad/messages/MessageServiceImpl.java"}, "focal_method": {"identifier": "mergeMessages", "parameters": "(Collection<Message> messages, Collection<Message> messagesToMerge)", "modifiers": "protected", "return": "void", "body": "protected void mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge) {\n        for (Message message : messagesToMerge) {\n            if (!messages.contains(message)) {\n                messages.add(message);\n            }\n        }\n    }", "signature": "void mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "full_signature": "protected void mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "class_method_signature": "MessageServiceImpl.mergeMessages(Collection<Message> messages, Collection<Message> messagesToMerge)", "testcase": false, "constructor": false, "invocations": ["contains", "add"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}