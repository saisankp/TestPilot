{"test_class": {"identifier": "CallContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    EntityManager entityMgr;", "modifier": "@Mock", "type": "EntityManager", "declarator": "entityMgr", "var_name": "entityMgr"}], "file": "api/src/test/java/org/apache/cloudstack/context/CallContextTest.java"}, "test_case": {"identifier": "testGetContextParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetContextParameter() {\n        CallContext currentContext = CallContext.current();\n\n        Assert.assertEquals(\"There is nothing in the context. It should return null\", null, currentContext.getContextParameter(\"key\"));\n        Assert.assertTrue(\"There is nothing in the context. The map should be empty\", currentContext.getContextParameters().isEmpty());\n\n        UUID objectUUID = UUID.randomUUID();\n        UUID stringUUID = UUID.randomUUID();\n\n        //Case1: when an entry with the object class is present\n        currentContext.putContextParameter(User.class, objectUUID);\n        Assert.assertEquals(\"it should return objectUUID: \" + objectUUID, objectUUID, currentContext.getContextParameter(User.class));\n        Assert.assertEquals(\"current context map should have exactly one entry\", 1, currentContext.getContextParameters().size());\n\n        //Case2: when an entry with the object class name as String is present\n        currentContext.putContextParameter(Account.class.toString(), stringUUID);\n        //object is put with key as Account.class.toString but get with key as Account.class\n        Assert.assertEquals(\"it should return stringUUID: \" + stringUUID, stringUUID, currentContext.getContextParameter(Account.class));\n        Assert.assertEquals(\"current context map should have exactly two entries\", 2, currentContext.getContextParameters().size());\n\n        //Case3: when an entry with both object class and object class name as String is present\n        //put an entry of account class object in the context\n        currentContext.putContextParameter(Account.class, objectUUID);\n        //since both object and string a present in the current context, it should return object value\n        Assert.assertEquals(\"it should return objectUUID: \" + objectUUID, objectUUID, currentContext.getContextParameter(Account.class));\n        Assert.assertEquals(\"current context map should have exactly three entries\", 3, currentContext.getContextParameters().size());\n    }", "signature": "void testGetContextParameter()", "full_signature": "@Test public void testGetContextParameter()", "class_method_signature": "CallContextTest.testGetContextParameter()", "testcase": true, "constructor": false, "invocations": ["current", "assertEquals", "getContextParameter", "assertTrue", "isEmpty", "getContextParameters", "randomUUID", "randomUUID", "putContextParameter", "assertEquals", "getContextParameter", "assertEquals", "size", "getContextParameters", "putContextParameter", "toString", "assertEquals", "getContextParameter", "assertEquals", "size", "getContextParameters", "putContextParameter", "assertEquals", "getContextParameter", "assertEquals", "size", "getContextParameters"]}, "focal_class": {"identifier": "CallContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(CallContext.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(CallContext.class)", "var_name": "s_logger"}, {"original_string": "private static ManagedThreadLocal<CallContext> s_currentContext = new ManagedThreadLocal<CallContext>();", "modifier": "private static", "type": "ManagedThreadLocal<CallContext>", "declarator": "s_currentContext = new ManagedThreadLocal<CallContext>()", "var_name": "s_currentContext"}, {"original_string": "private static ManagedThreadLocal<Stack<CallContext>> s_currentContextStack = new ManagedThreadLocal<Stack<CallContext>>() {\n        @Override\n        protected Stack<CallContext> initialValue() {\n            return new Stack<CallContext>();\n        }\n    };", "modifier": "private static", "type": "ManagedThreadLocal<Stack<CallContext>>", "declarator": "s_currentContextStack = new ManagedThreadLocal<Stack<CallContext>>() {\n        @Override\n        protected Stack<CallContext> initialValue() {\n            return new Stack<CallContext>();\n        }\n    }", "var_name": "s_currentContextStack"}, {"original_string": "private String contextId;", "modifier": "private", "type": "String", "declarator": "contextId", "var_name": "contextId"}, {"original_string": "private Account account;", "modifier": "private", "type": "Account", "declarator": "account", "var_name": "account"}, {"original_string": "private long accountId;", "modifier": "private", "type": "long", "declarator": "accountId", "var_name": "accountId"}, {"original_string": "private long startEventId = 0;", "modifier": "private", "type": "long", "declarator": "startEventId = 0", "var_name": "startEventId"}, {"original_string": "private String eventDescription;", "modifier": "private", "type": "String", "declarator": "eventDescription", "var_name": "eventDescription"}, {"original_string": "private String eventDetails;", "modifier": "private", "type": "String", "declarator": "eventDetails", "var_name": "eventDetails"}, {"original_string": "private String eventType;", "modifier": "private", "type": "String", "declarator": "eventType", "var_name": "eventType"}, {"original_string": "private boolean isEventDisplayEnabled = true;", "modifier": "private", "type": "boolean", "declarator": "isEventDisplayEnabled = true", "var_name": "isEventDisplayEnabled"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private long userId;", "modifier": "private", "type": "long", "declarator": "userId", "var_name": "userId"}, {"original_string": "private final Map<Object, Object> context = new HashMap<Object, Object>();", "modifier": "private final", "type": "Map<Object, Object>", "declarator": "context = new HashMap<Object, Object>()", "var_name": "context"}, {"original_string": "private Project project;", "modifier": "private", "type": "Project", "declarator": "project", "var_name": "project"}, {"original_string": "static EntityManager s_entityMgr;", "modifier": "static", "type": "EntityManager", "declarator": "s_entityMgr", "var_name": "s_entityMgr"}], "methods": [{"identifier": "init", "parameters": "(EntityManager entityMgr)", "modifiers": "public static", "return": "void", "signature": "void init(EntityManager entityMgr)", "full_signature": "public static void init(EntityManager entityMgr)", "class_method_signature": "CallContext.init(EntityManager entityMgr)", "testcase": false, "constructor": false}, {"identifier": "CallContext", "parameters": "()", "modifiers": "protected", "return": "", "signature": " CallContext()", "full_signature": "protected  CallContext()", "class_method_signature": "CallContext.CallContext()", "testcase": false, "constructor": true}, {"identifier": "CallContext", "parameters": "(long userId, long accountId, String contextId)", "modifiers": "protected", "return": "", "signature": " CallContext(long userId, long accountId, String contextId)", "full_signature": "protected  CallContext(long userId, long accountId, String contextId)", "class_method_signature": "CallContext.CallContext(long userId, long accountId, String contextId)", "testcase": false, "constructor": true}, {"identifier": "CallContext", "parameters": "(User user, Account account, String contextId)", "modifiers": "protected", "return": "", "signature": " CallContext(User user, Account account, String contextId)", "full_signature": "protected  CallContext(User user, Account account, String contextId)", "class_method_signature": "CallContext.CallContext(User user, Account account, String contextId)", "testcase": false, "constructor": true}, {"identifier": "putContextParameter", "parameters": "(Object key, Object value)", "modifiers": "public", "return": "void", "signature": "void putContextParameter(Object key, Object value)", "full_signature": "public void putContextParameter(Object key, Object value)", "class_method_signature": "CallContext.putContextParameter(Object key, Object value)", "testcase": false, "constructor": false}, {"identifier": "getContextParameter", "parameters": "(Object key)", "modifiers": "public", "return": "Object", "signature": "Object getContextParameter(Object key)", "full_signature": "public Object getContextParameter(Object key)", "class_method_signature": "CallContext.getContextParameter(Object key)", "testcase": false, "constructor": false}, {"identifier": "getCallingUserId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCallingUserId()", "full_signature": "public long getCallingUserId()", "class_method_signature": "CallContext.getCallingUserId()", "testcase": false, "constructor": false}, {"identifier": "getCallingUser", "parameters": "()", "modifiers": "public", "return": "User", "signature": "User getCallingUser()", "full_signature": "public User getCallingUser()", "class_method_signature": "CallContext.getCallingUser()", "testcase": false, "constructor": false}, {"identifier": "getContextId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContextId()", "full_signature": "public String getContextId()", "class_method_signature": "CallContext.getContextId()", "testcase": false, "constructor": false}, {"identifier": "getCallingAccount", "parameters": "()", "modifiers": "public", "return": "Account", "signature": "Account getCallingAccount()", "full_signature": "public Account getCallingAccount()", "class_method_signature": "CallContext.getCallingAccount()", "testcase": false, "constructor": false}, {"identifier": "current", "parameters": "()", "modifiers": "public static", "return": "CallContext", "signature": "CallContext current()", "full_signature": "public static CallContext current()", "class_method_signature": "CallContext.current()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(User callingUser, Account callingAccount, String contextId)", "modifiers": "public static", "return": "CallContext", "signature": "CallContext register(User callingUser, Account callingAccount, String contextId)", "full_signature": "public static CallContext register(User callingUser, Account callingAccount, String contextId)", "class_method_signature": "CallContext.register(User callingUser, Account callingAccount, String contextId)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(User callingUser, Account callingAccount, Long userId, Long accountId, String contextId)", "modifiers": "protected static", "return": "CallContext", "signature": "CallContext register(User callingUser, Account callingAccount, Long userId, Long accountId, String contextId)", "full_signature": "protected static CallContext register(User callingUser, Account callingAccount, Long userId, Long accountId, String contextId)", "class_method_signature": "CallContext.register(User callingUser, Account callingAccount, Long userId, Long accountId, String contextId)", "testcase": false, "constructor": false}, {"identifier": "registerPlaceHolderContext", "parameters": "()", "modifiers": "public static", "return": "CallContext", "signature": "CallContext registerPlaceHolderContext()", "full_signature": "public static CallContext registerPlaceHolderContext()", "class_method_signature": "CallContext.registerPlaceHolderContext()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(User callingUser, Account callingAccount)", "modifiers": "public static", "return": "CallContext", "signature": "CallContext register(User callingUser, Account callingAccount)", "full_signature": "public static CallContext register(User callingUser, Account callingAccount)", "class_method_signature": "CallContext.register(User callingUser, Account callingAccount)", "testcase": false, "constructor": false}, {"identifier": "registerSystemCallContextOnceOnly", "parameters": "()", "modifiers": "public static", "return": "CallContext", "signature": "CallContext registerSystemCallContextOnceOnly()", "full_signature": "public static CallContext registerSystemCallContextOnceOnly()", "class_method_signature": "CallContext.registerSystemCallContextOnceOnly()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(String callingUserUuid, String callingAccountUuid)", "modifiers": "public static", "return": "CallContext", "signature": "CallContext register(String callingUserUuid, String callingAccountUuid)", "full_signature": "public static CallContext register(String callingUserUuid, String callingAccountUuid)", "class_method_signature": "CallContext.register(String callingUserUuid, String callingAccountUuid)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(long callingUserId, long callingAccountId)", "modifiers": "public static", "return": "CallContext", "signature": "CallContext register(long callingUserId, long callingAccountId)", "full_signature": "public static CallContext register(long callingUserId, long callingAccountId)", "class_method_signature": "CallContext.register(long callingUserId, long callingAccountId)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(long callingUserId, long callingAccountId, String contextId)", "modifiers": "public static", "return": "CallContext", "signature": "CallContext register(long callingUserId, long callingAccountId, String contextId)", "full_signature": "public static CallContext register(long callingUserId, long callingAccountId, String contextId)", "class_method_signature": "CallContext.register(long callingUserId, long callingAccountId, String contextId)", "testcase": false, "constructor": false}, {"identifier": "unregisterAll", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void unregisterAll()", "full_signature": "public static void unregisterAll()", "class_method_signature": "CallContext.unregisterAll()", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "()", "modifiers": "public static", "return": "CallContext", "signature": "CallContext unregister()", "full_signature": "public static CallContext unregister()", "class_method_signature": "CallContext.unregister()", "testcase": false, "constructor": false}, {"identifier": "setStartEventId", "parameters": "(long startEventId)", "modifiers": "public", "return": "void", "signature": "void setStartEventId(long startEventId)", "full_signature": "public void setStartEventId(long startEventId)", "class_method_signature": "CallContext.setStartEventId(long startEventId)", "testcase": false, "constructor": false}, {"identifier": "getStartEventId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStartEventId()", "full_signature": "public long getStartEventId()", "class_method_signature": "CallContext.getStartEventId()", "testcase": false, "constructor": false}, {"identifier": "getCallingAccountId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCallingAccountId()", "full_signature": "public long getCallingAccountId()", "class_method_signature": "CallContext.getCallingAccountId()", "testcase": false, "constructor": false}, {"identifier": "getCallingAccountUuid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCallingAccountUuid()", "full_signature": "public String getCallingAccountUuid()", "class_method_signature": "CallContext.getCallingAccountUuid()", "testcase": false, "constructor": false}, {"identifier": "getCallingUserUuid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCallingUserUuid()", "full_signature": "public String getCallingUserUuid()", "class_method_signature": "CallContext.getCallingUserUuid()", "testcase": false, "constructor": false}, {"identifier": "setEventDetails", "parameters": "(String eventDetails)", "modifiers": "public", "return": "void", "signature": "void setEventDetails(String eventDetails)", "full_signature": "public void setEventDetails(String eventDetails)", "class_method_signature": "CallContext.setEventDetails(String eventDetails)", "testcase": false, "constructor": false}, {"identifier": "getEventDetails", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEventDetails()", "full_signature": "public String getEventDetails()", "class_method_signature": "CallContext.getEventDetails()", "testcase": false, "constructor": false}, {"identifier": "getEventType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEventType()", "full_signature": "public String getEventType()", "class_method_signature": "CallContext.getEventType()", "testcase": false, "constructor": false}, {"identifier": "setEventType", "parameters": "(String eventType)", "modifiers": "public", "return": "void", "signature": "void setEventType(String eventType)", "full_signature": "public void setEventType(String eventType)", "class_method_signature": "CallContext.setEventType(String eventType)", "testcase": false, "constructor": false}, {"identifier": "getEventDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEventDescription()", "full_signature": "public String getEventDescription()", "class_method_signature": "CallContext.getEventDescription()", "testcase": false, "constructor": false}, {"identifier": "setEventDescription", "parameters": "(String eventDescription)", "modifiers": "public", "return": "void", "signature": "void setEventDescription(String eventDescription)", "full_signature": "public void setEventDescription(String eventDescription)", "class_method_signature": "CallContext.setEventDescription(String eventDescription)", "testcase": false, "constructor": false}, {"identifier": "getProject", "parameters": "()", "modifiers": "public", "return": "Project", "signature": "Project getProject()", "full_signature": "public Project getProject()", "class_method_signature": "CallContext.getProject()", "testcase": false, "constructor": false}, {"identifier": "setProject", "parameters": "(Project project)", "modifiers": "public", "return": "void", "signature": "void setProject(Project project)", "full_signature": "public void setProject(Project project)", "class_method_signature": "CallContext.setProject(Project project)", "testcase": false, "constructor": false}, {"identifier": "isEventDisplayEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEventDisplayEnabled()", "full_signature": "public boolean isEventDisplayEnabled()", "class_method_signature": "CallContext.isEventDisplayEnabled()", "testcase": false, "constructor": false}, {"identifier": "setEventDisplayEnabled", "parameters": "(boolean eventDisplayEnabled)", "modifiers": "public", "return": "void", "signature": "void setEventDisplayEnabled(boolean eventDisplayEnabled)", "full_signature": "public void setEventDisplayEnabled(boolean eventDisplayEnabled)", "class_method_signature": "CallContext.setEventDisplayEnabled(boolean eventDisplayEnabled)", "testcase": false, "constructor": false}, {"identifier": "getContextParameters", "parameters": "()", "modifiers": "public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getContextParameters()", "full_signature": "public Map<Object, Object> getContextParameters()", "class_method_signature": "CallContext.getContextParameters()", "testcase": false, "constructor": false}, {"identifier": "putContextParameters", "parameters": "(Map<Object, Object> details)", "modifiers": "public", "return": "void", "signature": "void putContextParameters(Map<Object, Object> details)", "full_signature": "public void putContextParameters(Map<Object, Object> details)", "class_method_signature": "CallContext.putContextParameters(Map<Object, Object> details)", "testcase": false, "constructor": false}, {"identifier": "setActionEventInfo", "parameters": "(String eventType, String description)", "modifiers": "public static", "return": "void", "signature": "void setActionEventInfo(String eventType, String description)", "full_signature": "public static void setActionEventInfo(String eventType, String description)", "class_method_signature": "CallContext.setActionEventInfo(String eventType, String description)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CallContext.toString()", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/apache/cloudstack/context/CallContext.java"}, "focal_method": {"identifier": "getContextParameter", "parameters": "(Object key)", "modifiers": "public", "return": "Object", "body": "public Object getContextParameter(Object key) {\n        Object value = context.get(key);\n        //check if the value is present in the toString value of the key\n        //due to a bug in the way we update the key by serializing and deserializing, it sometimes gets toString value of the key. @see com.cloud.api.ApiAsyncJobDispatcher#runJob\n        if(value == null ) {\n            value = context.get(key.toString());\n        }\n        return value;\n    }", "signature": "Object getContextParameter(Object key)", "full_signature": "public Object getContextParameter(Object key)", "class_method_signature": "CallContext.getContextParameter(Object key)", "testcase": false, "constructor": false, "invocations": ["get", "get", "toString"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}