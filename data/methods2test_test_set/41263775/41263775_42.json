{"test_class": {"identifier": "FilteringIteratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/resultset/filter/FilteringIteratorTest.java"}, "test_case": {"identifier": "testNextPopulatedWithoutCallingHasNext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNextPopulatedWithoutCallingHasNext(){\n        List<String> testList = Arrays.asList(\"abc\", \"bcd\", \"cde\");\n        FilteringIterator<String> iterator = new FilteringIterator<String>(testList.iterator(), noQueryOptions()) {\n            @Override\n            public boolean isValid(String object, QueryOptions queryOptions) {\n                return true;\n            }\n        };\n        assertThat(iterator.next(), is(\"abc\"));\n    }", "signature": "void testNextPopulatedWithoutCallingHasNext()", "full_signature": "@Test public void testNextPopulatedWithoutCallingHasNext()", "class_method_signature": "FilteringIteratorTest.testNextPopulatedWithoutCallingHasNext()", "testcase": true, "constructor": false, "invocations": ["asList", "iterator", "noQueryOptions", "assertThat", "next", "is"]}, "focal_class": {"identifier": "FilteringIterator", "superclass": "extends UnmodifiableIterator<O>", "interfaces": "", "fields": [{"original_string": "final Iterator<O> wrappedIterator;", "modifier": "final", "type": "Iterator<O>", "declarator": "wrappedIterator", "var_name": "wrappedIterator"}, {"original_string": "final QueryOptions queryOptions;", "modifier": "final", "type": "QueryOptions", "declarator": "queryOptions", "var_name": "queryOptions"}, {"original_string": "private O nextObject = null;", "modifier": "private", "type": "O", "declarator": "nextObject = null", "var_name": "nextObject"}, {"original_string": "private boolean nextObjectIsNull = false;", "modifier": "private", "type": "boolean", "declarator": "nextObjectIsNull = false", "var_name": "nextObjectIsNull"}], "methods": [{"identifier": "FilteringIterator", "parameters": "(Iterator<O> wrappedIterator, QueryOptions queryOptions)", "modifiers": "public", "return": "", "signature": " FilteringIterator(Iterator<O> wrappedIterator, QueryOptions queryOptions)", "full_signature": "public  FilteringIterator(Iterator<O> wrappedIterator, QueryOptions queryOptions)", "class_method_signature": "FilteringIterator.FilteringIterator(Iterator<O> wrappedIterator, QueryOptions queryOptions)", "testcase": false, "constructor": true}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "FilteringIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "O", "signature": "O next()", "full_signature": "@Override public O next()", "class_method_signature": "FilteringIterator.next()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(O object, QueryOptions queryOptions)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isValid(O object, QueryOptions queryOptions)", "full_signature": "public abstract boolean isValid(O object, QueryOptions queryOptions)", "class_method_signature": "FilteringIterator.isValid(O object, QueryOptions queryOptions)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/resultset/filter/FilteringIterator.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "O", "body": "@Override\n    public O next() {\n        if(!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        O objectToReturn = nextObject;\n        nextObject = null;\n        nextObjectIsNull = false;\n        return objectToReturn;\n    }", "signature": "O next()", "full_signature": "@Override public O next()", "class_method_signature": "FilteringIterator.next()", "testcase": false, "constructor": false, "invocations": ["hasNext"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}