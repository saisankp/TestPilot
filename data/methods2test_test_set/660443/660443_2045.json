{"test_class": {"identifier": "GaussianInputWriterTest", "superclass": "extends ChemObjectIOTest", "interfaces": "", "fields": [], "file": "storage/io/src/test/java/org/openscience/cdk/io/program/GaussianInputWriterTest.java"}, "test_case": {"identifier": "testWrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrite() throws Exception {\n        IAtomContainer molecule = TestMoleculeFactory.makeAlphaPinene();\n        StringWriter writer = new StringWriter();\n        GaussianInputWriter gaussianWriter = new GaussianInputWriter(writer);\n        gaussianWriter.write(molecule);\n        gaussianWriter.close();\n        String output = writer.toString();\n        Assert.assertNotSame(0, output.length());\n    }", "signature": "void testWrite()", "full_signature": "@Test public void testWrite()", "class_method_signature": "GaussianInputWriterTest.testWrite()", "testcase": true, "constructor": false, "invocations": ["makeAlphaPinene", "write", "close", "toString", "assertNotSame", "length"]}, "focal_class": {"identifier": "GaussianInputWriter", "superclass": "extends DefaultChemObjectWriter", "interfaces": "", "fields": [{"original_string": "static BufferedWriter writer;", "modifier": "static", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "IOSetting             method;", "modifier": "", "type": "IOSetting", "declarator": "method", "var_name": "method"}, {"original_string": "IOSetting             basis;", "modifier": "", "type": "IOSetting", "declarator": "basis", "var_name": "basis"}, {"original_string": "IOSetting             comment;", "modifier": "", "type": "IOSetting", "declarator": "comment", "var_name": "comment"}, {"original_string": "IOSetting             command;", "modifier": "", "type": "IOSetting", "declarator": "command", "var_name": "command"}, {"original_string": "IOSetting             memory;", "modifier": "", "type": "IOSetting", "declarator": "memory", "var_name": "memory"}, {"original_string": "BooleanIOSetting      shell;", "modifier": "", "type": "BooleanIOSetting", "declarator": "shell", "var_name": "shell"}, {"original_string": "IntegerIOSetting      proccount;", "modifier": "", "type": "IntegerIOSetting", "declarator": "proccount", "var_name": "proccount"}, {"original_string": "BooleanIOSetting      usecheckpoint;", "modifier": "", "type": "BooleanIOSetting", "declarator": "usecheckpoint", "var_name": "usecheckpoint"}], "methods": [{"identifier": "GaussianInputWriter", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " GaussianInputWriter(Writer out)", "full_signature": "public  GaussianInputWriter(Writer out)", "class_method_signature": "GaussianInputWriter.GaussianInputWriter(Writer out)", "testcase": false, "constructor": true}, {"identifier": "GaussianInputWriter", "parameters": "(OutputStream output)", "modifiers": "public", "return": "", "signature": " GaussianInputWriter(OutputStream output)", "full_signature": "public  GaussianInputWriter(OutputStream output)", "class_method_signature": "GaussianInputWriter.GaussianInputWriter(OutputStream output)", "testcase": false, "constructor": true}, {"identifier": "GaussianInputWriter", "parameters": "()", "modifiers": "public", "return": "", "signature": " GaussianInputWriter()", "full_signature": "public  GaussianInputWriter()", "class_method_signature": "GaussianInputWriter.GaussianInputWriter()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "GaussianInputWriter.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(Writer out)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(Writer out)", "full_signature": "@Override public void setWriter(Writer out)", "class_method_signature": "GaussianInputWriter.setWriter(Writer out)", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(OutputStream output)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(OutputStream output)", "full_signature": "@Override public void setWriter(OutputStream output)", "class_method_signature": "GaussianInputWriter.setWriter(OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "GaussianInputWriter.close()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "GaussianInputWriter.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(IChemObject object)", "modifiers": "@Override public", "return": "void", "signature": "void write(IChemObject object)", "full_signature": "@Override public void write(IChemObject object)", "class_method_signature": "GaussianInputWriter.write(IChemObject object)", "testcase": false, "constructor": false}, {"identifier": "writeMolecule", "parameters": "(IAtomContainer mol)", "modifiers": "public", "return": "void", "signature": "void writeMolecule(IAtomContainer mol)", "full_signature": "public void writeMolecule(IAtomContainer mol)", "class_method_signature": "GaussianInputWriter.writeMolecule(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "initIOSettings", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initIOSettings()", "full_signature": "private void initIOSettings()", "class_method_signature": "GaussianInputWriter.initIOSettings()", "testcase": false, "constructor": false}, {"identifier": "customizeJob", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void customizeJob()", "full_signature": "private void customizeJob()", "class_method_signature": "GaussianInputWriter.customizeJob()", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/program/GaussianInputWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(IChemObject object)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(IChemObject object) throws CDKException {\n        if (object instanceof IAtomContainer) {\n            try {\n                writeMolecule((IAtomContainer) object);\n            } catch (Exception ex) {\n                throw new CDKException(\"Error while writing Gaussian input file: \" + ex.getMessage(), ex);\n            }\n        } else {\n            throw new CDKException(\"GaussianInputWriter only supports output of Molecule classes.\");\n        }\n    }", "signature": "void write(IChemObject object)", "full_signature": "@Override public void write(IChemObject object)", "class_method_signature": "GaussianInputWriter.write(IChemObject object)", "testcase": false, "constructor": false, "invocations": ["writeMolecule", "getMessage"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}