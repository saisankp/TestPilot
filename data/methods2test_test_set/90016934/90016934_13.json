{"test_class": {"identifier": "TestCollectionDao", "superclass": "extends\n      TestAbstractHibernateDao<Collection, String>", "interfaces": "", "fields": [{"original_string": "@Autowired\n   private CollectionDao dao;", "modifier": "@Autowired\n   private", "type": "CollectionDao", "declarator": "dao", "var_name": "dao"}, {"original_string": "@Autowired\n   private UserDao udao;", "modifier": "@Autowired\n   private", "type": "UserDao", "declarator": "udao", "var_name": "udao"}, {"original_string": "@Autowired\n   private ProductDao pdao;", "modifier": "@Autowired\n   private", "type": "ProductDao", "declarator": "pdao", "var_name": "pdao"}], "file": "core/src/test/java/fr/gael/dhus/database/dao/TestCollectionDao.java"}, "test_case": {"identifier": "getCollectionsOfProduct", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void getCollectionsOfProduct ()\n   {\n      long pid = 1;\n      List<Collection> collections = dao.getCollectionsOfProduct (pid);\n      Assert.assertNotNull (collections);\n      Assert.assertEquals (collections.size (), 3);\n      Assert.assertTrue (collections.contains (dao.read (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1\")));\n      Assert.assertTrue (collections.contains (dao.read (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3\")));\n      Assert.assertTrue (collections.contains (dao.read (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4\")));\n   }", "signature": "void getCollectionsOfProduct()", "full_signature": "@Test public void getCollectionsOfProduct()", "class_method_signature": "TestCollectionDao.getCollectionsOfProduct()", "testcase": true, "constructor": false, "invocations": ["getCollectionsOfProduct", "assertNotNull", "assertEquals", "size", "assertTrue", "contains", "read", "assertTrue", "contains", "read", "assertTrue", "contains", "read"]}, "focal_class": {"identifier": "CollectionDao", "superclass": "extends HibernateDao<Collection, String>", "interfaces": "", "fields": [{"original_string": "final public static String HIDDEN_PREFIX = \"#.\";", "modifier": "final public static", "type": "String", "declarator": "HIDDEN_PREFIX = \"#.\"", "var_name": "HIDDEN_PREFIX"}, {"original_string": "final public static String COLLECTION_ROOT_NAME = HIDDEN_PREFIX + \"root\";", "modifier": "final public static", "type": "String", "declarator": "COLLECTION_ROOT_NAME = HIDDEN_PREFIX + \"root\"", "var_name": "COLLECTION_ROOT_NAME"}, {"original_string": "private static final Logger LOGGER = LogManager.getLogger(CollectionDao.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(CollectionDao.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n   private ProductDao productDao;", "modifier": "@Autowired\n   private", "type": "ProductDao", "declarator": "productDao", "var_name": "productDao"}, {"original_string": "@Autowired\n   private ConfigurationManager cfgManager;", "modifier": "@Autowired\n   private", "type": "ConfigurationManager", "declarator": "cfgManager", "var_name": "cfgManager"}], "methods": [{"identifier": "delete", "parameters": "(final Collection collection)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final Collection collection)", "full_signature": "@Override public void delete(final Collection collection)", "class_method_signature": "CollectionDao.delete(final Collection collection)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "CollectionDao.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final String cid, final Long pid)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final String cid, final Long pid)", "full_signature": "public boolean contains(final String cid, final Long pid)", "class_method_signature": "CollectionDao.contains(final String cid, final Long pid)", "testcase": false, "constructor": false}, {"identifier": "removeProduct", "parameters": "(final String cid, final Long pid, User user)", "modifiers": "public", "return": "void", "signature": "void removeProduct(final String cid, final Long pid, User user)", "full_signature": "public void removeProduct(final String cid, final Long pid, User user)", "class_method_signature": "CollectionDao.removeProduct(final String cid, final Long pid, User user)", "testcase": false, "constructor": false}, {"identifier": "removeProducts", "parameters": "(final String cid, final Long[] pids, User user)", "modifiers": "public", "return": "void", "signature": "void removeProducts(final String cid, final Long[] pids, User user)", "full_signature": "public void removeProducts(final String cid, final Long[] pids, User user)", "class_method_signature": "CollectionDao.removeProducts(final String cid, final Long[] pids, User user)", "testcase": false, "constructor": false}, {"identifier": "getCollectionsOfProduct", "parameters": "(final Long product_id)", "modifiers": "@SuppressWarnings (\"unchecked\") public", "return": "List<Collection>", "signature": "List<Collection> getCollectionsOfProduct(final Long product_id)", "full_signature": "@SuppressWarnings (\"unchecked\") public List<Collection> getCollectionsOfProduct(final Long product_id)", "class_method_signature": "CollectionDao.getCollectionsOfProduct(final Long product_id)", "testcase": false, "constructor": false}, {"identifier": "getProductIds", "parameters": "(final String collection_uuid, User user)", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getProductIds(final String collection_uuid, User user)", "full_signature": "public List<Long> getProductIds(final String collection_uuid, User user)", "class_method_signature": "CollectionDao.getProductIds(final String collection_uuid, User user)", "testcase": false, "constructor": false}, {"identifier": "fireProductAdded", "parameters": "(DaoEvent<Collection> e, Product p)", "modifiers": "", "return": "void", "signature": "void fireProductAdded(DaoEvent<Collection> e, Product p)", "full_signature": " void fireProductAdded(DaoEvent<Collection> e, Product p)", "class_method_signature": "CollectionDao.fireProductAdded(DaoEvent<Collection> e, Product p)", "testcase": false, "constructor": false}, {"identifier": "fireProductRemoved", "parameters": "(DaoEvent<Collection> e, Product p)", "modifiers": "", "return": "void", "signature": "void fireProductRemoved(DaoEvent<Collection> e, Product p)", "full_signature": " void fireProductRemoved(DaoEvent<Collection> e, Product p)", "class_method_signature": "CollectionDao.fireProductRemoved(DaoEvent<Collection> e, Product p)", "testcase": false, "constructor": false}, {"identifier": "getCollectionsUUID", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<String>", "signature": "List<String> getCollectionsUUID()", "full_signature": "@SuppressWarnings(\"unchecked\") public List<String> getCollectionsUUID()", "class_method_signature": "CollectionDao.getCollectionsUUID()", "testcase": false, "constructor": false}, {"identifier": "getCollectionUUIDByName", "parameters": "(final String collection_name)", "modifiers": "public", "return": "String", "signature": "String getCollectionUUIDByName(final String collection_name)", "full_signature": "public String getCollectionUUIDByName(final String collection_name)", "class_method_signature": "CollectionDao.getCollectionUUIDByName(final String collection_name)", "testcase": false, "constructor": false}, {"identifier": "getByName", "parameters": "(final String name)", "modifiers": "public", "return": "Collection", "signature": "Collection getByName(final String name)", "full_signature": "public Collection getByName(final String name)", "class_method_signature": "CollectionDao.getByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "getAllCollections", "parameters": "()", "modifiers": "public", "return": "Iterator<Collection>", "signature": "Iterator<Collection> getAllCollections()", "full_signature": "public Iterator<Collection> getAllCollections()", "class_method_signature": "CollectionDao.getAllCollections()", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/database/dao/CollectionDao.java"}, "focal_method": {"identifier": "getCollectionsOfProduct", "parameters": "(final Long product_id)", "modifiers": "@SuppressWarnings (\"unchecked\") public", "return": "List<Collection>", "body": "@SuppressWarnings (\"unchecked\")\n   public List<Collection> getCollectionsOfProduct (final Long product_id)\n   {\n      return getHibernateTemplate().execute(session -> {\n         String hql = \"select c from Collection c \"\n                    + \"left outer join c.products p where p.id = ? ORDER BY c.name\";\n         Query query = session.createQuery(hql);\n         query.setFetchSize(10_000);\n         query.setParameter(0, product_id, StandardBasicTypes.LONG);\n         return (List<Collection>) query.list();\n      });\n   }", "signature": "List<Collection> getCollectionsOfProduct(final Long product_id)", "full_signature": "@SuppressWarnings (\"unchecked\") public List<Collection> getCollectionsOfProduct(final Long product_id)", "class_method_signature": "CollectionDao.getCollectionsOfProduct(final Long product_id)", "testcase": false, "constructor": false, "invocations": ["execute", "getHibernateTemplate", "createQuery", "setFetchSize", "setParameter", "list"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}