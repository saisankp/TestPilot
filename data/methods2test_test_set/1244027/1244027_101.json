{"test_class": {"identifier": "JcrStatementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JcrStatement stmt;", "modifier": "private", "type": "JcrStatement", "declarator": "stmt", "var_name": "stmt"}, {"original_string": "@Mock\n    private JcrConnection connection;", "modifier": "@Mock\n    private", "type": "JcrConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n    private QueryResult queryResult;", "modifier": "@Mock\n    private", "type": "QueryResult", "declarator": "queryResult", "var_name": "queryResult"}], "file": "modeshape-jdbc-local/src/test/java/org/modeshape/jdbc/JcrStatementTest.java"}, "test_case": {"identifier": "shouldSetFetchDirectionUnknown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSetFetchDirectionUnknown() throws SQLException {\n        stmt.setFetchDirection(ResultSet.FETCH_UNKNOWN);\n    }", "signature": "void shouldSetFetchDirectionUnknown()", "full_signature": "@Test public void shouldSetFetchDirectionUnknown()", "class_method_signature": "JcrStatementTest.shouldSetFetchDirectionUnknown()", "testcase": true, "constructor": false, "invocations": ["setFetchDirection"]}, "focal_class": {"identifier": "JcrStatement", "superclass": "", "interfaces": "implements Statement", "fields": [{"original_string": "private final JcrConnection connection;", "modifier": "private final", "type": "JcrConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private ResultSet results;", "modifier": "private", "type": "ResultSet", "declarator": "results", "var_name": "results"}, {"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}, {"original_string": "private SQLWarning warning;", "modifier": "private", "type": "SQLWarning", "declarator": "warning", "var_name": "warning"}, {"original_string": "private int rowLimit = -1;", "modifier": "private", "type": "int", "declarator": "rowLimit = -1", "var_name": "rowLimit"}, {"original_string": "private int fetchDirection = ResultSet.FETCH_FORWARD;", "modifier": "private", "type": "int", "declarator": "fetchDirection = ResultSet.FETCH_FORWARD", "var_name": "fetchDirection"}, {"original_string": "private boolean poolable;", "modifier": "private", "type": "boolean", "declarator": "poolable", "var_name": "poolable"}, {"original_string": "private int moreResults = 0;", "modifier": "private", "type": "int", "declarator": "moreResults = 0", "var_name": "moreResults"}, {"original_string": "private String sqlLanguage = JcrConnection.JCR_SQL2;", "modifier": "private", "type": "String", "declarator": "sqlLanguage = JcrConnection.JCR_SQL2", "var_name": "sqlLanguage"}], "methods": [{"identifier": "JcrStatement", "parameters": "( JcrConnection connection )", "modifiers": "", "return": "", "signature": " JcrStatement( JcrConnection connection )", "full_signature": "  JcrStatement( JcrConnection connection )", "class_method_signature": "JcrStatement.JcrStatement( JcrConnection connection )", "testcase": false, "constructor": true}, {"identifier": "connection", "parameters": "()", "modifiers": "", "return": "JcrConnection", "signature": "JcrConnection connection()", "full_signature": " JcrConnection connection()", "class_method_signature": "JcrStatement.connection()", "testcase": false, "constructor": false}, {"identifier": "setJcrSqlLanguage", "parameters": "( String jcrSQL )", "modifiers": "public", "return": "void", "signature": "void setJcrSqlLanguage( String jcrSQL )", "full_signature": "public void setJcrSqlLanguage( String jcrSQL )", "class_method_signature": "JcrStatement.setJcrSqlLanguage( String jcrSQL )", "testcase": false, "constructor": false}, {"identifier": "getFetchSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFetchSize()", "full_signature": "@Override public int getFetchSize()", "class_method_signature": "JcrStatement.getFetchSize()", "testcase": false, "constructor": false}, {"identifier": "setFetchSize", "parameters": "( int rows )", "modifiers": "@Override public", "return": "void", "signature": "void setFetchSize( int rows )", "full_signature": "@Override public void setFetchSize( int rows )", "class_method_signature": "JcrStatement.setFetchSize( int rows )", "testcase": false, "constructor": false}, {"identifier": "getFetchDirection", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFetchDirection()", "full_signature": "@Override public int getFetchDirection()", "class_method_signature": "JcrStatement.getFetchDirection()", "testcase": false, "constructor": false}, {"identifier": "setFetchDirection", "parameters": "( int direction )", "modifiers": "@Override public", "return": "void", "signature": "void setFetchDirection( int direction )", "full_signature": "@Override public void setFetchDirection( int direction )", "class_method_signature": "JcrStatement.setFetchDirection( int direction )", "testcase": false, "constructor": false}, {"identifier": "getMaxFieldSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxFieldSize()", "full_signature": "@Override public int getMaxFieldSize()", "class_method_signature": "JcrStatement.getMaxFieldSize()", "testcase": false, "constructor": false}, {"identifier": "setMaxFieldSize", "parameters": "( int max )", "modifiers": "@Override public", "return": "void", "signature": "void setMaxFieldSize( int max )", "full_signature": "@Override public void setMaxFieldSize( int max )", "class_method_signature": "JcrStatement.setMaxFieldSize( int max )", "testcase": false, "constructor": false}, {"identifier": "getMaxRows", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxRows()", "full_signature": "@Override public int getMaxRows()", "class_method_signature": "JcrStatement.getMaxRows()", "testcase": false, "constructor": false}, {"identifier": "setMaxRows", "parameters": "( int max )", "modifiers": "@Override public", "return": "void", "signature": "void setMaxRows( int max )", "full_signature": "@Override public void setMaxRows( int max )", "class_method_signature": "JcrStatement.setMaxRows( int max )", "testcase": false, "constructor": false}, {"identifier": "getQueryTimeout", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getQueryTimeout()", "full_signature": "@Override public int getQueryTimeout()", "class_method_signature": "JcrStatement.getQueryTimeout()", "testcase": false, "constructor": false}, {"identifier": "setQueryTimeout", "parameters": "( int seconds )", "modifiers": "@Override public", "return": "void", "signature": "void setQueryTimeout( int seconds )", "full_signature": "@Override public void setQueryTimeout( int seconds )", "class_method_signature": "JcrStatement.setQueryTimeout( int seconds )", "testcase": false, "constructor": false}, {"identifier": "isPoolable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPoolable()", "full_signature": "@Override public boolean isPoolable()", "class_method_signature": "JcrStatement.isPoolable()", "testcase": false, "constructor": false}, {"identifier": "setPoolable", "parameters": "( boolean poolable )", "modifiers": "@Override public", "return": "void", "signature": "void setPoolable( boolean poolable )", "full_signature": "@Override public void setPoolable( boolean poolable )", "class_method_signature": "JcrStatement.setPoolable( boolean poolable )", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "@Override public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "@Override public Connection getConnection()", "class_method_signature": "JcrStatement.getConnection()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "JcrStatement.cancel()", "testcase": false, "constructor": false}, {"identifier": "clearWarnings", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearWarnings()", "full_signature": "@Override public void clearWarnings()", "class_method_signature": "JcrStatement.clearWarnings()", "testcase": false, "constructor": false}, {"identifier": "getWarnings", "parameters": "()", "modifiers": "@Override public", "return": "SQLWarning", "signature": "SQLWarning getWarnings()", "full_signature": "@Override public SQLWarning getWarnings()", "class_method_signature": "JcrStatement.getWarnings()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public boolean isClosed()", "class_method_signature": "JcrStatement.isClosed()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "JcrStatement.close()", "testcase": false, "constructor": false}, {"identifier": "notClosed", "parameters": "()", "modifiers": "protected final", "return": "void", "signature": "void notClosed()", "full_signature": "protected final void notClosed()", "class_method_signature": "JcrStatement.notClosed()", "testcase": false, "constructor": false}, {"identifier": "noUpdates", "parameters": "()", "modifiers": "protected final", "return": "void", "signature": "void noUpdates()", "full_signature": "protected final void noUpdates()", "class_method_signature": "JcrStatement.noUpdates()", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "( String sql )", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate( String sql )", "full_signature": "@Override public int executeUpdate( String sql )", "class_method_signature": "JcrStatement.executeUpdate( String sql )", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "( String sql,\n                              int autoGeneratedKeys )", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate( String sql,\n                              int autoGeneratedKeys )", "full_signature": "@Override public int executeUpdate( String sql,\n                              int autoGeneratedKeys )", "class_method_signature": "JcrStatement.executeUpdate( String sql,\n                              int autoGeneratedKeys )", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "( String sql,\n                              int[] columnIndexes )", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate( String sql,\n                              int[] columnIndexes )", "full_signature": "@Override public int executeUpdate( String sql,\n                              int[] columnIndexes )", "class_method_signature": "JcrStatement.executeUpdate( String sql,\n                              int[] columnIndexes )", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "( String sql,\n                              String[] columnNames )", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate( String sql,\n                              String[] columnNames )", "full_signature": "@Override public int executeUpdate( String sql,\n                              String[] columnNames )", "class_method_signature": "JcrStatement.executeUpdate( String sql,\n                              String[] columnNames )", "testcase": false, "constructor": false}, {"identifier": "setCursorName", "parameters": "( String name )", "modifiers": "@Override public", "return": "void", "signature": "void setCursorName( String name )", "full_signature": "@Override public void setCursorName( String name )", "class_method_signature": "JcrStatement.setCursorName( String name )", "testcase": false, "constructor": false}, {"identifier": "getUpdateCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getUpdateCount()", "full_signature": "@Override public int getUpdateCount()", "class_method_signature": "JcrStatement.getUpdateCount()", "testcase": false, "constructor": false}, {"identifier": "addBatch", "parameters": "( String sql )", "modifiers": "@Override public", "return": "void", "signature": "void addBatch( String sql )", "full_signature": "@Override public void addBatch( String sql )", "class_method_signature": "JcrStatement.addBatch( String sql )", "testcase": false, "constructor": false}, {"identifier": "clearBatch", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearBatch()", "full_signature": "@Override public void clearBatch()", "class_method_signature": "JcrStatement.clearBatch()", "testcase": false, "constructor": false}, {"identifier": "executeBatch", "parameters": "()", "modifiers": "@Override public", "return": "int[]", "signature": "int[] executeBatch()", "full_signature": "@Override public int[] executeBatch()", "class_method_signature": "JcrStatement.executeBatch()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( String sql )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute( String sql )", "full_signature": "@Override public boolean execute( String sql )", "class_method_signature": "JcrStatement.execute( String sql )", "testcase": false, "constructor": false}, {"identifier": "getJcrRepositoryDelegate", "parameters": "()", "modifiers": "protected", "return": "RepositoryDelegate", "signature": "RepositoryDelegate getJcrRepositoryDelegate()", "full_signature": "protected RepositoryDelegate getJcrRepositoryDelegate()", "class_method_signature": "JcrStatement.getJcrRepositoryDelegate()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( String sql,\n                            int autoGeneratedKeys )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute( String sql,\n                            int autoGeneratedKeys )", "full_signature": "@Override public boolean execute( String sql,\n                            int autoGeneratedKeys )", "class_method_signature": "JcrStatement.execute( String sql,\n                            int autoGeneratedKeys )", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( String sql,\n                            int[] columnIndexes )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute( String sql,\n                            int[] columnIndexes )", "full_signature": "@Override public boolean execute( String sql,\n                            int[] columnIndexes )", "class_method_signature": "JcrStatement.execute( String sql,\n                            int[] columnIndexes )", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( String sql,\n                            String[] columnNames )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute( String sql,\n                            String[] columnNames )", "full_signature": "@Override public boolean execute( String sql,\n                            String[] columnNames )", "class_method_signature": "JcrStatement.execute( String sql,\n                            String[] columnNames )", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "( String sql )", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet executeQuery( String sql )", "full_signature": "@Override public ResultSet executeQuery( String sql )", "class_method_signature": "JcrStatement.executeQuery( String sql )", "testcase": false, "constructor": false}, {"identifier": "getGeneratedKeys", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getGeneratedKeys()", "full_signature": "@Override public ResultSet getGeneratedKeys()", "class_method_signature": "JcrStatement.getGeneratedKeys()", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getMoreResults()", "full_signature": "@Override public boolean getMoreResults()", "class_method_signature": "JcrStatement.getMoreResults()", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "( int current )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getMoreResults( int current )", "full_signature": "@Override public boolean getMoreResults( int current )", "class_method_signature": "JcrStatement.getMoreResults( int current )", "testcase": false, "constructor": false}, {"identifier": "getResultSet", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getResultSet()", "full_signature": "@Override public ResultSet getResultSet()", "class_method_signature": "JcrStatement.getResultSet()", "testcase": false, "constructor": false}, {"identifier": "getResultSetConcurrency", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetConcurrency()", "full_signature": "@Override public int getResultSetConcurrency()", "class_method_signature": "JcrStatement.getResultSetConcurrency()", "testcase": false, "constructor": false}, {"identifier": "getResultSetHoldability", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetHoldability()", "full_signature": "@Override public int getResultSetHoldability()", "class_method_signature": "JcrStatement.getResultSetHoldability()", "testcase": false, "constructor": false}, {"identifier": "getResultSetType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetType()", "full_signature": "@Override public int getResultSetType()", "class_method_signature": "JcrStatement.getResultSetType()", "testcase": false, "constructor": false}, {"identifier": "setEscapeProcessing", "parameters": "( boolean enable )", "modifiers": "@Override public", "return": "void", "signature": "void setEscapeProcessing( boolean enable )", "full_signature": "@Override public void setEscapeProcessing( boolean enable )", "class_method_signature": "JcrStatement.setEscapeProcessing( boolean enable )", "testcase": false, "constructor": false}, {"identifier": "isWrapperFor", "parameters": "( Class<?> iface )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWrapperFor( Class<?> iface )", "full_signature": "@Override public boolean isWrapperFor( Class<?> iface )", "class_method_signature": "JcrStatement.isWrapperFor( Class<?> iface )", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "( Class<T> iface )", "modifiers": "@Override public", "return": "T", "signature": "T unwrap( Class<T> iface )", "full_signature": "@Override public T unwrap( Class<T> iface )", "class_method_signature": "JcrStatement.unwrap( Class<T> iface )", "testcase": false, "constructor": false}, {"identifier": "closeOnCompletion", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void closeOnCompletion()", "full_signature": "@Override public void closeOnCompletion()", "class_method_signature": "JcrStatement.closeOnCompletion()", "testcase": false, "constructor": false}, {"identifier": "isCloseOnCompletion", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCloseOnCompletion()", "full_signature": "@Override public boolean isCloseOnCompletion()", "class_method_signature": "JcrStatement.isCloseOnCompletion()", "testcase": false, "constructor": false}], "file": "modeshape-jdbc-local/src/main/java/org/modeshape/jdbc/JcrStatement.java"}, "focal_method": {"identifier": "setFetchDirection", "parameters": "( int direction )", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setFetchDirection( int direction ) throws SQLException {\n        notClosed();\n        if (direction != ResultSet.FETCH_FORWARD && direction != ResultSet.FETCH_REVERSE && direction != ResultSet.FETCH_UNKNOWN) {\n            throw new SQLException(JdbcLocalI18n.invalidArgument.text(direction, \"\" + ResultSet.FETCH_FORWARD + \", \"\n                                                                                 + ResultSet.FETCH_REVERSE + \", \"\n                                                                                 + ResultSet.FETCH_UNKNOWN));\n        }\n        fetchDirection = direction;\n    }", "signature": "void setFetchDirection( int direction )", "full_signature": "@Override public void setFetchDirection( int direction )", "class_method_signature": "JcrStatement.setFetchDirection( int direction )", "testcase": false, "constructor": false, "invocations": ["notClosed", "text"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}