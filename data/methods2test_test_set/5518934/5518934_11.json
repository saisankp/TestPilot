{"test_class": {"identifier": "HumanReadableSizeTest", "superclass": "", "interfaces": "", "fields": [], "file": "glacieruploader-printers/src/test/java/de/kopis/glacier/printers/HumanReadableSizeTest.java"}, "test_case": {"identifier": "sanitizeGigabytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sanitizeGigabytes() {\n        assertArrayEquals(new String[]{\"123456789\", \"GB\"}, HumanReadableSize.sanitize(\"123456789\t GB\"));\n    }", "signature": "void sanitizeGigabytes()", "full_signature": "@Test public void sanitizeGigabytes()", "class_method_signature": "HumanReadableSizeTest.sanitizeGigabytes()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "sanitize"]}, "focal_class": {"identifier": "HumanReadableSize", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HumanReadableSize.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HumanReadableSize.class)", "var_name": "LOG"}], "methods": [{"identifier": "HumanReadableSize", "parameters": "()", "modifiers": "private", "return": "", "signature": " HumanReadableSize()", "full_signature": "private  HumanReadableSize()", "class_method_signature": "HumanReadableSize.HumanReadableSize()", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(final BigDecimal size)", "modifiers": "public static", "return": "String", "signature": "String parse(final BigDecimal size)", "full_signature": "public static String parse(final BigDecimal size)", "class_method_signature": "HumanReadableSize.parse(final BigDecimal size)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final Long size)", "modifiers": "public static", "return": "String", "signature": "String parse(final Long size)", "full_signature": "public static String parse(final Long size)", "class_method_signature": "HumanReadableSize.parse(final Long size)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final Integer size)", "modifiers": "public static", "return": "String", "signature": "String parse(final Integer size)", "full_signature": "public static String parse(final Integer size)", "class_method_signature": "HumanReadableSize.parse(final Integer size)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String size)", "modifiers": "public static", "return": "String", "signature": "String parse(final String size)", "full_signature": "public static String parse(final String size)", "class_method_signature": "HumanReadableSize.parse(final String size)", "testcase": false, "constructor": false}, {"identifier": "getLargerSizeClass", "parameters": "(final String oldSizeClass)", "modifiers": "private static", "return": "String", "signature": "String getLargerSizeClass(final String oldSizeClass)", "full_signature": "private static String getLargerSizeClass(final String oldSizeClass)", "class_method_signature": "HumanReadableSize.getLargerSizeClass(final String oldSizeClass)", "testcase": false, "constructor": false}, {"identifier": "sanitize", "parameters": "(final String size)", "modifiers": "public static", "return": "String[]", "signature": "String[] sanitize(final String size)", "full_signature": "public static String[] sanitize(final String size)", "class_method_signature": "HumanReadableSize.sanitize(final String size)", "testcase": false, "constructor": false}, {"identifier": "round", "parameters": "(final BigDecimal unrounded, final int precision, final int roundingMode)", "modifiers": "private static", "return": "String", "signature": "String round(final BigDecimal unrounded, final int precision, final int roundingMode)", "full_signature": "private static String round(final BigDecimal unrounded, final int precision, final int roundingMode)", "class_method_signature": "HumanReadableSize.round(final BigDecimal unrounded, final int precision, final int roundingMode)", "testcase": false, "constructor": false}], "file": "glacieruploader-printers/src/main/java/de/kopis/glacier/printers/HumanReadableSize.java"}, "focal_method": {"identifier": "sanitize", "parameters": "(final String size)", "modifiers": "public static", "return": "String[]", "body": "public static String[] sanitize(final String size) {\n        LOG.debug(\"Sanitizing '{}'\", size);\n        final Pattern patternClass = Pattern.compile(\"([0-9.]+)\\\\s*?([kMGTP]?B)\");\n        final Matcher m = patternClass.matcher(size);\n        String[] s = new String[]{size, \"B\"};\n        if (m.find()) {\n            final String pureSize = m.group(1);\n            final String sizeClass = m.group(2);\n            s = new String[]{pureSize, sizeClass};\n        }\n\n        if(LOG.isDebugEnabled()) {\n            LOG.debug(\"Sanitized: {}\", Arrays.deepToString(s));\n        }\n        return s;\n    }", "signature": "String[] sanitize(final String size)", "full_signature": "public static String[] sanitize(final String size)", "class_method_signature": "HumanReadableSize.sanitize(final String size)", "testcase": false, "constructor": false, "invocations": ["debug", "compile", "matcher", "find", "group", "group", "isDebugEnabled", "debug", "deepToString"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}