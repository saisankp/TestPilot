{"test_class": {"identifier": "BusinessObjectDataRetryStoragePolicyTransitionHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectDataRetryStoragePolicyTransitionHelperTest.java"}, "test_case": {"identifier": "testSendStoragePolicySelectionSqsMessageSqsOperationFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSendStoragePolicySelectionSqsMessageSqsOperationFails()\n    {\n        // Create a business object data key.\n        BusinessObjectDataKey businessObjectDataKey =\n            new BusinessObjectDataKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE, SUBPARTITION_VALUES,\n                DATA_VERSION);\n\n        // Create a storage policy key.\n        StoragePolicyKey storagePolicyKey = new StoragePolicyKey(STORAGE_POLICY_NAMESPACE_CD, STORAGE_POLICY_NAME);\n\n        // Try to execute AWS steps when AWS service exception is expected.\n        try\n        {\n            businessObjectDataRetryStoragePolicyTransitionHelper.sendStoragePolicySelectionSqsMessage(MockSqsOperationsImpl.MOCK_SQS_QUEUE_NOT_FOUND_NAME,\n                new StoragePolicySelection(businessObjectDataKey, storagePolicyKey, INITIAL_VERSION));\n            fail();\n        }\n        catch (IllegalStateException e)\n        {\n            assertEquals(String.format(\"AWS SQS queue with \\\"%s\\\" name not found.\", MockSqsOperationsImpl.MOCK_SQS_QUEUE_NOT_FOUND_NAME), e.getMessage());\n        }\n    }", "signature": "void testSendStoragePolicySelectionSqsMessageSqsOperationFails()", "full_signature": "@Test public void testSendStoragePolicySelectionSqsMessageSqsOperationFails()", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelperTest.testSendStoragePolicySelectionSqsMessageSqsOperationFails()", "testcase": true, "constructor": false, "invocations": ["sendStoragePolicySelectionSqsMessage", "fail", "assertEquals", "format", "getMessage"]}, "focal_class": {"identifier": "BusinessObjectDataRetryStoragePolicyTransitionHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(BusinessObjectDataRetryStoragePolicyTransitionHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(BusinessObjectDataRetryStoragePolicyTransitionHelper.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AwsHelper awsHelper;", "modifier": "@Autowired\n    private", "type": "AwsHelper", "declarator": "awsHelper", "var_name": "awsHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Autowired\n    private S3KeyPrefixHelper s3KeyPrefixHelper;", "modifier": "@Autowired\n    private", "type": "S3KeyPrefixHelper", "declarator": "s3KeyPrefixHelper", "var_name": "s3KeyPrefixHelper"}, {"original_string": "@Autowired\n    private SqsDao sqsDao;", "modifier": "@Autowired\n    private", "type": "SqsDao", "declarator": "sqsDao", "var_name": "sqsDao"}, {"original_string": "@Autowired\n    private StoragePolicyDaoHelper storagePolicyDaoHelper;", "modifier": "@Autowired\n    private", "type": "StoragePolicyDaoHelper", "declarator": "storagePolicyDaoHelper", "var_name": "storagePolicyDaoHelper"}, {"original_string": "@Autowired\n    private StoragePolicyHelper storagePolicyHelper;", "modifier": "@Autowired\n    private", "type": "StoragePolicyHelper", "declarator": "storagePolicyHelper", "var_name": "storagePolicyHelper"}, {"original_string": "@Autowired\n    private StorageUnitDao storageUnitDao;", "modifier": "@Autowired\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Autowired\n    private StorageUnitDaoHelper storageUnitDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitDaoHelper", "declarator": "storageUnitDaoHelper", "var_name": "storageUnitDaoHelper"}], "methods": [{"identifier": "retryStoragePolicyTransition", "parameters": "(BusinessObjectDataKey businessObjectDataKey,\n        BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "modifiers": "public", "return": "BusinessObjectData", "signature": "BusinessObjectData retryStoragePolicyTransition(BusinessObjectDataKey businessObjectDataKey,\n        BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "full_signature": "public BusinessObjectData retryStoragePolicyTransition(BusinessObjectDataKey businessObjectDataKey,\n        BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelper.retryStoragePolicyTransition(BusinessObjectDataKey businessObjectDataKey,\n        BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "testcase": false, "constructor": false}, {"identifier": "sendStoragePolicySelectionSqsMessage", "parameters": "(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "modifiers": "protected", "return": "void", "signature": "void sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "full_signature": "protected void sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelper.sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnit", "parameters": "(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "modifiers": "private", "return": "StorageUnitEntity", "signature": "StorageUnitEntity getStorageUnit(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "full_signature": "private StorageUnitEntity getStorageUnit(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelper.getStorageUnit(BusinessObjectDataEntity businessObjectDataEntity, StorageEntity storageEntity)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectDataRetryStoragePolicyTransitionRequest", "parameters": "(BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "modifiers": "private", "return": "void", "signature": "void validateBusinessObjectDataRetryStoragePolicyTransitionRequest(BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "full_signature": "private void validateBusinessObjectDataRetryStoragePolicyTransitionRequest(BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelper.validateBusinessObjectDataRetryStoragePolicyTransitionRequest(BusinessObjectDataRetryStoragePolicyTransitionRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectDataRetryStoragePolicyTransitionHelper.java"}, "focal_method": {"identifier": "sendStoragePolicySelectionSqsMessage", "parameters": "(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "modifiers": "protected", "return": "void", "body": "protected void sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)\n    {\n        // Send the storage policy selection to the relative AWS SQS queue.\n        AwsParamsDto awsParamsDto = awsHelper.getAwsParamsDto();\n        String messageText = null;\n        try\n        {\n            messageText = jsonHelper.objectToJson(storagePolicySelection);\n            sqsDao.sendMessage(awsParamsDto, sqsQueueName, messageText, null);\n        }\n        catch (RuntimeException e)\n        {\n            LOGGER.error(\"Failed to publish message to the JMS queue. jmsQueueName=\\\"{}\\\" jmsMessagePayload={}\", sqsQueueName, messageText);\n\n            // Rethrow the original exception.\n            throw e;\n        }\n    }", "signature": "void sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "full_signature": "protected void sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "class_method_signature": "BusinessObjectDataRetryStoragePolicyTransitionHelper.sendStoragePolicySelectionSqsMessage(String sqsQueueName, StoragePolicySelection storagePolicySelection)", "testcase": false, "constructor": false, "invocations": ["getAwsParamsDto", "objectToJson", "sendMessage", "error"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}