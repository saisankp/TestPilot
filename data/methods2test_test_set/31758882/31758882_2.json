{"test_class": {"identifier": "MessageFileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static File dir = new File(\"build/test-data\");", "modifier": "private static", "type": "File", "declarator": "dir = new File(\"build/test-data\")", "var_name": "dir"}], "file": "src/main/java/io/qdb/buffer/MessageFileTest.java"}, "test_case": {"identifier": "testCheckpoint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckpoint() throws IOException {\n        File file = new File(dir, \"checkpoint.qdb\");\n        file.delete();\n        MessageFile mf = new MessageFile(file, 0, 1000000);\n        append(mf, System.currentTimeMillis(), \"\", \"oink\".getBytes(\"UTF8\"));\n        mf.checkpoint(false);\n        mf.close();\n\n        DataInputStream ins = new DataInputStream(new FileInputStream(file));\n        int expectedLength = (int) file.length();\n        ins.skip(2 + 2 + 4);\n        assertEquals(expectedLength, ins.readInt());\n        ins.close();\n\n        FileOutputStream out = new FileOutputStream(file, true);\n        out.write(\"junk\".getBytes(\"UTF8\"));\n        out.close();\n\n        assertEquals(expectedLength + 4, file.length());\n        new MessageFile(file, 0, 1000000).close();\n        assertEquals(expectedLength, file.length());\n    }", "signature": "void testCheckpoint()", "full_signature": "@Test public void testCheckpoint()", "class_method_signature": "MessageFileTest.testCheckpoint()", "testcase": true, "constructor": false, "invocations": ["delete", "append", "currentTimeMillis", "getBytes", "checkpoint", "close", "length", "skip", "assertEquals", "readInt", "close", "write", "getBytes", "close", "assertEquals", "length", "close", "assertEquals", "length"]}, "focal_class": {"identifier": "MessageFile", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final long firstMessageId;", "modifier": "private final", "type": "long", "declarator": "firstMessageId", "var_name": "firstMessageId"}, {"original_string": "private final int maxFileSize;", "modifier": "private final", "type": "int", "declarator": "maxFileSize", "var_name": "maxFileSize"}, {"original_string": "private final RandomAccessFile raf;", "modifier": "private final", "type": "RandomAccessFile", "declarator": "raf", "var_name": "raf"}, {"original_string": "private final FileChannel channel;", "modifier": "private final", "type": "FileChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "private final ByteBuffer fileHeader;", "modifier": "private final", "type": "ByteBuffer", "declarator": "fileHeader", "var_name": "fileHeader"}, {"original_string": "private final ByteBuffer header;", "modifier": "private final", "type": "ByteBuffer", "declarator": "header", "var_name": "header"}, {"original_string": "private int usageCounter = 1;", "modifier": "private", "type": "int", "declarator": "usageCounter = 1", "var_name": "usageCounter"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private int lastCheckpointLength;", "modifier": "private", "type": "int", "declarator": "lastCheckpointLength", "var_name": "lastCheckpointLength"}, {"original_string": "private long mostRecentTimestamp;", "modifier": "private", "type": "long", "declarator": "mostRecentTimestamp", "var_name": "mostRecentTimestamp"}, {"original_string": "private final int bytesPerBucket;", "modifier": "private final", "type": "int", "declarator": "bytesPerBucket", "var_name": "bytesPerBucket"}, {"original_string": "private int bucketIndex;", "modifier": "private", "type": "int", "declarator": "bucketIndex", "var_name": "bucketIndex"}, {"original_string": "private long bucketTimestamp;", "modifier": "private", "type": "long", "declarator": "bucketTimestamp", "var_name": "bucketTimestamp"}, {"original_string": "private int bucketMessageId;", "modifier": "private", "type": "int", "declarator": "bucketMessageId", "var_name": "bucketMessageId"}, {"original_string": "private int bucketCount;", "modifier": "private", "type": "int", "declarator": "bucketCount", "var_name": "bucketCount"}, {"original_string": "public static final int FILE_HEADER_SIZE = 4096;", "modifier": "public static final", "type": "int", "declarator": "FILE_HEADER_SIZE = 4096", "var_name": "FILE_HEADER_SIZE"}, {"original_string": "private static final int FILE_HEADER_FIXED_SIZE = 16;", "modifier": "private static final", "type": "int", "declarator": "FILE_HEADER_FIXED_SIZE = 16", "var_name": "FILE_HEADER_FIXED_SIZE"}, {"original_string": "private static final int BUCKET_RECORD_SIZE = 16;", "modifier": "private static final", "type": "int", "declarator": "BUCKET_RECORD_SIZE = 16", "var_name": "BUCKET_RECORD_SIZE"}, {"original_string": "private static final int MAX_BUCKETS = (FILE_HEADER_SIZE - FILE_HEADER_FIXED_SIZE) / BUCKET_RECORD_SIZE;", "modifier": "private static final", "type": "int", "declarator": "MAX_BUCKETS = (FILE_HEADER_SIZE - FILE_HEADER_FIXED_SIZE) / BUCKET_RECORD_SIZE", "var_name": "MAX_BUCKETS"}, {"original_string": "private static final short FILE_MAGIC = (short)0xBE01;", "modifier": "private static final", "type": "short", "declarator": "FILE_MAGIC = (short)0xBE01", "var_name": "FILE_MAGIC"}, {"original_string": "private static final byte TYPE_MESSAGE = (byte)0xA1;", "modifier": "private static final", "type": "byte", "declarator": "TYPE_MESSAGE = (byte)0xA1", "var_name": "TYPE_MESSAGE"}, {"original_string": "private static final int MESSAGE_HEADER_SIZE = 1 + 8 + 2 + 4;", "modifier": "private static final", "type": "int", "declarator": "MESSAGE_HEADER_SIZE = 1 + 8 + 2 + 4", "var_name": "MESSAGE_HEADER_SIZE"}, {"original_string": "private static final Charset UTF8 = Charset.forName(\"UTF8\");", "modifier": "private static final", "type": "Charset", "declarator": "UTF8 = Charset.forName(\"UTF8\")", "var_name": "UTF8"}], "methods": [{"identifier": "MessageFile", "parameters": "(File file, long firstMessageId)", "modifiers": "@SuppressWarnings(\"StatementWithEmptyBody\") public", "return": "", "signature": " MessageFile(File file, long firstMessageId)", "full_signature": "@SuppressWarnings(\"StatementWithEmptyBody\") public  MessageFile(File file, long firstMessageId)", "class_method_signature": "MessageFile.MessageFile(File file, long firstMessageId)", "testcase": false, "constructor": true}, {"identifier": "MessageFile", "parameters": "(File file, long firstMessageId, int maxFileSize)", "modifiers": "@SuppressWarnings(\"StatementWithEmptyBody\") public", "return": "", "signature": " MessageFile(File file, long firstMessageId, int maxFileSize)", "full_signature": "@SuppressWarnings(\"StatementWithEmptyBody\") public  MessageFile(File file, long firstMessageId, int maxFileSize)", "class_method_signature": "MessageFile.MessageFile(File file, long firstMessageId, int maxFileSize)", "testcase": false, "constructor": true}, {"identifier": "bucketPosition", "parameters": "(int i)", "modifiers": "private", "return": "int", "signature": "int bucketPosition(int i)", "full_signature": "private int bucketPosition(int i)", "class_method_signature": "MessageFile.bucketPosition(int i)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getFile()", "full_signature": "public File getFile()", "class_method_signature": "MessageFile.getFile()", "testcase": false, "constructor": false}, {"identifier": "getFirstMessageId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFirstMessageId()", "full_signature": "public long getFirstMessageId()", "class_method_signature": "MessageFile.getFirstMessageId()", "testcase": false, "constructor": false}, {"identifier": "getNextMessageId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNextMessageId()", "full_signature": "public long getNextMessageId()", "class_method_signature": "MessageFile.getNextMessageId()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "modifiers": "public", "return": "long", "signature": "long append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "full_signature": "public long append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "class_method_signature": "MessageFile.append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "testcase": false, "constructor": false}, {"identifier": "putBucketDataInFileHeader", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void putBucketDataInFileHeader()", "full_signature": "private void putBucketDataInFileHeader()", "class_method_signature": "MessageFile.putBucketDataInFileHeader()", "testcase": false, "constructor": false}, {"identifier": "getMessageSize", "parameters": "(String routingKey, int payloadSize)", "modifiers": "public static", "return": "int", "signature": "int getMessageSize(String routingKey, int payloadSize)", "full_signature": "public static int getMessageSize(String routingKey, int payloadSize)", "class_method_signature": "MessageFile.getMessageSize(String routingKey, int payloadSize)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "MessageFile.length()", "testcase": false, "constructor": false}, {"identifier": "checkpoint", "parameters": "(boolean force)", "modifiers": "public", "return": "void", "signature": "void checkpoint(boolean force)", "full_signature": "public void checkpoint(boolean force)", "class_method_signature": "MessageFile.checkpoint(boolean force)", "testcase": false, "constructor": false}, {"identifier": "use", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void use()", "full_signature": "public void use()", "class_method_signature": "MessageFile.use()", "testcase": false, "constructor": false}, {"identifier": "closeIfUnused", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void closeIfUnused()", "full_signature": "public void closeIfUnused()", "class_method_signature": "MessageFile.closeIfUnused()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MessageFile.close()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "public boolean isOpen()", "class_method_signature": "MessageFile.isOpen()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MessageFile.toString()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMostRecentTimestamp()", "full_signature": "public long getMostRecentTimestamp()", "class_method_signature": "MessageFile.getMostRecentTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getMessageCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMessageCount()", "full_signature": "public int getMessageCount()", "class_method_signature": "MessageFile.getMessageCount()", "testcase": false, "constructor": false}, {"identifier": "getTimeline", "parameters": "()", "modifiers": "public", "return": "Timeline", "signature": "Timeline getTimeline()", "full_signature": "public Timeline getTimeline()", "class_method_signature": "MessageFile.getTimeline()", "testcase": false, "constructor": false}, {"identifier": "getBucketCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBucketCount()", "full_signature": "public int getBucketCount()", "class_method_signature": "MessageFile.getBucketCount()", "testcase": false, "constructor": false}, {"identifier": "getBucket", "parameters": "(int i)", "modifiers": "public", "return": "Bucket", "signature": "Bucket getBucket(int i)", "full_signature": "public Bucket getBucket(int i)", "class_method_signature": "MessageFile.getBucket(int i)", "testcase": false, "constructor": false}, {"identifier": "findBucket", "parameters": "(long messageId)", "modifiers": "public", "return": "int", "signature": "int findBucket(long messageId)", "full_signature": "public int findBucket(long messageId)", "class_method_signature": "MessageFile.findBucket(long messageId)", "testcase": false, "constructor": false}, {"identifier": "findBucketByTimestamp", "parameters": "(long timestamp)", "modifiers": "public", "return": "int", "signature": "int findBucketByTimestamp(long timestamp)", "full_signature": "public int findBucketByTimestamp(long timestamp)", "class_method_signature": "MessageFile.findBucketByTimestamp(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "cursor", "parameters": "(long messageId)", "modifiers": "@SuppressWarnings(\"StatementWithEmptyBody\") public", "return": "MessageCursor", "signature": "MessageCursor cursor(long messageId)", "full_signature": "@SuppressWarnings(\"StatementWithEmptyBody\") public MessageCursor cursor(long messageId)", "class_method_signature": "MessageFile.cursor(long messageId)", "testcase": false, "constructor": false}, {"identifier": "cursorByTimestamp", "parameters": "(long timestamp)", "modifiers": "@SuppressWarnings(\"StatementWithEmptyBody\") public", "return": "MessageCursor", "signature": "MessageCursor cursorByTimestamp(long timestamp)", "full_signature": "@SuppressWarnings(\"StatementWithEmptyBody\") public MessageCursor cursorByTimestamp(long timestamp)", "class_method_signature": "MessageFile.cursorByTimestamp(long timestamp)", "testcase": false, "constructor": false}], "file": "src/main/java/io/qdb/buffer/MessageFile.java"}, "focal_method": {"identifier": "checkpoint", "parameters": "(boolean force)", "modifiers": "public", "return": "void", "body": "public void checkpoint(boolean force) throws IOException {\n        synchronized (channel) {\n            // force all writes to disk before updating checkpoint length so we know all data up to length is good\n            channel.force(true);\n            if (length != lastCheckpointLength) {\n                fileHeader.putInt(8, length);\n                if (bucketIndex >= 0) putBucketDataInFileHeader();\n                fileHeader.position(0);\n                channel.position(0).write(fileHeader);\n                lastCheckpointLength = length;\n                if (force) channel.force(true);\n            }\n        }\n    }", "signature": "void checkpoint(boolean force)", "full_signature": "public void checkpoint(boolean force)", "class_method_signature": "MessageFile.checkpoint(boolean force)", "testcase": false, "constructor": false, "invocations": ["force", "putInt", "putBucketDataInFileHeader", "position", "write", "position", "force"]}, "repository": {"repo_id": 31758882, "url": "https://github.com/zqhxuyuan/zava", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 10325, "license": "licensed"}}