{"test_class": {"identifier": "ProjectTest", "superclass": "extends BaseJaxbTest", "interfaces": "", "fields": [], "file": "integration/rundeck/src/test/java/com/axemblr/provisionr/rundeck/ProjectTest.java"}, "test_case": {"identifier": "testSimpleProject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimpleProject() throws Exception {\n        Project project = new Project();\n\n        Node node = new Node(\"db-1\", \"db-1.example.com\", \"psql\");\n        node.setTags(new String[]{\"a\", \"b\"});\n        node.setAttributes(ImmutableMap.of(\"key1\", \"val1\", \"key2\", \"val2\"));\n\n        project.addNodes(node);\n        project.addNodes(new Node(\"web-1\", \"web-1.example.com\", \"django\"));\n\n        String actual = asXml(project);\n        assertXMLEqual(actual, readResource(\"fixtures/project.xml\"), actual);\n    }", "signature": "void testSimpleProject()", "full_signature": "@Test public void testSimpleProject()", "class_method_signature": "ProjectTest.testSimpleProject()", "testcase": true, "constructor": false, "invocations": ["setTags", "setAttributes", "of", "addNodes", "addNodes", "asXml", "assertXMLEqual", "readResource"]}, "focal_class": {"identifier": "Project", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Node> nodes = Lists.newArrayList();", "modifier": "private", "type": "List<Node>", "declarator": "nodes = Lists.newArrayList()", "var_name": "nodes"}], "methods": [{"identifier": "Project", "parameters": "()", "modifiers": "public", "return": "", "signature": " Project()", "full_signature": "public  Project()", "class_method_signature": "Project.Project()", "testcase": false, "constructor": true}, {"identifier": "Project", "parameters": "(List<Node> nodes)", "modifiers": "public", "return": "", "signature": " Project(List<Node> nodes)", "full_signature": "public  Project(List<Node> nodes)", "class_method_signature": "Project.Project(List<Node> nodes)", "testcase": false, "constructor": true}, {"identifier": "getNodes", "parameters": "()", "modifiers": "@XmlElement(name = \"node\") public", "return": "List<Node>", "signature": "List<Node> getNodes()", "full_signature": "@XmlElement(name = \"node\") public List<Node> getNodes()", "class_method_signature": "Project.getNodes()", "testcase": false, "constructor": false}, {"identifier": "setNodes", "parameters": "(List<Node> nodes)", "modifiers": "public", "return": "void", "signature": "void setNodes(List<Node> nodes)", "full_signature": "public void setNodes(List<Node> nodes)", "class_method_signature": "Project.setNodes(List<Node> nodes)", "testcase": false, "constructor": false}, {"identifier": "addNodes", "parameters": "(Node... nodes)", "modifiers": "public", "return": "void", "signature": "void addNodes(Node... nodes)", "full_signature": "public void addNodes(Node... nodes)", "class_method_signature": "Project.addNodes(Node... nodes)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Project.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Project.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Project.toString()", "testcase": false, "constructor": false}], "file": "integration/rundeck/src/main/java/com/axemblr/provisionr/rundeck/Project.java"}, "focal_method": {"identifier": "addNodes", "parameters": "(Node... nodes)", "modifiers": "public", "return": "void", "body": "public void addNodes(Node... nodes) {\n        Collections.addAll(this.nodes, nodes);\n    }", "signature": "void addNodes(Node... nodes)", "full_signature": "public void addNodes(Node... nodes)", "class_method_signature": "Project.addNodes(Node... nodes)", "testcase": false, "constructor": false, "invocations": ["addAll"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}