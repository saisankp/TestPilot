{"test_class": {"identifier": "DateToJodaTimeBaseLocalConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DateToJodaTimeBaseLocalConverter converter = new DateToJodaTimeBaseLocalConverter();", "modifier": "", "type": "DateToJodaTimeBaseLocalConverter", "declarator": "converter = new DateToJodaTimeBaseLocalConverter()", "var_name": "converter"}], "file": "beanmother-joda-time-converter/src/test/java/io/beanmother/joda/converter/DateToJodaTimeBaseLocalConverterTest.java"}, "test_case": {"identifier": "canHandle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canHandle() throws Exception {\n        assertTrue(converter.canHandle(new Date(), TypeToken.of(LocalTime.class)));\n        assertTrue(converter.canHandle(new Date(), TypeToken.of(LocalDate.class)));\n        assertTrue(converter.canHandle(new Date(), TypeToken.of(LocalDateTime.class)));\n\n        assertFalse(converter.canHandle(new Date(), TypeToken.of(Duration.class)));\n        assertFalse(converter.canHandle(\"2017-09-03\", TypeToken.of(LocalDate.class)));\n    }", "signature": "void canHandle()", "full_signature": "@Test public void canHandle()", "class_method_signature": "DateToJodaTimeBaseLocalConverterTest.canHandle()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertFalse", "canHandle", "of", "assertFalse", "canHandle", "of"]}, "focal_class": {"identifier": "DateToJodaTimeBaseLocalConverter", "superclass": "extends AbstractConverter", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Object", "signature": "Object convert(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Object convert(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "DateToJodaTimeBaseLocalConverter.convert(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "DateToJodaTimeBaseLocalConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}], "file": "beanmother-joda-time-converter/src/main/java/io/beanmother/joda/converter/DateToJodaTimeBaseLocalConverter.java"}, "focal_method": {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canHandle(Object source, TypeToken<?> targetTypeToken) {\n        return targetTypeToken.isSubtypeOf(BaseLocal.class) && (source instanceof Date);\n    }", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "DateToJodaTimeBaseLocalConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false, "invocations": ["isSubtypeOf"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}