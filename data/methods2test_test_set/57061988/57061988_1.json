{"test_class": {"identifier": "DefaultDecryptableDataDetectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CredentialVersionDataService credentialVersionDataService;", "modifier": "private", "type": "CredentialVersionDataService", "declarator": "credentialVersionDataService", "var_name": "credentialVersionDataService"}, {"original_string": "private EncryptionKeySet keySet;", "modifier": "private", "type": "EncryptionKeySet", "declarator": "keySet", "var_name": "keySet"}, {"original_string": "private DecryptableDataDetector decryptableDataDetector;", "modifier": "private", "type": "DecryptableDataDetector", "declarator": "decryptableDataDetector", "var_name": "decryptableDataDetector"}], "file": "components/credentials/src/test/java/org/cloudfoundry/credhub/services/DefaultDecryptableDataDetectorTest.java"}, "test_case": {"identifier": "whenNoCredentialsCouldBeDecrypted_whenThereAreCredentials_andNoneCanBeDecrypted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void whenNoCredentialsCouldBeDecrypted_whenThereAreCredentials_andNoneCanBeDecrypted() {\n    when(credentialVersionDataService.count()).thenReturn(4L);\n    when(credentialVersionDataService.countEncryptedWithKeyUuidIn(any())).thenReturn(0L);\n    decryptableDataDetector = new DefaultDecryptableDataDetector(\n      keySet,\n      credentialVersionDataService\n    );\n    try {\n      decryptableDataDetector.check();\n    } catch (final RuntimeException rte) {\n      assertThat(rte.getMessage(),\n        containsString(\"The encryption keys provided cannot decrypt any of the 4 value(s) in the database.\"\n          + \" Please make sure you've provided the necessary encryption keys.\"));\n    }\n  }", "signature": "void whenNoCredentialsCouldBeDecrypted_whenThereAreCredentials_andNoneCanBeDecrypted()", "full_signature": "@Test public void whenNoCredentialsCouldBeDecrypted_whenThereAreCredentials_andNoneCanBeDecrypted()", "class_method_signature": "DefaultDecryptableDataDetectorTest.whenNoCredentialsCouldBeDecrypted_whenThereAreCredentials_andNoneCanBeDecrypted()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "count", "thenReturn", "when", "countEncryptedWithKeyUuidIn", "any", "check", "assertThat", "getMessage", "containsString"]}, "focal_class": {"identifier": "DefaultDecryptableDataDetector", "superclass": "", "interfaces": "implements DecryptableDataDetector", "fields": [{"original_string": "private final EncryptionKeySet keySet;", "modifier": "private final", "type": "EncryptionKeySet", "declarator": "keySet", "var_name": "keySet"}, {"original_string": "private final CredentialVersionDataService credentialVersionDataService;", "modifier": "private final", "type": "CredentialVersionDataService", "declarator": "credentialVersionDataService", "var_name": "credentialVersionDataService"}], "methods": [{"identifier": "DefaultDecryptableDataDetector", "parameters": "(\n    final EncryptionKeySet keySet,\n    final CredentialVersionDataService credentialVersionDataService\n  )", "modifiers": "", "return": "", "signature": " DefaultDecryptableDataDetector(\n    final EncryptionKeySet keySet,\n    final CredentialVersionDataService credentialVersionDataService\n  )", "full_signature": "  DefaultDecryptableDataDetector(\n    final EncryptionKeySet keySet,\n    final CredentialVersionDataService credentialVersionDataService\n  )", "class_method_signature": "DefaultDecryptableDataDetector.DefaultDecryptableDataDetector(\n    final EncryptionKeySet keySet,\n    final CredentialVersionDataService credentialVersionDataService\n  )", "testcase": false, "constructor": true}, {"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void check()", "full_signature": "@Override public void check()", "class_method_signature": "DefaultDecryptableDataDetector.check()", "testcase": false, "constructor": false}], "file": "components/credentials/src/main/java/org/cloudfoundry/credhub/services/DefaultDecryptableDataDetector.java"}, "focal_method": {"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void check() {\n    final Collection<UUID> uuids = keySet.getUuids();\n\n    final Long countTotalCredentials = credentialVersionDataService.count();\n    final Long countCredentialsEncryptedWithKeyWeHave = credentialVersionDataService.countEncryptedWithKeyUuidIn(uuids);\n    if (countTotalCredentials > 0 && countCredentialsEncryptedWithKeyWeHave == 0) {\n      throw new RuntimeException(\n        \"The encryption keys provided cannot decrypt any of the \" + countTotalCredentials\n          + \" value(s) in the database. \"\n          + \"Please make sure you've provided the necessary encryption keys.\");\n    }\n  }", "signature": "void check()", "full_signature": "@Override public void check()", "class_method_signature": "DefaultDecryptableDataDetector.check()", "testcase": false, "constructor": false, "invocations": ["getUuids", "count", "countEncryptedWithKeyUuidIn"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}