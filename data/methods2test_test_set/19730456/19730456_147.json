{"test_class": {"identifier": "InitializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Initializer.DatabaseVersionHandler resetHelper = new Initializer.DatabaseVersionHandler();", "modifier": "private final", "type": "Initializer.DatabaseVersionHandler", "declarator": "resetHelper = new Initializer.DatabaseVersionHandler()", "var_name": "resetHelper"}, {"original_string": "private File tempFile;", "modifier": "private", "type": "File", "declarator": "tempFile", "var_name": "tempFile"}, {"original_string": "private String databaseDir;", "modifier": "private", "type": "String", "declarator": "databaseDir", "var_name": "databaseDir"}, {"original_string": "private File versionFile;", "modifier": "private", "type": "File", "declarator": "versionFile", "var_name": "versionFile"}], "file": "ethereumj-core/src/test/java/org/ethereum/config/InitializerTest.java"}, "test_case": {"identifier": "helper_shouldPrintCapabilityEthVersion_whenInfoEnabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void helper_shouldPrintCapabilityEthVersion_whenInfoEnabled() {\n        SystemProperties system = new SystemProperties();\n        Initializer initializer = new Initializer();\n\n        ListAppender<ILoggingEvent> inMemoryAppender = new ListAppender<>();\n        inMemoryAppender.start();\n\n        Logger logger = (Logger) LoggerFactory.getLogger(\"general\");\n        try {\n            logger.setLevel(Level.DEBUG);\n            logger.addAppender(inMemoryAppender);\n\n            initializer.postProcessBeforeInitialization(system, \"initializerBean\");\n            assertContainsLogLine(inMemoryAppender.list, \"capability eth version: [62, 63]\");\n            assertContainsLogLine(inMemoryAppender.list, \"capability shh version: [3]\");\n            assertContainsLogLine(inMemoryAppender.list, \"capability bzz version: [0]\");\n        } finally {\n            inMemoryAppender.stop();\n            logger.detachAppender(inMemoryAppender);\n        }\n    }", "signature": "void helper_shouldPrintCapabilityEthVersion_whenInfoEnabled()", "full_signature": "@Test public void helper_shouldPrintCapabilityEthVersion_whenInfoEnabled()", "class_method_signature": "InitializerTest.helper_shouldPrintCapabilityEthVersion_whenInfoEnabled()", "testcase": true, "constructor": false, "invocations": ["start", "getLogger", "setLevel", "addAppender", "postProcessBeforeInitialization", "assertContainsLogLine", "assertContainsLogLine", "assertContainsLogLine", "stop", "detachAppender"]}, "focal_class": {"identifier": "Initializer", "superclass": "", "interfaces": "implements BeanPostProcessor", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(\"general\");", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(\"general\")", "var_name": "logger"}, {"original_string": "private DatabaseVersionHandler databaseVersionHandler = new DatabaseVersionHandler();", "modifier": "private", "type": "DatabaseVersionHandler", "declarator": "databaseVersionHandler = new DatabaseVersionHandler()", "var_name": "databaseVersionHandler"}], "methods": [{"identifier": "initConfig", "parameters": "(SystemProperties config)", "modifiers": "private", "return": "void", "signature": "void initConfig(SystemProperties config)", "full_signature": "private void initConfig(SystemProperties config)", "class_method_signature": "Initializer.initConfig(SystemProperties config)", "testcase": false, "constructor": false}, {"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "Initializer.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "postProcessAfterInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessAfterInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessAfterInitialization(Object bean, String beanName)", "class_method_signature": "Initializer.postProcessAfterInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/Initializer.java"}, "focal_method": {"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\n        if (bean instanceof SystemProperties) {\n            initConfig((SystemProperties) bean);\n        }\n        return bean;\n    }", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "Initializer.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false, "invocations": ["initConfig"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}