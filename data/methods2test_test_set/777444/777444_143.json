{"test_class": {"identifier": "MBeanServersTest", "superclass": "", "interfaces": "implements NotificationListener", "fields": [{"original_string": "MBeanServer ownServer = MBeanServerFactory.newMBeanServer();", "modifier": "", "type": "MBeanServer", "declarator": "ownServer = MBeanServerFactory.newMBeanServer()", "var_name": "ownServer"}, {"original_string": "TestLookup lookup = new TestLookup();", "modifier": "", "type": "TestLookup", "declarator": "lookup = new TestLookup()", "var_name": "lookup"}, {"original_string": "private boolean notificationCalled = false;", "modifier": "private", "type": "boolean", "declarator": "notificationCalled = false", "var_name": "notificationCalled"}], "file": "agent/core/src/test/java/org/jolokia/backend/MBeanServersTest.java"}, "test_case": {"identifier": "dump", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void dump() {\n        MBeanServers servers = new MBeanServers(getTestDetectors(),this);\n        String dump = servers.dump();\n        assertTrue(dump.contains(\"java.lang\"));\n        assertTrue(dump.contains(\"type=Memory\"));\n    }", "signature": "void dump()", "full_signature": "@Test public void dump()", "class_method_signature": "MBeanServersTest.dump()", "testcase": true, "constructor": false, "invocations": ["getTestDetectors", "dump", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "MBeanServers", "superclass": "", "interfaces": "implements NotificationListener", "fields": [{"original_string": "private final Set<MBeanServerConnection> detectedMBeanServers;", "modifier": "private final", "type": "Set<MBeanServerConnection>", "declarator": "detectedMBeanServers", "var_name": "detectedMBeanServers"}, {"original_string": "private final Set<MBeanServerConnection> allMBeanServers;", "modifier": "private final", "type": "Set<MBeanServerConnection>", "declarator": "allMBeanServers", "var_name": "allMBeanServers"}, {"original_string": "private final NotificationListener jolokiaMBeanServerListener;", "modifier": "private final", "type": "NotificationListener", "declarator": "jolokiaMBeanServerListener", "var_name": "jolokiaMBeanServerListener"}, {"original_string": "private MBeanServerConnection jolokiaMBeanServer;", "modifier": "private", "type": "MBeanServerConnection", "declarator": "jolokiaMBeanServer", "var_name": "jolokiaMBeanServer"}, {"original_string": "private static final ObjectName JOLOKIA_MBEAN_SERVER_ONAME = JmxUtil.newObjectName(\"jolokia:type=MBeanServer\");", "modifier": "private static final", "type": "ObjectName", "declarator": "JOLOKIA_MBEAN_SERVER_ONAME = JmxUtil.newObjectName(\"jolokia:type=MBeanServer\")", "var_name": "JOLOKIA_MBEAN_SERVER_ONAME"}], "methods": [{"identifier": "MBeanServers", "parameters": "(List<ServerDetector> pDetectors, NotificationListener pListener)", "modifiers": "", "return": "", "signature": " MBeanServers(List<ServerDetector> pDetectors, NotificationListener pListener)", "full_signature": "  MBeanServers(List<ServerDetector> pDetectors, NotificationListener pListener)", "class_method_signature": "MBeanServers.MBeanServers(List<ServerDetector> pDetectors, NotificationListener pListener)", "testcase": false, "constructor": true}, {"identifier": "handleNotification", "parameters": "(Notification notification, Object handback)", "modifiers": "public synchronized", "return": "void", "signature": "void handleNotification(Notification notification, Object handback)", "full_signature": "public synchronized void handleNotification(Notification notification, Object handback)", "class_method_signature": "MBeanServers.handleNotification(Notification notification, Object handback)", "testcase": false, "constructor": false}, {"identifier": "getMBeanServers", "parameters": "()", "modifiers": "public", "return": "Set<MBeanServerConnection>", "signature": "Set<MBeanServerConnection> getMBeanServers()", "full_signature": "public Set<MBeanServerConnection> getMBeanServers()", "class_method_signature": "MBeanServers.getMBeanServers()", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dump()", "full_signature": "public String dump()", "class_method_signature": "MBeanServers.dump()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "MBeanServers.destroy()", "testcase": false, "constructor": false}, {"identifier": "getJolokiaMBeanServer", "parameters": "()", "modifiers": "public", "return": "MBeanServerConnection", "signature": "MBeanServerConnection getJolokiaMBeanServer()", "full_signature": "public MBeanServerConnection getJolokiaMBeanServer()", "class_method_signature": "MBeanServers.getJolokiaMBeanServer()", "testcase": false, "constructor": false}, {"identifier": "lookupJolokiaMBeanServer", "parameters": "()", "modifiers": "private", "return": "MBeanServer", "signature": "MBeanServer lookupJolokiaMBeanServer()", "full_signature": "private MBeanServer lookupJolokiaMBeanServer()", "class_method_signature": "MBeanServers.lookupJolokiaMBeanServer()", "testcase": false, "constructor": false}, {"identifier": "addJolokiaMBeanServerRegistrationListener", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void addJolokiaMBeanServerRegistrationListener()", "full_signature": "private void addJolokiaMBeanServerRegistrationListener()", "class_method_signature": "MBeanServers.addJolokiaMBeanServerRegistrationListener()", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/backend/MBeanServers.java"}, "focal_method": {"identifier": "dump", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String dump() {\n        return ServersInfo.dump(allMBeanServers);\n    }", "signature": "String dump()", "full_signature": "public String dump()", "class_method_signature": "MBeanServers.dump()", "testcase": false, "constructor": false, "invocations": ["dump"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}