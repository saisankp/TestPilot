{"test_class": {"identifier": "RestUrlMappingMessageNameResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REQUEST_BODY = \"request body\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_BODY = \"request body\"", "var_name": "REQUEST_BODY"}, {"original_string": "private static final String XPATH_QUERY = \"this should be an xpath query\";", "modifier": "private static final", "type": "String", "declarator": "XPATH_QUERY = \"this should be an xpath query\"", "var_name": "XPATH_QUERY"}, {"original_string": "private ParameterList parameters;", "modifier": "private", "type": "ParameterList", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private WilmaHttpRequest request;", "modifier": "private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private XmlXpathResolver xmlTypeResolver;", "modifier": "@Mock\n    private", "type": "XmlXpathResolver", "declarator": "xmlTypeResolver", "var_name": "xmlTypeResolver"}, {"original_string": "@InjectMocks\n    private RestUrlMappingMessageNameResolver underTest;", "modifier": "@InjectMocks\n    private", "type": "RestUrlMappingMessageNameResolver", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/sequence/formatters/helper/resolver/RestUrlMappingMessageNameResolverTest.java"}, "test_case": {"identifier": "testResolveShouldNotResolveWithoutUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveShouldNotResolveWithoutUrl() throws Exception {\n        //GIVEN\n        givenRequestWithUrl(\"not_an_url\");\n        //WHEN\n        String resolvedType = underTest.resolve(request, parameters);\n        //THEN\n        assertEquals(resolvedType, \"\");\n    }", "signature": "void testResolveShouldNotResolveWithoutUrl()", "full_signature": "@Test public void testResolveShouldNotResolveWithoutUrl()", "class_method_signature": "RestUrlMappingMessageNameResolverTest.testResolveShouldNotResolveWithoutUrl()", "testcase": true, "constructor": false, "invocations": ["givenRequestWithUrl", "resolve", "assertEquals"]}, "focal_class": {"identifier": "RestUrlMappingMessageNameResolver", "superclass": "", "interfaces": "implements MessageNameResolver", "fields": [{"original_string": "private static final String EMPTY = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY = \"\"", "var_name": "EMPTY"}, {"original_string": "private static final String TYPE_PREFIX = \"type:\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_PREFIX = \"type:\"", "var_name": "TYPE_PREFIX"}, {"original_string": "private static final String XPATH_PREFIX = \"typequery:\";", "modifier": "private static final", "type": "String", "declarator": "XPATH_PREFIX = \"typequery:\"", "var_name": "XPATH_PREFIX"}, {"original_string": "private static final String URL_PREFIX = \"url:\";", "modifier": "private static final", "type": "String", "declarator": "URL_PREFIX = \"url:\"", "var_name": "URL_PREFIX"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(RestUrlMappingMessageNameResolver.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RestUrlMappingMessageNameResolver.class)", "var_name": "logger"}, {"original_string": "@Qualifier(\"sequenceXmlXpathResolver\")\n    @Autowired\n    private XmlXpathResolver xmlTypeResolver;", "modifier": "@Qualifier(\"sequenceXmlXpathResolver\")\n    @Autowired\n    private", "type": "XmlXpathResolver", "declarator": "xmlTypeResolver", "var_name": "xmlTypeResolver"}], "methods": [{"identifier": "resolve", "parameters": "(final WilmaHttpEntity entity, final ParameterList parameters)", "modifiers": "@Override public", "return": "String", "signature": "String resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "full_signature": "@Override public String resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "class_method_signature": "RestUrlMappingMessageNameResolver.resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "testcase": false, "constructor": false}, {"identifier": "resolveRequest", "parameters": "(final WilmaHttpEntity entity, final ParameterList parameters)", "modifiers": "private", "return": "String", "signature": "String resolveRequest(final WilmaHttpEntity entity, final ParameterList parameters)", "full_signature": "private String resolveRequest(final WilmaHttpEntity entity, final ParameterList parameters)", "class_method_signature": "RestUrlMappingMessageNameResolver.resolveRequest(final WilmaHttpEntity entity, final ParameterList parameters)", "testcase": false, "constructor": false}, {"identifier": "resolveUrlFromRequestLine", "parameters": "(final WilmaHttpRequest request)", "modifiers": "private", "return": "String", "signature": "String resolveUrlFromRequestLine(final WilmaHttpRequest request)", "full_signature": "private String resolveUrlFromRequestLine(final WilmaHttpRequest request)", "class_method_signature": "RestUrlMappingMessageNameResolver.resolveUrlFromRequestLine(final WilmaHttpRequest request)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final String url, final String target)", "modifiers": "private", "return": "boolean", "signature": "boolean matches(final String url, final String target)", "full_signature": "private boolean matches(final String url, final String target)", "class_method_signature": "RestUrlMappingMessageNameResolver.matches(final String url, final String target)", "testcase": false, "constructor": false}, {"identifier": "getTargetUrl", "parameters": "(final String value)", "modifiers": "private", "return": "String", "signature": "String getTargetUrl(final String value)", "full_signature": "private String getTargetUrl(final String value)", "class_method_signature": "RestUrlMappingMessageNameResolver.getTargetUrl(final String value)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final String key, final WilmaHttpEntity entity)", "modifiers": "private", "return": "String", "signature": "String getType(final String key, final WilmaHttpEntity entity)", "full_signature": "private String getType(final String key, final WilmaHttpEntity entity)", "class_method_signature": "RestUrlMappingMessageNameResolver.getType(final String key, final WilmaHttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "evaluateQuery", "parameters": "(final String key, final WilmaHttpEntity entity)", "modifiers": "private", "return": "String", "signature": "String evaluateQuery(final String key, final WilmaHttpEntity entity)", "full_signature": "private String evaluateQuery(final String key, final WilmaHttpEntity entity)", "class_method_signature": "RestUrlMappingMessageNameResolver.evaluateQuery(final String key, final WilmaHttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "resolverParameters", "parameters": "(final Parameter parameter)", "modifiers": "private", "return": "boolean", "signature": "boolean resolverParameters(final Parameter parameter)", "full_signature": "private boolean resolverParameters(final Parameter parameter)", "class_method_signature": "RestUrlMappingMessageNameResolver.resolverParameters(final Parameter parameter)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/sequence/formatters/helper/resolver/RestUrlMappingMessageNameResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(final WilmaHttpEntity entity, final ParameterList parameters)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String resolve(final WilmaHttpEntity entity, final ParameterList parameters) {\n        String resolvedName;\n        if (entity instanceof WilmaHttpRequest) {\n            resolvedName = resolveRequest(entity, parameters);\n        } else {\n            resolvedName = EMPTY;\n        }\n        return resolvedName;\n    }", "signature": "String resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "full_signature": "@Override public String resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "class_method_signature": "RestUrlMappingMessageNameResolver.resolve(final WilmaHttpEntity entity, final ParameterList parameters)", "testcase": false, "constructor": false, "invocations": ["resolveRequest"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}