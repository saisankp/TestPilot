{"test_class": {"identifier": "RegisterByTimeAnalysisServiceTest", "superclass": "extends BaseSpringJunitUtil", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate IAnalysisService registerByTimeAnalysisService;", "modifier": "@Autowired\n\tprivate", "type": "IAnalysisService", "declarator": "registerByTimeAnalysisService", "var_name": "registerByTimeAnalysisService"}], "file": "xa-analyzer/src/test/java/com/xinnet/xa/analyzer/service/roi/RegisterByTimeAnalysisServiceTest.java"}, "test_case": {"identifier": "testAnalysis", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAnalysis(){\n\t\tAnalysisParam ap = new AnalysisParam(\"2014112001\", TimeType.HOUR);\n\t\tregisterByTimeAnalysisService.analysis(ap);\n\t}", "signature": "void testAnalysis()", "full_signature": "@Test public void testAnalysis()", "class_method_signature": "RegisterByTimeAnalysisServiceTest.testAnalysis()", "testcase": true, "constructor": false, "invocations": ["analysis"]}, "focal_class": {"identifier": "RegisterByTimeAnalysisService", "superclass": "", "interfaces": "implements IAnalysisService", "fields": [{"original_string": "@Autowired\n\tprivate AnalyzerDao analyzerDao;", "modifier": "@Autowired\n\tprivate", "type": "AnalyzerDao", "declarator": "analyzerDao", "var_name": "analyzerDao"}, {"original_string": "@Autowired\n\tprivate AnalysisDataUtil analysisDataUtil;", "modifier": "@Autowired\n\tprivate", "type": "AnalysisDataUtil", "declarator": "analysisDataUtil", "var_name": "analysisDataUtil"}], "methods": [{"identifier": "analysis", "parameters": "(AnalysisParam analysisParam)", "modifiers": "@Override public", "return": "void", "signature": "void analysis(AnalysisParam analysisParam)", "full_signature": "@Override public void analysis(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.analysis(AnalysisParam analysisParam)", "testcase": false, "constructor": false}, {"identifier": "insertRegisterDetail", "parameters": "(AnalysisParam analysisParam)", "modifiers": "private", "return": "void", "signature": "void insertRegisterDetail(AnalysisParam analysisParam)", "full_signature": "private void insertRegisterDetail(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.insertRegisterDetail(AnalysisParam analysisParam)", "testcase": false, "constructor": false}, {"identifier": "inserRegisterFailedDetail", "parameters": "(AnalysisParam analysisParam)", "modifiers": "private", "return": "void", "signature": "void inserRegisterFailedDetail(AnalysisParam analysisParam)", "full_signature": "private void inserRegisterFailedDetail(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.inserRegisterFailedDetail(AnalysisParam analysisParam)", "testcase": false, "constructor": false}, {"identifier": "analysisRegisterCountByUrl", "parameters": "(AnalysisParam analysisParam)", "modifiers": "private", "return": "void", "signature": "void analysisRegisterCountByUrl(AnalysisParam analysisParam)", "full_signature": "private void analysisRegisterCountByUrl(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.analysisRegisterCountByUrl(AnalysisParam analysisParam)", "testcase": false, "constructor": false}, {"identifier": "analysisRegisterCount", "parameters": "(AnalysisParam analysisParam)", "modifiers": "private", "return": "void", "signature": "void analysisRegisterCount(AnalysisParam analysisParam)", "full_signature": "private void analysisRegisterCount(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.analysisRegisterCount(AnalysisParam analysisParam)", "testcase": false, "constructor": false}], "file": "xa-analyzer/src/main/java/com/xinnet/xa/analyzer/service/roi/RegisterByTimeAnalysisService.java"}, "focal_method": {"identifier": "analysis", "parameters": "(AnalysisParam analysisParam)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void analysis(AnalysisParam analysisParam) {\n\t\tinsertRegisterDetail(analysisParam);\n\t\tinserRegisterFailedDetail(analysisParam);\n\t\tanalysisRegisterCount(analysisParam);\n\t\tanalysisRegisterCountByUrl(analysisParam);\n\t}", "signature": "void analysis(AnalysisParam analysisParam)", "full_signature": "@Override public void analysis(AnalysisParam analysisParam)", "class_method_signature": "RegisterByTimeAnalysisService.analysis(AnalysisParam analysisParam)", "testcase": false, "constructor": false, "invocations": ["insertRegisterDetail", "inserRegisterFailedDetail", "analysisRegisterCount", "analysisRegisterCountByUrl"]}, "repository": {"repo_id": 47752557, "url": "https://github.com/yanweiqi/xinnet-analysis", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 187, "license": "licensed"}}