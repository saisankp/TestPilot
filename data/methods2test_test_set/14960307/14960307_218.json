{"test_class": {"identifier": "RunningAverageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(RunningAverageTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RunningAverageTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/RunningAverageTest.java"}, "test_case": {"identifier": "runningAverage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void runningAverage() {\n        RunningAverage avg = new RunningAverage(3, 1);\n        Assert.assertEquals(\"0.0\", avg.toString());\n        avg.add(2);\n        Assert.assertEquals(\"2.0\", avg.toString());\n        avg.add(3);\n        Assert.assertEquals(\"2.5\", avg.toString());\n        avg.add(4);\n        Assert.assertEquals(\"3.0\", avg.toString());\n        avg.add(5);\n        // last value should have kicked out the 2 above\n        Assert.assertEquals(\"4.0\", avg.toString());\n        Assert.assertEquals(\"4.000\", avg.toString(3));\n        Assert.assertEquals(\"4\", avg.toString(0));\n    }", "signature": "void runningAverage()", "full_signature": "@Test public void runningAverage()", "class_method_signature": "RunningAverageTest.runningAverage()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "add", "assertEquals", "toString", "add", "assertEquals", "toString", "add", "assertEquals", "toString", "add", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "RunningAverage", "superclass": "extends RunningTotal", "interfaces": "", "fields": [{"original_string": "private int precision;", "modifier": "private", "type": "int", "declarator": "precision", "var_name": "precision"}], "methods": [{"identifier": "RunningAverage", "parameters": "(int size, int precision)", "modifiers": "public", "return": "", "signature": " RunningAverage(int size, int precision)", "full_signature": "public  RunningAverage(int size, int precision)", "class_method_signature": "RunningAverage.RunningAverage(int size, int precision)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RunningAverage.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int temporaryPrecision)", "modifiers": "public", "return": "String", "signature": "String toString(int temporaryPrecision)", "full_signature": "public String toString(int temporaryPrecision)", "class_method_signature": "RunningAverage.toString(int temporaryPrecision)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/RunningAverage.java"}, "focal_method": {"identifier": "RunningAverage", "parameters": "(int size, int precision)", "modifiers": "public", "return": "", "body": "public RunningAverage(int size, int precision) {\n        super(size);\n        this.precision = precision;\n    }", "signature": " RunningAverage(int size, int precision)", "full_signature": "public  RunningAverage(int size, int precision)", "class_method_signature": "RunningAverage.RunningAverage(int size, int precision)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}