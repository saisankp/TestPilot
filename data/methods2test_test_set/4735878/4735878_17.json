{"test_class": {"identifier": "CategorizedRealTest", "superclass": "", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/structure/categorize/CategorizedRealTest.java"}, "test_case": {"identifier": "testGetFromCategorize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFromCategorize(){\n        CategorizedReal cs = new CategorizedReal(getCategorize2Real());\n        assertTrue(cs.get(20.0).equals(24.0));\n        assertTrue(cs.get(Double.NEGATIVE_INFINITY).equals(100.0));\n        assertNull(cs.get(25.0));\n        assertTrue(cs.get(30.0).equals(0.1));\n        cs = new CategorizedReal(new RealLiteral(16.8));\n        assertNull(cs.get(25.0));\n        assertTrue(cs.get(Double.NEGATIVE_INFINITY).equals(16.8));\n    }", "signature": "void testGetFromCategorize()", "full_signature": "@Test public void testGetFromCategorize()", "class_method_signature": "CategorizedRealTest.testGetFromCategorize()", "testcase": true, "constructor": false, "invocations": ["getCategorize2Real", "assertTrue", "equals", "get", "assertTrue", "equals", "get", "assertNull", "get", "assertTrue", "equals", "get", "assertNull", "get", "assertTrue", "equals", "get"]}, "focal_class": {"identifier": "CategorizedReal", "superclass": "extends CategorizedLegend<Double>", "interfaces": "", "fields": [{"original_string": "private RealParameter parameter = new RealLiteral();", "modifier": "private", "type": "RealParameter", "declarator": "parameter = new RealLiteral()", "var_name": "parameter"}], "methods": [{"identifier": "CategorizedReal", "parameters": "(RealParameter sp)", "modifiers": "public", "return": "", "signature": " CategorizedReal(RealParameter sp)", "full_signature": "public  CategorizedReal(RealParameter sp)", "class_method_signature": "CategorizedReal.CategorizedReal(RealParameter sp)", "testcase": false, "constructor": true}, {"identifier": "getParameter", "parameters": "()", "modifiers": "@Override public", "return": "SeParameter", "signature": "SeParameter getParameter()", "full_signature": "@Override public SeParameter getParameter()", "class_method_signature": "CategorizedReal.getParameter()", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(RealParameter param)", "modifiers": "public", "return": "void", "signature": "void setParameter(RealParameter param)", "full_signature": "public void setParameter(RealParameter param)", "class_method_signature": "CategorizedReal.setParameter(RealParameter param)", "testcase": false, "constructor": false}, {"identifier": "getFallbackValue", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getFallbackValue()", "full_signature": "public Double getFallbackValue()", "class_method_signature": "CategorizedReal.getFallbackValue()", "testcase": false, "constructor": false}, {"identifier": "setFallbackValue", "parameters": "(Double value)", "modifiers": "public", "return": "void", "signature": "void setFallbackValue(Double value)", "full_signature": "public void setFallbackValue(Double value)", "class_method_signature": "CategorizedReal.setFallbackValue(Double value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double get(Double d)", "full_signature": "@Override public Double get(Double d)", "class_method_signature": "CategorizedReal.get(Double d)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Double d, Double v)", "modifiers": "@Override public", "return": "void", "signature": "void put(Double d, Double v)", "full_signature": "@Override public void put(Double d, Double v)", "class_method_signature": "CategorizedReal.put(Double d, Double v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double remove(Double d)", "full_signature": "@Override public Double remove(Double d)", "class_method_signature": "CategorizedReal.remove(Double d)", "testcase": false, "constructor": false}, {"identifier": "getFromLower", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double getFromLower(Double d)", "full_signature": "@Override public Double getFromLower(Double d)", "class_method_signature": "CategorizedReal.getFromLower(Double d)", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/structure/categorize/CategorizedReal.java"}, "focal_method": {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "body": "@Override\n    public Double get(Double d){\n        if(parameter instanceof RealLiteral){\n            return Double.isInfinite(d) && d < 0 ? ((RealLiteral) parameter).getValue(null) : null;\n        } else {\n            try{\n                RealParameter sp = ((Categorize2Real)parameter).get(new RealLiteral(d));\n                return sp == null ? null : sp.getValue(null);\n            } catch (ParameterException pe){\n                throw new IllegalArgumentException(\"Can't process the input value: \"+d, pe);\n            }\n        }\n    }", "signature": "Double get(Double d)", "full_signature": "@Override public Double get(Double d)", "class_method_signature": "CategorizedReal.get(Double d)", "testcase": false, "constructor": false, "invocations": ["isInfinite", "getValue", "get", "getValue"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}