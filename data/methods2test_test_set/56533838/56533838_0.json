{"test_class": {"identifier": "BuildFileGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SRC_DIR = Paths.get(\"googleapis\").toString();", "modifier": "private static final", "type": "String", "declarator": "SRC_DIR = Paths.get(\"googleapis\").toString()", "var_name": "SRC_DIR"}, {"original_string": "private static final String PATH_PREFIX =\n      Paths.get(\"rules_gapic\", \"bazel\", \"src\", \"test\", \"data\").toString();", "modifier": "private static final", "type": "String", "declarator": "PATH_PREFIX =\n      Paths.get(\"rules_gapic\", \"bazel\", \"src\", \"test\", \"data\").toString()", "var_name": "PATH_PREFIX"}], "file": "rules_gapic/bazel/src/test/java/com/google/api/codegen/bazel/BuildFileGeneratorTest.java"}, "test_case": {"identifier": "testGenerateBuildFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGenerateBuildFiles() throws IOException {\n    String buildozerPath = getBuildozerPath();\n    ArgsParser args =\n        new ArgsParser(new String[] {\"--buildozer=\" + buildozerPath, \"--src=\" + SRC_DIR});\n    FileWriter fw = new FileWriter();\n    new BuildFileGenerator().generateBuildFiles(args.createApisVisitor(fw, PATH_PREFIX));\n\n    Path fileBodyPathPrefix = Paths.get(PATH_PREFIX, SRC_DIR, \"google\", \"example\", \"library\");\n    String gapicBuildFilePath =\n        Paths.get(fileBodyPathPrefix.toString(), \"v1\", \"BUILD.bazel\").toString();\n    String rawBuildFilePath = Paths.get(fileBodyPathPrefix.toString(), \"BUILD.bazel\").toString();\n\n    Assert.assertEquals(2, fw.files.size());\n    Assert.assertEquals(\n        ApisVisitor.readFile(gapicBuildFilePath + \".baseline\"), fw.files.get(gapicBuildFilePath));\n    Assert.assertEquals(\n        ApisVisitor.readFile(rawBuildFilePath + \".baseline\"), fw.files.get(rawBuildFilePath));\n  }", "signature": "void testGenerateBuildFiles()", "full_signature": "@Test public void testGenerateBuildFiles()", "class_method_signature": "BuildFileGeneratorTest.testGenerateBuildFiles()", "testcase": true, "constructor": false, "invocations": ["getBuildozerPath", "generateBuildFiles", "createApisVisitor", "get", "toString", "get", "toString", "toString", "get", "toString", "assertEquals", "size", "assertEquals", "readFile", "get", "assertEquals", "readFile", "get"]}, "focal_class": {"identifier": "BuildFileGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "BuildFileGenerator.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "generateBuildFiles", "parameters": "(ApisVisitor visitor)", "modifiers": "", "return": "void", "signature": "void generateBuildFiles(ApisVisitor visitor)", "full_signature": " void generateBuildFiles(ApisVisitor visitor)", "class_method_signature": "BuildFileGenerator.generateBuildFiles(ApisVisitor visitor)", "testcase": false, "constructor": false}], "file": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BuildFileGenerator.java"}, "focal_method": {"identifier": "generateBuildFiles", "parameters": "(ApisVisitor visitor)", "modifiers": "", "return": "void", "body": "void generateBuildFiles(ApisVisitor visitor) throws IOException {\n    System.out.println(\"\\n\\n========== READING INPUT DIRECTORY ==========\");\n    Files.walkFileTree(visitor.getSrcDir(), visitor);\n    visitor.setWriterMode(true);\n    System.out.println(\"\\n\\n========== WRITING GENERATED FILES ==========\");\n    Files.walkFileTree(visitor.getSrcDir(), visitor);\n\n    System.out.println(\"\\nBUILD.bazel file generation completed successfully\\n\");\n  }", "signature": "void generateBuildFiles(ApisVisitor visitor)", "full_signature": " void generateBuildFiles(ApisVisitor visitor)", "class_method_signature": "BuildFileGenerator.generateBuildFiles(ApisVisitor visitor)", "testcase": false, "constructor": false, "invocations": ["println", "walkFileTree", "getSrcDir", "setWriterMode", "println", "walkFileTree", "getSrcDir", "println"]}, "repository": {"repo_id": 56533838, "url": "https://github.com/googleapis/gapic-generator", "stars": 143, "created": "4/18/2016 6:58:04 PM +00:00", "updates": "2020-01-24T22:28:55+00:00", "fork": "False", "license": "licensed"}}