{"test_class": {"identifier": "StreamingJobGraphGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGeneratorTest.java"}, "test_case": {"identifier": "testExecutionConfigSerialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testExecutionConfigSerialization() throws IOException, ClassNotFoundException {\n\t\tfinal long seed = System.currentTimeMillis();\n\t\tfinal Random r = new Random(seed);\n\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n\t\tStreamGraph streamingJob = new StreamGraph(env);\n\t\tStreamingJobGraphGenerator compiler = new StreamingJobGraphGenerator(streamingJob);\n\t\t\n\t\tboolean closureCleanerEnabled = r.nextBoolean(), forceAvroEnabled = r.nextBoolean(), forceKryoEnabled = r.nextBoolean(), objectReuseEnabled = r.nextBoolean(), sysoutLoggingEnabled = r.nextBoolean();\n\t\tint dop = 1 + r.nextInt(10);\n\t\t\n\t\tExecutionConfig config = streamingJob.getExecutionConfig();\n\t\tif(closureCleanerEnabled) {\n\t\t\tconfig.enableClosureCleaner();\n\t\t} else {\n\t\t\tconfig.disableClosureCleaner();\n\t\t}\n\t\tif(forceAvroEnabled) {\n\t\t\tconfig.enableForceAvro();\n\t\t} else {\n\t\t\tconfig.disableForceAvro();\n\t\t}\n\t\tif(forceKryoEnabled) {\n\t\t\tconfig.enableForceKryo();\n\t\t} else {\n\t\t\tconfig.disableForceKryo();\n\t\t}\n\t\tif(objectReuseEnabled) {\n\t\t\tconfig.enableObjectReuse();\n\t\t} else {\n\t\t\tconfig.disableObjectReuse();\n\t\t}\n\t\tif(sysoutLoggingEnabled) {\n\t\t\tconfig.enableSysoutLogging();\n\t\t} else {\n\t\t\tconfig.disableSysoutLogging();\n\t\t}\n\t\tconfig.setParallelism(dop);\n\t\t\n\t\tJobGraph jobGraph = compiler.createJobGraph();\n\t\t\n\t\tExecutionConfig executionConfig = InstantiationUtil.readObjectFromConfig(\n\t\t\t\tjobGraph.getJobConfiguration(),\n\t\t\t\tExecutionConfig.CONFIG_KEY,\n\t\t\t\tThread.currentThread().getContextClassLoader());\n\t\t\n\t\tassertNotNull(executionConfig);\n\t\t\n\t\tassertEquals(closureCleanerEnabled, executionConfig.isClosureCleanerEnabled());\n\t\tassertEquals(forceAvroEnabled, executionConfig.isForceAvroEnabled());\n\t\tassertEquals(forceKryoEnabled, executionConfig.isForceKryoEnabled());\n\t\tassertEquals(objectReuseEnabled, executionConfig.isObjectReuseEnabled());\n\t\tassertEquals(sysoutLoggingEnabled, executionConfig.isSysoutLoggingEnabled());\n\t\tassertEquals(dop, executionConfig.getParallelism());\n\t}", "signature": "void testExecutionConfigSerialization()", "full_signature": "@Test public void testExecutionConfigSerialization()", "class_method_signature": "StreamingJobGraphGeneratorTest.testExecutionConfigSerialization()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "getExecutionEnvironment", "nextBoolean", "nextBoolean", "nextBoolean", "nextBoolean", "nextBoolean", "nextInt", "getExecutionConfig", "enableClosureCleaner", "disableClosureCleaner", "enableForceAvro", "disableForceAvro", "enableForceKryo", "disableForceKryo", "enableObjectReuse", "disableObjectReuse", "enableSysoutLogging", "disableSysoutLogging", "setParallelism", "createJobGraph", "readObjectFromConfig", "getJobConfiguration", "getContextClassLoader", "currentThread", "assertNotNull", "assertEquals", "isClosureCleanerEnabled", "assertEquals", "isForceAvroEnabled", "assertEquals", "isForceKryoEnabled", "assertEquals", "isObjectReuseEnabled", "assertEquals", "isSysoutLoggingEnabled", "assertEquals", "getParallelism"]}, "focal_class": {"identifier": "StreamingJobGraphGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(StreamingJobGraphGenerator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(StreamingJobGraphGenerator.class)", "var_name": "LOG"}, {"original_string": "private static final long DEFAULT_RESTART_DELAY = 10000L;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_RESTART_DELAY = 10000L", "var_name": "DEFAULT_RESTART_DELAY"}, {"original_string": "private StreamGraph streamGraph;", "modifier": "private", "type": "StreamGraph", "declarator": "streamGraph", "var_name": "streamGraph"}, {"original_string": "private Map<Integer, JobVertex> jobVertices;", "modifier": "private", "type": "Map<Integer, JobVertex>", "declarator": "jobVertices", "var_name": "jobVertices"}, {"original_string": "private JobGraph jobGraph;", "modifier": "private", "type": "JobGraph", "declarator": "jobGraph", "var_name": "jobGraph"}, {"original_string": "private Collection<Integer> builtVertices;", "modifier": "private", "type": "Collection<Integer>", "declarator": "builtVertices", "var_name": "builtVertices"}, {"original_string": "private List<StreamEdge> physicalEdgesInOrder;", "modifier": "private", "type": "List<StreamEdge>", "declarator": "physicalEdgesInOrder", "var_name": "physicalEdgesInOrder"}, {"original_string": "private Map<Integer, Map<Integer, StreamConfig>> chainedConfigs;", "modifier": "private", "type": "Map<Integer, Map<Integer, StreamConfig>>", "declarator": "chainedConfigs", "var_name": "chainedConfigs"}, {"original_string": "private Map<Integer, StreamConfig> vertexConfigs;", "modifier": "private", "type": "Map<Integer, StreamConfig>", "declarator": "vertexConfigs", "var_name": "vertexConfigs"}, {"original_string": "private Map<Integer, String> chainedNames;", "modifier": "private", "type": "Map<Integer, String>", "declarator": "chainedNames", "var_name": "chainedNames"}], "methods": [{"identifier": "StreamingJobGraphGenerator", "parameters": "(StreamGraph streamGraph)", "modifiers": "public", "return": "", "signature": " StreamingJobGraphGenerator(StreamGraph streamGraph)", "full_signature": "public  StreamingJobGraphGenerator(StreamGraph streamGraph)", "class_method_signature": "StreamingJobGraphGenerator.StreamingJobGraphGenerator(StreamGraph streamGraph)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "StreamingJobGraphGenerator.init()", "testcase": false, "constructor": false}, {"identifier": "createJobGraph", "parameters": "()", "modifiers": "public", "return": "JobGraph", "signature": "JobGraph createJobGraph()", "full_signature": "public JobGraph createJobGraph()", "class_method_signature": "StreamingJobGraphGenerator.createJobGraph()", "testcase": false, "constructor": false}, {"identifier": "setPhysicalEdges", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setPhysicalEdges()", "full_signature": "private void setPhysicalEdges()", "class_method_signature": "StreamingJobGraphGenerator.setPhysicalEdges()", "testcase": false, "constructor": false}, {"identifier": "setChaining", "parameters": "(Map<Integer, byte[]> hashes)", "modifiers": "private", "return": "void", "signature": "void setChaining(Map<Integer, byte[]> hashes)", "full_signature": "private void setChaining(Map<Integer, byte[]> hashes)", "class_method_signature": "StreamingJobGraphGenerator.setChaining(Map<Integer, byte[]> hashes)", "testcase": false, "constructor": false}, {"identifier": "createChain", "parameters": "(\n\t\t\tInteger startNodeId,\n\t\t\tInteger currentNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "modifiers": "private", "return": "List<StreamEdge>", "signature": "List<StreamEdge> createChain(\n\t\t\tInteger startNodeId,\n\t\t\tInteger currentNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "full_signature": "private List<StreamEdge> createChain(\n\t\t\tInteger startNodeId,\n\t\t\tInteger currentNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "class_method_signature": "StreamingJobGraphGenerator.createChain(\n\t\t\tInteger startNodeId,\n\t\t\tInteger currentNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "testcase": false, "constructor": false}, {"identifier": "createChainedName", "parameters": "(Integer vertexID, List<StreamEdge> chainedOutputs)", "modifiers": "private", "return": "String", "signature": "String createChainedName(Integer vertexID, List<StreamEdge> chainedOutputs)", "full_signature": "private String createChainedName(Integer vertexID, List<StreamEdge> chainedOutputs)", "class_method_signature": "StreamingJobGraphGenerator.createChainedName(Integer vertexID, List<StreamEdge> chainedOutputs)", "testcase": false, "constructor": false}, {"identifier": "createJobVertex", "parameters": "(\n\t\t\tInteger streamNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "modifiers": "private", "return": "StreamConfig", "signature": "StreamConfig createJobVertex(\n\t\t\tInteger streamNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "full_signature": "private StreamConfig createJobVertex(\n\t\t\tInteger streamNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "class_method_signature": "StreamingJobGraphGenerator.createJobVertex(\n\t\t\tInteger streamNodeId,\n\t\t\tMap<Integer, byte[]> hashes)", "testcase": false, "constructor": false}, {"identifier": "setVertexConfig", "parameters": "(Integer vertexID, StreamConfig config,\n\t\t\tList<StreamEdge> chainableOutputs, List<StreamEdge> nonChainableOutputs)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void setVertexConfig(Integer vertexID, StreamConfig config,\n\t\t\tList<StreamEdge> chainableOutputs, List<StreamEdge> nonChainableOutputs)", "full_signature": "@SuppressWarnings(\"unchecked\") private void setVertexConfig(Integer vertexID, StreamConfig config,\n\t\t\tList<StreamEdge> chainableOutputs, List<StreamEdge> nonChainableOutputs)", "class_method_signature": "StreamingJobGraphGenerator.setVertexConfig(Integer vertexID, StreamConfig config,\n\t\t\tList<StreamEdge> chainableOutputs, List<StreamEdge> nonChainableOutputs)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(Integer headOfChain, StreamEdge edge)", "modifiers": "private", "return": "void", "signature": "void connect(Integer headOfChain, StreamEdge edge)", "full_signature": "private void connect(Integer headOfChain, StreamEdge edge)", "class_method_signature": "StreamingJobGraphGenerator.connect(Integer headOfChain, StreamEdge edge)", "testcase": false, "constructor": false}, {"identifier": "isChainable", "parameters": "(StreamEdge edge)", "modifiers": "private", "return": "boolean", "signature": "boolean isChainable(StreamEdge edge)", "full_signature": "private boolean isChainable(StreamEdge edge)", "class_method_signature": "StreamingJobGraphGenerator.isChainable(StreamEdge edge)", "testcase": false, "constructor": false}, {"identifier": "setSlotSharing", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setSlotSharing()", "full_signature": "private void setSlotSharing()", "class_method_signature": "StreamingJobGraphGenerator.setSlotSharing()", "testcase": false, "constructor": false}, {"identifier": "configureCheckpointing", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void configureCheckpointing()", "full_signature": "private void configureCheckpointing()", "class_method_signature": "StreamingJobGraphGenerator.configureCheckpointing()", "testcase": false, "constructor": false}, {"identifier": "configureRestartStrategy", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void configureRestartStrategy()", "full_signature": "private void configureRestartStrategy()", "class_method_signature": "StreamingJobGraphGenerator.configureRestartStrategy()", "testcase": false, "constructor": false}, {"identifier": "traverseStreamGraphAndGenerateHashes", "parameters": "()", "modifiers": "private", "return": "Map<Integer, byte[]>", "signature": "Map<Integer, byte[]> traverseStreamGraphAndGenerateHashes()", "full_signature": "private Map<Integer, byte[]> traverseStreamGraphAndGenerateHashes()", "class_method_signature": "StreamingJobGraphGenerator.traverseStreamGraphAndGenerateHashes()", "testcase": false, "constructor": false}, {"identifier": "generateNodeHash", "parameters": "(\n\t\t\tStreamNode node,\n\t\t\tHashFunction hashFunction,\n\t\t\tMap<Integer, byte[]> hashes)", "modifiers": "private", "return": "boolean", "signature": "boolean generateNodeHash(\n\t\t\tStreamNode node,\n\t\t\tHashFunction hashFunction,\n\t\t\tMap<Integer, byte[]> hashes)", "full_signature": "private boolean generateNodeHash(\n\t\t\tStreamNode node,\n\t\t\tHashFunction hashFunction,\n\t\t\tMap<Integer, byte[]> hashes)", "class_method_signature": "StreamingJobGraphGenerator.generateNodeHash(\n\t\t\tStreamNode node,\n\t\t\tHashFunction hashFunction,\n\t\t\tMap<Integer, byte[]> hashes)", "testcase": false, "constructor": false}, {"identifier": "generateUserSpecifiedHash", "parameters": "(StreamNode node, Hasher hasher)", "modifiers": "private", "return": "byte[]", "signature": "byte[] generateUserSpecifiedHash(StreamNode node, Hasher hasher)", "full_signature": "private byte[] generateUserSpecifiedHash(StreamNode node, Hasher hasher)", "class_method_signature": "StreamingJobGraphGenerator.generateUserSpecifiedHash(StreamNode node, Hasher hasher)", "testcase": false, "constructor": false}, {"identifier": "generateDeterministicHash", "parameters": "(\n\t\t\tStreamNode node,\n\t\t\tHasher hasher,\n\t\t\tMap<Integer, byte[]> hashes)", "modifiers": "private", "return": "byte[]", "signature": "byte[] generateDeterministicHash(\n\t\t\tStreamNode node,\n\t\t\tHasher hasher,\n\t\t\tMap<Integer, byte[]> hashes)", "full_signature": "private byte[] generateDeterministicHash(\n\t\t\tStreamNode node,\n\t\t\tHasher hasher,\n\t\t\tMap<Integer, byte[]> hashes)", "class_method_signature": "StreamingJobGraphGenerator.generateDeterministicHash(\n\t\t\tStreamNode node,\n\t\t\tHasher hasher,\n\t\t\tMap<Integer, byte[]> hashes)", "testcase": false, "constructor": false}, {"identifier": "generateNodeLocalHash", "parameters": "(StreamNode node, Hasher hasher, int id)", "modifiers": "private", "return": "void", "signature": "void generateNodeLocalHash(StreamNode node, Hasher hasher, int id)", "full_signature": "private void generateNodeLocalHash(StreamNode node, Hasher hasher, int id)", "class_method_signature": "StreamingJobGraphGenerator.generateNodeLocalHash(StreamNode node, Hasher hasher, int id)", "testcase": false, "constructor": false}], "file": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java"}, "focal_method": {"identifier": "createJobGraph", "parameters": "()", "modifiers": "public", "return": "JobGraph", "body": "public JobGraph createJobGraph() {\n\t\tjobGraph = new JobGraph(streamGraph.getJobName());\n\n\t\t// make sure that all vertices start immediately\n\t\tjobGraph.setScheduleMode(ScheduleMode.ALL);\n\n\t\tinit();\n\n\t\t// Generate deterministic hashes for the nodes in order to identify them across\n\t\t// submission iff they didn't change.\n\t\tMap<Integer, byte[]> hashes = traverseStreamGraphAndGenerateHashes();\n\n\t\tsetChaining(hashes);\n\n\t\tsetPhysicalEdges();\n\n\t\tsetSlotSharing();\n\t\t\n\t\tconfigureCheckpointing();\n\n\t\tconfigureRestartStrategy();\n\n\t\ttry {\n\t\t\tInstantiationUtil.writeObjectToConfig(this.streamGraph.getExecutionConfig(), this.jobGraph.getJobConfiguration(), ExecutionConfig.CONFIG_KEY);\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"Config object could not be written to Job Configuration: \", e);\n\t\t}\n\t\t\n\t\treturn jobGraph;\n\t}", "signature": "JobGraph createJobGraph()", "full_signature": "public JobGraph createJobGraph()", "class_method_signature": "StreamingJobGraphGenerator.createJobGraph()", "testcase": false, "constructor": false, "invocations": ["getJobName", "setScheduleMode", "init", "traverseStreamGraphAndGenerateHashes", "setChaining", "setPhysicalEdges", "setSlotSharing", "configureCheckpointing", "configureRestartStrategy", "writeObjectToConfig", "getExecutionConfig", "getJobConfiguration"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}