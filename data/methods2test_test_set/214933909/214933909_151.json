{"test_class": {"identifier": "SelectEntityServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SelectEntityService selectEntityService;", "modifier": "@Mock\n    private", "type": "SelectEntityService", "declarator": "selectEntityService", "var_name": "selectEntityService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/SelectEntityServiceTest.java"}, "test_case": {"identifier": "findSelectEntityPageListTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findSelectEntityPageListTest() throws SQLException {\n        Paging<TaskSql> paging = new Paging<>();\n        paging.setData(new TaskSql());\n        Assert.assertTrue(selectEntityService.findSelectEntityPageList(paging).getList().size() > 0);\n    }", "signature": "void findSelectEntityPageListTest()", "full_signature": "@Test public void findSelectEntityPageListTest()", "class_method_signature": "SelectEntityServiceTest.findSelectEntityPageListTest()", "testcase": true, "constructor": false, "invocations": ["setData", "assertTrue", "size", "getList", "findSelectEntityPageList"]}, "focal_class": {"identifier": "SelectEntityService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private SelectEntityDao selectEntityDao;", "modifier": "@Autowired\n    private", "type": "SelectEntityDao", "declarator": "selectEntityDao", "var_name": "selectEntityDao"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, TaskSql taskSql, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, TaskSql taskSql, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, TaskSql taskSql, Errors errors)", "class_method_signature": "SelectEntityService.validatePermision(LoginUser user, TaskSql taskSql, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validatePermision", "parameters": "(Long projectId, Long userId)", "modifiers": "private", "return": "boolean", "signature": "boolean validatePermision(Long projectId, Long userId)", "full_signature": "private boolean validatePermision(Long projectId, Long userId)", "class_method_signature": "SelectEntityService.validatePermision(Long projectId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "findSelectEntityPageList", "parameters": "(Paging<TaskSql> paging)", "modifiers": "public", "return": "ListResult<TaskSqlView>", "signature": "ListResult<TaskSqlView> findSelectEntityPageList(Paging<TaskSql> paging)", "full_signature": "public ListResult<TaskSqlView> findSelectEntityPageList(Paging<TaskSql> paging)", "class_method_signature": "SelectEntityService.findSelectEntityPageList(Paging<TaskSql> paging)", "testcase": false, "constructor": false}, {"identifier": "insertTask", "parameters": "(TaskSql task, LoginUser user)", "modifiers": "public", "return": "Long", "signature": "Long insertTask(TaskSql task, LoginUser user)", "full_signature": "public Long insertTask(TaskSql task, LoginUser user)", "class_method_signature": "SelectEntityService.insertTask(TaskSql task, LoginUser user)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/SelectEntityService.java"}, "focal_method": {"identifier": "findSelectEntityPageList", "parameters": "(Paging<TaskSql> paging)", "modifiers": "public", "return": "ListResult<TaskSqlView>", "body": "public ListResult<TaskSqlView> findSelectEntityPageList(Paging<TaskSql> paging) throws SQLException {\n        Long count = selectEntityDao.getSelectEntityTotalCount(paging);\n        return PagerUtil.find(count, paging.getPage(), paging.getPageSize(), () -> {\n            List<TaskSqlView> list = selectEntityDao.findSelectEntityPageList(paging);\n            if (CollectionUtils.isEmpty(list)) {\n                return Collections.emptyList();\n            }\n            return list;\n        });\n    }", "signature": "ListResult<TaskSqlView> findSelectEntityPageList(Paging<TaskSql> paging)", "full_signature": "public ListResult<TaskSqlView> findSelectEntityPageList(Paging<TaskSql> paging)", "class_method_signature": "SelectEntityService.findSelectEntityPageList(Paging<TaskSql> paging)", "testcase": false, "constructor": false, "invocations": ["getSelectEntityTotalCount", "find", "getPage", "getPageSize", "findSelectEntityPageList", "isEmpty", "emptyList"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}