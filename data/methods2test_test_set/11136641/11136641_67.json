{"test_class": {"identifier": "DefaultTempEntryRenamingStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/support/DefaultTempEntryRenamingStrategyTest.java"}, "test_case": {"identifier": "testGetTemporaryName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTemporaryName() {\n        LdapName expectedOriginalName = LdapUtils.newLdapName(\n                \"cn=john doe, ou=somecompany, c=SE\");\n        DefaultTempEntryRenamingStrategy tested = new DefaultTempEntryRenamingStrategy();\n\n        Name result = tested.getTemporaryName(expectedOriginalName);\n        assertThat(result.toString()).isEqualTo(\"cn=john doe_temp,ou=somecompany,c=SE\");\n        assertThat(result).isNotSameAs(expectedOriginalName);\n    }", "signature": "void testGetTemporaryName()", "full_signature": "@Test public void testGetTemporaryName()", "class_method_signature": "DefaultTempEntryRenamingStrategyTest.testGetTemporaryName()", "testcase": true, "constructor": false, "invocations": ["newLdapName", "getTemporaryName", "isEqualTo", "assertThat", "toString", "isNotSameAs", "assertThat"]}, "focal_class": {"identifier": "DefaultTempEntryRenamingStrategy", "superclass": "", "interfaces": "implements\n        TempEntryRenamingStrategy", "fields": [{"original_string": "public static final String DEFAULT_TEMP_SUFFIX = \"_temp\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_TEMP_SUFFIX = \"_temp\"", "var_name": "DEFAULT_TEMP_SUFFIX"}, {"original_string": "private String tempSuffix = DEFAULT_TEMP_SUFFIX;", "modifier": "private", "type": "String", "declarator": "tempSuffix = DEFAULT_TEMP_SUFFIX", "var_name": "tempSuffix"}], "methods": [{"identifier": "getTemporaryName", "parameters": "(Name originalName)", "modifiers": "public", "return": "Name", "signature": "Name getTemporaryName(Name originalName)", "full_signature": "public Name getTemporaryName(Name originalName)", "class_method_signature": "DefaultTempEntryRenamingStrategy.getTemporaryName(Name originalName)", "testcase": false, "constructor": false}, {"identifier": "getTempSuffix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTempSuffix()", "full_signature": "public String getTempSuffix()", "class_method_signature": "DefaultTempEntryRenamingStrategy.getTempSuffix()", "testcase": false, "constructor": false}, {"identifier": "setTempSuffix", "parameters": "(String tempSuffix)", "modifiers": "public", "return": "void", "signature": "void setTempSuffix(String tempSuffix)", "full_signature": "public void setTempSuffix(String tempSuffix)", "class_method_signature": "DefaultTempEntryRenamingStrategy.setTempSuffix(String tempSuffix)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/support/DefaultTempEntryRenamingStrategy.java"}, "focal_method": {"identifier": "getTemporaryName", "parameters": "(Name originalName)", "modifiers": "public", "return": "Name", "body": "public Name getTemporaryName(Name originalName) {\n        LdapName temporaryName = LdapUtils.newLdapName(originalName);\n\n        // Add tempSuffix to the leaf node name.\n        try {\n            String leafNode = (String) temporaryName.remove(temporaryName.size() - 1);\n            temporaryName.add(new Rdn(leafNode  + tempSuffix));\n        } catch (InvalidNameException e) {\n            throw new org.springframework.ldap.InvalidNameException(e);\n        }\n\n        return temporaryName;\n    }", "signature": "Name getTemporaryName(Name originalName)", "full_signature": "public Name getTemporaryName(Name originalName)", "class_method_signature": "DefaultTempEntryRenamingStrategy.getTemporaryName(Name originalName)", "testcase": false, "constructor": false, "invocations": ["newLdapName", "remove", "size", "add"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}