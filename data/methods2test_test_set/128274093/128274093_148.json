{"test_class": {"identifier": "UnicastProcessorTest", "superclass": "extends FlowableProcessorTest<Object>", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/processors/UnicastProcessorTest.java"}, "test_case": {"identifier": "unicastSubscriptionBadRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unicastSubscriptionBadRequest() {\n        UnicastProcessor<Integer> us = UnicastProcessor.create(false);\n\n        UnicastProcessor<Integer>.UnicastQueueSubscription usc = us.new UnicastQueueSubscription();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            usc.request(-1);\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }", "signature": "void unicastSubscriptionBadRequest()", "full_signature": "@Test public void unicastSubscriptionBadRequest()", "class_method_signature": "UnicastProcessorTest.unicastSubscriptionBadRequest()", "testcase": true, "constructor": false, "invocations": ["create", "trackPluginErrors", "request", "assertError", "reset"]}, "focal_class": {"identifier": "UnicastProcessor", "superclass": "extends FlowableProcessor<T>", "interfaces": "", "fields": [{"original_string": "final SpscLinkedArrayQueue<T> queue;", "modifier": "final", "type": "SpscLinkedArrayQueue<T>", "declarator": "queue", "var_name": "queue"}, {"original_string": "final AtomicReference<Runnable> onTerminate;", "modifier": "final", "type": "AtomicReference<Runnable>", "declarator": "onTerminate", "var_name": "onTerminate"}, {"original_string": "final boolean delayError;", "modifier": "final", "type": "boolean", "declarator": "delayError", "var_name": "delayError"}, {"original_string": "volatile boolean done;", "modifier": "volatile", "type": "boolean", "declarator": "done", "var_name": "done"}, {"original_string": "Throwable error;", "modifier": "", "type": "Throwable", "declarator": "error", "var_name": "error"}, {"original_string": "final AtomicReference<Subscriber<? super T>> actual;", "modifier": "final", "type": "AtomicReference<Subscriber<? super T>>", "declarator": "actual", "var_name": "actual"}, {"original_string": "volatile boolean cancelled;", "modifier": "volatile", "type": "boolean", "declarator": "cancelled", "var_name": "cancelled"}, {"original_string": "final AtomicBoolean once;", "modifier": "final", "type": "AtomicBoolean", "declarator": "once", "var_name": "once"}, {"original_string": "final BasicIntQueueSubscription<T> wip;", "modifier": "final", "type": "BasicIntQueueSubscription<T>", "declarator": "wip", "var_name": "wip"}, {"original_string": "final AtomicLong requested;", "modifier": "final", "type": "AtomicLong", "declarator": "requested", "var_name": "requested"}, {"original_string": "boolean enableOperatorFusion;", "modifier": "", "type": "boolean", "declarator": "enableOperatorFusion", "var_name": "enableOperatorFusion"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastProcessor<T>", "signature": "UnicastProcessor<T> create()", "full_signature": "@CheckReturnValue @NonNull public static UnicastProcessor<T> create()", "class_method_signature": "UnicastProcessor.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint)", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastProcessor<T>", "signature": "UnicastProcessor<T> create(int capacityHint)", "full_signature": "@CheckReturnValue @NonNull public static UnicastProcessor<T> create(int capacityHint)", "class_method_signature": "UnicastProcessor.create(int capacityHint)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(boolean delayError)", "modifiers": "@CheckReturnValue @Experimental @NonNull public static", "return": "UnicastProcessor<T>", "signature": "UnicastProcessor<T> create(boolean delayError)", "full_signature": "@CheckReturnValue @Experimental @NonNull public static UnicastProcessor<T> create(boolean delayError)", "class_method_signature": "UnicastProcessor.create(boolean delayError)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint, Runnable onCancelled)", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastProcessor<T>", "signature": "UnicastProcessor<T> create(int capacityHint, Runnable onCancelled)", "full_signature": "@CheckReturnValue @NonNull public static UnicastProcessor<T> create(int capacityHint, Runnable onCancelled)", "class_method_signature": "UnicastProcessor.create(int capacityHint, Runnable onCancelled)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint, Runnable onCancelled, boolean delayError)", "modifiers": "@CheckReturnValue @Experimental @NonNull public static", "return": "UnicastProcessor<T>", "signature": "UnicastProcessor<T> create(int capacityHint, Runnable onCancelled, boolean delayError)", "full_signature": "@CheckReturnValue @Experimental @NonNull public static UnicastProcessor<T> create(int capacityHint, Runnable onCancelled, boolean delayError)", "class_method_signature": "UnicastProcessor.create(int capacityHint, Runnable onCancelled, boolean delayError)", "testcase": false, "constructor": false}, {"identifier": "UnicastProcessor", "parameters": "(int capacityHint)", "modifiers": "", "return": "", "signature": " UnicastProcessor(int capacityHint)", "full_signature": "  UnicastProcessor(int capacityHint)", "class_method_signature": "UnicastProcessor.UnicastProcessor(int capacityHint)", "testcase": false, "constructor": true}, {"identifier": "UnicastProcessor", "parameters": "(int capacityHint, Runnable onTerminate)", "modifiers": "", "return": "", "signature": " UnicastProcessor(int capacityHint, Runnable onTerminate)", "full_signature": "  UnicastProcessor(int capacityHint, Runnable onTerminate)", "class_method_signature": "UnicastProcessor.UnicastProcessor(int capacityHint, Runnable onTerminate)", "testcase": false, "constructor": true}, {"identifier": "UnicastProcessor", "parameters": "(int capacityHint, Runnable onTerminate, boolean delayError)", "modifiers": "", "return": "", "signature": " UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError)", "full_signature": "  UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError)", "class_method_signature": "UnicastProcessor.UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError)", "testcase": false, "constructor": true}, {"identifier": "doTerminate", "parameters": "()", "modifiers": "", "return": "void", "signature": "void doTerminate()", "full_signature": " void doTerminate()", "class_method_signature": "UnicastProcessor.doTerminate()", "testcase": false, "constructor": false}, {"identifier": "drainRegular", "parameters": "(Subscriber<? super T> a)", "modifiers": "", "return": "void", "signature": "void drainRegular(Subscriber<? super T> a)", "full_signature": " void drainRegular(Subscriber<? super T> a)", "class_method_signature": "UnicastProcessor.drainRegular(Subscriber<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "drainFused", "parameters": "(Subscriber<? super T> a)", "modifiers": "", "return": "void", "signature": "void drainFused(Subscriber<? super T> a)", "full_signature": " void drainFused(Subscriber<? super T> a)", "class_method_signature": "UnicastProcessor.drainFused(Subscriber<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "drain", "parameters": "()", "modifiers": "", "return": "void", "signature": "void drain()", "full_signature": " void drain()", "class_method_signature": "UnicastProcessor.drain()", "testcase": false, "constructor": false}, {"identifier": "checkTerminated", "parameters": "(boolean failFast, boolean d, boolean empty, Subscriber<? super T> a, SpscLinkedArrayQueue<T> q)", "modifiers": "", "return": "boolean", "signature": "boolean checkTerminated(boolean failFast, boolean d, boolean empty, Subscriber<? super T> a, SpscLinkedArrayQueue<T> q)", "full_signature": " boolean checkTerminated(boolean failFast, boolean d, boolean empty, Subscriber<? super T> a, SpscLinkedArrayQueue<T> q)", "class_method_signature": "UnicastProcessor.checkTerminated(boolean failFast, boolean d, boolean empty, Subscriber<? super T> a, SpscLinkedArrayQueue<T> q)", "testcase": false, "constructor": false}, {"identifier": "onSubscribe", "parameters": "(Subscription s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Subscription s)", "full_signature": "@Override public void onSubscribe(Subscription s)", "class_method_signature": "UnicastProcessor.onSubscribe(Subscription s)", "testcase": false, "constructor": false}, {"identifier": "onNext", "parameters": "(T t)", "modifiers": "@Override public", "return": "void", "signature": "void onNext(T t)", "full_signature": "@Override public void onNext(T t)", "class_method_signature": "UnicastProcessor.onNext(T t)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "UnicastProcessor.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "UnicastProcessor.onComplete()", "testcase": false, "constructor": false}, {"identifier": "subscribeActual", "parameters": "(Subscriber<? super T> s)", "modifiers": "@Override protected", "return": "void", "signature": "void subscribeActual(Subscriber<? super T> s)", "full_signature": "@Override protected void subscribeActual(Subscriber<? super T> s)", "class_method_signature": "UnicastProcessor.subscribeActual(Subscriber<? super T> s)", "testcase": false, "constructor": false}, {"identifier": "hasSubscribers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasSubscribers()", "full_signature": "@Override public boolean hasSubscribers()", "class_method_signature": "UnicastProcessor.hasSubscribers()", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "@Override @Nullable public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "@Override @Nullable public Throwable getThrowable()", "class_method_signature": "UnicastProcessor.getThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasComplete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasComplete()", "full_signature": "@Override public boolean hasComplete()", "class_method_signature": "UnicastProcessor.hasComplete()", "testcase": false, "constructor": false}, {"identifier": "hasThrowable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasThrowable()", "full_signature": "@Override public boolean hasThrowable()", "class_method_signature": "UnicastProcessor.hasThrowable()", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/processors/UnicastProcessor.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastProcessor<T>", "body": "@CheckReturnValue\n    @NonNull\n    public static <T> UnicastProcessor<T> create() {\n        return new UnicastProcessor<T>(bufferSize());\n    }", "signature": "UnicastProcessor<T> create()", "full_signature": "@CheckReturnValue @NonNull public static UnicastProcessor<T> create()", "class_method_signature": "UnicastProcessor.create()", "testcase": false, "constructor": false, "invocations": ["bufferSize"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}