{"test_class": {"identifier": "HeaderFormatterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ParameterList parameterMap;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "parameterMap", "var_name": "parameterMap"}, {"original_string": "private HeaderFormatter underTest;", "modifier": "private", "type": "HeaderFormatter", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/response/formatter/HeaderFormatterTest.java"}, "test_case": {"identifier": "testFormatterDoesNothingWhenParameterIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormatterDoesNothingWhenParameterIsNull() {\n        //GIVEN\n        //setup\n        //WHEN\n        underTest.formatResponse(request, response, null, parameterMap);\n        //THEN\n        verifyZeroInteractions(request);\n        verifyZeroInteractions(response);\n    }", "signature": "void testFormatterDoesNothingWhenParameterIsNull()", "full_signature": "@Test public void testFormatterDoesNothingWhenParameterIsNull()", "class_method_signature": "HeaderFormatterTest.testFormatterDoesNothingWhenParameterIsNull()", "testcase": true, "constructor": false, "invocations": ["formatResponse", "verifyZeroInteractions", "verifyZeroInteractions"]}, "focal_class": {"identifier": "HeaderFormatter", "superclass": "", "interfaces": "implements ResponseFormatter", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(HeaderFormatter.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HeaderFormatter.class)", "var_name": "logger"}], "methods": [{"identifier": "formatResponse", "parameters": "(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "full_signature": "@Override public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "class_method_signature": "HeaderFormatter.formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/response/formatter/HeaderFormatter.java"}, "focal_method": {"identifier": "formatResponse", "parameters": "(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params) {\n        //we add/update headers based on params\n        for (Parameter p : params.getAllParameters()) {\n            String name = p.getName();\n            String value = p.getValue();\n            if (name != null && name.length() > 0 && value != null && value.length() > 0) {\n                if (resp.containsHeader(name)) {\n                    resp.setHeader(name, value);\n                } else {\n                    resp.addHeader(name, value);\n                }\n            } else {\n                logger.warn(\"Template Formatter issue: specified parameters cannot be used in header: \" + p.toString());\n            }\n        }\n        //we don't touch the body part\n        return responseResource;\n    }", "signature": "byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "full_signature": "@Override public byte[] formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "class_method_signature": "HeaderFormatter.formatResponse(WilmaHttpRequest wilmaRequest, HttpServletResponse resp, byte[] responseResource, ParameterList params)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "getName", "getValue", "length", "length", "containsHeader", "setHeader", "addHeader", "warn", "toString"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}