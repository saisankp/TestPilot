{"test_class": {"identifier": "ObjectValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/api/src/test/java/org/apache/tamaya/spi/ObjectValueTest.java"}, "test_case": {"identifier": "toObjectValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toObjectValue() {\n        ObjectValue ov = PropertyValue.createObject(\"foo\");\n        ov.addList(\"list\");\n        ObjectValue ov2 = ov.toObjectValue();\n        assertThat(ov == ov2).isTrue();\n    }", "signature": "void toObjectValue()", "full_signature": "@Test public void toObjectValue()", "class_method_signature": "ObjectValueTest.toObjectValue()", "testcase": true, "constructor": false, "invocations": ["createObject", "addList", "toObjectValue", "isTrue", "assertThat"]}, "focal_class": {"identifier": "ObjectValue", "superclass": "extends PropertyValue", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private Map<String, PropertyValue> fields = new HashMap<>();", "modifier": "private", "type": "Map<String, PropertyValue>", "declarator": "fields = new HashMap<>()", "var_name": "fields"}], "methods": [{"identifier": "ObjectValue", "parameters": "( String key)", "modifiers": "", "return": "", "signature": " ObjectValue( String key)", "full_signature": "  ObjectValue( String key)", "class_method_signature": "ObjectValue.ObjectValue( String key)", "testcase": false, "constructor": true}, {"identifier": "getValueType", "parameters": "()", "modifiers": "@Override public", "return": "ValueType", "signature": "ValueType getValueType()", "full_signature": "@Override public ValueType getValueType()", "class_method_signature": "ObjectValue.getValueType()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "Collection<PropertyValue>", "signature": "Collection<PropertyValue> getValues()", "full_signature": "public Collection<PropertyValue> getValues()", "class_method_signature": "ObjectValue.getValues()", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getKeys()", "full_signature": "public Set<String> getKeys()", "class_method_signature": "ObjectValue.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getPropertyValue", "parameters": "(String name)", "modifiers": "public", "return": "PropertyValue", "signature": "PropertyValue getPropertyValue(String name)", "full_signature": "public PropertyValue getPropertyValue(String name)", "class_method_signature": "ObjectValue.getPropertyValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "ObjectValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "@Override public", "return": "PropertyValue", "signature": "PropertyValue setValue(String value)", "full_signature": "@Override public PropertyValue setValue(String value)", "class_method_signature": "ObjectValue.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getValue(String key)", "full_signature": "public String getValue(String key)", "class_method_signature": "ObjectValue.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getOrSetValue", "parameters": "(String name, Supplier<T> valueSupplier)", "modifiers": "public", "return": "T", "signature": "T getOrSetValue(String name, Supplier<T> valueSupplier)", "full_signature": "public T getOrSetValue(String name, Supplier<T> valueSupplier)", "class_method_signature": "ObjectValue.getOrSetValue(String name, Supplier<T> valueSupplier)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSize()", "full_signature": "@Override public int getSize()", "class_method_signature": "ObjectValue.getSize()", "testcase": false, "constructor": false}, {"identifier": "setValues", "parameters": "(Map<String, String> config)", "modifiers": "public", "return": "ObjectValue", "signature": "ObjectValue setValues(Map<String, String> config)", "full_signature": "public ObjectValue setValues(Map<String, String> config)", "class_method_signature": "ObjectValue.setValues(Map<String, String> config)", "testcase": false, "constructor": false}, {"identifier": "setValues", "parameters": "(Map<String, String> config, String source, boolean overwriteExisting)", "modifiers": "public", "return": "ObjectValue", "signature": "ObjectValue setValues(Map<String, String> config, String source, boolean overwriteExisting)", "full_signature": "public ObjectValue setValues(Map<String, String> config, String source, boolean overwriteExisting)", "class_method_signature": "ObjectValue.setValues(Map<String, String> config, String source, boolean overwriteExisting)", "testcase": false, "constructor": false}, {"identifier": "toObjectValue", "parameters": "()", "modifiers": "@Override public", "return": "ObjectValue", "signature": "ObjectValue toObjectValue()", "full_signature": "@Override public ObjectValue toObjectValue()", "class_method_signature": "ObjectValue.toObjectValue()", "testcase": false, "constructor": false}, {"identifier": "toListValue", "parameters": "()", "modifiers": "@Override public", "return": "ListValue", "signature": "ListValue toListValue()", "full_signature": "@Override public ListValue toListValue()", "class_method_signature": "ObjectValue.toListValue()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<PropertyValue>", "signature": "Iterator<PropertyValue> iterator()", "full_signature": "@Override public Iterator<PropertyValue> iterator()", "class_method_signature": "ObjectValue.iterator()", "testcase": false, "constructor": false}, {"identifier": "setPropertyValue", "parameters": "(PropertyValue value)", "modifiers": "protected", "return": "ObjectValue", "signature": "ObjectValue setPropertyValue(PropertyValue value)", "full_signature": "protected ObjectValue setPropertyValue(PropertyValue value)", "class_method_signature": "ObjectValue.setPropertyValue(PropertyValue value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String k, String v)", "modifiers": "public", "return": "ObjectValue", "signature": "ObjectValue setValue(String k, String v)", "full_signature": "public ObjectValue setValue(String k, String v)", "class_method_signature": "ObjectValue.setValue(String k, String v)", "testcase": false, "constructor": false}, {"identifier": "addList", "parameters": "(String key)", "modifiers": "public", "return": "ListValue", "signature": "ListValue addList(String key)", "full_signature": "public ListValue addList(String key)", "class_method_signature": "ObjectValue.addList(String key)", "testcase": false, "constructor": false}, {"identifier": "addObject", "parameters": "(String key)", "modifiers": "public", "return": "ObjectValue", "signature": "ObjectValue addObject(String key)", "full_signature": "public ObjectValue addObject(String key)", "class_method_signature": "ObjectValue.addObject(String key)", "testcase": false, "constructor": false}, {"identifier": "setValueWithCompositeKey", "parameters": "(String key, String value)", "modifiers": "public", "return": "PropertyValue", "signature": "PropertyValue setValueWithCompositeKey(String key, String value)", "full_signature": "public PropertyValue setValueWithCompositeKey(String key, String value)", "class_method_signature": "ObjectValue.setValueWithCompositeKey(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "setValueWithCompositeKey", "parameters": "(Map<String,String> values)", "modifiers": "public", "return": "Collection<PropertyValue>", "signature": "Collection<PropertyValue> setValueWithCompositeKey(Map<String,String> values)", "full_signature": "public Collection<PropertyValue> setValueWithCompositeKey(Map<String,String> values)", "class_method_signature": "ObjectValue.setValueWithCompositeKey(Map<String,String> values)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String,String>", "signature": "Map<String,String> toMap()", "full_signature": "@Override public Map<String,String> toMap()", "class_method_signature": "ObjectValue.toMap()", "testcase": false, "constructor": false}, {"identifier": "toLocalMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String,String>", "signature": "Map<String,String> toLocalMap()", "full_signature": "@Override public Map<String,String> toLocalMap()", "class_method_signature": "ObjectValue.toLocalMap()", "testcase": false, "constructor": false}, {"identifier": "mutable", "parameters": "()", "modifiers": "@Override public", "return": "ObjectValue", "signature": "ObjectValue mutable()", "full_signature": "@Override public ObjectValue mutable()", "class_method_signature": "ObjectValue.mutable()", "testcase": false, "constructor": false}, {"identifier": "deepClone", "parameters": "()", "modifiers": "@Override protected", "return": "ObjectValue", "signature": "ObjectValue deepClone()", "full_signature": "@Override protected ObjectValue deepClone()", "class_method_signature": "ObjectValue.deepClone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ObjectValue.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ObjectValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ObjectValue.toString()", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Collection<PropertyValue> values)", "modifiers": "public static", "return": "ObjectValue", "signature": "ObjectValue from(Collection<PropertyValue> values)", "full_signature": "public static ObjectValue from(Collection<PropertyValue> values)", "class_method_signature": "ObjectValue.from(Collection<PropertyValue> values)", "testcase": false, "constructor": false}], "file": "code/api/src/main/java/org/apache/tamaya/spi/ObjectValue.java"}, "focal_method": {"identifier": "toObjectValue", "parameters": "()", "modifiers": "@Override public", "return": "ObjectValue", "body": "@Override\n    public ObjectValue toObjectValue(){\n        return this;\n    }", "signature": "ObjectValue toObjectValue()", "full_signature": "@Override public ObjectValue toObjectValue()", "class_method_signature": "ObjectValue.toObjectValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}