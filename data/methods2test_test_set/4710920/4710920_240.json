{"test_class": {"identifier": "DefaultServiceInstanceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public DefaultServiceInstance instance;", "modifier": "public", "type": "DefaultServiceInstance", "declarator": "instance", "var_name": "instance"}], "file": "dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/DefaultServiceInstanceTest.java"}, "test_case": {"identifier": "testGetMetadata", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMetadata() {\n        assertNotNull(instance.getMetadata(METADATA_SERVICE_URLS_PROPERTY_NAME));\n        assertNotNull(instance.getMetadata(METADATA_SERVICE_URL_PARAMS_PROPERTY_NAME));\n    }", "signature": "void testGetMetadata()", "full_signature": "@Test public void testGetMetadata()", "class_method_signature": "DefaultServiceInstanceTest.testGetMetadata()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getMetadata", "assertNotNull", "getMetadata"]}, "focal_class": {"identifier": "DefaultServiceInstance", "superclass": "", "interfaces": "implements ServiceInstance", "fields": [{"original_string": "private static final long serialVersionUID = 1149677083747278100L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1149677083747278100L", "var_name": "serialVersionUID"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private String serviceName;", "modifier": "private", "type": "String", "declarator": "serviceName", "var_name": "serviceName"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private Integer port;", "modifier": "private", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "private boolean enabled;", "modifier": "private", "type": "boolean", "declarator": "enabled", "var_name": "enabled"}, {"original_string": "private boolean healthy;", "modifier": "private", "type": "boolean", "declarator": "healthy", "var_name": "healthy"}, {"original_string": "private Map<String, String> metadata = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "metadata = new HashMap<>()", "var_name": "metadata"}, {"original_string": "private transient String address;", "modifier": "private transient", "type": "String", "declarator": "address", "var_name": "address"}, {"original_string": "private transient MetadataInfo serviceMetadata;", "modifier": "private transient", "type": "MetadataInfo", "declarator": "serviceMetadata", "var_name": "serviceMetadata"}, {"original_string": "private transient Map<String, String> extendParams = new HashMap<>();", "modifier": "private transient", "type": "Map<String, String>", "declarator": "extendParams = new HashMap<>()", "var_name": "extendParams"}], "methods": [{"identifier": "DefaultServiceInstance", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultServiceInstance()", "full_signature": "public  DefaultServiceInstance()", "class_method_signature": "DefaultServiceInstance.DefaultServiceInstance()", "testcase": false, "constructor": true}, {"identifier": "DefaultServiceInstance", "parameters": "(String id, String serviceName, String host, Integer port)", "modifiers": "public", "return": "", "signature": " DefaultServiceInstance(String id, String serviceName, String host, Integer port)", "full_signature": "public  DefaultServiceInstance(String id, String serviceName, String host, Integer port)", "class_method_signature": "DefaultServiceInstance.DefaultServiceInstance(String id, String serviceName, String host, Integer port)", "testcase": false, "constructor": true}, {"identifier": "DefaultServiceInstance", "parameters": "(String serviceName, String host, Integer port)", "modifiers": "public", "return": "", "signature": " DefaultServiceInstance(String serviceName, String host, Integer port)", "full_signature": "public  DefaultServiceInstance(String serviceName, String host, Integer port)", "class_method_signature": "DefaultServiceInstance.DefaultServiceInstance(String serviceName, String host, Integer port)", "testcase": false, "constructor": true}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "DefaultServiceInstance.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "setServiceName", "parameters": "(String serviceName)", "modifiers": "public", "return": "void", "signature": "void setServiceName(String serviceName)", "full_signature": "public void setServiceName(String serviceName)", "class_method_signature": "DefaultServiceInstance.setServiceName(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(String host)", "modifiers": "public", "return": "void", "signature": "void setHost(String host)", "full_signature": "public void setHost(String host)", "class_method_signature": "DefaultServiceInstance.setHost(String host)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "DefaultServiceInstance.getId()", "testcase": false, "constructor": false}, {"identifier": "getServiceName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServiceName()", "full_signature": "@Override public String getServiceName()", "class_method_signature": "DefaultServiceInstance.getServiceName()", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHost()", "full_signature": "@Override public String getHost()", "class_method_signature": "DefaultServiceInstance.getHost()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(Integer port)", "modifiers": "public", "return": "void", "signature": "void setPort(Integer port)", "full_signature": "public void setPort(Integer port)", "class_method_signature": "DefaultServiceInstance.setPort(Integer port)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getPort()", "full_signature": "@Override public Integer getPort()", "class_method_signature": "DefaultServiceInstance.getPort()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAddress()", "full_signature": "@Override public String getAddress()", "class_method_signature": "DefaultServiceInstance.getAddress()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "(String host, int port)", "modifiers": "private static", "return": "String", "signature": "String getAddress(String host, int port)", "full_signature": "private static String getAddress(String host, int port)", "class_method_signature": "DefaultServiceInstance.getAddress(String host, int port)", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnabled()", "full_signature": "@Override public boolean isEnabled()", "class_method_signature": "DefaultServiceInstance.isEnabled()", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setEnabled(boolean enabled)", "full_signature": "public void setEnabled(boolean enabled)", "class_method_signature": "DefaultServiceInstance.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "isHealthy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isHealthy()", "full_signature": "@Override public boolean isHealthy()", "class_method_signature": "DefaultServiceInstance.isHealthy()", "testcase": false, "constructor": false}, {"identifier": "setHealthy", "parameters": "(boolean healthy)", "modifiers": "public", "return": "void", "signature": "void setHealthy(boolean healthy)", "full_signature": "public void setHealthy(boolean healthy)", "class_method_signature": "DefaultServiceInstance.setHealthy(boolean healthy)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getMetadata()", "full_signature": "@Override public Map<String, String> getMetadata()", "class_method_signature": "DefaultServiceInstance.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "getExtendParams", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getExtendParams()", "full_signature": "@Override public Map<String, String> getExtendParams()", "class_method_signature": "DefaultServiceInstance.getExtendParams()", "testcase": false, "constructor": false}, {"identifier": "getAllParams", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getAllParams()", "full_signature": "@Override public Map<String, String> getAllParams()", "class_method_signature": "DefaultServiceInstance.getAllParams()", "testcase": false, "constructor": false}, {"identifier": "setMetadata", "parameters": "(Map<String, String> metadata)", "modifiers": "public", "return": "void", "signature": "void setMetadata(Map<String, String> metadata)", "full_signature": "public void setMetadata(Map<String, String> metadata)", "class_method_signature": "DefaultServiceInstance.setMetadata(Map<String, String> metadata)", "testcase": false, "constructor": false}, {"identifier": "getServiceMetadata", "parameters": "()", "modifiers": "public", "return": "MetadataInfo", "signature": "MetadataInfo getServiceMetadata()", "full_signature": "public MetadataInfo getServiceMetadata()", "class_method_signature": "DefaultServiceInstance.getServiceMetadata()", "testcase": false, "constructor": false}, {"identifier": "setServiceMetadata", "parameters": "(MetadataInfo serviceMetadata)", "modifiers": "public", "return": "void", "signature": "void setServiceMetadata(MetadataInfo serviceMetadata)", "full_signature": "public void setServiceMetadata(MetadataInfo serviceMetadata)", "class_method_signature": "DefaultServiceInstance.setServiceMetadata(MetadataInfo serviceMetadata)", "testcase": false, "constructor": false}, {"identifier": "toURL", "parameters": "()", "modifiers": "@Override public", "return": "InstanceAddressURL", "signature": "InstanceAddressURL toURL()", "full_signature": "@Override public InstanceAddressURL toURL()", "class_method_signature": "DefaultServiceInstance.toURL()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DefaultServiceInstance.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultServiceInstance.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultServiceInstance.toString()", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/client/DefaultServiceInstance.java"}, "focal_method": {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getMetadata() {\n        return metadata;\n    }", "signature": "Map<String, String> getMetadata()", "full_signature": "@Override public Map<String, String> getMetadata()", "class_method_signature": "DefaultServiceInstance.getMetadata()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}