{"test_class": {"identifier": "MarshallingUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-ws-core/src/test/java/org/springframework/ws/support/MarshallingUtilsTest.java"}, "test_case": {"identifier": "testUnmarshal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUnmarshal() throws Exception {\n\t\tUnmarshaller unmarshallerMock = createMock(Unmarshaller.class);\n\t\tWebServiceMessage messageMock = createMock(WebServiceMessage.class);\n\n\t\tSource source = new StringSource(\"\");\n\t\tObject unmarshalled = new Object();\n\t\texpect(messageMock.getPayloadSource()).andReturn(source);\n\t\texpect(unmarshallerMock.unmarshal(source)).andReturn(unmarshalled);\n\n\t\treplay(unmarshallerMock, messageMock);\n\n\t\tObject result = MarshallingUtils.unmarshal(unmarshallerMock, messageMock);\n\t\tAssert.assertEquals(\"Invalid unmarshalled object\", unmarshalled, result);\n\n\t\tverify(unmarshallerMock, messageMock);\n\t}", "signature": "void testUnmarshal()", "full_signature": "@Test public void testUnmarshal()", "class_method_signature": "MarshallingUtilsTest.testUnmarshal()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "andReturn", "expect", "getPayloadSource", "andReturn", "expect", "unmarshal", "replay", "unmarshal", "assertEquals", "verify"]}, "focal_class": {"identifier": "MarshallingUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MarshallingUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MarshallingUtils()", "full_signature": "private  MarshallingUtils()", "class_method_signature": "MarshallingUtils.MarshallingUtils()", "testcase": false, "constructor": true}, {"identifier": "unmarshal", "parameters": "(Unmarshaller unmarshaller, WebServiceMessage message)", "modifiers": "public static", "return": "Object", "signature": "Object unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "full_signature": "public static Object unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "class_method_signature": "MarshallingUtils.unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "testcase": false, "constructor": false}, {"identifier": "marshal", "parameters": "(Marshaller marshaller, Object graph, WebServiceMessage message)", "modifiers": "public static", "return": "void", "signature": "void marshal(Marshaller marshaller, Object graph, WebServiceMessage message)", "full_signature": "public static void marshal(Marshaller marshaller, Object graph, WebServiceMessage message)", "class_method_signature": "MarshallingUtils.marshal(Marshaller marshaller, Object graph, WebServiceMessage message)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/support/MarshallingUtils.java"}, "focal_method": {"identifier": "unmarshal", "parameters": "(Unmarshaller unmarshaller, WebServiceMessage message)", "modifiers": "public static", "return": "Object", "body": "public static Object unmarshal(Unmarshaller unmarshaller, WebServiceMessage message) throws IOException {\n\t\tSource payload = message.getPayloadSource();\n\t\tif (payload == null) {\n\t\t\treturn null;\n\t\t} else if (unmarshaller instanceof MimeUnmarshaller && message instanceof MimeMessage) {\n\t\t\tMimeUnmarshaller mimeUnmarshaller = (MimeUnmarshaller) unmarshaller;\n\t\t\tMimeMessageContainer container = new MimeMessageContainer((MimeMessage) message);\n\t\t\treturn mimeUnmarshaller.unmarshal(payload, container);\n\t\t} else {\n\t\t\treturn unmarshaller.unmarshal(payload);\n\t\t}\n\t}", "signature": "Object unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "full_signature": "public static Object unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "class_method_signature": "MarshallingUtils.unmarshal(Unmarshaller unmarshaller, WebServiceMessage message)", "testcase": false, "constructor": false, "invocations": ["getPayloadSource", "unmarshal", "unmarshal"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}