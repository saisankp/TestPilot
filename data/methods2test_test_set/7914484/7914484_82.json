{"test_class": {"identifier": "SaajXmlReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SaajXmlReader saajReader;", "modifier": "private", "type": "SaajXmlReader", "declarator": "saajReader", "var_name": "saajReader"}, {"original_string": "private SOAPMessage message;", "modifier": "private", "type": "SOAPMessage", "declarator": "message", "var_name": "message"}, {"original_string": "private Transformer transformer;", "modifier": "private", "type": "Transformer", "declarator": "transformer", "var_name": "transformer"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/support/SaajXmlReaderTest.java"}, "test_case": {"identifier": "testNamespacesNoPrefixes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNamespacesNoPrefixes() throws Exception {\n\t\tsaajReader.setFeature(\"http://xml.org/sax/features/namespaces\", true);\n\t\tsaajReader.setFeature(\"http://xml.org/sax/features/namespace-prefixes\", false);\n\t\tDOMResult result = new DOMResult();\n\t\tSource source = new SAXSource(saajReader, new InputSource());\n\t\ttransformer.transform(source, result);\n\t\tDOMResult expected = new DOMResult();\n\t\ttransformer.transform(new DOMSource(message.getSOAPPart().getEnvelope()), expected);\n\t\tassertXMLEqual((Document) expected.getNode(), (Document) result.getNode());\n\t}", "signature": "void testNamespacesNoPrefixes()", "full_signature": "@Test public void testNamespacesNoPrefixes()", "class_method_signature": "SaajXmlReaderTest.testNamespacesNoPrefixes()", "testcase": true, "constructor": false, "invocations": ["setFeature", "setFeature", "transform", "transform", "getEnvelope", "getSOAPPart", "assertXMLEqual", "getNode", "getNode"]}, "focal_class": {"identifier": "SaajXmlReader", "superclass": "extends AbstractXmlReader", "interfaces": "", "fields": [{"original_string": "private static final String NAMESPACES_FEATURE_NAME = \"http://xml.org/sax/features/namespaces\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACES_FEATURE_NAME = \"http://xml.org/sax/features/namespaces\"", "var_name": "NAMESPACES_FEATURE_NAME"}, {"original_string": "private static final String NAMESPACE_PREFIXES_FEATURE_NAME = \"http://xml.org/sax/features/namespace-prefixes\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_PREFIXES_FEATURE_NAME = \"http://xml.org/sax/features/namespace-prefixes\"", "var_name": "NAMESPACE_PREFIXES_FEATURE_NAME"}, {"original_string": "private final Node startNode;", "modifier": "private final", "type": "Node", "declarator": "startNode", "var_name": "startNode"}, {"original_string": "private boolean namespacesFeature = true;", "modifier": "private", "type": "boolean", "declarator": "namespacesFeature = true", "var_name": "namespacesFeature"}, {"original_string": "private boolean namespacePrefixesFeature = false;", "modifier": "private", "type": "boolean", "declarator": "namespacePrefixesFeature = false", "var_name": "namespacePrefixesFeature"}], "methods": [{"identifier": "SaajXmlReader", "parameters": "(Node startNode)", "modifiers": "public", "return": "", "signature": " SaajXmlReader(Node startNode)", "full_signature": "public  SaajXmlReader(Node startNode)", "class_method_signature": "SaajXmlReader.SaajXmlReader(Node startNode)", "testcase": false, "constructor": true}, {"identifier": "getFeature", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFeature(String name)", "full_signature": "@Override public boolean getFeature(String name)", "class_method_signature": "SaajXmlReader.getFeature(String name)", "testcase": false, "constructor": false}, {"identifier": "setFeature", "parameters": "(String name, boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setFeature(String name, boolean value)", "full_signature": "@Override public void setFeature(String name, boolean value)", "class_method_signature": "SaajXmlReader.setFeature(String name, boolean value)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputSource ignored)", "modifiers": "@Override public final", "return": "void", "signature": "void parse(InputSource ignored)", "full_signature": "@Override public final void parse(InputSource ignored)", "class_method_signature": "SaajXmlReader.parse(InputSource ignored)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String ignored)", "modifiers": "@Override public final", "return": "void", "signature": "void parse(String ignored)", "full_signature": "@Override public final void parse(String ignored)", "class_method_signature": "SaajXmlReader.parse(String ignored)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void parse()", "full_signature": "private void parse()", "class_method_signature": "SaajXmlReader.parse()", "testcase": false, "constructor": false}, {"identifier": "handleNode", "parameters": "(Node node)", "modifiers": "private", "return": "void", "signature": "void handleNode(Node node)", "full_signature": "private void handleNode(Node node)", "class_method_signature": "SaajXmlReader.handleNode(Node node)", "testcase": false, "constructor": false}, {"identifier": "handleElement", "parameters": "(SOAPElement element)", "modifiers": "private", "return": "void", "signature": "void handleElement(SOAPElement element)", "full_signature": "private void handleElement(SOAPElement element)", "class_method_signature": "SaajXmlReader.handleElement(SOAPElement element)", "testcase": false, "constructor": false}, {"identifier": "handleText", "parameters": "(Text text)", "modifiers": "private", "return": "void", "signature": "void handleText(Text text)", "full_signature": "private void handleText(Text text)", "class_method_signature": "SaajXmlReader.handleText(Text text)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(SOAPElement element)", "modifiers": "private", "return": "Attributes", "signature": "Attributes getAttributes(SOAPElement element)", "full_signature": "private Attributes getAttributes(SOAPElement element)", "class_method_signature": "SaajXmlReader.getAttributes(SOAPElement element)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/saaj/support/SaajXmlReader.java"}, "focal_method": {"identifier": "setFeature", "parameters": "(String name, boolean value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException {\n\t\tif (NAMESPACES_FEATURE_NAME.equals(name)) {\n\t\t\tthis.namespacesFeature = value;\n\t\t} else if (NAMESPACE_PREFIXES_FEATURE_NAME.equals(name)) {\n\t\t\tthis.namespacePrefixesFeature = value;\n\t\t} else {\n\t\t\tsuper.setFeature(name, value);\n\t\t}\n\t}", "signature": "void setFeature(String name, boolean value)", "full_signature": "@Override public void setFeature(String name, boolean value)", "class_method_signature": "SaajXmlReader.setFeature(String name, boolean value)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "setFeature"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}