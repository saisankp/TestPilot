{"test_class": {"identifier": "WizardManagerHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "com/android/setupwizardlib/util/WizardManagerHelperTest.java"}, "test_case": {"identifier": "testCopyWizardManagerIntent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCopyWizardManagerIntent() {\n        Bundle wizardBundle = new Bundle();\n        wizardBundle.putString(\"foo\", \"bar\");\n        Intent originalIntent = new Intent()\n                .putExtra(WizardManagerHelper.EXTRA_THEME, \"test_theme\")\n                .putExtra(WizardManagerHelper.EXTRA_WIZARD_BUNDLE, wizardBundle)\n                .putExtra(WizardManagerHelper.EXTRA_IS_FIRST_RUN, true)\n                // Script URI and Action ID are kept for backwards compatibility\n                .putExtra(WizardManagerHelper.EXTRA_SCRIPT_URI, \"test_script_uri\")\n                .putExtra(WizardManagerHelper.EXTRA_ACTION_ID, \"test_action_id\");\n\n        Intent intent = new Intent(\"test.intent.action\");\n        WizardManagerHelper.copyWizardManagerExtras(originalIntent, intent);\n\n        assertEquals(\"Intent action should be kept\", \"test.intent.action\", intent.getAction());\n        assertEquals(\"EXTRA_THEME should be copied\",\n                \"test_theme\", intent.getStringExtra(WizardManagerHelper.EXTRA_THEME));\n        Bundle copiedWizardBundle =\n                intent.getParcelableExtra(WizardManagerHelper.EXTRA_WIZARD_BUNDLE);\n        assertEquals(\"Wizard bundle should be copied\", \"bar\", copiedWizardBundle.getString(\"foo\"));\n\n        assertTrue(\"EXTRA_IS_FIRST_RUN should be copied\",\n                intent.getBooleanExtra(WizardManagerHelper.EXTRA_IS_FIRST_RUN, false));\n\n        // Script URI and Action ID are replaced by Wizard Bundle in M, but are kept for backwards\n        // compatibility\n        assertEquals(\"EXTRA_SCRIPT_URI should be copied\",\n                \"test_script_uri\", intent.getStringExtra(WizardManagerHelper.EXTRA_SCRIPT_URI));\n        assertEquals(\"EXTRA_ACTION_ID should be copied\",\n                \"test_action_id\", intent.getStringExtra(WizardManagerHelper.EXTRA_ACTION_ID));\n    }", "signature": "void testCopyWizardManagerIntent()", "full_signature": "@Test public void testCopyWizardManagerIntent()", "class_method_signature": "WizardManagerHelperTest.testCopyWizardManagerIntent()", "testcase": true, "constructor": false, "invocations": ["putString", "putExtra", "putExtra", "putExtra", "putExtra", "putExtra", "copyWizardManagerExtras", "assertEquals", "getAction", "assertEquals", "getStringExtra", "getParcelableExtra", "assertEquals", "getString", "assertTrue", "getBooleanExtra", "assertEquals", "getStringExtra", "assertEquals", "getStringExtra"]}, "focal_class": {"identifier": "WizardManagerHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ACTION_NEXT = \"com.android.wizard.NEXT\";", "modifier": "private static final", "type": "String", "declarator": "ACTION_NEXT = \"com.android.wizard.NEXT\"", "var_name": "ACTION_NEXT"}, {"original_string": "@VisibleForTesting\n    static final String EXTRA_SCRIPT_URI = \"scriptUri\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "EXTRA_SCRIPT_URI = \"scriptUri\"", "var_name": "EXTRA_SCRIPT_URI"}, {"original_string": "@VisibleForTesting\n    static final String EXTRA_ACTION_ID = \"actionId\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "EXTRA_ACTION_ID = \"actionId\"", "var_name": "EXTRA_ACTION_ID"}, {"original_string": "@VisibleForTesting\n    static final String EXTRA_WIZARD_BUNDLE = \"wizardBundle\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "EXTRA_WIZARD_BUNDLE = \"wizardBundle\"", "var_name": "EXTRA_WIZARD_BUNDLE"}, {"original_string": "private static final String EXTRA_RESULT_CODE = \"com.android.setupwizard.ResultCode\";", "modifier": "private static final", "type": "String", "declarator": "EXTRA_RESULT_CODE = \"com.android.setupwizard.ResultCode\"", "var_name": "EXTRA_RESULT_CODE"}, {"original_string": "@VisibleForTesting\n    static final String EXTRA_IS_FIRST_RUN = \"firstRun\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "EXTRA_IS_FIRST_RUN = \"firstRun\"", "var_name": "EXTRA_IS_FIRST_RUN"}, {"original_string": "public static final String EXTRA_THEME = \"theme\";", "modifier": "public static final", "type": "String", "declarator": "EXTRA_THEME = \"theme\"", "var_name": "EXTRA_THEME"}, {"original_string": "public static final String EXTRA_USE_IMMERSIVE_MODE = \"useImmersiveMode\";", "modifier": "public static final", "type": "String", "declarator": "EXTRA_USE_IMMERSIVE_MODE = \"useImmersiveMode\"", "var_name": "EXTRA_USE_IMMERSIVE_MODE"}, {"original_string": "public static final String SETTINGS_GLOBAL_DEVICE_PROVISIONED = \"device_provisioned\";", "modifier": "public static final", "type": "String", "declarator": "SETTINGS_GLOBAL_DEVICE_PROVISIONED = \"device_provisioned\"", "var_name": "SETTINGS_GLOBAL_DEVICE_PROVISIONED"}, {"original_string": "public static final String SETTINGS_SECURE_USER_SETUP_COMPLETE = \"user_setup_complete\";", "modifier": "public static final", "type": "String", "declarator": "SETTINGS_SECURE_USER_SETUP_COMPLETE = \"user_setup_complete\"", "var_name": "SETTINGS_SECURE_USER_SETUP_COMPLETE"}, {"original_string": "public static final String THEME_HOLO = \"holo\";", "modifier": "public static final", "type": "String", "declarator": "THEME_HOLO = \"holo\"", "var_name": "THEME_HOLO"}, {"original_string": "public static final String THEME_HOLO_LIGHT = \"holo_light\";", "modifier": "public static final", "type": "String", "declarator": "THEME_HOLO_LIGHT = \"holo_light\"", "var_name": "THEME_HOLO_LIGHT"}, {"original_string": "public static final String THEME_MATERIAL = \"material\";", "modifier": "public static final", "type": "String", "declarator": "THEME_MATERIAL = \"material\"", "var_name": "THEME_MATERIAL"}, {"original_string": "public static final String THEME_MATERIAL_LIGHT = \"material_light\";", "modifier": "public static final", "type": "String", "declarator": "THEME_MATERIAL_LIGHT = \"material_light\"", "var_name": "THEME_MATERIAL_LIGHT"}, {"original_string": "public static final String THEME_GLIF = \"glif\";", "modifier": "public static final", "type": "String", "declarator": "THEME_GLIF = \"glif\"", "var_name": "THEME_GLIF"}, {"original_string": "public static final String THEME_GLIF_LIGHT = \"glif_light\";", "modifier": "public static final", "type": "String", "declarator": "THEME_GLIF_LIGHT = \"glif_light\"", "var_name": "THEME_GLIF_LIGHT"}, {"original_string": "public static final String THEME_GLIF_PIXEL = \"glif_pixel\";", "modifier": "public static final", "type": "String", "declarator": "THEME_GLIF_PIXEL = \"glif_pixel\"", "var_name": "THEME_GLIF_PIXEL"}, {"original_string": "public static final String THEME_GLIF_PIXEL_LIGHT = \"glif_pixel_light\";", "modifier": "public static final", "type": "String", "declarator": "THEME_GLIF_PIXEL_LIGHT = \"glif_pixel_light\"", "var_name": "THEME_GLIF_PIXEL_LIGHT"}], "methods": [{"identifier": "getNextIntent", "parameters": "(Intent originalIntent, int resultCode)", "modifiers": "public static", "return": "Intent", "signature": "Intent getNextIntent(Intent originalIntent, int resultCode)", "full_signature": "public static Intent getNextIntent(Intent originalIntent, int resultCode)", "class_method_signature": "WizardManagerHelper.getNextIntent(Intent originalIntent, int resultCode)", "testcase": false, "constructor": false}, {"identifier": "getNextIntent", "parameters": "(Intent originalIntent, int resultCode, Intent data)", "modifiers": "public static", "return": "Intent", "signature": "Intent getNextIntent(Intent originalIntent, int resultCode, Intent data)", "full_signature": "public static Intent getNextIntent(Intent originalIntent, int resultCode, Intent data)", "class_method_signature": "WizardManagerHelper.getNextIntent(Intent originalIntent, int resultCode, Intent data)", "testcase": false, "constructor": false}, {"identifier": "copyWizardManagerExtras", "parameters": "(Intent srcIntent, Intent dstIntent)", "modifiers": "public static", "return": "void", "signature": "void copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "full_signature": "public static void copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "class_method_signature": "WizardManagerHelper.copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "testcase": false, "constructor": false}, {"identifier": "isSetupWizardIntent", "parameters": "(Intent intent)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSetupWizardIntent(Intent intent)", "full_signature": "public static boolean isSetupWizardIntent(Intent intent)", "class_method_signature": "WizardManagerHelper.isSetupWizardIntent(Intent intent)", "testcase": false, "constructor": false}, {"identifier": "isUserSetupComplete", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean isUserSetupComplete(Context context)", "full_signature": "public static boolean isUserSetupComplete(Context context)", "class_method_signature": "WizardManagerHelper.isUserSetupComplete(Context context)", "testcase": false, "constructor": false}, {"identifier": "isDeviceProvisioned", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDeviceProvisioned(Context context)", "full_signature": "public static boolean isDeviceProvisioned(Context context)", "class_method_signature": "WizardManagerHelper.isDeviceProvisioned(Context context)", "testcase": false, "constructor": false}, {"identifier": "isLightTheme", "parameters": "(Intent intent, boolean def)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLightTheme(Intent intent, boolean def)", "full_signature": "public static boolean isLightTheme(Intent intent, boolean def)", "class_method_signature": "WizardManagerHelper.isLightTheme(Intent intent, boolean def)", "testcase": false, "constructor": false}, {"identifier": "isLightTheme", "parameters": "(String theme, boolean def)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLightTheme(String theme, boolean def)", "full_signature": "public static boolean isLightTheme(String theme, boolean def)", "class_method_signature": "WizardManagerHelper.isLightTheme(String theme, boolean def)", "testcase": false, "constructor": false}, {"identifier": "getThemeRes", "parameters": "(Intent intent, @StyleRes int defaultTheme)", "modifiers": "public static @StyleRes", "return": "int", "signature": "int getThemeRes(Intent intent, @StyleRes int defaultTheme)", "full_signature": "public static @StyleRes int getThemeRes(Intent intent, @StyleRes int defaultTheme)", "class_method_signature": "WizardManagerHelper.getThemeRes(Intent intent, @StyleRes int defaultTheme)", "testcase": false, "constructor": false}, {"identifier": "getThemeRes", "parameters": "(String theme, @StyleRes int defaultTheme)", "modifiers": "public static @StyleRes", "return": "int", "signature": "int getThemeRes(String theme, @StyleRes int defaultTheme)", "full_signature": "public static @StyleRes int getThemeRes(String theme, @StyleRes int defaultTheme)", "class_method_signature": "WizardManagerHelper.getThemeRes(String theme, @StyleRes int defaultTheme)", "testcase": false, "constructor": false}], "file": "com/android/setupwizardlib/util/WizardManagerHelper.java"}, "focal_method": {"identifier": "copyWizardManagerExtras", "parameters": "(Intent srcIntent, Intent dstIntent)", "modifiers": "public static", "return": "void", "body": "public static void copyWizardManagerExtras(Intent srcIntent, Intent dstIntent) {\n        dstIntent.putExtra(EXTRA_WIZARD_BUNDLE, srcIntent.getBundleExtra(EXTRA_WIZARD_BUNDLE));\n        dstIntent.putExtra(EXTRA_THEME, srcIntent.getStringExtra(EXTRA_THEME));\n        dstIntent.putExtra(EXTRA_IS_FIRST_RUN,\n                srcIntent.getBooleanExtra(EXTRA_IS_FIRST_RUN, false));\n        dstIntent.putExtra(EXTRA_SCRIPT_URI, srcIntent.getStringExtra(EXTRA_SCRIPT_URI));\n        dstIntent.putExtra(EXTRA_ACTION_ID, srcIntent.getStringExtra(EXTRA_ACTION_ID));\n    }", "signature": "void copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "full_signature": "public static void copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "class_method_signature": "WizardManagerHelper.copyWizardManagerExtras(Intent srcIntent, Intent dstIntent)", "testcase": false, "constructor": false, "invocations": ["putExtra", "getBundleExtra", "putExtra", "getStringExtra", "putExtra", "getBooleanExtra", "putExtra", "getStringExtra", "putExtra", "getStringExtra"]}, "repository": {"repo_id": 109116423, "url": "https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-26", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 29147, "license": "licensed"}}