{"test_class": {"identifier": "FileWriterQueueListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaHttpRequestWriter requestWriter;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequestWriter", "declarator": "requestWriter", "var_name": "requestWriter"}, {"original_string": "@Mock\n    private WilmaHttpResponseWriter responseWriter;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponseWriter", "declarator": "responseWriter", "var_name": "responseWriter"}, {"original_string": "@Mock\n    private ObjectMessage objectMessage;", "modifier": "@Mock\n    private", "type": "ObjectMessage", "declarator": "objectMessage", "var_name": "objectMessage"}, {"original_string": "@Mock\n    private Message message;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private WilmaHttpResponse response;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@InjectMocks\n    private FileWriterQueueListener underTest;", "modifier": "@InjectMocks\n    private", "type": "FileWriterQueueListener", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/entity/FileWriterQueueListenerTest.java"}, "test_case": {"identifier": "testOnMessageShouldThrowRuntimeExceptionWhenObjectMessageNotInstanceOfWilmaHttpEntity", "parameters": "()", "modifiers": "@Test(expectedExceptions = RuntimeException.class) public", "return": "void", "body": "@Test(expectedExceptions = RuntimeException.class)\n    public void testOnMessageShouldThrowRuntimeExceptionWhenObjectMessageNotInstanceOfWilmaHttpEntity() throws JMSException {\n        //GIVEN\n        given(objectMessage.getObject()).willThrow(new JMSException(\"Can't cast to WilmaHttpEntity!\"));\n        //WHEN\n        underTest.onMessage(objectMessage);\n        //THEN exception is thrown\n    }", "signature": "void testOnMessageShouldThrowRuntimeExceptionWhenObjectMessageNotInstanceOfWilmaHttpEntity()", "full_signature": "@Test(expectedExceptions = RuntimeException.class) public void testOnMessageShouldThrowRuntimeExceptionWhenObjectMessageNotInstanceOfWilmaHttpEntity()", "class_method_signature": "FileWriterQueueListenerTest.testOnMessageShouldThrowRuntimeExceptionWhenObjectMessageNotInstanceOfWilmaHttpEntity()", "testcase": true, "constructor": false, "invocations": ["willThrow", "given", "getObject", "onMessage"]}, "focal_class": {"identifier": "FileWriterQueueListener", "superclass": "", "interfaces": "implements MessageListener", "fields": [{"original_string": "@Autowired\n    private WilmaHttpRequestWriter wilmaHttpRequestWriter;", "modifier": "@Autowired\n    private", "type": "WilmaHttpRequestWriter", "declarator": "wilmaHttpRequestWriter", "var_name": "wilmaHttpRequestWriter"}, {"original_string": "@Autowired\n    private WilmaHttpResponseWriter wilmaHttpResponseWriter;", "modifier": "@Autowired\n    private", "type": "WilmaHttpResponseWriter", "declarator": "wilmaHttpResponseWriter", "var_name": "wilmaHttpResponseWriter"}, {"original_string": "@Autowired\n    private JmsRequestIndexingProcessor requestIndexerProcessor;", "modifier": "@Autowired\n    private", "type": "JmsRequestIndexingProcessor", "declarator": "requestIndexerProcessor", "var_name": "requestIndexerProcessor"}, {"original_string": "@Autowired\n    private JmsResponseIndexingProcessor responseIndexerProcessor;", "modifier": "@Autowired\n    private", "type": "JmsResponseIndexingProcessor", "declarator": "responseIndexerProcessor", "var_name": "responseIndexerProcessor"}], "methods": [{"identifier": "onMessage", "parameters": "(final Message message)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(final Message message)", "full_signature": "@Override public void onMessage(final Message message)", "class_method_signature": "FileWriterQueueListener.onMessage(final Message message)", "testcase": false, "constructor": false}, {"identifier": "writeFile", "parameters": "(final Message message, final WilmaHttpEntity wilmaHttpEntity)", "modifiers": "private", "return": "void", "signature": "void writeFile(final Message message, final WilmaHttpEntity wilmaHttpEntity)", "full_signature": "private void writeFile(final Message message, final WilmaHttpEntity wilmaHttpEntity)", "class_method_signature": "FileWriterQueueListener.writeFile(final Message message, final WilmaHttpEntity wilmaHttpEntity)", "testcase": false, "constructor": false}, {"identifier": "writeRequestAndSendToIndexing", "parameters": "(final WilmaHttpRequest request, final boolean isBodyDecompressed)", "modifiers": "private", "return": "void", "signature": "void writeRequestAndSendToIndexing(final WilmaHttpRequest request, final boolean isBodyDecompressed)", "full_signature": "private void writeRequestAndSendToIndexing(final WilmaHttpRequest request, final boolean isBodyDecompressed)", "class_method_signature": "FileWriterQueueListener.writeRequestAndSendToIndexing(final WilmaHttpRequest request, final boolean isBodyDecompressed)", "testcase": false, "constructor": false}, {"identifier": "writeResponseAndSendToIndexing", "parameters": "(final WilmaHttpResponse response, final boolean isBodyDecompressed)", "modifiers": "private", "return": "void", "signature": "void writeResponseAndSendToIndexing(final WilmaHttpResponse response, final boolean isBodyDecompressed)", "full_signature": "private void writeResponseAndSendToIndexing(final WilmaHttpResponse response, final boolean isBodyDecompressed)", "class_method_signature": "FileWriterQueueListener.writeResponseAndSendToIndexing(final WilmaHttpResponse response, final boolean isBodyDecompressed)", "testcase": false, "constructor": false}, {"identifier": "getWilmaHttpEntityFromMessage", "parameters": "(final Message message)", "modifiers": "private", "return": "WilmaHttpEntity", "signature": "WilmaHttpEntity getWilmaHttpEntityFromMessage(final Message message)", "full_signature": "private WilmaHttpEntity getWilmaHttpEntityFromMessage(final Message message)", "class_method_signature": "FileWriterQueueListener.getWilmaHttpEntityFromMessage(final Message message)", "testcase": false, "constructor": false}, {"identifier": "getBodyDecompressedFromMessage", "parameters": "(final Message message)", "modifiers": "private", "return": "boolean", "signature": "boolean getBodyDecompressedFromMessage(final Message message)", "full_signature": "private boolean getBodyDecompressedFromMessage(final Message message)", "class_method_signature": "FileWriterQueueListener.getBodyDecompressedFromMessage(final Message message)", "testcase": false, "constructor": false}, {"identifier": "isEntityARequest", "parameters": "(final WilmaHttpEntity wilmaHttpEntity)", "modifiers": "", "return": "boolean", "signature": "boolean isEntityARequest(final WilmaHttpEntity wilmaHttpEntity)", "full_signature": " boolean isEntityARequest(final WilmaHttpEntity wilmaHttpEntity)", "class_method_signature": "FileWriterQueueListener.isEntityARequest(final WilmaHttpEntity wilmaHttpEntity)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/entity/FileWriterQueueListener.java"}, "focal_method": {"identifier": "onMessage", "parameters": "(final Message message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onMessage(final Message message) {\n        if (message instanceof ObjectMessage) {\n            try {\n                WilmaHttpEntity wilmaHttpEntity = getWilmaHttpEntityFromMessage(message);\n                writeFile(message, wilmaHttpEntity);\n            } catch (JMSException e) {\n                throw new RuntimeException(e);\n            }\n        } else {\n            throw new IllegalArgumentException(\"Message must be of type ObjectMessage\");\n        }\n    }", "signature": "void onMessage(final Message message)", "full_signature": "@Override public void onMessage(final Message message)", "class_method_signature": "FileWriterQueueListener.onMessage(final Message message)", "testcase": false, "constructor": false, "invocations": ["getWilmaHttpEntityFromMessage", "writeFile"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}