{"test_class": {"identifier": "TestHttpRoute", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static\n        HttpHost TARGET1 = new HttpHost(\"target1.test.invalid\");", "modifier": "public final static", "type": "HttpHost", "declarator": "TARGET1 = new HttpHost(\"target1.test.invalid\")", "var_name": "TARGET1"}, {"original_string": "public final static\n        HttpHost TARGET2 = new HttpHost(\"target2.test.invalid\", 8080);", "modifier": "public final static", "type": "HttpHost", "declarator": "TARGET2 = new HttpHost(\"target2.test.invalid\", 8080)", "var_name": "TARGET2"}, {"original_string": "public final static\n        HttpHost PROXY1 = new HttpHost(\"proxy1.test.invalid\");", "modifier": "public final static", "type": "HttpHost", "declarator": "PROXY1 = new HttpHost(\"proxy1.test.invalid\")", "var_name": "PROXY1"}, {"original_string": "public final static\n        HttpHost PROXY2 = new HttpHost(\"proxy2.test.invalid\", 1080);", "modifier": "public final static", "type": "HttpHost", "declarator": "PROXY2 = new HttpHost(\"proxy2.test.invalid\", 1080)", "var_name": "PROXY2"}, {"original_string": "public final static\n        HttpHost PROXY3 = new HttpHost(\"proxy3.test.invalid\", 88);", "modifier": "public final static", "type": "HttpHost", "declarator": "PROXY3 = new HttpHost(\"proxy3.test.invalid\", 88)", "var_name": "PROXY3"}, {"original_string": "public final static InetAddress LOCAL41;", "modifier": "public final static", "type": "InetAddress", "declarator": "LOCAL41", "var_name": "LOCAL41"}, {"original_string": "public final static InetAddress LOCAL42;", "modifier": "public final static", "type": "InetAddress", "declarator": "LOCAL42", "var_name": "LOCAL42"}, {"original_string": "public final static InetAddress LOCAL61;", "modifier": "public final static", "type": "InetAddress", "declarator": "LOCAL61", "var_name": "LOCAL61"}, {"original_string": "public final static InetAddress LOCAL62;", "modifier": "public final static", "type": "InetAddress", "declarator": "LOCAL62", "var_name": "LOCAL62"}], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/conn/routing/TestHttpRoute.java"}, "test_case": {"identifier": "testImmutable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testImmutable() throws CloneNotSupportedException {\n\n        HttpHost[] proxies = new HttpHost[]{ PROXY1, PROXY2, PROXY3 };\n        HttpRoute route1 = new HttpRoute(TARGET1, null, proxies, false,\n                                         TunnelType.PLAIN, LayerType.PLAIN);\n        HttpRoute route2 = (HttpRoute) route1.clone();\n        HttpRoute route3 = new HttpRoute(TARGET1, null,\n                                         proxies.clone(), false,\n                                         TunnelType.PLAIN, LayerType.PLAIN);\n\n        // modify the array that was passed to the constructor of route1\n        proxies[1] = PROXY3;\n        proxies[2] = PROXY2;\n\n        Assert.assertEquals(\"route differs from clone\", route2, route1);\n        Assert.assertEquals(\"route was modified\", route3, route1);\n    }", "signature": "void testImmutable()", "full_signature": "@Test public void testImmutable()", "class_method_signature": "TestHttpRoute.testImmutable()", "testcase": true, "constructor": false, "invocations": ["clone", "clone", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "HttpRoute", "superclass": "", "interfaces": "implements RouteInfo, Cloneable", "fields": [{"original_string": "private static final HttpHost[] EMPTY_HTTP_HOST_ARRAY = new HttpHost[]{};", "modifier": "private static final", "type": "HttpHost[]", "declarator": "EMPTY_HTTP_HOST_ARRAY = new HttpHost[]{}", "var_name": "EMPTY_HTTP_HOST_ARRAY"}, {"original_string": "private final HttpHost targetHost;", "modifier": "private final", "type": "HttpHost", "declarator": "targetHost", "var_name": "targetHost"}, {"original_string": "private final InetAddress localAddress;", "modifier": "private final", "type": "InetAddress", "declarator": "localAddress", "var_name": "localAddress"}, {"original_string": "private final HttpHost[] proxyChain;", "modifier": "private final", "type": "HttpHost[]", "declarator": "proxyChain", "var_name": "proxyChain"}, {"original_string": "private final TunnelType tunnelled;", "modifier": "private final", "type": "TunnelType", "declarator": "tunnelled", "var_name": "tunnelled"}, {"original_string": "private final LayerType layered;", "modifier": "private final", "type": "LayerType", "declarator": "layered", "var_name": "layered"}, {"original_string": "private final boolean secure;", "modifier": "private final", "type": "boolean", "declarator": "secure", "var_name": "secure"}], "methods": [{"identifier": "HttpRoute", "parameters": "(InetAddress local,\n                      HttpHost target, HttpHost[] proxies,\n                      boolean secure,\n                      TunnelType tunnelled, LayerType layered)", "modifiers": "private", "return": "", "signature": " HttpRoute(InetAddress local,\n                      HttpHost target, HttpHost[] proxies,\n                      boolean secure,\n                      TunnelType tunnelled, LayerType layered)", "full_signature": "private  HttpRoute(InetAddress local,\n                      HttpHost target, HttpHost[] proxies,\n                      boolean secure,\n                      TunnelType tunnelled, LayerType layered)", "class_method_signature": "HttpRoute.HttpRoute(InetAddress local,\n                      HttpHost target, HttpHost[] proxies,\n                      boolean secure,\n                      TunnelType tunnelled, LayerType layered)", "testcase": false, "constructor": true}, {"identifier": "HttpRoute", "parameters": "(HttpHost target, InetAddress local, HttpHost[] proxies,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "modifiers": "public", "return": "", "signature": " HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "full_signature": "public  HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "class_method_signature": "HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost[] proxies,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "testcase": false, "constructor": true}, {"identifier": "HttpRoute", "parameters": "(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "modifiers": "public", "return": "", "signature": " HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "full_signature": "public  HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "class_method_signature": "HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure, TunnelType tunnelled, LayerType layered)", "testcase": false, "constructor": true}, {"identifier": "HttpRoute", "parameters": "(HttpHost target, InetAddress local, boolean secure)", "modifiers": "public", "return": "", "signature": " HttpRoute(HttpHost target, InetAddress local, boolean secure)", "full_signature": "public  HttpRoute(HttpHost target, InetAddress local, boolean secure)", "class_method_signature": "HttpRoute.HttpRoute(HttpHost target, InetAddress local, boolean secure)", "testcase": false, "constructor": true}, {"identifier": "HttpRoute", "parameters": "(HttpHost target)", "modifiers": "public", "return": "", "signature": " HttpRoute(HttpHost target)", "full_signature": "public  HttpRoute(HttpHost target)", "class_method_signature": "HttpRoute.HttpRoute(HttpHost target)", "testcase": false, "constructor": true}, {"identifier": "HttpRoute", "parameters": "(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure)", "modifiers": "public", "return": "", "signature": " HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure)", "full_signature": "public  HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure)", "class_method_signature": "HttpRoute.HttpRoute(HttpHost target, InetAddress local, HttpHost proxy,\n                     boolean secure)", "testcase": false, "constructor": true}, {"identifier": "toChain", "parameters": "(HttpHost proxy)", "modifiers": "private static", "return": "HttpHost[]", "signature": "HttpHost[] toChain(HttpHost proxy)", "full_signature": "private static HttpHost[] toChain(HttpHost proxy)", "class_method_signature": "HttpRoute.toChain(HttpHost proxy)", "testcase": false, "constructor": false}, {"identifier": "toChain", "parameters": "(HttpHost[] proxies)", "modifiers": "private static", "return": "HttpHost[]", "signature": "HttpHost[] toChain(HttpHost[] proxies)", "full_signature": "private static HttpHost[] toChain(HttpHost[] proxies)", "class_method_signature": "HttpRoute.toChain(HttpHost[] proxies)", "testcase": false, "constructor": false}, {"identifier": "getTargetHost", "parameters": "()", "modifiers": "public final", "return": "HttpHost", "signature": "HttpHost getTargetHost()", "full_signature": "public final HttpHost getTargetHost()", "class_method_signature": "HttpRoute.getTargetHost()", "testcase": false, "constructor": false}, {"identifier": "getLocalAddress", "parameters": "()", "modifiers": "public final", "return": "InetAddress", "signature": "InetAddress getLocalAddress()", "full_signature": "public final InetAddress getLocalAddress()", "class_method_signature": "HttpRoute.getLocalAddress()", "testcase": false, "constructor": false}, {"identifier": "getHopCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getHopCount()", "full_signature": "public final int getHopCount()", "class_method_signature": "HttpRoute.getHopCount()", "testcase": false, "constructor": false}, {"identifier": "getHopTarget", "parameters": "(int hop)", "modifiers": "public final", "return": "HttpHost", "signature": "HttpHost getHopTarget(int hop)", "full_signature": "public final HttpHost getHopTarget(int hop)", "class_method_signature": "HttpRoute.getHopTarget(int hop)", "testcase": false, "constructor": false}, {"identifier": "getProxyHost", "parameters": "()", "modifiers": "public final", "return": "HttpHost", "signature": "HttpHost getProxyHost()", "full_signature": "public final HttpHost getProxyHost()", "class_method_signature": "HttpRoute.getProxyHost()", "testcase": false, "constructor": false}, {"identifier": "getTunnelType", "parameters": "()", "modifiers": "public final", "return": "TunnelType", "signature": "TunnelType getTunnelType()", "full_signature": "public final TunnelType getTunnelType()", "class_method_signature": "HttpRoute.getTunnelType()", "testcase": false, "constructor": false}, {"identifier": "isTunnelled", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isTunnelled()", "full_signature": "public final boolean isTunnelled()", "class_method_signature": "HttpRoute.isTunnelled()", "testcase": false, "constructor": false}, {"identifier": "getLayerType", "parameters": "()", "modifiers": "public final", "return": "LayerType", "signature": "LayerType getLayerType()", "full_signature": "public final LayerType getLayerType()", "class_method_signature": "HttpRoute.getLayerType()", "testcase": false, "constructor": false}, {"identifier": "isLayered", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isLayered()", "full_signature": "public final boolean isLayered()", "class_method_signature": "HttpRoute.isLayered()", "testcase": false, "constructor": false}, {"identifier": "isSecure", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isSecure()", "full_signature": "public final boolean isSecure()", "class_method_signature": "HttpRoute.isSecure()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public final boolean equals(Object obj)", "class_method_signature": "HttpRoute.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "HttpRoute.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String toString()", "full_signature": "@Override public final String toString()", "class_method_signature": "HttpRoute.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "HttpRoute.clone()", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/conn/routing/HttpRoute.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "HttpRoute.clone()", "testcase": false, "constructor": false, "invocations": ["clone"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}