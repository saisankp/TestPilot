{"test_class": {"identifier": "BalanaPolicyManagerTest", "superclass": "extends OrmEnabledTestCase", "interfaces": "", "fields": [{"original_string": "private BalanaPolicyManager manager;", "modifier": "private", "type": "BalanaPolicyManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "private Repository repo;", "modifier": "private", "type": "Repository", "declarator": "repo", "var_name": "repo"}, {"original_string": "private VirtualFilesystem vfs;", "modifier": "private", "type": "VirtualFilesystem", "declarator": "vfs", "var_name": "vfs"}, {"original_string": "private OrmFactory<PolicyFile> policyFileFactory = getRequiredOrmFactory(PolicyFile.class);", "modifier": "private", "type": "OrmFactory<PolicyFile>", "declarator": "policyFileFactory = getRequiredOrmFactory(PolicyFile.class)", "var_name": "policyFileFactory"}, {"original_string": "@Mock\n    private PolicyCache policyCache;", "modifier": "@Mock\n    private", "type": "PolicyCache", "declarator": "policyCache", "var_name": "policyCache"}, {"original_string": "@Mock\n    private Cache<String, Policy> cache;", "modifier": "@Mock\n    private", "type": "Cache<String, Policy>", "declarator": "cache", "var_name": "cache"}, {"original_string": "@Mock\n    private BundleContext context;", "modifier": "@Mock\n    private", "type": "BundleContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    private Bundle bundle;", "modifier": "@Mock\n    private", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "private static String fileLocation;", "modifier": "private static", "type": "String", "declarator": "fileLocation", "var_name": "fileLocation"}, {"original_string": "private Map<String, Policy> entries;", "modifier": "private", "type": "Map<String, Policy>", "declarator": "entries", "var_name": "entries"}, {"original_string": "private IRI missingPolicyId = VALUE_FACTORY.createIRI(\"urn:missing\");", "modifier": "private", "type": "IRI", "declarator": "missingPolicyId = VALUE_FACTORY.createIRI(\"urn:missing\")", "var_name": "missingPolicyId"}, {"original_string": "private IRI policyId = VALUE_FACTORY.createIRI(\"http://mobi.com/policies/policy1\");", "modifier": "private", "type": "IRI", "declarator": "policyId = VALUE_FACTORY.createIRI(\"http://mobi.com/policies/policy1\")", "var_name": "policyId"}, {"original_string": "private IRI defaultPolicyId = VALUE_FACTORY.createIRI(\"http://mobi.com/policies/ontology-creation\");", "modifier": "private", "type": "IRI", "declarator": "defaultPolicyId = VALUE_FACTORY.createIRI(\"http://mobi.com/policies/ontology-creation\")", "var_name": "defaultPolicyId"}, {"original_string": "private IRI relatedResource = VALUE_FACTORY.createIRI(\"http://mobi.com/catalog-local\");", "modifier": "private", "type": "IRI", "declarator": "relatedResource = VALUE_FACTORY.createIRI(\"http://mobi.com/catalog-local\")", "var_name": "relatedResource"}, {"original_string": "private IRI relatedAction = VALUE_FACTORY.createIRI(\"http://mobi.com/ontologies/policy#Create\");", "modifier": "private", "type": "IRI", "declarator": "relatedAction = VALUE_FACTORY.createIRI(\"http://mobi.com/ontologies/policy#Create\")", "var_name": "relatedAction"}, {"original_string": "private PolicyFile policyFile;", "modifier": "private", "type": "PolicyFile", "declarator": "policyFile", "var_name": "policyFile"}, {"original_string": "private PolicyFile missingPolicyFile;", "modifier": "private", "type": "PolicyFile", "declarator": "missingPolicyFile", "var_name": "missingPolicyFile"}, {"original_string": "private PolicyFile defaultPolicyFile;", "modifier": "private", "type": "PolicyFile", "declarator": "defaultPolicyFile", "var_name": "defaultPolicyFile"}, {"original_string": "private PolicyType policyType;", "modifier": "private", "type": "PolicyType", "declarator": "policyType", "var_name": "policyType"}, {"original_string": "private PolicyType newPolicyType;", "modifier": "private", "type": "PolicyType", "declarator": "newPolicyType", "var_name": "newPolicyType"}, {"original_string": "private PolicyType missingPolicyType;", "modifier": "private", "type": "PolicyType", "declarator": "missingPolicyType", "var_name": "missingPolicyType"}, {"original_string": "private PolicyType defaultPolicyType;", "modifier": "private", "type": "PolicyType", "declarator": "defaultPolicyType", "var_name": "defaultPolicyType"}, {"original_string": "private String filePath;", "modifier": "private", "type": "String", "declarator": "filePath", "var_name": "filePath"}, {"original_string": "private Map<String, Object> props;", "modifier": "private", "type": "Map<String, Object>", "declarator": "props", "var_name": "props"}], "file": "com.mobi.security.policy.impl.xacml/src/test/java/com/mobi/security/policy/impl/xacml/BalanaPolicyManagerTest.java"}, "test_case": {"identifier": "createPolicyTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createPolicyTest() {\n        XACMLPolicy policy = manager.createPolicy(policyType);\n        assertTrue(policy instanceof BalanaPolicy);\n        assertEquals(policyId, policy.getId());\n        assertEquals(policyType, policy.getJaxbPolicy());\n    }", "signature": "void createPolicyTest()", "full_signature": "@Test public void createPolicyTest()", "class_method_signature": "BalanaPolicyManagerTest.createPolicyTest()", "testcase": true, "constructor": false, "invocations": ["createPolicy", "assertTrue", "assertEquals", "getId", "assertEquals", "getJaxbPolicy"]}, "focal_class": {"identifier": "BalanaPolicyManager", "superclass": "", "interfaces": "implements XACMLPolicyManager", "fields": [{"original_string": "static final String COMPONENT_NAME = \"com.mobi.security.policy.api.xacml.XACMLPolicyManager\";", "modifier": "static final", "type": "String", "declarator": "COMPONENT_NAME = \"com.mobi.security.policy.api.xacml.XACMLPolicyManager\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BalanaPolicyManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BalanaPolicyManager.class)", "var_name": "LOG"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private PolicyCache policyCache;", "modifier": "private", "type": "PolicyCache", "declarator": "policyCache", "var_name": "policyCache"}, {"original_string": "private VirtualFilesystem vfs;", "modifier": "private", "type": "VirtualFilesystem", "declarator": "vfs", "var_name": "vfs"}, {"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private PolicyFileFactory policyFileFactory;", "modifier": "private", "type": "PolicyFileFactory", "declarator": "policyFileFactory", "var_name": "policyFileFactory"}, {"original_string": "private String fileLocation;", "modifier": "private", "type": "String", "declarator": "fileLocation", "var_name": "fileLocation"}, {"original_string": "private IRI typeIRI;", "modifier": "private", "type": "IRI", "declarator": "typeIRI", "var_name": "typeIRI"}, {"original_string": "private IRI policyFileTypeIRI;", "modifier": "private", "type": "IRI", "declarator": "policyFileTypeIRI", "var_name": "policyFileTypeIRI"}], "methods": [{"identifier": "setVf", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setVf(ValueFactory vf)", "full_signature": "@Reference void setVf(ValueFactory vf)", "class_method_signature": "BalanaPolicyManager.setVf(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setMf", "parameters": "(ModelFactory mf)", "modifiers": "@Reference", "return": "void", "signature": "void setMf(ModelFactory mf)", "full_signature": "@Reference void setMf(ModelFactory mf)", "class_method_signature": "BalanaPolicyManager.setMf(ModelFactory mf)", "testcase": false, "constructor": false}, {"identifier": "setPolicyCache", "parameters": "(PolicyCache policyCache)", "modifiers": "@Reference", "return": "void", "signature": "void setPolicyCache(PolicyCache policyCache)", "full_signature": "@Reference void setPolicyCache(PolicyCache policyCache)", "class_method_signature": "BalanaPolicyManager.setPolicyCache(PolicyCache policyCache)", "testcase": false, "constructor": false}, {"identifier": "setVfs", "parameters": "(VirtualFilesystem vfs)", "modifiers": "@Reference", "return": "void", "signature": "void setVfs(VirtualFilesystem vfs)", "full_signature": "@Reference void setVfs(VirtualFilesystem vfs)", "class_method_signature": "BalanaPolicyManager.setVfs(VirtualFilesystem vfs)", "testcase": false, "constructor": false}, {"identifier": "setRepository", "parameters": "(Repository repository)", "modifiers": "@Reference(name = \"repository\")", "return": "void", "signature": "void setRepository(Repository repository)", "full_signature": "@Reference(name = \"repository\") void setRepository(Repository repository)", "class_method_signature": "BalanaPolicyManager.setRepository(Repository repository)", "testcase": false, "constructor": false}, {"identifier": "setPolicyFileFactory", "parameters": "(PolicyFileFactory policyFileFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setPolicyFileFactory(PolicyFileFactory policyFileFactory)", "full_signature": "@Reference void setPolicyFileFactory(PolicyFileFactory policyFileFactory)", "class_method_signature": "BalanaPolicyManager.setPolicyFileFactory(PolicyFileFactory policyFileFactory)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(BundleContext context, Map<String, Object> props)", "modifiers": "@Activate protected", "return": "void", "signature": "void start(BundleContext context, Map<String, Object> props)", "full_signature": "@Activate protected void start(BundleContext context, Map<String, Object> props)", "class_method_signature": "BalanaPolicyManager.start(BundleContext context, Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "modified", "parameters": "(BundleContext context, Map<String, Object> props)", "modifiers": "@Modified protected", "return": "void", "signature": "void modified(BundleContext context, Map<String, Object> props)", "full_signature": "@Modified protected void modified(BundleContext context, Map<String, Object> props)", "class_method_signature": "BalanaPolicyManager.modified(BundleContext context, Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "createPolicy", "parameters": "(PolicyType policyType)", "modifiers": "@Override public", "return": "XACMLPolicy", "signature": "XACMLPolicy createPolicy(PolicyType policyType)", "full_signature": "@Override public XACMLPolicy createPolicy(PolicyType policyType)", "class_method_signature": "BalanaPolicyManager.createPolicy(PolicyType policyType)", "testcase": false, "constructor": false}, {"identifier": "addPolicy", "parameters": "(XACMLPolicy policy)", "modifiers": "@Override public", "return": "Resource", "signature": "Resource addPolicy(XACMLPolicy policy)", "full_signature": "@Override public Resource addPolicy(XACMLPolicy policy)", "class_method_signature": "BalanaPolicyManager.addPolicy(XACMLPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "getPolicies", "parameters": "(PolicyQueryParams params)", "modifiers": "@Override public", "return": "List<XACMLPolicy>", "signature": "List<XACMLPolicy> getPolicies(PolicyQueryParams params)", "full_signature": "@Override public List<XACMLPolicy> getPolicies(PolicyQueryParams params)", "class_method_signature": "BalanaPolicyManager.getPolicies(PolicyQueryParams params)", "testcase": false, "constructor": false}, {"identifier": "getPolicy", "parameters": "(Resource policyId)", "modifiers": "@Override public", "return": "Optional<XACMLPolicy>", "signature": "Optional<XACMLPolicy> getPolicy(Resource policyId)", "full_signature": "@Override public Optional<XACMLPolicy> getPolicy(Resource policyId)", "class_method_signature": "BalanaPolicyManager.getPolicy(Resource policyId)", "testcase": false, "constructor": false}, {"identifier": "updatePolicy", "parameters": "(XACMLPolicy newPolicy)", "modifiers": "@Override public", "return": "void", "signature": "void updatePolicy(XACMLPolicy newPolicy)", "full_signature": "@Override public void updatePolicy(XACMLPolicy newPolicy)", "class_method_signature": "BalanaPolicyManager.updatePolicy(XACMLPolicy newPolicy)", "testcase": false, "constructor": false}, {"identifier": "deletePolicy", "parameters": "(Resource policyId)", "modifiers": "@Override public", "return": "void", "signature": "void deletePolicy(Resource policyId)", "full_signature": "@Override public void deletePolicy(Resource policyId)", "class_method_signature": "BalanaPolicyManager.deletePolicy(Resource policyId)", "testcase": false, "constructor": false}, {"identifier": "getRepository", "parameters": "()", "modifiers": "@Override public", "return": "Repository", "signature": "Repository getRepository()", "full_signature": "@Override public Repository getRepository()", "class_method_signature": "BalanaPolicyManager.getRepository()", "testcase": false, "constructor": false}, {"identifier": "getBalanaPolicy", "parameters": "(XACMLPolicy policy)", "modifiers": "private", "return": "BalanaPolicy", "signature": "BalanaPolicy getBalanaPolicy(XACMLPolicy policy)", "full_signature": "private BalanaPolicy getBalanaPolicy(XACMLPolicy policy)", "class_method_signature": "BalanaPolicyManager.getBalanaPolicy(XACMLPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "validateUniqueId", "parameters": "(XACMLPolicy policy)", "modifiers": "private", "return": "void", "signature": "void validateUniqueId(XACMLPolicy policy)", "full_signature": "private void validateUniqueId(XACMLPolicy policy)", "class_method_signature": "BalanaPolicyManager.validateUniqueId(XACMLPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "validatePolicy", "parameters": "(Resource policyId)", "modifiers": "private", "return": "PolicyFile", "signature": "PolicyFile validatePolicy(Resource policyId)", "full_signature": "private PolicyFile validatePolicy(Resource policyId)", "class_method_signature": "BalanaPolicyManager.validatePolicy(Resource policyId)", "testcase": false, "constructor": false}, {"identifier": "validatePolicy", "parameters": "(Resource policyId, RepositoryConnection conn)", "modifiers": "private", "return": "PolicyFile", "signature": "PolicyFile validatePolicy(Resource policyId, RepositoryConnection conn)", "full_signature": "private PolicyFile validatePolicy(Resource policyId, RepositoryConnection conn)", "class_method_signature": "BalanaPolicyManager.validatePolicy(Resource policyId, RepositoryConnection conn)", "testcase": false, "constructor": false}, {"identifier": "optPolicy", "parameters": "(Resource policyId, RepositoryConnection conn)", "modifiers": "private", "return": "Optional<PolicyFile>", "signature": "Optional<PolicyFile> optPolicy(Resource policyId, RepositoryConnection conn)", "full_signature": "private Optional<PolicyFile> optPolicy(Resource policyId, RepositoryConnection conn)", "class_method_signature": "BalanaPolicyManager.optPolicy(Resource policyId, RepositoryConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getRetrievalURL", "parameters": "(PolicyFile policyFile)", "modifiers": "private", "return": "IRI", "signature": "IRI getRetrievalURL(PolicyFile policyFile)", "full_signature": "private IRI getRetrievalURL(PolicyFile policyFile)", "class_method_signature": "BalanaPolicyManager.getRetrievalURL(PolicyFile policyFile)", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "(PolicyFile policyFile)", "modifiers": "private", "return": "String", "signature": "String getFileName(PolicyFile policyFile)", "full_signature": "private String getFileName(PolicyFile policyFile)", "class_method_signature": "BalanaPolicyManager.getFileName(PolicyFile policyFile)", "testcase": false, "constructor": false}, {"identifier": "optPolicyFromFile", "parameters": "(Resource policyId)", "modifiers": "private", "return": "Optional<BalanaPolicy>", "signature": "Optional<BalanaPolicy> optPolicyFromFile(Resource policyId)", "full_signature": "private Optional<BalanaPolicy> optPolicyFromFile(Resource policyId)", "class_method_signature": "BalanaPolicyManager.optPolicyFromFile(Resource policyId)", "testcase": false, "constructor": false}, {"identifier": "optPolicyFromFile", "parameters": "(Resource policyId, RepositoryConnection conn)", "modifiers": "private", "return": "Optional<BalanaPolicy>", "signature": "Optional<BalanaPolicy> optPolicyFromFile(Resource policyId, RepositoryConnection conn)", "full_signature": "private Optional<BalanaPolicy> optPolicyFromFile(Resource policyId, RepositoryConnection conn)", "class_method_signature": "BalanaPolicyManager.optPolicyFromFile(Resource policyId, RepositoryConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getPolicyFromFile", "parameters": "(Resource policyId, RepositoryConnection conn)", "modifiers": "private", "return": "BalanaPolicy", "signature": "BalanaPolicy getPolicyFromFile(Resource policyId, RepositoryConnection conn)", "full_signature": "private BalanaPolicy getPolicyFromFile(Resource policyId, RepositoryConnection conn)", "class_method_signature": "BalanaPolicyManager.getPolicyFromFile(Resource policyId, RepositoryConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getPolicyFromFile", "parameters": "(PolicyFile policyFile)", "modifiers": "private", "return": "BalanaPolicy", "signature": "BalanaPolicy getPolicyFromFile(PolicyFile policyFile)", "full_signature": "private BalanaPolicy getPolicyFromFile(PolicyFile policyFile)", "class_method_signature": "BalanaPolicyManager.getPolicyFromFile(PolicyFile policyFile)", "testcase": false, "constructor": false}, {"identifier": "getPolicyFromFile", "parameters": "(String filePath)", "modifiers": "private", "return": "BalanaPolicy", "signature": "BalanaPolicy getPolicyFromFile(String filePath)", "full_signature": "private BalanaPolicy getPolicyFromFile(String filePath)", "class_method_signature": "BalanaPolicyManager.getPolicyFromFile(String filePath)", "testcase": false, "constructor": false}, {"identifier": "getPolicyFromFile", "parameters": "(VirtualFile file)", "modifiers": "private", "return": "BalanaPolicy", "signature": "BalanaPolicy getPolicyFromFile(VirtualFile file)", "full_signature": "private BalanaPolicy getPolicyFromFile(VirtualFile file)", "class_method_signature": "BalanaPolicyManager.getPolicyFromFile(VirtualFile file)", "testcase": false, "constructor": false}, {"identifier": "loadPolicies", "parameters": "(BundleContext context)", "modifiers": "private", "return": "void", "signature": "void loadPolicies(BundleContext context)", "full_signature": "private void loadPolicies(BundleContext context)", "class_method_signature": "BalanaPolicyManager.loadPolicies(BundleContext context)", "testcase": false, "constructor": false}, {"identifier": "addMissingFilesToRepo", "parameters": "(Set<String> filePaths, VirtualFile baseFolder)", "modifiers": "private", "return": "void", "signature": "void addMissingFilesToRepo(Set<String> filePaths, VirtualFile baseFolder)", "full_signature": "private void addMissingFilesToRepo(Set<String> filePaths, VirtualFile baseFolder)", "class_method_signature": "BalanaPolicyManager.addMissingFilesToRepo(Set<String> filePaths, VirtualFile baseFolder)", "testcase": false, "constructor": false}, {"identifier": "setRelatedProperties", "parameters": "(PolicyFile policyFile, BalanaPolicy policy)", "modifiers": "private", "return": "void", "signature": "void setRelatedProperties(PolicyFile policyFile, BalanaPolicy policy)", "full_signature": "private void setRelatedProperties(PolicyFile policyFile, BalanaPolicy policy)", "class_method_signature": "BalanaPolicyManager.setRelatedProperties(PolicyFile policyFile, BalanaPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "addPolicyFile", "parameters": "(VirtualFile file, String fileName, BalanaPolicy balanaPolicy)", "modifiers": "private", "return": "PolicyFile", "signature": "PolicyFile addPolicyFile(VirtualFile file, String fileName, BalanaPolicy balanaPolicy)", "full_signature": "private PolicyFile addPolicyFile(VirtualFile file, String fileName, BalanaPolicy balanaPolicy)", "class_method_signature": "BalanaPolicyManager.addPolicyFile(VirtualFile file, String fileName, BalanaPolicy balanaPolicy)", "testcase": false, "constructor": false}, {"identifier": "getChecksum", "parameters": "(BalanaPolicy policy)", "modifiers": "private", "return": "String", "signature": "String getChecksum(BalanaPolicy policy)", "full_signature": "private String getChecksum(BalanaPolicy policy)", "class_method_signature": "BalanaPolicyManager.getChecksum(BalanaPolicy policy)", "testcase": false, "constructor": false}], "file": "com.mobi.security.policy.impl.xacml/src/main/java/com/mobi/security/policy/impl/xacml/BalanaPolicyManager.java"}, "focal_method": {"identifier": "createPolicy", "parameters": "(PolicyType policyType)", "modifiers": "@Override public", "return": "XACMLPolicy", "body": "@Override\n    public XACMLPolicy createPolicy(PolicyType policyType) {\n        return new BalanaPolicy(policyType, vf);\n    }", "signature": "XACMLPolicy createPolicy(PolicyType policyType)", "full_signature": "@Override public XACMLPolicy createPolicy(PolicyType policyType)", "class_method_signature": "BalanaPolicyManager.createPolicy(PolicyType policyType)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}