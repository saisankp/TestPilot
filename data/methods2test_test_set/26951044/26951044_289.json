{"test_class": {"identifier": "DefaultConfigurationSnapshotTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java"}, "test_case": {"identifier": "testGetOrDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetOrDefault() {\n        Configuration config = Configuration.current();\n        DefaultConfigurationSnapshot snapshot = new DefaultConfigurationSnapshot(config,\n                Arrays.asList(\"confkey1\", \"confkey2\", \"confkey3\"));\n        assertThat(\"javaconf-value1\").isEqualTo(snapshot.getOrDefault(\"confkey1\", \"foo\"));\n        assertThat(\"javaconf-value2\").isEqualTo(snapshot.getOrDefault(\"confkey2\", \"foo\"));\n        assertThat(\"javaconf-value2\").isEqualTo(snapshot.getOrDefault(\"confkey2\", String.class,\"foo\"));\n        assertThat(\"javaconf-value3\").isEqualTo(snapshot.getOrDefault(\"confkey3\", \"foo\"));\n        assertThat(\"foo\").isEqualTo(snapshot.getOrDefault(\"confkey4\", \"foo\"));\n        assertThat(\"foo\").isEqualTo(snapshot.getOrDefault(\"confkey4\", String.class,\"foo\"));\n    }", "signature": "void testGetOrDefault()", "full_signature": "@Test public void testGetOrDefault()", "class_method_signature": "DefaultConfigurationSnapshotTest.testGetOrDefault()", "testcase": true, "constructor": false, "invocations": ["current", "asList", "isEqualTo", "assertThat", "getOrDefault", "isEqualTo", "assertThat", "getOrDefault", "isEqualTo", "assertThat", "getOrDefault", "isEqualTo", "assertThat", "getOrDefault", "isEqualTo", "assertThat", "getOrDefault", "isEqualTo", "assertThat", "getOrDefault"]}, "focal_class": {"identifier": "DefaultConfigurationSnapshot", "superclass": "", "interfaces": "implements ConfigurationSnapshot, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private DefaultConfiguration snapshot;", "modifier": "private", "type": "DefaultConfiguration", "declarator": "snapshot", "var_name": "snapshot"}, {"original_string": "private long frozenAt = System.nanoTime();", "modifier": "private", "type": "long", "declarator": "frozenAt = System.nanoTime()", "var_name": "frozenAt"}, {"original_string": "private UUID id = UUID.randomUUID();", "modifier": "private", "type": "UUID", "declarator": "id = UUID.randomUUID()", "var_name": "id"}, {"original_string": "private DefaultConfigurationContext context;", "modifier": "private", "type": "DefaultConfigurationContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Set<String> keys = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "keys = new HashSet<>()", "var_name": "keys"}], "methods": [{"identifier": "DefaultConfigurationSnapshot", "parameters": "(Configuration config, Iterable<String> keys)", "modifiers": "public", "return": "", "signature": " DefaultConfigurationSnapshot(Configuration config, Iterable<String> keys)", "full_signature": "public  DefaultConfigurationSnapshot(Configuration config, Iterable<String> keys)", "class_method_signature": "DefaultConfigurationSnapshot.DefaultConfigurationSnapshot(Configuration config, Iterable<String> keys)", "testcase": false, "constructor": true}, {"identifier": "DefaultConfigurationSnapshot", "parameters": "(Configuration config)", "modifiers": "public", "return": "", "signature": " DefaultConfigurationSnapshot(Configuration config)", "full_signature": "public  DefaultConfigurationSnapshot(Configuration config)", "class_method_signature": "DefaultConfigurationSnapshot.DefaultConfigurationSnapshot(Configuration config)", "testcase": false, "constructor": true}, {"identifier": "getSnapshot", "parameters": "(Iterable<String> keys)", "modifiers": "@Override public", "return": "ConfigurationSnapshot", "signature": "ConfigurationSnapshot getSnapshot(Iterable<String> keys)", "full_signature": "@Override public ConfigurationSnapshot getSnapshot(Iterable<String> keys)", "class_method_signature": "DefaultConfigurationSnapshot.getSnapshot(Iterable<String> keys)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getKeys()", "full_signature": "@Override public Set<String> getKeys()", "class_method_signature": "DefaultConfigurationSnapshot.getKeys()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public", "return": "String", "signature": "String get(String key)", "full_signature": "@Override public String get(String key)", "class_method_signature": "DefaultConfigurationSnapshot.get(String key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(String key, String defaultValue)", "modifiers": "@Override public", "return": "String", "signature": "String getOrDefault(String key, String defaultValue)", "full_signature": "@Override public String getOrDefault(String key, String defaultValue)", "class_method_signature": "DefaultConfigurationSnapshot.getOrDefault(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(String key, Class<T> type, T defaultValue)", "modifiers": "@Override public", "return": "T", "signature": "T getOrDefault(String key, Class<T> type, T defaultValue)", "full_signature": "@Override public T getOrDefault(String key, Class<T> type, T defaultValue)", "class_method_signature": "DefaultConfigurationSnapshot.getOrDefault(String key, Class<T> type, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key, Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(String key, Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(String key, Class<T> type)", "class_method_signature": "DefaultConfigurationSnapshot.get(String key, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key, TypeLiteral<T> type)", "modifiers": "@Override public", "return": "T", "signature": "T get(String key, TypeLiteral<T> type)", "full_signature": "@Override public T get(String key, TypeLiteral<T> type)", "class_method_signature": "DefaultConfigurationSnapshot.get(String key, TypeLiteral<T> type)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(String key, TypeLiteral<T> type, T defaultValue)", "modifiers": "@Override public", "return": "T", "signature": "T getOrDefault(String key, TypeLiteral<T> type, T defaultValue)", "full_signature": "@Override public T getOrDefault(String key, TypeLiteral<T> type, T defaultValue)", "class_method_signature": "DefaultConfigurationSnapshot.getOrDefault(String key, TypeLiteral<T> type, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getProperties()", "full_signature": "@Override public Map<String, String> getProperties()", "class_method_signature": "DefaultConfigurationSnapshot.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@Override public", "return": "ConfigurationContext", "signature": "ConfigurationContext getContext()", "full_signature": "@Override public ConfigurationContext getContext()", "class_method_signature": "DefaultConfigurationSnapshot.getContext()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getTimestamp()", "full_signature": "@Override public long getTimestamp()", "class_method_signature": "DefaultConfigurationSnapshot.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DefaultConfigurationSnapshot.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultConfigurationSnapshot.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultConfigurationSnapshot.toString()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "UUID", "signature": "UUID getId()", "full_signature": "public UUID getId()", "class_method_signature": "DefaultConfigurationSnapshot.getId()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshot.java"}, "focal_method": {"identifier": "getOrDefault", "parameters": "(String key, String defaultValue)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getOrDefault(String key, String defaultValue) {\n        return this.snapshot.getOrDefault(key, defaultValue);\n    }", "signature": "String getOrDefault(String key, String defaultValue)", "full_signature": "@Override public String getOrDefault(String key, String defaultValue)", "class_method_signature": "DefaultConfigurationSnapshot.getOrDefault(String key, String defaultValue)", "testcase": false, "constructor": false, "invocations": ["getOrDefault"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}