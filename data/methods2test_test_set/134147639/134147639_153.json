{"test_class": {"identifier": "CollectedClientDataConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectConverter objectConverter = new ObjectConverter();", "modifier": "private final", "type": "ObjectConverter", "declarator": "objectConverter = new ObjectConverter()", "var_name": "objectConverter"}, {"original_string": "private final CollectedClientDataConverter target = new CollectedClientDataConverter(objectConverter);", "modifier": "private final", "type": "CollectedClientDataConverter", "declarator": "target = new CollectedClientDataConverter(objectConverter)", "var_name": "target"}], "file": "webauthn4j-core/src/test/java/com/webauthn4j/converter/CollectedClientDataConverterTest.java"}, "test_case": {"identifier": "convert_deserialization_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void convert_deserialization_test() {\n        //noinspection SpellCheckingInspection\n        String clientDataJson = \"{\\\"challenge\\\":\\\"tk31UH1ETGGTPj33OhOMzw\\\",\\\"origin\\\":\\\"http://localhost:8080\\\",\\\"tokenBinding\\\":{\\\"status\\\":\\\"not-supported\\\"},\\\"type\\\":\\\"webauthn.get\\\"}\";\n        String clientDataBase64UrlString = Base64UrlUtil.encodeToString(clientDataJson.getBytes(StandardCharsets.UTF_8));\n        CollectedClientData collectedClientData = target.convert(clientDataBase64UrlString);\n        assertAll(\n                () -> assertThat(collectedClientData.getType()).isEqualTo(ClientDataType.GET),\n                () -> assertThat(collectedClientData.getChallenge()).isEqualTo(new DefaultChallenge(\"tk31UH1ETGGTPj33OhOMzw\")),\n                () -> assertThat(collectedClientData.getOrigin()).isEqualTo(new Origin(\"http://localhost:8080\"))\n        );\n    }", "signature": "void convert_deserialization_test()", "full_signature": "@Test void convert_deserialization_test()", "class_method_signature": "CollectedClientDataConverterTest.convert_deserialization_test()", "testcase": true, "constructor": false, "invocations": ["encodeToString", "getBytes", "convert", "assertAll", "isEqualTo", "assertThat", "getType", "isEqualTo", "assertThat", "getChallenge", "isEqualTo", "assertThat", "getOrigin"]}, "focal_class": {"identifier": "CollectedClientDataConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JsonConverter jsonConverter;", "modifier": "private final", "type": "JsonConverter", "declarator": "jsonConverter", "var_name": "jsonConverter"}], "methods": [{"identifier": "CollectedClientDataConverter", "parameters": "(ObjectConverter objectConverter)", "modifiers": "public", "return": "", "signature": " CollectedClientDataConverter(ObjectConverter objectConverter)", "full_signature": "public  CollectedClientDataConverter(ObjectConverter objectConverter)", "class_method_signature": "CollectedClientDataConverter.CollectedClientDataConverter(ObjectConverter objectConverter)", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(String base64UrlString)", "modifiers": "public", "return": "CollectedClientData", "signature": "CollectedClientData convert(String base64UrlString)", "full_signature": "public CollectedClientData convert(String base64UrlString)", "class_method_signature": "CollectedClientDataConverter.convert(String base64UrlString)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(byte[] source)", "modifiers": "public", "return": "CollectedClientData", "signature": "CollectedClientData convert(byte[] source)", "full_signature": "public CollectedClientData convert(byte[] source)", "class_method_signature": "CollectedClientDataConverter.convert(byte[] source)", "testcase": false, "constructor": false}, {"identifier": "convertToBytes", "parameters": "(CollectedClientData source)", "modifiers": "public", "return": "byte[]", "signature": "byte[] convertToBytes(CollectedClientData source)", "full_signature": "public byte[] convertToBytes(CollectedClientData source)", "class_method_signature": "CollectedClientDataConverter.convertToBytes(CollectedClientData source)", "testcase": false, "constructor": false}, {"identifier": "convertToBase64UrlString", "parameters": "(CollectedClientData source)", "modifiers": "public", "return": "String", "signature": "String convertToBase64UrlString(CollectedClientData source)", "full_signature": "public String convertToBase64UrlString(CollectedClientData source)", "class_method_signature": "CollectedClientDataConverter.convertToBase64UrlString(CollectedClientData source)", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/converter/CollectedClientDataConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String base64UrlString)", "modifiers": "public", "return": "CollectedClientData", "body": "public CollectedClientData convert(String base64UrlString) {\n        if (base64UrlString == null) {\n            return null;\n        }\n        byte[] bytes = Base64UrlUtil.decode(base64UrlString);\n        return convert(bytes);\n    }", "signature": "CollectedClientData convert(String base64UrlString)", "full_signature": "public CollectedClientData convert(String base64UrlString)", "class_method_signature": "CollectedClientDataConverter.convert(String base64UrlString)", "testcase": false, "constructor": false, "invocations": ["decode", "convert"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}