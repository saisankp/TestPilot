{"test_class": {"identifier": "SelectAddressPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private SelectAddressPresenter presenter;", "modifier": "private", "type": "SelectAddressPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    private SelectAddressContract.View view;", "modifier": "@Mock\n    private", "type": "SelectAddressContract.View", "declarator": "view", "var_name": "view"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/SelectAddressPresenterTest.java"}, "test_case": {"identifier": "selectAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void selectAddress(){\n        List<Address> addressEntityList = new ArrayList<>();\n        Address address = new Address();\n        address.setAddress(\"0x15asd35f5ad5fa34s5df4as53\");\n        address.setAvatar(\"avatar-1\");\n        address.setName(\"Ella\");\n        address.setUuid(UUID.randomUUID().toString());\n        addressEntityList.add(address);\n        presenter.setAddressEntityList(addressEntityList);\n      /*  presenter.selectAddress(0);\n        Mockito.verify(view).getAction();*/\n\n\n    }", "signature": "void selectAddress()", "full_signature": "@Test public void selectAddress()", "class_method_signature": "SelectAddressPresenterTest.selectAddress()", "testcase": true, "constructor": false, "invocations": ["setAddress", "setAvatar", "setName", "setUuid", "toString", "randomUUID", "add", "setAddressEntityList"]}, "focal_class": {"identifier": "SelectAddressPresenter", "superclass": "extends BasePresenter<SelectAddressContract.View>", "interfaces": "implements SelectAddressContract.Presenter", "fields": [{"original_string": "private List<Address> addressEntityList;", "modifier": "private", "type": "List<Address>", "declarator": "addressEntityList", "var_name": "addressEntityList"}], "methods": [{"identifier": "getAddressEntityList", "parameters": "()", "modifiers": "public", "return": "List<Address>", "signature": "List<Address> getAddressEntityList()", "full_signature": "public List<Address> getAddressEntityList()", "class_method_signature": "SelectAddressPresenter.getAddressEntityList()", "testcase": false, "constructor": false}, {"identifier": "setAddressEntityList", "parameters": "(List<Address> addressEntityList)", "modifiers": "public", "return": "void", "signature": "void setAddressEntityList(List<Address> addressEntityList)", "full_signature": "public void setAddressEntityList(List<Address> addressEntityList)", "class_method_signature": "SelectAddressPresenter.setAddressEntityList(List<Address> addressEntityList)", "testcase": false, "constructor": false}, {"identifier": "fetchAddressList", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void fetchAddressList()", "full_signature": "@Override public void fetchAddressList()", "class_method_signature": "SelectAddressPresenter.fetchAddressList()", "testcase": false, "constructor": false}, {"identifier": "selectAddress", "parameters": "(int position)", "modifiers": "@Override public", "return": "void", "signature": "void selectAddress(int position)", "full_signature": "@Override public void selectAddress(int position)", "class_method_signature": "SelectAddressPresenter.selectAddress(int position)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/SelectAddressPresenter.java"}, "focal_method": {"identifier": "selectAddress", "parameters": "(int position)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void selectAddress(int position) {\n        if (addressEntityList != null && addressEntityList.size() > position) {\n            if (isViewAttached()) {\n                String action = getView().getAction();\n                Address addressEntity = addressEntityList.get(position);\n                if (Constants.Action.ACTION_GET_ADDRESS.equals(action)) {\n                    getView().setResult(addressEntity);\n                } else {\n                    CommonUtil.copyTextToClipboard(currentActivity(), addressEntity.getAddress());\n                }\n            }\n        }\n    }", "signature": "void selectAddress(int position)", "full_signature": "@Override public void selectAddress(int position)", "class_method_signature": "SelectAddressPresenter.selectAddress(int position)", "testcase": false, "constructor": false, "invocations": ["size", "isViewAttached", "getAction", "getView", "get", "equals", "setResult", "getView", "copyTextToClipboard", "currentActivity", "getAddress"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}