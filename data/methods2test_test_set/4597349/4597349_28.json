{"test_class": {"identifier": "SwingFileDialogTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static Document doc = null;", "modifier": "static", "type": "Document", "declarator": "doc = null", "var_name": "doc"}, {"original_string": "static XulDomContainer container;", "modifier": "static", "type": "XulDomContainer", "declarator": "container", "var_name": "container"}, {"original_string": "static XulMenu menu;", "modifier": "static", "type": "XulMenu", "declarator": "menu", "var_name": "menu"}, {"original_string": "static SwingFileDialog dialog;", "modifier": "static", "type": "SwingFileDialog", "declarator": "dialog", "var_name": "dialog"}], "file": "swing/src/test/java/org/pentaho/ui/xul/swing/tags/SwingFileDialogTest.java"}, "test_case": {"identifier": "showFileSaveTest2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void showFileSaveTest2() throws Exception {\n    Thread msgThread = new Thread( () -> dialog.showSaveDialog( new File( \"../\" ) ) );\n    validateDialog( msgThread );\n  }", "signature": "void showFileSaveTest2()", "full_signature": "@Test public void showFileSaveTest2()", "class_method_signature": "SwingFileDialogTest.showFileSaveTest2()", "testcase": true, "constructor": false, "invocations": ["showSaveDialog", "validateDialog"]}, "focal_class": {"identifier": "SwingFileDialog", "superclass": "extends SwingElement", "interfaces": "implements XulFileDialog", "fields": [{"original_string": "JFileChooser fc;", "modifier": "", "type": "JFileChooser", "declarator": "fc", "var_name": "fc"}, {"original_string": "private SEL_TYPE selectionType = SEL_TYPE.SINGLE;", "modifier": "private", "type": "SEL_TYPE", "declarator": "selectionType = SEL_TYPE.SINGLE", "var_name": "selectionType"}, {"original_string": "private VIEW_TYPE viewType = VIEW_TYPE.FILES_DIRECTORIES;", "modifier": "private", "type": "VIEW_TYPE", "declarator": "viewType = VIEW_TYPE.FILES_DIRECTORIES", "var_name": "viewType"}, {"original_string": "private File selectedFile;", "modifier": "private", "type": "File", "declarator": "selectedFile", "var_name": "selectedFile"}, {"original_string": "private File[] selectedFiles;", "modifier": "private", "type": "File[]", "declarator": "selectedFiles", "var_name": "selectedFiles"}, {"original_string": "private Component parentObject = null;", "modifier": "private", "type": "Component", "declarator": "parentObject = null", "var_name": "parentObject"}, {"original_string": "private XulComponent parent;", "modifier": "private", "type": "XulComponent", "declarator": "parent", "var_name": "parent"}], "methods": [{"identifier": "SwingFileDialog", "parameters": "( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "modifiers": "public", "return": "", "signature": " SwingFileDialog( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "full_signature": "public  SwingFileDialog( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "class_method_signature": "SwingFileDialog.SwingFileDialog( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "testcase": false, "constructor": true}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getFile()", "full_signature": "public File getFile()", "class_method_signature": "SwingFileDialog.getFile()", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "()", "modifiers": "public", "return": "File[]", "signature": "File[] getFiles()", "full_signature": "public File[] getFiles()", "class_method_signature": "SwingFileDialog.getFiles()", "testcase": false, "constructor": false}, {"identifier": "getSelectionMode", "parameters": "()", "modifiers": "public", "return": "SEL_TYPE", "signature": "SEL_TYPE getSelectionMode()", "full_signature": "public SEL_TYPE getSelectionMode()", "class_method_signature": "SwingFileDialog.getSelectionMode()", "testcase": false, "constructor": false}, {"identifier": "getViewType", "parameters": "()", "modifiers": "public", "return": "VIEW_TYPE", "signature": "VIEW_TYPE getViewType()", "full_signature": "public VIEW_TYPE getViewType()", "class_method_signature": "SwingFileDialog.getViewType()", "testcase": false, "constructor": false}, {"identifier": "setSelectionMode", "parameters": "( SEL_TYPE type )", "modifiers": "public", "return": "void", "signature": "void setSelectionMode( SEL_TYPE type )", "full_signature": "public void setSelectionMode( SEL_TYPE type )", "class_method_signature": "SwingFileDialog.setSelectionMode( SEL_TYPE type )", "testcase": false, "constructor": false}, {"identifier": "setViewType", "parameters": "( VIEW_TYPE type )", "modifiers": "public", "return": "void", "signature": "void setViewType( VIEW_TYPE type )", "full_signature": "public void setViewType( VIEW_TYPE type )", "class_method_signature": "SwingFileDialog.setViewType( VIEW_TYPE type )", "testcase": false, "constructor": false}, {"identifier": "showOpenDialog", "parameters": "()", "modifiers": "public", "return": "RETURN_CODE", "signature": "RETURN_CODE showOpenDialog()", "full_signature": "public RETURN_CODE showOpenDialog()", "class_method_signature": "SwingFileDialog.showOpenDialog()", "testcase": false, "constructor": false}, {"identifier": "showOpenDialog", "parameters": "( Object f )", "modifiers": "public", "return": "RETURN_CODE", "signature": "RETURN_CODE showOpenDialog( Object f )", "full_signature": "public RETURN_CODE showOpenDialog( Object f )", "class_method_signature": "SwingFileDialog.showOpenDialog( Object f )", "testcase": false, "constructor": false}, {"identifier": "showSaveDialog", "parameters": "()", "modifiers": "public", "return": "RETURN_CODE", "signature": "RETURN_CODE showSaveDialog()", "full_signature": "public RETURN_CODE showSaveDialog()", "class_method_signature": "SwingFileDialog.showSaveDialog()", "testcase": false, "constructor": false}, {"identifier": "showSaveDialog", "parameters": "( Object f )", "modifiers": "public", "return": "RETURN_CODE", "signature": "RETURN_CODE showSaveDialog( Object f )", "full_signature": "public RETURN_CODE showSaveDialog( Object f )", "class_method_signature": "SwingFileDialog.showSaveDialog( Object f )", "testcase": false, "constructor": false}, {"identifier": "showOpen", "parameters": "()", "modifiers": "private", "return": "RETURN_CODE", "signature": "RETURN_CODE showOpen()", "full_signature": "private RETURN_CODE showOpen()", "class_method_signature": "SwingFileDialog.showOpen()", "testcase": false, "constructor": false}, {"identifier": "showSave", "parameters": "()", "modifiers": "private", "return": "RETURN_CODE", "signature": "RETURN_CODE showSave()", "full_signature": "private RETURN_CODE showSave()", "class_method_signature": "SwingFileDialog.showSave()", "testcase": false, "constructor": false}, {"identifier": "setModalParent", "parameters": "( Object parent )", "modifiers": "public", "return": "void", "signature": "void setModalParent( Object parent )", "full_signature": "public void setModalParent( Object parent )", "class_method_signature": "SwingFileDialog.setModalParent( Object parent )", "testcase": false, "constructor": false}, {"identifier": "getParentObject", "parameters": "()", "modifiers": "private", "return": "Component", "signature": "Component getParentObject()", "full_signature": "private Component getParentObject()", "class_method_signature": "SwingFileDialog.getParentObject()", "testcase": false, "constructor": false}], "file": "swing/src/main/java/org/pentaho/ui/xul/swing/tags/SwingFileDialog.java"}, "focal_method": {"identifier": "showSaveDialog", "parameters": "()", "modifiers": "public", "return": "RETURN_CODE", "body": "public RETURN_CODE showSaveDialog() {\n\n    fc = new JFileChooser();\n    return showSave();\n  }", "signature": "RETURN_CODE showSaveDialog()", "full_signature": "public RETURN_CODE showSaveDialog()", "class_method_signature": "SwingFileDialog.showSaveDialog()", "testcase": false, "constructor": false, "invocations": ["showSave"]}, "repository": {"repo_id": 4597349, "url": "https://github.com/pentaho/pentaho-commons-xul", "language": "Java", "is_fork": false, "fork_count": 108, "stargazer_count": 5, "size": 24225, "license": "licensed"}}