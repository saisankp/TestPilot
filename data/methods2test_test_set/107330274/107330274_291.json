{"test_class": {"identifier": "ManagementSubsystemInitializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ResourceDimensionConfiguration resourceConfiguration = mock(ResourceDimensionConfiguration.class);", "modifier": "private final", "type": "ResourceDimensionConfiguration", "declarator": "resourceConfiguration = mock(ResourceDimensionConfiguration.class)", "var_name": "resourceConfiguration"}, {"original_string": "private final CapacityManagementConfiguration configuration = mock(CapacityManagementConfiguration.class);", "modifier": "private final", "type": "CapacityManagementConfiguration", "declarator": "configuration = mock(CapacityManagementConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final ApplicationSlaStore applicationStore = mock(ApplicationSlaStore.class);", "modifier": "private final", "type": "ApplicationSlaStore", "declarator": "applicationStore = mock(ApplicationSlaStore.class)", "var_name": "applicationStore"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/service/management/ManagementSubsystemInitializerTest.java"}, "test_case": {"identifier": "testDefaultApplicationSlaIsNotOverriddenIfPresent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultApplicationSlaIsNotOverriddenIfPresent() throws Exception {\n        when(applicationStore.findByName(DEFAULT_APPLICATION)).thenReturn(Observable.just(\n                ApplicationSlaSample.CriticalLarge.builder().withAppName(DEFAULT_APPLICATION).build()\n        ));\n\n        new ManagementSubsystemInitializer(configuration, applicationStore).enterActiveMode();\n\n        verify(applicationStore, times(1)).findByName(DEFAULT_APPLICATION);\n        verify(applicationStore, times(0)).create(any());\n    }", "signature": "void testDefaultApplicationSlaIsNotOverriddenIfPresent()", "full_signature": "@Test public void testDefaultApplicationSlaIsNotOverriddenIfPresent()", "class_method_signature": "ManagementSubsystemInitializerTest.testDefaultApplicationSlaIsNotOverriddenIfPresent()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "findByName", "just", "build", "withAppName", "builder", "enterActiveMode", "findByName", "verify", "times", "create", "verify", "times", "any"]}, "focal_class": {"identifier": "ManagementSubsystemInitializer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ManagementSubsystemInitializer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ManagementSubsystemInitializer.class)", "var_name": "logger"}, {"original_string": "private final CapacityManagementConfiguration configuration;", "modifier": "private final", "type": "CapacityManagementConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final ApplicationSlaStore applicationSlaStore;", "modifier": "private final", "type": "ApplicationSlaStore", "declarator": "applicationSlaStore", "var_name": "applicationSlaStore"}], "methods": [{"identifier": "ManagementSubsystemInitializer", "parameters": "(CapacityManagementConfiguration configuration,\n                                          ApplicationSlaStore applicationSlaStore)", "modifiers": "@Inject public", "return": "", "signature": " ManagementSubsystemInitializer(CapacityManagementConfiguration configuration,\n                                          ApplicationSlaStore applicationSlaStore)", "full_signature": "@Inject public  ManagementSubsystemInitializer(CapacityManagementConfiguration configuration,\n                                          ApplicationSlaStore applicationSlaStore)", "class_method_signature": "ManagementSubsystemInitializer.ManagementSubsystemInitializer(CapacityManagementConfiguration configuration,\n                                          ApplicationSlaStore applicationSlaStore)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "Observable<Void>", "signature": "Observable<Void> enterActiveMode()", "full_signature": "@Activator public Observable<Void> enterActiveMode()", "class_method_signature": "ManagementSubsystemInitializer.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "buildDefaultApplicationSLA", "parameters": "(CapacityManagementConfiguration configuration)", "modifiers": "private", "return": "ApplicationSLA", "signature": "ApplicationSLA buildDefaultApplicationSLA(CapacityManagementConfiguration configuration)", "full_signature": "private ApplicationSLA buildDefaultApplicationSLA(CapacityManagementConfiguration configuration)", "class_method_signature": "ManagementSubsystemInitializer.buildDefaultApplicationSLA(CapacityManagementConfiguration configuration)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/service/management/ManagementSubsystemInitializer.java"}, "focal_method": {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "Observable<Void>", "body": "@Activator\n    public Observable<Void> enterActiveMode() {\n        logger.info(\"Entering active mode\");\n        try {\n            ApplicationSLA defaultSLA = applicationSlaStore.findByName(ApplicationSlaManagementService.DEFAULT_APPLICATION).toBlocking().first();\n            logger.info(\"Default application SLA configured as: {}\", defaultSLA);\n        } catch (NotFoundException e) {\n            ApplicationSLA defaultSLA = buildDefaultApplicationSLA(configuration);\n            applicationSlaStore.create(defaultSLA).toBlocking().firstOrDefault(null);\n            logger.info(\"Default application SLA not defined; creating it according to the provided configuration: {}\", defaultSLA);\n        }\n        return Observable.empty();\n    }", "signature": "Observable<Void> enterActiveMode()", "full_signature": "@Activator public Observable<Void> enterActiveMode()", "class_method_signature": "ManagementSubsystemInitializer.enterActiveMode()", "testcase": false, "constructor": false, "invocations": ["info", "first", "toBlocking", "findByName", "info", "buildDefaultApplicationSLA", "firstOrDefault", "toBlocking", "create", "info", "empty"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}