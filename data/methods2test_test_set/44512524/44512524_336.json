{"test_class": {"identifier": "PageViewTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/spout/pageview/PageViewTest.java"}, "test_case": {"identifier": "testFromString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFromString() {\n    String pvString = \"http://foo.com\\t200\\t100000\\t1\";\n    PageView pageView = PageView.fromString(pvString);\n    assertThat(pageView.url).isEqualTo(\"http://foo.com\");\n    assertThat(pageView.status).isEqualTo(200);\n    assertThat(pageView.zipCode).isEqualTo(100000);\n    assertThat(pageView.userID).isEqualTo(1);\n    assertThat(pageView.toString()).isEqualTo(pvString);\n  }", "signature": "void testFromString()", "full_signature": "@Test public void testFromString()", "class_method_signature": "PageViewTest.testFromString()", "testcase": true, "constructor": false, "invocations": ["fromString", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "PageView", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = Logger.getLogger(PageView.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = Logger.getLogger(PageView.class)", "var_name": "LOG"}, {"original_string": "public final String url;", "modifier": "public final", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "public final int status;", "modifier": "public final", "type": "int", "declarator": "status", "var_name": "status"}, {"original_string": "public final int zipCode;", "modifier": "public final", "type": "int", "declarator": "zipCode", "var_name": "zipCode"}, {"original_string": "public final int userID;", "modifier": "public final", "type": "int", "declarator": "userID", "var_name": "userID"}], "methods": [{"identifier": "PageView", "parameters": "(String url, int status, int zipCode, int userID)", "modifiers": "public", "return": "", "signature": " PageView(String url, int status, int zipCode, int userID)", "full_signature": "public  PageView(String url, int status, int zipCode, int userID)", "class_method_signature": "PageView.PageView(String url, int status, int zipCode, int userID)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PageView.toString()", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String pv)", "modifiers": "public static", "return": "PageView", "signature": "PageView fromString(String pv)", "full_signature": "public static PageView fromString(String pv)", "class_method_signature": "PageView.fromString(String pv)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Item field)", "modifiers": "public", "return": "Object", "signature": "Object getValue(Item field)", "full_signature": "public Object getValue(Item field)", "class_method_signature": "PageView.getValue(Item field)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/spout/pageview/PageView.java"}, "focal_method": {"identifier": "fromString", "parameters": "(String pv)", "modifiers": "public static", "return": "PageView", "body": "public static PageView fromString(String pv) {\n    LOG.debug(\"get string '\" + pv + \"'\");\n    String[] parts = pv.split(\"\\t\");\n    if (parts.length < 4) {\n      return null;\n    }\n    for (int i = 0; i < parts.length; i++) {\n      parts[i] = parts[i].trim();\n    }\n    return new PageView(parts[0],\n            Integer.parseInt(parts[1]),\n            Integer.parseInt(parts[2]),\n            Integer.parseInt(parts[3]));\n  }", "signature": "PageView fromString(String pv)", "full_signature": "public static PageView fromString(String pv)", "class_method_signature": "PageView.fromString(String pv)", "testcase": false, "constructor": false, "invocations": ["debug", "split", "trim", "parseInt", "parseInt", "parseInt"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}