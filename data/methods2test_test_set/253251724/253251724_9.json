{"test_class": {"identifier": "GetCommandTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/io/keycafe/server/command/handler/GetCommandTest.java"}, "test_case": {"identifier": "test2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test2() throws Exception {\n        byte[][] args = new byte[2][];\n        args[0] = new byte[]{(byte) Command.GET.ordinal()};\n        args[1] = \"abc\".getBytes();\n        GetCommand g = new GetCommand(null);\n        ReplyMessage reply = g.run(3, args);\n        assertEquals(reply, ErrorMessage.WrongArgcMessage);\n    }", "signature": "void test2()", "full_signature": "@Test public void test2()", "class_method_signature": "GetCommandTest.test2()", "testcase": true, "constructor": false, "invocations": ["ordinal", "getBytes", "run", "assertEquals"]}, "focal_class": {"identifier": "GetCommand", "superclass": "", "interfaces": "implements CommandRunnable", "fields": [{"original_string": "private static final Logger logger = LogManager.getLogger(GetCommand.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LogManager.getLogger(GetCommand.class)", "var_name": "logger"}, {"original_string": "private Map<String, String> map;", "modifier": "private", "type": "Map<String, String>", "declarator": "map", "var_name": "map"}], "methods": [{"identifier": "GetCommand", "parameters": "(Map<String, String> map)", "modifiers": "public", "return": "", "signature": " GetCommand(Map<String, String> map)", "full_signature": "public  GetCommand(Map<String, String> map)", "class_method_signature": "GetCommand.GetCommand(Map<String, String> map)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "(int argc, byte[][] argv)", "modifiers": "@Override public", "return": "ReplyMessage", "signature": "ReplyMessage run(int argc, byte[][] argv)", "full_signature": "@Override public ReplyMessage run(int argc, byte[][] argv)", "class_method_signature": "GetCommand.run(int argc, byte[][] argv)", "testcase": false, "constructor": false}, {"identifier": "keyIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int keyIndex()", "full_signature": "@Override public int keyIndex()", "class_method_signature": "GetCommand.keyIndex()", "testcase": false, "constructor": false}], "file": "server/src/main/java/io/keycafe/server/command/handler/GetCommand.java"}, "focal_method": {"identifier": "run", "parameters": "(int argc, byte[][] argv)", "modifiers": "@Override public", "return": "ReplyMessage", "body": "@Override\n    public ReplyMessage run(int argc, byte[][] argv) throws Exception {\n        if (argc != 2) {\n            return ErrorMessage.WrongArgcMessage;\n        }\n\n        String key = new String(argv[1], Protocol.KEYCAFE_CHARSET);\n        String val = map.get(key);\n        logger.info(\"get key: {} - result: {}\", key, val);\n\n        if (val != null) {\n            return new BulkStringMessage(val);\n        } else {\n            return BulkStringMessage.NoKeyFoundMessage;\n        }\n    }", "signature": "ReplyMessage run(int argc, byte[][] argv)", "full_signature": "@Override public ReplyMessage run(int argc, byte[][] argv)", "class_method_signature": "GetCommand.run(int argc, byte[][] argv)", "testcase": false, "constructor": false, "invocations": ["get", "info"]}, "repository": {"repo_id": 253251724, "url": "https://github.com/actumn/keycafe", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 1986, "license": "licensed"}}