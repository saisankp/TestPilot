{"test_class": {"identifier": "AuditParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NS_FACILITY_ATTR_DEF= \"urn:perun:facility:attribute-def:def\";", "modifier": "private static final", "type": "String", "declarator": "NS_FACILITY_ATTR_DEF= \"urn:perun:facility:attribute-def:def\"", "var_name": "NS_FACILITY_ATTR_DEF"}, {"original_string": "private static final String NS_GROUP_RESOURCE_ATTR_DEF = \"urn:perun:group_resource:attribute-def:def\";", "modifier": "private static final", "type": "String", "declarator": "NS_GROUP_RESOURCE_ATTR_DEF = \"urn:perun:group_resource:attribute-def:def\"", "var_name": "NS_GROUP_RESOURCE_ATTR_DEF"}, {"original_string": "private final String textMismatch = \"!@#$%^<<&*()_+<\\\\><:{[}][]{>} sd\";", "modifier": "private final", "type": "String", "declarator": "textMismatch = \"!@#$%^<<&*()_+<\\\\><:{[}][]{>} sd\"", "var_name": "textMismatch"}, {"original_string": "private final String CLASS_NAME = \"AuditMessagesManagerEntry\";", "modifier": "private final", "type": "String", "declarator": "CLASS_NAME = \"AuditMessagesManagerEntry\"", "var_name": "CLASS_NAME"}, {"original_string": "private AuditMessage createdAuditMessage = new AuditMessage();", "modifier": "private", "type": "AuditMessage", "declarator": "createdAuditMessage = new AuditMessage()", "var_name": "createdAuditMessage"}, {"original_string": "private final User user = new User(5, textMismatch,textMismatch, textMismatch, textMismatch, textMismatch, false, false);", "modifier": "private final", "type": "User", "declarator": "user = new User(5, textMismatch,textMismatch, textMismatch, textMismatch, textMismatch, false, false)", "var_name": "user"}, {"original_string": "private final ExtSource extSource = new ExtSource(9, textMismatch, textMismatch);", "modifier": "private final", "type": "ExtSource", "declarator": "extSource = new ExtSource(9, textMismatch, textMismatch)", "var_name": "extSource"}, {"original_string": "private final UserExtSource userExtSource1 = new UserExtSource(12, extSource, textMismatch, user.getId(), 133);", "modifier": "private final", "type": "UserExtSource", "declarator": "userExtSource1 = new UserExtSource(12, extSource, textMismatch, user.getId(), 133)", "var_name": "userExtSource1"}, {"original_string": "private final UserExtSource userExtSource2 = new UserExtSource(15, extSource, textMismatch, -1, 156);", "modifier": "private final", "type": "UserExtSource", "declarator": "userExtSource2 = new UserExtSource(15, extSource, textMismatch, -1, 156)", "var_name": "userExtSource2"}, {"original_string": "private final Vo vo = new Vo(15, textMismatch, textMismatch);", "modifier": "private final", "type": "Vo", "declarator": "vo = new Vo(15, textMismatch, textMismatch)", "var_name": "vo"}, {"original_string": "private final Facility facility = new Facility(13, textMismatch);", "modifier": "private final", "type": "Facility", "declarator": "facility = new Facility(13, textMismatch)", "var_name": "facility"}, {"original_string": "private final Resource resource = new Resource(19, textMismatch, textMismatch, facility.getId(), vo.getId());", "modifier": "private final", "type": "Resource", "declarator": "resource = new Resource(19, textMismatch, textMismatch, facility.getId(), vo.getId())", "var_name": "resource"}, {"original_string": "private final Group group = new Group(35, textMismatch, textMismatch);", "modifier": "private final", "type": "Group", "declarator": "group = new Group(35, textMismatch, textMismatch)", "var_name": "group"}, {"original_string": "private Member member = new Member(13, user.getId(), vo.getId(), Status.VALID);", "modifier": "private", "type": "Member", "declarator": "member = new Member(13, user.getId(), vo.getId(), Status.VALID)", "var_name": "member"}, {"original_string": "private Candidate candidate;", "modifier": "private", "type": "Candidate", "declarator": "candidate", "var_name": "candidate"}, {"original_string": "private final Destination destination = new Destination(32, textMismatch, textMismatch);", "modifier": "private final", "type": "Destination", "declarator": "destination = new Destination(32, textMismatch, textMismatch)", "var_name": "destination"}, {"original_string": "private final Host host = new Host(32, textMismatch);", "modifier": "private final", "type": "Host", "declarator": "host = new Host(32, textMismatch)", "var_name": "host"}, {"original_string": "private final Owner owner = new Owner(39, textMismatch, textMismatch, OwnerType.administrative);", "modifier": "private final", "type": "Owner", "declarator": "owner = new Owner(39, textMismatch, textMismatch, OwnerType.administrative)", "var_name": "owner"}, {"original_string": "private final Owner owner1 = new Owner(12, null, textMismatch, null);", "modifier": "private final", "type": "Owner", "declarator": "owner1 = new Owner(12, null, textMismatch, null)", "var_name": "owner1"}, {"original_string": "private final Owner owner2 = new Owner(23, textMismatch, textMismatch, OwnerType.technical);", "modifier": "private final", "type": "Owner", "declarator": "owner2 = new Owner(23, textMismatch, textMismatch, OwnerType.technical)", "var_name": "owner2"}, {"original_string": "private final Service service = new Service(29, textMismatch, null);", "modifier": "private final", "type": "Service", "declarator": "service = new Service(29, textMismatch, null)", "var_name": "service"}, {"original_string": "private final AttributeDefinition attributeDefinition1 = new AttributeDefinition(getAttributeDefinition1());", "modifier": "private final", "type": "AttributeDefinition", "declarator": "attributeDefinition1 = new AttributeDefinition(getAttributeDefinition1())", "var_name": "attributeDefinition1"}, {"original_string": "private final Attribute attribute1 = new Attribute(attributeDefinition1);", "modifier": "private final", "type": "Attribute", "declarator": "attribute1 = new Attribute(attributeDefinition1)", "var_name": "attribute1"}, {"original_string": "private final AttributeDefinition attributeDefinition2 = new AttributeDefinition(getAttributeDefinition2());", "modifier": "private final", "type": "AttributeDefinition", "declarator": "attributeDefinition2 = new AttributeDefinition(getAttributeDefinition2())", "var_name": "attributeDefinition2"}, {"original_string": "private final Attribute attribute2 = new Attribute(attributeDefinition2);", "modifier": "private final", "type": "Attribute", "declarator": "attribute2 = new Attribute(attributeDefinition2)", "var_name": "attribute2"}, {"original_string": "private final AttributeDefinition attributeDefinition3 = new AttributeDefinition(getAttributeDefinition3());", "modifier": "private final", "type": "AttributeDefinition", "declarator": "attributeDefinition3 = new AttributeDefinition(getAttributeDefinition3())", "var_name": "attributeDefinition3"}, {"original_string": "private final Attribute attribute3 = new Attribute(attributeDefinition3);", "modifier": "private final", "type": "Attribute", "declarator": "attribute3 = new Attribute(attributeDefinition3)", "var_name": "attribute3"}, {"original_string": "private final AttributeDefinition attributeDefinition4 = new AttributeDefinition(getAttributeDefinition4());", "modifier": "private final", "type": "AttributeDefinition", "declarator": "attributeDefinition4 = new AttributeDefinition(getAttributeDefinition4())", "var_name": "attributeDefinition4"}, {"original_string": "private final Attribute attribute4 = new Attribute(attributeDefinition4);", "modifier": "private final", "type": "Attribute", "declarator": "attribute4 = new Attribute(attributeDefinition4)", "var_name": "attribute4"}, {"original_string": "private RichMember richMember;", "modifier": "private", "type": "RichMember", "declarator": "richMember", "var_name": "richMember"}, {"original_string": "private final RichDestination richDestination = new RichDestination(destination, facility, service);", "modifier": "private final", "type": "RichDestination", "declarator": "richDestination = new RichDestination(destination, facility, service)", "var_name": "richDestination"}, {"original_string": "private final RichResource richResource = new RichResource(resource);", "modifier": "private final", "type": "RichResource", "declarator": "richResource = new RichResource(resource)", "var_name": "richResource"}, {"original_string": "private RichUser richUser;", "modifier": "private", "type": "RichUser", "declarator": "richUser", "var_name": "richUser"}, {"original_string": "private RichGroup richGroup;", "modifier": "private", "type": "RichGroup", "declarator": "richGroup", "var_name": "richGroup"}, {"original_string": "private RichFacility richFacility;", "modifier": "private", "type": "RichFacility", "declarator": "richFacility", "var_name": "richFacility"}, {"original_string": "private ResourceTag resourceTag1 = new ResourceTag(5, \"cosi\" , 2);", "modifier": "private", "type": "ResourceTag", "declarator": "resourceTag1 = new ResourceTag(5, \"cosi\" , 2)", "var_name": "resourceTag1"}, {"original_string": "private ResourceTag resourceTag2 = new ResourceTag(8, null, 5);", "modifier": "private", "type": "ResourceTag", "declarator": "resourceTag2 = new ResourceTag(8, null, 5)", "var_name": "resourceTag2"}, {"original_string": "private SecurityTeam securityTeam1 = new SecurityTeam(1, \"jmeno\", \"popis\");", "modifier": "private", "type": "SecurityTeam", "declarator": "securityTeam1 = new SecurityTeam(1, \"jmeno\", \"popis\")", "var_name": "securityTeam1"}, {"original_string": "private SecurityTeam securityTeam2 = new SecurityTeam(2, null, null);", "modifier": "private", "type": "SecurityTeam", "declarator": "securityTeam2 = new SecurityTeam(2, null, null)", "var_name": "securityTeam2"}, {"original_string": "private TaskResult taskResult1 = new TaskResult();", "modifier": "private", "type": "TaskResult", "declarator": "taskResult1 = new TaskResult()", "var_name": "taskResult1"}, {"original_string": "private BanOnResource banOnResource1 = new BanOnResource(3, new Date(), \"neco\" , 10, 12);", "modifier": "private", "type": "BanOnResource", "declarator": "banOnResource1 = new BanOnResource(3, new Date(), \"neco\" , 10, 12)", "var_name": "banOnResource1"}, {"original_string": "private BanOnResource banOnResource2 = new BanOnResource(4, null, null, 10, 12);", "modifier": "private", "type": "BanOnResource", "declarator": "banOnResource2 = new BanOnResource(4, null, null, 10, 12)", "var_name": "banOnResource2"}, {"original_string": "private BanOnFacility banOnFacility1 = new BanOnFacility(5, new Date(), \"neco\", 10, 12);", "modifier": "private", "type": "BanOnFacility", "declarator": "banOnFacility1 = new BanOnFacility(5, new Date(), \"neco\", 10, 12)", "var_name": "banOnFacility1"}, {"original_string": "private BanOnFacility banOnFacility2 = new BanOnFacility(6, null, null, 10, 12);", "modifier": "private", "type": "BanOnFacility", "declarator": "banOnFacility2 = new BanOnFacility(6, null, null, 10, 12)", "var_name": "banOnFacility2"}], "file": "perun-auditparser/src/test/java/cz/metacentrum/perun/auditparser/AuditParserTest.java"}, "test_case": {"identifier": "testParseLogOnExamples", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParseLogOnExamples() throws Exception {\n\t\tSystem.out.println(CLASS_NAME + \":testParseLogOnExamples()\");\n\n\t\tString log = \"Hosts [\"\n\t\t\t+ \"Host:[id=<982>, hostname=<konos37.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<981>, hostname=<konos36.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<980>, hostname=<konos34.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<979>, hostname=<konos33.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<978>, hostname=<konos30.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<977>, hostname=<konos28.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<976>, hostname=<konos27.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<975>, hostname=<konos26.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<974>, hostname=<konos24.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<973>, hostname=<konos22.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<972>, hostname=<konos20.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<971>, hostname=<konos19.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<970>, hostname=<konos18.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<969>, hostname=<konos17.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<968>, hostname=<konos16.fav.zcu.cz>], \"\n\t\t\t+ \"Host:[id=<967>, hostname=<konos15.fav.zcu.cz>]] \"\n\t\t\t+ \"removed from cluster \"\n\t\t\t+ \"Facility:[id=<371>, name=<konos.fav.zcu.cz>, type=<cluster>]\";\n\n\t\tString log2 = \"RichMember:[id=<12521>, userId=<9181>, voId=<21>, status=<DISABLED>, sourceGroupId=<\\\\0>, sponsored=<true>, suspendedTo=<\\\\0>, \"\n\t\t\t+ \"user=<User:[id=<9181>,uuid=<null>,titleBefore=<null>,firstName=<Gracian>,lastName=<Tejral>,middleName=<null>,titleAfter=<null>]>, \"\n\t\t\t+ \"userExtSources=<[UserExtSource:[id=<13621>, login=<8087>, source=<ExtSource:[id=<2>, name=<PERUNPEOPLE>, type=<cz.metacentrum.perun.core.impl.ExtSourceSql>]>, userId=<-1> loa=<0>, lastAccess=<2019-06-17 00:00:00.000000>]]>, \"\n\t\t\t+ \"userAttributes=<[Attribute:[id=<800>, friendlyName=<kerberosLogins>, namespace=<urn:perun:user:attribute-def:def>, type=<java.util.ArrayList>, value=<[tejral@META, tejral@EINFRA]>], \"\n\t\t\t+ \"Attribute:[id=<49>, friendlyName=<id>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.Integer>, value=<9181>], \"\n\t\t\t+ \"Attribute:[id=<50>, friendlyName=<firstName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Gracian>], \"\n\t\t\t+ \"Attribute:[id=<51>, friendlyName=<lastName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Tejral>], \"\n\t\t\t+ \"Attribute:[id=<52>, friendlyName=<middleName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], \"\n\t\t\t+ \"Attribute:[id=<53>, friendlyName=<titleBefore>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], \"\n\t\t\t+ \"Attribute:[id=<54>, friendlyName=<titleAfter>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], \"\n\t\t\t+ \"Attribute:[id=<221>, friendlyName=<uid-namespace:ruk>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<12762>], \"\n\t\t\t+ \"Attribute:[id=<222>, friendlyName=<uid-namespace:ics>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<62434>], \"\n\t\t\t+ \"Attribute:[id=<1140>, friendlyName=<displayName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Gracian Tejral>], \"\n\t\t\t+ \"Attribute:[id=<220>, friendlyName=<uid-namespace:zcu>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<62433>], \"\n\t\t\t+ \"Attribute:[id=<146>, friendlyName=<login-namespace:einfra>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.String>, value=<tejral>]]>, \"\n\t\t\t+ \"memberAttributes=<[Attribute:[id=<32>, friendlyName=<id>, namespace=<urn:perun:member:attribute-def:core>, type=<java.lang.Integer>, value=<12521>], \"\n\t\t\t+ \"Attribute:[id=<860>, friendlyName=<membershipExpiration>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<2010-12-31>], \"\n\t\t\t+ \"Attribute:[id=<880>, friendlyName=<status>, namespace=<urn:perun:member:attribute-def:core>, type=<java.lang.String>, value=<DISABLED>], \"\n\t\t\t+ \"Attribute:[id=<60>, friendlyName=<mail>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<gracian.tejral@centrum.cz>], \"\n\t\t\t+ \"Attribute:[id=<122>, friendlyName=<phone>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<605469950>], \"\n\t\t\t+ \"Attribute:[id=<123>, friendlyName=<organization>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<Univerzita Karlova>]]>] \"\n\t\t\t+ \"validated\";\n\n\t\tString log3 = \"Group synchronization Group:[id=<21>, parentGroupId=<35>, name=<members>, description=<Group containing VO members>, voId=<21>]: \"\n\t\t\t+ \"Member RichMember:[id=<11523>, userId=<3242>, voId=<21>, status=<DISABLED>, sourceGroupId=<\\\\0>, sponsored=<true>, suspendedTo=<\\\\0>, user=<User:[id=<3242>,titleBefore=<null>,firstName=<Jiri>,lastName=<Novacek>,middleName=<null>,titleAfter=<null>]>, userExtSources=<[UserExtSource:[id=<6083>, login=<novej>, source=<ExtSource:[id=<3>, name=<META>, type=<cz.metacentrum.perun.core.impl.ExtSourceKerberos>]>, loa=<0>, lastAccess=<2019-06-17 00:00:00.000000>], UserExtSource:[id=<4534>, login=<16143>, source=<ExtSource:[id=<2>, name=<PERUNPEOPLE>, type=<cz.metacentrum.perun.core.impl.ExtSourceSql>]>, loa=<0>, lastAccess=<\\\\0>], UserExtSource:[id=<4916>, login=<novej>, source=<ExtSource:[id=<2>, name=<PERUNPEOPLE>, type=<cz.metacentrum.perun.core.impl.ExtSourceSql>]>, loa=<0>, lastAccess=<\\\\0>], UserExtSource:[id=<9542>, login=<151132@muni.cz>, source=<ExtSource:[id=<142>, name=<https://idp2.ics.muni.cz/idp/shibboleth>, type=<cz.metacentrum.perun.core.impl.ExtSourceIdp>]>, loa=<0>, lastAccess=<\\\\0>], UserExtSource:[id=<9543>, login=<151132>, source=<ExtSource:[id=<1>, name=<LDAPMU>, type=<cz.metacentrum.perun.core.impl.ExtSourceLdap>]>, loa=<0>, lastAccess=<\\\\0>]]>, userAttributes=<[Attribute:[id=<800>, friendlyName=<kerberosLogins>, namespace=<urn:perun:user:attribute-def:def>, type=<java.util.ArrayList>, value=<[novej@META, novej@EINFRA]>], Attribute:[id=<49>, friendlyName=<id>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.Integer>, value=<3242>], Attribute:[id=<50>, friendlyName=<firstName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Jiri>], Attribute:[id=<51>, friendlyName=<lastName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Novacek>], Attribute:[id=<52>, friendlyName=<middleName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], Attribute:[id=<53>, friendlyName=<titleBefore>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], Attribute:[id=<54>, friendlyName=<titleAfter>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<null>], Attribute:[id=<221>, friendlyName=<uid-namespace:ruk>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<13191>], Attribute:[id=<222>, friendlyName=<uid-namespace:ics>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<62861>], Attribute:[id=<1140>, friendlyName=<displayName>, namespace=<urn:perun:user:attribute-def:core>, type=<java.lang.String>, value=<Jiri Novacek>], Attribute:[id=<202>, friendlyName=<perunPeopleId>, namespace=<urn:perun:user:attribute-def:opt>, type=<java.lang.String>, value=<16143>], Attribute:[id=<220>, friendlyName=<uid-namespace:zcu>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.Integer>, value=<62863>], Attribute:[id=<146>, friendlyName=<login-namespace:einfra>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.String>, value=<novej>], Attribute:[id=<440>, friendlyName=<userCertificates>, namespace=<urn:perun:user:attribute-def:def>, type=<java.util.LinkedHashMap>, value=<{/C=CZ/O=Masarykova univerzita/CN=Ji\\\\\\\\xC5\\\\\\\\x99\\\\\\\\xC3\\\\\\\\xAD Nov\\\\\\\\xC3\\\\\\\\xA1\\\\\\\\xC4\\\\\\\\x8Dek/unstructuredName=151132=-----BEGIN CERTIFICATE-----\\nMIIElTCCA32gAwIBAgIQUAJAYK+ap+hI8GV/zSI4CjANBgkqhkiG9w0BAQUFADA7\\n\"\n\t\t\t+ \"MQswCQYDVQQGEwJOTDEPMA0GA1UEChMGVEVSRU5BMRswGQYDVQQDExJURVJFTkEg\\n\"\n\t\t\t+ \"UGVyc29uYWwgQ0EwHhcNMTIwMjAyMDAwMDAwWhcNMTUwMjAxMjM1OTU5WjBfMQsw\\n\"\n\t\t\t+ \"CQYDVQQGEwJDWjEeMBwGA1UEChMVTWFzYXJ5a292YSB1bml2ZXJ6aXRhMRkwFwYD\\n\"\n\t\t\t+ \"VQQDDBBKacWZw60gTm92w6HEjWVrMRUwEwYJKoZIhvcNAQkCFgYxNTExMzIwggEi\\n\"\n\t\t\t+ \"MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDcovQPyApqR3NLp0Ald8VpbQ2f\\n\"\n\t\t\t+ \"k2QoxW/sKznL39QPcxkNo/0APU5bOMYWIezx9l1FYaZ6gNQwdiwuiNJLaCoCkMJU\\n\"\n\t\t\t+ \"/A8xtCpfuZPU3VOYhtflOzNX3ilnKNN/rDkdTBPQZD1oJTxEKNsZ5nBQ5ni2OlRI\\n\"\n\t\t\t+ \"8uVQYw0RGvgZwb6wxgVqgClAN3NI4M0PVzzqTVx/pdXN+R/ECHcrR5Jn+mRJwVP8\\n\"\n\t\t\t+ \"uFfgkG5wEgom537rNHaDGBWPq5W1bd63ibM7F4toUgKZ7RIJZzZK/EWbS4g7dx42\\n\"\n\t\t\t+ \"aZ4V+B+eEkrVsDJcXhCutfEDHfEjSvJ855EVxzeWo1TYmPnzo1eybBGg4Tb1AgMB\\n\"\n\t\t\t+ \"AAGjggFvMIIBazAfBgNVHSMEGDAWgBRjTUNaGUg/xEbBArq/7g7lgrdmpjAdBgNV\\n\"\n\t\t\t+ \"HQ4EFgQU5fe4bHQuhHC4WXM8JaHCLg3NXLkwDgYDVR0PAQH/BAQDAgWgMAwGA1Ud\\n\"\n\t\t\t+ \"EwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwQGCCsGAQUFBwMCMBgGA1UdIAQR\\n\"\n\t\t\t+ \"MA8wDQYLKwYBBAGyMQECAh0wPwYDVR0fBDgwNjA0oDKgMIYuaHR0cDovL2NybC50\\n\"\n\t\t\t+ \"Y3MudGVyZW5hLm9yZy9URVJFTkFQZXJzb25hbENBLmNybDByBggrBgEFBQcBAQRm\\n\"\n\t\t\t+ \"MGQwOgYIKwYBBQUHMAKGLmh0dHA6Ly9jcnQudGNzLnRlcmVuYS5vcmcvVEVSRU5B\\n\"\n\t\t\t+ \"UGVyc29uYWxDQS5jcnQwJgYIKwYBBQUHMAGGGmh0dHA6Ly9vY3NwLnRjcy50ZXJl\\n\"\n\t\t\t+ \"bmEub3JnMB0GA1UdEQQWMBSBEm5vdmVqQG1haWwubXVuaS5jejANBgkqhkiG9w0B\\n\"\n\t\t\t+ \"AQUFAAOCAQEAO7XXTdWNc6Bm5tCzFVi3QR75hQoJJP4mkW5vNHe4z+XWPmGp4aS1\\n\"\n\t\t\t+ \"ye3Co4oQTzF2zmeEsNVArbii9OTFmTZXakGsH/WhFG4trGqW3AbCL28FGoz8I4JW\\n\"\n\t\t\t+ \"vkJMKmzZHvP/mdJFfQZVB5OaB5mSZVLt9kOvnb0aAYApLQZb8zbyQ4up96avOXyQ\\n\"\n\t\t\t+ \"7zvGwLIn2O9S+yNPShe39lMVPqb5mkAgOdUA3KcqlNJQtwS+p5lZXzDuBzJZY+Gv\\n\"\n\t\t\t+ \"/bJtJWtvSfVlRReDTfKW5qzJkFR/YqnGYU6R5Xq70zMdKtdjGgDkFiybJB9619lj\\n\"\n\t\t\t+ \"rLwA+iL1DZr6jWGINA2ROsOwwSYqTRF7AQ==\\n\"\n\t\t\t+ \"-----END CERTIFICATE-----\\n\"\n\t\t\t+ \"}>], Attribute:[id=<441>, friendlyName=<userCertDNs>, namespace=<urn:perun:user:attribute-def:def>, type=<java.util.LinkedHashMap>, value=<{/C=CZ/O=Masarykova univerzita/CN=Ji\\\\\\\\xC5\\\\\\\\x99\\\\\\\\xC3\\\\\\\\xAD Nov\\\\\\\\xC3\\\\\\\\xA1\\\\\\\\xC4\\\\\\\\x8Dek/unstructuredName=151132=/C=NL/O=TERENA/CN=TERENA Personal CA}>]]>, memberAttributes=<[Attribute:[id=<32>, friendlyName=<id>, namespace=<urn:perun:member:attribute-def:core>, type=<java.lang.Integer>, value=<11523>], Attribute:[id=<860>, friendlyName=<membershipExpiration>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<2012-01-31>], Attribute:[id=<880>, friendlyName=<status>, namespace=<urn:perun:member:attribute-def:core>, type=<java.lang.String>, value=<DISABLED>], Attribute:[id=<60>, friendlyName=<mail>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<novej@ncbr.chemi.muni.cz>], Attribute:[id=<122>, friendlyName=<phone>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<+420-549 492 674>], Attribute:[id=<123>, friendlyName=<organization>, namespace=<urn:perun:member:attribute-def:def>, type=<java.lang.String>, value=<Masarykova univerzita>]]>] removed.\";\n\n\t\tString log4 = \"Attribute:[id=<146>, friendlyName=<login-namespace:einfra>, namespace=<urn:perun:user:attribute-def:def>, type=<java.lang.String>, value=<tejral>]\";\n\n\t\tString log5 = \"Member:[id=<3899>, userId=<3199>, voId=<21>, status=<VALID>, sourceGroupId=<\\\\0>, sponsored=<true>, suspendedTo=<\" + BeansUtils.getDateFormatter().format(Date.from(Instant.now())) + \">] Cokoliv:[]\";\n\n\t\t//Long start = System.currentTimeMillis();\n\t\tList<PerunBean> list = AuditParser.parseLog(log);\n\t\t//Long end = System.currentTimeMillis()-start;\n\t\t//System.out.println(\"Trvani 1 v case = \" + end.toString());\n\t\t//start = System.currentTimeMillis();\n\t\tList<PerunBean> list2 = AuditParser.parseLog(log2);\n\t\t//end = System.currentTimeMillis()-start;\n\t\t//System.out.println(\"Trvani 2 v case = \" + end.toString());\n\t\t//start = System.currentTimeMillis();\n\t\tList<PerunBean> list3 = AuditParser.parseLog(log3);\n\t\t//end = System.currentTimeMillis()-start;\n\t\t//System.out.println(\"Trvani 3 v case = \" + end.toString());\n\t\t//start = System.currentTimeMillis();\n\t\tList<PerunBean> list4 = AuditParser.parseLog(log4);\n\t\t//end = System.currentTimeMillis()-start;\n\t\tassertEquals(17, list.size());\n\t\tassertEquals(1, list2.size());\n\t\tassertEquals(2, list3.size());\n\t\tassertEquals(1, list4.size());\n\n\t\tList<PerunBean> list5 = AuditParser.parseLog(log5);\n\t}", "signature": "void testParseLogOnExamples()", "full_signature": "@Test public void testParseLogOnExamples()", "class_method_signature": "AuditParserTest.testParseLogOnExamples()", "testcase": true, "constructor": false, "invocations": ["println", "format", "getDateFormatter", "from", "now", "parseLog", "parseLog", "parseLog", "parseLog", "assertEquals", "size", "assertEquals", "size", "assertEquals", "size", "assertEquals", "size", "parseLog"]}, "focal_class": {"identifier": "AuditParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger loger = LoggerFactory.getLogger(AuditParser.class);", "modifier": "private final static", "type": "Logger", "declarator": "loger = LoggerFactory.getLogger(AuditParser.class)", "var_name": "loger"}, {"original_string": "static final Pattern perunBeanStartPattern = Pattern.compile(\"\\\\w+:\\\\[\");", "modifier": "static final", "type": "Pattern", "declarator": "perunBeanStartPattern = Pattern.compile(\"\\\\w+:\\\\[\")", "var_name": "perunBeanStartPattern"}, {"original_string": "static final Pattern pointyAndSquareBracket = Pattern.compile(\".\\\\[|.\\\\]|[^\\\\\\\\](\\\\\\\\\\\\\\\\)*(<|>)\");", "modifier": "static final", "type": "Pattern", "declarator": "pointyAndSquareBracket = Pattern.compile(\".\\\\[|.\\\\]|[^\\\\\\\\](\\\\\\\\\\\\\\\\)*(<|>)\")", "var_name": "pointyAndSquareBracket"}], "methods": [{"identifier": "parseLog", "parameters": "(String log)", "modifiers": "public static", "return": "List<PerunBean>", "signature": "List<PerunBean> parseLog(String log)", "full_signature": "public static List<PerunBean> parseLog(String log)", "class_method_signature": "AuditParser.parseLog(String log)", "testcase": false, "constructor": false}, {"identifier": "beansToMap", "parameters": "(String log)", "modifiers": "private static", "return": "List<Pair<String, Map<String, String>>>", "signature": "List<Pair<String, Map<String, String>>> beansToMap(String log)", "full_signature": "private static List<Pair<String, Map<String, String>>> beansToMap(String log)", "class_method_signature": "AuditParser.beansToMap(String log)", "testcase": false, "constructor": false}, {"identifier": "parseOfLog", "parameters": "(String log)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> parseOfLog(String log)", "full_signature": "private static List<String> parseOfLog(String log)", "class_method_signature": "AuditParser.parseOfLog(String log)", "testcase": false, "constructor": false}, {"identifier": "CutStartOfLog", "parameters": "(String log)", "modifiers": "private static", "return": "String", "signature": "String CutStartOfLog(String log)", "full_signature": "private static String CutStartOfLog(String log)", "class_method_signature": "AuditParser.CutStartOfLog(String log)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "User", "signature": "User createUser(Map<String, String> beanAttr)", "full_signature": "private static User createUser(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createUser(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createAttribute", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Attribute", "signature": "Attribute createAttribute(Map<String, String> beanAttr)", "full_signature": "private static Attribute createAttribute(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createAttribute(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createAttributeDefinition", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "AttributeDefinition", "signature": "AttributeDefinition createAttributeDefinition(Map<String, String> beanAttr)", "full_signature": "private static AttributeDefinition createAttributeDefinition(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createAttributeDefinition(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createCandidate", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Candidate", "signature": "Candidate createCandidate(Map<String, String> beanAttr)", "full_signature": "private static Candidate createCandidate(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createCandidate(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createDestination", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Destination", "signature": "Destination createDestination(Map<String, String> beanAttr)", "full_signature": "private static Destination createDestination(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createDestination(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createExtSource", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "ExtSource", "signature": "ExtSource createExtSource(Map<String, String> beanAttr)", "full_signature": "private static ExtSource createExtSource(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createExtSource(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createFacility", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Facility", "signature": "Facility createFacility(Map<String, String> beanAttr)", "full_signature": "private static Facility createFacility(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createFacility(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Group", "signature": "Group createGroup(Map<String, String> beanAttr)", "full_signature": "private static Group createGroup(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createGroup(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createHost", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Host", "signature": "Host createHost(Map<String, String> beanAttr)", "full_signature": "private static Host createHost(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createHost(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createMember", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Member", "signature": "Member createMember(Map<String, String> beanAttr)", "full_signature": "private static Member createMember(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createMember(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createOwner", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Owner", "signature": "Owner createOwner(Map<String, String> beanAttr)", "full_signature": "private static Owner createOwner(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createOwner(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createResource", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Resource", "signature": "Resource createResource(Map<String, String> beanAttr)", "full_signature": "private static Resource createResource(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createResource(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createService", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Service", "signature": "Service createService(Map<String, String> beanAttr)", "full_signature": "private static Service createService(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createService(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createUserExtSource", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "UserExtSource", "signature": "UserExtSource createUserExtSource(Map<String, String> beanAttr)", "full_signature": "private static UserExtSource createUserExtSource(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createUserExtSource(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createVo", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Vo", "signature": "Vo createVo(Map<String, String> beanAttr)", "full_signature": "private static Vo createVo(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createVo(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createAuthorship", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Authorship", "signature": "Authorship createAuthorship(Map<String, String> beanAttr)", "full_signature": "private static Authorship createAuthorship(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createAuthorship(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createResourceTag", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "ResourceTag", "signature": "ResourceTag createResourceTag(Map<String, String> beanAttr)", "full_signature": "private static ResourceTag createResourceTag(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createResourceTag(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createSecurityTeam", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "SecurityTeam", "signature": "SecurityTeam createSecurityTeam(Map<String, String> beanAttr)", "full_signature": "private static SecurityTeam createSecurityTeam(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createSecurityTeam(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createTaskResult", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "TaskResult", "signature": "TaskResult createTaskResult(Map<String, String> beanAttr)", "full_signature": "private static TaskResult createTaskResult(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createTaskResult(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createBanOnResource", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Ban", "signature": "Ban createBanOnResource(Map<String, String> beanAttr)", "full_signature": "private static Ban createBanOnResource(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createBanOnResource(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createBanOnFacility", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "Ban", "signature": "Ban createBanOnFacility(Map<String, String> beanAttr)", "full_signature": "private static Ban createBanOnFacility(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createBanOnFacility(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichDestination", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichDestination", "signature": "RichDestination createRichDestination(Map<String, String> beanAttr)", "full_signature": "private static RichDestination createRichDestination(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichDestination(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichMember", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichMember", "signature": "RichMember createRichMember(Map<String, String> beanAttr)", "full_signature": "private static RichMember createRichMember(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichMember(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichUser", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichUser", "signature": "RichUser createRichUser(Map<String, String> beanAttr)", "full_signature": "private static RichUser createRichUser(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichUser(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichGroup", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichGroup", "signature": "RichGroup createRichGroup(Map<String, String> beanAttr)", "full_signature": "private static RichGroup createRichGroup(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichGroup(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichFacility", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichFacility", "signature": "RichFacility createRichFacility(Map<String, String> beanAttr)", "full_signature": "private static RichFacility createRichFacility(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichFacility(Map<String, String> beanAttr)", "testcase": false, "constructor": false}, {"identifier": "createRichResource", "parameters": "(Map<String, String> beanAttr)", "modifiers": "private static", "return": "RichResource", "signature": "RichResource createRichResource(Map<String, String> beanAttr)", "full_signature": "private static RichResource createRichResource(Map<String, String> beanAttr)", "class_method_signature": "AuditParser.createRichResource(Map<String, String> beanAttr)", "testcase": false, "constructor": false}], "file": "perun-auditparser/src/main/java/cz/metacentrum/perun/auditparser/AuditParser.java"}, "focal_method": {"identifier": "parseLog", "parameters": "(String log)", "modifiers": "public static", "return": "List<PerunBean>", "body": "public static List<PerunBean> parseLog(String log) {\n\t\tList<PerunBean> listPerunBeans = new ArrayList<PerunBean>();\n\t\tPerunBean perunBean = null;\n\t\t//Parse log to List of text Beanss\n\t\tList<Pair<String, Map<String, String>>> listOfTextBeans = new ArrayList<Pair<String, Map<String, String>>>();\n\t\ttry {\n\t\t\tlistOfTextBeans = beansToMap(log);\n\t\t} catch (RuntimeException ex) {\n\t\t\tloger.error(\"Message \" + log + \" was not correctly parsed to Map<NameOfBean,BodyOfBean>\", ex);\n\t\t}\n\t\t//For every bean try to find it and create object from text\n\t\tfor(Pair<String, Map<String, String>> p: listOfTextBeans) {\n\t\t\ttry {\n\t\t\t\tperunBean = null;\n\t\t\t\tif(p.getLeft().equals(\"Attribute\")) perunBean = createAttribute(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"AttributeDefinition\")) perunBean = createAttributeDefinition(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Candidate\")) perunBean = createCandidate(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Destination\")) perunBean = createDestination(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"ExtSource\")) perunBean = createExtSource(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichFacility\")) perunBean = createRichFacility(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Facility\")) perunBean = createFacility(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Group\")) perunBean = createGroup(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Host\")) perunBean = createHost(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Member\")) perunBean = createMember(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Owner\")) perunBean = createOwner(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Resource\")) perunBean = createResource(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichDestination\")) perunBean = createRichDestination(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichMember\")) perunBean = createRichMember(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichUser\")) perunBean = createRichUser(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichGroup\")) perunBean = createRichGroup(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"RichResource\")) perunBean = createRichResource(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Service\")) perunBean = createService(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"User\")) perunBean = createUser(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"UserExtSource\")) perunBean = createUserExtSource(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Vo\")) perunBean = createVo(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"Authorship\")) perunBean = createAuthorship(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"ResourceTag\")) perunBean = createResourceTag(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"SecurityTeam\")) perunBean = createSecurityTeam(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"TaskResult\")) perunBean = createTaskResult(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"BanOnResource\")) perunBean = createBanOnResource(p.getRight());\n\t\t\t\telse if(p.getLeft().equals(\"BanOnFacility\")) perunBean = createBanOnFacility(p.getRight());\n\t\t\t\telse loger.debug(\"Object of this type can't be parsed cause there is no such object in parser's branches. ObjectName:\" + p.getLeft());\n\t\t\t\tif(perunBean != null) listPerunBeans.add(perunBean);\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tloger.error(\"Object name \" + p.getLeft() + \" with attributes \" + p.getRight() + \" was not parsed due to fail {} \", e);\n\t\t\t}\n\t\t}\n\t\treturn listPerunBeans;\n\t}", "signature": "List<PerunBean> parseLog(String log)", "full_signature": "public static List<PerunBean> parseLog(String log)", "class_method_signature": "AuditParser.parseLog(String log)", "testcase": false, "constructor": false, "invocations": ["beansToMap", "error", "equals", "getLeft", "createAttribute", "getRight", "equals", "getLeft", "createAttributeDefinition", "getRight", "equals", "getLeft", "createCandidate", "getRight", "equals", "getLeft", "createDestination", "getRight", "equals", "getLeft", "createExtSource", "getRight", "equals", "getLeft", "createRichFacility", "getRight", "equals", "getLeft", "createFacility", "getRight", "equals", "getLeft", "createGroup", "getRight", "equals", "getLeft", "createHost", "getRight", "equals", "getLeft", "createMember", "getRight", "equals", "getLeft", "createOwner", "getRight", "equals", "getLeft", "createResource", "getRight", "equals", "getLeft", "createRichDestination", "getRight", "equals", "getLeft", "createRichMember", "getRight", "equals", "getLeft", "createRichUser", "getRight", "equals", "getLeft", "createRichGroup", "getRight", "equals", "getLeft", "createRichResource", "getRight", "equals", "getLeft", "createService", "getRight", "equals", "getLeft", "createUser", "getRight", "equals", "getLeft", "createUserExtSource", "getRight", "equals", "getLeft", "createVo", "getRight", "equals", "getLeft", "createAuthorship", "getRight", "equals", "getLeft", "createResourceTag", "getRight", "equals", "getLeft", "createSecurityTeam", "getRight", "equals", "getLeft", "createTaskResult", "getRight", "equals", "getLeft", "createBanOnResource", "getRight", "equals", "getLeft", "createBanOnFacility", "getRight", "debug", "getLeft", "add", "error", "getLeft", "getRight"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}