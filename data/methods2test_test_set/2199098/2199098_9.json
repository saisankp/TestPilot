{"test_class": {"identifier": "PUMAAuthServiceImplTest", "superclass": "extends AbstractBridgedComponentTestCase", "interfaces": "", "fields": [{"original_string": "private Mockery mockery = new Mockery()\n    {\n        {\n            setImposteriser(ClassImposteriser.INSTANCE);\n        }\n    };", "modifier": "private", "type": "Mockery", "declarator": "mockery = new Mockery()\n    {\n        {\n            setImposteriser(ClassImposteriser.INSTANCE);\n        }\n    }", "var_name": "mockery"}, {"original_string": "private XWiki xwikiMock;", "modifier": "private", "type": "XWiki", "declarator": "xwikiMock", "var_name": "xwikiMock"}, {"original_string": "private XWikiGroupService xwikiGroupServiceMock;", "modifier": "private", "type": "XWikiGroupService", "declarator": "xwikiGroupServiceMock", "var_name": "xwikiGroupServiceMock"}, {"original_string": "private PumaLocator pumaLocatorMock;", "modifier": "private", "type": "PumaLocator", "declarator": "pumaLocatorMock", "var_name": "pumaLocatorMock"}, {"original_string": "private PumaProfile pumaProfileMock;", "modifier": "private", "type": "PumaProfile", "declarator": "pumaProfileMock", "var_name": "pumaProfileMock"}, {"original_string": "private User pumaUserMock;", "modifier": "private", "type": "User", "declarator": "pumaUserMock", "var_name": "pumaUserMock"}, {"original_string": "private PUMAAuthServiceImpl authService;", "modifier": "private", "type": "PUMAAuthServiceImpl", "declarator": "authService", "var_name": "authService"}, {"original_string": "private XWikiDocument user;", "modifier": "private", "type": "XWikiDocument", "declarator": "user", "var_name": "user"}, {"original_string": "private XWikiDocument group;", "modifier": "private", "type": "XWikiDocument", "declarator": "group", "var_name": "group"}, {"original_string": "private BaseObject groupObject;", "modifier": "private", "type": "BaseObject", "declarator": "groupObject", "var_name": "groupObject"}, {"original_string": "private BaseClass groupClass;", "modifier": "private", "type": "BaseClass", "declarator": "groupClass", "var_name": "groupClass"}], "file": "authenticators/xwiki-authentication-puma/src/test/java/com/xwiki/authentication/puma/PUMAAuthServiceImplTest.java"}, "test_case": {"identifier": "testSyncGroupsMembershipFromPUMA", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSyncGroupsMembershipFromPUMA() throws Exception\n    {\n        final Group pumaGroup1 = this.mockery.mock(Group.class, \"group1\");\n        final Group pumaGroup2 = this.mockery.mock(Group.class, \"group2\");\n        \n        this.mockery.checking(new Expectations()\n        {{\n            // PUMAAuthServiceImpl#syncGroupsMembershipFromPUMA\n            allowing(xwikiMock).getXWikiPreference(with(any(String.class)), with(any(XWikiContext.class))); will(returnValue(group.getFullName() + \"=cn=group,ou=groups,o=xwiki,c=org\"\n                    + \"|XWiki.group2=cn=group2,ou=groups,o=xwiki,c=org\"));\n            allowing(pumaLocatorMock).findGroupsByPrincipal(pumaUserMock, true); will(returnValue(Arrays.asList(pumaGroup1, pumaGroup2)));\n            allowing(pumaProfileMock).getIdentifier(pumaGroup1); will(returnValue(\"cn=group,ou=groups,o=xwiki,c=org\"));\n            allowing(pumaProfileMock).getIdentifier(pumaGroup2); will(returnValue(\"cn=group3,ou=groups,o=xwiki,c=org\"));\n            // AbstractAuthServiceImpl#syncGroupsMembership\n            allowing(xwikiMock).getGroupService(getContext()); will(returnValue(xwikiGroupServiceMock));\n            allowing(xwikiMock).getXClass(groupClass.getDocumentReference(), getContext()); will(returnValue(groupClass));\n            allowing(xwikiGroupServiceMock).getAllGroupsNamesForMember(user.getFullName(), 0, 0, getContext()); will(returnValue(Arrays.<String> asList()));\n            // user added to the group\n            oneOf(xwikiMock).getDocument(group.getFullName(), getContext()); will(returnValue(group));\n            oneOf(xwikiMock).getGroupClass(getContext()); will(returnValue(groupClass));\n            oneOf(xwikiMock).saveDocument(group, getContext());\n        }});\n\n        this.authService.syncGroupsMembershipFromPUMA(this.user, this.pumaUserMock, this.pumaLocatorMock, this.pumaProfileMock, getContext());\n    }", "signature": "void testSyncGroupsMembershipFromPUMA()", "full_signature": "@Test public void testSyncGroupsMembershipFromPUMA()", "class_method_signature": "PUMAAuthServiceImplTest.testSyncGroupsMembershipFromPUMA()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "checking", "getXWikiPreference", "allowing", "with", "any", "with", "any", "will", "returnValue", "getFullName", "findGroupsByPrincipal", "allowing", "will", "returnValue", "asList", "getIdentifier", "allowing", "will", "returnValue", "getIdentifier", "allowing", "will", "returnValue", "getGroupService", "allowing", "getContext", "will", "returnValue", "getXClass", "allowing", "getDocumentReference", "getContext", "will", "returnValue", "getAllGroupsNamesForMember", "allowing", "getFullName", "getContext", "will", "returnValue", "asList", "getDocument", "oneOf", "getFullName", "getContext", "will", "returnValue", "getGroupClass", "oneOf", "getContext", "will", "returnValue", "saveDocument", "oneOf", "getContext", "syncGroupsMembershipFromPUMA", "getContext"]}, "focal_class": {"identifier": "PUMAAuthServiceImpl", "superclass": "extends AbstractSSOAuthServiceImpl", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(PUMAAuthServiceImpl.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(PUMAAuthServiceImpl.class)", "var_name": "LOG"}, {"original_string": "private PUMAConfig config = null;", "modifier": "private", "type": "PUMAConfig", "declarator": "config = null", "var_name": "config"}, {"original_string": "private XWikiAuthService fallback = null;", "modifier": "private", "type": "XWikiAuthService", "declarator": "fallback = null", "var_name": "fallback"}], "methods": [{"identifier": "getConfig", "parameters": "()", "modifiers": "private", "return": "PUMAConfig", "signature": "PUMAConfig getConfig()", "full_signature": "private PUMAConfig getConfig()", "class_method_signature": "PUMAAuthServiceImpl.getConfig()", "testcase": false, "constructor": false}, {"identifier": "getFallback", "parameters": "(XWikiContext context)", "modifiers": "protected", "return": "XWikiAuthService", "signature": "XWikiAuthService getFallback(XWikiContext context)", "full_signature": "protected XWikiAuthService getFallback(XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.getFallback(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "authenticateInContext", "parameters": "(boolean local, XWikiContext context)", "modifiers": "protected", "return": "Principal", "signature": "Principal authenticateInContext(boolean local, XWikiContext context)", "full_signature": "protected Principal authenticateInContext(boolean local, XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.authenticateInContext(boolean local, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getPumaHome", "parameters": "(XWikiContext context)", "modifiers": "protected", "return": "PumaHome", "signature": "PumaHome getPumaHome(XWikiContext context)", "full_signature": "protected PumaHome getPumaHome(XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.getPumaHome(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getUserProfileByUid", "parameters": "(String validXWikiUserName, String ssoUser, XWikiContext context)", "modifiers": "protected", "return": "XWikiDocument", "signature": "XWikiDocument getUserProfileByUid(String validXWikiUserName, String ssoUser, XWikiContext context)", "full_signature": "protected XWikiDocument getUserProfileByUid(String validXWikiUserName, String ssoUser, XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.getUserProfileByUid(String validXWikiUserName, String ssoUser, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getAvailableUserProfile", "parameters": "(String validXWikiUserName, String ssoUser, XWikiContext context)", "modifiers": "protected", "return": "XWikiDocument", "signature": "XWikiDocument getAvailableUserProfile(String validXWikiUserName, String ssoUser, XWikiContext context)", "full_signature": "protected XWikiDocument getAvailableUserProfile(String validXWikiUserName, String ssoUser, XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.getAvailableUserProfile(String validXWikiUserName, String ssoUser, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "syncUserFromPUMA", "parameters": "(XWikiDocument userProfile, String ssoUser, User user, PumaProfile pumaProfile,\n        XWikiContext context)", "modifiers": "protected", "return": "void", "signature": "void syncUserFromPUMA(XWikiDocument userProfile, String ssoUser, User user, PumaProfile pumaProfile,\n        XWikiContext context)", "full_signature": "protected void syncUserFromPUMA(XWikiDocument userProfile, String ssoUser, User user, PumaProfile pumaProfile,\n        XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.syncUserFromPUMA(XWikiDocument userProfile, String ssoUser, User user, PumaProfile pumaProfile,\n        XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "syncGroupsMembershipFromPUMA", "parameters": "(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "modifiers": "protected", "return": "void", "signature": "void syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "full_signature": "protected void syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "updateUserFromPUMA", "parameters": "(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "modifiers": "protected", "return": "void", "signature": "void updateUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "full_signature": "protected void updateUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.updateUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "createUserFromPUMA", "parameters": "(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "modifiers": "protected", "return": "XWikiDocument", "signature": "XWikiDocument createUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "full_signature": "protected XWikiDocument createUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.createUserFromPUMA(XWikiDocument userProfile, Map<String, Object> fields, String ssoUser,\n        XWikiContext context)", "testcase": false, "constructor": false}], "file": "authenticators/xwiki-authentication-puma/src/main/java/com/xwiki/authentication/puma/PUMAAuthServiceImpl.java"}, "focal_method": {"identifier": "syncGroupsMembershipFromPUMA", "parameters": "(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "modifiers": "protected", "return": "void", "body": "protected void syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context) throws XWikiException\n    {\n        // got valid group mappings\n        Map<String, Collection<String>> groupMappings = getConfig().getGroupMapping(context);\n\n        if (groupMappings != null && groupMappings.size() > 0) {\n            try {\n                Collection<String> xwikiGroupsIn = new ArrayList<String>();\n                Collection<String> xwikiGroupsOut = new ArrayList<String>();\n\n                Map<String, Collection<String>> groupsToRemove = new HashMap<String, Collection<String>>(groupMappings);\n\n                List<Group> pumaUserGroups = pl.findGroupsByPrincipal(user, true);\n\n                LOG.debug(\"The user belongs to following PUMA groups: \");\n\n                // membership to add\n                for (Group group : pumaUserGroups) {\n                    String groupUid = pumaProfile.getIdentifier(group);\n\n                    LOG.debug(\"  - \" + groupUid);\n\n                    Collection<String> xwikiGroups = groupsToRemove.get(groupUid);\n                    if (xwikiGroups != null) {\n                        xwikiGroupsIn.addAll(xwikiGroups);\n\n                        groupsToRemove.remove(groupUid);\n                    }\n                }\n\n                // membership to remove\n                for (Collection<String> xwikiGroups : groupsToRemove.values()) {\n                    xwikiGroupsOut.addAll(xwikiGroups);\n                }\n\n                // apply synch\n                syncGroupsMembership(userProfile, xwikiGroupsIn, xwikiGroupsOut, context);\n            } catch (Exception e) {\n                LOG.error(\"Failed to synchronize groups for user [\" + userProfile + \"]\", e);\n            }\n        }\n    }", "signature": "void syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "full_signature": "protected void syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "class_method_signature": "PUMAAuthServiceImpl.syncGroupsMembershipFromPUMA(XWikiDocument userProfile, User user, PumaLocator pl,\n        PumaProfile pumaProfile, XWikiContext context)", "testcase": false, "constructor": false, "invocations": ["getGroupMapping", "getConfig", "size", "findGroupsByPrincipal", "debug", "getIdentifier", "debug", "get", "addAll", "remove", "values", "addAll", "syncGroupsMembership", "error"]}, "repository": {"repo_id": 2199098, "url": "https://github.com/xwiki-contrib/sandbox", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 8, "size": 14798, "license": "licensed"}}