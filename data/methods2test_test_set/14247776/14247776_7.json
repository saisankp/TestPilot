{"test_class": {"identifier": "MortarScopeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock Scoped scoped;", "modifier": "@Mock", "type": "Scoped", "declarator": "scoped", "var_name": "scoped"}, {"original_string": "MortarScope.Builder scopeBuilder;", "modifier": "", "type": "MortarScope.Builder", "declarator": "scopeBuilder", "var_name": "scopeBuilder"}], "file": "mortar/src/test/java/mortar/MortarScopeTest.java"}, "test_case": {"identifier": "throwIfNoServiceFoundForGivenName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void throwIfNoServiceFoundForGivenName() {\n    Object dummyService = new Object();\n    MortarScope rootScope = scopeBuilder.withService(\"ServiceOne\", dummyService).build(\"Root\");\n    assertThat(rootScope.getService(\"ServiceOne\")).isNotNull();\n    try {\n      rootScope.getService(\"SearchThis\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertThat(e).hasMessage(\"No service found named \\\"SearchThis\\\"\");\n    }\n  }", "signature": "void throwIfNoServiceFoundForGivenName()", "full_signature": "@Test public void throwIfNoServiceFoundForGivenName()", "class_method_signature": "MortarScopeTest.throwIfNoServiceFoundForGivenName()", "testcase": true, "constructor": false, "invocations": ["build", "withService", "isNotNull", "assertThat", "getService", "getService", "fail", "hasMessage", "assertThat"]}, "focal_class": {"identifier": "MortarScope", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DIVIDER = \">>>\";", "modifier": "public static final", "type": "String", "declarator": "DIVIDER = \">>>\"", "var_name": "DIVIDER"}, {"original_string": "private static final String MORTAR_SERVICE = MortarScope.class.getName();", "modifier": "private static final", "type": "String", "declarator": "MORTAR_SERVICE = MortarScope.class.getName()", "var_name": "MORTAR_SERVICE"}, {"original_string": "final Map<String, MortarScope> children = new LinkedHashMap<>();", "modifier": "final", "type": "Map<String, MortarScope>", "declarator": "children = new LinkedHashMap<>()", "var_name": "children"}, {"original_string": "private boolean dead;", "modifier": "private", "type": "boolean", "declarator": "dead", "var_name": "dead"}, {"original_string": "private final Set<Scoped> tearDowns = new HashSet<>();", "modifier": "private final", "type": "Set<Scoped>", "declarator": "tearDowns = new HashSet<>()", "var_name": "tearDowns"}, {"original_string": "final MortarScope parent;", "modifier": "final", "type": "MortarScope", "declarator": "parent", "var_name": "parent"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, Object> services;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "services", "var_name": "services"}], "methods": [{"identifier": "getScope", "parameters": "(Context context)", "modifiers": "public static", "return": "MortarScope", "signature": "MortarScope getScope(Context context)", "full_signature": "public static MortarScope getScope(Context context)", "class_method_signature": "MortarScope.getScope(Context context)", "testcase": false, "constructor": false}, {"identifier": "findChild", "parameters": "(Context context, String name)", "modifiers": "public static", "return": "MortarScope", "signature": "MortarScope findChild(Context context, String name)", "full_signature": "public static MortarScope findChild(Context context, String name)", "class_method_signature": "MortarScope.findChild(Context context, String name)", "testcase": false, "constructor": false}, {"identifier": "buildChild", "parameters": "(Context context)", "modifiers": "public static", "return": "Builder", "signature": "Builder buildChild(Context context)", "full_signature": "public static Builder buildChild(Context context)", "class_method_signature": "MortarScope.buildChild(Context context)", "testcase": false, "constructor": false}, {"identifier": "isDestroyed", "parameters": "(Context context)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDestroyed(Context context)", "full_signature": "public static boolean isDestroyed(Context context)", "class_method_signature": "MortarScope.isDestroyed(Context context)", "testcase": false, "constructor": false}, {"identifier": "buildRootScope", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder buildRootScope()", "full_signature": "public static Builder buildRootScope()", "class_method_signature": "MortarScope.buildRootScope()", "testcase": false, "constructor": false}, {"identifier": "MortarScope", "parameters": "(String name, MortarScope parent, Map<String, Object> services)", "modifiers": "", "return": "", "signature": " MortarScope(String name, MortarScope parent, Map<String, Object> services)", "full_signature": "  MortarScope(String name, MortarScope parent, Map<String, Object> services)", "class_method_signature": "MortarScope.MortarScope(String name, MortarScope parent, Map<String, Object> services)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getName()", "full_signature": "public final String getName()", "class_method_signature": "MortarScope.getName()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "MortarScope.getPath()", "testcase": false, "constructor": false}, {"identifier": "hasService", "parameters": "(String serviceName)", "modifiers": "public", "return": "boolean", "signature": "boolean hasService(String serviceName)", "full_signature": "public boolean hasService(String serviceName)", "class_method_signature": "MortarScope.hasService(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "(String serviceName)", "modifiers": "public", "return": "T", "signature": "T getService(String serviceName)", "full_signature": "public T getService(String serviceName)", "class_method_signature": "MortarScope.getService(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "findService", "parameters": "(String serviceName, boolean strict)", "modifiers": "@SuppressWarnings(\"unchecked\") // private", "return": "T", "signature": "T findService(String serviceName, boolean strict)", "full_signature": "@SuppressWarnings(\"unchecked\") // private T findService(String serviceName, boolean strict)", "class_method_signature": "MortarScope.findService(String serviceName, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "searchFromRoot", "parameters": "(Scoped scoped)", "modifiers": "private", "return": "MortarScope", "signature": "MortarScope searchFromRoot(Scoped scoped)", "full_signature": "private MortarScope searchFromRoot(Scoped scoped)", "class_method_signature": "MortarScope.searchFromRoot(Scoped scoped)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Scoped scoped)", "modifiers": "public", "return": "void", "signature": "void register(Scoped scoped)", "full_signature": "public void register(Scoped scoped)", "class_method_signature": "MortarScope.register(Scoped scoped)", "testcase": false, "constructor": false}, {"identifier": "findChild", "parameters": "(String childName)", "modifiers": "public", "return": "MortarScope", "signature": "MortarScope findChild(String childName)", "full_signature": "public MortarScope findChild(String childName)", "class_method_signature": "MortarScope.findChild(String childName)", "testcase": false, "constructor": false}, {"identifier": "buildChild", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder buildChild()", "full_signature": "public Builder buildChild()", "class_method_signature": "MortarScope.buildChild()", "testcase": false, "constructor": false}, {"identifier": "createContext", "parameters": "(Context parentContext)", "modifiers": "public", "return": "Context", "signature": "Context createContext(Context parentContext)", "full_signature": "public Context createContext(Context parentContext)", "class_method_signature": "MortarScope.createContext(Context parentContext)", "testcase": false, "constructor": false}, {"identifier": "isDestroyed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDestroyed()", "full_signature": "public boolean isDestroyed()", "class_method_signature": "MortarScope.isDestroyed()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "MortarScope.destroy()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MortarScope.toString()", "testcase": false, "constructor": false}, {"identifier": "assertNotDead", "parameters": "()", "modifiers": "", "return": "void", "signature": "void assertNotDead()", "full_signature": " void assertNotDead()", "class_method_signature": "MortarScope.assertNotDead()", "testcase": false, "constructor": false}], "file": "mortar/src/main/java/mortar/MortarScope.java"}, "focal_method": {"identifier": "getService", "parameters": "(String serviceName)", "modifiers": "public", "return": "T", "body": "public <T> T getService(String serviceName) {\n    T service = findService(serviceName, true);\n    if (service == null) {\n      throw new IllegalArgumentException(format(\"No service found named \\\"%s\\\"\", serviceName));\n    }\n\n    return service;\n  }", "signature": "T getService(String serviceName)", "full_signature": "public T getService(String serviceName)", "class_method_signature": "MortarScope.getService(String serviceName)", "testcase": false, "constructor": false, "invocations": ["findService", "format"]}, "repository": {"repo_id": 14247776, "url": "https://github.com/square/mortar", "language": "Java", "is_fork": false, "fork_count": 172, "stargazer_count": 2189, "size": 884, "license": "licensed"}}