{"test_class": {"identifier": "MenuControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private WebApplicationContext webApplicationContext;", "modifier": "@Autowired\n    private", "type": "WebApplicationContext", "declarator": "webApplicationContext", "var_name": "webApplicationContext"}, {"original_string": "@MockBean\n    private UserLoginInterceptor userLoginInterceptor;", "modifier": "@MockBean\n    private", "type": "UserLoginInterceptor", "declarator": "userLoginInterceptor", "var_name": "userLoginInterceptor"}, {"original_string": "@MockBean\n    private CommStatusInterceptor commStatusInterceptor;", "modifier": "@MockBean\n    private", "type": "CommStatusInterceptor", "declarator": "commStatusInterceptor", "var_name": "commStatusInterceptor"}, {"original_string": "@MockBean\n    private Consts consts;", "modifier": "@MockBean\n    private", "type": "Consts", "declarator": "consts", "var_name": "consts"}, {"original_string": "@MockBean\n    private PermissionService permissionService;", "modifier": "@MockBean\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}, {"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private String requestJson;", "modifier": "private", "type": "String", "declarator": "requestJson", "var_name": "requestJson"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/controller/MenuControllerTest.java"}, "test_case": {"identifier": "getAllApiConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllApiConfig() throws Exception {\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/api/menu\")\n                .contentType(MediaType.APPLICATION_JSON_UTF8)\n                .accept(MediaType.APPLICATION_JSON_UTF8))\n                .andExpect(MockMvcResultMatchers.status().isOk())\n                .andDo(MockMvcResultHandlers.print());\n    }", "signature": "void getAllApiConfig()", "full_signature": "@Test public void getAllApiConfig()", "class_method_signature": "MenuControllerTest.getAllApiConfig()", "testcase": true, "constructor": false, "invocations": ["andDo", "andExpect", "perform", "accept", "contentType", "get", "isOk", "status", "print"]}, "focal_class": {"identifier": "MenuController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MenuService menuService;", "modifier": "@Autowired\n    private", "type": "MenuService", "declarator": "menuService", "var_name": "menuService"}, {"original_string": "@Autowired\n    private MenuItemConfiguration menuItemConfiguration;", "modifier": "@Autowired\n    private", "type": "MenuItemConfiguration", "declarator": "menuItemConfiguration", "var_name": "menuItemConfiguration"}, {"original_string": "@Autowired\n    private UserConfiguration userConfiguration;", "modifier": "@Autowired\n    private", "type": "UserConfiguration", "declarator": "userConfiguration", "var_name": "userConfiguration"}], "methods": [{"identifier": "getAllApiConfig", "parameters": "(@CurrentUser LoginUser user)", "modifiers": "@RequestMapping(value = {\"/\", \"/menu\"}, method = RequestMethod.GET) public", "return": "ServiceResult", "signature": "ServiceResult getAllApiConfig(@CurrentUser LoginUser user)", "full_signature": "@RequestMapping(value = {\"/\", \"/menu\"}, method = RequestMethod.GET) public ServiceResult getAllApiConfig(@CurrentUser LoginUser user)", "class_method_signature": "MenuController.getAllApiConfig(@CurrentUser LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "getMenuItem", "parameters": "(@CurrentUser LoginUser user)", "modifiers": "@RequestMapping(value = {\"/item\"}, method = RequestMethod.GET) public", "return": "ServiceResult<MenuItemModel>", "signature": "ServiceResult<MenuItemModel> getMenuItem(@CurrentUser LoginUser user)", "full_signature": "@RequestMapping(value = {\"/item\"}, method = RequestMethod.GET) public ServiceResult<MenuItemModel> getMenuItem(@CurrentUser LoginUser user)", "class_method_signature": "MenuController.getMenuItem(@CurrentUser LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "getMenuItems", "parameters": "(@CurrentUser LoginUser user)", "modifiers": "@RequestMapping(value = {\"/items\"}, method = RequestMethod.GET) public", "return": "ServiceResult<List<MenuItemModel>>", "signature": "ServiceResult<List<MenuItemModel>> getMenuItems(@CurrentUser LoginUser user)", "full_signature": "@RequestMapping(value = {\"/items\"}, method = RequestMethod.GET) public ServiceResult<List<MenuItemModel>> getMenuItems(@CurrentUser LoginUser user)", "class_method_signature": "MenuController.getMenuItems(@CurrentUser LoginUser user)", "testcase": false, "constructor": false}, {"identifier": "linkInfo", "parameters": "(@CurrentUser LoginUser user)", "modifiers": "@RequestMapping(value = {\"/linkInfo\"}, method = RequestMethod.GET) public", "return": "ServiceResult<List<MenuItemModel>>", "signature": "ServiceResult<List<MenuItemModel>> linkInfo(@CurrentUser LoginUser user)", "full_signature": "@RequestMapping(value = {\"/linkInfo\"}, method = RequestMethod.GET) public ServiceResult<List<MenuItemModel>> linkInfo(@CurrentUser LoginUser user)", "class_method_signature": "MenuController.linkInfo(@CurrentUser LoginUser user)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/controller/MenuController.java"}, "focal_method": {"identifier": "getAllApiConfig", "parameters": "(@CurrentUser LoginUser user)", "modifiers": "@RequestMapping(value = {\"/\", \"/menu\"}, method = RequestMethod.GET) public", "return": "ServiceResult", "body": "@RequestMapping(value = {\"/\", \"/menu\"}, method = RequestMethod.GET)\n    public ServiceResult getAllApiConfig(@CurrentUser LoginUser user) throws Exception {\n        return ServiceResult.success(menuService.getMemus(menuItemConfiguration.getNavigationFlag(user)));\n    }", "signature": "ServiceResult getAllApiConfig(@CurrentUser LoginUser user)", "full_signature": "@RequestMapping(value = {\"/\", \"/menu\"}, method = RequestMethod.GET) public ServiceResult getAllApiConfig(@CurrentUser LoginUser user)", "class_method_signature": "MenuController.getAllApiConfig(@CurrentUser LoginUser user)", "testcase": false, "constructor": false, "invocations": ["success", "getMemus", "getNavigationFlag"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}