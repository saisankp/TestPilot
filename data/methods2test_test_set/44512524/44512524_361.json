{"test_class": {"identifier": "MessageBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-esper/src/test/java/com/neulion/stream/MessageBeanTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParse() throws UnsupportedEncodingException {\n\t\tString line = \"msgID=284&eventType=HEARTBEAT&clientID=7EACAECB-1BDC-3EFC-2527-5EA00367CDB3&viewID=5B1B79BE-559F-8EEC-37FB-5EA07FDC3410&playTime=7594&streamType=1&streamURL=adaptive%3A%2F%2Fnlds130.neulion.com%3A443%2Fnlds_vod%2Fnfl%2Fvod%2F2012%2F12%2F02%2F55688%2F2_55688_sf_stl_2012_h_whole_1_pc.mp4&streamLength=9321&startupTime=746&updateInterval=30000&bitrate=4500&os=Mac%20OS%2010.8.2&player=MAC%2011%2C5%2C502%2C110&browserVersion=Firefox%2016&bandwidth=8303&dropFrameCount=0&cdnName=nlds130.cdnl3nl.neulion.com&bytesLoaded=2653080576&bytesLoadedDelta=10038272&cdnName=nlds130.cdnak.neulion.com&bytesLoaded=1604219904&bytesLoadedDelta=6137856&gameDate=12%2F2%2F2012&homeTeam=STL&productID=nflgp&userID=5b-56-5e-59-59-67&progType=broadcast&appType=desktop&windowMode=full%20mosaic&siteID=nfl&streamDescription=GP%3A%2012%2F2%2F2012%20SF%40STLbroadcast&awayTeam=SF&gameID=55688&ipAddress=184.175.39.214\";\n\t\tMessageBean bean = MessageBean.parse(line);\n\t\tSystem.out.println(bean.getBitrate());\n\t\tSystem.out.println(bean.getClientID());\n\t\tSystem.out.println(bean.getMsgID());\n\t\tSystem.out.println(bean.getProductID());\n\t\tSystem.out.println(bean.getViewID());\n\t}", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "MessageBeanTest.testParse()", "testcase": true, "constructor": false, "invocations": ["parse", "println", "getBitrate", "println", "getClientID", "println", "getMsgID", "println", "getProductID", "println", "getViewID"]}, "focal_class": {"identifier": "MessageBean", "superclass": "", "interfaces": "", "fields": [{"original_string": "private long msgID;", "modifier": "private", "type": "long", "declarator": "msgID", "var_name": "msgID"}, {"original_string": "private long bitrate;", "modifier": "private", "type": "long", "declarator": "bitrate", "var_name": "bitrate"}, {"original_string": "private String productID;", "modifier": "private", "type": "String", "declarator": "productID", "var_name": "productID"}, {"original_string": "private String clientID;", "modifier": "private", "type": "String", "declarator": "clientID", "var_name": "clientID"}, {"original_string": "private String viewID;", "modifier": "private", "type": "String", "declarator": "viewID", "var_name": "viewID"}, {"original_string": "private String appType;", "modifier": "private", "type": "String", "declarator": "appType", "var_name": "appType"}, {"original_string": "private String eventType;", "modifier": "private", "type": "String", "declarator": "eventType", "var_name": "eventType"}, {"original_string": "private String deviceType;", "modifier": "private", "type": "String", "declarator": "deviceType", "var_name": "deviceType"}], "methods": [{"identifier": "parse", "parameters": "(String line)", "modifiers": "public static", "return": "MessageBean", "signature": "MessageBean parse(String line)", "full_signature": "public static MessageBean parse(String line)", "class_method_signature": "MessageBean.parse(String line)", "testcase": false, "constructor": false}, {"identifier": "getParameter", "parameters": "(String line, String name)", "modifiers": "private static", "return": "String", "signature": "String getParameter(String line, String name)", "full_signature": "private static String getParameter(String line, String name)", "class_method_signature": "MessageBean.getParameter(String line, String name)", "testcase": false, "constructor": false}, {"identifier": "getMsgID", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMsgID()", "full_signature": "public long getMsgID()", "class_method_signature": "MessageBean.getMsgID()", "testcase": false, "constructor": false}, {"identifier": "setMsgID", "parameters": "(long msgID)", "modifiers": "public", "return": "void", "signature": "void setMsgID(long msgID)", "full_signature": "public void setMsgID(long msgID)", "class_method_signature": "MessageBean.setMsgID(long msgID)", "testcase": false, "constructor": false}, {"identifier": "getBitrate", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getBitrate()", "full_signature": "public long getBitrate()", "class_method_signature": "MessageBean.getBitrate()", "testcase": false, "constructor": false}, {"identifier": "setBitrate", "parameters": "(long bitrate)", "modifiers": "public", "return": "void", "signature": "void setBitrate(long bitrate)", "full_signature": "public void setBitrate(long bitrate)", "class_method_signature": "MessageBean.setBitrate(long bitrate)", "testcase": false, "constructor": false}, {"identifier": "getProductID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProductID()", "full_signature": "public String getProductID()", "class_method_signature": "MessageBean.getProductID()", "testcase": false, "constructor": false}, {"identifier": "setProductID", "parameters": "(String productID)", "modifiers": "public", "return": "void", "signature": "void setProductID(String productID)", "full_signature": "public void setProductID(String productID)", "class_method_signature": "MessageBean.setProductID(String productID)", "testcase": false, "constructor": false}, {"identifier": "getClientID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientID()", "full_signature": "public String getClientID()", "class_method_signature": "MessageBean.getClientID()", "testcase": false, "constructor": false}, {"identifier": "setClientID", "parameters": "(String clientID)", "modifiers": "public", "return": "void", "signature": "void setClientID(String clientID)", "full_signature": "public void setClientID(String clientID)", "class_method_signature": "MessageBean.setClientID(String clientID)", "testcase": false, "constructor": false}, {"identifier": "getViewID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getViewID()", "full_signature": "public String getViewID()", "class_method_signature": "MessageBean.getViewID()", "testcase": false, "constructor": false}, {"identifier": "setViewID", "parameters": "(String viewID)", "modifiers": "public", "return": "void", "signature": "void setViewID(String viewID)", "full_signature": "public void setViewID(String viewID)", "class_method_signature": "MessageBean.setViewID(String viewID)", "testcase": false, "constructor": false}, {"identifier": "getAppType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAppType()", "full_signature": "public String getAppType()", "class_method_signature": "MessageBean.getAppType()", "testcase": false, "constructor": false}, {"identifier": "setAppType", "parameters": "(String appType)", "modifiers": "public", "return": "void", "signature": "void setAppType(String appType)", "full_signature": "public void setAppType(String appType)", "class_method_signature": "MessageBean.setAppType(String appType)", "testcase": false, "constructor": false}, {"identifier": "getEventType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEventType()", "full_signature": "public String getEventType()", "class_method_signature": "MessageBean.getEventType()", "testcase": false, "constructor": false}, {"identifier": "setEventType", "parameters": "(String eventType)", "modifiers": "public", "return": "void", "signature": "void setEventType(String eventType)", "full_signature": "public void setEventType(String eventType)", "class_method_signature": "MessageBean.setEventType(String eventType)", "testcase": false, "constructor": false}, {"identifier": "getDeviceType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDeviceType()", "full_signature": "public String getDeviceType()", "class_method_signature": "MessageBean.getDeviceType()", "testcase": false, "constructor": false}, {"identifier": "setDeviceType", "parameters": "(String deviceType)", "modifiers": "public", "return": "void", "signature": "void setDeviceType(String deviceType)", "full_signature": "public void setDeviceType(String deviceType)", "class_method_signature": "MessageBean.setDeviceType(String deviceType)", "testcase": false, "constructor": false}], "file": "storm/storm-esper/src/main/java/com/neulion/stream/MessageBean.java"}, "focal_method": {"identifier": "parse", "parameters": "(String line)", "modifiers": "public static", "return": "MessageBean", "body": "public static MessageBean parse(String line) throws UnsupportedEncodingException {\n\t\tMessageBean bean = new MessageBean();\n\t\tline = URLDecoder.decode(line, \"utf-8\");\n\t\ttry {\n\t\t\tbean.setBitrate(Long.parseLong(MessageBean.getParameter(line, \"bitrate\")));\n\t\t} catch (NumberFormatException e) {\n\t\t\tbean.setBitrate(0);\n\t\t}\n\t\tbean.setClientID(MessageBean.getParameter(line, \"clientID\"));\n\t\ttry {\n\t\t\tbean.setMsgID(Long.parseLong(MessageBean.getParameter(line, \"msgID\")));\n\t\t} catch (NumberFormatException e) {\n\t\t\tbean.setMsgID(0);\n\t\t}\n\t\tbean.setProductID(MessageBean.getParameter(line, \"productID\"));\n\t\tbean.setViewID(MessageBean.getParameter(line, \"viewID\"));\n\t\tbean.setAppType(MessageBean.getParameter(line, \"appType\"));\n\t\tbean.setEventType(MessageBean.getParameter(line, \"eventType\"));\n\t\tbean.setDeviceType(MessageBean.getParameter(line, \"deviceType\"));\n\t\treturn bean;\n\t}", "signature": "MessageBean parse(String line)", "full_signature": "public static MessageBean parse(String line)", "class_method_signature": "MessageBean.parse(String line)", "testcase": false, "constructor": false, "invocations": ["decode", "setBitrate", "parseLong", "getParameter", "setBitrate", "setClientID", "getParameter", "setMsgID", "parseLong", "getParameter", "setMsgID", "setProductID", "getParameter", "setViewID", "getParameter", "setAppType", "getParameter", "setEventType", "getParameter", "setDeviceType", "getParameter"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}