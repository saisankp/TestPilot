{"test_class": {"identifier": "NiciraCheckHealthCommandWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NiciraNvpResource niciraResource = mock(NiciraNvpResource.class);", "modifier": "private final", "type": "NiciraNvpResource", "declarator": "niciraResource = mock(NiciraNvpResource.class)", "var_name": "niciraResource"}, {"original_string": "private final NiciraNvpApi niciraApi = mock(NiciraNvpApi.class);", "modifier": "private final", "type": "NiciraNvpApi", "declarator": "niciraApi = mock(NiciraNvpApi.class)", "var_name": "niciraApi"}], "file": "plugins/network-elements/nicira-nvp/src/test/java/com/cloud/network/resource/wrapper/NiciraCheckHealthCommandWrapperTest.java"}, "test_case": {"identifier": "tetsExecuteWhenClusterIsNotStable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tetsExecuteWhenClusterIsNotStable() throws Exception {\n        when(niciraApi.getControlClusterStatus()).thenReturn(new ControlClusterStatus());\n\n        final NiciraCheckHealthCommandWrapper commandWrapper = new NiciraCheckHealthCommandWrapper();\n        final Answer answer = commandWrapper.execute(new CheckHealthCommand(), niciraResource);\n\n        assertThat(answer.getResult(), equalTo(false));\n    }", "signature": "void tetsExecuteWhenClusterIsNotStable()", "full_signature": "@Test public void tetsExecuteWhenClusterIsNotStable()", "class_method_signature": "NiciraCheckHealthCommandWrapperTest.tetsExecuteWhenClusterIsNotStable()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getControlClusterStatus", "execute", "assertThat", "getResult", "equalTo"]}, "focal_class": {"identifier": "NiciraCheckHealthCommandWrapper", "superclass": "extends CommandWrapper<CheckHealthCommand, Answer, NiciraNvpResource>", "interfaces": "", "fields": [{"original_string": "private static final String CONTROL_CLUSTER_STATUS_IS_STABLE = \"stable\";", "modifier": "private static final", "type": "String", "declarator": "CONTROL_CLUSTER_STATUS_IS_STABLE = \"stable\"", "var_name": "CONTROL_CLUSTER_STATUS_IS_STABLE"}, {"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(NiciraCheckHealthCommandWrapper.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(NiciraCheckHealthCommandWrapper.class)", "var_name": "s_logger"}], "methods": [{"identifier": "execute", "parameters": "(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "modifiers": "@Override public", "return": "Answer", "signature": "Answer execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "full_signature": "@Override public Answer execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "class_method_signature": "NiciraCheckHealthCommandWrapper.execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "testcase": false, "constructor": false}, {"identifier": "clusterIsUnstable", "parameters": "(final String clusterStatus)", "modifiers": "protected", "return": "boolean", "signature": "boolean clusterIsUnstable(final String clusterStatus)", "full_signature": "protected boolean clusterIsUnstable(final String clusterStatus)", "class_method_signature": "NiciraCheckHealthCommandWrapper.clusterIsUnstable(final String clusterStatus)", "testcase": false, "constructor": false}], "file": "plugins/network-elements/nicira-nvp/src/main/java/com/cloud/network/resource/wrapper/NiciraCheckHealthCommandWrapper.java"}, "focal_method": {"identifier": "execute", "parameters": "(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "modifiers": "@Override public", "return": "Answer", "body": "@Override\n    public Answer execute(final CheckHealthCommand command, final NiciraNvpResource serverResource) {\n        final NiciraNvpApi niciraNvpApi = serverResource.getNiciraNvpApi();\n        boolean healthy = true;\n        try {\n            final ControlClusterStatus clusterStatus = niciraNvpApi.getControlClusterStatus();\n            final String status = clusterStatus.getClusterStatus();\n            if (clusterIsUnstable(status)) {\n                s_logger.warn(\"Control cluster is not stable. Current status is \" + status);\n                healthy = false;\n            }\n        } catch (final NiciraNvpApiException e) {\n            s_logger.error(\"Exception caught while checking control cluster status during health check\", e);\n            healthy = false;\n        }\n\n        return new CheckHealthAnswer(command, healthy);\n    }", "signature": "Answer execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "full_signature": "@Override public Answer execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "class_method_signature": "NiciraCheckHealthCommandWrapper.execute(final CheckHealthCommand command, final NiciraNvpResource serverResource)", "testcase": false, "constructor": false, "invocations": ["getNiciraNvpApi", "getControlClusterStatus", "getClusterStatus", "clusterIsUnstable", "warn", "error"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}