{"test_class": {"identifier": "StatementsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/StatementsTest.java"}, "test_case": {"identifier": "alter_returnsAlter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void alter_returnsAlter() {\n    assertThat(Statements.alter(), is(notNullValue()));\n  }", "signature": "void alter_returnsAlter()", "full_signature": "@Test public void alter_returnsAlter()", "class_method_signature": "StatementsTest.alter_returnsAlter()", "testcase": true, "constructor": false, "invocations": ["assertThat", "alter", "is", "notNullValue"]}, "focal_class": {"identifier": "Statements", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Statements", "parameters": "()", "modifiers": "private", "return": "", "signature": " Statements()", "full_signature": "private  Statements()", "class_method_signature": "Statements.Statements()", "testcase": false, "constructor": true}, {"identifier": "alter", "parameters": "()", "modifiers": "@NotNull public static", "return": "Alter", "signature": "Alter alter()", "full_signature": "@NotNull public static Alter alter()", "class_method_signature": "Statements.alter()", "testcase": false, "constructor": false}, {"identifier": "analyze", "parameters": "()", "modifiers": "@NotNull public static", "return": "Analyze", "signature": "Analyze analyze()", "full_signature": "@NotNull public static Analyze analyze()", "class_method_signature": "Statements.analyze()", "testcase": false, "constructor": false}, {"identifier": "column", "parameters": "(@NotNull final String newColumnName)", "modifiers": "@NotNull public static", "return": "Column", "signature": "Column column(@NotNull final String newColumnName)", "full_signature": "@NotNull public static Column column(@NotNull final String newColumnName)", "class_method_signature": "Statements.column(@NotNull final String newColumnName)", "testcase": false, "constructor": false}, {"identifier": "begin", "parameters": "()", "modifiers": "@NotNull public static", "return": "Begin", "signature": "Begin begin()", "full_signature": "@NotNull public static Begin begin()", "class_method_signature": "Statements.begin()", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "()", "modifiers": "@NotNull public static", "return": "End", "signature": "End end()", "full_signature": "@NotNull public static End end()", "class_method_signature": "Statements.end()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "@NotNull public static", "return": "Commit", "signature": "Commit commit()", "full_signature": "@NotNull public static Commit commit()", "class_method_signature": "Statements.commit()", "testcase": false, "constructor": false}, {"identifier": "drop", "parameters": "()", "modifiers": "@NotNull public static", "return": "Drop", "signature": "Drop drop()", "full_signature": "@NotNull public static Drop drop()", "class_method_signature": "Statements.drop()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "@NotNull public static", "return": "Rollback", "signature": "Rollback rollback()", "full_signature": "@NotNull public static Rollback rollback()", "class_method_signature": "Statements.rollback()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "@NotNull public static", "return": "Create", "signature": "Create create()", "full_signature": "@NotNull public static Create create()", "class_method_signature": "Statements.create()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "@NotNull public static", "return": "Delete", "signature": "Delete delete()", "full_signature": "@NotNull public static Delete delete()", "class_method_signature": "Statements.delete()", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "()", "modifiers": "@NotNull public static", "return": "Replace", "signature": "Replace replace()", "full_signature": "@NotNull public static Replace replace()", "class_method_signature": "Statements.replace()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(@NotNull final String... columns)", "modifiers": "@NotNull public static", "return": "Select", "signature": "Select select(@NotNull final String... columns)", "full_signature": "@NotNull public static Select select(@NotNull final String... columns)", "class_method_signature": "Statements.select(@NotNull final String... columns)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insert()", "full_signature": "@NotNull public static Insert insert()", "class_method_signature": "Statements.insert()", "testcase": false, "constructor": false}, {"identifier": "insertOrAbort", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insertOrAbort()", "full_signature": "@NotNull public static Insert insertOrAbort()", "class_method_signature": "Statements.insertOrAbort()", "testcase": false, "constructor": false}, {"identifier": "insertOrFail", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insertOrFail()", "full_signature": "@NotNull public static Insert insertOrFail()", "class_method_signature": "Statements.insertOrFail()", "testcase": false, "constructor": false}, {"identifier": "insertOrIgnore", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insertOrIgnore()", "full_signature": "@NotNull public static Insert insertOrIgnore()", "class_method_signature": "Statements.insertOrIgnore()", "testcase": false, "constructor": false}, {"identifier": "insertOrReplace", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insertOrReplace()", "full_signature": "@NotNull public static Insert insertOrReplace()", "class_method_signature": "Statements.insertOrReplace()", "testcase": false, "constructor": false}, {"identifier": "insertOrRollback", "parameters": "()", "modifiers": "@NotNull public static", "return": "Insert", "signature": "Insert insertOrRollback()", "full_signature": "@NotNull public static Insert insertOrRollback()", "class_method_signature": "Statements.insertOrRollback()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@NotNull final String tableName)", "modifiers": "@NotNull public static", "return": "Update", "signature": "Update update(@NotNull final String tableName)", "full_signature": "@NotNull public static Update update(@NotNull final String tableName)", "class_method_signature": "Statements.update(@NotNull final String tableName)", "testcase": false, "constructor": false}, {"identifier": "vacuum", "parameters": "()", "modifiers": "@NotNull public static", "return": "Vacuum", "signature": "Vacuum vacuum()", "full_signature": "@NotNull public static Vacuum vacuum()", "class_method_signature": "Statements.vacuum()", "testcase": false, "constructor": false}, {"identifier": "converter", "parameters": "()", "modifiers": "@NotNull public static", "return": "StatementConverter", "signature": "StatementConverter converter()", "full_signature": "@NotNull public static StatementConverter converter()", "class_method_signature": "Statements.converter()", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/Statements.java"}, "focal_method": {"identifier": "alter", "parameters": "()", "modifiers": "@NotNull public static", "return": "Alter", "body": "@NotNull\n  public static Alter alter() {\n    return new AlterImpl();\n  }", "signature": "Alter alter()", "full_signature": "@NotNull public static Alter alter()", "class_method_signature": "Statements.alter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}