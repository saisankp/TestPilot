{"test_class": {"identifier": "TestAbstractHttpClientDecorator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AbstractHttpClientDecorator impl;", "modifier": "private", "type": "AbstractHttpClientDecorator", "declarator": "impl", "var_name": "impl"}], "file": "jrugged-httpclient/src/test/java/org/fishwife/jrugged/httpclient/TestAbstractHttpClientDecorator.java"}, "test_case": {"identifier": "canExtractSimpleHostProperly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canExtractSimpleHostProperly() {\n        assertEquals(new HttpHost(\"foo.example.com\"),\n                impl.getHttpHost(new HttpGet(\"http://foo.example.com/bar\")));\n    }", "signature": "void canExtractSimpleHostProperly()", "full_signature": "@Test public void canExtractSimpleHostProperly()", "class_method_signature": "TestAbstractHttpClientDecorator.canExtractSimpleHostProperly()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getHttpHost"]}, "focal_class": {"identifier": "AbstractHttpClientDecorator", "superclass": "", "interfaces": "implements HttpClient", "fields": [{"original_string": "protected HttpClient backend;", "modifier": "protected", "type": "HttpClient", "declarator": "backend", "var_name": "backend"}], "methods": [{"identifier": "AbstractHttpClientDecorator", "parameters": "(HttpClient backend)", "modifiers": "public", "return": "", "signature": " AbstractHttpClientDecorator(HttpClient backend)", "full_signature": "public  AbstractHttpClientDecorator(HttpClient backend)", "class_method_signature": "AbstractHttpClientDecorator.AbstractHttpClientDecorator(HttpClient backend)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req,\n            HttpContext ctx)", "modifiers": "public abstract", "return": "HttpResponse", "signature": "HttpResponse execute(HttpHost host, HttpRequest req,\n            HttpContext ctx)", "full_signature": "public abstract HttpResponse execute(HttpHost host, HttpRequest req,\n            HttpContext ctx)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpHost host, HttpRequest req,\n            HttpContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getHttpHost", "parameters": "(HttpUriRequest req)", "modifiers": "protected", "return": "HttpHost", "signature": "HttpHost getHttpHost(HttpUriRequest req)", "full_signature": "protected HttpHost getHttpHost(HttpUriRequest req)", "class_method_signature": "AbstractHttpClientDecorator.getHttpHost(HttpUriRequest req)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpUriRequest req)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse execute(HttpUriRequest req)", "full_signature": "public HttpResponse execute(HttpUriRequest req)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpUriRequest req)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpUriRequest req, HttpContext ctx)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse execute(HttpUriRequest req, HttpContext ctx)", "full_signature": "public HttpResponse execute(HttpUriRequest req, HttpContext ctx)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpUriRequest req, HttpContext ctx)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse execute(HttpHost host, HttpRequest req)", "full_signature": "public HttpResponse execute(HttpHost host, HttpRequest req)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpHost host, HttpRequest req)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpUriRequest req, ResponseHandler<? extends T> rh)", "modifiers": "public", "return": "T", "signature": "T execute(HttpUriRequest req, ResponseHandler<? extends T> rh)", "full_signature": "public T execute(HttpUriRequest req, ResponseHandler<? extends T> rh)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpUriRequest req, ResponseHandler<? extends T> rh)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpUriRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "modifiers": "public", "return": "T", "signature": "T execute(HttpUriRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "full_signature": "public T execute(HttpUriRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpUriRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh)", "modifiers": "public", "return": "T", "signature": "T execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh)", "full_signature": "public T execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "modifiers": "public", "return": "T", "signature": "T execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "full_signature": "public T execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "class_method_signature": "AbstractHttpClientDecorator.execute(HttpHost host, HttpRequest req,\n            ResponseHandler<? extends T> rh, HttpContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getConnectionManager", "parameters": "()", "modifiers": "public", "return": "ClientConnectionManager", "signature": "ClientConnectionManager getConnectionManager()", "full_signature": "public ClientConnectionManager getConnectionManager()", "class_method_signature": "AbstractHttpClientDecorator.getConnectionManager()", "testcase": false, "constructor": false}, {"identifier": "getParams", "parameters": "()", "modifiers": "public", "return": "HttpParams", "signature": "HttpParams getParams()", "full_signature": "public HttpParams getParams()", "class_method_signature": "AbstractHttpClientDecorator.getParams()", "testcase": false, "constructor": false}], "file": "jrugged-httpclient/src/main/java/org/fishwife/jrugged/httpclient/AbstractHttpClientDecorator.java"}, "focal_method": {"identifier": "getHttpHost", "parameters": "(HttpUriRequest req)", "modifiers": "protected", "return": "HttpHost", "body": "protected HttpHost getHttpHost(HttpUriRequest req) {\n        URI uri = req.getURI();\n        String scheme = uri.getScheme();\n        if (\"HTTPS\".equalsIgnoreCase(scheme)) {\n            return new HttpHost(uri.getScheme() + \"://\" + uri.getAuthority());\n        } else {\n            return new HttpHost(uri.getAuthority());\n        }\n    }", "signature": "HttpHost getHttpHost(HttpUriRequest req)", "full_signature": "protected HttpHost getHttpHost(HttpUriRequest req)", "class_method_signature": "AbstractHttpClientDecorator.getHttpHost(HttpUriRequest req)", "testcase": false, "constructor": false, "invocations": ["getURI", "getScheme", "equalsIgnoreCase", "getScheme", "getAuthority", "getAuthority"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}