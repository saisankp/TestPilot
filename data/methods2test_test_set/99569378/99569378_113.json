{"test_class": {"identifier": "TestPromiseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Object mResult = new Object();", "modifier": "private final", "type": "Object", "declarator": "mResult = new Object()", "var_name": "mResult"}, {"original_string": "@Mock\n    private ActorThread mThread;", "modifier": "@Mock\n    private", "type": "ActorThread", "declarator": "mThread", "var_name": "mThread"}, {"original_string": "@Mock\n    private ResultListener<Object> mListener;", "modifier": "@Mock\n    private", "type": "ResultListener<Object>", "declarator": "mListener", "var_name": "mListener"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/TestPromiseTest.java"}, "test_case": {"identifier": "verifyThen_true_callThen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyThen_true_callThen() {\n        TestPromise<Object> promise = new TestPromise<>(mResult);\n        promise.then(mListener);\n        Assert.assertTrue(promise.verifyThen());\n    }", "signature": "void verifyThen_true_callThen()", "full_signature": "@Test public void verifyThen_true_callThen()", "class_method_signature": "TestPromiseTest.verifyThen_true_callThen()", "testcase": true, "constructor": false, "invocations": ["then", "assertTrue", "verifyThen"]}, "focal_class": {"identifier": "Promise", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "thenNothing", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void thenNothing()", "full_signature": "public abstract void thenNothing()", "class_method_signature": "Promise.thenNothing()", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@NonNull ResultListener<R> listener)", "modifiers": "@NonNull public abstract", "return": "ActionHandle", "signature": "ActionHandle then(@NonNull ResultListener<R> listener)", "full_signature": "@NonNull public abstract ActionHandle then(@NonNull ResultListener<R> listener)", "class_method_signature": "Promise.then(@NonNull ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "then", "parameters": "(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "modifiers": "@NonNull public abstract", "return": "ActionHandle", "signature": "ActionHandle then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "full_signature": "@NonNull public abstract ActionHandle then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "class_method_signature": "Promise.then(@NonNull ActorThread thread, @NonNull ResultListener<R> listener)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Nullable public abstract", "return": "R", "signature": "R get()", "full_signature": "@Nullable public abstract R get()", "class_method_signature": "Promise.get()", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(@Nullable R result)", "modifiers": "@NonNull public static", "return": "Promise<R>", "signature": "Promise<R> wrap(@Nullable R result)", "full_signature": "@NonNull public static Promise<R> wrap(@Nullable R result)", "class_method_signature": "Promise.wrap(@Nullable R result)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "modifiers": "@NonNull public static", "return": "Promise<R>", "signature": "Promise<R> wrap(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "full_signature": "@NonNull public static Promise<R> wrap(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "class_method_signature": "Promise.wrap(@Nullable R result, @Nullable ResourceCleaner<R> cleaner)", "testcase": false, "constructor": false}, {"identifier": "test", "parameters": "(@Nullable R result)", "modifiers": "@NonNull public static", "return": "TestPromise<R>", "signature": "TestPromise<R> test(@Nullable R result)", "full_signature": "@NonNull public static TestPromise<R> test(@Nullable R result)", "class_method_signature": "Promise.test(@Nullable R result)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(@NonNull MessageSender sender, @NonNull T message)", "modifiers": "@NonNull public static", "return": "Promise<R>", "signature": "Promise<R> wrap(@NonNull MessageSender sender, @NonNull T message)", "full_signature": "@NonNull public static Promise<R> wrap(@NonNull MessageSender sender, @NonNull T message)", "class_method_signature": "Promise.wrap(@NonNull MessageSender sender, @NonNull T message)", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/Promise.java"}, "focal_method": {"identifier": "then", "parameters": "(@NonNull ResultListener<R> listener)", "modifiers": "@NonNull public abstract", "return": "ActionHandle", "body": "@NonNull\n    public abstract ActionHandle then(@NonNull ResultListener<R> listener);", "signature": "ActionHandle then(@NonNull ResultListener<R> listener)", "full_signature": "@NonNull public abstract ActionHandle then(@NonNull ResultListener<R> listener)", "class_method_signature": "Promise.then(@NonNull ResultListener<R> listener)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}