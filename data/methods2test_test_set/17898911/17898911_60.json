{"test_class": {"identifier": "TableDisplayerTest", "superclass": "extends AbstractDisplayerTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    DisplayerListener displayerListener;", "modifier": "@Mock", "type": "DisplayerListener", "declarator": "displayerListener", "var_name": "displayerListener"}, {"original_string": "@Mock\n    Command selectCommand;", "modifier": "@Mock", "type": "Command", "declarator": "selectCommand", "var_name": "selectCommand"}, {"original_string": "@Mock\n    FilterLabel filterLabel;", "modifier": "@Mock", "type": "FilterLabel", "declarator": "filterLabel", "var_name": "filterLabel"}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/test/java/org/dashbuilder/renderer/client/table/TableDisplayerTest.java"}, "test_case": {"identifier": "test_DASHBUILDE_20_Fix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_DASHBUILDE_20_Fix() {\n\n        DisplayerSettings groupedTable = DisplayerSettingsFactory.newTableSettings()\n                .dataset(EXPENSES)\n                .group(COLUMN_CITY)\n                .column(COLUMN_CITY, \"City\")\n                .column(COUNT, \"#Expenses\").format(\"Number of expenses\", \"#,##0\")\n                .column(COLUMN_AMOUNT, MIN).format(\"Min\", \"$ #,###\")\n                .column(COLUMN_AMOUNT, MIN).format(\"Min\", \"$ #,###\")\n                .column(COLUMN_AMOUNT, MIN).format(\"Min\", \"$ #,###\")\n                .column(COLUMN_AMOUNT, MIN).format(\"Min\", \"$ #,###\")\n                .tablePageSize(10)\n                .tableOrderEnabled(true)\n                .tableOrderDefault(COLUMN_CITY, DESCENDING)\n                .filterOn(false, true, true)\n                .buildSettings();\n\n        TableDisplayer table = createTableDisplayer(groupedTable);\n        table.addListener(displayerListener);\n        table.draw();\n        table.sortBy(\"#Expenses\", ASCENDING);\n        verify(displayerListener, never()).onError(eq(table), any(ClientRuntimeError.class));\n    }", "signature": "void test_DASHBUILDE_20_Fix()", "full_signature": "@Test public void test_DASHBUILDE_20_Fix()", "class_method_signature": "TableDisplayerTest.test_DASHBUILDE_20_Fix()", "testcase": true, "constructor": false, "invocations": ["buildSettings", "filterOn", "tableOrderDefault", "tableOrderEnabled", "tablePageSize", "format", "column", "format", "column", "format", "column", "format", "column", "format", "column", "column", "group", "dataset", "newTableSettings", "createTableDisplayer", "addListener", "draw", "sortBy", "onError", "verify", "never", "eq", "any"]}, "focal_class": {"identifier": "TableDisplayer", "superclass": "extends AbstractGwtDisplayer<TableDisplayer.View>", "interfaces": "", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected int totalRows = 0;", "modifier": "protected", "type": "int", "declarator": "totalRows = 0", "var_name": "totalRows"}, {"original_string": "protected String lastOrderedColumn = null;", "modifier": "protected", "type": "String", "declarator": "lastOrderedColumn = null", "var_name": "lastOrderedColumn"}, {"original_string": "protected SortOrder lastSortOrder = null;", "modifier": "protected", "type": "SortOrder", "declarator": "lastSortOrder = null", "var_name": "lastSortOrder"}, {"original_string": "protected List<Command> onCellSelectedCommands = new ArrayList<>();", "modifier": "protected", "type": "List<Command>", "declarator": "onCellSelectedCommands = new ArrayList<>()", "var_name": "onCellSelectedCommands"}, {"original_string": "protected String selectedCellColumn = null;", "modifier": "protected", "type": "String", "declarator": "selectedCellColumn = null", "var_name": "selectedCellColumn"}, {"original_string": "protected Integer selectedCellRow = null;", "modifier": "protected", "type": "Integer", "declarator": "selectedCellRow = null", "var_name": "selectedCellRow"}, {"original_string": "protected int exportRowNumMax = 100000;", "modifier": "protected", "type": "int", "declarator": "exportRowNumMax = 100000", "var_name": "exportRowNumMax"}, {"original_string": "protected FilterLabelSet filterLabelSet;", "modifier": "protected", "type": "FilterLabelSet", "declarator": "filterLabelSet", "var_name": "filterLabelSet"}], "methods": [{"identifier": "TableDisplayer", "parameters": "(View view, FilterLabelSet filterLabelSet)", "modifiers": "@Inject public", "return": "", "signature": " TableDisplayer(View view, FilterLabelSet filterLabelSet)", "full_signature": "@Inject public  TableDisplayer(View view, FilterLabelSet filterLabelSet)", "class_method_signature": "TableDisplayer.TableDisplayer(View view, FilterLabelSet filterLabelSet)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "TableDisplayer.getView()", "testcase": false, "constructor": false}, {"identifier": "getFilterLabelSet", "parameters": "()", "modifiers": "public", "return": "FilterLabelSet", "signature": "FilterLabelSet getFilterLabelSet()", "full_signature": "public FilterLabelSet getFilterLabelSet()", "class_method_signature": "TableDisplayer.getFilterLabelSet()", "testcase": false, "constructor": false}, {"identifier": "getTotalRows", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTotalRows()", "full_signature": "public int getTotalRows()", "class_method_signature": "TableDisplayer.getTotalRows()", "testcase": false, "constructor": false}, {"identifier": "getLastOrderedColumn", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastOrderedColumn()", "full_signature": "public String getLastOrderedColumn()", "class_method_signature": "TableDisplayer.getLastOrderedColumn()", "testcase": false, "constructor": false}, {"identifier": "getLastSortOrder", "parameters": "()", "modifiers": "public", "return": "SortOrder", "signature": "SortOrder getLastSortOrder()", "full_signature": "public SortOrder getLastSortOrder()", "class_method_signature": "TableDisplayer.getLastSortOrder()", "testcase": false, "constructor": false}, {"identifier": "getSelectedCellColumn", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSelectedCellColumn()", "full_signature": "public String getSelectedCellColumn()", "class_method_signature": "TableDisplayer.getSelectedCellColumn()", "testcase": false, "constructor": false}, {"identifier": "getSelectedCellRow", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getSelectedCellRow()", "full_signature": "public Integer getSelectedCellRow()", "class_method_signature": "TableDisplayer.getSelectedCellRow()", "testcase": false, "constructor": false}, {"identifier": "getExportRowNumMax", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getExportRowNumMax()", "full_signature": "public int getExportRowNumMax()", "class_method_signature": "TableDisplayer.getExportRowNumMax()", "testcase": false, "constructor": false}, {"identifier": "setExportRowNumMax", "parameters": "(int exportRowNumMax)", "modifiers": "public", "return": "void", "signature": "void setExportRowNumMax(int exportRowNumMax)", "full_signature": "public void setExportRowNumMax(int exportRowNumMax)", "class_method_signature": "TableDisplayer.setExportRowNumMax(int exportRowNumMax)", "testcase": false, "constructor": false}, {"identifier": "addOnCellSelectedCommand", "parameters": "(Command onCellSelectedCommand)", "modifiers": "public", "return": "void", "signature": "void addOnCellSelectedCommand(Command onCellSelectedCommand)", "full_signature": "public void addOnCellSelectedCommand(Command onCellSelectedCommand)", "class_method_signature": "TableDisplayer.addOnCellSelectedCommand(Command onCellSelectedCommand)", "testcase": false, "constructor": false}, {"identifier": "createDisplayerConstraints", "parameters": "()", "modifiers": "@Override public", "return": "DisplayerConstraints", "signature": "DisplayerConstraints createDisplayerConstraints()", "full_signature": "@Override public DisplayerConstraints createDisplayerConstraints()", "class_method_signature": "TableDisplayer.createDisplayerConstraints()", "testcase": false, "constructor": false}, {"identifier": "beforeDataSetLookup", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void beforeDataSetLookup()", "full_signature": "@Override protected void beforeDataSetLookup()", "class_method_signature": "TableDisplayer.beforeDataSetLookup()", "testcase": false, "constructor": false}, {"identifier": "afterDataSetLookup", "parameters": "(DataSet dataSet)", "modifiers": "@Override protected", "return": "void", "signature": "void afterDataSetLookup(DataSet dataSet)", "full_signature": "@Override protected void afterDataSetLookup(DataSet dataSet)", "class_method_signature": "TableDisplayer.afterDataSetLookup(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "createVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void createVisualization()", "full_signature": "@Override protected void createVisualization()", "class_method_signature": "TableDisplayer.createVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void updateVisualization()", "full_signature": "@Override protected void updateVisualization()", "class_method_signature": "TableDisplayer.updateVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateFilterStatus", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void updateFilterStatus()", "full_signature": "protected void updateFilterStatus()", "class_method_signature": "TableDisplayer.updateFilterStatus()", "testcase": false, "constructor": false}, {"identifier": "sortBy", "parameters": "(String column, SortOrder order)", "modifiers": "public", "return": "void", "signature": "void sortBy(String column, SortOrder order)", "full_signature": "public void sortBy(String column, SortOrder order)", "class_method_signature": "TableDisplayer.sortBy(String column, SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "selectCell", "parameters": "(String columnId, int rowIndex)", "modifiers": "public", "return": "void", "signature": "void selectCell(String columnId, int rowIndex)", "full_signature": "public void selectCell(String columnId, int rowIndex)", "class_method_signature": "TableDisplayer.selectCell(String columnId, int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "filterReset", "parameters": "(String columnId)", "modifiers": "@Override public", "return": "void", "signature": "void filterReset(String columnId)", "full_signature": "@Override public void filterReset(String columnId)", "class_method_signature": "TableDisplayer.filterReset(String columnId)", "testcase": false, "constructor": false}, {"identifier": "filterReset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void filterReset()", "full_signature": "@Override public void filterReset()", "class_method_signature": "TableDisplayer.filterReset()", "testcase": false, "constructor": false}, {"identifier": "lookupCurrentPage", "parameters": "(final Callback<Integer> callback)", "modifiers": "public", "return": "void", "signature": "void lookupCurrentPage(final Callback<Integer> callback)", "full_signature": "public void lookupCurrentPage(final Callback<Integer> callback)", "class_method_signature": "TableDisplayer.lookupCurrentPage(final Callback<Integer> callback)", "testcase": false, "constructor": false}, {"identifier": "export", "parameters": "(ExportFormat format)", "modifiers": "public", "return": "void", "signature": "void export(ExportFormat format)", "full_signature": "public void export(ExportFormat format)", "class_method_signature": "TableDisplayer.export(ExportFormat format)", "testcase": false, "constructor": false}, {"identifier": "onFilterLabelRemoved", "parameters": "(String columnId, int row)", "modifiers": "", "return": "void", "signature": "void onFilterLabelRemoved(String columnId, int row)", "full_signature": " void onFilterLabelRemoved(String columnId, int row)", "class_method_signature": "TableDisplayer.onFilterLabelRemoved(String columnId, int row)", "testcase": false, "constructor": false}, {"identifier": "onFilterClearAll", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onFilterClearAll()", "full_signature": " void onFilterClearAll()", "class_method_signature": "TableDisplayer.onFilterClearAll()", "testcase": false, "constructor": false}, {"identifier": "onFilterEnabled", "parameters": "(Displayer displayer, DataSetGroup groupOp)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "full_signature": "@Override public void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "class_method_signature": "TableDisplayer.onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "testcase": false, "constructor": false}, {"identifier": "onFilterEnabled", "parameters": "(Displayer displayer, DataSetFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterEnabled(Displayer displayer, DataSetFilter filter)", "full_signature": "@Override public void onFilterEnabled(Displayer displayer, DataSetFilter filter)", "class_method_signature": "TableDisplayer.onFilterEnabled(Displayer displayer, DataSetFilter filter)", "testcase": false, "constructor": false}, {"identifier": "onFilterReset", "parameters": "(Displayer displayer, List<DataSetGroup> groupOps)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "full_signature": "@Override public void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "class_method_signature": "TableDisplayer.onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "testcase": false, "constructor": false}, {"identifier": "onFilterReset", "parameters": "(Displayer displayer, DataSetFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterReset(Displayer displayer, DataSetFilter filter)", "full_signature": "@Override public void onFilterReset(Displayer displayer, DataSetFilter filter)", "class_method_signature": "TableDisplayer.onFilterReset(Displayer displayer, DataSetFilter filter)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/main/java/org/dashbuilder/renderer/client/table/TableDisplayer.java"}, "focal_method": {"identifier": "sortBy", "parameters": "(String column, SortOrder order)", "modifiers": "public", "return": "void", "body": "public void sortBy(String column, SortOrder order) {\n        if (displayerSettings.isTableSortEnabled()) {\n            lastOrderedColumn = column;\n            lastSortOrder = order;\n            super.redraw();\n        }\n    }", "signature": "void sortBy(String column, SortOrder order)", "full_signature": "public void sortBy(String column, SortOrder order)", "class_method_signature": "TableDisplayer.sortBy(String column, SortOrder order)", "testcase": false, "constructor": false, "invocations": ["isTableSortEnabled", "redraw"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}