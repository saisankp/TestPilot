{"test_class": {"identifier": "FieldConfigurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugins/powerup/src/test/java/edu/wpi/first/shuffleboard/plugin/powerup/FieldConfigurationTest.java"}, "test_case": {"identifier": "testParseFmsInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParseFmsInfo() {\n    FmsInfo info = new FmsInfo(\"LRL\", \"\", 0, 0, MatchType.NONE, Alliance.BLUE, 0, ControlWord.fromBits(0));\n    FieldConfiguration configuration = FieldConfiguration.parseFmsInfo(info);\n    assertEquals(Configuration.RED_RIGHT, configuration.getNearSwitch());\n    assertEquals(Configuration.RED_LEFT, configuration.getScale());\n    assertEquals(Configuration.RED_RIGHT, configuration.getFarSwitch());\n  }", "signature": "void testParseFmsInfo()", "full_signature": "@Test public void testParseFmsInfo()", "class_method_signature": "FieldConfigurationTest.testParseFmsInfo()", "testcase": true, "constructor": false, "invocations": ["fromBits", "parseFmsInfo", "assertEquals", "getNearSwitch", "assertEquals", "getScale", "assertEquals", "getFarSwitch"]}, "focal_class": {"identifier": "FieldConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final FieldConfiguration EMPTY =\n      new FieldConfiguration(Configuration.UNKNOWN, Configuration.UNKNOWN, Configuration.UNKNOWN);", "modifier": "private static final", "type": "FieldConfiguration", "declarator": "EMPTY =\n      new FieldConfiguration(Configuration.UNKNOWN, Configuration.UNKNOWN, Configuration.UNKNOWN)", "var_name": "EMPTY"}, {"original_string": "private final Configuration nearSwitch;", "modifier": "private final", "type": "Configuration", "declarator": "nearSwitch", "var_name": "nearSwitch"}, {"original_string": "private final Configuration scale;", "modifier": "private final", "type": "Configuration", "declarator": "scale", "var_name": "scale"}, {"original_string": "private final Configuration farSwitch;", "modifier": "private final", "type": "Configuration", "declarator": "farSwitch", "var_name": "farSwitch"}], "methods": [{"identifier": "FieldConfiguration", "parameters": "(Configuration nearSwitch, Configuration scale, Configuration farSwitch)", "modifiers": "public", "return": "", "signature": " FieldConfiguration(Configuration nearSwitch, Configuration scale, Configuration farSwitch)", "full_signature": "public  FieldConfiguration(Configuration nearSwitch, Configuration scale, Configuration farSwitch)", "class_method_signature": "FieldConfiguration.FieldConfiguration(Configuration nearSwitch, Configuration scale, Configuration farSwitch)", "testcase": false, "constructor": true}, {"identifier": "parseFmsInfo", "parameters": "(FmsInfo info)", "modifiers": "public static", "return": "FieldConfiguration", "signature": "FieldConfiguration parseFmsInfo(FmsInfo info)", "full_signature": "public static FieldConfiguration parseFmsInfo(FmsInfo info)", "class_method_signature": "FieldConfiguration.parseFmsInfo(FmsInfo info)", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(Element element, Alliance alliance, String gameSpecificMessage)", "modifiers": "@VisibleForTesting static", "return": "Configuration", "signature": "Configuration getConfig(Element element, Alliance alliance, String gameSpecificMessage)", "full_signature": "@VisibleForTesting static Configuration getConfig(Element element, Alliance alliance, String gameSpecificMessage)", "class_method_signature": "FieldConfiguration.getConfig(Element element, Alliance alliance, String gameSpecificMessage)", "testcase": false, "constructor": false}, {"identifier": "getNearSwitch", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getNearSwitch()", "full_signature": "public Configuration getNearSwitch()", "class_method_signature": "FieldConfiguration.getNearSwitch()", "testcase": false, "constructor": false}, {"identifier": "getScale", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getScale()", "full_signature": "public Configuration getScale()", "class_method_signature": "FieldConfiguration.getScale()", "testcase": false, "constructor": false}, {"identifier": "getFarSwitch", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getFarSwitch()", "full_signature": "public Configuration getFarSwitch()", "class_method_signature": "FieldConfiguration.getFarSwitch()", "testcase": false, "constructor": false}], "file": "plugins/powerup/src/main/java/edu/wpi/first/shuffleboard/plugin/powerup/FieldConfiguration.java"}, "focal_method": {"identifier": "parseFmsInfo", "parameters": "(FmsInfo info)", "modifiers": "public static", "return": "FieldConfiguration", "body": "public static FieldConfiguration parseFmsInfo(FmsInfo info) {\n    Alliance alliance = info.getAlliance();\n    String message = info.getGameSpecificMessage();\n    if (alliance == null || message.isEmpty() || message.length() != 3) {\n      return EMPTY;\n    }\n    return new FieldConfiguration(\n        getConfig(Element.NEAR_SWITCH, alliance, message),\n        getConfig(Element.SCALE, alliance, message),\n        getConfig(Element.FAR_SWITCH, alliance, message)\n    );\n  }", "signature": "FieldConfiguration parseFmsInfo(FmsInfo info)", "full_signature": "public static FieldConfiguration parseFmsInfo(FmsInfo info)", "class_method_signature": "FieldConfiguration.parseFmsInfo(FmsInfo info)", "testcase": false, "constructor": false, "invocations": ["getAlliance", "getGameSpecificMessage", "isEmpty", "length", "getConfig", "getConfig", "getConfig"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}