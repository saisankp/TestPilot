{"test_class": {"identifier": "CaptureSuggesterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private CoordinateSystem coords;", "modifier": "private", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}, {"original_string": "private CaptureSuggester movesToCapture;", "modifier": "private", "type": "CaptureSuggester", "declarator": "movesToCapture", "var_name": "movesToCapture"}], "file": "src/edu/lclark/orego/feature/CaptureSuggesterTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGet() {\n\t\tString[] diagram = {\n\t\t\t\t\"O#...\",\n\t\t\t\t\"....#\",\n\t\t\t\t\"...#O\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t};\n\t\tboard.setUpProblem(diagram, BLACK);\n\t\tassertTrue(movesToCapture.getMoves().contains(at(\"e2\")));\n\t\tassertTrue(movesToCapture.getMoves().contains(at(\"a4\")));\n\t}", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "CaptureSuggesterTest.testGet()", "testcase": true, "constructor": false, "invocations": ["setUpProblem", "assertTrue", "contains", "getMoves", "at", "assertTrue", "contains", "getMoves", "at"]}, "focal_class": {"identifier": "CaptureSuggester", "superclass": "", "interfaces": "implements Suggester", "fields": [{"original_string": "private final AtariObserver atari;", "modifier": "private final", "type": "AtariObserver", "declarator": "atari", "var_name": "atari"}, {"original_string": "private final int bias;", "modifier": "private final", "type": "int", "declarator": "bias", "var_name": "bias"}, {"original_string": "private final Board board;", "modifier": "private final", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private final ShortSet movesToCapture;", "modifier": "private final", "type": "ShortSet", "declarator": "movesToCapture", "var_name": "movesToCapture"}], "methods": [{"identifier": "CaptureSuggester", "parameters": "(Board board, AtariObserver atari)", "modifiers": "public", "return": "", "signature": " CaptureSuggester(Board board, AtariObserver atari)", "full_signature": "public  CaptureSuggester(Board board, AtariObserver atari)", "class_method_signature": "CaptureSuggester.CaptureSuggester(Board board, AtariObserver atari)", "testcase": false, "constructor": true}, {"identifier": "CaptureSuggester", "parameters": "(Board board, AtariObserver atari, int bias)", "modifiers": "public", "return": "", "signature": " CaptureSuggester(Board board, AtariObserver atari, int bias)", "full_signature": "public  CaptureSuggester(Board board, AtariObserver atari, int bias)", "class_method_signature": "CaptureSuggester.CaptureSuggester(Board board, AtariObserver atari, int bias)", "testcase": false, "constructor": true}, {"identifier": "getBias", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBias()", "full_signature": "@Override public int getBias()", "class_method_signature": "CaptureSuggester.getBias()", "testcase": false, "constructor": false}, {"identifier": "getMoves", "parameters": "()", "modifiers": "@Override public", "return": "ShortSet", "signature": "ShortSet getMoves()", "full_signature": "@Override public ShortSet getMoves()", "class_method_signature": "CaptureSuggester.getMoves()", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/feature/CaptureSuggester.java"}, "focal_method": {"identifier": "getMoves", "parameters": "()", "modifiers": "@Override public", "return": "ShortSet", "body": "@Override\n\tpublic ShortSet getMoves() {\n\t\tmovesToCapture.clear();\n\t\tfinal ShortSet chainsInAtari = atari.getChainsInAtari(board.getColorToPlay()\n\t\t\t\t.opposite());\n\t\tfor (int i = 0; i < chainsInAtari.size(); i++) {\n\t\t\tmovesToCapture.add(board.getLiberties(chainsInAtari.get(i)).get(0));\n\t\t}\n\t\treturn movesToCapture;\n\t}", "signature": "ShortSet getMoves()", "full_signature": "@Override public ShortSet getMoves()", "class_method_signature": "CaptureSuggester.getMoves()", "testcase": false, "constructor": false, "invocations": ["clear", "getChainsInAtari", "opposite", "getColorToPlay", "size", "add", "get", "getLiberties", "get"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}