{"test_class": {"identifier": "RequestSortTest", "superclass": "", "interfaces": "", "fields": [], "file": "request-parameters/src/test/java/eu/neoteric/starter/request/sort/RequestSortTest.java"}, "test_case": {"identifier": "testOfMethodShouldFailWhenIncorrectTypeSpecified", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testOfMethodShouldFailWhenIncorrectTypeSpecified() {\n        RequestSort requestSort = RequestSort.of(\"fieldName\", \"wrongName\");\n    }", "signature": "void testOfMethodShouldFailWhenIncorrectTypeSpecified()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testOfMethodShouldFailWhenIncorrectTypeSpecified()", "class_method_signature": "RequestSortTest.testOfMethodShouldFailWhenIncorrectTypeSpecified()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "RequestSort", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String fieldName;", "modifier": "private final", "type": "String", "declarator": "fieldName", "var_name": "fieldName"}, {"original_string": "private final SortType type;", "modifier": "private final", "type": "SortType", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "RequestSort", "parameters": "(String fieldName, SortType type)", "modifiers": "private", "return": "", "signature": " RequestSort(String fieldName, SortType type)", "full_signature": "private  RequestSort(String fieldName, SortType type)", "class_method_signature": "RequestSort.RequestSort(String fieldName, SortType type)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(String fieldName, String type)", "modifiers": "public static", "return": "RequestSort", "signature": "RequestSort of(String fieldName, String type)", "full_signature": "public static RequestSort of(String fieldName, String type)", "class_method_signature": "RequestSort.of(String fieldName, String type)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String fieldName, SortType type)", "modifiers": "public static", "return": "RequestSort", "signature": "RequestSort of(String fieldName, SortType type)", "full_signature": "public static RequestSort of(String fieldName, SortType type)", "class_method_signature": "RequestSort.of(String fieldName, SortType type)", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFieldName()", "full_signature": "public String getFieldName()", "class_method_signature": "RequestSort.getFieldName()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "SortType", "signature": "SortType getType()", "full_signature": "public SortType getType()", "class_method_signature": "RequestSort.getType()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RequestSort.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public final boolean equals(Object obj)", "class_method_signature": "RequestSort.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "RequestSort.hashCode()", "testcase": false, "constructor": false}], "file": "request-parameters/src/main/java/eu/neoteric/starter/request/sort/RequestSort.java"}, "focal_method": {"identifier": "of", "parameters": "(String fieldName, String type)", "modifiers": "public static", "return": "RequestSort", "body": "public static RequestSort of(String fieldName, String type) {\n        return of(fieldName, SortType.fromString(type));\n    }", "signature": "RequestSort of(String fieldName, String type)", "full_signature": "public static RequestSort of(String fieldName, String type)", "class_method_signature": "RequestSort.of(String fieldName, String type)", "testcase": false, "constructor": false, "invocations": ["of", "fromString"]}, "repository": {"repo_id": 49945501, "url": "https://github.com/neoteric-eu/neo-starters", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 969, "license": "licensed"}}