{"test_class": {"identifier": "TableManagerResourceTest", "superclass": "extends FoxtrotResourceTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ResourceTestRule resources;", "modifier": "@Rule\n    public", "type": "ResourceTestRule", "declarator": "resources", "var_name": "resources"}, {"original_string": "private TableManager tableManager;", "modifier": "private", "type": "TableManager", "declarator": "tableManager", "var_name": "tableManager"}], "file": "foxtrot-server/src/test/java/com/flipkart/foxtrot/server/resources/TableManagerResourceTest.java"}, "test_case": {"identifier": "testSave", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSave() throws Exception {\n        doNothing().when(getDataStore())\n                .initializeTable(any(Table.class), anyBoolean());\n        doNothing().when(getQueryStore())\n                .initializeTable(any(String.class));\n        Table table = Table.builder()\n                .name(TEST_TABLE_NAME)\n                .ttl(7)\n                .build();\n        Entity<Table> tableEntity = Entity.json(table);\n        resources.client()\n                .target(\"/v1/tables\")\n                .request()\n                .post(tableEntity);\n\n        Table response = tableManager.get(table.getName());\n        assertNotNull(response);\n        assertEquals(table.getName(), response.getName());\n        assertEquals(table.getTtl(), response.getTtl());\n        reset(tableManager);\n        reset(getQueryStore());\n        reset(getDataStore());\n    }", "signature": "void testSave()", "full_signature": "@Test public void testSave()", "class_method_signature": "TableManagerResourceTest.testSave()", "testcase": true, "constructor": false, "invocations": ["initializeTable", "when", "doNothing", "getDataStore", "any", "anyBoolean", "initializeTable", "when", "doNothing", "getQueryStore", "any", "build", "ttl", "name", "builder", "json", "post", "request", "target", "client", "get", "getName", "assertNotNull", "assertEquals", "getName", "getName", "assertEquals", "getTtl", "getTtl", "reset", "reset", "getQueryStore", "reset", "getDataStore"]}, "focal_class": {"identifier": "TableManagerResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TableManager tableManager;", "modifier": "private final", "type": "TableManager", "declarator": "tableManager", "var_name": "tableManager"}], "methods": [{"identifier": "TableManagerResource", "parameters": "(TableManager tableManager)", "modifiers": "@Inject public", "return": "", "signature": " TableManagerResource(TableManager tableManager)", "full_signature": "@Inject public  TableManagerResource(TableManager tableManager)", "class_method_signature": "TableManagerResource.TableManagerResource(TableManager tableManager)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "modifiers": "@POST @Timed @ApiOperation(\"Save Table\") public", "return": "Response", "signature": "Response save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "full_signature": "@POST @Timed @ApiOperation(\"Save Table\") public Response save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "class_method_signature": "TableManagerResource.save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"name\") String name)", "modifiers": "@GET @Timed @Path(\"/{name}\") @ApiOperation(\"Get Table\") public", "return": "Response", "signature": "Response get(@PathParam(\"name\") String name)", "full_signature": "@GET @Timed @Path(\"/{name}\") @ApiOperation(\"Get Table\") public Response get(@PathParam(\"name\") String name)", "class_method_signature": "TableManagerResource.get(@PathParam(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name, @Valid final Table table)", "modifiers": "@PUT @Timed @Path(\"/{name}\") @ApiOperation(\"Update Table\") public", "return": "Response", "signature": "Response get(@PathParam(\"name\") final String name, @Valid final Table table)", "full_signature": "@PUT @Timed @Path(\"/{name}\") @ApiOperation(\"Update Table\") public Response get(@PathParam(\"name\") final String name, @Valid final Table table)", "class_method_signature": "TableManagerResource.get(@PathParam(\"name\") final String name, @Valid final Table table)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"name\") String name)", "modifiers": "@DELETE @Timed @Path(\"/{name}/delete\") @ApiOperation(\"Delete Table\") public", "return": "Response", "signature": "Response delete(@PathParam(\"name\") String name)", "full_signature": "@DELETE @Timed @Path(\"/{name}/delete\") @ApiOperation(\"Delete Table\") public Response delete(@PathParam(\"name\") String name)", "class_method_signature": "TableManagerResource.delete(@PathParam(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@GET @Timed @ApiOperation(\"Get all Tables\") public", "return": "Response", "signature": "Response getAll()", "full_signature": "@GET @Timed @ApiOperation(\"Get all Tables\") public Response getAll()", "class_method_signature": "TableManagerResource.getAll()", "testcase": false, "constructor": false}], "file": "foxtrot-server/src/main/java/com/flipkart/foxtrot/server/resources/TableManagerResource.java"}, "focal_method": {"identifier": "save", "parameters": "(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "modifiers": "@POST @Timed @ApiOperation(\"Save Table\") public", "return": "Response", "body": "@POST\n    @Timed\n    @ApiOperation(\"Save Table\")\n    public Response save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate) {\n        table.setName(ElasticsearchUtils.getValidTableName(table.getName()));\n        tableManager.save(table, forceCreate);\n        return Response.ok(table)\n                .build();\n    }", "signature": "Response save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "full_signature": "@POST @Timed @ApiOperation(\"Save Table\") public Response save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "class_method_signature": "TableManagerResource.save(@Valid final Table table, @QueryParam(\"forceCreate\") @DefaultValue(\"false\") boolean forceCreate)", "testcase": false, "constructor": false, "invocations": ["setName", "getValidTableName", "getName", "save", "build", "ok"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}