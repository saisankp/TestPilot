{"test_class": {"identifier": "ConverterClassMetadataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public CompilationRule compilationRule = new CompilationRule();", "modifier": "@Rule\n    public", "type": "CompilationRule", "declarator": "compilationRule = new CompilationRule()", "var_name": "compilationRule"}, {"original_string": "private Elements elements;", "modifier": "private", "type": "Elements", "declarator": "elements", "var_name": "elements"}], "file": "shade-processor/src/test/java/io/t28/shade/processor/metadata/ConverterClassMetadataTest.java"}, "test_case": {"identifier": "constructorWithDefaultConverter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void constructorWithDefaultConverter() throws Exception {\n        // setup\n        final TypeElement element = elements.getTypeElement(Converter.class.getCanonicalName());\n\n        // exercise\n        final ConverterClassMetadata actual = new ConverterClassMetadata(element);\n\n        // verify\n        assertThat(actual)\n                .isDefault()\n                .isSupportedType(TypeName.VOID)\n                .isConvertedType(TypeName.VOID);\n    }", "signature": "void constructorWithDefaultConverter()", "full_signature": "@Test public void constructorWithDefaultConverter()", "class_method_signature": "ConverterClassMetadataTest.constructorWithDefaultConverter()", "testcase": true, "constructor": false, "invocations": ["getTypeElement", "getCanonicalName", "isConvertedType", "isSupportedType", "isDefault", "assertThat"]}, "focal_class": {"identifier": "ConverterClassMetadata", "superclass": "extends ClassMetadata", "interfaces": "", "fields": [{"original_string": "private static final int CONVERTED_TYPE_INDEX = 0;", "modifier": "private static final", "type": "int", "declarator": "CONVERTED_TYPE_INDEX = 0", "var_name": "CONVERTED_TYPE_INDEX"}, {"original_string": "private static final int SUPPORTED_TYPE_INDEX = 1;", "modifier": "private static final", "type": "int", "declarator": "SUPPORTED_TYPE_INDEX = 1", "var_name": "SUPPORTED_TYPE_INDEX"}, {"original_string": "private static final ClassName DEFAULT_CLASS = ClassName.get(Converter.class);", "modifier": "private static final", "type": "ClassName", "declarator": "DEFAULT_CLASS = ClassName.get(Converter.class)", "var_name": "DEFAULT_CLASS"}, {"original_string": "private final TypeName supportedType;", "modifier": "private final", "type": "TypeName", "declarator": "supportedType", "var_name": "supportedType"}, {"original_string": "private final TypeName convertedType;", "modifier": "private final", "type": "TypeName", "declarator": "convertedType", "var_name": "convertedType"}], "methods": [{"identifier": "ConverterClassMetadata", "parameters": "(@Nonnull TypeElement element)", "modifiers": "", "return": "", "signature": " ConverterClassMetadata(@Nonnull TypeElement element)", "full_signature": "  ConverterClassMetadata(@Nonnull TypeElement element)", "class_method_signature": "ConverterClassMetadata.ConverterClassMetadata(@Nonnull TypeElement element)", "testcase": false, "constructor": true}, {"identifier": "isDefault", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDefault()", "full_signature": "public boolean isDefault()", "class_method_signature": "ConverterClassMetadata.isDefault()", "testcase": false, "constructor": false}, {"identifier": "getSupportedType", "parameters": "()", "modifiers": "@Nonnull public", "return": "TypeName", "signature": "TypeName getSupportedType()", "full_signature": "@Nonnull public TypeName getSupportedType()", "class_method_signature": "ConverterClassMetadata.getSupportedType()", "testcase": false, "constructor": false}, {"identifier": "getConvertedType", "parameters": "()", "modifiers": "@Nonnull public", "return": "TypeName", "signature": "TypeName getConvertedType()", "full_signature": "@Nonnull public TypeName getConvertedType()", "class_method_signature": "ConverterClassMetadata.getConvertedType()", "testcase": false, "constructor": false}], "file": "shade-processor/src/main/java/io/t28/shade/processor/metadata/ConverterClassMetadata.java"}, "focal_method": {"identifier": "isDefault", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isDefault() {\n        return getClassName().equals(DEFAULT_CLASS);\n    }", "signature": "boolean isDefault()", "full_signature": "public boolean isDefault()", "class_method_signature": "ConverterClassMetadata.isDefault()", "testcase": false, "constructor": false, "invocations": ["equals", "getClassName"]}, "repository": {"repo_id": 69031608, "url": "https://github.com/t28hub/shade", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 27, "size": 486, "license": "licensed"}}