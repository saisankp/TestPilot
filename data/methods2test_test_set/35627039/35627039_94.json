{"test_class": {"identifier": "TopologyDagTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TopologyDag topology;", "modifier": "", "type": "TopologyDag", "declarator": "topology", "var_name": "topology"}], "file": "streams/layout/src/test/java/com/hortonworks/streamline/streams/layout/component/TopologyDagTest.java"}, "test_case": {"identifier": "testInvalidSource", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testInvalidSource() throws Exception {\n        Source src = new StreamlineSource(Collections.singleton(new Stream(\"f1\", \"f2\")));\n        Sink sink = new StreamlineSink();\n        Processor processor = new StreamlineProcessor(Collections.singleton(new Stream(\"r1\")));\n\n        topology.addEdge(src, processor);\n    }", "signature": "void testInvalidSource()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testInvalidSource()", "class_method_signature": "TopologyDagTest.testInvalidSource()", "testcase": true, "constructor": false, "invocations": ["singleton", "singleton", "addEdge"]}, "focal_class": {"identifier": "TopologyDag", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final Set<OutputComponent> outputComponents = new LinkedHashSet<>();", "modifier": "private final", "type": "Set<OutputComponent>", "declarator": "outputComponents = new LinkedHashSet<>()", "var_name": "outputComponents"}, {"original_string": "private final Set<InputComponent> inputComponents = new LinkedHashSet<>();", "modifier": "private final", "type": "Set<InputComponent>", "declarator": "inputComponents = new LinkedHashSet<>()", "var_name": "inputComponents"}, {"original_string": "private final Map<OutputComponent, List<Edge>> dag = new LinkedHashMap<>();", "modifier": "private final", "type": "Map<OutputComponent, List<Edge>>", "declarator": "dag = new LinkedHashMap<>()", "var_name": "dag"}], "methods": [{"identifier": "add", "parameters": "(OutputComponent component)", "modifiers": "public", "return": "TopologyDag", "signature": "TopologyDag add(OutputComponent component)", "full_signature": "public TopologyDag add(OutputComponent component)", "class_method_signature": "TopologyDag.add(OutputComponent component)", "testcase": false, "constructor": false}, {"identifier": "getOutputComponents", "parameters": "()", "modifiers": "public", "return": "Set<OutputComponent>", "signature": "Set<OutputComponent> getOutputComponents()", "full_signature": "public Set<OutputComponent> getOutputComponents()", "class_method_signature": "TopologyDag.getOutputComponents()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(InputComponent component)", "modifiers": "public", "return": "TopologyDag", "signature": "TopologyDag add(InputComponent component)", "full_signature": "public TopologyDag add(InputComponent component)", "class_method_signature": "TopologyDag.add(InputComponent component)", "testcase": false, "constructor": false}, {"identifier": "getInputComponents", "parameters": "()", "modifiers": "public", "return": "Set<InputComponent>", "signature": "Set<InputComponent> getInputComponents()", "full_signature": "public Set<InputComponent> getInputComponents()", "class_method_signature": "TopologyDag.getInputComponents()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Processor processor)", "modifiers": "public", "return": "TopologyDag", "signature": "TopologyDag add(Processor processor)", "full_signature": "public TopologyDag add(Processor processor)", "class_method_signature": "TopologyDag.add(Processor processor)", "testcase": false, "constructor": false}, {"identifier": "getComponents", "parameters": "()", "modifiers": "public", "return": "Set<Component>", "signature": "Set<Component> getComponents()", "full_signature": "public Set<Component> getComponents()", "class_method_signature": "TopologyDag.getComponents()", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(OutputComponent from, InputComponent to)", "modifiers": "public", "return": "void", "signature": "void addEdge(OutputComponent from, InputComponent to)", "full_signature": "public void addEdge(OutputComponent from, InputComponent to)", "class_method_signature": "TopologyDag.addEdge(OutputComponent from, InputComponent to)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(String id, OutputComponent from, InputComponent to, String streamId)", "modifiers": "public", "return": "void", "signature": "void addEdge(String id, OutputComponent from, InputComponent to, String streamId)", "full_signature": "public void addEdge(String id, OutputComponent from, InputComponent to, String streamId)", "class_method_signature": "TopologyDag.addEdge(String id, OutputComponent from, InputComponent to, String streamId)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(String id, OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "modifiers": "public", "return": "void", "signature": "void addEdge(String id, OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "full_signature": "public void addEdge(String id, OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "class_method_signature": "TopologyDag.addEdge(String id, OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(Edge edge)", "modifiers": "public", "return": "void", "signature": "void addEdge(Edge edge)", "full_signature": "public void addEdge(Edge edge)", "class_method_signature": "TopologyDag.addEdge(Edge edge)", "testcase": false, "constructor": false}, {"identifier": "addEdge", "parameters": "(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "modifiers": "public", "return": "void", "signature": "void addEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "full_signature": "public void addEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "class_method_signature": "TopologyDag.addEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "testcase": false, "constructor": false}, {"identifier": "removeEdge", "parameters": "(OutputComponent from, InputComponent to)", "modifiers": "public", "return": "void", "signature": "void removeEdge(OutputComponent from, InputComponent to)", "full_signature": "public void removeEdge(OutputComponent from, InputComponent to)", "class_method_signature": "TopologyDag.removeEdge(OutputComponent from, InputComponent to)", "testcase": false, "constructor": false}, {"identifier": "removeEdge", "parameters": "(OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "modifiers": "public", "return": "void", "signature": "void removeEdge(OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "full_signature": "public void removeEdge(OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "class_method_signature": "TopologyDag.removeEdge(OutputComponent from, InputComponent to, String streamId, Stream.Grouping grouping)", "testcase": false, "constructor": false}, {"identifier": "getEdgesFrom", "parameters": "(Component component)", "modifiers": "public", "return": "List<Edge>", "signature": "List<Edge> getEdgesFrom(Component component)", "full_signature": "public List<Edge> getEdgesFrom(Component component)", "class_method_signature": "TopologyDag.getEdgesFrom(Component component)", "testcase": false, "constructor": false}, {"identifier": "getEdgesTo", "parameters": "(Component component)", "modifiers": "public", "return": "List<Edge>", "signature": "List<Edge> getEdgesTo(Component component)", "full_signature": "public List<Edge> getEdgesTo(Component component)", "class_method_signature": "TopologyDag.getEdgesTo(Component component)", "testcase": false, "constructor": false}, {"identifier": "getEdges", "parameters": "(Component component)", "modifiers": "public", "return": "List<Edge>", "signature": "List<Edge> getEdges(Component component)", "full_signature": "public List<Edge> getEdges(Component component)", "class_method_signature": "TopologyDag.getEdges(Component component)", "testcase": false, "constructor": false}, {"identifier": "getAllEdges", "parameters": "()", "modifiers": "public", "return": "List<Edge>", "signature": "List<Edge> getAllEdges()", "full_signature": "public List<Edge> getAllEdges()", "class_method_signature": "TopologyDag.getAllEdges()", "testcase": false, "constructor": false}, {"identifier": "adjacent", "parameters": "(Component component)", "modifiers": "public", "return": "List<Component>", "signature": "List<Component> adjacent(Component component)", "full_signature": "public List<Component> adjacent(Component component)", "class_method_signature": "TopologyDag.adjacent(Component component)", "testcase": false, "constructor": false}, {"identifier": "traverse", "parameters": "(TopologyDagVisitor visitor)", "modifiers": "public", "return": "void", "signature": "void traverse(TopologyDagVisitor visitor)", "full_signature": "public void traverse(TopologyDagVisitor visitor)", "class_method_signature": "TopologyDag.traverse(TopologyDagVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "topOrder", "parameters": "()", "modifiers": "", "return": "List<Component>", "signature": "List<Component> topOrder()", "full_signature": " List<Component> topOrder()", "class_method_signature": "TopologyDag.topOrder()", "testcase": false, "constructor": false}, {"identifier": "dfs", "parameters": "(Component current, Map<Component, State> state)", "modifiers": "private", "return": "List<Component>", "signature": "List<Component> dfs(Component current, Map<Component, State> state)", "full_signature": "private List<Component> dfs(Component current, Map<Component, State> state)", "class_method_signature": "TopologyDag.dfs(Component current, Map<Component, State> state)", "testcase": false, "constructor": false}, {"identifier": "ensureValid", "parameters": "(OutputComponent from, InputComponent to)", "modifiers": "private", "return": "void", "signature": "void ensureValid(OutputComponent from, InputComponent to)", "full_signature": "private void ensureValid(OutputComponent from, InputComponent to)", "class_method_signature": "TopologyDag.ensureValid(OutputComponent from, InputComponent to)", "testcase": false, "constructor": false}, {"identifier": "doAddEdge", "parameters": "(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "modifiers": "private", "return": "void", "signature": "void doAddEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "full_signature": "private void doAddEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "class_method_signature": "TopologyDag.doAddEdge(String id, OutputComponent from, InputComponent to, StreamGrouping streamGrouping)", "testcase": false, "constructor": false}, {"identifier": "getDefaultStreamId", "parameters": "(OutputComponent source)", "modifiers": "private", "return": "String", "signature": "String getDefaultStreamId(OutputComponent source)", "full_signature": "private String getDefaultStreamId(OutputComponent source)", "class_method_signature": "TopologyDag.getDefaultStreamId(OutputComponent source)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TopologyDag.toString()", "testcase": false, "constructor": false}], "file": "streams/layout/src/main/java/com/hortonworks/streamline/streams/layout/component/TopologyDag.java"}, "focal_method": {"identifier": "addEdge", "parameters": "(OutputComponent from, InputComponent to)", "modifiers": "public", "return": "void", "body": "public void addEdge(OutputComponent from, InputComponent to) {\n        addEdge(UUID.randomUUID().toString(), from, to, getDefaultStreamId(from));\n    }", "signature": "void addEdge(OutputComponent from, InputComponent to)", "full_signature": "public void addEdge(OutputComponent from, InputComponent to)", "class_method_signature": "TopologyDag.addEdge(OutputComponent from, InputComponent to)", "testcase": false, "constructor": false, "invocations": ["addEdge", "toString", "randomUUID", "getDefaultStreamId"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}