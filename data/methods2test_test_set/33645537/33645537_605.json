{"test_class": {"identifier": "PaginatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Paginator pg;", "modifier": "private", "type": "Paginator", "declarator": "pg", "var_name": "pg"}], "file": "concurrency/src/test/java/com/baidu/unbiz/common/lang/PaginatorTest.java"}, "test_case": {"identifier": "setItems", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setItems() {\n        pg.setItems(123);\n        pg.setPage(11);\n        pg.setItems(133); // \u6539\u53d8items\n\n        assertEquals(14, pg.getPages());\n        assertEquals(133, pg.getItems());\n        assertEquals(10, pg.getItemsPerPage());\n\n        assertEquals(11, pg.getPage());\n        assertEquals(1, pg.getFirstPage());\n        assertEquals(10, pg.getPreviousPage());\n        assertEquals(1, pg.getPreviousPage(10));\n        assertEquals(12, pg.getNextPage());\n        assertEquals(14, pg.getNextPage(10));\n\n        assertEquals(101, pg.getBeginIndex());\n        assertEquals(110, pg.getEndIndex());\n\n        assertEquals(100, pg.getOffset());\n        assertEquals(10, pg.getLength());\n\n        assertTrue(pg.isDisabledPage(0));\n        assertFalse(pg.isDisabledPage(1));\n        assertFalse(pg.isDisabledPage(2));\n        assertTrue(pg.isDisabledPage(11));\n        assertFalse(pg.isDisabledPage(13));\n        assertFalse(pg.isDisabledPage(14));\n        assertTrue(pg.isDisabledPage(15));\n    }", "signature": "void setItems()", "full_signature": "@Test public void setItems()", "class_method_signature": "PaginatorTest.setItems()", "testcase": true, "constructor": false, "invocations": ["setItems", "setPage", "setItems", "assertEquals", "getPages", "assertEquals", "getItems", "assertEquals", "getItemsPerPage", "assertEquals", "getPage", "assertEquals", "getFirstPage", "assertEquals", "getPreviousPage", "assertEquals", "getPreviousPage", "assertEquals", "getNextPage", "assertEquals", "getNextPage", "assertEquals", "getBeginIndex", "assertEquals", "getEndIndex", "assertEquals", "getOffset", "assertEquals", "getLength", "assertTrue", "isDisabledPage", "assertFalse", "isDisabledPage", "assertFalse", "isDisabledPage", "assertTrue", "isDisabledPage", "assertFalse", "isDisabledPage", "assertFalse", "isDisabledPage", "assertTrue", "isDisabledPage"]}, "focal_class": {"identifier": "Paginator", "superclass": "", "interfaces": "implements Serializable, CloneableObject<Paginator>", "fields": [{"original_string": "private static final long serialVersionUID = 2173477867408219673L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2173477867408219673L", "var_name": "serialVersionUID"}, {"original_string": "public static final int DEFAULT_ITEMS_PER_PAGE = 10;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_ITEMS_PER_PAGE = 10", "var_name": "DEFAULT_ITEMS_PER_PAGE"}, {"original_string": "public static final int DEFAULT_SLIDER_SIZE = 7;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SLIDER_SIZE = 7", "var_name": "DEFAULT_SLIDER_SIZE"}, {"original_string": "public static final int UNKNOWN_ITEMS = Integer.MAX_VALUE;", "modifier": "public static final", "type": "int", "declarator": "UNKNOWN_ITEMS = Integer.MAX_VALUE", "var_name": "UNKNOWN_ITEMS"}, {"original_string": "private int page;", "modifier": "private", "type": "int", "declarator": "page", "var_name": "page"}, {"original_string": "private int items;", "modifier": "private", "type": "int", "declarator": "items", "var_name": "items"}, {"original_string": "private int itemsPerPage;", "modifier": "private", "type": "int", "declarator": "itemsPerPage", "var_name": "itemsPerPage"}], "methods": [{"identifier": "Paginator", "parameters": "()", "modifiers": "public", "return": "", "signature": " Paginator()", "full_signature": "public  Paginator()", "class_method_signature": "Paginator.Paginator()", "testcase": false, "constructor": true}, {"identifier": "Paginator", "parameters": "(int itemsPerPage)", "modifiers": "public", "return": "", "signature": " Paginator(int itemsPerPage)", "full_signature": "public  Paginator(int itemsPerPage)", "class_method_signature": "Paginator.Paginator(int itemsPerPage)", "testcase": false, "constructor": true}, {"identifier": "Paginator", "parameters": "(int itemsPerPage, int items)", "modifiers": "public", "return": "", "signature": " Paginator(int itemsPerPage, int items)", "full_signature": "public  Paginator(int itemsPerPage, int items)", "class_method_signature": "Paginator.Paginator(int itemsPerPage, int items)", "testcase": false, "constructor": true}, {"identifier": "Paginator", "parameters": "(PageSize pageSize)", "modifiers": "public", "return": "", "signature": " Paginator(PageSize pageSize)", "full_signature": "public  Paginator(PageSize pageSize)", "class_method_signature": "Paginator.Paginator(PageSize pageSize)", "testcase": false, "constructor": true}, {"identifier": "Paginator", "parameters": "(PageSize pageSize, int items)", "modifiers": "public", "return": "", "signature": " Paginator(PageSize pageSize, int items)", "full_signature": "public  Paginator(PageSize pageSize, int items)", "class_method_signature": "Paginator.Paginator(PageSize pageSize, int items)", "testcase": false, "constructor": true}, {"identifier": "getPages", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPages()", "full_signature": "public int getPages()", "class_method_signature": "Paginator.getPages()", "testcase": false, "constructor": false}, {"identifier": "getPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPage()", "full_signature": "public int getPage()", "class_method_signature": "Paginator.getPage()", "testcase": false, "constructor": false}, {"identifier": "setPage", "parameters": "(int page)", "modifiers": "public", "return": "int", "signature": "int setPage(int page)", "full_signature": "public int setPage(int page)", "class_method_signature": "Paginator.setPage(int page)", "testcase": false, "constructor": false}, {"identifier": "getItems", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getItems()", "full_signature": "public int getItems()", "class_method_signature": "Paginator.getItems()", "testcase": false, "constructor": false}, {"identifier": "setItems", "parameters": "(int items)", "modifiers": "public", "return": "int", "signature": "int setItems(int items)", "full_signature": "public int setItems(int items)", "class_method_signature": "Paginator.setItems(int items)", "testcase": false, "constructor": false}, {"identifier": "getItemsPerPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getItemsPerPage()", "full_signature": "public int getItemsPerPage()", "class_method_signature": "Paginator.getItemsPerPage()", "testcase": false, "constructor": false}, {"identifier": "setItemsPerPage", "parameters": "(int itemsPerPage)", "modifiers": "public", "return": "int", "signature": "int setItemsPerPage(int itemsPerPage)", "full_signature": "public int setItemsPerPage(int itemsPerPage)", "class_method_signature": "Paginator.setItemsPerPage(int itemsPerPage)", "testcase": false, "constructor": false}, {"identifier": "setItemsPerPage", "parameters": "(PageSize pageSize)", "modifiers": "public", "return": "int", "signature": "int setItemsPerPage(PageSize pageSize)", "full_signature": "public int setItemsPerPage(PageSize pageSize)", "class_method_signature": "Paginator.setItemsPerPage(PageSize pageSize)", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOffset()", "full_signature": "public int getOffset()", "class_method_signature": "Paginator.getOffset()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLength()", "full_signature": "public int getLength()", "class_method_signature": "Paginator.getLength()", "testcase": false, "constructor": false}, {"identifier": "getBeginIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBeginIndex()", "full_signature": "public int getBeginIndex()", "class_method_signature": "Paginator.getBeginIndex()", "testcase": false, "constructor": false}, {"identifier": "getEndIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEndIndex()", "full_signature": "public int getEndIndex()", "class_method_signature": "Paginator.getEndIndex()", "testcase": false, "constructor": false}, {"identifier": "setItem", "parameters": "(int itemOffset)", "modifiers": "public", "return": "int", "signature": "int setItem(int itemOffset)", "full_signature": "public int setItem(int itemOffset)", "class_method_signature": "Paginator.setItem(int itemOffset)", "testcase": false, "constructor": false}, {"identifier": "getFirstPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFirstPage()", "full_signature": "public int getFirstPage()", "class_method_signature": "Paginator.getFirstPage()", "testcase": false, "constructor": false}, {"identifier": "getLastPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLastPage()", "full_signature": "public int getLastPage()", "class_method_signature": "Paginator.getLastPage()", "testcase": false, "constructor": false}, {"identifier": "getPreviousPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPreviousPage()", "full_signature": "public int getPreviousPage()", "class_method_signature": "Paginator.getPreviousPage()", "testcase": false, "constructor": false}, {"identifier": "getPreviousPage", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int getPreviousPage(int n)", "full_signature": "public int getPreviousPage(int n)", "class_method_signature": "Paginator.getPreviousPage(int n)", "testcase": false, "constructor": false}, {"identifier": "getNextPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNextPage()", "full_signature": "public int getNextPage()", "class_method_signature": "Paginator.getNextPage()", "testcase": false, "constructor": false}, {"identifier": "getNextPage", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int getNextPage(int n)", "full_signature": "public int getNextPage(int n)", "class_method_signature": "Paginator.getNextPage(int n)", "testcase": false, "constructor": false}, {"identifier": "getPrevious", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPrevious()", "full_signature": "public int getPrevious()", "class_method_signature": "Paginator.getPrevious()", "testcase": false, "constructor": false}, {"identifier": "getNext", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNext()", "full_signature": "public int getNext()", "class_method_signature": "Paginator.getNext()", "testcase": false, "constructor": false}, {"identifier": "isDisabledPage", "parameters": "(int page)", "modifiers": "public", "return": "boolean", "signature": "boolean isDisabledPage(int page)", "full_signature": "public boolean isDisabledPage(int page)", "class_method_signature": "Paginator.isDisabledPage(int page)", "testcase": false, "constructor": false}, {"identifier": "getSlider", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getSlider()", "full_signature": "public int[] getSlider()", "class_method_signature": "Paginator.getSlider()", "testcase": false, "constructor": false}, {"identifier": "getSlider", "parameters": "(int width)", "modifiers": "public", "return": "int[]", "signature": "int[] getSlider(int width)", "full_signature": "public int[] getSlider(int width)", "class_method_signature": "Paginator.getSlider(int width)", "testcase": false, "constructor": false}, {"identifier": "calcPage", "parameters": "(int page)", "modifiers": "protected", "return": "int", "signature": "int calcPage(int page)", "full_signature": "protected int calcPage(int page)", "class_method_signature": "Paginator.calcPage(int page)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Paginator", "signature": "Paginator clone()", "full_signature": "@Override public Paginator clone()", "class_method_signature": "Paginator.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Paginator.toString()", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/lang/Paginator.java"}, "focal_method": {"identifier": "setItems", "parameters": "(int items)", "modifiers": "public", "return": "int", "body": "public int setItems(int items) {\n        this.items = items >= 0 ? items : 0;\n        setPage(page);\n        return this.items;\n    }", "signature": "int setItems(int items)", "full_signature": "public int setItems(int items)", "class_method_signature": "Paginator.setItems(int items)", "testcase": false, "constructor": false, "invocations": ["setPage"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}