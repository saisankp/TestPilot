{"test_class": {"identifier": "PcapDumperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PcapDumperTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PcapDumperTest.class)", "var_name": "logger"}, {"original_string": "private static final String TMP_DIR_PROP = PcapDumperTest.class.getName() + \".tmpDir\";", "modifier": "private static final", "type": "String", "declarator": "TMP_DIR_PROP = PcapDumperTest.class.getName() + \".tmpDir\"", "var_name": "TMP_DIR_PROP"}, {"original_string": "private String tmpDirPath;", "modifier": "private", "type": "String", "declarator": "tmpDirPath", "var_name": "tmpDirPath"}, {"original_string": "private File dumpFile;", "modifier": "private", "type": "File", "declarator": "dumpFile", "var_name": "dumpFile"}, {"original_string": "private static final Packet packet;", "modifier": "private static final", "type": "Packet", "declarator": "packet", "var_name": "packet"}, {"original_string": "private PcapHandle handle;", "modifier": "private", "type": "PcapHandle", "declarator": "handle", "var_name": "handle"}, {"original_string": "private PcapDumper dumper;", "modifier": "private", "type": "PcapDumper", "declarator": "dumper", "var_name": "dumper"}], "file": "pcap4j-core/src/test/java/org/pcap4j/core/PcapDumperTest.java"}, "test_case": {"identifier": "testDump", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDump() throws Exception {\n    dumper.dump(packet);\n    dumper.flush();\n    assertTrue(dumpFile.exists());\n    assertTrue(dumpFile.length() >= packet.length());\n  }", "signature": "void testDump()", "full_signature": "@Test public void testDump()", "class_method_signature": "PcapDumperTest.testDump()", "testcase": true, "constructor": false, "invocations": ["dump", "flush", "assertTrue", "exists", "assertTrue", "length", "length"]}, "focal_class": {"identifier": "PcapDumper", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PcapDumper.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PcapDumper.class)", "var_name": "logger"}, {"original_string": "private final Pointer dumper;", "modifier": "private final", "type": "Pointer", "declarator": "dumper", "var_name": "dumper"}, {"original_string": "private final TimestampPrecision timestampPrecision;", "modifier": "private final", "type": "TimestampPrecision", "declarator": "timestampPrecision", "var_name": "timestampPrecision"}, {"original_string": "private final ReentrantReadWriteLock dumperLock = new ReentrantReadWriteLock(true);", "modifier": "private final", "type": "ReentrantReadWriteLock", "declarator": "dumperLock = new ReentrantReadWriteLock(true)", "var_name": "dumperLock"}, {"original_string": "private volatile boolean open = true;", "modifier": "private volatile", "type": "boolean", "declarator": "open = true", "var_name": "open"}], "methods": [{"identifier": "PcapDumper", "parameters": "(Pointer dumper, TimestampPrecision timestampPrecision)", "modifiers": "", "return": "", "signature": " PcapDumper(Pointer dumper, TimestampPrecision timestampPrecision)", "full_signature": "  PcapDumper(Pointer dumper, TimestampPrecision timestampPrecision)", "class_method_signature": "PcapDumper.PcapDumper(Pointer dumper, TimestampPrecision timestampPrecision)", "testcase": false, "constructor": true}, {"identifier": "getDumper", "parameters": "()", "modifiers": "", "return": "Pointer", "signature": "Pointer getDumper()", "full_signature": " Pointer getDumper()", "class_method_signature": "PcapDumper.getDumper()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "public boolean isOpen()", "class_method_signature": "PcapDumper.isOpen()", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(Packet packet)", "modifiers": "public", "return": "void", "signature": "void dump(Packet packet)", "full_signature": "public void dump(Packet packet)", "class_method_signature": "PcapDumper.dump(Packet packet)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(Packet packet, Timestamp timestamp)", "modifiers": "public", "return": "void", "signature": "void dump(Packet packet, Timestamp timestamp)", "full_signature": "public void dump(Packet packet, Timestamp timestamp)", "class_method_signature": "PcapDumper.dump(Packet packet, Timestamp timestamp)", "testcase": false, "constructor": false}, {"identifier": "dumpRaw", "parameters": "(byte[] packet)", "modifiers": "public", "return": "void", "signature": "void dumpRaw(byte[] packet)", "full_signature": "public void dumpRaw(byte[] packet)", "class_method_signature": "PcapDumper.dumpRaw(byte[] packet)", "testcase": false, "constructor": false}, {"identifier": "dumpRaw", "parameters": "(byte[] packet, Timestamp timestamp)", "modifiers": "public", "return": "void", "signature": "void dumpRaw(byte[] packet, Timestamp timestamp)", "full_signature": "public void dumpRaw(byte[] packet, Timestamp timestamp)", "class_method_signature": "PcapDumper.dumpRaw(byte[] packet, Timestamp timestamp)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "PcapDumper.flush()", "testcase": false, "constructor": false}, {"identifier": "ftell", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long ftell()", "full_signature": "public long ftell()", "class_method_signature": "PcapDumper.ftell()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "PcapDumper.close()", "testcase": false, "constructor": false}], "file": "pcap4j-core/src/main/java/org/pcap4j/core/PcapDumper.java"}, "focal_method": {"identifier": "dump", "parameters": "(Packet packet)", "modifiers": "public", "return": "void", "body": "public void dump(Packet packet) throws NotOpenException {\n    dump(packet, new Timestamp(System.currentTimeMillis()));\n  }", "signature": "void dump(Packet packet)", "full_signature": "public void dump(Packet packet)", "class_method_signature": "PcapDumper.dump(Packet packet)", "testcase": false, "constructor": false, "invocations": ["dump", "currentTimeMillis"]}, "repository": {"repo_id": 3005042, "url": "https://github.com/kaitoy/pcap4j", "language": "Java", "is_fork": false, "fork_count": 247, "stargazer_count": 779, "size": 15246, "license": "licensed"}}