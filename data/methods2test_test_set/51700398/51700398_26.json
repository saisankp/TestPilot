{"test_class": {"identifier": "YahooStockProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HISTO_AAPL = readFile(\"/provider/rate/yahoo/histo_aapl.json\");", "modifier": "private static final", "type": "String", "declarator": "HISTO_AAPL = readFile(\"/provider/rate/yahoo/histo_aapl.json\")", "var_name": "HISTO_AAPL"}, {"original_string": "private static final String LATEST = readFile(\"/provider/rate/yahoo/latest.json\");", "modifier": "private static final", "type": "String", "declarator": "LATEST = readFile(\"/provider/rate/yahoo/latest.json\")", "var_name": "LATEST"}, {"original_string": "private static final String LATEST_UBI = readFile(\"/provider/rate/yahoo/latest_ubi.json\");", "modifier": "private static final", "type": "String", "declarator": "LATEST_UBI = readFile(\"/provider/rate/yahoo/latest_ubi.json\")", "var_name": "LATEST_UBI"}, {"original_string": "@Mock\n\tprivate PairService pairService;", "modifier": "@Mock\n\tprivate", "type": "PairService", "declarator": "pairService", "var_name": "pairService"}, {"original_string": "@InjectMocks\n\tprivate YahooStockProvider yahooStock;", "modifier": "@InjectMocks\n\tprivate", "type": "YahooStockProvider", "declarator": "yahooStock", "var_name": "yahooStock"}, {"original_string": "private MockRestServiceServer server;", "modifier": "private", "type": "MockRestServiceServer", "declarator": "server", "var_name": "server"}], "file": "trading-common/src/test/java/fr/ymanvieu/trading/common/provider/rate/yahoo/YahooStockProviderTest.java"}, "test_case": {"identifier": "testGetLatestRate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetLatestRate() {\n\t\tserver.expect(anything()).andRespond(withSuccess(LATEST_UBI, MediaType.APPLICATION_JSON));\n\n\t\tQuote result = yahooStock.getLatestRate(\"UBI.PA\");\n\n\t\tassertThat(result).isEqualTo(new Quote(\"UBI.PA\", null, new BigDecimal(\"57.52\"), parse(\"2017-09-08T17:35:14+02:00\")));\n\t}", "signature": "void testGetLatestRate()", "full_signature": "@Test public void testGetLatestRate()", "class_method_signature": "YahooStockProviderTest.testGetLatestRate()", "testcase": true, "constructor": false, "invocations": ["andRespond", "expect", "anything", "withSuccess", "getLatestRate", "isEqualTo", "assertThat", "parse"]}, "focal_class": {"identifier": "YahooStockProvider", "superclass": "", "interfaces": "implements LatestRateProvider, HistoricalRateProvider", "fields": [{"original_string": "private final RestTemplate rt = new RestTemplate();", "modifier": "private final", "type": "RestTemplate", "declarator": "rt = new RestTemplate()", "var_name": "rt"}, {"original_string": "@Value(\"${provider.yahoo.url.latest}\")\n\tprivate String url;", "modifier": "@Value(\"${provider.yahoo.url.latest}\")\n\tprivate", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "@Value(\"${provider.yahoo.url.history}\")\n\tprivate String urlHistory;", "modifier": "@Value(\"${provider.yahoo.url.history}\")\n\tprivate", "type": "String", "declarator": "urlHistory", "var_name": "urlHistory"}, {"original_string": "@Autowired\n\tprivate PairService pairService;", "modifier": "@Autowired\n\tprivate", "type": "PairService", "declarator": "pairService", "var_name": "pairService"}], "methods": [{"identifier": "getRates", "parameters": "()", "modifiers": "@Override public", "return": "List<Quote>", "signature": "List<Quote> getRates()", "full_signature": "@Override public List<Quote> getRates()", "class_method_signature": "YahooStockProvider.getRates()", "testcase": false, "constructor": false}, {"identifier": "toInstant", "parameters": "(long secondsTimestamp)", "modifiers": "private static", "return": "Instant", "signature": "Instant toInstant(long secondsTimestamp)", "full_signature": "private static Instant toInstant(long secondsTimestamp)", "class_method_signature": "YahooStockProvider.toInstant(long secondsTimestamp)", "testcase": false, "constructor": false}, {"identifier": "getLatestRate", "parameters": "(String symbol)", "modifiers": "@Override public", "return": "Quote", "signature": "Quote getLatestRate(String symbol)", "full_signature": "@Override public Quote getLatestRate(String symbol)", "class_method_signature": "YahooStockProvider.getLatestRate(String symbol)", "testcase": false, "constructor": false}, {"identifier": "getHistoricalRates", "parameters": "()", "modifiers": "@Override public", "return": "List<Quote>", "signature": "List<Quote> getHistoricalRates()", "full_signature": "@Override public List<Quote> getHistoricalRates()", "class_method_signature": "YahooStockProvider.getHistoricalRates()", "testcase": false, "constructor": false}, {"identifier": "getHistoricalRates", "parameters": "(String code)", "modifiers": "@Override public", "return": "List<Quote>", "signature": "List<Quote> getHistoricalRates(String code)", "full_signature": "@Override public List<Quote> getHistoricalRates(String code)", "class_method_signature": "YahooStockProvider.getHistoricalRates(String code)", "testcase": false, "constructor": false}, {"identifier": "getCurrency", "parameters": "(List<Pair> symbols, String symbol)", "modifiers": "private", "return": "String", "signature": "String getCurrency(List<Pair> symbols, String symbol)", "full_signature": "private String getCurrency(List<Pair> symbols, String symbol)", "class_method_signature": "YahooStockProvider.getCurrency(List<Pair> symbols, String symbol)", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "(List<Pair> symbols, String symbol)", "modifiers": "private", "return": "String", "signature": "String getSource(List<Pair> symbols, String symbol)", "full_signature": "private String getSource(List<Pair> symbols, String symbol)", "class_method_signature": "YahooStockProvider.getSource(List<Pair> symbols, String symbol)", "testcase": false, "constructor": false}, {"identifier": "createPairsString", "parameters": "(List<Pair> symbols)", "modifiers": "private", "return": "String", "signature": "String createPairsString(List<Pair> symbols)", "full_signature": "private String createPairsString(List<Pair> symbols)", "class_method_signature": "YahooStockProvider.createPairsString(List<Pair> symbols)", "testcase": false, "constructor": false}], "file": "trading-common/src/main/java/fr/ymanvieu/trading/common/provider/rate/yahoo/YahooStockProvider.java"}, "focal_method": {"identifier": "getLatestRate", "parameters": "(String symbol)", "modifiers": "@Override public", "return": "Quote", "body": "@Override\n\tpublic Quote getLatestRate(String symbol) {\n\t\tYahooModel result = rt.getForObject(format(url, symbol), YahooModel.class);\n\n\t\treturn result\n\t\t\t\t.getQuoteResponse().getResult().stream().map(yf -> new Quote(yf.getSymbol(),\n\t\t\t\t\t\tBigDecimal.valueOf(yf.getRegularMarketPrice()), toInstant(yf.getRegularMarketTime())))\n\t\t\t\t.findFirst().orElse(null);\n\t}", "signature": "Quote getLatestRate(String symbol)", "full_signature": "@Override public Quote getLatestRate(String symbol)", "class_method_signature": "YahooStockProvider.getLatestRate(String symbol)", "testcase": false, "constructor": false, "invocations": ["getForObject", "format", "orElse", "findFirst", "map", "stream", "getResult", "getQuoteResponse", "getSymbol", "valueOf", "getRegularMarketPrice", "toInstant", "getRegularMarketTime"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}