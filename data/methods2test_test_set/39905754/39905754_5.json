{"test_class": {"identifier": "SolutionTest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2016/2016-01-07-TextJustification-Java/src/test/java/com/murex/codingdojo/textjustification/SolutionTest.java"}, "test_case": {"identifier": "testFullJustify_WithEmptyWord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFullJustify_WithEmptyWord() {\n        Solution solution = new Solution();\n        List<String> result = solution.fullJustify(new String[] { \"\" }, 2);\n        assertEquals(Arrays.asList(\"  \"), result);\n    }", "signature": "void testFullJustify_WithEmptyWord()", "full_signature": "@Test public void testFullJustify_WithEmptyWord()", "class_method_signature": "SolutionTest.testFullJustify_WithEmptyWord()", "testcase": true, "constructor": false, "invocations": ["fullJustify", "assertEquals", "asList"]}, "focal_class": {"identifier": "Solution", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "fullJustify", "parameters": "(String[] words, int maxWidth)", "modifiers": "public", "return": "List<String>", "signature": "List<String> fullJustify(String[] words, int maxWidth)", "full_signature": "public List<String> fullJustify(String[] words, int maxWidth)", "class_method_signature": "Solution.fullJustify(String[] words, int maxWidth)", "testcase": false, "constructor": false}, {"identifier": "justifyLine", "parameters": "(String[] words, int maxWidth, int start, int exclusiveStop)", "modifiers": "private", "return": "String", "signature": "String justifyLine(String[] words, int maxWidth, int start, int exclusiveStop)", "full_signature": "private String justifyLine(String[] words, int maxWidth, int start, int exclusiveStop)", "class_method_signature": "Solution.justifyLine(String[] words, int maxWidth, int start, int exclusiveStop)", "testcase": false, "constructor": false}, {"identifier": "justifyNoneLastLine", "parameters": "(String[] words, int start, int exclusiveStop, int maxWidth)", "modifiers": "private", "return": "String", "signature": "String justifyNoneLastLine(String[] words, int start, int exclusiveStop, int maxWidth)", "full_signature": "private String justifyNoneLastLine(String[] words, int start, int exclusiveStop, int maxWidth)", "class_method_signature": "Solution.justifyNoneLastLine(String[] words, int start, int exclusiveStop, int maxWidth)", "testcase": false, "constructor": false}, {"identifier": "justifyLastLine", "parameters": "(String[] words, int start, int maxWidth)", "modifiers": "private", "return": "String", "signature": "String justifyLastLine(String[] words, int start, int maxWidth)", "full_signature": "private String justifyLastLine(String[] words, int start, int maxWidth)", "class_method_signature": "Solution.justifyLastLine(String[] words, int start, int maxWidth)", "testcase": false, "constructor": false}, {"identifier": "repeatSpaces", "parameters": "(int n)", "modifiers": "private", "return": "String", "signature": "String repeatSpaces(int n)", "full_signature": "private String repeatSpaces(int n)", "class_method_signature": "Solution.repeatSpaces(int n)", "testcase": false, "constructor": false}, {"identifier": "wordsLength", "parameters": "(String[] words, int start, int exclusiveStop)", "modifiers": "private", "return": "int", "signature": "int wordsLength(String[] words, int start, int exclusiveStop)", "full_signature": "private int wordsLength(String[] words, int start, int exclusiveStop)", "class_method_signature": "Solution.wordsLength(String[] words, int start, int exclusiveStop)", "testcase": false, "constructor": false}, {"identifier": "exclusiveStop", "parameters": "(String[] words, int start, int width)", "modifiers": "private", "return": "int", "signature": "int exclusiveStop(String[] words, int start, int width)", "full_signature": "private int exclusiveStop(String[] words, int start, int width)", "class_method_signature": "Solution.exclusiveStop(String[] words, int start, int width)", "testcase": false, "constructor": false}], "file": "Paris/2016/2016-01-07-TextJustification-Java/src/main/java/com/murex/codingdojo/textjustification/Solution.java"}, "focal_method": {"identifier": "fullJustify", "parameters": "(String[] words, int maxWidth)", "modifiers": "public", "return": "List<String>", "body": "public List<String> fullJustify(String[] words, int maxWidth) {\n        List<String> output = new ArrayList<>();\n        int exclusiveStop = 0;\n        int start = 0;\n        while (exclusiveStop < words.length) {\n            exclusiveStop = exclusiveStop(words, start, maxWidth);\n            output.add(justifyLine(words, maxWidth, start, exclusiveStop));\n            start = exclusiveStop;\n        }\n        return output;\n    }", "signature": "List<String> fullJustify(String[] words, int maxWidth)", "full_signature": "public List<String> fullJustify(String[] words, int maxWidth)", "class_method_signature": "Solution.fullJustify(String[] words, int maxWidth)", "testcase": false, "constructor": false, "invocations": ["exclusiveStop", "add", "justifyLine"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}