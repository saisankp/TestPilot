{"test_class": {"identifier": "ElasticSearchClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ElasticSearchClient elasticSearchClient;", "modifier": "private", "type": "ElasticSearchClient", "declarator": "elasticSearchClient", "var_name": "elasticSearchClient"}], "file": "kafka/src/test/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchClientTest.java"}, "test_case": {"identifier": "testRestClientBuilderWrongConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRestClientBuilderWrongConfig() {\n        Config esConfig = VisualizerUtility.getConfig(\"metric-consumer\");\n        RestHighLevelClient restHighLevelClient = elasticSearchClient.restClientBuilder(esConfig);\n        assertNull(restHighLevelClient);\n    }", "signature": "void testRestClientBuilderWrongConfig()", "full_signature": "@Test public void testRestClientBuilderWrongConfig()", "class_method_signature": "ElasticSearchClientTest.testRestClientBuilderWrongConfig()", "testcase": true, "constructor": false, "invocations": ["getConfig", "restClientBuilder", "assertNull"]}, "focal_class": {"identifier": "ElasticSearchClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String PORT1 = \"port1\";", "modifier": "private static", "type": "String", "declarator": "PORT1 = \"port1\"", "var_name": "PORT1"}, {"original_string": "private static String PORT2 = \"port2\";", "modifier": "private static", "type": "String", "declarator": "PORT2 = \"port2\"", "var_name": "PORT2"}, {"original_string": "private static String SCHEME = \"scheme\";", "modifier": "private static", "type": "String", "declarator": "SCHEME = \"scheme\"", "var_name": "SCHEME"}, {"original_string": "private static String HOST = \"host\";", "modifier": "private static", "type": "String", "declarator": "HOST = \"host\"", "var_name": "HOST"}, {"original_string": "private static String ELASTIC_SEARCH_CONFIG = \"elastic-search\";", "modifier": "private static", "type": "String", "declarator": "ELASTIC_SEARCH_CONFIG = \"elastic-search\"", "var_name": "ELASTIC_SEARCH_CONFIG"}, {"original_string": "private RestHighLevelClient client;", "modifier": "private", "type": "RestHighLevelClient", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "ElasticSearchClient", "parameters": "()", "modifiers": "public", "return": "", "signature": " ElasticSearchClient()", "full_signature": "public  ElasticSearchClient()", "class_method_signature": "ElasticSearchClient.ElasticSearchClient()", "testcase": false, "constructor": true}, {"identifier": "bulk", "parameters": "(BulkRequest bulkRequest, RequestOptions requestOptions)", "modifiers": "public", "return": "BulkResponse", "signature": "BulkResponse bulk(BulkRequest bulkRequest, RequestOptions requestOptions)", "full_signature": "public BulkResponse bulk(BulkRequest bulkRequest, RequestOptions requestOptions)", "class_method_signature": "ElasticSearchClient.bulk(BulkRequest bulkRequest, RequestOptions requestOptions)", "testcase": false, "constructor": false}, {"identifier": "restClientBuilder", "parameters": "(Config elasticSearchConfig)", "modifiers": "protected", "return": "RestHighLevelClient", "signature": "RestHighLevelClient restClientBuilder(Config elasticSearchConfig)", "full_signature": "protected RestHighLevelClient restClientBuilder(Config elasticSearchConfig)", "class_method_signature": "ElasticSearchClient.restClientBuilder(Config elasticSearchConfig)", "testcase": false, "constructor": false}, {"identifier": "deleteByQuery", "parameters": "(DeleteByQueryRequest deleteByQueryRequest, RequestOptions requestOptions)", "modifiers": "public", "return": "BulkByScrollResponse", "signature": "BulkByScrollResponse deleteByQuery(DeleteByQueryRequest deleteByQueryRequest, RequestOptions requestOptions)", "full_signature": "public BulkByScrollResponse deleteByQuery(DeleteByQueryRequest deleteByQueryRequest, RequestOptions requestOptions)", "class_method_signature": "ElasticSearchClient.deleteByQuery(DeleteByQueryRequest deleteByQueryRequest, RequestOptions requestOptions)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "RestHighLevelClient", "signature": "RestHighLevelClient getClient()", "full_signature": "public RestHighLevelClient getClient()", "class_method_signature": "ElasticSearchClient.getClient()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean close()", "full_signature": "public boolean close()", "class_method_signature": "ElasticSearchClient.close()", "testcase": false, "constructor": false}], "file": "kafka/src/main/java/com/expedia/adaptivealerting/kafka/visualizer/ElasticSearchClient.java"}, "focal_method": {"identifier": "restClientBuilder", "parameters": "(Config elasticSearchConfig)", "modifiers": "protected", "return": "RestHighLevelClient", "body": "protected RestHighLevelClient restClientBuilder(Config elasticSearchConfig) {\n        RestHighLevelClient client = null;\n        try {\n            client = new RestHighLevelClient(\n                    RestClient.builder(new HttpHost(elasticSearchConfig.getString(HOST),\n                                    elasticSearchConfig.getInt(PORT1), elasticSearchConfig.getString(SCHEME)),\n                            new HttpHost(elasticSearchConfig.getString(HOST), elasticSearchConfig.getInt(PORT2),\n                                    elasticSearchConfig.getString(SCHEME))));\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n        }\n        return client;\n    }", "signature": "RestHighLevelClient restClientBuilder(Config elasticSearchConfig)", "full_signature": "protected RestHighLevelClient restClientBuilder(Config elasticSearchConfig)", "class_method_signature": "ElasticSearchClient.restClientBuilder(Config elasticSearchConfig)", "testcase": false, "constructor": false, "invocations": ["builder", "getString", "getInt", "getString", "getString", "getInt", "getString", "error", "getMessage"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}