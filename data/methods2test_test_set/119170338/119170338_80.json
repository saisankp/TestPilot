{"test_class": {"identifier": "ObjHexStringConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int i = 0;", "modifier": "private", "type": "int", "declarator": "i = 0", "var_name": "i"}, {"original_string": "private TermId termId = TermId.of(\"MONDO\", \"001\");", "modifier": "private", "type": "TermId", "declarator": "termId = TermId.of(\"MONDO\", \"001\")", "var_name": "termId"}], "file": "phenol-io/src/test/java/org/monarchinitiative/phenol/io/utils/ObjHexStringConverterTest.java"}, "test_case": {"identifier": "hex2obj", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void hex2obj() throws Exception {\n    String intHex = ObjHexStringConverter.object2hex(i);\n    Object objInt = ObjHexStringConverter.hex2obj(intHex);\n    Assertions.assertEquals(i, (Integer) objInt);\n\n    String objHex = ObjHexStringConverter.object2hex(termId);\n    Object objTermId = ObjHexStringConverter.hex2obj(objHex);\n    Assertions.assertEquals(termId, objTermId);\n\n  }", "signature": "void hex2obj()", "full_signature": "@Test void hex2obj()", "class_method_signature": "ObjHexStringConverterTest.hex2obj()", "testcase": true, "constructor": false, "invocations": ["object2hex", "hex2obj", "assertEquals", "object2hex", "hex2obj", "assertEquals"]}, "focal_class": {"identifier": "ObjHexStringConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "object2hex", "parameters": "(Serializable obj)", "modifiers": "public static", "return": "String", "signature": "String object2hex(Serializable obj)", "full_signature": "public static String object2hex(Serializable obj)", "class_method_signature": "ObjHexStringConverter.object2hex(Serializable obj)", "testcase": false, "constructor": false}, {"identifier": "hex2obj", "parameters": "(String hexString)", "modifiers": "public static", "return": "Object", "signature": "Object hex2obj(String hexString)", "full_signature": "public static Object hex2obj(String hexString)", "class_method_signature": "ObjHexStringConverter.hex2obj(String hexString)", "testcase": false, "constructor": false}], "file": "phenol-io/src/main/java/org/monarchinitiative/phenol/io/utils/ObjHexStringConverter.java"}, "focal_method": {"identifier": "hex2obj", "parameters": "(String hexString)", "modifiers": "public static", "return": "Object", "body": "public static Object hex2obj(String hexString) throws DecoderException, IOException, ClassNotFoundException {\n    byte[] bytes = Hex.decodeHex(hexString.toCharArray());\n    ByteArrayInputStream bytesIn = new ByteArrayInputStream(bytes);\n    ObjectInputStream objIn = new ObjectInputStream(bytesIn);\n    Object obj = objIn.readObject();\n    bytesIn.close();\n    objIn.close();\n    return obj;\n  }", "signature": "Object hex2obj(String hexString)", "full_signature": "public static Object hex2obj(String hexString)", "class_method_signature": "ObjHexStringConverter.hex2obj(String hexString)", "testcase": false, "constructor": false, "invocations": ["decodeHex", "toCharArray", "readObject", "close", "close"]}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}