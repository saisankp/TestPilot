{"test_class": {"identifier": "JcrChildNodeIteratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<ChildReference, AbstractJcrNode> childNodesByRef;", "modifier": "private", "type": "Map<ChildReference, AbstractJcrNode>", "declarator": "childNodesByRef", "var_name": "childNodesByRef"}, {"original_string": "private List<AbstractJcrNode> children;", "modifier": "private", "type": "List<AbstractJcrNode>", "declarator": "children", "var_name": "children"}, {"original_string": "private List<ChildReference> refs;", "modifier": "private", "type": "List<ChildReference>", "declarator": "refs", "var_name": "refs"}, {"original_string": "private NodeIterator iter;", "modifier": "private", "type": "NodeIterator", "declarator": "iter", "var_name": "iter"}, {"original_string": "private NodeKey keyTemplate;", "modifier": "private", "type": "NodeKey", "declarator": "keyTemplate", "var_name": "keyTemplate"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/JcrChildNodeIteratorTest.java"}, "test_case": {"identifier": "shouldStartWithPositionOfZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldStartWithPositionOfZero() {\n        assertThat(iter.getPosition(), is(0L));\n    }", "signature": "void shouldStartWithPositionOfZero()", "full_signature": "@Test public void shouldStartWithPositionOfZero()", "class_method_signature": "JcrChildNodeIteratorTest.shouldStartWithPositionOfZero()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getPosition", "is"]}, "focal_class": {"identifier": "JcrChildNodeIterator", "superclass": "", "interfaces": "implements NodeIterator", "fields": [{"original_string": "private final NodeResolver resolver;", "modifier": "private final", "type": "NodeResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private final Iterator<ChildReference> iterator;", "modifier": "private final", "type": "Iterator<ChildReference>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "private Node resolvedNode;", "modifier": "private", "type": "Node", "declarator": "resolvedNode", "var_name": "resolvedNode"}, {"original_string": "private Iterator<Node> nodeIterator;", "modifier": "private", "type": "Iterator<Node>", "declarator": "nodeIterator", "var_name": "nodeIterator"}, {"original_string": "private int ndx;", "modifier": "private", "type": "int", "declarator": "ndx", "var_name": "ndx"}, {"original_string": "private long size;", "modifier": "private", "type": "long", "declarator": "size", "var_name": "size"}], "methods": [{"identifier": "JcrChildNodeIterator", "parameters": "( NodeResolver resolver,\n                          Iterator<ChildReference> iterator )", "modifiers": "", "return": "", "signature": " JcrChildNodeIterator( NodeResolver resolver,\n                          Iterator<ChildReference> iterator )", "full_signature": "  JcrChildNodeIterator( NodeResolver resolver,\n                          Iterator<ChildReference> iterator )", "class_method_signature": "JcrChildNodeIterator.JcrChildNodeIterator( NodeResolver resolver,\n                          Iterator<ChildReference> iterator )", "testcase": false, "constructor": true}, {"identifier": "JcrChildNodeIterator", "parameters": "( NodeResolver resolver,\n                          ChildReferences childReferences )", "modifiers": "", "return": "", "signature": " JcrChildNodeIterator( NodeResolver resolver,\n                          ChildReferences childReferences )", "full_signature": "  JcrChildNodeIterator( NodeResolver resolver,\n                          ChildReferences childReferences )", "class_method_signature": "JcrChildNodeIterator.JcrChildNodeIterator( NodeResolver resolver,\n                          ChildReferences childReferences )", "testcase": false, "constructor": true}, {"identifier": "getPosition", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getPosition()", "full_signature": "@Override public long getPosition()", "class_method_signature": "JcrChildNodeIterator.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSize()", "full_signature": "@Override public long getSize()", "class_method_signature": "JcrChildNodeIterator.getSize()", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "JcrChildNodeIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object next()", "full_signature": "@Override public Object next()", "class_method_signature": "JcrChildNodeIterator.next()", "testcase": false, "constructor": false}, {"identifier": "nextNode", "parameters": "()", "modifiers": "@Override public", "return": "Node", "signature": "Node nextNode()", "full_signature": "@Override public Node nextNode()", "class_method_signature": "JcrChildNodeIterator.nextNode()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "JcrChildNodeIterator.remove()", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "( long count )", "modifiers": "@Override public", "return": "void", "signature": "void skip( long count )", "full_signature": "@Override public void skip( long count )", "class_method_signature": "JcrChildNodeIterator.skip( long count )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/JcrChildNodeIterator.java"}, "focal_method": {"identifier": "getPosition", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getPosition() {\n        return ndx;\n    }", "signature": "long getPosition()", "full_signature": "@Override public long getPosition()", "class_method_signature": "JcrChildNodeIterator.getPosition()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}