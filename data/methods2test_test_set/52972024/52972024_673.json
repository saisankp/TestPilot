{"test_class": {"identifier": "EndpointsSectionProcessingStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IQueue<ITask> taskQueue;", "modifier": "private", "type": "IQueue<ITask>", "declarator": "taskQueue", "var_name": "taskQueue"}, {"original_string": "private Object mapId;", "modifier": "private", "type": "Object", "declarator": "mapId", "var_name": "mapId"}, {"original_string": "private IChainStorage chainStorage;", "modifier": "private", "type": "IChainStorage", "declarator": "chainStorage", "var_name": "chainStorage"}, {"original_string": "private IReceiverChain receiverChain;", "modifier": "private", "type": "IReceiverChain", "declarator": "receiverChain", "var_name": "receiverChain"}], "file": "Starters/EndpointServiceStarter/EndpointStarter/src/test/java/info/smart_tools/smartactors/endpoint_service_starter/endpoint_starter/EndpointsSectionProcessingStrategyTest.java"}, "test_case": {"identifier": "testLoadingConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadingConfig() throws InvalidArgumentException, ResolutionException, ConfigurationProcessingException, ChainNotFoundException {\n        when(chainStorage.resolve(mapId)).thenReturn(receiverChain);\n        DSObject config = new DSObject(\"\\n\" +\n                \"     {\\n\" +\n                \"         \\\"endpoints\\\": [\\n\" +\n                \"             {\\n\" +\n                \"                 \\\"name\\\": \\\"enpointName\\\",\" +\n                \"                 \\\"type\\\": \\\"http\\\",\\n\" +\n                \"                 \\\"port\\\": 8080,\\n\" +\n                \"                 \\\"startChain\\\": \\\"mainChain\\\",\\n\" +\n                \"                 \\\"maxContentLength\\\": 4098,\\n\" +\n                \"                 \\\"stackDepth\\\": 5\\n\" +\n                \"             }\\n\" +\n                \"         ]\\n\" +\n                \"     }\");\n        EndpointsSectionProcessingStrategy strategy = new EndpointsSectionProcessingStrategy();\n        strategy.onLoadConfig(config);\n    }", "signature": "void testLoadingConfig()", "full_signature": "@Test public void testLoadingConfig()", "class_method_signature": "EndpointsSectionProcessingStrategyTest.testLoadingConfig()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "resolve", "onLoadConfig"]}, "focal_class": {"identifier": "EndpointsSectionProcessingStrategy", "superclass": "", "interfaces": "implements ISectionStrategy", "fields": [{"original_string": "private final IFieldName name;", "modifier": "private final", "type": "IFieldName", "declarator": "name", "var_name": "name"}, {"original_string": "private final IFieldName typeFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "typeFieldName", "var_name": "typeFieldName"}, {"original_string": "private final IFieldName portFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "portFieldName", "var_name": "portFieldName"}, {"original_string": "private final IFieldName startChainNameFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "startChainNameFieldName", "var_name": "startChainNameFieldName"}, {"original_string": "private final IFieldName stackDepthFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "stackDepthFieldName", "var_name": "stackDepthFieldName"}, {"original_string": "private final IFieldName maxContentLengthFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "maxContentLengthFieldName", "var_name": "maxContentLengthFieldName"}, {"original_string": "private final IFieldName endpointNameFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "endpointNameFieldName", "var_name": "endpointNameFieldName"}, {"original_string": "private final IFieldName queueFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "queueFieldName", "var_name": "queueFieldName"}], "methods": [{"identifier": "EndpointsSectionProcessingStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " EndpointsSectionProcessingStrategy()", "full_signature": "public  EndpointsSectionProcessingStrategy()", "class_method_signature": "EndpointsSectionProcessingStrategy.EndpointsSectionProcessingStrategy()", "testcase": false, "constructor": true}, {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "EndpointsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false}, {"identifier": "getSectionName", "parameters": "()", "modifiers": "@Override public", "return": "IFieldName", "signature": "IFieldName getSectionName()", "full_signature": "@Override public IFieldName getSectionName()", "class_method_signature": "EndpointsSectionProcessingStrategy.getSectionName()", "testcase": false, "constructor": false}], "file": "Starters/EndpointServiceStarter/EndpointStarter/src/main/java/info/smart_tools/smartactors/endpoint_service_starter/endpoint_starter/EndpointsSectionProcessingStrategy.java"}, "focal_method": {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onLoadConfig(final IObject config) throws ConfigurationProcessingException {\n        try {\n            List<IObject> endpointObjects = (List<IObject>) config.getValue(name);\n            IChainStorage chainStorage = IOC.resolve(IOC.resolve(IOC.getKeyForKeyStorage(),\n                    IChainStorage.class.getCanonicalName()));\n            IQueue<ITask> queue = IOC.resolve(Keys.getOrAdd(\"task_queue\"));\n            for (IObject endpoint : endpointObjects) {\n                // TODO: 25.07.16 remove stack depth from endpoint config\n                String type = (String) endpoint.getValue(typeFieldName);\n                String startChainName = (String) endpoint.getValue(startChainNameFieldName);\n                Object mapId = IOC.resolve(Keys.getOrAdd(\"chain_id_from_map_name\"), startChainName);\n                IReceiverChain chain = chainStorage.resolve(mapId);\n\n                endpoint.setValue(startChainNameFieldName, chain);\n                endpoint.setValue(queueFieldName, queue);\n                IAsyncService endpointService =\n                        IOC.resolve(Keys.getOrAdd(type + \"_endpoint\"), endpoint);\n                endpointService.start();\n            }\n        } catch (ReadValueException | InvalidArgumentException e) {\n            throw new ConfigurationProcessingException(\"Error occurred loading \\\"endpoint\\\" configuration section.\", e);\n        } catch (ResolutionException e) {\n            throw new ConfigurationProcessingException(\"Error occurred resolving \\\"endpoint\\\".\", e);\n        } catch (ChainNotFoundException e) {\n            throw new ConfigurationProcessingException(\"Error occurred resolving \\\"chain\\\".\", e);\n        } catch (ChangeValueException e) {\n            e.printStackTrace();\n        }\n    }", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "EndpointsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false, "invocations": ["getValue", "resolve", "resolve", "getKeyForKeyStorage", "getCanonicalName", "resolve", "getOrAdd", "getValue", "getValue", "resolve", "getOrAdd", "resolve", "setValue", "setValue", "resolve", "getOrAdd", "start", "printStackTrace"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}