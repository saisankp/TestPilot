{"test_class": {"identifier": "UploadArchiveCommandTest", "superclass": "extends AbstractCommandTest", "interfaces": "", "fields": [], "file": "glacieruploader-command/src/test/java/de/kopis/glacier/commands/UploadArchiveCommandTest.java"}, "test_case": {"identifier": "canValidateOptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canValidateOptions() throws IOException {\n        final String content = UUID.randomUUID().toString();\n        final File file = writeTemporaryFile(content);\n\n        final ArchiveTransferManager atm = createMock(ArchiveTransferManager.class);\n\n        final UploadArchiveCommand command = new UploadArchiveCommand(client, sqs, sns, atm);\n\n        final OptionSet validOptions = optionParser.parse(\"--vault\", \"vaultName\", \"--upload\", file.getAbsolutePath());\n        assertTrue(command.valid(validOptions, optionParser));\n        // omit the --upload option, which makes the command line invalid for this command\n        final OptionSet invalidOptions = optionParser.parse(\"--vault\", \"vaultName\");\n        assertFalse(command.valid(invalidOptions, optionParser));\n    }", "signature": "void canValidateOptions()", "full_signature": "@Test public void canValidateOptions()", "class_method_signature": "UploadArchiveCommandTest.canValidateOptions()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "writeTemporaryFile", "createMock", "parse", "getAbsolutePath", "assertTrue", "valid", "parse", "assertFalse", "valid"]}, "focal_class": {"identifier": "UploadArchiveCommand", "superclass": "extends AbstractCommand", "interfaces": "", "fields": [{"original_string": "public static final ScheduledExecutorService SCHEDULED_POOL = Executors.newScheduledThreadPool(1);", "modifier": "public static final", "type": "ScheduledExecutorService", "declarator": "SCHEDULED_POOL = Executors.newScheduledThreadPool(1)", "var_name": "SCHEDULED_POOL"}, {"original_string": "public static final int PROGRESS_PRINT_PERIOD = 5;", "modifier": "public static final", "type": "int", "declarator": "PROGRESS_PRINT_PERIOD = 5", "var_name": "PROGRESS_PRINT_PERIOD"}, {"original_string": "private final ArchiveTransferManager atm;", "modifier": "private final", "type": "ArchiveTransferManager", "declarator": "atm", "var_name": "atm"}], "methods": [{"identifier": "UploadArchiveCommand", "parameters": "(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns)", "modifiers": "public", "return": "", "signature": " UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns)", "full_signature": "public  UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns)", "class_method_signature": "UploadArchiveCommand.UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns)", "testcase": false, "constructor": true}, {"identifier": "UploadArchiveCommand", "parameters": "(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "modifiers": "public", "return": "", "signature": " UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "full_signature": "public  UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "class_method_signature": "UploadArchiveCommand.UploadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "testcase": false, "constructor": true}, {"identifier": "upload", "parameters": "(final String vaultName, final File uploadFile)", "modifiers": "public", "return": "void", "signature": "void upload(final String vaultName, final File uploadFile)", "full_signature": "public void upload(final String vaultName, final File uploadFile)", "class_method_signature": "UploadArchiveCommand.upload(final String vaultName, final File uploadFile)", "testcase": false, "constructor": false}, {"identifier": "upload", "parameters": "(String vaultName, File uploadFile, String sameAccountId, boolean printProgress)", "modifiers": "private", "return": "void", "signature": "void upload(String vaultName, File uploadFile, String sameAccountId, boolean printProgress)", "full_signature": "private void upload(String vaultName, File uploadFile, String sameAccountId, boolean printProgress)", "class_method_signature": "UploadArchiveCommand.upload(String vaultName, File uploadFile, String sameAccountId, boolean printProgress)", "testcase": false, "constructor": false}, {"identifier": "exec", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "void", "signature": "void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "UploadArchiveCommand.exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "UploadArchiveCommand.valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}], "file": "glacieruploader-command/src/main/java/de/kopis/glacier/commands/UploadArchiveCommand.java"}, "focal_method": {"identifier": "valid", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser) {\n        return options.has(optionParser.upload);\n    }", "signature": "boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "UploadArchiveCommand.valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false, "invocations": ["has"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}