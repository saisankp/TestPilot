{"test_class": {"identifier": "GuidanceSpeedPresenterTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private GuidanceSpeedPresenter mCurrentSpeedPresenter;", "modifier": "private", "type": "GuidanceSpeedPresenter", "declarator": "mCurrentSpeedPresenter", "var_name": "mCurrentSpeedPresenter"}, {"original_string": "private NavigationManager mNavigationManager;", "modifier": "private", "type": "NavigationManager", "declarator": "mNavigationManager", "var_name": "mNavigationManager"}, {"original_string": "private PositioningManager mPositioningManager;", "modifier": "private", "type": "PositioningManager", "declarator": "mPositioningManager", "var_name": "mPositioningManager"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/guidance/GuidanceSpeedPresenterTest.java"}, "test_case": {"identifier": "testHandleSpeedExceeded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleSpeedExceeded() {\n        GuidanceSpeedListener listener = mock(GuidanceSpeedListener.class);\n        mCurrentSpeedPresenter.addListener(listener);\n        when(mPositioningManager.hasValidPosition()).thenReturn(false);\n        mCurrentSpeedPresenter.handleSpeedExceeded(10);\n        verify(listener).onDataChanged(any());\n    }", "signature": "void testHandleSpeedExceeded()", "full_signature": "@Test public void testHandleSpeedExceeded()", "class_method_signature": "GuidanceSpeedPresenterTest.testHandleSpeedExceeded()", "testcase": true, "constructor": false, "invocations": ["mock", "addListener", "thenReturn", "when", "hasValidPosition", "handleSpeedExceeded", "onDataChanged", "verify", "any"]}, "focal_class": {"identifier": "GuidanceSpeedPresenter", "superclass": "extends BaseGuidancePresenter", "interfaces": "", "fields": [{"original_string": "@NonNull\n    private final PositioningManager mPositioningManager;", "modifier": "@NonNull\n    private final", "type": "PositioningManager", "declarator": "mPositioningManager", "var_name": "mPositioningManager"}, {"original_string": "private final List<GuidanceSpeedListener> mListener = new ArrayList<>();", "modifier": "private final", "type": "List<GuidanceSpeedListener>", "declarator": "mListener = new ArrayList<>()", "var_name": "mListener"}, {"original_string": "private float mPreviousSpeedLimit = -1.0f;", "modifier": "private", "type": "float", "declarator": "mPreviousSpeedLimit = -1.0f", "var_name": "mPreviousSpeedLimit"}], "methods": [{"identifier": "GuidanceSpeedPresenter", "parameters": "(@NonNull NavigationManager navigationManager,\n            @NonNull PositioningManager positioningManager)", "modifiers": "public", "return": "", "signature": " GuidanceSpeedPresenter(@NonNull NavigationManager navigationManager,\n            @NonNull PositioningManager positioningManager)", "full_signature": "public  GuidanceSpeedPresenter(@NonNull NavigationManager navigationManager,\n            @NonNull PositioningManager positioningManager)", "class_method_signature": "GuidanceSpeedPresenter.GuidanceSpeedPresenter(@NonNull NavigationManager navigationManager,\n            @NonNull PositioningManager positioningManager)", "testcase": false, "constructor": true}, {"identifier": "resume", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resume()", "full_signature": "@Override public void resume()", "class_method_signature": "GuidanceSpeedPresenter.resume()", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void pause()", "full_signature": "@Override public void pause()", "class_method_signature": "GuidanceSpeedPresenter.pause()", "testcase": false, "constructor": false}, {"identifier": "handlePositionUpdate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void handlePositionUpdate()", "full_signature": "@Override protected void handlePositionUpdate()", "class_method_signature": "GuidanceSpeedPresenter.handlePositionUpdate()", "testcase": false, "constructor": false}, {"identifier": "handleSpeedExceeded", "parameters": "(float speedLimit)", "modifiers": "@Override protected", "return": "void", "signature": "void handleSpeedExceeded(float speedLimit)", "full_signature": "@Override protected void handleSpeedExceeded(float speedLimit)", "class_method_signature": "GuidanceSpeedPresenter.handleSpeedExceeded(float speedLimit)", "testcase": false, "constructor": false}, {"identifier": "handleSpeedExceededEnd", "parameters": "(float speedLimit)", "modifiers": "@Override protected", "return": "void", "signature": "void handleSpeedExceededEnd(float speedLimit)", "full_signature": "@Override protected void handleSpeedExceededEnd(float speedLimit)", "class_method_signature": "GuidanceSpeedPresenter.handleSpeedExceededEnd(float speedLimit)", "testcase": false, "constructor": false}, {"identifier": "updateCurrentSpeedData", "parameters": "(float speedLimit)", "modifiers": "private", "return": "void", "signature": "void updateCurrentSpeedData(float speedLimit)", "full_signature": "private void updateCurrentSpeedData(float speedLimit)", "class_method_signature": "GuidanceSpeedPresenter.updateCurrentSpeedData(float speedLimit)", "testcase": false, "constructor": false}, {"identifier": "notifyDataChanged", "parameters": "(@Nullable GuidanceSpeedData data)", "modifiers": "private", "return": "void", "signature": "void notifyDataChanged(@Nullable GuidanceSpeedData data)", "full_signature": "private void notifyDataChanged(@Nullable GuidanceSpeedData data)", "class_method_signature": "GuidanceSpeedPresenter.notifyDataChanged(@Nullable GuidanceSpeedData data)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(GuidanceSpeedListener listener)", "modifiers": "public", "return": "void", "signature": "void addListener(GuidanceSpeedListener listener)", "full_signature": "public void addListener(GuidanceSpeedListener listener)", "class_method_signature": "GuidanceSpeedPresenter.addListener(GuidanceSpeedListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(GuidanceSpeedListener listener)", "modifiers": "public", "return": "void", "signature": "void removeListener(GuidanceSpeedListener listener)", "full_signature": "public void removeListener(GuidanceSpeedListener listener)", "class_method_signature": "GuidanceSpeedPresenter.removeListener(GuidanceSpeedListener listener)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/guidance/GuidanceSpeedPresenter.java"}, "focal_method": {"identifier": "handleSpeedExceeded", "parameters": "(float speedLimit)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void handleSpeedExceeded(float speedLimit) {\n        mPreviousSpeedLimit = speedLimit;\n        updateCurrentSpeedData(speedLimit);\n    }", "signature": "void handleSpeedExceeded(float speedLimit)", "full_signature": "@Override protected void handleSpeedExceeded(float speedLimit)", "class_method_signature": "GuidanceSpeedPresenter.handleSpeedExceeded(float speedLimit)", "testcase": false, "constructor": false, "invocations": ["updateCurrentSpeedData"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}