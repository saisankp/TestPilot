{"test_class": {"identifier": "ValidBase64ValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ValidBase64Validator validator = new ValidBase64Validator();", "modifier": "private final", "type": "ValidBase64Validator", "declarator": "validator = new ValidBase64Validator()", "var_name": "validator"}], "file": "api/src/test/java/keywhiz/api/validation/ValidBase64ValidatorTest.java"}, "test_case": {"identifier": "rejectsNonBase64", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void rejectsNonBase64() {\n    assertThat(validator.isValid(\"+#$\", null)).isFalse();\n  }", "signature": "void rejectsNonBase64()", "full_signature": "@Test public void rejectsNonBase64()", "class_method_signature": "ValidBase64ValidatorTest.rejectsNonBase64()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isValid"]}, "focal_class": {"identifier": "ValidBase64Validator", "superclass": "", "interfaces": "implements ConstraintValidator<ValidBase64, String>", "fields": [], "methods": [{"identifier": "initialize", "parameters": "(ValidBase64 constraintAnnotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(ValidBase64 constraintAnnotation)", "full_signature": "@Override public void initialize(ValidBase64 constraintAnnotation)", "class_method_signature": "ValidBase64Validator.initialize(ValidBase64 constraintAnnotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(String value, ConstraintValidatorContext ctx)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(String value, ConstraintValidatorContext ctx)", "full_signature": "@Override public boolean isValid(String value, ConstraintValidatorContext ctx)", "class_method_signature": "ValidBase64Validator.isValid(String value, ConstraintValidatorContext ctx)", "testcase": false, "constructor": false}], "file": "api/src/main/java/keywhiz/api/validation/ValidBase64Validator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(String value, ConstraintValidatorContext ctx)", "modifiers": "@Override public", "return": "boolean", "body": "@Override public boolean isValid(String value, ConstraintValidatorContext ctx) {\n    try {\n      if (value != null) {\n        Base64.getDecoder().decode(value);\n      }\n    } catch (IllegalArgumentException ignored) {\n      return false;\n    }\n\n    return true;\n  }", "signature": "boolean isValid(String value, ConstraintValidatorContext ctx)", "full_signature": "@Override public boolean isValid(String value, ConstraintValidatorContext ctx)", "class_method_signature": "ValidBase64Validator.isValid(String value, ConstraintValidatorContext ctx)", "testcase": false, "constructor": false, "invocations": ["decode", "getDecoder"]}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}