{"test_class": {"identifier": "LoadIOTest", "superclass": "", "interfaces": "", "fields": [], "file": "hbase0.98/hbase-table-stat-0.98/src/test/java/com/kakao/hbase/stat/load/LoadIOTest.java"}, "test_case": {"identifier": "testFilename", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilename() throws Exception {\n        String[] strings;\n        Args args;\n        Load load = new Load(new LevelClass(TableName.class), null);\n        LoadIO loadIO = new LoadIO(load);\n\n        strings = new String[]{\"zookeeper\", \"table\"};\n        args = new StatArgs(strings);\n        assertEquals(LoadIO.DIRECTORY_NAME + \"/zookeeper_table_19700101090000000.csv\", loadIO.filename(args));\n\n        strings = new String[]{\"zookeeper\"};\n        args = new StatArgs(strings);\n        assertEquals(LoadIO.DIRECTORY_NAME + \"/zookeeper__19700101090000000.csv\", loadIO.filename(args));\n\n        strings = new String[]{\"zookeeper1:2180,zookeeper2:2180\"};\n        args = new StatArgs(strings);\n        assertEquals(LoadIO.DIRECTORY_NAME + \"/zookeeper1_2180_zookeeper2_2180__19700101090000000.csv\", loadIO.filename(args));\n    }", "signature": "void testFilename()", "full_signature": "@Test public void testFilename()", "class_method_signature": "LoadIOTest.testFilename()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "filename", "assertEquals", "filename", "assertEquals", "filename"]}, "focal_class": {"identifier": "LoadIO", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String NO_SAVED_FILE = \"There is no saved file.\";", "modifier": "public static final", "type": "String", "declarator": "NO_SAVED_FILE = \"There is no saved file.\"", "var_name": "NO_SAVED_FILE"}, {"original_string": "static final String DIRECTORY_NAME = \"stat_saved\";", "modifier": "static final", "type": "String", "declarator": "DIRECTORY_NAME = \"stat_saved\"", "var_name": "DIRECTORY_NAME"}, {"original_string": "static final SimpleDateFormat DATE_FORMAT_SAVE = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");", "modifier": "static final", "type": "SimpleDateFormat", "declarator": "DATE_FORMAT_SAVE = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\")", "var_name": "DATE_FORMAT_SAVE"}, {"original_string": "private static final String HEADER_TIMESTAMP = \"Timestamp\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_TIMESTAMP = \"Timestamp\"", "var_name": "HEADER_TIMESTAMP"}, {"original_string": "private static final char SEPARATOR = ',';", "modifier": "private static final", "type": "char", "declarator": "SEPARATOR = ','", "var_name": "SEPARATOR"}, {"original_string": "private static final SimpleDateFormat DATE_FORMAT_PRINT = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss SSS\");", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "DATE_FORMAT_PRINT = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss SSS\")", "var_name": "DATE_FORMAT_PRINT"}, {"original_string": "private final Load load;", "modifier": "private final", "type": "Load", "declarator": "load", "var_name": "load"}, {"original_string": "private List<String> savedFileNameList = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "savedFileNameList = new ArrayList<>()", "var_name": "savedFileNameList"}, {"original_string": "private boolean headerWritten = false;", "modifier": "private", "type": "boolean", "declarator": "headerWritten = false", "var_name": "headerWritten"}], "methods": [{"identifier": "LoadIO", "parameters": "(Load load)", "modifiers": "public", "return": "", "signature": " LoadIO(Load load)", "full_signature": "public  LoadIO(Load load)", "class_method_signature": "LoadIO.LoadIO(Load load)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(Args args)", "modifiers": "public", "return": "String", "signature": "String save(Args args)", "full_signature": "public String save(Args args)", "class_method_signature": "LoadIO.save(Args args)", "testcase": false, "constructor": false}, {"identifier": "saveOutput", "parameters": "(Args args)", "modifiers": "", "return": "void", "signature": "void saveOutput(Args args)", "full_signature": " void saveOutput(Args args)", "class_method_signature": "LoadIO.saveOutput(Args args)", "testcase": false, "constructor": false}, {"identifier": "saveInternal", "parameters": "(String outputFileName, boolean append)", "modifiers": "private", "return": "void", "signature": "void saveInternal(String outputFileName, boolean append)", "full_signature": "private void saveInternal(String outputFileName, boolean append)", "class_method_signature": "LoadIO.saveInternal(String outputFileName, boolean append)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(CSVWriter writer, Entry entry, Level level, LoadRecord loadRecord)", "modifiers": "private", "return": "void", "signature": "void write(CSVWriter writer, Entry entry, Level level, LoadRecord loadRecord)", "full_signature": "private void write(CSVWriter writer, Entry entry, Level level, LoadRecord loadRecord)", "class_method_signature": "LoadIO.write(CSVWriter writer, Entry entry, Level level, LoadRecord loadRecord)", "testcase": false, "constructor": false}, {"identifier": "safeString", "parameters": "(String string)", "modifiers": "private", "return": "String", "signature": "String safeString(String string)", "full_signature": "private String safeString(String string)", "class_method_signature": "LoadIO.safeString(String string)", "testcase": false, "constructor": false}, {"identifier": "filename", "parameters": "(Args args)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String filename(Args args)", "full_signature": "@VisibleForTesting String filename(Args args)", "class_method_signature": "LoadIO.filename(Args args)", "testcase": false, "constructor": false}, {"identifier": "prefix", "parameters": "(Args args)", "modifiers": "private", "return": "StringBuilder", "signature": "StringBuilder prefix(Args args)", "full_signature": "private StringBuilder prefix(Args args)", "class_method_signature": "LoadIO.prefix(Args args)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Args args, String input)", "modifiers": "public", "return": "void", "signature": "void load(Args args, String input)", "full_signature": "public void load(Args args, String input)", "class_method_signature": "LoadIO.load(Args args, String input)", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "(Args args, String fileName)", "modifiers": "@VisibleForTesting", "return": "long", "signature": "long getTimestamp(Args args, String fileName)", "full_signature": "@VisibleForTesting long getTimestamp(Args args, String fileName)", "class_method_signature": "LoadIO.getTimestamp(Args args, String fileName)", "testcase": false, "constructor": false}, {"identifier": "readBody", "parameters": "(CSVReader reader, Map<Level, LoadRecord> loadedLoadMap, List<LoadEntry> savedLoadEntryList)", "modifiers": "private", "return": "void", "signature": "void readBody(CSVReader reader, Map<Level, LoadRecord> loadedLoadMap, List<LoadEntry> savedLoadEntryList)", "full_signature": "private void readBody(CSVReader reader, Map<Level, LoadRecord> loadedLoadMap, List<LoadEntry> savedLoadEntryList)", "class_method_signature": "LoadIO.readBody(CSVReader reader, Map<Level, LoadRecord> loadedLoadMap, List<LoadEntry> savedLoadEntryList)", "testcase": false, "constructor": false}, {"identifier": "readHeader", "parameters": "(CSVReader reader, List<LoadEntry> savedLoadEntryList)", "modifiers": "private", "return": "void", "signature": "void readHeader(CSVReader reader, List<LoadEntry> savedLoadEntryList)", "full_signature": "private void readHeader(CSVReader reader, List<LoadEntry> savedLoadEntryList)", "class_method_signature": "LoadIO.readHeader(CSVReader reader, List<LoadEntry> savedLoadEntryList)", "testcase": false, "constructor": false}, {"identifier": "getSavedFileName", "parameters": "(String input)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String getSavedFileName(String input)", "full_signature": "@VisibleForTesting String getSavedFileName(String input)", "class_method_signature": "LoadIO.getSavedFileName(String input)", "testcase": false, "constructor": false}, {"identifier": "showSavedFiles", "parameters": "(Args args)", "modifiers": "public", "return": "String", "signature": "String showSavedFiles(Args args)", "full_signature": "public String showSavedFiles(Args args)", "class_method_signature": "LoadIO.showSavedFiles(Args args)", "testcase": false, "constructor": false}, {"identifier": "parseTimestamp", "parameters": "(Args args, String fileName)", "modifiers": "private", "return": "String", "signature": "String parseTimestamp(Args args, String fileName)", "full_signature": "private String parseTimestamp(Args args, String fileName)", "class_method_signature": "LoadIO.parseTimestamp(Args args, String fileName)", "testcase": false, "constructor": false}, {"identifier": "savedFileNameList", "parameters": "(Args args)", "modifiers": "@VisibleForTesting", "return": "List<String>", "signature": "List<String> savedFileNameList(Args args)", "full_signature": "@VisibleForTesting List<String> savedFileNameList(Args args)", "class_method_signature": "LoadIO.savedFileNameList(Args args)", "testcase": false, "constructor": false}, {"identifier": "listFiles", "parameters": "(List<String> fileNameList, Args args)", "modifiers": "private", "return": "void", "signature": "void listFiles(List<String> fileNameList, Args args)", "full_signature": "private void listFiles(List<String> fileNameList, Args args)", "class_method_signature": "LoadIO.listFiles(List<String> fileNameList, Args args)", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-table-stat-0.98/src/main/java/com/kakao/hbase/stat/load/LoadIO.java"}, "focal_method": {"identifier": "filename", "parameters": "(Args args)", "modifiers": "@VisibleForTesting", "return": "String", "body": "@VisibleForTesting\n    String filename(Args args) {\n        StringBuilder sb = prefix(args);\n        sb.append(DATE_FORMAT_SAVE.format(load.getTimestampIteration())).append(\".csv\");\n        return DIRECTORY_NAME + \"/\" + sb.toString();\n    }", "signature": "String filename(Args args)", "full_signature": "@VisibleForTesting String filename(Args args)", "class_method_signature": "LoadIO.filename(Args args)", "testcase": false, "constructor": false, "invocations": ["prefix", "append", "append", "format", "getTimestampIteration", "toString"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}