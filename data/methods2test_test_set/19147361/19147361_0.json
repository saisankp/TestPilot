{"test_class": {"identifier": "TestDefaultIndexer", "superclass": "extends IndexTestBase", "interfaces": "", "fields": [], "file": "themis-index/src/test/java/org/apache/hadoop/hbase/themis/index/cp/TestDefaultIndexer.java"}, "test_case": {"identifier": "testLoadSecondaryIndexesForTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testLoadSecondaryIndexesForTable() throws IOException {\n    Map<IndexColumn, String> columnIndexes = new HashMap<IndexColumn, String>();\n    DefaultIndexer indexer = new DefaultIndexer(conf);\n    indexer.loadSecondaryIndexesForTable(admin.getTableDescriptor(MAIN_TABLE),\n      columnIndexes);\n    Assert.assertEquals(1, columnIndexes.size());\n    IndexColumn indexColumn = new IndexColumn(MAIN_TABLE,\n        INDEX_FAMILY, INDEX_QUALIFIER);\n    Assert.assertTrue(columnIndexes.containsKey(indexColumn));\n    Assert.assertEquals(Bytes.toString(INDEX_TABLE), columnIndexes.get(indexColumn));\n  }", "signature": "void testLoadSecondaryIndexesForTable()", "full_signature": "@Test public void testLoadSecondaryIndexesForTable()", "class_method_signature": "TestDefaultIndexer.testLoadSecondaryIndexesForTable()", "testcase": true, "constructor": false, "invocations": ["loadSecondaryIndexesForTable", "getTableDescriptor", "assertEquals", "size", "assertTrue", "containsKey", "assertEquals", "toString", "get"]}, "focal_class": {"identifier": "DefaultIndexer", "superclass": "extends Indexer", "interfaces": "", "fields": [{"original_string": "private final Map<IndexColumn, String> columnIndexes = new HashMap<IndexColumn, String>();", "modifier": "private final", "type": "Map<IndexColumn, String>", "declarator": "columnIndexes = new HashMap<IndexColumn, String>()", "var_name": "columnIndexes"}], "methods": [{"identifier": "DefaultIndexer", "parameters": "(Configuration conf)", "modifiers": "public", "return": "", "signature": " DefaultIndexer(Configuration conf)", "full_signature": "public  DefaultIndexer(Configuration conf)", "class_method_signature": "DefaultIndexer.DefaultIndexer(Configuration conf)", "testcase": false, "constructor": true}, {"identifier": "getColumnIndexes", "parameters": "()", "modifiers": "public", "return": "Map<IndexColumn, String>", "signature": "Map<IndexColumn, String> getColumnIndexes()", "full_signature": "public Map<IndexColumn, String> getColumnIndexes()", "class_method_signature": "DefaultIndexer.getColumnIndexes()", "testcase": false, "constructor": false}, {"identifier": "loadSecondaryIndexes", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void loadSecondaryIndexes()", "full_signature": "protected void loadSecondaryIndexes()", "class_method_signature": "DefaultIndexer.loadSecondaryIndexes()", "testcase": false, "constructor": false}, {"identifier": "loadSecondaryIndexesForTable", "parameters": "(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "modifiers": "protected", "return": "void", "signature": "void loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "full_signature": "protected void loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "class_method_signature": "DefaultIndexer.loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "getScanner", "parameters": "(byte[] tableName, ThemisScan scan, Transaction transaction)", "modifiers": "@Override public", "return": "IndexScanner", "signature": "IndexScanner getScanner(byte[] tableName, ThemisScan scan, Transaction transaction)", "full_signature": "@Override public IndexScanner getScanner(byte[] tableName, ThemisScan scan, Transaction transaction)", "class_method_signature": "DefaultIndexer.getScanner(byte[] tableName, ThemisScan scan, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "addIndexMutations", "parameters": "(ColumnMutationCache mutationCache)", "modifiers": "@Override public", "return": "void", "signature": "void addIndexMutations(ColumnMutationCache mutationCache)", "full_signature": "@Override public void addIndexMutations(ColumnMutationCache mutationCache)", "class_method_signature": "DefaultIndexer.addIndexMutations(ColumnMutationCache mutationCache)", "testcase": false, "constructor": false}, {"identifier": "constructIndexKv", "parameters": "(byte[] mainRowkey, byte[] mainValue)", "modifiers": "protected static", "return": "KeyValue", "signature": "KeyValue constructIndexKv(byte[] mainRowkey, byte[] mainValue)", "full_signature": "protected static KeyValue constructIndexKv(byte[] mainRowkey, byte[] mainValue)", "class_method_signature": "DefaultIndexer.constructIndexKv(byte[] mainRowkey, byte[] mainValue)", "testcase": false, "constructor": false}], "file": "themis-index/src/main/java/org/apache/hadoop/hbase/themis/index/cp/DefaultIndexer.java"}, "focal_method": {"identifier": "loadSecondaryIndexesForTable", "parameters": "(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "modifiers": "protected", "return": "void", "body": "protected void loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes) throws IOException {\n    for (HColumnDescriptor family : desc.getFamilies()) {\n      if (IndexMasterObserver.isSecondaryIndexEnableFamily(family)) {\n        List<Pair<String, String>> indexNameAndColumns = IndexMasterObserver\n            .getIndexNameAndColumns(desc.getNameAsString(), family);\n        for (Pair<String, String> indexNameAndColumn : indexNameAndColumns) {\n          String indexName = indexNameAndColumn.getFirst();\n          String column = indexNameAndColumn.getSecond();\n          IndexColumn indexColumn = new IndexColumn(desc.getName(), family.getName(),\n              Bytes.toBytes(column));\n          String indexTableName = IndexMasterObserver.constructSecondaryIndexTableName(\n            desc.getNameAsString(), family.getNameAsString(), column, indexName);\n          if (!columnIndexes.containsKey(indexColumn)) {\n            columnIndexes.put(indexColumn, indexTableName);\n          } else {\n            throw new IOException(\"duplicated index definition found, indexColumn=\" + indexColumn);\n          }\n        }\n      }\n    }\n  }", "signature": "void loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "full_signature": "protected void loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "class_method_signature": "DefaultIndexer.loadSecondaryIndexesForTable(HTableDescriptor desc,\n      Map<IndexColumn, String> columnIndexes)", "testcase": false, "constructor": false, "invocations": ["getFamilies", "isSecondaryIndexEnableFamily", "getIndexNameAndColumns", "getNameAsString", "getFirst", "getSecond", "getName", "getName", "toBytes", "constructSecondaryIndexTableName", "getNameAsString", "getNameAsString", "containsKey", "put"]}, "repository": {"repo_id": 19147361, "url": "https://github.com/XiaoMi/themis", "language": "Java", "is_fork": false, "fork_count": 57, "stargazer_count": 212, "size": 1400, "license": "Apache License 2.0"}}