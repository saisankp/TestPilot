{"test_class": {"identifier": "ColorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double epsilon = 0.0001;", "modifier": "private final", "type": "double", "declarator": "epsilon = 0.0001", "var_name": "epsilon"}], "file": "src/osip-model/src/test/java/edu/kit/pse/osip/core/model/base/ColorTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        Color color1 = new Color(0.5, 0.5, 0.5);\n        Color color2 = new Color(0.5, 0.5, 0.5);\n        assertTrue(color1.equals(color2));\n        assertTrue(color2.equals(color1));\n        assertFalse(color1.equals(null));\n        assertFalse(color1.equals(\"test\"));\n        color2 = new Color(0.5, 0.5, 0.6);\n        assertFalse(color1.equals(color2));\n        assertFalse(color2.equals(color1));\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "ColorTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "Color", "superclass": "", "interfaces": "", "fields": [{"original_string": "private double cyan;", "modifier": "private", "type": "double", "declarator": "cyan", "var_name": "cyan"}, {"original_string": "private double yellow;", "modifier": "private", "type": "double", "declarator": "yellow", "var_name": "yellow"}, {"original_string": "private double magenta;", "modifier": "private", "type": "double", "declarator": "magenta", "var_name": "magenta"}], "methods": [{"identifier": "Color", "parameters": "(double cyan, double magenta, double yellow)", "modifiers": "public", "return": "", "signature": " Color(double cyan, double magenta, double yellow)", "full_signature": "public  Color(double cyan, double magenta, double yellow)", "class_method_signature": "Color.Color(double cyan, double magenta, double yellow)", "testcase": false, "constructor": true}, {"identifier": "Color", "parameters": "(int rgb)", "modifiers": "public", "return": "", "signature": " Color(int rgb)", "full_signature": "public  Color(int rgb)", "class_method_signature": "Color.Color(int rgb)", "testcase": false, "constructor": true}, {"identifier": "getCyan", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getCyan()", "full_signature": "public final double getCyan()", "class_method_signature": "Color.getCyan()", "testcase": false, "constructor": false}, {"identifier": "getMagenta", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getMagenta()", "full_signature": "public final double getMagenta()", "class_method_signature": "Color.getMagenta()", "testcase": false, "constructor": false}, {"identifier": "getYellow", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getYellow()", "full_signature": "public final double getYellow()", "class_method_signature": "Color.getYellow()", "testcase": false, "constructor": false}, {"identifier": "getR", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getR()", "full_signature": "public final double getR()", "class_method_signature": "Color.getR()", "testcase": false, "constructor": false}, {"identifier": "getG", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getG()", "full_signature": "public final double getG()", "class_method_signature": "Color.getG()", "testcase": false, "constructor": false}, {"identifier": "getB", "parameters": "()", "modifiers": "public final", "return": "double", "signature": "double getB()", "full_signature": "public final double getB()", "class_method_signature": "Color.getB()", "testcase": false, "constructor": false}, {"identifier": "getRGB", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRGB()", "full_signature": "public int getRGB()", "class_method_signature": "Color.getRGB()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Color.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Color.hashCode()", "testcase": false, "constructor": false}], "file": "src/osip-model/src/main/java/edu/kit/pse/osip/core/model/base/Color.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (other == null) {\n            return false;\n        }\n        if (other == this) {\n            return true;\n        }\n        if (!(other instanceof Color)) {\n            return false;\n        }\n        Color otherColor = (Color) other;\n        return (Math.abs(otherColor.cyan - cyan) < 0.000001 && Math.abs(otherColor.magenta - magenta) < 0.000001\n            && Math.abs(otherColor.yellow - yellow) < 0.000001);\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Color.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["abs", "abs", "abs"]}, "repository": {"repo_id": 74042107, "url": "https://github.com/ByteHamster/PSE", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 18396, "license": "licensed"}}