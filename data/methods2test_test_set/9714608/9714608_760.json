{"test_class": {"identifier": "DBaseFileAttributeCollectionTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private static final String PHOTOGRAMMETRIE_VALUE;", "modifier": "private static final", "type": "String", "declarator": "PHOTOGRAMMETRIE_VALUE", "var_name": "PHOTOGRAMMETRIE_VALUE"}, {"original_string": "private URL resource;", "modifier": "private", "type": "URL", "declarator": "resource", "var_name": "resource"}, {"original_string": "private DBaseFileAttributeCollection provider;", "modifier": "private", "type": "DBaseFileAttributeCollection", "declarator": "provider", "var_name": "provider"}, {"original_string": "private static final String TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\"", "var_name": "TEST_FILENAME"}], "file": "advanced/dbasefile/src/test/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeCollectionTest.java"}, "test_case": {"identifier": "testGetAllBufferedAttributes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAllBufferedAttributes() throws Exception {\n\t\tCollection<Attribute> names;\n\t\tIterator<Attribute> iterator;\n\t\tAttribute attr;\n\t\t\n\t\tnames = this.provider.getAllBufferedAttributes();\n\t\tassertNotNull(names);\n\t\tassertEquals(0, names.size());\n\t\titerator = names.iterator();\n\t\tassertFalse(iterator.hasNext());\n\n\t\tthis.provider.setAttribute(\"NEWFIELD\", 7.); //$NON-NLS-1$\n\n\t\tnames = this.provider.getAllBufferedAttributes();\n\t\tassertNotNull(names);\n\t\tassertEquals(1, names.size());\n\t\titerator = names.iterator();\n\t\tassertTrue(iterator.hasNext());\n\t\tattr = iterator.next();\n\t\tassertNotNull(attr);\n\t\tassertEquals(\"NEWFIELD\", attr.getName()); //$NON-NLS-1$\n\t\tassertEquals(7., attr.getValue());\n\t\tassertFalse(iterator.hasNext());\n\n\t\tthis.provider.removeAttribute(\"NEWFIELD\"); //$NON-NLS-1$\n\n\t\tnames = this.provider.getAllBufferedAttributes();\n\t\tassertNotNull(names);\n\t\tassertEquals(0, names.size());\n\t\titerator = names.iterator();\n\t\tassertFalse(iterator.hasNext());\n\t}", "signature": "void testGetAllBufferedAttributes()", "full_signature": "@Test public void testGetAllBufferedAttributes()", "class_method_signature": "DBaseFileAttributeCollectionTest.testGetAllBufferedAttributes()", "testcase": true, "constructor": false, "invocations": ["getAllBufferedAttributes", "assertNotNull", "assertEquals", "size", "iterator", "assertFalse", "hasNext", "setAttribute", "getAllBufferedAttributes", "assertNotNull", "assertEquals", "size", "iterator", "assertTrue", "hasNext", "next", "assertNotNull", "assertEquals", "getName", "assertEquals", "getValue", "assertFalse", "hasNext", "removeAttribute", "getAllBufferedAttributes", "assertNotNull", "assertEquals", "size", "iterator", "assertFalse", "hasNext"]}, "focal_class": {"identifier": "DBaseFileAttributeCollection", "superclass": "extends DBaseFileAttributeProvider", "interfaces": "implements ROMBasedAttributeCollection", "fields": [{"original_string": "private static final long serialVersionUID = -8104118627013838862L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8104118627013838862L", "var_name": "serialVersionUID"}, {"original_string": "private Collection<AttributeChangeListener> listeners;", "modifier": "private", "type": "Collection<AttributeChangeListener>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private Map<String, Attribute> buffer;", "modifier": "private", "type": "Map<String, Attribute>", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private int addedElementCount;", "modifier": "private", "type": "int", "declarator": "addedElementCount", "var_name": "addedElementCount"}, {"original_string": "private boolean isEventFirable = true;", "modifier": "private", "type": "boolean", "declarator": "isEventFirable = true", "var_name": "isEventFirable"}], "methods": [{"identifier": "DBaseFileAttributeCollection", "parameters": "(DBaseFileAttributeAccessor accessor)", "modifiers": "", "return": "", "signature": " DBaseFileAttributeCollection(DBaseFileAttributeAccessor accessor)", "full_signature": "  DBaseFileAttributeCollection(DBaseFileAttributeAccessor accessor)", "class_method_signature": "DBaseFileAttributeCollection.DBaseFileAttributeCollection(DBaseFileAttributeAccessor accessor)", "testcase": false, "constructor": true}, {"identifier": "isEventFirable", "parameters": "()", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean isEventFirable()", "full_signature": "@Override @Pure public boolean isEventFirable()", "class_method_signature": "DBaseFileAttributeCollection.isEventFirable()", "testcase": false, "constructor": false}, {"identifier": "setEventFirable", "parameters": "(boolean isFirable)", "modifiers": "@Override public", "return": "void", "signature": "void setEventFirable(boolean isFirable)", "full_signature": "@Override public void setEventFirable(boolean isFirable)", "class_method_signature": "DBaseFileAttributeCollection.setEventFirable(boolean isFirable)", "testcase": false, "constructor": false}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public", "return": "void", "signature": "void finalize()", "full_signature": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public void finalize()", "class_method_signature": "DBaseFileAttributeCollection.finalize()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Pure @Override public", "return": "DBaseFileAttributeCollection", "signature": "DBaseFileAttributeCollection clone()", "full_signature": "@Pure @Override public DBaseFileAttributeCollection clone()", "class_method_signature": "DBaseFileAttributeCollection.clone()", "testcase": false, "constructor": false}, {"identifier": "getAllBufferedAttributeNames", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Collection<String>", "signature": "Collection<String> getAllBufferedAttributeNames()", "full_signature": "@Pure @Override public Collection<String> getAllBufferedAttributeNames()", "class_method_signature": "DBaseFileAttributeCollection.getAllBufferedAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getBufferedAttributeCount", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int getBufferedAttributeCount()", "full_signature": "@Pure @Override public int getBufferedAttributeCount()", "class_method_signature": "DBaseFileAttributeCollection.getBufferedAttributeCount()", "testcase": false, "constructor": false}, {"identifier": "getAllBufferedAttributes", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Collection<Attribute>", "signature": "Collection<Attribute> getAllBufferedAttributes()", "full_signature": "@Pure @Override public Collection<Attribute> getAllBufferedAttributes()", "class_method_signature": "DBaseFileAttributeCollection.getAllBufferedAttributes()", "testcase": false, "constructor": false}, {"identifier": "isBufferedAttribute", "parameters": "(String attributeName)", "modifiers": "@Pure @Override public", "return": "boolean", "signature": "boolean isBufferedAttribute(String attributeName)", "full_signature": "@Pure @Override public boolean isBufferedAttribute(String attributeName)", "class_method_signature": "DBaseFileAttributeCollection.isBufferedAttribute(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "setBuffer", "parameters": "(String name, Attribute attr)", "modifiers": "private", "return": "Attribute", "signature": "Attribute setBuffer(String name, Attribute attr)", "full_signature": "private Attribute setBuffer(String name, Attribute attr)", "class_method_signature": "DBaseFileAttributeCollection.setBuffer(String name, Attribute attr)", "testcase": false, "constructor": false}, {"identifier": "setAttributeType", "parameters": "(String name, AttributeType type)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttributeType(String name, AttributeType type)", "full_signature": "@Override public Attribute setAttributeType(String name, AttributeType type)", "class_method_signature": "DBaseFileAttributeCollection.setAttributeType(String name, AttributeType type)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, AttributeValue value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, AttributeValue value)", "full_signature": "@Override public Attribute setAttribute(String name, AttributeValue value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, AttributeValue value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, boolean value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, boolean value)", "full_signature": "@Override public Attribute setAttribute(String name, boolean value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, boolean value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, int value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, int value)", "full_signature": "@Override public Attribute setAttribute(String name, int value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, int value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, long value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, long value)", "full_signature": "@Override public Attribute setAttribute(String name, long value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, long value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, float value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, float value)", "full_signature": "@Override public Attribute setAttribute(String name, float value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, float value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, double value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, double value)", "full_signature": "@Override public Attribute setAttribute(String name, double value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, double value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, String value)", "full_signature": "@Override public Attribute setAttribute(String name, String value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, UUID value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, UUID value)", "full_signature": "@Override public Attribute setAttribute(String name, UUID value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, UUID value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, URL value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, URL value)", "full_signature": "@Override public Attribute setAttribute(String name, URL value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, URL value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, URI value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, URI value)", "full_signature": "@Override public Attribute setAttribute(String name, URI value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, URI value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Date value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, Date value)", "full_signature": "@Override public Attribute setAttribute(String name, Date value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, Date value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, InetAddress value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, InetAddress value)", "full_signature": "@Override public Attribute setAttribute(String name, InetAddress value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, InetAddress value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, InetSocketAddress value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, InetSocketAddress value)", "full_signature": "@Override public Attribute setAttribute(String name, InetSocketAddress value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, InetSocketAddress value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Enum<?> value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, Enum<?> value)", "full_signature": "@Override public Attribute setAttribute(String name, Enum<?> value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, Enum<?> value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Class<?> value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(String name, Class<?> value)", "full_signature": "@Override public Attribute setAttribute(String name, Class<?> value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(String name, Class<?> value)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(Attribute value)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute setAttribute(Attribute value)", "full_signature": "@Override public Attribute setAttribute(Attribute value)", "class_method_signature": "DBaseFileAttributeCollection.setAttribute(Attribute value)", "testcase": false, "constructor": false}, {"identifier": "removeAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAttribute(String name)", "full_signature": "@Override public boolean removeAttribute(String name)", "class_method_signature": "DBaseFileAttributeCollection.removeAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "removeAllAttributes", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAllAttributes()", "full_signature": "@Override public boolean removeAllAttributes()", "class_method_signature": "DBaseFileAttributeCollection.removeAllAttributes()", "testcase": false, "constructor": false}, {"identifier": "renameAttribute", "parameters": "(String oldname, String newname)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean renameAttribute(String oldname, String newname)", "full_signature": "@Override public final boolean renameAttribute(String oldname, String newname)", "class_method_signature": "DBaseFileAttributeCollection.renameAttribute(String oldname, String newname)", "testcase": false, "constructor": false}, {"identifier": "renameAttribute", "parameters": "(String oldname, String newname, boolean overwrite)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean renameAttribute(String oldname, String newname, boolean overwrite)", "full_signature": "@Override public boolean renameAttribute(String oldname, String newname, boolean overwrite)", "class_method_signature": "DBaseFileAttributeCollection.renameAttribute(String oldname, String newname, boolean overwrite)", "testcase": false, "constructor": false}, {"identifier": "setAttributes", "parameters": "(AttributeProvider otherContainer)", "modifiers": "@Override public", "return": "void", "signature": "void setAttributes(AttributeProvider otherContainer)", "full_signature": "@Override public void setAttributes(AttributeProvider otherContainer)", "class_method_signature": "DBaseFileAttributeCollection.setAttributes(AttributeProvider otherContainer)", "testcase": false, "constructor": false}, {"identifier": "setAttributes", "parameters": "(Map<String, Object> otherContainer)", "modifiers": "@Override public", "return": "void", "signature": "void setAttributes(Map<String, Object> otherContainer)", "full_signature": "@Override public void setAttributes(Map<String, Object> otherContainer)", "class_method_signature": "DBaseFileAttributeCollection.setAttributes(Map<String, Object> otherContainer)", "testcase": false, "constructor": false}, {"identifier": "addAttributes", "parameters": "(Map<String, Object> otherContainer)", "modifiers": "@Override public", "return": "void", "signature": "void addAttributes(Map<String, Object> otherContainer)", "full_signature": "@Override public void addAttributes(Map<String, Object> otherContainer)", "class_method_signature": "DBaseFileAttributeCollection.addAttributes(Map<String, Object> otherContainer)", "testcase": false, "constructor": false}, {"identifier": "addAttributes", "parameters": "(AttributeProvider otherContainer)", "modifiers": "@Override public", "return": "void", "signature": "void addAttributes(AttributeProvider otherContainer)", "full_signature": "@Override public void addAttributes(AttributeProvider otherContainer)", "class_method_signature": "DBaseFileAttributeCollection.addAttributes(AttributeProvider otherContainer)", "testcase": false, "constructor": false}, {"identifier": "addAttributeChangeListener", "parameters": "(AttributeChangeListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addAttributeChangeListener(AttributeChangeListener listener)", "full_signature": "@Override public void addAttributeChangeListener(AttributeChangeListener listener)", "class_method_signature": "DBaseFileAttributeCollection.addAttributeChangeListener(AttributeChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeAttributeChangeListener", "parameters": "(AttributeChangeListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeAttributeChangeListener(AttributeChangeListener listener)", "full_signature": "@Override public void removeAttributeChangeListener(AttributeChangeListener listener)", "class_method_signature": "DBaseFileAttributeCollection.removeAttributeChangeListener(AttributeChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "getAttributeCount", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int getAttributeCount()", "full_signature": "@Pure @Override public int getAttributeCount()", "class_method_signature": "DBaseFileAttributeCollection.getAttributeCount()", "testcase": false, "constructor": false}, {"identifier": "hasAttribute", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "boolean", "signature": "boolean hasAttribute(String name)", "full_signature": "@Pure @Override public boolean hasAttribute(String name)", "class_method_signature": "DBaseFileAttributeCollection.hasAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getAllAttributes", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Collection<Attribute>", "signature": "Collection<Attribute> getAllAttributes()", "full_signature": "@Pure @Override public Collection<Attribute> getAllAttributes()", "class_method_signature": "DBaseFileAttributeCollection.getAllAttributes()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributeNames", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Collection<String>", "signature": "Collection<String> getAllAttributeNames()", "full_signature": "@Pure @Override public Collection<String> getAllAttributeNames()", "class_method_signature": "DBaseFileAttributeCollection.getAllAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributesByType", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Map<AttributeType, Collection<Attribute>>", "signature": "Map<AttributeType, Collection<Attribute>> getAllAttributesByType()", "full_signature": "@Pure @Override public Map<AttributeType, Collection<Attribute>> getAllAttributesByType()", "class_method_signature": "DBaseFileAttributeCollection.getAllAttributesByType()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "AttributeValue", "signature": "AttributeValue getAttribute(String name)", "full_signature": "@Pure @Override public AttributeValue getAttribute(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, boolean defaultValue)", "modifiers": "@Pure @Override public", "return": "boolean", "signature": "boolean getAttribute(String name, boolean defaultValue)", "full_signature": "@Pure @Override public boolean getAttribute(String name, boolean defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, long defaultValue)", "modifiers": "@Pure @Override public", "return": "long", "signature": "long getAttribute(String name, long defaultValue)", "full_signature": "@Pure @Override public long getAttribute(String name, long defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, int defaultValue)", "modifiers": "@Pure @Override public", "return": "int", "signature": "int getAttribute(String name, int defaultValue)", "full_signature": "@Pure @Override public int getAttribute(String name, int defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, float defaultValue)", "modifiers": "@Pure @Override public", "return": "float", "signature": "float getAttribute(String name, float defaultValue)", "full_signature": "@Pure @Override public float getAttribute(String name, float defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, float defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, double defaultValue)", "modifiers": "@Pure @Override public", "return": "double", "signature": "double getAttribute(String name, double defaultValue)", "full_signature": "@Pure @Override public double getAttribute(String name, double defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, String defaultValue)", "modifiers": "@Pure @Override public", "return": "String", "signature": "String getAttribute(String name, String defaultValue)", "full_signature": "@Pure @Override public String getAttribute(String name, String defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, UUID defaultValue)", "modifiers": "@Pure @Override public", "return": "UUID", "signature": "UUID getAttribute(String name, UUID defaultValue)", "full_signature": "@Pure @Override public UUID getAttribute(String name, UUID defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, UUID defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, URL defaultValue)", "modifiers": "@Pure @Override public", "return": "URL", "signature": "URL getAttribute(String name, URL defaultValue)", "full_signature": "@Pure @Override public URL getAttribute(String name, URL defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, URL defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, URI defaultValue)", "modifiers": "@Pure @Override public", "return": "URI", "signature": "URI getAttribute(String name, URI defaultValue)", "full_signature": "@Pure @Override public URI getAttribute(String name, URI defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, URI defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, Date defaultValue)", "modifiers": "@Pure @Override public", "return": "Date", "signature": "Date getAttribute(String name, Date defaultValue)", "full_signature": "@Pure @Override public Date getAttribute(String name, Date defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, Date defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, InetAddress defaultValue)", "modifiers": "@Pure @Override public", "return": "InetAddress", "signature": "InetAddress getAttribute(String name, InetAddress defaultValue)", "full_signature": "@Pure @Override public InetAddress getAttribute(String name, InetAddress defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, InetAddress defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, ET defaultValue)", "modifiers": "@Pure @SuppressWarnings(\"unchecked\") @Override public", "return": "ET", "signature": "ET getAttribute(String name, ET defaultValue)", "full_signature": "@Pure @SuppressWarnings(\"unchecked\") @Override public ET getAttribute(String name, ET defaultValue)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, ET defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, AttributeValue default_value)", "modifiers": "@Pure @Override public", "return": "AttributeValue", "signature": "AttributeValue getAttribute(String name, AttributeValue default_value)", "full_signature": "@Pure @Override public AttributeValue getAttribute(String name, AttributeValue default_value)", "class_method_signature": "DBaseFileAttributeCollection.getAttribute(String name, AttributeValue default_value)", "testcase": false, "constructor": false}, {"identifier": "getAttributeObject", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "Attribute", "signature": "Attribute getAttributeObject(String name)", "full_signature": "@Pure @Override public Attribute getAttributeObject(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeObject(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsBool", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "boolean", "signature": "boolean getAttributeAsBool(String name)", "full_signature": "@Pure @Override public boolean getAttributeAsBool(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsBool(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsInt", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "int", "signature": "int getAttributeAsInt(String name)", "full_signature": "@Pure @Override public int getAttributeAsInt(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsInt(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsLong", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "long", "signature": "long getAttributeAsLong(String name)", "full_signature": "@Pure @Override public long getAttributeAsLong(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsLong(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsFloat", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "float", "signature": "float getAttributeAsFloat(String name)", "full_signature": "@Pure @Override public float getAttributeAsFloat(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsFloat(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsDouble", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "double", "signature": "double getAttributeAsDouble(String name)", "full_signature": "@Pure @Override public double getAttributeAsDouble(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsDouble(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsString", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "String", "signature": "String getAttributeAsString(String name)", "full_signature": "@Pure @Override public String getAttributeAsString(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsString(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsUUID", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "UUID", "signature": "UUID getAttributeAsUUID(String name)", "full_signature": "@Pure @Override public UUID getAttributeAsUUID(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsUUID(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsURL", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "URL", "signature": "URL getAttributeAsURL(String name)", "full_signature": "@Pure @Override public URL getAttributeAsURL(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsURL(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsURI", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "URI", "signature": "URI getAttributeAsURI(String name)", "full_signature": "@Pure @Override public URI getAttributeAsURI(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsURI(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsDate", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "Date", "signature": "Date getAttributeAsDate(String name)", "full_signature": "@Pure @Override public Date getAttributeAsDate(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsDate(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsInetAddress", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "InetAddress", "signature": "InetAddress getAttributeAsInetAddress(String name)", "full_signature": "@Pure @Override public InetAddress getAttributeAsInetAddress(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsInetAddress(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsEnumeration", "parameters": "(String name)", "modifiers": "@Pure @Override public", "return": "Enum<?>", "signature": "Enum<?> getAttributeAsEnumeration(String name)", "full_signature": "@Pure @Override public Enum<?> getAttributeAsEnumeration(String name)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsEnumeration(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeAsEnumeration", "parameters": "(String name, Class<ET> type)", "modifiers": "@Pure @Override public", "return": "ET", "signature": "ET getAttributeAsEnumeration(String name, Class<ET> type)", "full_signature": "@Pure @Override public ET getAttributeAsEnumeration(String name, Class<ET> type)", "class_method_signature": "DBaseFileAttributeCollection.getAttributeAsEnumeration(String name, Class<ET> type)", "testcase": false, "constructor": false}, {"identifier": "freeMemory", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void freeMemory()", "full_signature": "@Override public void freeMemory()", "class_method_signature": "DBaseFileAttributeCollection.freeMemory()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "DBaseFileAttributeCollection.flush()", "testcase": false, "constructor": false}, {"identifier": "fireAttributeAddedEvent", "parameters": "(String name, AttributeValue attr)", "modifiers": "protected", "return": "void", "signature": "void fireAttributeAddedEvent(String name, AttributeValue attr)", "full_signature": "protected void fireAttributeAddedEvent(String name, AttributeValue attr)", "class_method_signature": "DBaseFileAttributeCollection.fireAttributeAddedEvent(String name, AttributeValue attr)", "testcase": false, "constructor": false}, {"identifier": "fireAttributeChangedEvent", "parameters": "(String name, AttributeValue oldValue, AttributeValue currentValue)", "modifiers": "protected", "return": "void", "signature": "void fireAttributeChangedEvent(String name, AttributeValue oldValue, AttributeValue currentValue)", "full_signature": "protected void fireAttributeChangedEvent(String name, AttributeValue oldValue, AttributeValue currentValue)", "class_method_signature": "DBaseFileAttributeCollection.fireAttributeChangedEvent(String name, AttributeValue oldValue, AttributeValue currentValue)", "testcase": false, "constructor": false}, {"identifier": "fireAttributeClearedEvent", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void fireAttributeClearedEvent()", "full_signature": "protected void fireAttributeClearedEvent()", "class_method_signature": "DBaseFileAttributeCollection.fireAttributeClearedEvent()", "testcase": false, "constructor": false}, {"identifier": "fireAttributeRemovedEvent", "parameters": "(String name, AttributeValue oldValue)", "modifiers": "protected", "return": "void", "signature": "void fireAttributeRemovedEvent(String name, AttributeValue oldValue)", "full_signature": "protected void fireAttributeRemovedEvent(String name, AttributeValue oldValue)", "class_method_signature": "DBaseFileAttributeCollection.fireAttributeRemovedEvent(String name, AttributeValue oldValue)", "testcase": false, "constructor": false}, {"identifier": "fireAttributeRenamedEvent", "parameters": "(String oldName, String newName, AttributeValue attr)", "modifiers": "protected", "return": "void", "signature": "void fireAttributeRenamedEvent(String oldName, String newName, AttributeValue attr)", "full_signature": "protected void fireAttributeRenamedEvent(String oldName, String newName, AttributeValue attr)", "class_method_signature": "DBaseFileAttributeCollection.fireAttributeRenamedEvent(String oldName, String newName, AttributeValue attr)", "testcase": false, "constructor": false}], "file": "advanced/dbasefile/src/main/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeCollection.java"}, "focal_method": {"identifier": "getAllBufferedAttributes", "parameters": "()", "modifiers": "@Pure @Override public", "return": "Collection<Attribute>", "body": "@Pure\n\t@Override\n\tpublic Collection<Attribute> getAllBufferedAttributes() {\n\t\tif (this.buffer == null) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\t\tfinal Collection<Attribute> list = this.buffer.values();\n\t\tfinal ArrayList<Attribute> tab = new ArrayList<>(list.size());\n\t\tfor (final Attribute attr : list) {\n\t\t\ttab.add(new AttributeImpl(attr));\n\t\t}\n\t\treturn tab;\n\t}", "signature": "Collection<Attribute> getAllBufferedAttributes()", "full_signature": "@Pure @Override public Collection<Attribute> getAllBufferedAttributes()", "class_method_signature": "DBaseFileAttributeCollection.getAllBufferedAttributes()", "testcase": false, "constructor": false, "invocations": ["emptyList", "values", "size", "add"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}