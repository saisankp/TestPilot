{"test_class": {"identifier": "ElasticsearchUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long TEST_CURRENT_TIME = 1428151913000L;", "modifier": "private static final", "type": "long", "declarator": "TEST_CURRENT_TIME = 1428151913000L", "var_name": "TEST_CURRENT_TIME"}, {"original_string": "@Rule\n    public TestWatcher tzRule = new TestWatcher() {\n\n        private DateTimeZone defaultTz = DateTimeZone.getDefault();\n\n        @Override\n        protected void starting(Description description) {\n            DateTimeZone.setDefault(DateTimeZone.forOffsetHoursMinutes(5, 30));\n        }\n\n        @Override\n        protected void finished(Description description) {\n            DateTimeZone.setDefault(defaultTz);\n        }\n    };", "modifier": "@Rule\n    public", "type": "TestWatcher", "declarator": "tzRule = new TestWatcher() {\n\n        private DateTimeZone defaultTz = DateTimeZone.getDefault();\n\n        @Override\n        protected void starting(Description description) {\n            DateTimeZone.setDefault(DateTimeZone.forOffsetHoursMinutes(5, 30));\n        }\n\n        @Override\n        protected void finished(Description description) {\n            DateTimeZone.setDefault(defaultTz);\n        }\n    }", "var_name": "tzRule"}], "file": "foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchUtilsTest.java"}, "test_case": {"identifier": "testGetIndicesLastSameSDay", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIndicesLastSameSDay() throws Exception {\n        TestRequest request = new TestRequest();\n        LastFilter filter = new LastFilter();\n        filter.setDuration(Duration.minutes(10));\n        filter.setCurrentTime(TEST_CURRENT_TIME);\n        request.setFilters(Collections.<Filter>singletonList(filter));\n        String indexes[] = ElasticsearchUtils.getIndices(\"test\", request,\n                                                         new PeriodSelector(request.getFilters()).analyze(TEST_CURRENT_TIME)\n                                                        );\n        System.out.println(Arrays.toString(indexes));\n        Assert.assertArrayEquals(new String[]{\"foxtrot-test-table-04-4-2015\"}, indexes);\n    }", "signature": "void testGetIndicesLastSameSDay()", "full_signature": "@Test public void testGetIndicesLastSameSDay()", "class_method_signature": "ElasticsearchUtilsTest.testGetIndicesLastSameSDay()", "testcase": true, "constructor": false, "invocations": ["setDuration", "minutes", "setCurrentTime", "setFilters", "singletonList", "getIndices", "analyze", "getFilters", "println", "toString", "assertArrayEquals"]}, "focal_class": {"identifier": "ElasticsearchUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DOCUMENT_TYPE_NAME = \"document\";", "modifier": "public static final", "type": "String", "declarator": "DOCUMENT_TYPE_NAME = \"document\"", "var_name": "DOCUMENT_TYPE_NAME"}, {"original_string": "public static final String DOCUMENT_META_FIELD_NAME = \"__FOXTROT_METADATA__\";", "modifier": "public static final", "type": "String", "declarator": "DOCUMENT_META_FIELD_NAME = \"__FOXTROT_METADATA__\"", "var_name": "DOCUMENT_META_FIELD_NAME"}, {"original_string": "public static final String DOCUMENT_META_TIMESTAMP_FIELD_NAME = String.format(\"%s.time\", DOCUMENT_META_FIELD_NAME);", "modifier": "public static final", "type": "String", "declarator": "DOCUMENT_META_TIMESTAMP_FIELD_NAME = String.format(\"%s.time\", DOCUMENT_META_FIELD_NAME)", "var_name": "DOCUMENT_META_TIMESTAMP_FIELD_NAME"}, {"original_string": "public static final String TIME_FIELD = \"time\";", "modifier": "public static final", "type": "String", "declarator": "TIME_FIELD = \"time\"", "var_name": "TIME_FIELD"}, {"original_string": "public static final int DEFAULT_SUB_LIST_SIZE = 50;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SUB_LIST_SIZE = 50", "var_name": "DEFAULT_SUB_LIST_SIZE"}, {"original_string": "static final String DOCUMENT_META_ID_FIELD_NAME = String.format(\"%s.id\", DOCUMENT_META_FIELD_NAME);", "modifier": "static final", "type": "String", "declarator": "DOCUMENT_META_ID_FIELD_NAME = String.format(\"%s.id\", DOCUMENT_META_FIELD_NAME)", "var_name": "DOCUMENT_META_ID_FIELD_NAME"}, {"original_string": "static final String DOCUMENT_TIME_FIELD_NAME = \"date\";", "modifier": "static final", "type": "String", "declarator": "DOCUMENT_TIME_FIELD_NAME = \"date\"", "var_name": "DOCUMENT_TIME_FIELD_NAME"}, {"original_string": "private static final String TABLENAME_POSTFIX = \"table\";", "modifier": "private static final", "type": "String", "declarator": "TABLENAME_POSTFIX = \"table\"", "var_name": "TABLENAME_POSTFIX"}, {"original_string": "private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\");", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "DATE_TIME_FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\")", "var_name": "DATE_TIME_FORMATTER"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(ElasticsearchUtils.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ElasticsearchUtils.class.getSimpleName())", "var_name": "logger"}, {"original_string": "private static final DateTimeFormatter FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\");", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\")", "var_name": "FORMATTER"}, {"original_string": "private static final String PATH_MATCH = \"path_match\";", "modifier": "private static final", "type": "String", "declarator": "PATH_MATCH = \"path_match\"", "var_name": "PATH_MATCH"}, {"original_string": "private static final String MAPPING = \"mapping\";", "modifier": "private static final", "type": "String", "declarator": "MAPPING = \"mapping\"", "var_name": "MAPPING"}, {"original_string": "private static final String STORE = \"store\";", "modifier": "private static final", "type": "String", "declarator": "STORE = \"store\"", "var_name": "STORE"}, {"original_string": "private static final String INDEX = \"index\";", "modifier": "private static final", "type": "String", "declarator": "INDEX = \"index\"", "var_name": "INDEX"}, {"original_string": "private static final String MATCH_MAPPING_TYPE = \"match_mapping_type\";", "modifier": "private static final", "type": "String", "declarator": "MATCH_MAPPING_TYPE = \"match_mapping_type\"", "var_name": "MATCH_MAPPING_TYPE"}, {"original_string": "private static String tableNamePrefix = \"foxtrot\";", "modifier": "private static", "type": "String", "declarator": "tableNamePrefix = \"foxtrot\"", "var_name": "tableNamePrefix"}], "methods": [{"identifier": "ElasticsearchUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ElasticsearchUtils()", "full_signature": "private  ElasticsearchUtils()", "class_method_signature": "ElasticsearchUtils.ElasticsearchUtils()", "testcase": false, "constructor": true}, {"identifier": "getTableNamePrefix", "parameters": "()", "modifiers": "@VisibleForTesting public static", "return": "String", "signature": "String getTableNamePrefix()", "full_signature": "@VisibleForTesting public static String getTableNamePrefix()", "class_method_signature": "ElasticsearchUtils.getTableNamePrefix()", "testcase": false, "constructor": false}, {"identifier": "setTableNamePrefix", "parameters": "(ElasticsearchConfig config)", "modifiers": "public static", "return": "void", "signature": "void setTableNamePrefix(ElasticsearchConfig config)", "full_signature": "public static void setTableNamePrefix(ElasticsearchConfig config)", "class_method_signature": "ElasticsearchUtils.setTableNamePrefix(ElasticsearchConfig config)", "testcase": false, "constructor": false}, {"identifier": "getIndexPrefix", "parameters": "(final String table)", "modifiers": "private static", "return": "String", "signature": "String getIndexPrefix(final String table)", "full_signature": "private static String getIndexPrefix(final String table)", "class_method_signature": "ElasticsearchUtils.getIndexPrefix(final String table)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table)", "modifiers": "public static", "return": "String", "signature": "String getIndices(final String table)", "full_signature": "public static String getIndices(final String table)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table, final ActionRequest request)", "modifiers": "public static", "return": "String[]", "signature": "String[] getIndices(final String table, final ActionRequest request)", "full_signature": "public static String[] getIndices(final String table, final ActionRequest request)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table, final ActionRequest request)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table, final ActionRequest request, final Interval interval)", "modifiers": "@VisibleForTesting public static", "return": "String[]", "signature": "String[] getIndices(final String table, final ActionRequest request, final Interval interval)", "full_signature": "@VisibleForTesting public static String[] getIndices(final String table, final ActionRequest request, final Interval interval)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table, final ActionRequest request, final Interval interval)", "testcase": false, "constructor": false}, {"identifier": "getCurrentIndex", "parameters": "(final String table, long timestamp)", "modifiers": "public static", "return": "String", "signature": "String getCurrentIndex(final String table, long timestamp)", "full_signature": "public static String getCurrentIndex(final String table, long timestamp)", "class_method_signature": "ElasticsearchUtils.getCurrentIndex(final String table, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getClusterTemplateMapping", "parameters": "()", "modifiers": "public static", "return": "PutIndexTemplateRequest", "signature": "PutIndexTemplateRequest getClusterTemplateMapping()", "full_signature": "public static PutIndexTemplateRequest getClusterTemplateMapping()", "class_method_signature": "ElasticsearchUtils.getClusterTemplateMapping()", "testcase": false, "constructor": false}, {"identifier": "getDocumentMapping", "parameters": "()", "modifiers": "private static", "return": "XContentBuilder", "signature": "XContentBuilder getDocumentMapping()", "full_signature": "private static XContentBuilder getDocumentMapping()", "class_method_signature": "ElasticsearchUtils.getDocumentMapping()", "testcase": false, "constructor": false}, {"identifier": "initializeMappings", "parameters": "(Client client)", "modifiers": "public static", "return": "void", "signature": "void initializeMappings(Client client)", "full_signature": "public static void initializeMappings(Client client)", "class_method_signature": "ElasticsearchUtils.initializeMappings(Client client)", "testcase": false, "constructor": false}, {"identifier": "getValidTableName", "parameters": "(String table)", "modifiers": "public static", "return": "String", "signature": "String getValidTableName(String table)", "full_signature": "public static String getValidTableName(String table)", "class_method_signature": "ElasticsearchUtils.getValidTableName(String table)", "testcase": false, "constructor": false}, {"identifier": "isIndexValidForTable", "parameters": "(String index, String table)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIndexValidForTable(String index, String table)", "full_signature": "private static boolean isIndexValidForTable(String index, String table)", "class_method_signature": "ElasticsearchUtils.isIndexValidForTable(String index, String table)", "testcase": false, "constructor": false}, {"identifier": "isIndexEligibleForDeletion", "parameters": "(String index, Table table)", "modifiers": "static", "return": "boolean", "signature": "boolean isIndexEligibleForDeletion(String index, Table table)", "full_signature": "static boolean isIndexEligibleForDeletion(String index, Table table)", "class_method_signature": "ElasticsearchUtils.isIndexEligibleForDeletion(String index, Table table)", "testcase": false, "constructor": false}, {"identifier": "parseIndexDate", "parameters": "(String index, String table)", "modifiers": "public static", "return": "DateTime", "signature": "DateTime parseIndexDate(String index, String table)", "full_signature": "public static DateTime parseIndexDate(String index, String table)", "class_method_signature": "ElasticsearchUtils.parseIndexDate(String index, String table)", "testcase": false, "constructor": false}, {"identifier": "getTableNameFromIndex", "parameters": "(String currentIndex)", "modifiers": "public static", "return": "String", "signature": "String getTableNameFromIndex(String currentIndex)", "full_signature": "public static String getTableNameFromIndex(String currentIndex)", "class_method_signature": "ElasticsearchUtils.getTableNameFromIndex(String currentIndex)", "testcase": false, "constructor": false}, {"identifier": "getAllIndicesPattern", "parameters": "()", "modifiers": "static", "return": "String", "signature": "String getAllIndicesPattern()", "full_signature": "static String getAllIndicesPattern()", "class_method_signature": "ElasticsearchUtils.getAllIndicesPattern()", "testcase": false, "constructor": false}, {"identifier": "getTodayIndicesPattern", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getTodayIndicesPattern()", "full_signature": "public static String getTodayIndicesPattern()", "class_method_signature": "ElasticsearchUtils.getTodayIndicesPattern()", "testcase": false, "constructor": false}, {"identifier": "isTimeFilterPresent", "parameters": "(List<Filter> filters)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTimeFilterPresent(List<Filter> filters)", "full_signature": "public static boolean isTimeFilterPresent(List<Filter> filters)", "class_method_signature": "ElasticsearchUtils.isTimeFilterPresent(List<Filter> filters)", "testcase": false, "constructor": false}], "file": "foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchUtils.java"}, "focal_method": {"identifier": "getIndices", "parameters": "(final String table)", "modifiers": "public static", "return": "String", "body": "public static String getIndices(final String table) {\n        return String.format(\"%s-%s-%s-*\", getTableNamePrefix(), table, ElasticsearchUtils.TABLENAME_POSTFIX);\n    }", "signature": "String getIndices(final String table)", "full_signature": "public static String getIndices(final String table)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table)", "testcase": false, "constructor": false, "invocations": ["format", "getTableNamePrefix"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}