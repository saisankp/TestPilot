{"test_class": {"identifier": "BoundedArchiveTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-core/src/test/java/org/opt4j/core/common/archive/BoundedArchiveTest.java"}, "test_case": {"identifier": "setCapacity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void setCapacity() {\n\t\tBoundedArchive archive = new BoundedArchive(10) {\n\t\t\t@Override\n\t\t\tprotected boolean updateWithNondominated(Collection<Individual> candidates) {\n\t\t\t\tAssert.fail();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\tAssert.assertEquals(10, archive.getCapacity());\n\t\tarchive.setCapacity(20);\n\t\tAssert.assertEquals(20, archive.getCapacity());\n\t}", "signature": "void setCapacity()", "full_signature": "@Test public void setCapacity()", "class_method_signature": "BoundedArchiveTest.setCapacity()", "testcase": true, "constructor": false, "invocations": ["fail", "assertEquals", "getCapacity", "setCapacity", "assertEquals", "getCapacity"]}, "focal_class": {"identifier": "BoundedArchive", "superclass": "extends AbstractArchive", "interfaces": "", "fields": [{"original_string": "protected int capacity;", "modifier": "protected", "type": "int", "declarator": "capacity", "var_name": "capacity"}], "methods": [{"identifier": "BoundedArchive", "parameters": "(int capacity)", "modifiers": "@Inject public", "return": "", "signature": " BoundedArchive(int capacity)", "full_signature": "@Inject public  BoundedArchive(int capacity)", "class_method_signature": "BoundedArchive.BoundedArchive(int capacity)", "testcase": false, "constructor": true}, {"identifier": "setCapacity", "parameters": "(int capacity)", "modifiers": "public", "return": "void", "signature": "void setCapacity(int capacity)", "full_signature": "public void setCapacity(int capacity)", "class_method_signature": "BoundedArchive.setCapacity(int capacity)", "testcase": false, "constructor": false}, {"identifier": "getCapacity", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCapacity()", "full_signature": "public int getCapacity()", "class_method_signature": "BoundedArchive.getCapacity()", "testcase": false, "constructor": false}, {"identifier": "addCheckedIndividual", "parameters": "(Individual individual)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addCheckedIndividual(Individual individual)", "full_signature": "@Override public boolean addCheckedIndividual(Individual individual)", "class_method_signature": "BoundedArchive.addCheckedIndividual(Individual individual)", "testcase": false, "constructor": false}, {"identifier": "addCheckedIndividuals", "parameters": "(Collection<? extends Individual> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addCheckedIndividuals(Collection<? extends Individual> c)", "full_signature": "@Override public boolean addCheckedIndividuals(Collection<? extends Individual> c)", "class_method_signature": "BoundedArchive.addCheckedIndividuals(Collection<? extends Individual> c)", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/common/archive/BoundedArchive.java"}, "focal_method": {"identifier": "setCapacity", "parameters": "(int capacity)", "modifiers": "public", "return": "void", "body": "public void setCapacity(int capacity) {\n\t\tif (capacity < 0) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid capacity: \" + capacity);\n\t\t}\n\t\tthis.capacity = capacity;\n\t}", "signature": "void setCapacity(int capacity)", "full_signature": "public void setCapacity(int capacity)", "class_method_signature": "BoundedArchive.setCapacity(int capacity)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}