{"test_class": {"identifier": "IntegerValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-core/src/test/java/org/opt4j/core/IntegerValueTest.java"}, "test_case": {"identifier": "setValueTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void setValueTest() {\n\t\tInteger d = 1;\n\t\tIntegerValue v = new IntegerValue(d);\n\n\t\tInteger d2 = 2;\n\t\tv.setValue(d2);\n\n\t\tAssert.assertEquals(d2, v.getValue());\n\t}", "signature": "void setValueTest()", "full_signature": "@Test public void setValueTest()", "class_method_signature": "IntegerValueTest.setValueTest()", "testcase": true, "constructor": false, "invocations": ["setValue", "assertEquals", "getValue"]}, "focal_class": {"identifier": "IntegerValue", "superclass": "", "interfaces": "implements Value<Integer>", "fields": [{"original_string": "protected Integer value = null;", "modifier": "protected", "type": "Integer", "declarator": "value = null", "var_name": "value"}], "methods": [{"identifier": "IntegerValue", "parameters": "(Integer value)", "modifiers": "public", "return": "", "signature": " IntegerValue(Integer value)", "full_signature": "public  IntegerValue(Integer value)", "class_method_signature": "IntegerValue.IntegerValue(Integer value)", "testcase": false, "constructor": true}, {"identifier": "getDouble", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getDouble()", "full_signature": "@Override public Double getDouble()", "class_method_signature": "IntegerValue.getDouble()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getValue()", "full_signature": "@Override public Integer getValue()", "class_method_signature": "IntegerValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Integer value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(Integer value)", "full_signature": "@Override public void setValue(Integer value)", "class_method_signature": "IntegerValue.setValue(Integer value)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Value<Integer> arg)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Value<Integer> arg)", "full_signature": "@Override public int compareTo(Value<Integer> arg)", "class_method_signature": "IntegerValue.compareTo(Value<Integer> arg)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "IntegerValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "IntegerValue.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "IntegerValue.toString()", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/IntegerValue.java"}, "focal_method": {"identifier": "setValue", "parameters": "(Integer value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void setValue(Integer value) {\n\t\tthis.value = value;\n\t}", "signature": "void setValue(Integer value)", "full_signature": "@Override public void setValue(Integer value)", "class_method_signature": "IntegerValue.setValue(Integer value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}