{"test_class": {"identifier": "CompositeOperationTest", "superclass": "", "interfaces": "", "fields": [], "file": "DbSetup-core/src/test/java/com/ninja_squad/dbsetup/operation/CompositeOperationTest.java"}, "test_case": {"identifier": "sequenceOfWorksWhenSeveralArgs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sequenceOfWorksWhenSeveralArgs() throws SQLException {\n        Operation a = mock(Operation.class);\n        Operation b = mock(Operation.class);\n\n        testSequenceOfWorksWhenMultipleArgs(CompositeOperation.sequenceOf(a, b), a, b);\n        testSequenceOfWorksWhenMultipleArgs(CompositeOperation.sequenceOf(Arrays.asList(a, b)), a, b);\n        testSequenceOfWorksWhenMultipleArgs(Operations.sequenceOf(a, b), a, b);\n        testSequenceOfWorksWhenMultipleArgs(Operations.sequenceOf(Arrays.asList(a, b)), a, b);\n    }", "signature": "void sequenceOfWorksWhenSeveralArgs()", "full_signature": "@Test public void sequenceOfWorksWhenSeveralArgs()", "class_method_signature": "CompositeOperationTest.sequenceOfWorksWhenSeveralArgs()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "testSequenceOfWorksWhenMultipleArgs", "sequenceOf", "testSequenceOfWorksWhenMultipleArgs", "sequenceOf", "asList", "testSequenceOfWorksWhenMultipleArgs", "sequenceOf", "testSequenceOfWorksWhenMultipleArgs", "sequenceOf", "asList"]}, "focal_class": {"identifier": "CompositeOperation", "superclass": "", "interfaces": "implements Operation", "fields": [{"original_string": "private static final Operation NOP = new Operation() {\n\n        @Override\n        public void execute(Connection connection, BinderConfiguration configuration) {\n            // does nothing since it's a NOP\n        }\n\n        @Override\n        public String toString() {\n            return \"NOP\";\n        }\n    };", "modifier": "private static final", "type": "Operation", "declarator": "NOP = new Operation() {\n\n        @Override\n        public void execute(Connection connection, BinderConfiguration configuration) {\n            // does nothing since it's a NOP\n        }\n\n        @Override\n        public String toString() {\n            return \"NOP\";\n        }\n    }", "var_name": "NOP"}, {"original_string": "private final List<Operation> operations;", "modifier": "private final", "type": "List<Operation>", "declarator": "operations", "var_name": "operations"}], "methods": [{"identifier": "CompositeOperation", "parameters": "(List<? extends Operation> operations)", "modifiers": "private", "return": "", "signature": " CompositeOperation(List<? extends Operation> operations)", "full_signature": "private  CompositeOperation(List<? extends Operation> operations)", "class_method_signature": "CompositeOperation.CompositeOperation(List<? extends Operation> operations)", "testcase": false, "constructor": true}, {"identifier": "sequenceOf", "parameters": "(@Nonnull Operation... operations)", "modifiers": "public static", "return": "Operation", "signature": "Operation sequenceOf(@Nonnull Operation... operations)", "full_signature": "public static Operation sequenceOf(@Nonnull Operation... operations)", "class_method_signature": "CompositeOperation.sequenceOf(@Nonnull Operation... operations)", "testcase": false, "constructor": false}, {"identifier": "sequenceOf", "parameters": "(@Nonnull List<? extends Operation> operations)", "modifiers": "public static", "return": "Operation", "signature": "Operation sequenceOf(@Nonnull List<? extends Operation> operations)", "full_signature": "public static Operation sequenceOf(@Nonnull List<? extends Operation> operations)", "class_method_signature": "CompositeOperation.sequenceOf(@Nonnull List<? extends Operation> operations)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(Connection connection, BinderConfiguration configuration)", "modifiers": "@Override public", "return": "void", "signature": "void execute(Connection connection, BinderConfiguration configuration)", "full_signature": "@Override public void execute(Connection connection, BinderConfiguration configuration)", "class_method_signature": "CompositeOperation.execute(Connection connection, BinderConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CompositeOperation.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CompositeOperation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "CompositeOperation.equals(Object o)", "testcase": false, "constructor": false}], "file": "DbSetup-core/src/main/java/com/ninja_squad/dbsetup/operation/CompositeOperation.java"}, "focal_method": {"identifier": "sequenceOf", "parameters": "(@Nonnull Operation... operations)", "modifiers": "public static", "return": "Operation", "body": "public static Operation sequenceOf(@Nonnull Operation... operations) {\n        return sequenceOf(Arrays.asList(operations));\n    }", "signature": "Operation sequenceOf(@Nonnull Operation... operations)", "full_signature": "public static Operation sequenceOf(@Nonnull Operation... operations)", "class_method_signature": "CompositeOperation.sequenceOf(@Nonnull Operation... operations)", "testcase": false, "constructor": false, "invocations": ["sequenceOf", "asList"]}, "repository": {"repo_id": 4260851, "url": "https://github.com/Ninja-Squad/DbSetup", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 183, "size": 1379, "license": "licensed"}}