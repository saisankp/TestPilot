{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-core/src/test/java/org/sejda/core/support/util/StringUtilsTest.java"}, "test_case": {"identifier": "asUnicodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void asUnicodes() {\n        assertEquals(\"\\\\U+20\\\\U+E6\\\\U+65\\\\U+5EA\", StringUtils.asUnicodes(\" \u00e6e\u05ea\"));\n    }", "signature": "void asUnicodes()", "full_signature": "@Test public void asUnicodes()", "class_method_signature": "StringUtilsTest.asUnicodes()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "asUnicodes"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "asUnicodes", "parameters": "(String in)", "modifiers": "public static", "return": "String", "signature": "String asUnicodes(String in)", "full_signature": "public static String asUnicodes(String in)", "class_method_signature": "StringUtils.asUnicodes(String in)", "testcase": false, "constructor": false}, {"identifier": "normalizeLineEndings", "parameters": "(String in)", "modifiers": "public static", "return": "String", "signature": "String normalizeLineEndings(String in)", "full_signature": "public static String normalizeLineEndings(String in)", "class_method_signature": "StringUtils.normalizeLineEndings(String in)", "testcase": false, "constructor": false}, {"identifier": "isolateRTLIfRequired", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String isolateRTLIfRequired(String s)", "full_signature": "public static String isolateRTLIfRequired(String s)", "class_method_signature": "StringUtils.isolateRTLIfRequired(String s)", "testcase": false, "constructor": false}, {"identifier": "isRtl", "parameters": "(String string)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRtl(String string)", "full_signature": "public static boolean isRtl(String string)", "class_method_signature": "StringUtils.isRtl(String string)", "testcase": false, "constructor": false}], "file": "sejda-core/src/main/java/org/sejda/core/support/util/StringUtils.java"}, "focal_method": {"identifier": "asUnicodes", "parameters": "(String in)", "modifiers": "public static", "return": "String", "body": "public static String asUnicodes(String in) {\n        if(in == null) return null;\n\n        StringBuilder result = new StringBuilder();\n        for (int offset = 0; offset < in.length(); ) {\n            int codepoint = in.codePointAt(offset);\n            result.append(\"\\\\U+\").append(Integer.toHexString(codepoint).toUpperCase());\n            offset += Character.charCount(codepoint);\n        }\n        return result.toString();\n    }", "signature": "String asUnicodes(String in)", "full_signature": "public static String asUnicodes(String in)", "class_method_signature": "StringUtils.asUnicodes(String in)", "testcase": false, "constructor": false, "invocations": ["length", "codePointAt", "append", "append", "toUpperCase", "toHexString", "charCount", "toString"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}