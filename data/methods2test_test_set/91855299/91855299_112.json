{"test_class": {"identifier": "LayoutModelImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ParentModel parent;", "modifier": "private", "type": "ParentModel", "declarator": "parent", "var_name": "parent"}], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/tab/model/LayoutModelImplTest.java"}, "test_case": {"identifier": "testGetOrCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetOrCreate() {\n    LayoutModel layout = new LayoutModelImpl(\"Layout\", parent, \"List\");\n    WidgetModel widget = layout.getOrCreate(\"/Shuffleboard/Tab/Foo\", DataSource::none, \"\", Collections.emptyMap());\n    assertSame(widget, layout.getChild(\"/Shuffleboard/Tab/Foo\"));\n  }", "signature": "void testGetOrCreate()", "full_signature": "@Test public void testGetOrCreate()", "class_method_signature": "LayoutModelImplTest.testGetOrCreate()", "testcase": true, "constructor": false, "invocations": ["getOrCreate", "emptyMap", "assertSame", "getChild"]}, "focal_class": {"identifier": "LayoutModelImpl", "superclass": "extends ComponentModelImpl", "interfaces": "implements LayoutModel", "fields": [{"original_string": "private final Map<String, LayoutModel> layouts = new HashMap<>();", "modifier": "private final", "type": "Map<String, LayoutModel>", "declarator": "layouts = new HashMap<>()", "var_name": "layouts"}, {"original_string": "private final Map<String, ComponentModel> children = new HashMap<>();", "modifier": "private final", "type": "Map<String, ComponentModel>", "declarator": "children = new HashMap<>()", "var_name": "children"}], "methods": [{"identifier": "LayoutModelImpl", "parameters": "(String path, ParentModel parent, String displayType)", "modifiers": "", "return": "", "signature": " LayoutModelImpl(String path, ParentModel parent, String displayType)", "full_signature": "  LayoutModelImpl(String path, ParentModel parent, String displayType)", "class_method_signature": "LayoutModelImpl.LayoutModelImpl(String path, ParentModel parent, String displayType)", "testcase": false, "constructor": true}, {"identifier": "LayoutModelImpl", "parameters": "(String path, ParentModel parent, String displayType, Map<String, Object> properties)", "modifiers": "", "return": "", "signature": " LayoutModelImpl(String path, ParentModel parent, String displayType, Map<String, Object> properties)", "full_signature": "  LayoutModelImpl(String path, ParentModel parent, String displayType, Map<String, Object> properties)", "class_method_signature": "LayoutModelImpl.LayoutModelImpl(String path, ParentModel parent, String displayType, Map<String, Object> properties)", "testcase": false, "constructor": true}, {"identifier": "getLayout", "parameters": "(String path, String layoutType)", "modifiers": "@Override public", "return": "LayoutModel", "signature": "LayoutModel getLayout(String path, String layoutType)", "full_signature": "@Override public LayoutModel getLayout(String path, String layoutType)", "class_method_signature": "LayoutModelImpl.getLayout(String path, String layoutType)", "testcase": false, "constructor": false}, {"identifier": "getChild", "parameters": "(String path)", "modifiers": "@Override public", "return": "ComponentModel", "signature": "ComponentModel getChild(String path)", "full_signature": "@Override public ComponentModel getChild(String path)", "class_method_signature": "LayoutModelImpl.getChild(String path)", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(ComponentModel component)", "modifiers": "@Override public", "return": "void", "signature": "void addChild(ComponentModel component)", "full_signature": "@Override public void addChild(ComponentModel component)", "class_method_signature": "LayoutModelImpl.addChild(ComponentModel component)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ComponentModel>", "signature": "Map<String, ComponentModel> getChildren()", "full_signature": "@Override public Map<String, ComponentModel> getChildren()", "class_method_signature": "LayoutModelImpl.getChildren()", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/tab/model/LayoutModelImpl.java"}, "focal_method": {"identifier": "getChild", "parameters": "(String path)", "modifiers": "@Override public", "return": "ComponentModel", "body": "@Override\n  public ComponentModel getChild(String path) {\n    if (children.containsKey(path)) {\n      return children.get(path);\n    }\n    return layouts.values().stream()\n        .map(l -> l.getChild(path))\n        .filter(Objects::nonNull)\n        .findFirst()\n        .orElse(null);\n  }", "signature": "ComponentModel getChild(String path)", "full_signature": "@Override public ComponentModel getChild(String path)", "class_method_signature": "LayoutModelImpl.getChild(String path)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "orElse", "findFirst", "filter", "map", "stream", "values", "getChild"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}