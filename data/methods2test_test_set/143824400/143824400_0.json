{"test_class": {"identifier": "ApiServiceTest", "superclass": "extends FrameUcenterApplicationTests", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ApiService apiService;", "modifier": "@Autowired\n    private", "type": "ApiService", "declarator": "apiService", "var_name": "apiService"}], "file": "frame-ucenter/src/test/java/com/blessedbin/frame/ucenter/service/ApiServiceTest.java"}, "test_case": {"identifier": "scanApi", "parameters": "()", "modifiers": "@Test @Transactional public", "return": "void", "body": "@Test\n    @Transactional\n    public void scanApi() {\n        apiService.scanApi();\n    }", "signature": "void scanApi()", "full_signature": "@Test @Transactional public void scanApi()", "class_method_signature": "ApiServiceTest.scanApi()", "testcase": true, "constructor": false, "invocations": ["scanApi"]}, "focal_class": {"identifier": "ApiService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ISysPermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "ISysPermissionService", "declarator": "permissionService", "var_name": "permissionService"}, {"original_string": "@Autowired\n    private ObjectMapper objectMapper;", "modifier": "@Autowired\n    private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "@Autowired\n    private DiscoveryClient discoveryClient;", "modifier": "@Autowired\n    private", "type": "DiscoveryClient", "declarator": "discoveryClient", "var_name": "discoveryClient"}, {"original_string": "private AtomicBoolean scanComplete = new AtomicBoolean(true);", "modifier": "private", "type": "AtomicBoolean", "declarator": "scanComplete = new AtomicBoolean(true)", "var_name": "scanComplete"}], "methods": [{"identifier": "scanApi", "parameters": "()", "modifiers": "@Transactional(rollbackFor = Exception.class) @Async public", "return": "void", "signature": "void scanApi()", "full_signature": "@Transactional(rollbackFor = Exception.class) @Async public void scanApi()", "class_method_signature": "ApiService.scanApi()", "testcase": false, "constructor": false}, {"identifier": "doMethod", "parameters": "(AtomicInteger addPoint, AtomicInteger updatePoint, ServiceInstance instance, String url, Operation operation, String method)", "modifiers": "private", "return": "void", "signature": "void doMethod(AtomicInteger addPoint, AtomicInteger updatePoint, ServiceInstance instance, String url, Operation operation, String method)", "full_signature": "private void doMethod(AtomicInteger addPoint, AtomicInteger updatePoint, ServiceInstance instance, String url, Operation operation, String method)", "class_method_signature": "ApiService.doMethod(AtomicInteger addPoint, AtomicInteger updatePoint, ServiceInstance instance, String url, Operation operation, String method)", "testcase": false, "constructor": false}, {"identifier": "buildApi", "parameters": "(String url, String httpMethod, Operation operation,String serviceId, Integer permissionId)", "modifiers": "private", "return": "SysApi", "signature": "SysApi buildApi(String url, String httpMethod, Operation operation,String serviceId, Integer permissionId)", "full_signature": "private SysApi buildApi(String url, String httpMethod, Operation operation,String serviceId, Integer permissionId)", "class_method_signature": "ApiService.buildApi(String url, String httpMethod, Operation operation,String serviceId, Integer permissionId)", "testcase": false, "constructor": false}, {"identifier": "buildPermission", "parameters": "(Operation operation, String code)", "modifiers": "private", "return": "SysPermission", "signature": "SysPermission buildPermission(Operation operation, String code)", "full_signature": "private SysPermission buildPermission(Operation operation, String code)", "class_method_signature": "ApiService.buildPermission(Operation operation, String code)", "testcase": false, "constructor": false}, {"identifier": "getDataTables", "parameters": "(Integer pageNum, Integer pageSize, List<String> tagList, List<String> serviceIdList)", "modifiers": "public", "return": "Pagination<SysApi>", "signature": "Pagination<SysApi> getDataTables(Integer pageNum, Integer pageSize, List<String> tagList, List<String> serviceIdList)", "full_signature": "public Pagination<SysApi> getDataTables(Integer pageNum, Integer pageSize, List<String> tagList, List<String> serviceIdList)", "class_method_signature": "ApiService.getDataTables(Integer pageNum, Integer pageSize, List<String> tagList, List<String> serviceIdList)", "testcase": false, "constructor": false}, {"identifier": "selectByUuid", "parameters": "(String uuid)", "modifiers": "public", "return": "List<SysApi>", "signature": "List<SysApi> selectByUuid(String uuid)", "full_signature": "public List<SysApi> selectByUuid(String uuid)", "class_method_signature": "ApiService.selectByUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "selectByMenuId", "parameters": "(Integer menuId)", "modifiers": "public", "return": "List<SysApi>", "signature": "List<SysApi> selectByMenuId(Integer menuId)", "full_signature": "public List<SysApi> selectByMenuId(Integer menuId)", "class_method_signature": "ApiService.selectByMenuId(Integer menuId)", "testcase": false, "constructor": false}, {"identifier": "selectAll", "parameters": "()", "modifiers": "public", "return": "List<SysApi>", "signature": "List<SysApi> selectAll()", "full_signature": "public List<SysApi> selectAll()", "class_method_signature": "ApiService.selectAll()", "testcase": false, "constructor": false}, {"identifier": "selectByPk", "parameters": "(Integer permissionId)", "modifiers": "public", "return": "SysApi", "signature": "SysApi selectByPk(Integer permissionId)", "full_signature": "public SysApi selectByPk(Integer permissionId)", "class_method_signature": "ApiService.selectByPk(Integer permissionId)", "testcase": false, "constructor": false}, {"identifier": "getApi", "parameters": "(Integer integer)", "modifiers": "public", "return": "SysApi", "signature": "SysApi getApi(Integer integer)", "full_signature": "public SysApi getApi(Integer integer)", "class_method_signature": "ApiService.getApi(Integer integer)", "testcase": false, "constructor": false}, {"identifier": "getApis", "parameters": "(List<Integer> ids)", "modifiers": "public", "return": "List<SysApi>", "signature": "List<SysApi> getApis(List<Integer> ids)", "full_signature": "public List<SysApi> getApis(List<Integer> ids)", "class_method_signature": "ApiService.getApis(List<Integer> ids)", "testcase": false, "constructor": false}, {"identifier": "toSysApi", "parameters": "(SysPermission permission)", "modifiers": "private", "return": "SysApi", "signature": "SysApi toSysApi(SysPermission permission)", "full_signature": "private SysApi toSysApi(SysPermission permission)", "class_method_signature": "ApiService.toSysApi(SysPermission permission)", "testcase": false, "constructor": false}], "file": "frame-ucenter/src/main/java/com/blessedbin/frame/ucenter/service/ApiService.java"}, "focal_method": {"identifier": "scanApi", "parameters": "()", "modifiers": "@Transactional(rollbackFor = Exception.class) @Async public", "return": "void", "body": "@Transactional(rollbackFor = Exception.class)\n    @Async\n    public void scanApi() {\n\n        synchronized (this){\n            if(!scanComplete.get()){\n                throw new ServiceRuntimeException(\"\u626b\u63cf\u672a\u5b8c\u6210\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5\");\n            }\n            scanComplete.set(false);\n        }\n\n        AtomicInteger addPoint = new AtomicInteger();\n        AtomicInteger updatePoint = new AtomicInteger();\n\n\n        log.info(\"\u5f00\u59cb\u626b\u63cfapi\u5217\u8868\");\n        for(String s: discoveryClient.getServices()){\n            List<ServiceInstance> serviceInstances = discoveryClient.getInstances(s);\n            ServiceInstance instance = serviceInstances.get(0);\n            log.debug(\"\u83b7\u53d6\u5230\u670d\u52a1\uff1a{}\",s);\n\n            // \u5224\u65ad\u670d\u52a1\u662f\u5426\u53ef\u7528\n            URL url1;\n            try {\n                String sUrl = instance.getUri() + \"/v2/api-docs\";\n                url1 = new URL(sUrl);\n                url1.openStream();\n\n                OpenAPI openAPI = new OpenAPIV3Parser().read(sUrl);\n                log.debug(\"\u83b7\u53d6\u5230API\u4fe1\u606f\uff0c\u5f00\u59cb\u5904\u7406.........\");\n\n                openAPI.getPaths().keySet().forEach(url -> {\n                    PathItem path = openAPI.getPaths().get(url);\n\n                    doMethod(addPoint, updatePoint, instance, url, path.getGet(), \"GET\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getPut(), \"PUT\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getPost(), \"POST\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getDelete(), \"DELETE\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getOptions(), \"OPTIONS\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getHead(), \"HEAD\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getPatch(), \"PATCH\");\n                    doMethod(addPoint, updatePoint, instance, url, path.getTrace(), \"TRACE\");\n\n                });\n\n            } catch (Exception e1) {\n                log.debug(\"\u672a\u53d1\u73b0api-docs\uff0c\u8df3\u8fc7,message:{}\",e1.getMessage());\n            }\n        }\n\n        log.debug(\">>> \u65b0\u589e\u6743\u9650\u70b9{}\u4e2a\uff0c\u66f4\u65b0\u6743\u9650\u70b9{}\u4e2a\",addPoint.get(),updatePoint.get());\n        scanComplete.set(true);\n    }", "signature": "void scanApi()", "full_signature": "@Transactional(rollbackFor = Exception.class) @Async public void scanApi()", "class_method_signature": "ApiService.scanApi()", "testcase": false, "constructor": false, "invocations": ["get", "set", "info", "getServices", "getInstances", "get", "debug", "getUri", "openStream", "read", "debug", "forEach", "keySet", "getPaths", "get", "getPaths", "doMethod", "getGet", "doMethod", "getPut", "doMethod", "getPost", "doMethod", "getDelete", "doMethod", "getOptions", "doMethod", "getHead", "doMethod", "getPatch", "doMethod", "getTrace", "debug", ");", "debug", "", "", "set"]}, "repository": {"repo_id": 143824400, "url": "https://github.com/blessedbin/frame", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 2316, "license": "licensed"}}