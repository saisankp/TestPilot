{"test_class": {"identifier": "OpenLSClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String url = \"http://gofre:8081/openLS/\";", "modifier": "private", "type": "String", "declarator": "url = \"http://gofre:8081/openLS/\"", "var_name": "url"}, {"original_string": "private PrecisionModel pm = new PrecisionModel(PrecisionModel.FIXED);", "modifier": "private", "type": "PrecisionModel", "declarator": "pm = new PrecisionModel(PrecisionModel.FIXED)", "var_name": "pm"}, {"original_string": "private GeometryFactory gf = new GeometryFactory(pm, 4326);", "modifier": "private", "type": "GeometryFactory", "declarator": "gf = new GeometryFactory(pm, 4326)", "var_name": "gf"}, {"original_string": "private double x = -3.7055;", "modifier": "private", "type": "double", "declarator": "x = -3.7055", "var_name": "x"}, {"original_string": "private double y = 40.4202;", "modifier": "private", "type": "double", "declarator": "y = 40.4202", "var_name": "y"}, {"original_string": "private Random r = new Random();", "modifier": "private", "type": "Random", "declarator": "r = new Random()", "var_name": "r"}], "file": "client/src/test/java/org/gofleetls/client/OpenLSClientTest.java"}, "test_case": {"identifier": "testPostXML", "parameters": "()", "modifiers": "@Test @SuppressWarnings({ \"restriction\", \"unchecked\" }) public", "return": "void", "body": "@Test\n\t@SuppressWarnings({ \"restriction\", \"unchecked\" })\n\tpublic void testPostXML() throws JAXBException {\n\t\tUnmarshaller m = JAXBContext.newInstance(XLSType.class)\n\t\t\t\t.createUnmarshaller();\n\t\tJAXBElement<XLSType> object = (JAXBElement<XLSType>) m\n\t\t\t\t.unmarshal(OpenLSClientTest.class\n\t\t\t\t\t\t.getResourceAsStream(\"/determineRouteRequest.xml\"));\n\n\t\tassertNotNull(OpenLSClient.post(object.getValue(), url));\n\t}", "signature": "void testPostXML()", "full_signature": "@Test @SuppressWarnings({ \"restriction\", \"unchecked\" }) public void testPostXML()", "class_method_signature": "OpenLSClientTest.testPostXML()", "testcase": true, "constructor": false, "invocations": ["createUnmarshaller", "newInstance", "unmarshal", "getResourceAsStream", "assertNotNull", "post", "getValue"]}, "focal_class": {"identifier": "OpenLSClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final BigInteger BG_2 = BigInteger.valueOf(2l);", "modifier": "private static final", "type": "BigInteger", "declarator": "BG_2 = BigInteger.valueOf(2l)", "var_name": "BG_2"}, {"original_string": "private static Unmarshaller UNMARSHALLER = null;", "modifier": "private static", "type": "Unmarshaller", "declarator": "UNMARSHALLER = null", "var_name": "UNMARSHALLER"}], "methods": [{"identifier": "post", "parameters": "(XLSType parameter, String url)", "modifiers": "@SuppressWarnings({ \"restriction\", \"unchecked\" }) public static", "return": "XLSType", "signature": "XLSType post(XLSType parameter, String url)", "full_signature": "@SuppressWarnings({ \"restriction\", \"unchecked\" }) public static XLSType post(XLSType parameter, String url)", "class_method_signature": "OpenLSClient.post(XLSType parameter, String url)", "testcase": false, "constructor": false}, {"identifier": "determineRoute", "parameters": "(\n\t\t\tDetermineRouteRequestType parameter, String url)", "modifiers": "public static", "return": "DetermineRouteResponseType", "signature": "DetermineRouteResponseType determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url)", "full_signature": "public static DetermineRouteResponseType determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url)", "class_method_signature": "OpenLSClient.determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url)", "testcase": false, "constructor": false}, {"identifier": "determineRoute", "parameters": "(\n\t\t\tDetermineRouteRequestType parameter, String url,\n\t\t\tBigInteger maximumResponses)", "modifiers": "@SuppressWarnings(\"restriction\") public static", "return": "DetermineRouteResponseType", "signature": "DetermineRouteResponseType determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url,\n\t\t\tBigInteger maximumResponses)", "full_signature": "@SuppressWarnings(\"restriction\") public static DetermineRouteResponseType determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url,\n\t\t\tBigInteger maximumResponses)", "class_method_signature": "OpenLSClient.determineRoute(\n\t\t\tDetermineRouteRequestType parameter, String url,\n\t\t\tBigInteger maximumResponses)", "testcase": false, "constructor": false}, {"identifier": "determineRoute", "parameters": "(String url,\n\t\t\tBigInteger maximumResponses, DistanceUnitType distanceUnit,\n\t\t\tRouteGeometryRequestType routeGeometryRequest,\n\t\t\tRouteInstructionsRequestType routeInstructionsRequest,\n\t\t\tRouteHandleType routeHandle, RoutePlanType routePlan,\n\t\t\tRouteMapRequestType routeMapRequest)", "modifiers": "public static", "return": "DetermineRouteResponseType", "signature": "DetermineRouteResponseType determineRoute(String url,\n\t\t\tBigInteger maximumResponses, DistanceUnitType distanceUnit,\n\t\t\tRouteGeometryRequestType routeGeometryRequest,\n\t\t\tRouteInstructionsRequestType routeInstructionsRequest,\n\t\t\tRouteHandleType routeHandle, RoutePlanType routePlan,\n\t\t\tRouteMapRequestType routeMapRequest)", "full_signature": "public static DetermineRouteResponseType determineRoute(String url,\n\t\t\tBigInteger maximumResponses, DistanceUnitType distanceUnit,\n\t\t\tRouteGeometryRequestType routeGeometryRequest,\n\t\t\tRouteInstructionsRequestType routeInstructionsRequest,\n\t\t\tRouteHandleType routeHandle, RoutePlanType routePlan,\n\t\t\tRouteMapRequestType routeMapRequest)", "class_method_signature": "OpenLSClient.determineRoute(String url,\n\t\t\tBigInteger maximumResponses, DistanceUnitType distanceUnit,\n\t\t\tRouteGeometryRequestType routeGeometryRequest,\n\t\t\tRouteInstructionsRequestType routeInstructionsRequest,\n\t\t\tRouteHandleType routeHandle, RoutePlanType routePlan,\n\t\t\tRouteMapRequestType routeMapRequest)", "testcase": false, "constructor": false}, {"identifier": "determineRoute", "parameters": "(String url,\n\t\t\tPoint origin, List<Point> stops)", "modifiers": "public static", "return": "DetermineRouteResponseType", "signature": "DetermineRouteResponseType determineRoute(String url,\n\t\t\tPoint origin, List<Point> stops)", "full_signature": "public static DetermineRouteResponseType determineRoute(String url,\n\t\t\tPoint origin, List<Point> stops)", "class_method_signature": "OpenLSClient.determineRoute(String url,\n\t\t\tPoint origin, List<Point> stops)", "testcase": false, "constructor": false}, {"identifier": "getPoint", "parameters": "(\n\t\t\tPoint point)", "modifiers": "@SuppressWarnings(\"restriction\") private static", "return": "JAXBElement<? extends AbstractLocationType>", "signature": "JAXBElement<? extends AbstractLocationType> getPoint(\n\t\t\tPoint point)", "full_signature": "@SuppressWarnings(\"restriction\") private static JAXBElement<? extends AbstractLocationType> getPoint(\n\t\t\tPoint point)", "class_method_signature": "OpenLSClient.getPoint(\n\t\t\tPoint point)", "testcase": false, "constructor": false}], "file": "client/src/main/java/org/gofleetls/client/OpenLSClient.java"}, "focal_method": {"identifier": "post", "parameters": "(XLSType parameter, String url)", "modifiers": "@SuppressWarnings({ \"restriction\", \"unchecked\" }) public static", "return": "XLSType", "body": "@SuppressWarnings({ \"restriction\", \"unchecked\" })\n\tpublic static XLSType post(XLSType parameter, String url) {\n\n\t\tClient client = Client.create();\n\n\t\tRequestHeaderType header = new RequestHeaderType();\n\n\t\tparameter.setHeader(new JAXBElement<RequestHeaderType>(new QName(\n\t\t\t\t\"http://www.opengis.net/xls\", \"RequestHeader\"),\n\t\t\t\tRequestHeaderType.class, header));\n\n\t\tJAXBElement<XLSType> param = new JAXBElement<XLSType>(new QName(\n\t\t\t\t\"http://www.opengis.net/xls\", \"xls\"), XLSType.class, parameter);\n\n\t\tWebResource resource = client.resource(url);\n\n\t\tGenericType<JAXBElement<XLSType>> xlsType = new GenericType<JAXBElement<XLSType>>() {\n\t\t};\n\n\t\tJAXBElement<XLSType> response = resource\n\t\t\t\t.type(MediaType.APPLICATION_XML).post(xlsType, param);\n\n\t\treturn response.getValue();\n\t}", "signature": "XLSType post(XLSType parameter, String url)", "full_signature": "@SuppressWarnings({ \"restriction\", \"unchecked\" }) public static XLSType post(XLSType parameter, String url)", "class_method_signature": "OpenLSClient.post(XLSType parameter, String url)", "testcase": false, "constructor": false, "invocations": ["create", "setHeader", "resource", "post", "type", "getValue"]}, "repository": {"repo_id": 1830414, "url": "https://github.com/Emergya/GoFleetLSServer", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 6237, "license": "licensed"}}