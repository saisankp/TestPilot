{"test_class": {"identifier": "CategoryOptionComboTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Date jan1;", "modifier": "private", "type": "Date", "declarator": "jan1", "var_name": "jan1"}, {"original_string": "private Date jan2;", "modifier": "private", "type": "Date", "declarator": "jan2", "var_name": "jan2"}, {"original_string": "private Date jan3;", "modifier": "private", "type": "Date", "declarator": "jan3", "var_name": "jan3"}, {"original_string": "private Date jan4;", "modifier": "private", "type": "Date", "declarator": "jan4", "var_name": "jan4"}, {"original_string": "private Date jan5;", "modifier": "private", "type": "Date", "declarator": "jan5", "var_name": "jan5"}, {"original_string": "private Date jan6;", "modifier": "private", "type": "Date", "declarator": "jan6", "var_name": "jan6"}, {"original_string": "private Date jan7;", "modifier": "private", "type": "Date", "declarator": "jan7", "var_name": "jan7"}, {"original_string": "private CategoryOption optionA;", "modifier": "private", "type": "CategoryOption", "declarator": "optionA", "var_name": "optionA"}, {"original_string": "private CategoryOption optionB;", "modifier": "private", "type": "CategoryOption", "declarator": "optionB", "var_name": "optionB"}, {"original_string": "private CategoryOption optionC;", "modifier": "private", "type": "CategoryOption", "declarator": "optionC", "var_name": "optionC"}, {"original_string": "private CategoryOptionCombo optionComboA;", "modifier": "private", "type": "CategoryOptionCombo", "declarator": "optionComboA", "var_name": "optionComboA"}, {"original_string": "private CategoryOptionCombo optionComboB;", "modifier": "private", "type": "CategoryOptionCombo", "declarator": "optionComboB", "var_name": "optionComboB"}, {"original_string": "private CategoryOptionCombo optionComboC;", "modifier": "private", "type": "CategoryOptionCombo", "declarator": "optionComboC", "var_name": "optionComboC"}, {"original_string": "private CategoryCombo categoryComboA;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryComboA", "var_name": "categoryComboA"}, {"original_string": "private CategoryCombo categoryComboB;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryComboB", "var_name": "categoryComboB"}, {"original_string": "private CategoryCombo categoryComboC;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryComboC", "var_name": "categoryComboC"}, {"original_string": "private DataElement dataElement;", "modifier": "private", "type": "DataElement", "declarator": "dataElement", "var_name": "dataElement"}, {"original_string": "private DataSet dataSetA;", "modifier": "private", "type": "DataSet", "declarator": "dataSetA", "var_name": "dataSetA"}, {"original_string": "private DataSet dataSetB;", "modifier": "private", "type": "DataSet", "declarator": "dataSetB", "var_name": "dataSetB"}, {"original_string": "private DataSet dataSetC;", "modifier": "private", "type": "DataSet", "declarator": "dataSetC", "var_name": "dataSetC"}], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/category/CategoryOptionComboTest.java"}, "test_case": {"identifier": "testGetDateRangeDataSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDateRangeDataSet()\n    {\n        DateRange dateRange;\n\n        dateRange = optionComboA.getDateRange( dataSetA ); // [Option combo date range: null] setOpenPeriodsAfterCoEndDate: +0\n        assertNull( dateRange.getStartDate() );\n        assertNull( dateRange.getEndDate() );\n\n        dateRange = optionComboB.getDateRange( dataSetA ); // [Jan 1-4] +0\n        assertEquals( jan1, dateRange.getStartDate() );\n        assertEquals( jan4, dateRange.getEndDate() );\n\n        dateRange = optionComboB.getDateRange( dataSetB ); // [Jan 1-4] +1\n        assertEquals( jan1, dateRange.getStartDate() );\n        assertEquals( jan5, dateRange.getEndDate() );\n\n        dateRange = optionComboB.getDateRange( dataSetC ); // [Jan 1-4] +2\n        assertEquals( jan1, dateRange.getStartDate() );\n        assertEquals( jan6, dateRange.getEndDate() );\n\n        dateRange = optionComboC.getDateRange( dataSetA ); // [null, Jan 1-4, Jan 2-5] +0\n        assertEquals( jan2, dateRange.getStartDate() );\n        assertEquals( jan4, dateRange.getEndDate() );\n\n        dateRange = optionComboC.getDateRange( dataSetB ); // [null, Jan 1-4, Jan 2-5] +1\n        assertEquals( jan2, dateRange.getStartDate() );\n        assertEquals( jan5, dateRange.getEndDate() );\n\n        dateRange = optionComboC.getDateRange( dataSetC ); // [null, Jan 1-4, Jan 2-5] +2\n        assertEquals( jan2, dateRange.getStartDate() );\n        assertEquals( jan6, dateRange.getEndDate() );\n    }", "signature": "void testGetDateRangeDataSet()", "full_signature": "@Test public void testGetDateRangeDataSet()", "class_method_signature": "CategoryOptionComboTest.testGetDateRangeDataSet()", "testcase": true, "constructor": false, "invocations": ["getDateRange", "assertNull", "getStartDate", "assertNull", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate", "getDateRange", "assertEquals", "getStartDate", "assertEquals", "getEndDate"]}, "focal_class": {"identifier": "CategoryOptionCombo", "superclass": "extends BaseDimensionalItemObject", "interfaces": "implements SystemDefaultMetadataObject", "fields": [{"original_string": "public static final String DEFAULT_NAME = \"default\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_NAME = \"default\"", "var_name": "DEFAULT_NAME"}, {"original_string": "public static final String DEFAULT_TOSTRING = \"(default)\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_TOSTRING = \"(default)\"", "var_name": "DEFAULT_TOSTRING"}, {"original_string": "private CategoryCombo categoryCombo;", "modifier": "private", "type": "CategoryCombo", "declarator": "categoryCombo", "var_name": "categoryCombo"}, {"original_string": "private Set<CategoryOption> categoryOptions = new HashSet<>();", "modifier": "private", "type": "Set<CategoryOption>", "declarator": "categoryOptions = new HashSet<>()", "var_name": "categoryOptions"}, {"original_string": "private boolean ignoreApproval;", "modifier": "private", "type": "boolean", "declarator": "ignoreApproval", "var_name": "ignoreApproval"}], "methods": [{"identifier": "CategoryOptionCombo", "parameters": "()", "modifiers": "public", "return": "", "signature": " CategoryOptionCombo()", "full_signature": "public  CategoryOptionCombo()", "class_method_signature": "CategoryOptionCombo.CategoryOptionCombo()", "testcase": false, "constructor": true}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CategoryOptionCombo.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object object )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object object )", "full_signature": "@Override public boolean equals( Object object )", "class_method_signature": "CategoryOptionCombo.equals( Object object )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CategoryOptionCombo.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCodeIdentifiableObject", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCodeIdentifiableObject()", "full_signature": "public int hashCodeIdentifiableObject()", "class_method_signature": "CategoryOptionCombo.hashCodeIdentifiableObject()", "testcase": false, "constructor": false}, {"identifier": "equalsIdentifiableObject", "parameters": "( Object object )", "modifiers": "public", "return": "boolean", "signature": "boolean equalsIdentifiableObject( Object object )", "full_signature": "public boolean equalsIdentifiableObject( Object object )", "class_method_signature": "CategoryOptionCombo.equalsIdentifiableObject( Object object )", "testcase": false, "constructor": false}, {"identifier": "addCategoryOption", "parameters": "( CategoryOption dataElementCategoryOption )", "modifiers": "public", "return": "void", "signature": "void addCategoryOption( CategoryOption dataElementCategoryOption )", "full_signature": "public void addCategoryOption( CategoryOption dataElementCategoryOption )", "class_method_signature": "CategoryOptionCombo.addCategoryOption( CategoryOption dataElementCategoryOption )", "testcase": false, "constructor": false}, {"identifier": "removeCategoryOption", "parameters": "( CategoryOption dataElementCategoryOption )", "modifiers": "public", "return": "void", "signature": "void removeCategoryOption( CategoryOption dataElementCategoryOption )", "full_signature": "public void removeCategoryOption( CategoryOption dataElementCategoryOption )", "class_method_signature": "CategoryOptionCombo.removeCategoryOption( CategoryOption dataElementCategoryOption )", "testcase": false, "constructor": false}, {"identifier": "removeAllCategoryOptions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllCategoryOptions()", "full_signature": "public void removeAllCategoryOptions()", "class_method_signature": "CategoryOptionCombo.removeAllCategoryOptions()", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefault()", "full_signature": "@Override public boolean isDefault()", "class_method_signature": "CategoryOptionCombo.isDefault()", "testcase": false, "constructor": false}, {"identifier": "getDateRange", "parameters": "( DataSet dataSet )", "modifiers": "public", "return": "DateRange", "signature": "DateRange getDateRange( DataSet dataSet )", "full_signature": "public DateRange getDateRange( DataSet dataSet )", "class_method_signature": "CategoryOptionCombo.getDateRange( DataSet dataSet )", "testcase": false, "constructor": false}, {"identifier": "getDateRange", "parameters": "( DataElement dataElement )", "modifiers": "public", "return": "DateRange", "signature": "DateRange getDateRange( DataElement dataElement )", "full_signature": "public DateRange getDateRange( DataElement dataElement )", "class_method_signature": "CategoryOptionCombo.getDateRange( DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "getOrganisationUnits", "parameters": "()", "modifiers": "public", "return": "Set<OrganisationUnit>", "signature": "Set<OrganisationUnit> getOrganisationUnits()", "full_signature": "public Set<OrganisationUnit> getOrganisationUnits()", "class_method_signature": "CategoryOptionCombo.getOrganisationUnits()", "testcase": false, "constructor": false}, {"identifier": "getLatestStartDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getLatestStartDate()", "full_signature": "public Date getLatestStartDate()", "class_method_signature": "CategoryOptionCombo.getLatestStartDate()", "testcase": false, "constructor": false}, {"identifier": "getEarliestEndDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getEarliestEndDate()", "full_signature": "public Date getEarliestEndDate()", "class_method_signature": "CategoryOptionCombo.getEarliestEndDate()", "testcase": false, "constructor": false}, {"identifier": "getDateRange", "parameters": "( DataSet dataSet, DataElement dataElement )", "modifiers": "private", "return": "DateRange", "signature": "DateRange getDateRange( DataSet dataSet, DataElement dataElement )", "full_signature": "private DateRange getDateRange( DataSet dataSet, DataElement dataElement )", "class_method_signature": "CategoryOptionCombo.getDateRange( DataSet dataSet, DataElement dataElement )", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "CategoryOptionCombo.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "( String name )", "modifiers": "@Override public", "return": "void", "signature": "void setName( String name )", "full_signature": "@Override public void setName( String name )", "class_method_signature": "CategoryOptionCombo.setName( String name )", "testcase": false, "constructor": false}, {"identifier": "getShortName", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "String", "signature": "String getShortName()", "full_signature": "@Override @JsonIgnore public String getShortName()", "class_method_signature": "CategoryOptionCombo.getShortName()", "testcase": false, "constructor": false}, {"identifier": "setShortName", "parameters": "( String shortName )", "modifiers": "@Override public", "return": "void", "signature": "void setShortName( String shortName )", "full_signature": "@Override public void setShortName( String shortName )", "class_method_signature": "CategoryOptionCombo.setShortName( String shortName )", "testcase": false, "constructor": false}, {"identifier": "getCategoryCombo", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "CategoryCombo", "signature": "CategoryCombo getCategoryCombo()", "full_signature": "@JsonProperty @JsonSerialize( as = BaseIdentifiableObject.class ) @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public CategoryCombo getCategoryCombo()", "class_method_signature": "CategoryOptionCombo.getCategoryCombo()", "testcase": false, "constructor": false}, {"identifier": "setCategoryCombo", "parameters": "( CategoryCombo categoryCombo )", "modifiers": "public", "return": "void", "signature": "void setCategoryCombo( CategoryCombo categoryCombo )", "full_signature": "public void setCategoryCombo( CategoryCombo categoryCombo )", "class_method_signature": "CategoryOptionCombo.setCategoryCombo( CategoryCombo categoryCombo )", "testcase": false, "constructor": false}, {"identifier": "getCategoryOptions", "parameters": "()", "modifiers": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"categoryOptions\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"categoryOption\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Set<CategoryOption>", "signature": "Set<CategoryOption> getCategoryOptions()", "full_signature": "@JsonProperty @JsonSerialize( contentAs = BaseIdentifiableObject.class ) @JacksonXmlElementWrapper( localName = \"categoryOptions\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"categoryOption\", namespace = DxfNamespaces.DXF_2_0 ) public Set<CategoryOption> getCategoryOptions()", "class_method_signature": "CategoryOptionCombo.getCategoryOptions()", "testcase": false, "constructor": false}, {"identifier": "setCategoryOptions", "parameters": "( Set<CategoryOption> categoryOptions )", "modifiers": "public", "return": "void", "signature": "void setCategoryOptions( Set<CategoryOption> categoryOptions )", "full_signature": "public void setCategoryOptions( Set<CategoryOption> categoryOptions )", "class_method_signature": "CategoryOptionCombo.setCategoryOptions( Set<CategoryOption> categoryOptions )", "testcase": false, "constructor": false}, {"identifier": "isIgnoreApproval", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isIgnoreApproval()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isIgnoreApproval()", "class_method_signature": "CategoryOptionCombo.isIgnoreApproval()", "testcase": false, "constructor": false}, {"identifier": "setIgnoreApproval", "parameters": "( boolean ignoreApproval )", "modifiers": "public", "return": "void", "signature": "void setIgnoreApproval( boolean ignoreApproval )", "full_signature": "public void setIgnoreApproval( boolean ignoreApproval )", "class_method_signature": "CategoryOptionCombo.setIgnoreApproval( boolean ignoreApproval )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/category/CategoryOptionCombo.java"}, "focal_method": {"identifier": "getDateRange", "parameters": "( DataSet dataSet )", "modifiers": "public", "return": "DateRange", "body": "public DateRange getDateRange( DataSet dataSet )\n    {\n        return getDateRange( dataSet, null );\n    }", "signature": "DateRange getDateRange( DataSet dataSet )", "full_signature": "public DateRange getDateRange( DataSet dataSet )", "class_method_signature": "CategoryOptionCombo.getDateRange( DataSet dataSet )", "testcase": false, "constructor": false, "invocations": ["getDateRange"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}