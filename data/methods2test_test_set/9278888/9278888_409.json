{"test_class": {"identifier": "TracingMessageListenerTest", "superclass": "extends ITJms", "interfaces": "", "fields": [{"original_string": "TraceContext parent = newTraceContext(SamplingFlags.SAMPLED);", "modifier": "", "type": "TraceContext", "declarator": "parent = newTraceContext(SamplingFlags.SAMPLED)", "var_name": "parent"}, {"original_string": "MessageListener delegate = mock(MessageListener.class);", "modifier": "", "type": "MessageListener", "declarator": "delegate = mock(MessageListener.class)", "var_name": "delegate"}, {"original_string": "MessageListener tracingMessageListener =\n    new TracingMessageListener(delegate, jmsTracing, true);", "modifier": "", "type": "MessageListener", "declarator": "tracingMessageListener =\n    new TracingMessageListener(delegate, jmsTracing, true)", "var_name": "tracingMessageListener"}], "file": "instrumentation/jms/src/test/java/brave/jms/TracingMessageListenerTest.java"}, "test_case": {"identifier": "null_listener_if_delegate_is_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void null_listener_if_delegate_is_null() {\n    assertThat(TracingMessageListener.create(null, jmsTracing))\n      .isNull();\n  }", "signature": "void null_listener_if_delegate_is_null()", "full_signature": "@Test public void null_listener_if_delegate_is_null()", "class_method_signature": "TracingMessageListenerTest.null_listener_if_delegate_is_null()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "create"]}, "focal_class": {"identifier": "TracingMessageListener", "superclass": "", "interfaces": "implements MessageListener", "fields": [{"original_string": "final MessageListener delegate;", "modifier": "final", "type": "MessageListener", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "final JmsTracing jmsTracing;", "modifier": "final", "type": "JmsTracing", "declarator": "jmsTracing", "var_name": "jmsTracing"}, {"original_string": "final Tracing tracing;", "modifier": "final", "type": "Tracing", "declarator": "tracing", "var_name": "tracing"}, {"original_string": "final Tracer tracer;", "modifier": "final", "type": "Tracer", "declarator": "tracer", "var_name": "tracer"}, {"original_string": "final Extractor<MessageConsumerRequest> extractor;", "modifier": "final", "type": "Extractor<MessageConsumerRequest>", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "final Injector<MessageConsumerRequest> injector;", "modifier": "final", "type": "Injector<MessageConsumerRequest>", "declarator": "injector", "var_name": "injector"}, {"original_string": "final SamplerFunction<MessagingRequest> sampler;", "modifier": "final", "type": "SamplerFunction<MessagingRequest>", "declarator": "sampler", "var_name": "sampler"}, {"original_string": "final String remoteServiceName;", "modifier": "final", "type": "String", "declarator": "remoteServiceName", "var_name": "remoteServiceName"}, {"original_string": "final boolean addConsumerSpan;", "modifier": "final", "type": "boolean", "declarator": "addConsumerSpan", "var_name": "addConsumerSpan"}], "methods": [{"identifier": "create", "parameters": "(MessageListener delegate, JmsTracing jmsTracing)", "modifiers": "static", "return": "MessageListener", "signature": "MessageListener create(MessageListener delegate, JmsTracing jmsTracing)", "full_signature": "static MessageListener create(MessageListener delegate, JmsTracing jmsTracing)", "class_method_signature": "TracingMessageListener.create(MessageListener delegate, JmsTracing jmsTracing)", "testcase": false, "constructor": false}, {"identifier": "TracingMessageListener", "parameters": "(MessageListener delegate, JmsTracing jmsTracing, boolean addConsumerSpan)", "modifiers": "", "return": "", "signature": " TracingMessageListener(MessageListener delegate, JmsTracing jmsTracing, boolean addConsumerSpan)", "full_signature": "  TracingMessageListener(MessageListener delegate, JmsTracing jmsTracing, boolean addConsumerSpan)", "class_method_signature": "TracingMessageListener.TracingMessageListener(MessageListener delegate, JmsTracing jmsTracing, boolean addConsumerSpan)", "testcase": false, "constructor": true}, {"identifier": "onMessage", "parameters": "(Message message)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(Message message)", "full_signature": "@Override public void onMessage(Message message)", "class_method_signature": "TracingMessageListener.onMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "startMessageListenerSpan", "parameters": "(Message message)", "modifiers": "", "return": "Span", "signature": "Span startMessageListenerSpan(Message message)", "full_signature": " Span startMessageListenerSpan(Message message)", "class_method_signature": "TracingMessageListener.startMessageListenerSpan(Message message)", "testcase": false, "constructor": false}], "file": "instrumentation/jms/src/main/java/brave/jms/TracingMessageListener.java"}, "focal_method": {"identifier": "create", "parameters": "(MessageListener delegate, JmsTracing jmsTracing)", "modifiers": "static", "return": "MessageListener", "body": "static MessageListener create(MessageListener delegate, JmsTracing jmsTracing) {\n    if (delegate == null) return null;\n    if (delegate instanceof TracingMessageListener) return delegate;\n    return new TracingMessageListener(delegate, jmsTracing, true);\n  }", "signature": "MessageListener create(MessageListener delegate, JmsTracing jmsTracing)", "full_signature": "static MessageListener create(MessageListener delegate, JmsTracing jmsTracing)", "class_method_signature": "TracingMessageListener.create(MessageListener delegate, JmsTracing jmsTracing)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}