{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/util/StringUtilsTest.java"}, "test_case": {"identifier": "whenInputIsStringListShouldJoinStrings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenInputIsStringListShouldJoinStrings() {\n        List<String> list = Arrays.asList(\"a\", \"b\", \"c\");\n\n        String result = StringUtils.join(list, \";\");\n\n        assertThat(result, is(\"a;b;c\"));\n    }", "signature": "void whenInputIsStringListShouldJoinStrings()", "full_signature": "@Test public void whenInputIsStringListShouldJoinStrings()", "class_method_signature": "StringUtilsTest.whenInputIsStringListShouldJoinStrings()", "testcase": true, "constructor": false, "invocations": ["asList", "join", "assertThat", "is"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "join", "parameters": "(List<String> list, String separator)", "modifiers": "public static", "return": "String", "signature": "String join(List<String> list, String separator)", "full_signature": "public static String join(List<String> list, String separator)", "class_method_signature": "StringUtils.join(List<String> list, String separator)", "testcase": false, "constructor": false}, {"identifier": "convertToUUIDString", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String convertToUUIDString(String value)", "full_signature": "public static String convertToUUIDString(String value)", "class_method_signature": "StringUtils.convertToUUIDString(String value)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/util/StringUtils.java"}, "focal_method": {"identifier": "join", "parameters": "(List<String> list, String separator)", "modifiers": "public static", "return": "String", "body": "public static String join(List<String> list, String separator) {\n        if (list == null || list.size() == 0) {\n            return \"\";\n        }\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(list.get(0));\n\n        for (int i = 1; i < list.size(); i++) {\n            sb.append(separator).append(list.get(i));\n        }\n\n        return sb.toString();\n    }", "signature": "String join(List<String> list, String separator)", "full_signature": "public static String join(List<String> list, String separator)", "class_method_signature": "StringUtils.join(List<String> list, String separator)", "testcase": false, "constructor": false, "invocations": ["size", "append", "get", "size", "append", "append", "get", "toString"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}