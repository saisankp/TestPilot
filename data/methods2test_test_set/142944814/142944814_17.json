{"test_class": {"identifier": "WalletApiFactoryTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "client/wallet/src/test/java/hera/wallet/WalletApiFactoryTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreate() {\n    final KeyStore keyStore = new InMemoryKeyStore();\n    final WalletApiFactory walletApiFactory = new WalletApiFactory();\n    assertNotNull(walletApiFactory.create(keyStore));\n    assertNotNull(walletApiFactory.create(keyStore, 3, 100L));\n    assertNotNull(walletApiFactory.create(keyStore, TryCountAndInterval.of(3, Time.of(100L))));\n  }", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "WalletApiFactoryTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "create", "assertNotNull", "create", "assertNotNull", "create", "of", "of"]}, "focal_class": {"identifier": "WalletApiFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final TryCountAndInterval DEFAULT_TRY_COUNT_AND_INTERVAL = TryCountAndInterval\n      .of(3, Time.of(100L));", "modifier": "public static final", "type": "TryCountAndInterval", "declarator": "DEFAULT_TRY_COUNT_AND_INTERVAL = TryCountAndInterval\n      .of(3, Time.of(100L))", "var_name": "DEFAULT_TRY_COUNT_AND_INTERVAL"}], "methods": [{"identifier": "create", "parameters": "(final hera.keystore.KeyStore keyStore)", "modifiers": "public", "return": "WalletApi", "signature": "WalletApi create(final hera.keystore.KeyStore keyStore)", "full_signature": "public WalletApi create(final hera.keystore.KeyStore keyStore)", "class_method_signature": "WalletApiFactory.create(final hera.keystore.KeyStore keyStore)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final hera.keystore.KeyStore keyStore, final int retryCount,\n      final long retryInterval)", "modifiers": "public", "return": "WalletApi", "signature": "WalletApi create(final hera.keystore.KeyStore keyStore, final int retryCount,\n      final long retryInterval)", "full_signature": "public WalletApi create(final hera.keystore.KeyStore keyStore, final int retryCount,\n      final long retryInterval)", "class_method_signature": "WalletApiFactory.create(final hera.keystore.KeyStore keyStore, final int retryCount,\n      final long retryInterval)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final hera.keystore.KeyStore keyStore,\n      final TryCountAndInterval tryCountAndInterval)", "modifiers": "public", "return": "WalletApi", "signature": "WalletApi create(final hera.keystore.KeyStore keyStore,\n      final TryCountAndInterval tryCountAndInterval)", "full_signature": "public WalletApi create(final hera.keystore.KeyStore keyStore,\n      final TryCountAndInterval tryCountAndInterval)", "class_method_signature": "WalletApiFactory.create(final hera.keystore.KeyStore keyStore,\n      final TryCountAndInterval tryCountAndInterval)", "testcase": false, "constructor": false}], "file": "client/wallet/src/main/java/hera/wallet/WalletApiFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(final hera.keystore.KeyStore keyStore)", "modifiers": "public", "return": "WalletApi", "body": "public WalletApi create(final hera.keystore.KeyStore keyStore) {\n    return create(keyStore, DEFAULT_TRY_COUNT_AND_INTERVAL);\n  }", "signature": "WalletApi create(final hera.keystore.KeyStore keyStore)", "full_signature": "public WalletApi create(final hera.keystore.KeyStore keyStore)", "class_method_signature": "WalletApiFactory.create(final hera.keystore.KeyStore keyStore)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}