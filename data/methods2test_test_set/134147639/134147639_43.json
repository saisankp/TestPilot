{"test_class": {"identifier": "ECUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-util/src/test/java/com/webauthn4j/util/ECUtilTest.java"}, "test_case": {"identifier": "createKeyPair_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void createKeyPair_test() {\n        KeyPair keyPair = ECUtil.createKeyPair();\n        assertThat(keyPair).isNotNull();\n    }", "signature": "void createKeyPair_test()", "full_signature": "@Test void createKeyPair_test()", "class_method_signature": "ECUtilTest.createKeyPair_test()", "testcase": true, "constructor": false, "invocations": ["createKeyPair", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "ECUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final ECParameterSpec P_256_SPEC = createECParameterSpec(\"secp256r1\");", "modifier": "public static final", "type": "ECParameterSpec", "declarator": "P_256_SPEC = createECParameterSpec(\"secp256r1\")", "var_name": "P_256_SPEC"}, {"original_string": "public static final ECParameterSpec P_384_SPEC = createECParameterSpec(\"secp384r1\");", "modifier": "public static final", "type": "ECParameterSpec", "declarator": "P_384_SPEC = createECParameterSpec(\"secp384r1\")", "var_name": "P_384_SPEC"}, {"original_string": "public static final ECParameterSpec P_521_SPEC = createECParameterSpec(\"secp521r1\");", "modifier": "public static final", "type": "ECParameterSpec", "declarator": "P_521_SPEC = createECParameterSpec(\"secp521r1\")", "var_name": "P_521_SPEC"}, {"original_string": "private static final SecureRandom secureRandom = new SecureRandom();", "modifier": "private static final", "type": "SecureRandom", "declarator": "secureRandom = new SecureRandom()", "var_name": "secureRandom"}], "methods": [{"identifier": "ECUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ECUtil()", "full_signature": "private  ECUtil()", "class_method_signature": "ECUtil.ECUtil()", "testcase": false, "constructor": true}, {"identifier": "createUncompressedPublicKey", "parameters": "(ECPublicKey ecPublicKey)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createUncompressedPublicKey(ECPublicKey ecPublicKey)", "full_signature": "public static byte[] createUncompressedPublicKey(ECPublicKey ecPublicKey)", "class_method_signature": "ECUtil.createUncompressedPublicKey(ECPublicKey ecPublicKey)", "testcase": false, "constructor": false}, {"identifier": "convertToFixedByteArray", "parameters": "(BigInteger value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertToFixedByteArray(BigInteger value)", "full_signature": "public static byte[] convertToFixedByteArray(BigInteger value)", "class_method_signature": "ECUtil.convertToFixedByteArray(BigInteger value)", "testcase": false, "constructor": false}, {"identifier": "convertToFixedByteArray", "parameters": "(int fixedSize, BigInteger value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertToFixedByteArray(int fixedSize, BigInteger value)", "full_signature": "public static byte[] convertToFixedByteArray(int fixedSize, BigInteger value)", "class_method_signature": "ECUtil.convertToFixedByteArray(int fixedSize, BigInteger value)", "testcase": false, "constructor": false}, {"identifier": "createKeyPair", "parameters": "()", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair createKeyPair()", "full_signature": "public static KeyPair createKeyPair()", "class_method_signature": "ECUtil.createKeyPair()", "testcase": false, "constructor": false}, {"identifier": "createPublicKey", "parameters": "(ECPublicKeySpec ecPublicKeySpec)", "modifiers": "public static", "return": "PublicKey", "signature": "PublicKey createPublicKey(ECPublicKeySpec ecPublicKeySpec)", "full_signature": "public static PublicKey createPublicKey(ECPublicKeySpec ecPublicKeySpec)", "class_method_signature": "ECUtil.createPublicKey(ECPublicKeySpec ecPublicKeySpec)", "testcase": false, "constructor": false}, {"identifier": "createPrivateKey", "parameters": "(ECPrivateKeySpec ecPrivateKeySpec)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey createPrivateKey(ECPrivateKeySpec ecPrivateKeySpec)", "full_signature": "public static PrivateKey createPrivateKey(ECPrivateKeySpec ecPrivateKeySpec)", "class_method_signature": "ECUtil.createPrivateKey(ECPrivateKeySpec ecPrivateKeySpec)", "testcase": false, "constructor": false}, {"identifier": "createKeyPairGenerator", "parameters": "()", "modifiers": "private static", "return": "KeyPairGenerator", "signature": "KeyPairGenerator createKeyPairGenerator()", "full_signature": "private static KeyPairGenerator createKeyPairGenerator()", "class_method_signature": "ECUtil.createKeyPairGenerator()", "testcase": false, "constructor": false}, {"identifier": "createKeyPair", "parameters": "(byte[] seed, ECParameterSpec ecParameterSpec)", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair createKeyPair(byte[] seed, ECParameterSpec ecParameterSpec)", "full_signature": "public static KeyPair createKeyPair(byte[] seed, ECParameterSpec ecParameterSpec)", "class_method_signature": "ECUtil.createKeyPair(byte[] seed, ECParameterSpec ecParameterSpec)", "testcase": false, "constructor": false}, {"identifier": "createKeyPair", "parameters": "(byte[] seed)", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair createKeyPair(byte[] seed)", "full_signature": "public static KeyPair createKeyPair(byte[] seed)", "class_method_signature": "ECUtil.createKeyPair(byte[] seed)", "testcase": false, "constructor": false}, {"identifier": "createKeyPair", "parameters": "(ECParameterSpec ecParameterSpec)", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair createKeyPair(ECParameterSpec ecParameterSpec)", "full_signature": "public static KeyPair createKeyPair(ECParameterSpec ecParameterSpec)", "class_method_signature": "ECUtil.createKeyPair(ECParameterSpec ecParameterSpec)", "testcase": false, "constructor": false}, {"identifier": "createPublicKeyFromUncompressed", "parameters": "(byte[] publicKey)", "modifiers": "public static", "return": "PublicKey", "signature": "PublicKey createPublicKeyFromUncompressed(byte[] publicKey)", "full_signature": "public static PublicKey createPublicKeyFromUncompressed(byte[] publicKey)", "class_method_signature": "ECUtil.createPublicKeyFromUncompressed(byte[] publicKey)", "testcase": false, "constructor": false}, {"identifier": "createPublicKey", "parameters": "(byte[] x, byte[] y)", "modifiers": "private static", "return": "PublicKey", "signature": "PublicKey createPublicKey(byte[] x, byte[] y)", "full_signature": "private static PublicKey createPublicKey(byte[] x, byte[] y)", "class_method_signature": "ECUtil.createPublicKey(byte[] x, byte[] y)", "testcase": false, "constructor": false}, {"identifier": "createECPoint", "parameters": "(byte[] publicKey)", "modifiers": "private static", "return": "ECPoint", "signature": "ECPoint createECPoint(byte[] publicKey)", "full_signature": "private static ECPoint createECPoint(byte[] publicKey)", "class_method_signature": "ECUtil.createECPoint(byte[] publicKey)", "testcase": false, "constructor": false}, {"identifier": "createECParameterSpec", "parameters": "(String name)", "modifiers": "private static", "return": "ECParameterSpec", "signature": "ECParameterSpec createECParameterSpec(String name)", "full_signature": "private static ECParameterSpec createECParameterSpec(String name)", "class_method_signature": "ECUtil.createECParameterSpec(String name)", "testcase": false, "constructor": false}], "file": "webauthn4j-util/src/main/java/com/webauthn4j/util/ECUtil.java"}, "focal_method": {"identifier": "createKeyPair", "parameters": "()", "modifiers": "public static", "return": "KeyPair", "body": "public static KeyPair createKeyPair() {\n        return createKeyPair((byte[]) null);\n    }", "signature": "KeyPair createKeyPair()", "full_signature": "public static KeyPair createKeyPair()", "class_method_signature": "ECUtil.createKeyPair()", "testcase": false, "constructor": false, "invocations": ["createKeyPair"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}