{"test_class": {"identifier": "TestMBeanValueConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MBeanValueConverter converter;", "modifier": "private", "type": "MBeanValueConverter", "declarator": "converter", "var_name": "converter"}], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/jmx/TestMBeanValueConverter.java"}, "test_case": {"identifier": "testBooleanValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBooleanValue() throws Exception {\n        assertEquals(true, converter.convertParameterValue(\"booleanValue\", \"boolean\"));\n    }", "signature": "void testBooleanValue()", "full_signature": "@Test public void testBooleanValue()", "class_method_signature": "TestMBeanValueConverter.testBooleanValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "convertParameterValue"]}, "focal_class": {"identifier": "MBeanValueConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, String[]> parameterMap;", "modifier": "private", "type": "Map<String, String[]>", "declarator": "parameterMap", "var_name": "parameterMap"}], "methods": [{"identifier": "MBeanValueConverter", "parameters": "(Map<String, String[]> parameterMap)", "modifiers": "public", "return": "", "signature": " MBeanValueConverter(Map<String, String[]> parameterMap)", "full_signature": "public  MBeanValueConverter(Map<String, String[]> parameterMap)", "class_method_signature": "MBeanValueConverter.MBeanValueConverter(Map<String, String[]> parameterMap)", "testcase": false, "constructor": true}, {"identifier": "convertParameterValue", "parameters": "(String parameterName, String type)", "modifiers": "public", "return": "Object", "signature": "Object convertParameterValue(String parameterName, String type)", "full_signature": "public Object convertParameterValue(String parameterName, String type)", "class_method_signature": "MBeanValueConverter.convertParameterValue(String parameterName, String type)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/jmx/MBeanValueConverter.java"}, "focal_method": {"identifier": "convertParameterValue", "parameters": "(String parameterName, String type)", "modifiers": "public", "return": "Object", "body": "public Object convertParameterValue(String parameterName, String type)\n            throws NumberFormatException, UnhandledParameterTypeException {\n        String[] valueList = parameterMap.get(parameterName);\n        if (valueList == null || valueList.length == 0) return null;\n        String value = valueList[0];\n        if (value.equals(\"<null>\")) return null;\n        if (type.equals(\"java.lang.String\")) return value;\n        if (type.equals(\"boolean\")) return Boolean.parseBoolean(value);\n        if (type.equals(\"int\")) return Integer.parseInt(value);\n        if (type.equals(\"long\")) return Long.parseLong(value);\n        if (type.equals(\"float\")) return Float.parseFloat(value);\n        if (type.equals(\"double\")) return Double.parseDouble(value);\n\n        throw new UnhandledParameterTypeException(\"Cannot convert \" + value + \" into type \" + type +\n                \" for parameter \" + parameterName);\n    }", "signature": "Object convertParameterValue(String parameterName, String type)", "full_signature": "public Object convertParameterValue(String parameterName, String type)", "class_method_signature": "MBeanValueConverter.convertParameterValue(String parameterName, String type)", "testcase": false, "constructor": false, "invocations": ["get", "equals", "equals", "equals", "parseBoolean", "equals", "parseInt", "equals", "parseLong", "equals", "parseFloat", "equals", "parseDouble"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}