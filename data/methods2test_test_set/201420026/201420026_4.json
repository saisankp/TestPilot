{"test_class": {"identifier": "LideaServiceDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaServiceDAO lideaServiceDAO;", "modifier": "@Resource\n    private", "type": "LideaServiceDAO", "declarator": "lideaServiceDAO", "var_name": "lideaServiceDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaServiceDAOTest.java"}, "test_case": {"identifier": "scan", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void scan() {\n\n        LideaServiceReq req = new LideaServiceReq();\n        req.setAppName(\"cabinet-base-server\");\n\n        List<LideaServiceBO> list = lideaServiceDAO.scan(req);\n\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(list));\n\n    }", "signature": "void scan()", "full_signature": "@Test public void scan()", "class_method_signature": "LideaServiceDAOTest.scan()", "testcase": true, "constructor": false, "invocations": ["setAppName", "scan", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaServiceDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaServiceBO bo)", "modifiers": "public", "return": "LideaServiceBO", "signature": "LideaServiceBO put(LideaServiceBO bo)", "full_signature": "public LideaServiceBO put(LideaServiceBO bo)", "class_method_signature": "LideaServiceDAO.put(LideaServiceBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaServiceReq req)", "modifiers": "public", "return": "List<LideaServiceBO>", "signature": "List<LideaServiceBO> scan(LideaServiceReq req)", "full_signature": "public List<LideaServiceBO> scan(LideaServiceReq req)", "class_method_signature": "LideaServiceDAO.scan(LideaServiceReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaServiceDAO.java"}, "focal_method": {"identifier": "scan", "parameters": "(LideaServiceReq req)", "modifiers": "public", "return": "List<LideaServiceBO>", "body": "public List<LideaServiceBO> scan(LideaServiceReq req) {\n\n        Scan scan = new Scan();\n        scan.setCaching(50);\n        scan.addFamily(Const.LIDEA_LOG_FEMILY);\n        scan.setFilter(new PrefixFilter(req.getAppName().getBytes()));\n\n        return hbaseTemplate.find(Const.LIDEA_SERVICE_TABLE, scan, new LideaServiceResultsExtractor());\n    }", "signature": "List<LideaServiceBO> scan(LideaServiceReq req)", "full_signature": "public List<LideaServiceBO> scan(LideaServiceReq req)", "class_method_signature": "LideaServiceDAO.scan(LideaServiceReq req)", "testcase": false, "constructor": false, "invocations": ["setCaching", "addFamily", "setFilter", "getBytes", "getAppName", "find"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}