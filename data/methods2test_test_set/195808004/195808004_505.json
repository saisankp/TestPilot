{"test_class": {"identifier": "TestClientRMService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(TestClientRMService.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(TestClientRMService.class)", "var_name": "LOG"}, {"original_string": "private RecordFactory recordFactory = RecordFactoryProvider\n      .getRecordFactory(null);", "modifier": "private", "type": "RecordFactory", "declarator": "recordFactory = RecordFactoryProvider\n      .getRecordFactory(null)", "var_name": "recordFactory"}, {"original_string": "private String appType = \"MockApp\";", "modifier": "private", "type": "String", "declarator": "appType = \"MockApp\"", "var_name": "appType"}, {"original_string": "private static RMDelegationTokenSecretManager dtsm;", "modifier": "private static", "type": "RMDelegationTokenSecretManager", "declarator": "dtsm", "var_name": "dtsm"}, {"original_string": "private final static String QUEUE_1 = \"Q-1\";", "modifier": "private final static", "type": "String", "declarator": "QUEUE_1 = \"Q-1\"", "var_name": "QUEUE_1"}, {"original_string": "private final static String QUEUE_2 = \"Q-2\";", "modifier": "private final static", "type": "String", "declarator": "QUEUE_2 = \"Q-2\"", "var_name": "QUEUE_2"}, {"original_string": "private final static String kerberosRule = \"RULE:[1:$1@$0](.*@EXAMPLE.COM)s/@.*//\\nDEFAULT\";", "modifier": "private final static", "type": "String", "declarator": "kerberosRule = \"RULE:[1:$1@$0](.*@EXAMPLE.COM)s/@.*//\\nDEFAULT\"", "var_name": "kerberosRule"}, {"original_string": "private static final UserGroupInformation owner =\n      UserGroupInformation.createRemoteUser(\"owner\");", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "owner =\n      UserGroupInformation.createRemoteUser(\"owner\")", "var_name": "owner"}, {"original_string": "private static final UserGroupInformation other =\n      UserGroupInformation.createRemoteUser(\"other\");", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "other =\n      UserGroupInformation.createRemoteUser(\"other\")", "var_name": "other"}, {"original_string": "private static final UserGroupInformation tester =\n      UserGroupInformation.createRemoteUser(\"tester\");", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "tester =\n      UserGroupInformation.createRemoteUser(\"tester\")", "var_name": "tester"}, {"original_string": "private static final String testerPrincipal = \"tester@EXAMPLE.COM\";", "modifier": "private static final", "type": "String", "declarator": "testerPrincipal = \"tester@EXAMPLE.COM\"", "var_name": "testerPrincipal"}, {"original_string": "private static final String ownerPrincipal = \"owner@EXAMPLE.COM\";", "modifier": "private static final", "type": "String", "declarator": "ownerPrincipal = \"owner@EXAMPLE.COM\"", "var_name": "ownerPrincipal"}, {"original_string": "private static final String otherPrincipal = \"other@EXAMPLE.COM\";", "modifier": "private static final", "type": "String", "declarator": "otherPrincipal = \"other@EXAMPLE.COM\"", "var_name": "otherPrincipal"}, {"original_string": "private static final UserGroupInformation testerKerb =\n      UserGroupInformation.createRemoteUser(testerPrincipal);", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "testerKerb =\n      UserGroupInformation.createRemoteUser(testerPrincipal)", "var_name": "testerKerb"}, {"original_string": "private static final UserGroupInformation ownerKerb =\n      UserGroupInformation.createRemoteUser(ownerPrincipal);", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "ownerKerb =\n      UserGroupInformation.createRemoteUser(ownerPrincipal)", "var_name": "ownerKerb"}, {"original_string": "private static final UserGroupInformation otherKerb =\n      UserGroupInformation.createRemoteUser(otherPrincipal);", "modifier": "private static final", "type": "UserGroupInformation", "declarator": "otherKerb =\n      UserGroupInformation.createRemoteUser(otherPrincipal)", "var_name": "otherKerb"}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java"}, "test_case": {"identifier": "testGetLabelsToNodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetLabelsToNodes() throws Exception {\n    MockRM rm = new MockRM() {\n      protected ClientRMService createClientRMService() {\n        return new ClientRMService(this.rmContext, scheduler,\n            this.rmAppManager, this.applicationACLsManager,\n            this.queueACLsManager, this.getRMContext()\n                .getRMDelegationTokenSecretManager());\n      };\n    };\n    rm.start();\n    RMNodeLabelsManager labelsMgr = rm.getRMContext().getNodeLabelManager();\n    labelsMgr.addToCluserNodeLabels(ImmutableSet.of(\"x\", \"y\", \"z\"));\n\n    NodeId node1A = NodeId.newInstance(\"host1\", 1234);\n    NodeId node1B = NodeId.newInstance(\"host1\", 5678);\n    NodeId node2A = NodeId.newInstance(\"host2\", 1234);\n    NodeId node3A = NodeId.newInstance(\"host3\", 1234);\n    NodeId node3B = NodeId.newInstance(\"host3\", 5678);\n    Map<NodeId, Set<String>> map = new HashMap<NodeId, Set<String>>();\n    map.put(node1A, ImmutableSet.of(\"x\"));\n    map.put(node1B, ImmutableSet.of(\"z\"));\n    map.put(node2A, ImmutableSet.of(\"y\"));\n    map.put(node3A, ImmutableSet.of(\"y\"));\n    map.put(node3B, ImmutableSet.of(\"z\"));\n    labelsMgr.replaceLabelsOnNode(map);\n\n    // Create a client.\n    Configuration conf = new Configuration();\n    YarnRPC rpc = YarnRPC.create(conf);\n    InetSocketAddress rmAddress = rm.getClientRMService().getBindAddress();\n    LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n    ApplicationClientProtocol client =\n        (ApplicationClientProtocol) rpc.getProxy(\n            ApplicationClientProtocol.class, rmAddress, conf);\n\n    // Get node labels collection\n    GetClusterNodeLabelsResponse response =\n        client.getClusterNodeLabels(GetClusterNodeLabelsRequest.newInstance());\n    Assert.assertTrue(response.getNodeLabels().containsAll(\n        Arrays.asList(\"x\", \"y\", \"z\")));\n\n    // Get labels to nodes mapping\n    GetLabelsToNodesResponse response1 =\n        client.getLabelsToNodes(GetLabelsToNodesRequest.newInstance());\n    Map<String, Set<NodeId>> labelsToNodes = response1.getLabelsToNodes();\n    Assert.assertTrue(\n        labelsToNodes.keySet().containsAll(Arrays.asList(\"x\", \"y\", \"z\")));\n    Assert.assertTrue(\n        labelsToNodes.get(\"x\").containsAll(Arrays.asList(node1A)));\n    Assert.assertTrue(\n        labelsToNodes.get(\"y\").containsAll(Arrays.asList(node2A, node3A)));\n    Assert.assertTrue(\n        labelsToNodes.get(\"z\").containsAll(Arrays.asList(node1B, node3B)));\n\n    // Get labels to nodes mapping for specific labels\n    Set<String> setlabels =\n        new HashSet<String>(Arrays.asList(new String[]{\"x\", \"z\"}));\n    GetLabelsToNodesResponse response2 =\n        client.getLabelsToNodes(GetLabelsToNodesRequest.newInstance(setlabels));\n    labelsToNodes = response2.getLabelsToNodes();\n    Assert.assertTrue(\n        labelsToNodes.keySet().containsAll(Arrays.asList(\"x\", \"z\")));\n    Assert.assertTrue(\n        labelsToNodes.get(\"x\").containsAll(Arrays.asList(node1A)));\n    Assert.assertTrue(\n        labelsToNodes.get(\"z\").containsAll(Arrays.asList(node1B, node3B)));\n    Assert.assertEquals(labelsToNodes.get(\"y\"), null);\n\n    rpc.stopProxy(client, conf);\n    rm.close();\n  }", "signature": "void testGetLabelsToNodes()", "full_signature": "@Test public void testGetLabelsToNodes()", "class_method_signature": "TestClientRMService.testGetLabelsToNodes()", "testcase": true, "constructor": false, "invocations": ["getRMDelegationTokenSecretManager", "getRMContext", "start", "getNodeLabelManager", "getRMContext", "addToCluserNodeLabels", "of", "newInstance", "newInstance", "newInstance", "newInstance", "newInstance", "put", "of", "put", "of", "put", "of", "put", "of", "put", "of", "replaceLabelsOnNode", "create", "getBindAddress", "getClientRMService", "info", "getProxy", "getClusterNodeLabels", "newInstance", "assertTrue", "containsAll", "getNodeLabels", "asList", "getLabelsToNodes", "newInstance", "getLabelsToNodes", "assertTrue", "containsAll", "keySet", "asList", "assertTrue", "containsAll", "get", "asList", "assertTrue", "containsAll", "get", "asList", "assertTrue", "containsAll", "get", "asList", "asList", "getLabelsToNodes", "newInstance", "getLabelsToNodes", "assertTrue", "containsAll", "keySet", "asList", "assertTrue", "containsAll", "get", "asList", "assertTrue", "containsAll", "get", "asList", "assertEquals", "get", "stopProxy", "close"]}, "focal_class": {"identifier": "ClientRMService", "superclass": "extends AbstractService", "interfaces": "implements\n    ApplicationClientProtocol", "fields": [{"original_string": "private static final ArrayList<ApplicationReport> EMPTY_APPS_REPORT = new ArrayList<ApplicationReport>();", "modifier": "private static final", "type": "ArrayList<ApplicationReport>", "declarator": "EMPTY_APPS_REPORT = new ArrayList<ApplicationReport>()", "var_name": "EMPTY_APPS_REPORT"}, {"original_string": "private static final Log LOG = LogFactory.getLog(ClientRMService.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(ClientRMService.class)", "var_name": "LOG"}, {"original_string": "final private AtomicInteger applicationCounter = new AtomicInteger(0);", "modifier": "final private", "type": "AtomicInteger", "declarator": "applicationCounter = new AtomicInteger(0)", "var_name": "applicationCounter"}, {"original_string": "final private YarnScheduler scheduler;", "modifier": "final private", "type": "YarnScheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "final private RMContext rmContext;", "modifier": "final private", "type": "RMContext", "declarator": "rmContext", "var_name": "rmContext"}, {"original_string": "private final RMAppManager rmAppManager;", "modifier": "private final", "type": "RMAppManager", "declarator": "rmAppManager", "var_name": "rmAppManager"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "protected RMDelegationTokenSecretManager rmDTSecretManager;", "modifier": "protected", "type": "RMDelegationTokenSecretManager", "declarator": "rmDTSecretManager", "var_name": "rmDTSecretManager"}, {"original_string": "private final RecordFactory recordFactory = RecordFactoryProvider.getRecordFactory(null);", "modifier": "private final", "type": "RecordFactory", "declarator": "recordFactory = RecordFactoryProvider.getRecordFactory(null)", "var_name": "recordFactory"}, {"original_string": "InetSocketAddress clientBindAddress;", "modifier": "", "type": "InetSocketAddress", "declarator": "clientBindAddress", "var_name": "clientBindAddress"}, {"original_string": "private final ApplicationACLsManager applicationsACLsManager;", "modifier": "private final", "type": "ApplicationACLsManager", "declarator": "applicationsACLsManager", "var_name": "applicationsACLsManager"}, {"original_string": "private final QueueACLsManager queueACLsManager;", "modifier": "private final", "type": "QueueACLsManager", "declarator": "queueACLsManager", "var_name": "queueACLsManager"}, {"original_string": "private Clock clock;", "modifier": "private", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private ReservationSystem reservationSystem;", "modifier": "private", "type": "ReservationSystem", "declarator": "reservationSystem", "var_name": "reservationSystem"}, {"original_string": "private ReservationInputValidator rValidator;", "modifier": "private", "type": "ReservationInputValidator", "declarator": "rValidator", "var_name": "rValidator"}], "methods": [{"identifier": "ClientRMService", "parameters": "(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager)", "modifiers": "public", "return": "", "signature": " ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager)", "full_signature": "public  ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager)", "class_method_signature": "ClientRMService.ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager)", "testcase": false, "constructor": true}, {"identifier": "ClientRMService", "parameters": "(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager, Clock clock)", "modifiers": "public", "return": "", "signature": " ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager, Clock clock)", "full_signature": "public  ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager, Clock clock)", "class_method_signature": "ClientRMService.ClientRMService(RMContext rmContext, YarnScheduler scheduler,\n      RMAppManager rmAppManager, ApplicationACLsManager applicationACLsManager,\n      QueueACLsManager queueACLsManager,\n      RMDelegationTokenSecretManager rmDTSecretManager, Clock clock)", "testcase": false, "constructor": true}, {"identifier": "serviceInit", "parameters": "(Configuration conf)", "modifiers": "@Override protected", "return": "void", "signature": "void serviceInit(Configuration conf)", "full_signature": "@Override protected void serviceInit(Configuration conf)", "class_method_signature": "ClientRMService.serviceInit(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "serviceStart", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void serviceStart()", "full_signature": "@Override protected void serviceStart()", "class_method_signature": "ClientRMService.serviceStart()", "testcase": false, "constructor": false}, {"identifier": "serviceStop", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void serviceStop()", "full_signature": "@Override protected void serviceStop()", "class_method_signature": "ClientRMService.serviceStop()", "testcase": false, "constructor": false}, {"identifier": "getBindAddress", "parameters": "(Configuration conf)", "modifiers": "", "return": "InetSocketAddress", "signature": "InetSocketAddress getBindAddress(Configuration conf)", "full_signature": " InetSocketAddress getBindAddress(Configuration conf)", "class_method_signature": "ClientRMService.getBindAddress(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getBindAddress", "parameters": "()", "modifiers": "@Private public", "return": "InetSocketAddress", "signature": "InetSocketAddress getBindAddress()", "full_signature": "@Private public InetSocketAddress getBindAddress()", "class_method_signature": "ClientRMService.getBindAddress()", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(UserGroupInformation callerUGI, String owner,\n      ApplicationAccessType operationPerformed,\n      RMApp application)", "modifiers": "private", "return": "boolean", "signature": "boolean checkAccess(UserGroupInformation callerUGI, String owner,\n      ApplicationAccessType operationPerformed,\n      RMApp application)", "full_signature": "private boolean checkAccess(UserGroupInformation callerUGI, String owner,\n      ApplicationAccessType operationPerformed,\n      RMApp application)", "class_method_signature": "ClientRMService.checkAccess(UserGroupInformation callerUGI, String owner,\n      ApplicationAccessType operationPerformed,\n      RMApp application)", "testcase": false, "constructor": false}, {"identifier": "getNewApplicationId", "parameters": "()", "modifiers": "", "return": "ApplicationId", "signature": "ApplicationId getNewApplicationId()", "full_signature": " ApplicationId getNewApplicationId()", "class_method_signature": "ClientRMService.getNewApplicationId()", "testcase": false, "constructor": false}, {"identifier": "getNewApplication", "parameters": "(\n      GetNewApplicationRequest request)", "modifiers": "@Override public", "return": "GetNewApplicationResponse", "signature": "GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request)", "full_signature": "@Override public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request)", "class_method_signature": "ClientRMService.getNewApplication(\n      GetNewApplicationRequest request)", "testcase": false, "constructor": false}, {"identifier": "getApplicationReport", "parameters": "(\n      GetApplicationReportRequest request)", "modifiers": "@Override public", "return": "GetApplicationReportResponse", "signature": "GetApplicationReportResponse getApplicationReport(\n      GetApplicationReportRequest request)", "full_signature": "@Override public GetApplicationReportResponse getApplicationReport(\n      GetApplicationReportRequest request)", "class_method_signature": "ClientRMService.getApplicationReport(\n      GetApplicationReportRequest request)", "testcase": false, "constructor": false}, {"identifier": "getApplicationAttemptReport", "parameters": "(\n      GetApplicationAttemptReportRequest request)", "modifiers": "@Override public", "return": "GetApplicationAttemptReportResponse", "signature": "GetApplicationAttemptReportResponse getApplicationAttemptReport(\n      GetApplicationAttemptReportRequest request)", "full_signature": "@Override public GetApplicationAttemptReportResponse getApplicationAttemptReport(\n      GetApplicationAttemptReportRequest request)", "class_method_signature": "ClientRMService.getApplicationAttemptReport(\n      GetApplicationAttemptReportRequest request)", "testcase": false, "constructor": false}, {"identifier": "getApplicationAttempts", "parameters": "(\n      GetApplicationAttemptsRequest request)", "modifiers": "@Override public", "return": "GetApplicationAttemptsResponse", "signature": "GetApplicationAttemptsResponse getApplicationAttempts(\n      GetApplicationAttemptsRequest request)", "full_signature": "@Override public GetApplicationAttemptsResponse getApplicationAttempts(\n      GetApplicationAttemptsRequest request)", "class_method_signature": "ClientRMService.getApplicationAttempts(\n      GetApplicationAttemptsRequest request)", "testcase": false, "constructor": false}, {"identifier": "getContainerReport", "parameters": "(\n      GetContainerReportRequest request)", "modifiers": "@Override public", "return": "GetContainerReportResponse", "signature": "GetContainerReportResponse getContainerReport(\n      GetContainerReportRequest request)", "full_signature": "@Override public GetContainerReportResponse getContainerReport(\n      GetContainerReportRequest request)", "class_method_signature": "ClientRMService.getContainerReport(\n      GetContainerReportRequest request)", "testcase": false, "constructor": false}, {"identifier": "getContainers", "parameters": "(GetContainersRequest request)", "modifiers": "@Override public", "return": "GetContainersResponse", "signature": "GetContainersResponse getContainers(GetContainersRequest request)", "full_signature": "@Override public GetContainersResponse getContainers(GetContainersRequest request)", "class_method_signature": "ClientRMService.getContainers(GetContainersRequest request)", "testcase": false, "constructor": false}, {"identifier": "submitApplication", "parameters": "(\n      SubmitApplicationRequest request)", "modifiers": "@Override public", "return": "SubmitApplicationResponse", "signature": "SubmitApplicationResponse submitApplication(\n      SubmitApplicationRequest request)", "full_signature": "@Override public SubmitApplicationResponse submitApplication(\n      SubmitApplicationRequest request)", "class_method_signature": "ClientRMService.submitApplication(\n      SubmitApplicationRequest request)", "testcase": false, "constructor": false}, {"identifier": "forceKillApplication", "parameters": "(\n      KillApplicationRequest request)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "KillApplicationResponse", "signature": "KillApplicationResponse forceKillApplication(\n      KillApplicationRequest request)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public KillApplicationResponse forceKillApplication(\n      KillApplicationRequest request)", "class_method_signature": "ClientRMService.forceKillApplication(\n      KillApplicationRequest request)", "testcase": false, "constructor": false}, {"identifier": "getClusterMetrics", "parameters": "(\n      GetClusterMetricsRequest request)", "modifiers": "@Override public", "return": "GetClusterMetricsResponse", "signature": "GetClusterMetricsResponse getClusterMetrics(\n      GetClusterMetricsRequest request)", "full_signature": "@Override public GetClusterMetricsResponse getClusterMetrics(\n      GetClusterMetricsRequest request)", "class_method_signature": "ClientRMService.getClusterMetrics(\n      GetClusterMetricsRequest request)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "(\n      GetApplicationsRequest request)", "modifiers": "@Override public", "return": "GetApplicationsResponse", "signature": "GetApplicationsResponse getApplications(\n      GetApplicationsRequest request)", "full_signature": "@Override public GetApplicationsResponse getApplications(\n      GetApplicationsRequest request)", "class_method_signature": "ClientRMService.getApplications(\n      GetApplicationsRequest request)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "(\n      GetApplicationsRequest request, boolean caseSensitive)", "modifiers": "@Private public", "return": "GetApplicationsResponse", "signature": "GetApplicationsResponse getApplications(\n      GetApplicationsRequest request, boolean caseSensitive)", "full_signature": "@Private public GetApplicationsResponse getApplications(\n      GetApplicationsRequest request, boolean caseSensitive)", "class_method_signature": "ClientRMService.getApplications(\n      GetApplicationsRequest request, boolean caseSensitive)", "testcase": false, "constructor": false}, {"identifier": "getClusterNodes", "parameters": "(GetClusterNodesRequest request)", "modifiers": "@Override public", "return": "GetClusterNodesResponse", "signature": "GetClusterNodesResponse getClusterNodes(GetClusterNodesRequest request)", "full_signature": "@Override public GetClusterNodesResponse getClusterNodes(GetClusterNodesRequest request)", "class_method_signature": "ClientRMService.getClusterNodes(GetClusterNodesRequest request)", "testcase": false, "constructor": false}, {"identifier": "getQueueInfo", "parameters": "(GetQueueInfoRequest request)", "modifiers": "@Override public", "return": "GetQueueInfoResponse", "signature": "GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request)", "full_signature": "@Override public GetQueueInfoResponse getQueueInfo(GetQueueInfoRequest request)", "class_method_signature": "ClientRMService.getQueueInfo(GetQueueInfoRequest request)", "testcase": false, "constructor": false}, {"identifier": "createNodeReports", "parameters": "(RMNode rmNode)", "modifiers": "private", "return": "NodeReport", "signature": "NodeReport createNodeReports(RMNode rmNode)", "full_signature": "private NodeReport createNodeReports(RMNode rmNode)", "class_method_signature": "ClientRMService.createNodeReports(RMNode rmNode)", "testcase": false, "constructor": false}, {"identifier": "getQueueUserAcls", "parameters": "(\n      GetQueueUserAclsInfoRequest request)", "modifiers": "@Override public", "return": "GetQueueUserAclsInfoResponse", "signature": "GetQueueUserAclsInfoResponse getQueueUserAcls(\n      GetQueueUserAclsInfoRequest request)", "full_signature": "@Override public GetQueueUserAclsInfoResponse getQueueUserAcls(\n      GetQueueUserAclsInfoRequest request)", "class_method_signature": "ClientRMService.getQueueUserAcls(\n      GetQueueUserAclsInfoRequest request)", "testcase": false, "constructor": false}, {"identifier": "getDelegationToken", "parameters": "(\n      GetDelegationTokenRequest request)", "modifiers": "@Override public", "return": "GetDelegationTokenResponse", "signature": "GetDelegationTokenResponse getDelegationToken(\n      GetDelegationTokenRequest request)", "full_signature": "@Override public GetDelegationTokenResponse getDelegationToken(\n      GetDelegationTokenRequest request)", "class_method_signature": "ClientRMService.getDelegationToken(\n      GetDelegationTokenRequest request)", "testcase": false, "constructor": false}, {"identifier": "renewDelegationToken", "parameters": "(\n      RenewDelegationTokenRequest request)", "modifiers": "@Override public", "return": "RenewDelegationTokenResponse", "signature": "RenewDelegationTokenResponse renewDelegationToken(\n      RenewDelegationTokenRequest request)", "full_signature": "@Override public RenewDelegationTokenResponse renewDelegationToken(\n      RenewDelegationTokenRequest request)", "class_method_signature": "ClientRMService.renewDelegationToken(\n      RenewDelegationTokenRequest request)", "testcase": false, "constructor": false}, {"identifier": "cancelDelegationToken", "parameters": "(\n      CancelDelegationTokenRequest request)", "modifiers": "@Override public", "return": "CancelDelegationTokenResponse", "signature": "CancelDelegationTokenResponse cancelDelegationToken(\n      CancelDelegationTokenRequest request)", "full_signature": "@Override public CancelDelegationTokenResponse cancelDelegationToken(\n      CancelDelegationTokenRequest request)", "class_method_signature": "ClientRMService.cancelDelegationToken(\n      CancelDelegationTokenRequest request)", "testcase": false, "constructor": false}, {"identifier": "moveApplicationAcrossQueues", "parameters": "(\n      MoveApplicationAcrossQueuesRequest request)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "MoveApplicationAcrossQueuesResponse", "signature": "MoveApplicationAcrossQueuesResponse moveApplicationAcrossQueues(\n      MoveApplicationAcrossQueuesRequest request)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public MoveApplicationAcrossQueuesResponse moveApplicationAcrossQueues(\n      MoveApplicationAcrossQueuesRequest request)", "class_method_signature": "ClientRMService.moveApplicationAcrossQueues(\n      MoveApplicationAcrossQueuesRequest request)", "testcase": false, "constructor": false}, {"identifier": "getRenewerForToken", "parameters": "(Token<RMDelegationTokenIdentifier> token)", "modifiers": "private", "return": "String", "signature": "String getRenewerForToken(Token<RMDelegationTokenIdentifier> token)", "full_signature": "private String getRenewerForToken(Token<RMDelegationTokenIdentifier> token)", "class_method_signature": "ClientRMService.getRenewerForToken(Token<RMDelegationTokenIdentifier> token)", "testcase": false, "constructor": false}, {"identifier": "refreshServiceAcls", "parameters": "(Configuration configuration, \n      PolicyProvider policyProvider)", "modifiers": "", "return": "void", "signature": "void refreshServiceAcls(Configuration configuration, \n      PolicyProvider policyProvider)", "full_signature": " void refreshServiceAcls(Configuration configuration, \n      PolicyProvider policyProvider)", "class_method_signature": "ClientRMService.refreshServiceAcls(Configuration configuration, \n      PolicyProvider policyProvider)", "testcase": false, "constructor": false}, {"identifier": "isAllowedDelegationTokenOp", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isAllowedDelegationTokenOp()", "full_signature": "private boolean isAllowedDelegationTokenOp()", "class_method_signature": "ClientRMService.isAllowedDelegationTokenOp()", "testcase": false, "constructor": false}, {"identifier": "getServer", "parameters": "()", "modifiers": "@VisibleForTesting public", "return": "Server", "signature": "Server getServer()", "full_signature": "@VisibleForTesting public Server getServer()", "class_method_signature": "ClientRMService.getServer()", "testcase": false, "constructor": false}, {"identifier": "submitReservation", "parameters": "(\n      ReservationSubmissionRequest request)", "modifiers": "@Override public", "return": "ReservationSubmissionResponse", "signature": "ReservationSubmissionResponse submitReservation(\n      ReservationSubmissionRequest request)", "full_signature": "@Override public ReservationSubmissionResponse submitReservation(\n      ReservationSubmissionRequest request)", "class_method_signature": "ClientRMService.submitReservation(\n      ReservationSubmissionRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateReservation", "parameters": "(\n      ReservationUpdateRequest request)", "modifiers": "@Override public", "return": "ReservationUpdateResponse", "signature": "ReservationUpdateResponse updateReservation(\n      ReservationUpdateRequest request)", "full_signature": "@Override public ReservationUpdateResponse updateReservation(\n      ReservationUpdateRequest request)", "class_method_signature": "ClientRMService.updateReservation(\n      ReservationUpdateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteReservation", "parameters": "(\n      ReservationDeleteRequest request)", "modifiers": "@Override public", "return": "ReservationDeleteResponse", "signature": "ReservationDeleteResponse deleteReservation(\n      ReservationDeleteRequest request)", "full_signature": "@Override public ReservationDeleteResponse deleteReservation(\n      ReservationDeleteRequest request)", "class_method_signature": "ClientRMService.deleteReservation(\n      ReservationDeleteRequest request)", "testcase": false, "constructor": false}, {"identifier": "getNodeToLabels", "parameters": "(\n      GetNodesToLabelsRequest request)", "modifiers": "@Override public", "return": "GetNodesToLabelsResponse", "signature": "GetNodesToLabelsResponse getNodeToLabels(\n      GetNodesToLabelsRequest request)", "full_signature": "@Override public GetNodesToLabelsResponse getNodeToLabels(\n      GetNodesToLabelsRequest request)", "class_method_signature": "ClientRMService.getNodeToLabels(\n      GetNodesToLabelsRequest request)", "testcase": false, "constructor": false}, {"identifier": "getLabelsToNodes", "parameters": "(\n      GetLabelsToNodesRequest request)", "modifiers": "@Override public", "return": "GetLabelsToNodesResponse", "signature": "GetLabelsToNodesResponse getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "full_signature": "@Override public GetLabelsToNodesResponse getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "class_method_signature": "ClientRMService.getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "testcase": false, "constructor": false}, {"identifier": "getClusterNodeLabels", "parameters": "(\n      GetClusterNodeLabelsRequest request)", "modifiers": "@Override public", "return": "GetClusterNodeLabelsResponse", "signature": "GetClusterNodeLabelsResponse getClusterNodeLabels(\n      GetClusterNodeLabelsRequest request)", "full_signature": "@Override public GetClusterNodeLabelsResponse getClusterNodeLabels(\n      GetClusterNodeLabelsRequest request)", "class_method_signature": "ClientRMService.getClusterNodeLabels(\n      GetClusterNodeLabelsRequest request)", "testcase": false, "constructor": false}, {"identifier": "checkReservationSytem", "parameters": "(String auditConstant)", "modifiers": "private", "return": "void", "signature": "void checkReservationSytem(String auditConstant)", "full_signature": "private void checkReservationSytem(String auditConstant)", "class_method_signature": "ClientRMService.checkReservationSytem(String auditConstant)", "testcase": false, "constructor": false}, {"identifier": "refreshScheduler", "parameters": "(String planName,\n      ReservationDefinition contract, String reservationId)", "modifiers": "private", "return": "void", "signature": "void refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId)", "full_signature": "private void refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId)", "class_method_signature": "ClientRMService.refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId)", "testcase": false, "constructor": false}, {"identifier": "checkReservationACLs", "parameters": "(String queueName, String auditConstant)", "modifiers": "private", "return": "String", "signature": "String checkReservationACLs(String queueName, String auditConstant)", "full_signature": "private String checkReservationACLs(String queueName, String auditConstant)", "class_method_signature": "ClientRMService.checkReservationACLs(String queueName, String auditConstant)", "testcase": false, "constructor": false}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java"}, "focal_method": {"identifier": "getLabelsToNodes", "parameters": "(\n      GetLabelsToNodesRequest request)", "modifiers": "@Override public", "return": "GetLabelsToNodesResponse", "body": "@Override\n  public GetLabelsToNodesResponse getLabelsToNodes(\n      GetLabelsToNodesRequest request) throws YarnException, IOException {\n    RMNodeLabelsManager labelsMgr = rmContext.getNodeLabelManager();\n    if (request.getNodeLabels() == null || request.getNodeLabels().isEmpty()) {\n      return GetLabelsToNodesResponse.newInstance(\n          labelsMgr.getLabelsToNodes());\n    } else {\n      return GetLabelsToNodesResponse.newInstance(\n          labelsMgr.getLabelsToNodes(request.getNodeLabels()));\n    }\n  }", "signature": "GetLabelsToNodesResponse getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "full_signature": "@Override public GetLabelsToNodesResponse getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "class_method_signature": "ClientRMService.getLabelsToNodes(\n      GetLabelsToNodesRequest request)", "testcase": false, "constructor": false, "invocations": ["getNodeLabelManager", "getNodeLabels", "isEmpty", "getNodeLabels", "newInstance", "getLabelsToNodes", "newInstance", "getLabelsToNodes", "getNodeLabels"]}, "repository": {"repo_id": 195808004, "url": "https://github.com/mouzwang/hadoop-2.7.2", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 24927, "license": "licensed"}}