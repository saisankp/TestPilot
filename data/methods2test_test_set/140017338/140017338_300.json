{"test_class": {"identifier": "LicenseTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/model/src/test/java/org/eclipse/sw360/antenna/model/license/LicenseTest.java"}, "test_case": {"identifier": "testEqualLicense", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualLicense() {\n        License license1 = new License (\"Apache-2.0\");\n        License license2 = new License (\"Apache-2.0\", \"Apache License Version 2.0\", \"Some license text\");\n        License license3 = new License (\"MIT\");\n\n        assertThat(license1.equalLicense(license2)).isTrue();\n        assertThat(license1.equalLicense(license3)).isFalse();\n    }", "signature": "void testEqualLicense()", "full_signature": "@Test public void testEqualLicense()", "class_method_signature": "LicenseTest.testEqualLicense()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "equalLicense", "isFalse", "assertThat", "equalLicense"]}, "focal_class": {"identifier": "License", "superclass": "", "interfaces": "implements LicenseInformation", "fields": [{"original_string": "private static final String THREAT_GROUP_KEY = \"threatGroup\";", "modifier": "private static final", "type": "String", "declarator": "THREAT_GROUP_KEY = \"threatGroup\"", "var_name": "THREAT_GROUP_KEY"}, {"original_string": "private static final String CLASSIFICATION_KEY = \"classification\";", "modifier": "private static final", "type": "String", "declarator": "CLASSIFICATION_KEY = \"classification\"", "var_name": "CLASSIFICATION_KEY"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private String commonName;", "modifier": "private", "type": "String", "declarator": "commonName", "var_name": "commonName"}, {"original_string": "private String text;", "modifier": "private", "type": "String", "declarator": "text", "var_name": "text"}, {"original_string": "private Map<String, String> properties;", "modifier": "private", "type": "Map<String, String>", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "License", "parameters": "()", "modifiers": "public", "return": "", "signature": " License()", "full_signature": "public  License()", "class_method_signature": "License.License()", "testcase": false, "constructor": true}, {"identifier": "License", "parameters": "(String id)", "modifiers": "public", "return": "", "signature": " License(String id)", "full_signature": "public  License(String id)", "class_method_signature": "License.License(String id)", "testcase": false, "constructor": true}, {"identifier": "License", "parameters": "(String id, String commonName, String text)", "modifiers": "public", "return": "", "signature": " License(String id, String commonName, String text)", "full_signature": "public  License(String id, String commonName, String text)", "class_method_signature": "License.License(String id, String commonName, String text)", "testcase": false, "constructor": true}, {"identifier": "License", "parameters": "(String id, String commonName, String text, Map<String, String> properties)", "modifiers": "public", "return": "", "signature": " License(String id, String commonName, String text, Map<String, String> properties)", "full_signature": "public  License(String id, String commonName, String text, Map<String, String> properties)", "class_method_signature": "License.License(String id, String commonName, String text, Map<String, String> properties)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "License.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "License.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getCommonName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCommonName()", "full_signature": "public String getCommonName()", "class_method_signature": "License.getCommonName()", "testcase": false, "constructor": false}, {"identifier": "setCommonName", "parameters": "(String commonName)", "modifiers": "public", "return": "void", "signature": "void setCommonName(String commonName)", "full_signature": "public void setCommonName(String commonName)", "class_method_signature": "License.setCommonName(String commonName)", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "License.getText()", "testcase": false, "constructor": false}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setText(String text)", "full_signature": "public void setText(String text)", "class_method_signature": "License.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getProperties()", "full_signature": "public Map<String, String> getProperties()", "class_method_signature": "License.getProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "void", "signature": "void setProperties(Map<String, String> properties)", "full_signature": "public void setProperties(Map<String, String> properties)", "class_method_signature": "License.setProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(String key, String property)", "modifiers": "public", "return": "void", "signature": "void setProperty(String key, String property)", "full_signature": "public void setProperty(String key, String property)", "class_method_signature": "License.setProperty(String key, String property)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(String key)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getProperty(String key)", "full_signature": "public Optional<String> getProperty(String key)", "class_method_signature": "License.getProperty(String key)", "testcase": false, "constructor": false}, {"identifier": "setThreatGroup", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setThreatGroup(String value)", "full_signature": "public void setThreatGroup(String value)", "class_method_signature": "License.setThreatGroup(String value)", "testcase": false, "constructor": false}, {"identifier": "getThreatGroup", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getThreatGroup()", "full_signature": "public Optional<String> getThreatGroup()", "class_method_signature": "License.getThreatGroup()", "testcase": false, "constructor": false}, {"identifier": "setClassification", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setClassification(String value)", "full_signature": "public void setClassification(String value)", "class_method_signature": "License.setClassification(String value)", "testcase": false, "constructor": false}, {"identifier": "getClassification", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getClassification()", "full_signature": "public Optional<String> getClassification()", "class_method_signature": "License.getClassification()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String evaluate()", "full_signature": "@Override public String evaluate()", "class_method_signature": "License.evaluate()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "License.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getLicenses", "parameters": "()", "modifiers": "@Override public", "return": "Collection<License>", "signature": "Collection<License> getLicenses()", "full_signature": "@Override public Collection<License> getLicenses()", "class_method_signature": "License.getLicenses()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "License.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "equalLicense", "parameters": "(License license)", "modifiers": "public", "return": "boolean", "signature": "boolean equalLicense(License license)", "full_signature": "public boolean equalLicense(License license)", "class_method_signature": "License.equalLicense(License license)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "License.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "License.toString()", "testcase": false, "constructor": false}], "file": "core/model/src/main/java/org/eclipse/sw360/antenna/model/license/License.java"}, "focal_method": {"identifier": "equalLicense", "parameters": "(License license)", "modifiers": "public", "return": "boolean", "body": "public boolean equalLicense(License license) {\n        return Objects.equals(getId(), license.getId());\n    }", "signature": "boolean equalLicense(License license)", "full_signature": "public boolean equalLicense(License license)", "class_method_signature": "License.equalLicense(License license)", "testcase": false, "constructor": false, "invocations": ["equals", "getId", "getId"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}