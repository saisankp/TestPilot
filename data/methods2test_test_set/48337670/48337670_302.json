{"test_class": {"identifier": "ContactItemTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/ContactItemTest.java"}, "test_case": {"identifier": "testOpenCloseType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOpenCloseType() {\n        ContactItem item = new ContactItem(\"test\");\n        item.setState(OpenClosedType.OPEN);\n        assertEquals(OpenClosedType.OPEN, item.getState());\n\n        item.setState(OpenClosedType.CLOSED);\n        assertEquals(OpenClosedType.CLOSED, item.getState());\n    }", "signature": "void testOpenCloseType()", "full_signature": "@Test public void testOpenCloseType()", "class_method_signature": "ContactItemTest.testOpenCloseType()", "testcase": true, "constructor": false, "invocations": ["setState", "assertEquals", "getState", "setState", "assertEquals", "getState"]}, "focal_class": {"identifier": "ContactItem", "superclass": "extends GenericItem", "interfaces": "", "fields": [{"original_string": "private static List<Class<? extends State>> acceptedDataTypes = new ArrayList<>();", "modifier": "private static", "type": "List<Class<? extends State>>", "declarator": "acceptedDataTypes = new ArrayList<>()", "var_name": "acceptedDataTypes"}, {"original_string": "private static List<Class<? extends Command>> acceptedCommandTypes = new ArrayList<>();", "modifier": "private static", "type": "List<Class<? extends Command>>", "declarator": "acceptedCommandTypes = new ArrayList<>()", "var_name": "acceptedCommandTypes"}], "methods": [{"identifier": "ContactItem", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " ContactItem(String name)", "full_signature": "public  ContactItem(String name)", "class_method_signature": "ContactItem.ContactItem(String name)", "testcase": false, "constructor": true}, {"identifier": "getAcceptedDataTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<Class<? extends State>>", "signature": "List<Class<? extends State>> getAcceptedDataTypes()", "full_signature": "@Override public List<Class<? extends State>> getAcceptedDataTypes()", "class_method_signature": "ContactItem.getAcceptedDataTypes()", "testcase": false, "constructor": false}, {"identifier": "getAcceptedCommandTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<Class<? extends Command>>", "signature": "List<Class<? extends Command>> getAcceptedCommandTypes()", "full_signature": "@Override public List<Class<? extends Command>> getAcceptedCommandTypes()", "class_method_signature": "ContactItem.getAcceptedCommandTypes()", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(State state)", "modifiers": "@Override public", "return": "void", "signature": "void setState(State state)", "full_signature": "@Override public void setState(State state)", "class_method_signature": "ContactItem.setState(State state)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/ContactItem.java"}, "focal_method": {"identifier": "setState", "parameters": "(State state)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setState(State state) {\n        if (isAcceptedState(acceptedDataTypes, state)) {\n            super.setState(state);\n        } else {\n            logSetTypeError(state);\n        }\n    }", "signature": "void setState(State state)", "full_signature": "@Override public void setState(State state)", "class_method_signature": "ContactItem.setState(State state)", "testcase": false, "constructor": false, "invocations": ["isAcceptedState", "setState", "logSetTypeError"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}