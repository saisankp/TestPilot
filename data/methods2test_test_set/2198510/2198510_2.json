{"test_class": {"identifier": "TestHadoopCredentialStoreConfigFilter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String providerPathDefault;", "modifier": "private static", "type": "String", "declarator": "providerPathDefault", "var_name": "providerPathDefault"}, {"original_string": "private static String providerPathEnv;", "modifier": "private static", "type": "String", "declarator": "providerPathEnv", "var_name": "providerPathEnv"}, {"original_string": "private static String providerPathPwdFile;", "modifier": "private static", "type": "String", "declarator": "providerPathPwdFile", "var_name": "providerPathPwdFile"}, {"original_string": "@ClassRule\n  public static final EnvironmentVariables environmentVariables\n      = new EnvironmentVariables();", "modifier": "@ClassRule\n  public static final", "type": "EnvironmentVariables", "declarator": "environmentVariables\n      = new EnvironmentVariables()", "var_name": "environmentVariables"}, {"original_string": "private static File fileDefault;", "modifier": "private static", "type": "File", "declarator": "fileDefault", "var_name": "fileDefault"}, {"original_string": "private static File fileEnvPassword;", "modifier": "private static", "type": "File", "declarator": "fileEnvPassword", "var_name": "fileEnvPassword"}, {"original_string": "private static File fileFilePassword;", "modifier": "private static", "type": "File", "declarator": "fileFilePassword", "var_name": "fileFilePassword"}, {"original_string": "private HadoopCredentialStoreConfigFilter configFilter;", "modifier": "private", "type": "HadoopCredentialStoreConfigFilter", "declarator": "configFilter", "var_name": "configFilter"}], "file": "flume-ng-configfilters/flume-ng-hadoop-credential-store-config-filter/src/test/java/org/apache/flume/configfilter/TestHadoopCredentialStoreConfigFilter.java"}, "test_case": {"identifier": "filterErrorWithNoProvider", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void filterErrorWithNoProvider() {\n    HashMap<String, String> configuration = new HashMap<>();\n    configFilter.initializeWithConfiguration(configuration);\n  }", "signature": "void filterErrorWithNoProvider()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void filterErrorWithNoProvider()", "class_method_signature": "TestHadoopCredentialStoreConfigFilter.filterErrorWithNoProvider()", "testcase": true, "constructor": false, "invocations": ["initializeWithConfiguration"]}, "focal_class": {"identifier": "HadoopCredentialStoreConfigFilter", "superclass": "extends AbstractConfigFilter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(\n      HadoopCredentialStoreConfigFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(\n      HadoopCredentialStoreConfigFilter.class)", "var_name": "LOGGER"}, {"original_string": "static final String PASSWORD_FILE_CONFIG_KEY\n      = \"credstore.java-keystore-provider.password-file\";", "modifier": "static final", "type": "String", "declarator": "PASSWORD_FILE_CONFIG_KEY\n      = \"credstore.java-keystore-provider.password-file\"", "var_name": "PASSWORD_FILE_CONFIG_KEY"}, {"original_string": "static final String CREDENTIAL_PROVIDER_PATH\n      = \"credential.provider.path\";", "modifier": "static final", "type": "String", "declarator": "CREDENTIAL_PROVIDER_PATH\n      = \"credential.provider.path\"", "var_name": "CREDENTIAL_PROVIDER_PATH"}, {"original_string": "static final String HADOOP_SECURITY = \"hadoop.security.\";", "modifier": "static final", "type": "String", "declarator": "HADOOP_SECURITY = \"hadoop.security.\"", "var_name": "HADOOP_SECURITY"}, {"original_string": "private Configuration hadoopConfiguration;", "modifier": "private", "type": "Configuration", "declarator": "hadoopConfiguration", "var_name": "hadoopConfiguration"}], "methods": [{"identifier": "initializeWithConfiguration", "parameters": "(Map<String, String> configuration)", "modifiers": "public", "return": "void", "signature": "void initializeWithConfiguration(Map<String, String> configuration)", "full_signature": "public void initializeWithConfiguration(Map<String, String> configuration)", "class_method_signature": "HadoopCredentialStoreConfigFilter.initializeWithConfiguration(Map<String, String> configuration)", "testcase": false, "constructor": false}, {"identifier": "checkPasswordFile", "parameters": "(String passwordFile)", "modifiers": "private", "return": "void", "signature": "void checkPasswordFile(String passwordFile)", "full_signature": "private void checkPasswordFile(String passwordFile)", "class_method_signature": "HadoopCredentialStoreConfigFilter.checkPasswordFile(String passwordFile)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(String key)", "modifiers": "@Override public", "return": "String", "signature": "String filter(String key)", "full_signature": "@Override public String filter(String key)", "class_method_signature": "HadoopCredentialStoreConfigFilter.filter(String key)", "testcase": false, "constructor": false}], "file": "flume-ng-configfilters/flume-ng-hadoop-credential-store-config-filter/src/main/java/org/apache/flume/configfilter/HadoopCredentialStoreConfigFilter.java"}, "focal_method": {"identifier": "initializeWithConfiguration", "parameters": "(Map<String, String> configuration)", "modifiers": "public", "return": "void", "body": "public void initializeWithConfiguration(Map<String, String> configuration) {\n\n    LOGGER.debug(\"Initializing hadoop credential store.\");\n    hadoopConfiguration = new Configuration();\n    hadoopConfiguration.set(\n        HADOOP_SECURITY + CREDENTIAL_PROVIDER_PATH,\n        configuration.get(CREDENTIAL_PROVIDER_PATH)\n    );\n\n    String passwordFile = configuration.get(PASSWORD_FILE_CONFIG_KEY);\n    if (passwordFile != null && !passwordFile.isEmpty()) {\n      checkPasswordFile(passwordFile);\n      hadoopConfiguration.set(\n          HADOOP_SECURITY + PASSWORD_FILE_CONFIG_KEY, passwordFile\n      );\n    }\n  }", "signature": "void initializeWithConfiguration(Map<String, String> configuration)", "full_signature": "public void initializeWithConfiguration(Map<String, String> configuration)", "class_method_signature": "HadoopCredentialStoreConfigFilter.initializeWithConfiguration(Map<String, String> configuration)", "testcase": false, "constructor": false, "invocations": ["debug", "set", "get", "get", "isEmpty", "checkPasswordFile", "set"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}