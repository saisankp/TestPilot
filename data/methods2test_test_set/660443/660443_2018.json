{"test_class": {"identifier": "SMILESReaderTest", "superclass": "extends SimpleChemObjectReaderTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(SMILESReaderTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(SMILESReaderTest.class)", "var_name": "logger"}], "file": "storage/smiles/src/test/java/org/openscience/cdk/io/SMILESReaderTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() {\n        SMILESReader reader = new SMILESReader();\n        Assert.assertTrue(reader.accepts(ChemFile.class));\n        Assert.assertTrue(reader.accepts(AtomContainerSet.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "SMILESReaderTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts", "assertTrue", "accepts"]}, "focal_class": {"identifier": "SMILESReader", "superclass": "extends DefaultChemObjectReader", "interfaces": "", "fields": [{"original_string": "private BufferedReader      input  = null;", "modifier": "private", "type": "BufferedReader", "declarator": "input  = null", "var_name": "input"}, {"original_string": "private SmilesParser        sp     = null;", "modifier": "private", "type": "SmilesParser", "declarator": "sp     = null", "var_name": "sp"}, {"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(SMILESReader.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(SMILESReader.class)", "var_name": "logger"}], "methods": [{"identifier": "SMILESReader", "parameters": "(Reader input)", "modifiers": "public", "return": "", "signature": " SMILESReader(Reader input)", "full_signature": "public  SMILESReader(Reader input)", "class_method_signature": "SMILESReader.SMILESReader(Reader input)", "testcase": false, "constructor": true}, {"identifier": "SMILESReader", "parameters": "(InputStream input)", "modifiers": "public", "return": "", "signature": " SMILESReader(InputStream input)", "full_signature": "public  SMILESReader(InputStream input)", "class_method_signature": "SMILESReader.SMILESReader(InputStream input)", "testcase": false, "constructor": true}, {"identifier": "SMILESReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " SMILESReader()", "full_signature": "public  SMILESReader()", "class_method_signature": "SMILESReader.SMILESReader()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "SMILESReader.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(Reader input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(Reader input)", "full_signature": "@Override public void setReader(Reader input)", "class_method_signature": "SMILESReader.setReader(Reader input)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(InputStream input)", "full_signature": "@Override public void setReader(InputStream input)", "class_method_signature": "SMILESReader.setReader(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "SMILESReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(T object)", "modifiers": "@Override public", "return": "T", "signature": "T read(T object)", "full_signature": "@Override public T read(T object)", "class_method_signature": "SMILESReader.read(T object)", "testcase": false, "constructor": false}, {"identifier": "readAtomContainerSet", "parameters": "(IAtomContainerSet som)", "modifiers": "private", "return": "IAtomContainerSet", "signature": "IAtomContainerSet readAtomContainerSet(IAtomContainerSet som)", "full_signature": "private IAtomContainerSet readAtomContainerSet(IAtomContainerSet som)", "class_method_signature": "SMILESReader.readAtomContainerSet(IAtomContainerSet som)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SMILESReader.close()", "testcase": false, "constructor": false}, {"identifier": "suffix", "parameters": "(final String line)", "modifiers": "private", "return": "String", "signature": "String suffix(final String line)", "full_signature": "private String suffix(final String line)", "class_method_signature": "SMILESReader.suffix(final String line)", "testcase": false, "constructor": false}], "file": "storage/smiles/src/main/java/org/openscience/cdk/io/SMILESReader.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        if (IAtomContainerSet.class.equals(classObject)) return true;\n        if (IChemFile.class.equals(classObject)) return true;\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (Class<?> anInterface : interfaces) {\n            if (IChemFile.class.equals(anInterface)) return true;\n            if (IAtomContainerSet.class.equals(anInterface)) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "SMILESReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "getInterfaces", "equals", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}