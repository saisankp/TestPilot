{"test_class": {"identifier": "SequenceScriptRunnerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "SequenceScriptRunner scriptRunner = new SequenceScriptRunner();", "modifier": "", "type": "SequenceScriptRunner", "declarator": "scriptRunner = new SequenceScriptRunner()", "var_name": "scriptRunner"}], "file": "beanmother-core/src/test/java/io/beanmother/core/script/std/SequenceScriptRunnerTest.java"}, "test_case": {"identifier": "testCanHandle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanHandle() {\n        assertTrue(scriptRunner.canHandle(ScriptFragment.of(\"sequence.number\")));\n\n        assertFalse(scriptRunner.canHandle(ScriptFragment.of(\"faker.number\")));\n    }", "signature": "void testCanHandle()", "full_signature": "@Test public void testCanHandle()", "class_method_signature": "SequenceScriptRunnerTest.testCanHandle()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canHandle", "of", "assertFalse", "canHandle", "of"]}, "focal_class": {"identifier": "SequenceScriptRunner", "superclass": "", "interfaces": "implements ScriptRunner", "fields": [{"original_string": "private final static String NAMESPACE = \"sequence\";", "modifier": "private final static", "type": "String", "declarator": "NAMESPACE = \"sequence\"", "var_name": "NAMESPACE"}, {"original_string": "private final static String NUMBER_SEQUENCE_METHOD_NAME = \"number\";", "modifier": "private final static", "type": "String", "declarator": "NUMBER_SEQUENCE_METHOD_NAME = \"number\"", "var_name": "NUMBER_SEQUENCE_METHOD_NAME"}, {"original_string": "private AtomicLong longSequence = new AtomicLong(0);", "modifier": "private", "type": "AtomicLong", "declarator": "longSequence = new AtomicLong(0)", "var_name": "longSequence"}], "methods": [{"identifier": "run", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "@Override public", "return": "Object", "signature": "Object run(ScriptFragment scriptFragment)", "full_signature": "@Override public Object run(ScriptFragment scriptFragment)", "class_method_signature": "SequenceScriptRunner.run(ScriptFragment scriptFragment)", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(ScriptFragment scriptFragment)", "full_signature": "@Override public boolean canHandle(ScriptFragment scriptFragment)", "class_method_signature": "SequenceScriptRunner.canHandle(ScriptFragment scriptFragment)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/script/std/SequenceScriptRunner.java"}, "focal_method": {"identifier": "canHandle", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canHandle(ScriptFragment scriptFragment) {\n        return scriptFragment.getMethodName().equals(NAMESPACE);\n    }", "signature": "boolean canHandle(ScriptFragment scriptFragment)", "full_signature": "@Override public boolean canHandle(ScriptFragment scriptFragment)", "class_method_signature": "SequenceScriptRunner.canHandle(ScriptFragment scriptFragment)", "testcase": false, "constructor": false, "invocations": ["equals", "getMethodName"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}