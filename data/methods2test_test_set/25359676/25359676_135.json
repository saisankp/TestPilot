{"test_class": {"identifier": "ActionListUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "rice-middleware/impl/src/test/java/org/kuali/rice/kew/actionlist/web/ActionListUtilTest.java"}, "test_case": {"identifier": "testGetWebFriendlyRecipientsWithGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetWebFriendlyRecipientsWithGroup() {\n        Collection<Recipient> recipients = new ArrayList<Recipient>();\n        recipients.add(new KimGroupRecipient(Group.Builder.create(\"KUALI\", \"testgroup\", \"1\").build()));\n        ActionListUtil.getWebFriendlyRecipients(recipients);\n    }", "signature": "void testGetWebFriendlyRecipientsWithGroup()", "full_signature": "@Test public void testGetWebFriendlyRecipientsWithGroup()", "class_method_signature": "ActionListUtilTest.testGetWebFriendlyRecipientsWithGroup()", "testcase": true, "constructor": false, "invocations": ["add", "build", "create", "getWebFriendlyRecipients"]}, "focal_class": {"identifier": "ActionListUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ActionListUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ActionListUtil()", "full_signature": "private  ActionListUtil()", "class_method_signature": "ActionListUtil.ActionListUtil()", "testcase": false, "constructor": true}, {"identifier": "getWebFriendlyRecipients", "parameters": "(Collection<Recipient> recipients)", "modifiers": "public static", "return": "List<WebFriendlyRecipient>", "signature": "List<WebFriendlyRecipient> getWebFriendlyRecipients(Collection<Recipient> recipients)", "full_signature": "public static List<WebFriendlyRecipient> getWebFriendlyRecipients(Collection<Recipient> recipients)", "class_method_signature": "ActionListUtil.getWebFriendlyRecipients(Collection<Recipient> recipients)", "testcase": false, "constructor": false}], "file": "rice-middleware/impl/src/main/java/org/kuali/rice/kew/actionlist/web/ActionListUtil.java"}, "focal_method": {"identifier": "getWebFriendlyRecipients", "parameters": "(Collection<Recipient> recipients)", "modifiers": "public static", "return": "List<WebFriendlyRecipient>", "body": "public static List<WebFriendlyRecipient> getWebFriendlyRecipients(Collection<Recipient> recipients) {\n        Collection<WebFriendlyRecipient> newRecipients = new ArrayList<WebFriendlyRecipient>(recipients.size());\n        for (Recipient recipient : recipients) {\n            newRecipients.add(new WebFriendlyRecipient(recipient));\n        }\n        List<WebFriendlyRecipient> recipientList = new ArrayList<WebFriendlyRecipient>(newRecipients);\n        Collections.sort(recipientList, new Comparator<WebFriendlyRecipient>() {\n            Comparator<String> comp = new ComparableComparator();\n\n            @Override\n\t\t\tpublic int compare(WebFriendlyRecipient o1, WebFriendlyRecipient o2) {\n                return comp.compare(o1.getDisplayName().trim().toLowerCase(), o2.getDisplayName().trim().toLowerCase());\n            }\n        });\n        return recipientList;\n    }", "signature": "List<WebFriendlyRecipient> getWebFriendlyRecipients(Collection<Recipient> recipients)", "full_signature": "public static List<WebFriendlyRecipient> getWebFriendlyRecipients(Collection<Recipient> recipients)", "class_method_signature": "ActionListUtil.getWebFriendlyRecipients(Collection<Recipient> recipients)", "testcase": false, "constructor": false, "invocations": ["size", "add", "sort", "compare", "toLowerCase", "trim", "getDisplayName", "toLowerCase", "trim", "getDisplayName"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}