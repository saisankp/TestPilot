{"test_class": {"identifier": "OntologyLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "phenol-io/src/test/java/org/monarchinitiative/phenol/io/OntologyLoaderTest.java"}, "test_case": {"identifier": "loadJsonStream", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void loadJsonStream() throws Exception {\n    Path ontologyPath = Paths.get(\"src/test/resources/hp_small.json\");\n    Ontology ontology = OntologyLoader.loadOntology(Files.newInputStream(ontologyPath));\n    System.out.println(ontology.countAllTerms());\n  }", "signature": "void loadJsonStream()", "full_signature": "@Test void loadJsonStream()", "class_method_signature": "OntologyLoaderTest.loadJsonStream()", "testcase": true, "constructor": false, "invocations": ["get", "loadOntology", "newInputStream", "println", "countAllTerms"]}, "focal_class": {"identifier": "OntologyLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(OntologyLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(OntologyLoader.class)", "var_name": "logger"}], "methods": [{"identifier": "OntologyLoader", "parameters": "()", "modifiers": "private", "return": "", "signature": " OntologyLoader()", "full_signature": "private  OntologyLoader()", "class_method_signature": "OntologyLoader.OntologyLoader()", "testcase": false, "constructor": true}, {"identifier": "loadOntology", "parameters": "(File file)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(File file)", "full_signature": "public static Ontology loadOntology(File file)", "class_method_signature": "OntologyLoader.loadOntology(File file)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(File file, String... termIdPrefixes)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(File file, String... termIdPrefixes)", "full_signature": "public static Ontology loadOntology(File file, String... termIdPrefixes)", "class_method_signature": "OntologyLoader.loadOntology(File file, String... termIdPrefixes)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(File file, CurieUtil curieUtil, String... termIdPrefixes)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(File file, CurieUtil curieUtil, String... termIdPrefixes)", "full_signature": "public static Ontology loadOntology(File file, CurieUtil curieUtil, String... termIdPrefixes)", "class_method_signature": "OntologyLoader.loadOntology(File file, CurieUtil curieUtil, String... termIdPrefixes)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(InputStream inputStream)", "full_signature": "public static Ontology loadOntology(InputStream inputStream)", "class_method_signature": "OntologyLoader.loadOntology(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(InputStream inputStream, String... termIdPrefixes)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(InputStream inputStream, String... termIdPrefixes)", "full_signature": "public static Ontology loadOntology(InputStream inputStream, String... termIdPrefixes)", "class_method_signature": "OntologyLoader.loadOntology(InputStream inputStream, String... termIdPrefixes)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(InputStream inputStream, CurieUtil curieUtil, String... termIdPrefixes)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(InputStream inputStream, CurieUtil curieUtil, String... termIdPrefixes)", "full_signature": "public static Ontology loadOntology(InputStream inputStream, CurieUtil curieUtil, String... termIdPrefixes)", "class_method_signature": "OntologyLoader.loadOntology(InputStream inputStream, CurieUtil curieUtil, String... termIdPrefixes)", "testcase": false, "constructor": false}, {"identifier": "loadOntology", "parameters": "(GraphDocument graphDocument, CurieUtil curieUtil, String... termIdPrefixes)", "modifiers": "public static", "return": "Ontology", "signature": "Ontology loadOntology(GraphDocument graphDocument, CurieUtil curieUtil, String... termIdPrefixes)", "full_signature": "public static Ontology loadOntology(GraphDocument graphDocument, CurieUtil curieUtil, String... termIdPrefixes)", "class_method_signature": "OntologyLoader.loadOntology(GraphDocument graphDocument, CurieUtil curieUtil, String... termIdPrefixes)", "testcase": false, "constructor": false}, {"identifier": "loadGraphDocument", "parameters": "(File file)", "modifiers": "private static", "return": "GraphDocument", "signature": "GraphDocument loadGraphDocument(File file)", "full_signature": "private static GraphDocument loadGraphDocument(File file)", "class_method_signature": "OntologyLoader.loadGraphDocument(File file)", "testcase": false, "constructor": false}, {"identifier": "loadGraphDocument", "parameters": "(InputStream inputStream)", "modifiers": "private static", "return": "GraphDocument", "signature": "GraphDocument loadGraphDocument(InputStream inputStream)", "full_signature": "private static GraphDocument loadGraphDocument(InputStream inputStream)", "class_method_signature": "OntologyLoader.loadGraphDocument(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(InputStream bufferedStream, int readlimit)", "modifiers": "private static", "return": "String", "signature": "String readBytes(InputStream bufferedStream, int readlimit)", "full_signature": "private static String readBytes(InputStream bufferedStream, int readlimit)", "class_method_signature": "OntologyLoader.readBytes(InputStream bufferedStream, int readlimit)", "testcase": false, "constructor": false}, {"identifier": "isJsonGraphDoc", "parameters": "(String firstBytes)", "modifiers": "private static", "return": "boolean", "signature": "boolean isJsonGraphDoc(String firstBytes)", "full_signature": "private static boolean isJsonGraphDoc(String firstBytes)", "class_method_signature": "OntologyLoader.isJsonGraphDoc(String firstBytes)", "testcase": false, "constructor": false}], "file": "phenol-io/src/main/java/org/monarchinitiative/phenol/io/OntologyLoader.java"}, "focal_method": {"identifier": "loadOntology", "parameters": "(File file)", "modifiers": "public static", "return": "Ontology", "body": "public static Ontology loadOntology(File file) {\n    return loadOntology(file, CurieUtilBuilder.defaultCurieUtil());\n  }", "signature": "Ontology loadOntology(File file)", "full_signature": "public static Ontology loadOntology(File file)", "class_method_signature": "OntologyLoader.loadOntology(File file)", "testcase": false, "constructor": false, "invocations": ["loadOntology", "defaultCurieUtil"]}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}