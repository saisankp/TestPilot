{"test_class": {"identifier": "DefaultHttpSessionManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultHttpSessionManagerTest.java"}, "test_case": {"identifier": "testGetPath", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetPath() {\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        DefaultHttpSessionManager sessionManager = new DefaultHttpSessionManager();\n        sessionManager.setWebApplication(webApplication);\n        sessionManager.setPath(\"/\");\n        assertEquals(\"/\", sessionManager.getPath());\n    }", "signature": "void testGetPath()", "full_signature": "@Test void testGetPath()", "class_method_signature": "DefaultHttpSessionManagerTest.testGetPath()", "testcase": true, "constructor": false, "invocations": ["setWebApplication", "setPath", "assertEquals", "getPath"]}, "focal_class": {"identifier": "DefaultHttpSessionManager", "superclass": "", "interfaces": "implements HttpSessionManager, SessionCookieConfig", "fields": [{"original_string": "protected final ArrayList<HttpSessionAttributeListener> attributeListeners;", "modifier": "protected final", "type": "ArrayList<HttpSessionAttributeListener>", "declarator": "attributeListeners", "var_name": "attributeListeners"}, {"original_string": "protected String comment;", "modifier": "protected", "type": "String", "declarator": "comment", "var_name": "comment"}, {"original_string": "protected final Set<SessionTrackingMode> defaultSessionTrackingModes;", "modifier": "protected final", "type": "Set<SessionTrackingMode>", "declarator": "defaultSessionTrackingModes", "var_name": "defaultSessionTrackingModes"}, {"original_string": "protected String domain;", "modifier": "protected", "type": "String", "declarator": "domain", "var_name": "domain"}, {"original_string": "protected boolean httpOnly;", "modifier": "protected", "type": "boolean", "declarator": "httpOnly", "var_name": "httpOnly"}, {"original_string": "protected final ArrayList<HttpSessionIdListener> idListeners;", "modifier": "protected final", "type": "ArrayList<HttpSessionIdListener>", "declarator": "idListeners", "var_name": "idListeners"}, {"original_string": "protected int maxAge;", "modifier": "protected", "type": "int", "declarator": "maxAge", "var_name": "maxAge"}, {"original_string": "protected String name;", "modifier": "protected", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "protected String path;", "modifier": "protected", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "protected boolean secure;", "modifier": "protected", "type": "boolean", "declarator": "secure", "var_name": "secure"}, {"original_string": "protected final ArrayList<HttpSessionListener> sessionListeners;", "modifier": "protected final", "type": "ArrayList<HttpSessionListener>", "declarator": "sessionListeners", "var_name": "sessionListeners"}, {"original_string": "protected int sessionTimeout;", "modifier": "protected", "type": "int", "declarator": "sessionTimeout", "var_name": "sessionTimeout"}, {"original_string": "protected Set<SessionTrackingMode> sessionTrackingModes;", "modifier": "protected", "type": "Set<SessionTrackingMode>", "declarator": "sessionTrackingModes", "var_name": "sessionTrackingModes"}, {"original_string": "protected Map<String, HttpSession> sessions;", "modifier": "protected", "type": "Map<String, HttpSession>", "declarator": "sessions", "var_name": "sessions"}, {"original_string": "protected WebApplication webApplication;", "modifier": "protected", "type": "WebApplication", "declarator": "webApplication", "var_name": "webApplication"}], "methods": [{"identifier": "DefaultHttpSessionManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultHttpSessionManager()", "full_signature": "public  DefaultHttpSessionManager()", "class_method_signature": "DefaultHttpSessionManager.DefaultHttpSessionManager()", "testcase": false, "constructor": true}, {"identifier": "createSession", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public synchronized", "return": "HttpSession", "signature": "HttpSession createSession(HttpServletRequest request)", "full_signature": "@Override public synchronized HttpSession createSession(HttpServletRequest request)", "class_method_signature": "DefaultHttpSessionManager.createSession(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "(HttpServletRequest request, String currentSessionId)", "modifiers": "@Override public", "return": "HttpSession", "signature": "HttpSession getSession(HttpServletRequest request, String currentSessionId)", "full_signature": "@Override public HttpSession getSession(HttpServletRequest request, String currentSessionId)", "class_method_signature": "DefaultHttpSessionManager.getSession(HttpServletRequest request, String currentSessionId)", "testcase": false, "constructor": false}, {"identifier": "changeSessionId", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "String", "signature": "String changeSessionId(HttpServletRequest request)", "full_signature": "@Override public String changeSessionId(HttpServletRequest request)", "class_method_signature": "DefaultHttpSessionManager.changeSessionId(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(T listener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(T listener)", "full_signature": "@Override public void addListener(T listener)", "class_method_signature": "DefaultHttpSessionManager.addListener(T listener)", "testcase": false, "constructor": false}, {"identifier": "attributeAdded", "parameters": "(HttpSession session, String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void attributeAdded(HttpSession session, String name, Object value)", "full_signature": "@Override public void attributeAdded(HttpSession session, String name, Object value)", "class_method_signature": "DefaultHttpSessionManager.attributeAdded(HttpSession session, String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "attributeReplaced", "parameters": "(HttpSession session, String name, Object oldValue, Object newValue)", "modifiers": "@Override public", "return": "void", "signature": "void attributeReplaced(HttpSession session, String name, Object oldValue, Object newValue)", "full_signature": "@Override public void attributeReplaced(HttpSession session, String name, Object oldValue, Object newValue)", "class_method_signature": "DefaultHttpSessionManager.attributeReplaced(HttpSession session, String name, Object oldValue, Object newValue)", "testcase": false, "constructor": false}, {"identifier": "attributeRemoved", "parameters": "(HttpSession session, String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void attributeRemoved(HttpSession session, String name, Object value)", "full_signature": "@Override public void attributeRemoved(HttpSession session, String name, Object value)", "class_method_signature": "DefaultHttpSessionManager.attributeRemoved(HttpSession session, String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "destroySession", "parameters": "(HttpSession session)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void destroySession(HttpSession session)", "full_signature": "@Override public synchronized void destroySession(HttpSession session)", "class_method_signature": "DefaultHttpSessionManager.destroySession(HttpSession session)", "testcase": false, "constructor": false}, {"identifier": "encodeRedirectURL", "parameters": "(HttpServletResponse response, String url)", "modifiers": "@Override public", "return": "String", "signature": "String encodeRedirectURL(HttpServletResponse response, String url)", "full_signature": "@Override public String encodeRedirectURL(HttpServletResponse response, String url)", "class_method_signature": "DefaultHttpSessionManager.encodeRedirectURL(HttpServletResponse response, String url)", "testcase": false, "constructor": false}, {"identifier": "encodeURL", "parameters": "(HttpServletResponse response, String url)", "modifiers": "@Override public", "return": "String", "signature": "String encodeURL(HttpServletResponse response, String url)", "full_signature": "@Override public String encodeURL(HttpServletResponse response, String url)", "class_method_signature": "DefaultHttpSessionManager.encodeURL(HttpServletResponse response, String url)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getComment()", "full_signature": "@Override public String getComment()", "class_method_signature": "DefaultHttpSessionManager.getComment()", "testcase": false, "constructor": false}, {"identifier": "getDefaultSessionTrackingModes", "parameters": "()", "modifiers": "@Override public", "return": "Set<SessionTrackingMode>", "signature": "Set<SessionTrackingMode> getDefaultSessionTrackingModes()", "full_signature": "@Override public Set<SessionTrackingMode> getDefaultSessionTrackingModes()", "class_method_signature": "DefaultHttpSessionManager.getDefaultSessionTrackingModes()", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDomain()", "full_signature": "@Override public String getDomain()", "class_method_signature": "DefaultHttpSessionManager.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getEffectiveSessionTrackingModes", "parameters": "()", "modifiers": "@Override public", "return": "Set<SessionTrackingMode>", "signature": "Set<SessionTrackingMode> getEffectiveSessionTrackingModes()", "full_signature": "@Override public Set<SessionTrackingMode> getEffectiveSessionTrackingModes()", "class_method_signature": "DefaultHttpSessionManager.getEffectiveSessionTrackingModes()", "testcase": false, "constructor": false}, {"identifier": "getMaxAge", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxAge()", "full_signature": "@Override public int getMaxAge()", "class_method_signature": "DefaultHttpSessionManager.getMaxAge()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultHttpSessionManager.getName()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPath()", "full_signature": "@Override public String getPath()", "class_method_signature": "DefaultHttpSessionManager.getPath()", "testcase": false, "constructor": false}, {"identifier": "getSessionCookieConfig", "parameters": "()", "modifiers": "@Override public", "return": "SessionCookieConfig", "signature": "SessionCookieConfig getSessionCookieConfig()", "full_signature": "@Override public SessionCookieConfig getSessionCookieConfig()", "class_method_signature": "DefaultHttpSessionManager.getSessionCookieConfig()", "testcase": false, "constructor": false}, {"identifier": "getSessionTimeout", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSessionTimeout()", "full_signature": "@Override public int getSessionTimeout()", "class_method_signature": "DefaultHttpSessionManager.getSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "hasSession", "parameters": "(String sessionId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasSession(String sessionId)", "full_signature": "@Override public boolean hasSession(String sessionId)", "class_method_signature": "DefaultHttpSessionManager.hasSession(String sessionId)", "testcase": false, "constructor": false}, {"identifier": "isHttpOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isHttpOnly()", "full_signature": "@Override public boolean isHttpOnly()", "class_method_signature": "DefaultHttpSessionManager.isHttpOnly()", "testcase": false, "constructor": false}, {"identifier": "isSecure", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSecure()", "full_signature": "@Override public boolean isSecure()", "class_method_signature": "DefaultHttpSessionManager.isSecure()", "testcase": false, "constructor": false}, {"identifier": "setComment", "parameters": "(String comment)", "modifiers": "@Override public", "return": "void", "signature": "void setComment(String comment)", "full_signature": "@Override public void setComment(String comment)", "class_method_signature": "DefaultHttpSessionManager.setComment(String comment)", "testcase": false, "constructor": false}, {"identifier": "setDomain", "parameters": "(String domain)", "modifiers": "@Override public", "return": "void", "signature": "void setDomain(String domain)", "full_signature": "@Override public void setDomain(String domain)", "class_method_signature": "DefaultHttpSessionManager.setDomain(String domain)", "testcase": false, "constructor": false}, {"identifier": "setHttpOnly", "parameters": "(boolean httpOnly)", "modifiers": "@Override public", "return": "void", "signature": "void setHttpOnly(boolean httpOnly)", "full_signature": "@Override public void setHttpOnly(boolean httpOnly)", "class_method_signature": "DefaultHttpSessionManager.setHttpOnly(boolean httpOnly)", "testcase": false, "constructor": false}, {"identifier": "setMaxAge", "parameters": "(int maxAge)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxAge(int maxAge)", "full_signature": "@Override public void setMaxAge(int maxAge)", "class_method_signature": "DefaultHttpSessionManager.setMaxAge(int maxAge)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setName(String name)", "full_signature": "@Override public void setName(String name)", "class_method_signature": "DefaultHttpSessionManager.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "@Override public", "return": "void", "signature": "void setPath(String path)", "full_signature": "@Override public void setPath(String path)", "class_method_signature": "DefaultHttpSessionManager.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "setSecure", "parameters": "(boolean secure)", "modifiers": "@Override public", "return": "void", "signature": "void setSecure(boolean secure)", "full_signature": "@Override public void setSecure(boolean secure)", "class_method_signature": "DefaultHttpSessionManager.setSecure(boolean secure)", "testcase": false, "constructor": false}, {"identifier": "setSessionTimeout", "parameters": "(int sessionTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void setSessionTimeout(int sessionTimeout)", "full_signature": "@Override public void setSessionTimeout(int sessionTimeout)", "class_method_signature": "DefaultHttpSessionManager.setSessionTimeout(int sessionTimeout)", "testcase": false, "constructor": false}, {"identifier": "setSessionTrackingModes", "parameters": "(Set<SessionTrackingMode> sessionTrackingModes)", "modifiers": "@Override public", "return": "void", "signature": "void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "full_signature": "@Override public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "class_method_signature": "DefaultHttpSessionManager.setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "testcase": false, "constructor": false}, {"identifier": "setWebApplication", "parameters": "(WebApplication webApplication)", "modifiers": "@Override public", "return": "void", "signature": "void setWebApplication(WebApplication webApplication)", "full_signature": "@Override public void setWebApplication(WebApplication webApplication)", "class_method_signature": "DefaultHttpSessionManager.setWebApplication(WebApplication webApplication)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultHttpSessionManager.java"}, "focal_method": {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getPath() {\n        return path;\n    }", "signature": "String getPath()", "full_signature": "@Override public String getPath()", "class_method_signature": "DefaultHttpSessionManager.getPath()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}