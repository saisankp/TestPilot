{"test_class": {"identifier": "StreamStatusMetricServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StreamStatusMetricServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StreamStatusMetricServiceTest.class)", "var_name": "LOGGER"}, {"original_string": "private StreamStatusMetricService service;", "modifier": "private", "type": "StreamStatusMetricService", "declarator": "service", "var_name": "service"}], "file": "engine/src/test/java/com/stratio/decision/service/StreamStatusMetricServiceTest.java"}, "test_case": {"identifier": "testGetStreamActions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStreamActions() throws Exception {\n        Map<String, String> listActions= service.getStreamActions();\n        assertEquals(\"Expected value not found\", 2, listActions.size());\n        assertTrue(\"Expected true not found\", listActions.containsKey(StreamsHelper.STREAM_NAME));\n        assertTrue(\"Expected true not found\", listActions.get(StreamsHelper.STREAM_NAME).equals(StreamsHelper.ACTION_LISTEN_TOKEN));\n    }", "signature": "void testGetStreamActions()", "full_signature": "@Test public void testGetStreamActions()", "class_method_signature": "StreamStatusMetricServiceTest.testGetStreamActions()", "testcase": true, "constructor": false, "invocations": ["getStreamActions", "assertEquals", "size", "assertTrue", "containsKey", "assertTrue", "equals", "get"]}, "focal_class": {"identifier": "StreamStatusMetricService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final StreamStatusDao streamStatusDao;", "modifier": "private final", "type": "StreamStatusDao", "declarator": "streamStatusDao", "var_name": "streamStatusDao"}], "methods": [{"identifier": "StreamStatusMetricService", "parameters": "(StreamStatusDao streamStatusDao)", "modifiers": "public", "return": "", "signature": " StreamStatusMetricService(StreamStatusDao streamStatusDao)", "full_signature": "public  StreamStatusMetricService(StreamStatusDao streamStatusDao)", "class_method_signature": "StreamStatusMetricService.StreamStatusMetricService(StreamStatusDao streamStatusDao)", "testcase": false, "constructor": true}, {"identifier": "getTotalStreams", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.count\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "int", "signature": "int getTotalStreams()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.count\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public int getTotalStreams()", "class_method_signature": "StreamStatusMetricService.getTotalStreams()", "testcase": false, "constructor": false}, {"identifier": "getStreamNames", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "List<String>", "signature": "List<String> getStreamNames()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public List<String> getStreamNames()", "class_method_signature": "StreamStatusMetricService.getStreamNames()", "testcase": false, "constructor": false}, {"identifier": "getStreamActions", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "Map<String, String>", "signature": "Map<String, String> getStreamActions()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public Map<String, String> getStreamActions()", "class_method_signature": "StreamStatusMetricService.getStreamActions()", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/service/StreamStatusMetricService.java"}, "focal_method": {"identifier": "getStreamActions", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "Map<String, String>", "body": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS)\n    public Map<String, String> getStreamActions() {\n        Map<String, StreamStatusDTO> streams = streamStatusDao.getAll();\n        Map<String, String> result = new HashMap<>();\n        for (StreamStatusDTO stream : streams.values()) {\n            result.put(stream.getStreamName(), stream.getActionsEnabled().toString());\n        }\n        return result;\n    }", "signature": "Map<String, String> getStreamActions()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public Map<String, String> getStreamActions()", "class_method_signature": "StreamStatusMetricService.getStreamActions()", "testcase": false, "constructor": false, "invocations": ["getAll", "values", "put", "getStreamName", "toString", "getActionsEnabled"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}