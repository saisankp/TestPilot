{"test_class": {"identifier": "PlaceholderSubstitutionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SUBJECT_ID = \"nginx:ditto\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT_ID = \"nginx:ditto\"", "var_name": "SUBJECT_ID"}, {"original_string": "private static final String CUSTOM_HEADER_KEY = \"customHeaderKey\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_HEADER_KEY = \"customHeaderKey\"", "var_name": "CUSTOM_HEADER_KEY"}, {"original_string": "private static final String ANOTHER_SUBJECT_ID = \"custom:subjectId\";", "modifier": "private static final", "type": "String", "declarator": "ANOTHER_SUBJECT_ID = \"custom:subjectId\"", "var_name": "ANOTHER_SUBJECT_ID"}, {"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.newBuilder()\n            .authorizationContext(AuthorizationContext.newInstance(DittoAuthorizationContextType.UNSPECIFIED,\n                    AuthorizationSubject.newInstance(SUBJECT_ID)))\n            .putHeader(CUSTOM_HEADER_KEY, ANOTHER_SUBJECT_ID)\n            .build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.newBuilder()\n            .authorizationContext(AuthorizationContext.newInstance(DittoAuthorizationContextType.UNSPECIFIED,\n                    AuthorizationSubject.newInstance(SUBJECT_ID)))\n            .putHeader(CUSTOM_HEADER_KEY, ANOTHER_SUBJECT_ID)\n            .build()", "var_name": "DITTO_HEADERS"}, {"original_string": "private PlaceholderSubstitution underTest;", "modifier": "private", "type": "PlaceholderSubstitution", "declarator": "underTest", "var_name": "underTest"}], "file": "services/concierge/enforcement/src/test/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/PlaceholderSubstitutionTest.java"}, "test_case": {"identifier": "applyWithHandledCommandReturnsTheReplacedCommandInstanceWhenLegacyPlaceholderIsSpecified", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void applyWithHandledCommandReturnsTheReplacedCommandInstanceWhenLegacyPlaceholderIsSpecified() {\n        final ModifySubject commandWithoutPlaceholders = ModifySubject.of(PolicyId.of(\"org.eclipse.ditto:my-policy\"),\n                Label.of(\"my-label\"), Subject.newInstance(\"${request.subjectId}\", SubjectType.GENERATED),\n                DITTO_HEADERS);\n\n        final WithDittoHeaders response = applyBlocking(commandWithoutPlaceholders);\n\n        final ModifySubject expectedCommandWithPlaceholders = ModifySubject.of(commandWithoutPlaceholders.getEntityId(),\n                commandWithoutPlaceholders.getLabel(), Subject.newInstance(SUBJECT_ID, SubjectType.GENERATED),\n                DITTO_HEADERS);\n        assertThat(response).isEqualTo(expectedCommandWithPlaceholders);\n    }", "signature": "void applyWithHandledCommandReturnsTheReplacedCommandInstanceWhenLegacyPlaceholderIsSpecified()", "full_signature": "@Test public void applyWithHandledCommandReturnsTheReplacedCommandInstanceWhenLegacyPlaceholderIsSpecified()", "class_method_signature": "PlaceholderSubstitutionTest.applyWithHandledCommandReturnsTheReplacedCommandInstanceWhenLegacyPlaceholderIsSpecified()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "newInstance", "applyBlocking", "of", "getEntityId", "getLabel", "newInstance", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "PlaceholderSubstitution", "superclass": "", "interfaces": "implements Function<WithDittoHeaders, CompletionStage<WithDittoHeaders>>", "fields": [{"original_string": "private final HeaderBasedPlaceholderSubstitutionAlgorithm substitutionAlgorithm;", "modifier": "private final", "type": "HeaderBasedPlaceholderSubstitutionAlgorithm", "declarator": "substitutionAlgorithm", "var_name": "substitutionAlgorithm"}, {"original_string": "private final SubstitutionStrategyRegistry substitutionStrategyRegistry;", "modifier": "private final", "type": "SubstitutionStrategyRegistry", "declarator": "substitutionStrategyRegistry", "var_name": "substitutionStrategyRegistry"}], "methods": [{"identifier": "PlaceholderSubstitution", "parameters": "(final HeaderBasedPlaceholderSubstitutionAlgorithm substitutionAlgorithm,\n            final SubstitutionStrategyRegistry substitutionStrategyRegistry)", "modifiers": "private", "return": "", "signature": " PlaceholderSubstitution(final HeaderBasedPlaceholderSubstitutionAlgorithm substitutionAlgorithm,\n            final SubstitutionStrategyRegistry substitutionStrategyRegistry)", "full_signature": "private  PlaceholderSubstitution(final HeaderBasedPlaceholderSubstitutionAlgorithm substitutionAlgorithm,\n            final SubstitutionStrategyRegistry substitutionStrategyRegistry)", "class_method_signature": "PlaceholderSubstitution.PlaceholderSubstitution(final HeaderBasedPlaceholderSubstitutionAlgorithm substitutionAlgorithm,\n            final SubstitutionStrategyRegistry substitutionStrategyRegistry)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "PlaceholderSubstitution", "signature": "PlaceholderSubstitution newInstance()", "full_signature": "public static PlaceholderSubstitution newInstance()", "class_method_signature": "PlaceholderSubstitution.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newExtendedInstance", "parameters": "(\n            final Map<String, Function<DittoHeaders, String>> additionalReplacementDefinitions)", "modifiers": "public static", "return": "PlaceholderSubstitution", "signature": "PlaceholderSubstitution newExtendedInstance(\n            final Map<String, Function<DittoHeaders, String>> additionalReplacementDefinitions)", "full_signature": "public static PlaceholderSubstitution newExtendedInstance(\n            final Map<String, Function<DittoHeaders, String>> additionalReplacementDefinitions)", "class_method_signature": "PlaceholderSubstitution.newExtendedInstance(\n            final Map<String, Function<DittoHeaders, String>> additionalReplacementDefinitions)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final WithDittoHeaders withDittoHeaders)", "modifiers": "@Override public", "return": "CompletionStage<WithDittoHeaders>", "signature": "CompletionStage<WithDittoHeaders> apply(final WithDittoHeaders withDittoHeaders)", "full_signature": "@Override public CompletionStage<WithDittoHeaders> apply(final WithDittoHeaders withDittoHeaders)", "class_method_signature": "PlaceholderSubstitution.apply(final WithDittoHeaders withDittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "createDefaultReplacementDefinitions", "parameters": "()", "modifiers": "private static", "return": "Map<String, Function<DittoHeaders, String>>", "signature": "Map<String, Function<DittoHeaders, String>> createDefaultReplacementDefinitions()", "full_signature": "private static Map<String, Function<DittoHeaders, String>> createDefaultReplacementDefinitions()", "class_method_signature": "PlaceholderSubstitution.createDefaultReplacementDefinitions()", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "modifiers": "private static", "return": "PlaceholderSubstitution", "signature": "PlaceholderSubstitution createInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "full_signature": "private static PlaceholderSubstitution createInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "class_method_signature": "PlaceholderSubstitution.createInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "testcase": false, "constructor": false}], "file": "services/concierge/enforcement/src/main/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/PlaceholderSubstitution.java"}, "focal_method": {"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "PlaceholderSubstitution", "body": "public static PlaceholderSubstitution newInstance() {\n        final Map<String, Function<DittoHeaders, String>> defaultReplacementDefinitions =\n                createDefaultReplacementDefinitions();\n\n        return createInstance(defaultReplacementDefinitions);\n    }", "signature": "PlaceholderSubstitution newInstance()", "full_signature": "public static PlaceholderSubstitution newInstance()", "class_method_signature": "PlaceholderSubstitution.newInstance()", "testcase": false, "constructor": false, "invocations": ["createDefaultReplacementDefinitions", "createInstance"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}