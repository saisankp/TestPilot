{"test_class": {"identifier": "ModelTest", "superclass": "extends OrmTestCase", "interfaces": "", "fields": [], "file": "data/orm/src/test/java/leap/orm/model/ModelTest.java"}, "test_case": {"identifier": "testCompositeIdModelSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompositeIdModelSet() {\n\t\tModelWithCompositeId mc = new ModelWithCompositeId();\n\t\tmc.set(\"id\", \"123\");\n\t\tassertEquals(\"123\", mc.getId());\n\n\t\tModelWithId3 m3 = new ModelWithId3();\n\t\tm3.set(\"id\", New.hashMap(\"id1\", \"test1\", \"id2\", \"test2\"));\n\t\tassertEquals(\"test1\", m3.getId1());\n\t\tassertEquals(\"test2\", m3.getId2());\n\t}", "signature": "void testCompositeIdModelSet()", "full_signature": "@Test public void testCompositeIdModelSet()", "class_method_signature": "ModelTest.testCompositeIdModelSet()", "testcase": true, "constructor": false, "invocations": ["set", "assertEquals", "getId", "set", "hashMap", "assertEquals", "getId1", "assertEquals", "getId2"]}, "focal_class": {"identifier": "Model", "superclass": "", "interfaces": "implements Getter,ValidatableBean,JsonStringable", "fields": [{"original_string": "protected static final ThreadLocal<String> className = new ThreadLocal<String>();", "modifier": "protected static final", "type": "ThreadLocal<String>", "declarator": "className = new ThreadLocal<String>()", "var_name": "className"}, {"original_string": "protected EntityMapping \t  em;", "modifier": "protected", "type": "EntityMapping", "declarator": "em", "var_name": "em"}, {"original_string": "protected Dao\t        \t  dao;", "modifier": "protected", "type": "Dao", "declarator": "dao", "var_name": "dao"}, {"original_string": "protected Map<String, Object> fields = new WrappedCaseInsensitiveMap<Object>();", "modifier": "protected", "type": "Map<String, Object>", "declarator": "fields = new WrappedCaseInsensitiveMap<Object>()", "var_name": "fields"}, {"original_string": "private BeanType beanType;", "modifier": "private", "type": "BeanType", "declarator": "beanType", "var_name": "beanType"}, {"original_string": "private Errors\t errors;", "modifier": "private", "type": "Errors", "declarator": "errors", "var_name": "errors"}], "methods": [{"identifier": "newInstance", "parameters": "()", "modifiers": "@Instrument public static", "return": "T", "signature": "T newInstance()", "full_signature": "@Instrument public static T newInstance()", "class_method_signature": "Model.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "T", "signature": "T newInstance(Object id)", "full_signature": "@Instrument public static T newInstance(Object id)", "class_method_signature": "Model.newInstance(Object id)", "testcase": false, "constructor": false}, {"identifier": "nextId", "parameters": "()", "modifiers": "@Instrument public static", "return": "Object", "signature": "Object nextId()", "full_signature": "@Instrument public static Object nextId()", "class_method_signature": "Model.nextId()", "testcase": false, "constructor": false}, {"identifier": "cmdInsert", "parameters": "()", "modifiers": "@Instrument public static", "return": "InsertCommand", "signature": "InsertCommand cmdInsert()", "full_signature": "@Instrument public static InsertCommand cmdInsert()", "class_method_signature": "Model.cmdInsert()", "testcase": false, "constructor": false}, {"identifier": "cmdUpdate", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "UpdateCommand", "signature": "UpdateCommand cmdUpdate(Object id)", "full_signature": "@Instrument public static UpdateCommand cmdUpdate(Object id)", "class_method_signature": "Model.cmdUpdate(Object id)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Map<String, Object> fields)", "modifiers": "@Instrument public static", "return": "T", "signature": "T create(Map<String, Object> fields)", "full_signature": "@Instrument public static T create(Map<String, Object> fields)", "class_method_signature": "Model.create(Map<String, Object> fields)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Object id,Map<String, Object> fields)", "modifiers": "@Instrument public static", "return": "boolean", "signature": "boolean update(Object id,Map<String, Object> fields)", "full_signature": "@Instrument public static boolean update(Object id,Map<String, Object> fields)", "class_method_signature": "Model.update(Object id,Map<String, Object> fields)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Object id,String field,Object value)", "modifiers": "@Instrument public static", "return": "boolean", "signature": "boolean update(Object id,String field,Object value)", "full_signature": "@Instrument public static boolean update(Object id,String field,Object value)", "class_method_signature": "Model.update(Object id,String field,Object value)", "testcase": false, "constructor": false}, {"identifier": "updateAll", "parameters": "(Map<String, Object> fields, String whereExpression, Object... args)", "modifiers": "@Instrument public static", "return": "int", "signature": "int updateAll(Map<String, Object> fields, String whereExpression, Object... args)", "full_signature": "@Instrument public static int updateAll(Map<String, Object> fields, String whereExpression, Object... args)", "class_method_signature": "Model.updateAll(Map<String, Object> fields, String whereExpression, Object... args)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "void", "signature": "void delete(Object id)", "full_signature": "@Instrument public static void delete(Object id)", "class_method_signature": "Model.delete(Object id)", "testcase": false, "constructor": false}, {"identifier": "tryDelete", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "boolean", "signature": "boolean tryDelete(Object id)", "full_signature": "@Instrument public static boolean tryDelete(Object id)", "class_method_signature": "Model.tryDelete(Object id)", "testcase": false, "constructor": false}, {"identifier": "cascadeDelete", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "void", "signature": "void cascadeDelete(Object id)", "full_signature": "@Instrument public static void cascadeDelete(Object id)", "class_method_signature": "Model.cascadeDelete(Object id)", "testcase": false, "constructor": false}, {"identifier": "tryCascadeDelete", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "boolean", "signature": "boolean tryCascadeDelete(Object id)", "full_signature": "@Instrument public static boolean tryCascadeDelete(Object id)", "class_method_signature": "Model.tryCascadeDelete(Object id)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Instrument public static", "return": "int", "signature": "int deleteAll()", "full_signature": "@Instrument public static int deleteAll()", "class_method_signature": "Model.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Object[] ids)", "modifiers": "@Instrument public static", "return": "int[]", "signature": "int[] deleteAll(Object[] ids)", "full_signature": "@Instrument public static int[] deleteAll(Object[] ids)", "class_method_signature": "Model.deleteAll(Object[] ids)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(String whereExpression)", "modifiers": "@Instrument public static", "return": "int", "signature": "int deleteAll(String whereExpression)", "full_signature": "@Instrument public static int deleteAll(String whereExpression)", "class_method_signature": "Model.deleteAll(String whereExpression)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(String whereExpression,Object... args)", "modifiers": "@Instrument public static", "return": "int", "signature": "int deleteAll(String whereExpression,Object... args)", "full_signature": "@Instrument public static int deleteAll(String whereExpression,Object... args)", "class_method_signature": "Model.deleteAll(String whereExpression,Object... args)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(String whereExpression,Map<String, Object> params)", "modifiers": "@Instrument @SuppressWarnings(\"rawtypes\") public static", "return": "int", "signature": "int deleteAll(String whereExpression,Map<String, Object> params)", "full_signature": "@Instrument @SuppressWarnings(\"rawtypes\") public static int deleteAll(String whereExpression,Map<String, Object> params)", "class_method_signature": "Model.deleteAll(String whereExpression,Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "deleteBy", "parameters": "(String field,Object value)", "modifiers": "@Instrument public static", "return": "int", "signature": "int deleteBy(String field,Object value)", "full_signature": "@Instrument public static int deleteBy(String field,Object value)", "class_method_signature": "Model.deleteBy(String field,Object value)", "testcase": false, "constructor": false}, {"identifier": "deleteBy", "parameters": "(String field1, Object value1, String field2, Object value2)", "modifiers": "@Instrument public static", "return": "int", "signature": "int deleteBy(String field1, Object value1, String field2, Object value2)", "full_signature": "@Instrument public static int deleteBy(String field1, Object value1, String field2, Object value2)", "class_method_signature": "Model.deleteBy(String field1, Object value1, String field2, Object value2)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Instrument public static", "return": "long", "signature": "long count()", "full_signature": "@Instrument public static long count()", "class_method_signature": "Model.count()", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "T", "signature": "T find(Object id)", "full_signature": "@Instrument public static T find(Object id)", "class_method_signature": "Model.find(Object id)", "testcase": false, "constructor": false}, {"identifier": "findOrNull", "parameters": "(Object id)", "modifiers": "@Instrument public static", "return": "T", "signature": "T findOrNull(Object id)", "full_signature": "@Instrument public static T findOrNull(Object id)", "class_method_signature": "Model.findOrNull(Object id)", "testcase": false, "constructor": false}, {"identifier": "findList", "parameters": "(Object[] ids)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> findList(Object[] ids)", "full_signature": "@Instrument public static List<T> findList(Object[] ids)", "class_method_signature": "Model.findList(Object[] ids)", "testcase": false, "constructor": false}, {"identifier": "findListIfExists", "parameters": "(Object[] ids)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> findListIfExists(Object[] ids)", "full_signature": "@Instrument public static List<T> findListIfExists(Object[] ids)", "class_method_signature": "Model.findListIfExists(Object[] ids)", "testcase": false, "constructor": false}, {"identifier": "findBy", "parameters": "(String field,Object value)", "modifiers": "@Instrument public static", "return": "T", "signature": "T findBy(String field,Object value)", "full_signature": "@Instrument public static T findBy(String field,Object value)", "class_method_signature": "Model.findBy(String field,Object value)", "testcase": false, "constructor": false}, {"identifier": "findBy", "parameters": "(String field1,Object value1, String field2, Object value2)", "modifiers": "@Instrument public static", "return": "T", "signature": "T findBy(String field1,Object value1, String field2, Object value2)", "full_signature": "@Instrument public static T findBy(String field1,Object value1, String field2, Object value2)", "class_method_signature": "Model.findBy(String field1,Object value1, String field2, Object value2)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "()", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> findAll()", "full_signature": "@Instrument public static List<T> findAll()", "class_method_signature": "Model.findAll()", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> all()", "full_signature": "@Instrument public static List<T> all()", "class_method_signature": "Model.all()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "@Instrument public static", "return": "T", "signature": "T first()", "full_signature": "@Instrument public static T first()", "class_method_signature": "Model.first()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "(int num)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> first(int num)", "full_signature": "@Instrument public static List<T> first(int num)", "class_method_signature": "Model.first(int num)", "testcase": false, "constructor": false}, {"identifier": "firstOrNull", "parameters": "()", "modifiers": "@Instrument public static", "return": "T", "signature": "T firstOrNull()", "full_signature": "@Instrument public static T firstOrNull()", "class_method_signature": "Model.firstOrNull()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "@Instrument public static", "return": "T", "signature": "T last()", "full_signature": "@Instrument public static T last()", "class_method_signature": "Model.last()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "(int num)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> last(int num)", "full_signature": "@Instrument public static List<T> last(int num)", "class_method_signature": "Model.last(int num)", "testcase": false, "constructor": false}, {"identifier": "lastOrNull", "parameters": "()", "modifiers": "@Instrument public static", "return": "T", "signature": "T lastOrNull()", "full_signature": "@Instrument public static T lastOrNull()", "class_method_signature": "Model.lastOrNull()", "testcase": false, "constructor": false}, {"identifier": "lastCreated", "parameters": "(int num)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> lastCreated(int num)", "full_signature": "@Instrument public static List<T> lastCreated(int num)", "class_method_signature": "Model.lastCreated(int num)", "testcase": false, "constructor": false}, {"identifier": "lastUpdated", "parameters": "(int num)", "modifiers": "@Instrument public static", "return": "List<T>", "signature": "List<T> lastUpdated(int num)", "full_signature": "@Instrument public static List<T> lastUpdated(int num)", "class_method_signature": "Model.lastUpdated(int num)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String sqlOrKey)", "modifiers": "@Instrument public static", "return": "EntityQuery<T>", "signature": "EntityQuery<T> query(String sqlOrKey)", "full_signature": "@Instrument public static EntityQuery<T> query(String sqlOrKey)", "class_method_signature": "Model.query(String sqlOrKey)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "()", "modifiers": "@Instrument public static", "return": "CriteriaQuery<T>", "signature": "CriteriaQuery<T> query()", "full_signature": "@Instrument public static CriteriaQuery<T> query()", "class_method_signature": "Model.query()", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "()", "modifiers": "@Instrument public static", "return": "CriteriaWhere<T>", "signature": "CriteriaWhere<T> where()", "full_signature": "@Instrument public static CriteriaWhere<T> where()", "class_method_signature": "Model.where()", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String expression)", "modifiers": "@Instrument public static", "return": "CriteriaQuery<T>", "signature": "CriteriaQuery<T> where(String expression)", "full_signature": "@Instrument public static CriteriaQuery<T> where(String expression)", "class_method_signature": "Model.where(String expression)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String expression,Object... args)", "modifiers": "@Instrument public static", "return": "CriteriaQuery<T>", "signature": "CriteriaQuery<T> where(String expression,Object... args)", "full_signature": "@Instrument public static CriteriaQuery<T> where(String expression,Object... args)", "class_method_signature": "Model.where(String expression,Object... args)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String expression,Map<String,Object> params)", "modifiers": "@Instrument public static", "return": "CriteriaQuery<T>", "signature": "CriteriaQuery<T> where(String expression,Map<String,Object> params)", "full_signature": "@Instrument public static CriteriaQuery<T> where(String expression,Map<String,Object> params)", "class_method_signature": "Model.where(String expression,Map<String,Object> params)", "testcase": false, "constructor": false}, {"identifier": "createAll", "parameters": "(Object[] records)", "modifiers": "@Instrument public static", "return": "int[]", "signature": "int[] createAll(Object[] records)", "full_signature": "@Instrument public static int[] createAll(Object[] records)", "class_method_signature": "Model.createAll(Object[] records)", "testcase": false, "constructor": false}, {"identifier": "updateAll", "parameters": "(Object[] records)", "modifiers": "@Instrument public static", "return": "int[]", "signature": "int[] updateAll(Object[] records)", "full_signature": "@Instrument public static int[] updateAll(Object[] records)", "class_method_signature": "Model.updateAll(Object[] records)", "testcase": false, "constructor": false}, {"identifier": "doTransaction", "parameters": "(TransactionCallback callback)", "modifiers": "@Instrument public static", "return": "void", "signature": "void doTransaction(TransactionCallback callback)", "full_signature": "@Instrument public static void doTransaction(TransactionCallback callback)", "class_method_signature": "Model.doTransaction(TransactionCallback callback)", "testcase": false, "constructor": false}, {"identifier": "doTransaction", "parameters": "(TransactionCallbackWithResult<T> callback)", "modifiers": "@Instrument public static", "return": "T", "signature": "T doTransaction(TransactionCallbackWithResult<T> callback)", "full_signature": "@Instrument public static T doTransaction(TransactionCallbackWithResult<T> callback)", "class_method_signature": "Model.doTransaction(TransactionCallbackWithResult<T> callback)", "testcase": false, "constructor": false}, {"identifier": "doTransaction", "parameters": "(TransactionCallback callback, boolean requiresNew)", "modifiers": "@Instrument public static", "return": "void", "signature": "void doTransaction(TransactionCallback callback, boolean requiresNew)", "full_signature": "@Instrument public static void doTransaction(TransactionCallback callback, boolean requiresNew)", "class_method_signature": "Model.doTransaction(TransactionCallback callback, boolean requiresNew)", "testcase": false, "constructor": false}, {"identifier": "doTransaction", "parameters": "(TransactionCallbackWithResult<T> callback, boolean requiresNew)", "modifiers": "@Instrument public static", "return": "T", "signature": "T doTransaction(TransactionCallbackWithResult<T> callback, boolean requiresNew)", "full_signature": "@Instrument public static T doTransaction(TransactionCallbackWithResult<T> callback, boolean requiresNew)", "class_method_signature": "Model.doTransaction(TransactionCallbackWithResult<T> callback, boolean requiresNew)", "testcase": false, "constructor": false}, {"identifier": "dao", "parameters": "()", "modifiers": "@Instrument public static", "return": "Dao", "signature": "Dao dao()", "full_signature": "@Instrument public static Dao dao()", "class_method_signature": "Model.dao()", "testcase": false, "constructor": false}, {"identifier": "dmo", "parameters": "()", "modifiers": "@Instrument public static", "return": "Dmo", "signature": "Dmo dmo()", "full_signature": "@Instrument public static Dmo dmo()", "class_method_signature": "Model.dmo()", "testcase": false, "constructor": false}, {"identifier": "metamodel", "parameters": "()", "modifiers": "@Instrument public static", "return": "EntityMapping", "signature": "EntityMapping metamodel()", "full_signature": "@Instrument public static EntityMapping metamodel()", "class_method_signature": "Model.metamodel()", "testcase": false, "constructor": false}, {"identifier": "db", "parameters": "()", "modifiers": "@Instrument public static", "return": "Db", "signature": "Db db()", "full_signature": "@Instrument public static Db db()", "class_method_signature": "Model.db()", "testcase": false, "constructor": false}, {"identifier": "context", "parameters": "()", "modifiers": "@Instrument protected static", "return": "ModelContext", "signature": "ModelContext context()", "full_signature": "@Instrument protected static ModelContext context()", "class_method_signature": "Model.context()", "testcase": false, "constructor": false}, {"identifier": "className", "parameters": "()", "modifiers": "@Instrument protected static", "return": "String", "signature": "String className()", "full_signature": "@Instrument protected static String className()", "class_method_signature": "Model.className()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "protected static", "return": "String", "signature": "String getClassName()", "full_signature": "protected static String getClassName()", "class_method_signature": "Model.getClassName()", "testcase": false, "constructor": false}, {"identifier": "setClassName", "parameters": "(String name)", "modifiers": "protected static", "return": "void", "signature": "void setClassName(String name)", "full_signature": "protected static void setClassName(String name)", "class_method_signature": "Model.setClassName(String name)", "testcase": false, "constructor": false}, {"identifier": "Model", "parameters": "()", "modifiers": "public", "return": "", "signature": " Model()", "full_signature": "public  Model()", "class_method_signature": "Model.Model()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(OrmContext context, EntityMapping em)", "modifiers": "public final", "return": "void", "signature": "void init(OrmContext context, EntityMapping em)", "full_signature": "public final void init(OrmContext context, EntityMapping em)", "class_method_signature": "Model.init(OrmContext context, EntityMapping em)", "testcase": false, "constructor": false}, {"identifier": "getEntityName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getEntityName()", "full_signature": "public final String getEntityName()", "class_method_signature": "Model.getEntityName()", "testcase": false, "constructor": false}, {"identifier": "getEntityMapping", "parameters": "()", "modifiers": "public final", "return": "EntityMapping", "signature": "EntityMapping getEntityMapping()", "full_signature": "public final EntityMapping getEntityMapping()", "class_method_signature": "Model.getEntityMapping()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String field)", "modifiers": "public final", "return": "boolean", "signature": "boolean contains(String field)", "full_signature": "public final boolean contains(String field)", "class_method_signature": "Model.contains(String field)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String field)", "modifiers": "public final", "return": "Object", "signature": "Object get(String field)", "full_signature": "public final Object get(String field)", "class_method_signature": "Model.get(String field)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Named field)", "modifiers": "public final", "return": "Object", "signature": "Object get(Named field)", "full_signature": "public final Object get(Named field)", "class_method_signature": "Model.get(Named field)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String field)", "modifiers": "public", "return": "String", "signature": "String getString(String field)", "full_signature": "public String getString(String field)", "class_method_signature": "Model.getString(String field)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(String field)", "modifiers": "public", "return": "Integer", "signature": "Integer getInteger(String field)", "full_signature": "public Integer getInteger(String field)", "class_method_signature": "Model.getInteger(String field)", "testcase": false, "constructor": false}, {"identifier": "fields", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> fields()", "full_signature": "public Map<String, Object> fields()", "class_method_signature": "Model.fields()", "testcase": false, "constructor": false}, {"identifier": "errors", "parameters": "()", "modifiers": "public", "return": "Errors", "signature": "Errors errors()", "full_signature": "public Errors errors()", "class_method_signature": "Model.errors()", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "()", "modifiers": "public final", "return": "Object", "signature": "Object id()", "full_signature": "public final Object id()", "class_method_signature": "Model.id()", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "(Object id)", "modifiers": "public final", "return": "T", "signature": "T id(Object id)", "full_signature": "public final T id(Object id)", "class_method_signature": "Model.id(Object id)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String field,Object value)", "modifiers": "public final", "return": "T", "signature": "T set(String field,Object value)", "full_signature": "public final T set(String field,Object value)", "class_method_signature": "Model.set(String field,Object value)", "testcase": false, "constructor": false}, {"identifier": "createdAt", "parameters": "()", "modifiers": "public final", "return": "Timestamp", "signature": "Timestamp createdAt()", "full_signature": "public final Timestamp createdAt()", "class_method_signature": "Model.createdAt()", "testcase": false, "constructor": false}, {"identifier": "updatedAt", "parameters": "()", "modifiers": "public final", "return": "Timestamp", "signature": "Timestamp updatedAt()", "full_signature": "public final Timestamp updatedAt()", "class_method_signature": "Model.updatedAt()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Named field,Object value)", "modifiers": "public final", "return": "T", "signature": "T set(Named field,Object value)", "full_signature": "public final T set(Named field,Object value)", "class_method_signature": "Model.set(Named field,Object value)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(Map<String,? extends Object> fields)", "modifiers": "public", "return": "T", "signature": "T setAll(Map<String,? extends Object> fields)", "full_signature": "public T setAll(Map<String,? extends Object> fields)", "class_method_signature": "Model.setAll(Map<String,? extends Object> fields)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T save()", "full_signature": "public final T save()", "class_method_signature": "Model.save()", "testcase": false, "constructor": false}, {"identifier": "trySave", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean trySave()", "full_signature": "public final boolean trySave()", "class_method_signature": "Model.trySave()", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T insert()", "full_signature": "public final T insert()", "class_method_signature": "Model.insert()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T create()", "full_signature": "public final T create()", "class_method_signature": "Model.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CreateCallback<T> callback)", "modifiers": "public final", "return": "void", "signature": "void create(CreateCallback<T> callback)", "full_signature": "public final void create(CreateCallback<T> callback)", "class_method_signature": "Model.create(CreateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(PostCreateCallback<T> callback)", "modifiers": "public final", "return": "void", "signature": "void create(PostCreateCallback<T> callback)", "full_signature": "public final void create(PostCreateCallback<T> callback)", "class_method_signature": "Model.create(PostCreateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "tryCreate", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean tryCreate()", "full_signature": "public final boolean tryCreate()", "class_method_signature": "Model.tryCreate()", "testcase": false, "constructor": false}, {"identifier": "tryCreate", "parameters": "(CreateCallback<T> callback)", "modifiers": "public final", "return": "boolean", "signature": "boolean tryCreate(CreateCallback<T> callback)", "full_signature": "public final boolean tryCreate(CreateCallback<T> callback)", "class_method_signature": "Model.tryCreate(CreateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "upsert", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T upsert()", "full_signature": "public final T upsert()", "class_method_signature": "Model.upsert()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "public final", "return": "T", "signature": "T update()", "full_signature": "public final T update()", "class_method_signature": "Model.update()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(UpdateCallback<T> callback)", "modifiers": "public final", "return": "T", "signature": "T update(UpdateCallback<T> callback)", "full_signature": "public final T update(UpdateCallback<T> callback)", "class_method_signature": "Model.update(UpdateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(PostUpdateCallback<T> callback)", "modifiers": "public final", "return": "T", "signature": "T update(PostUpdateCallback<T> callback)", "full_signature": "public final T update(PostUpdateCallback<T> callback)", "class_method_signature": "Model.update(PostUpdateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "tryUpdate", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean tryUpdate()", "full_signature": "public final boolean tryUpdate()", "class_method_signature": "Model.tryUpdate()", "testcase": false, "constructor": false}, {"identifier": "tryUpdate", "parameters": "(UpdateCallback<T> callback)", "modifiers": "public final", "return": "boolean", "signature": "boolean tryUpdate(UpdateCallback<T> callback)", "full_signature": "public final boolean tryUpdate(UpdateCallback<T> callback)", "class_method_signature": "Model.tryUpdate(UpdateCallback<T> callback)", "testcase": false, "constructor": false}, {"identifier": "updateAll", "parameters": "(String whereExpression)", "modifiers": "public final", "return": "int", "signature": "int updateAll(String whereExpression)", "full_signature": "public final int updateAll(String whereExpression)", "class_method_signature": "Model.updateAll(String whereExpression)", "testcase": false, "constructor": false}, {"identifier": "updateAll", "parameters": "(String whereExpression,Object... args)", "modifiers": "public final", "return": "int", "signature": "int updateAll(String whereExpression,Object... args)", "full_signature": "public final int updateAll(String whereExpression,Object... args)", "class_method_signature": "Model.updateAll(String whereExpression,Object... args)", "testcase": false, "constructor": false}, {"identifier": "updateAll", "parameters": "(String whereExpression,Map<String, Object> params)", "modifiers": "@SuppressWarnings(\"rawtypes\") public final", "return": "int", "signature": "int updateAll(String whereExpression,Map<String, Object> params)", "full_signature": "@SuppressWarnings(\"rawtypes\") public final int updateAll(String whereExpression,Map<String, Object> params)", "class_method_signature": "Model.updateAll(String whereExpression,Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "thisQuery", "parameters": "()", "modifiers": "private", "return": "CriteriaQuery<T>", "signature": "CriteriaQuery<T> thisQuery()", "full_signature": "private CriteriaQuery<T> thisQuery()", "class_method_signature": "Model.thisQuery()", "testcase": false, "constructor": false}, {"identifier": "getUpdateFields", "parameters": "()", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> getUpdateFields()", "full_signature": "private Map<String, Object> getUpdateFields()", "class_method_signature": "Model.getUpdateFields()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void delete()", "full_signature": "public final void delete()", "class_method_signature": "Model.delete()", "testcase": false, "constructor": false}, {"identifier": "tryDelete", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean tryDelete()", "full_signature": "public final boolean tryDelete()", "class_method_signature": "Model.tryDelete()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean load()", "full_signature": "public final boolean load()", "class_method_signature": "Model.load()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean refresh()", "full_signature": "public final boolean refresh()", "class_method_signature": "Model.refresh()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean validate()", "full_signature": "public final boolean validate()", "class_method_signature": "Model.validate()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(int maxErrors)", "modifiers": "public final", "return": "boolean", "signature": "boolean validate(int maxErrors)", "full_signature": "public final boolean validate(int maxErrors)", "class_method_signature": "Model.validate(int maxErrors)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(Iterable<String> fields)", "modifiers": "public final", "return": "boolean", "signature": "boolean validate(Iterable<String> fields)", "full_signature": "public final boolean validate(Iterable<String> fields)", "class_method_signature": "Model.validate(Iterable<String> fields)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(int maxErrors, Iterable<String> fields)", "modifiers": "public final", "return": "boolean", "signature": "boolean validate(int maxErrors, Iterable<String> fields)", "full_signature": "public final boolean validate(int maxErrors, Iterable<String> fields)", "class_method_signature": "Model.validate(int maxErrors, Iterable<String> fields)", "testcase": false, "constructor": false}, {"identifier": "doGetId", "parameters": "()", "modifiers": "protected", "return": "Object", "signature": "Object doGetId()", "full_signature": "protected Object doGetId()", "class_method_signature": "Model.doGetId()", "testcase": false, "constructor": false}, {"identifier": "doSetId", "parameters": "(Object id)", "modifiers": "@SuppressWarnings(\"rawtypes\") protected", "return": "void", "signature": "void doSetId(Object id)", "full_signature": "@SuppressWarnings(\"rawtypes\") protected void doSetId(Object id)", "class_method_signature": "Model.doSetId(Object id)", "testcase": false, "constructor": false}, {"identifier": "doGetReservedFieldValue", "parameters": "(ReservedMetaFieldName name)", "modifiers": "protected", "return": "Object", "signature": "Object doGetReservedFieldValue(ReservedMetaFieldName name)", "full_signature": "protected Object doGetReservedFieldValue(ReservedMetaFieldName name)", "class_method_signature": "Model.doGetReservedFieldValue(ReservedMetaFieldName name)", "testcase": false, "constructor": false}, {"identifier": "doSetReservedFieldValue", "parameters": "(ReservedMetaFieldName name,Object value)", "modifiers": "protected", "return": "void", "signature": "void doSetReservedFieldValue(ReservedMetaFieldName name,Object value)", "full_signature": "protected void doSetReservedFieldValue(ReservedMetaFieldName name,Object value)", "class_method_signature": "Model.doSetReservedFieldValue(ReservedMetaFieldName name,Object value)", "testcase": false, "constructor": false}, {"identifier": "doSet", "parameters": "(String field,Object value)", "modifiers": "protected", "return": "void", "signature": "void doSet(String field,Object value)", "full_signature": "protected void doSet(String field,Object value)", "class_method_signature": "Model.doSet(String field,Object value)", "testcase": false, "constructor": false}, {"identifier": "doSave", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void doSave()", "full_signature": "protected void doSave()", "class_method_signature": "Model.doSave()", "testcase": false, "constructor": false}, {"identifier": "tryDoSave", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean tryDoSave()", "full_signature": "protected boolean tryDoSave()", "class_method_signature": "Model.tryDoSave()", "testcase": false, "constructor": false}, {"identifier": "doCreate", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean doCreate()", "full_signature": "protected boolean doCreate()", "class_method_signature": "Model.doCreate()", "testcase": false, "constructor": false}, {"identifier": "doUpdate", "parameters": "(Object id)", "modifiers": "protected", "return": "boolean", "signature": "boolean doUpdate(Object id)", "full_signature": "protected boolean doUpdate(Object id)", "class_method_signature": "Model.doUpdate(Object id)", "testcase": false, "constructor": false}, {"identifier": "doDelete", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean doDelete()", "full_signature": "protected boolean doDelete()", "class_method_signature": "Model.doDelete()", "testcase": false, "constructor": false}, {"identifier": "doLoad", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean doLoad()", "full_signature": "protected boolean doLoad()", "class_method_signature": "Model.doLoad()", "testcase": false, "constructor": false}, {"identifier": "doValidate", "parameters": "(Errors errors,int maxErrors)", "modifiers": "protected", "return": "void", "signature": "void doValidate(Errors errors,int maxErrors)", "full_signature": "protected void doValidate(Errors errors,int maxErrors)", "class_method_signature": "Model.doValidate(Errors errors,int maxErrors)", "testcase": false, "constructor": false}, {"identifier": "ensureGetId", "parameters": "()", "modifiers": "protected final", "return": "Object", "signature": "Object ensureGetId()", "full_signature": "protected final Object ensureGetId()", "class_method_signature": "Model.ensureGetId()", "testcase": false, "constructor": false}, {"identifier": "_init", "parameters": "()", "modifiers": "protected final", "return": "void", "signature": "void _init()", "full_signature": "protected final void _init()", "class_method_signature": "Model._init()", "testcase": false, "constructor": false}, {"identifier": "beanType", "parameters": "()", "modifiers": "protected final", "return": "BeanType", "signature": "BeanType beanType()", "full_signature": "protected final BeanType beanType()", "class_method_signature": "Model.beanType()", "testcase": false, "constructor": false}, {"identifier": "createParameters", "parameters": "()", "modifiers": "protected", "return": "Params", "signature": "Params createParameters()", "full_signature": "protected Params createParameters()", "class_method_signature": "Model.createParameters()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(JsonWriter w)", "modifiers": "@Override public", "return": "void", "signature": "void toJson(JsonWriter w)", "full_signature": "@Override public void toJson(JsonWriter w)", "class_method_signature": "Model.toJson(JsonWriter w)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Model.toString()", "testcase": false, "constructor": false}], "file": "data/orm/src/main/java/leap/orm/model/Model.java"}, "focal_method": {"identifier": "set", "parameters": "(String field,Object value)", "modifiers": "public final", "return": "T", "body": "public final <T extends Model> T set(String field,Object value){\n\t\t_init();\n\t\tif(\"id\".equalsIgnoreCase(field) && null == em.tryGetFieldMapping(field)) {\n\t\t\treturn id(value);\n\t\t}else{\n\t\t\tdoSet(field, value);\n\t\t\treturn (T)this;\n\t\t}\n\t}", "signature": "T set(String field,Object value)", "full_signature": "public final T set(String field,Object value)", "class_method_signature": "Model.set(String field,Object value)", "testcase": false, "constructor": false, "invocations": ["_init", "equalsIgnoreCase", "tryGetFieldMapping", "id", "doSet"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}