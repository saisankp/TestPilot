{"test_class": {"identifier": "TestGrammarLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GrammarLoader loader;", "modifier": "private", "type": "GrammarLoader", "declarator": "loader", "var_name": "loader"}, {"original_string": "private VoiceXmlInterpreterContext context;", "modifier": "private", "type": "VoiceXmlInterpreterContext", "declarator": "context", "var_name": "context"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/grammar/TestGrammarLoader.java"}, "test_case": {"identifier": "testLoadGrammarDocument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadGrammarDocument() throws Exception, JVoiceXMLEvent {\n        final String cr = System.getProperty(\"line.separator\");\n        final VoiceXmlDocument document = new VoiceXmlDocument();\n        final Vxml vxml = document.getVxml();\n        vxml.setXmlLang(Locale.US);\n        final Form form = vxml.appendChild(Form.class);\n        final Grammar grammar = form.appendChild(Grammar.class);\n        grammar.setType(GrammarType.JSGF);\n        final StringBuilder str = new StringBuilder();\n        str.append(\"#JSGF V1.0;\" + cr);\n        str.append(\"grammar jvoicexml;\" + cr);\n        str.append(\"public <boolean> = yes{true}|no{false};\");\n        grammar.addCData(str.toString());\n        final GrammarDocument grammarDocument = loader.loadGrammarDocument(\n                context, null, grammar, Locale.US);\n        Assert.assertEquals(grammar.toString(), grammarDocument.getDocument());\n    }", "signature": "void testLoadGrammarDocument()", "full_signature": "@Test public void testLoadGrammarDocument()", "class_method_signature": "TestGrammarLoader.testLoadGrammarDocument()", "testcase": true, "constructor": false, "invocations": ["getProperty", "getVxml", "setXmlLang", "appendChild", "appendChild", "setType", "append", "append", "append", "addCData", "toString", "loadGrammarDocument", "assertEquals", "toString", "getDocument"]}, "focal_class": {"identifier": "GrammarLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(GrammarLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(GrammarLoader.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "loadGrammarDocument", "parameters": "(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "modifiers": "public", "return": "GrammarDocument", "signature": "GrammarDocument loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "full_signature": "public GrammarDocument loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "class_method_signature": "GrammarLoader.loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "testcase": false, "constructor": false}, {"identifier": "loadInternalGrammar", "parameters": "(final String sessionId,\n            final DocumentServer server, final Grammar grammar,\n            final Locale language)", "modifiers": "private", "return": "GrammarDocument", "signature": "GrammarDocument loadInternalGrammar(final String sessionId,\n            final DocumentServer server, final Grammar grammar,\n            final Locale language)", "full_signature": "private GrammarDocument loadInternalGrammar(final String sessionId,\n            final DocumentServer server, final Grammar grammar,\n            final Locale language)", "class_method_signature": "GrammarLoader.loadInternalGrammar(final String sessionId,\n            final DocumentServer server, final Grammar grammar,\n            final Locale language)", "testcase": false, "constructor": false}, {"identifier": "loadExternalGrammar", "parameters": "(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar)", "modifiers": "private", "return": "GrammarDocument", "signature": "GrammarDocument loadExternalGrammar(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar)", "full_signature": "private GrammarDocument loadExternalGrammar(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar)", "class_method_signature": "GrammarLoader.loadExternalGrammar(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar)", "testcase": false, "constructor": false}, {"identifier": "adaptGrammarAttributes", "parameters": "(final Grammar grammar,\n            final GrammarDocument document)", "modifiers": "private", "return": "void", "signature": "void adaptGrammarAttributes(final Grammar grammar,\n            final GrammarDocument document)", "full_signature": "private void adaptGrammarAttributes(final Grammar grammar,\n            final GrammarDocument document)", "class_method_signature": "GrammarLoader.adaptGrammarAttributes(final Grammar grammar,\n            final GrammarDocument document)", "testcase": false, "constructor": false}, {"identifier": "getExternalUriSrc", "parameters": "(final Grammar grammar,\n            final VoiceXmlInterpreterContext context)", "modifiers": "private", "return": "URI", "signature": "URI getExternalUriSrc(final Grammar grammar,\n            final VoiceXmlInterpreterContext context)", "full_signature": "private URI getExternalUriSrc(final Grammar grammar,\n            final VoiceXmlInterpreterContext context)", "class_method_signature": "GrammarLoader.getExternalUriSrc(final Grammar grammar,\n            final VoiceXmlInterpreterContext context)", "testcase": false, "constructor": false}, {"identifier": "adaptFetchAttributes", "parameters": "(\n            final FetchAttributes docAttributes, final Grammar grammar)", "modifiers": "private", "return": "FetchAttributes", "signature": "FetchAttributes adaptFetchAttributes(\n            final FetchAttributes docAttributes, final Grammar grammar)", "full_signature": "private FetchAttributes adaptFetchAttributes(\n            final FetchAttributes docAttributes, final Grammar grammar)", "class_method_signature": "GrammarLoader.adaptFetchAttributes(\n            final FetchAttributes docAttributes, final Grammar grammar)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/grammar/GrammarLoader.java"}, "focal_method": {"identifier": "loadGrammarDocument", "parameters": "(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "modifiers": "public", "return": "GrammarDocument", "body": "public GrammarDocument loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)\n            throws UnsupportedFormatError, BadFetchError, SemanticError {\n        try {\n            if (grammar.isExternalGrammar()) {\n                return loadExternalGrammar(context, attributes, grammar);\n            } else {\n                final Session session = context.getSession();\n                final String sessionId = session.getSessionId();\n                final DocumentServer server = context.getDocumentServer();\n                return loadInternalGrammar(sessionId, server, grammar,\n                        language);\n            }\n        } catch (IllegalAttributeException | URISyntaxException e) {\n            throw new BadFetchError(e.getMessage(), e);\n        }\n    }", "signature": "GrammarDocument loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "full_signature": "public GrammarDocument loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "class_method_signature": "GrammarLoader.loadGrammarDocument(\n            final VoiceXmlInterpreterContext context,\n            final FetchAttributes attributes, final Grammar grammar,\n            final Locale language)", "testcase": false, "constructor": false, "invocations": ["isExternalGrammar", "loadExternalGrammar", "getSession", "getSessionId", "getDocumentServer", "loadInternalGrammar", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}