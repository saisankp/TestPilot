{"test_class": {"identifier": "DittoMessageMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DittoMessageMapper underTest;", "modifier": "private", "type": "DittoMessageMapper", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/mapping/src/test/java/org/eclipse/ditto/services/connectivity/mapping/DittoMessageMapperTest.java"}, "test_case": {"identifier": "mapAdaptable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void mapAdaptable() {\n        createValidOutgoingMappings().forEach((in, out) -> assertThat(underTest.map(in)).isEqualTo(out));\n    }", "signature": "void mapAdaptable()", "full_signature": "@Test public void mapAdaptable()", "class_method_signature": "DittoMessageMapperTest.mapAdaptable()", "testcase": true, "constructor": false, "invocations": ["forEach", "createValidOutgoingMappings", "isEqualTo", "assertThat", "map"]}, "focal_class": {"identifier": "DittoMessageMapper", "superclass": "extends AbstractMessageMapper", "interfaces": "", "fields": [{"original_string": "static final JsonObject DEFAULT_OPTIONS = JsonObject.newBuilder()\n            .set(MessageMapperConfiguration.CONTENT_TYPE_BLOCKLIST,\n                    String.join(\",\", \"application/vnd.eclipse-hono-empty-notification\",\n                            \"application/vnd.eclipse-hono-dc-notification+json\"))\n            .build();", "modifier": "static final", "type": "JsonObject", "declarator": "DEFAULT_OPTIONS = JsonObject.newBuilder()\n            .set(MessageMapperConfiguration.CONTENT_TYPE_BLOCKLIST,\n                    String.join(\",\", \"application/vnd.eclipse-hono-empty-notification\",\n                            \"application/vnd.eclipse-hono-dc-notification+json\"))\n            .build()", "var_name": "DEFAULT_OPTIONS"}, {"original_string": "public static final MappingContext CONTEXT = ConnectivityModelFactory.newMappingContext(\n            DittoMessageMapper.class.getCanonicalName(),\n            DEFAULT_OPTIONS\n    );", "modifier": "public static final", "type": "MappingContext", "declarator": "CONTEXT = ConnectivityModelFactory.newMappingContext(\n            DittoMessageMapper.class.getCanonicalName(),\n            DEFAULT_OPTIONS\n    )", "var_name": "CONTEXT"}], "methods": [{"identifier": "map", "parameters": "(final ExternalMessage message)", "modifiers": "@Override public", "return": "List<Adaptable>", "signature": "List<Adaptable> map(final ExternalMessage message)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage message)", "class_method_signature": "DittoMessageMapper.map(final ExternalMessage message)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override public", "return": "List<ExternalMessage>", "signature": "List<ExternalMessage> map(final Adaptable adaptable)", "full_signature": "@Override public List<ExternalMessage> map(final Adaptable adaptable)", "class_method_signature": "DittoMessageMapper.map(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "getDefaultOptions", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject getDefaultOptions()", "full_signature": "@Override public JsonObject getDefaultOptions()", "class_method_signature": "DittoMessageMapper.getDefaultOptions()", "testcase": false, "constructor": false}, {"identifier": "extractPayloadAsString", "parameters": "(final ExternalMessage message)", "modifiers": "private static", "return": "String", "signature": "String extractPayloadAsString(final ExternalMessage message)", "full_signature": "private static String extractPayloadAsString(final ExternalMessage message)", "class_method_signature": "DittoMessageMapper.extractPayloadAsString(final ExternalMessage message)", "testcase": false, "constructor": false}, {"identifier": "determineCharset", "parameters": "(final Map<String, String> messageHeaders)", "modifiers": "private static", "return": "Charset", "signature": "Charset determineCharset(final Map<String, String> messageHeaders)", "full_signature": "private static Charset determineCharset(final Map<String, String> messageHeaders)", "class_method_signature": "DittoMessageMapper.determineCharset(final Map<String, String> messageHeaders)", "testcase": false, "constructor": false}], "file": "services/connectivity/mapping/src/main/java/org/eclipse/ditto/services/connectivity/mapping/DittoMessageMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(final ExternalMessage message)", "modifiers": "@Override public", "return": "List<Adaptable>", "body": "@Override\n    public List<Adaptable> map(final ExternalMessage message) {\n        final String payload = extractPayloadAsString(message);\n        final JsonifiableAdaptable jsonifiableAdaptable = DittoJsonException.wrapJsonRuntimeException(() ->\n                ProtocolFactory.jsonifiableAdaptableFromJson(JsonFactory.newObject(payload))\n        );\n\n        final DittoHeaders mergedHeaders = jsonifiableAdaptable.getDittoHeaders();\n        return singletonList(\n                ProtocolFactory.newAdaptableBuilder(jsonifiableAdaptable).withHeaders(mergedHeaders).build());\n    }", "signature": "List<Adaptable> map(final ExternalMessage message)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage message)", "class_method_signature": "DittoMessageMapper.map(final ExternalMessage message)", "testcase": false, "constructor": false, "invocations": ["extractPayloadAsString", "wrapJsonRuntimeException", "jsonifiableAdaptableFromJson", "newObject", "getDittoHeaders", "singletonList", "build", "withHeaders", "newAdaptableBuilder"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}