{"test_class": {"identifier": "SimpleEmailServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SimpleEmailService es;", "modifier": "private", "type": "SimpleEmailService", "declarator": "es", "var_name": "es"}, {"original_string": "private Map<String, Object> config;", "modifier": "private", "type": "Map<String, Object>", "declarator": "config", "var_name": "config"}, {"original_string": "private SimpleSmtpServer smtpServer;", "modifier": "private", "type": "SimpleSmtpServer", "declarator": "smtpServer", "var_name": "smtpServer"}, {"original_string": "private URL templatePath;", "modifier": "private", "type": "URL", "declarator": "templatePath", "var_name": "templatePath"}, {"original_string": "private static final String SUBJECT_LINE = \"This is a subject line.\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT_LINE = \"This is a subject line.\"", "var_name": "SUBJECT_LINE"}, {"original_string": "private static final String TEXT_MESSAGE = \"Hello, world.\";", "modifier": "private static final", "type": "String", "declarator": "TEXT_MESSAGE = \"Hello, world.\"", "var_name": "TEXT_MESSAGE"}, {"original_string": "private static final String HTML_MESSAGE = \"<tr><td><p>\" + TEXT_MESSAGE + \"</p></td></tr>\";", "modifier": "private static final", "type": "String", "declarator": "HTML_MESSAGE = \"<tr><td><p>\" + TEXT_MESSAGE + \"</p></td></tr>\"", "var_name": "HTML_MESSAGE"}, {"original_string": "private static final String TO_EMAIL_ADDRESS = \"mobiemailtestuser@gmail.com\";", "modifier": "private static final", "type": "String", "declarator": "TO_EMAIL_ADDRESS = \"mobiemailtestuser@gmail.com\"", "var_name": "TO_EMAIL_ADDRESS"}, {"original_string": "@Mock\n    private Mobi mobi;", "modifier": "@Mock\n    private", "type": "Mobi", "declarator": "mobi", "var_name": "mobi"}, {"original_string": "@Mock\n    private Bundle bundle;", "modifier": "@Mock\n    private", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "@Mock\n    private BundleContext bundleContext;", "modifier": "@Mock\n    private", "type": "BundleContext", "declarator": "bundleContext", "var_name": "bundleContext"}], "file": "com.mobi.email.impl/src/test/java/com/mobi/email/impl/SimpleEmailServiceTest.java"}, "test_case": {"identifier": "sendSimpleEmailInvalidAndValidAddressTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sendSimpleEmailInvalidAndValidAddressTest() throws Exception {\n        CompletableFuture<Set<String>> cf = es.sendSimpleEmail(SUBJECT_LINE, TEXT_MESSAGE, \"badAddress\", TO_EMAIL_ADDRESS);\n        Set<String> failedEmails = cf.get();\n        assertEquals(1, failedEmails.size());\n        assertEquals(\"badAddress\", failedEmails.iterator().next());\n    }", "signature": "void sendSimpleEmailInvalidAndValidAddressTest()", "full_signature": "@Test public void sendSimpleEmailInvalidAndValidAddressTest()", "class_method_signature": "SimpleEmailServiceTest.sendSimpleEmailInvalidAndValidAddressTest()", "testcase": true, "constructor": false, "invocations": ["sendSimpleEmail", "get", "assertEquals", "size", "assertEquals", "next", "iterator"]}, "focal_class": {"identifier": "SimpleEmailService", "superclass": "", "interfaces": "implements EmailService", "fields": [{"original_string": "static final String COMPONENT_NAME = \"com.mobi.email.api.EmailService\";", "modifier": "static final", "type": "String", "declarator": "COMPONENT_NAME = \"com.mobi.email.api.EmailService\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SimpleEmailService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SimpleEmailService.class)", "var_name": "LOGGER"}, {"original_string": "private static final String BODY_BINDING = \"!|$BODY!|$\";", "modifier": "private static final", "type": "String", "declarator": "BODY_BINDING = \"!|$BODY!|$\"", "var_name": "BODY_BINDING"}, {"original_string": "private static final String MESSAGE_BINDING = \"!|$MESSAGE!|$\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_BINDING = \"!|$MESSAGE!|$\"", "var_name": "MESSAGE_BINDING"}, {"original_string": "private static final String HOSTNAME_BINDING = \"!|$HOSTNAME!|$\";", "modifier": "private static final", "type": "String", "declarator": "HOSTNAME_BINDING = \"!|$HOSTNAME!|$\"", "var_name": "HOSTNAME_BINDING"}, {"original_string": "private static final String LOGO_BINDING = \"!|$LOGO!|$\";", "modifier": "private static final", "type": "String", "declarator": "LOGO_BINDING = \"!|$LOGO!|$\"", "var_name": "LOGO_BINDING"}, {"original_string": "private EmailServiceConfig config;", "modifier": "private", "type": "EmailServiceConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private Mobi mobiServer;", "modifier": "private", "type": "Mobi", "declarator": "mobiServer", "var_name": "mobiServer"}, {"original_string": "private String emailTemplate;", "modifier": "private", "type": "String", "declarator": "emailTemplate", "var_name": "emailTemplate"}, {"original_string": "private URL logo;", "modifier": "private", "type": "URL", "declarator": "logo", "var_name": "logo"}], "methods": [{"identifier": "setMobiServer", "parameters": "(Mobi mobiServer)", "modifiers": "@Reference", "return": "void", "signature": "void setMobiServer(Mobi mobiServer)", "full_signature": "@Reference void setMobiServer(Mobi mobiServer)", "class_method_signature": "SimpleEmailService.setMobiServer(Mobi mobiServer)", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "(BundleContext bundleContext, Map<String, Object> configuration)", "modifiers": "@Activate", "return": "void", "signature": "void activate(BundleContext bundleContext, Map<String, Object> configuration)", "full_signature": "@Activate void activate(BundleContext bundleContext, Map<String, Object> configuration)", "class_method_signature": "SimpleEmailService.activate(BundleContext bundleContext, Map<String, Object> configuration)", "testcase": false, "constructor": false}, {"identifier": "modified", "parameters": "(BundleContext bundleContext, Map<String, Object> configuration)", "modifiers": "@Modified", "return": "void", "signature": "void modified(BundleContext bundleContext, Map<String, Object> configuration)", "full_signature": "@Modified void modified(BundleContext bundleContext, Map<String, Object> configuration)", "class_method_signature": "SimpleEmailService.modified(BundleContext bundleContext, Map<String, Object> configuration)", "testcase": false, "constructor": false}, {"identifier": "sendSimpleEmail", "parameters": "(String subject, String message, String... userEmails)", "modifiers": "@Override public", "return": "CompletableFuture<Set<String>>", "signature": "CompletableFuture<Set<String>> sendSimpleEmail(String subject, String message, String... userEmails)", "full_signature": "@Override public CompletableFuture<Set<String>> sendSimpleEmail(String subject, String message, String... userEmails)", "class_method_signature": "SimpleEmailService.sendSimpleEmail(String subject, String message, String... userEmails)", "testcase": false, "constructor": false}, {"identifier": "sendEmail", "parameters": "(String subject, String htmlMessage, String... userEmails)", "modifiers": "@Override public", "return": "CompletableFuture<Set<String>>", "signature": "CompletableFuture<Set<String>> sendEmail(String subject, String htmlMessage, String... userEmails)", "full_signature": "@Override public CompletableFuture<Set<String>> sendEmail(String subject, String htmlMessage, String... userEmails)", "class_method_signature": "SimpleEmailService.sendEmail(String subject, String htmlMessage, String... userEmails)", "testcase": false, "constructor": false}, {"identifier": "setUpEmail", "parameters": "()", "modifiers": "private", "return": "ImageHtmlEmail", "signature": "ImageHtmlEmail setUpEmail()", "full_signature": "private ImageHtmlEmail setUpEmail()", "class_method_signature": "SimpleEmailService.setUpEmail()", "testcase": false, "constructor": false}], "file": "com.mobi.email.impl/src/main/java/com/mobi/email/impl/SimpleEmailService.java"}, "focal_method": {"identifier": "sendSimpleEmail", "parameters": "(String subject, String message, String... userEmails)", "modifiers": "@Override public", "return": "CompletableFuture<Set<String>>", "body": "@Override\n    public CompletableFuture<Set<String>> sendSimpleEmail(String subject, String message, String... userEmails) {\n        String htmlBody = emailTemplate.substring(emailTemplate.indexOf(BODY_BINDING) + BODY_BINDING.length(),\n                emailTemplate.lastIndexOf(BODY_BINDING));\n        htmlBody = htmlBody.replace(MESSAGE_BINDING, message);\n        return sendEmail(subject, htmlBody, userEmails);\n    }", "signature": "CompletableFuture<Set<String>> sendSimpleEmail(String subject, String message, String... userEmails)", "full_signature": "@Override public CompletableFuture<Set<String>> sendSimpleEmail(String subject, String message, String... userEmails)", "class_method_signature": "SimpleEmailService.sendSimpleEmail(String subject, String message, String... userEmails)", "testcase": false, "constructor": false, "invocations": ["substring", "indexOf", "length", "lastIndexOf", "replace", "sendEmail"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}