{"test_class": {"identifier": "AuthServicePluginUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin-api/src/test/java/com/gentics/mesh/plugin/auth/AuthServicePluginUtilsTest.java"}, "test_case": {"identifier": "testGroupFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGroupFilter() {\n\t\tList<GroupResponse> groups = new ArrayList<>();\n\t\tgroups.add(new GroupResponse().setName(\"group\"));\n\t\tGroupFilter filter = AuthServicePluginUtils.createGroupFilter(groups);\n\t\tassertFalse(filter.filter(\"group\"));\n\t\tassertTrue(filter.filter(\"group1\"));\n\t}", "signature": "void testGroupFilter()", "full_signature": "@Test public void testGroupFilter()", "class_method_signature": "AuthServicePluginUtilsTest.testGroupFilter()", "testcase": true, "constructor": false, "invocations": ["add", "setName", "createGroupFilter", "assertFalse", "filter", "assertTrue", "filter"]}, "focal_class": {"identifier": "AuthServicePluginUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "AuthServicePluginUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " AuthServicePluginUtils()", "full_signature": "private  AuthServicePluginUtils()", "class_method_signature": "AuthServicePluginUtils.AuthServicePluginUtils()", "testcase": false, "constructor": true}, {"identifier": "createRoleFilter", "parameters": "(List<RoleResponse> roles, List<GroupResponse> groups)", "modifiers": "public static", "return": "RoleFilter", "signature": "RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "full_signature": "public static RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "testcase": false, "constructor": false}, {"identifier": "createGroupFilter", "parameters": "(List<GroupResponse> groups)", "modifiers": "public static", "return": "GroupFilter", "signature": "GroupFilter createGroupFilter(List<GroupResponse> groups)", "full_signature": "public static GroupFilter createGroupFilter(List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createGroupFilter(List<GroupResponse> groups)", "testcase": false, "constructor": false}], "file": "plugin-api/src/main/java/com/gentics/mesh/plugin/auth/AuthServicePluginUtils.java"}, "focal_method": {"identifier": "createGroupFilter", "parameters": "(List<GroupResponse> groups)", "modifiers": "public static", "return": "GroupFilter", "body": "public static GroupFilter createGroupFilter(List<GroupResponse> groups) {\n\t\tList<String> allowed = new ArrayList<>();\n\t\tallowed.addAll(groups.stream().map(GroupResponse::getName).collect(Collectors.toList()));\n\t\treturn (groupName) -> {\n\t\t\treturn !allowed.contains(groupName);\n\t\t};\n\t}", "signature": "GroupFilter createGroupFilter(List<GroupResponse> groups)", "full_signature": "public static GroupFilter createGroupFilter(List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createGroupFilter(List<GroupResponse> groups)", "testcase": false, "constructor": false, "invocations": ["addAll", "collect", "map", "stream", "toList", "contains"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}