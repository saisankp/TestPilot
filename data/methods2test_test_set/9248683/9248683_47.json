{"test_class": {"identifier": "SetExpressionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String propertyName = \"propertyName\";", "modifier": "private final", "type": "String", "declarator": "propertyName = \"propertyName\"", "var_name": "propertyName"}, {"original_string": "private final String[] testValues = { \"test\", \"value\", \"array\" };", "modifier": "private final", "type": "String[]", "declarator": "testValues = { \"test\", \"value\", \"array\" }", "var_name": "testValues"}, {"original_string": "private final Operator operator = Operator.IN;", "modifier": "private final", "type": "Operator", "declarator": "operator = Operator.IN", "var_name": "operator"}, {"original_string": "private final SetExpression e = new SetExpression(operator,\n            propertyName, testValues);", "modifier": "private final", "type": "SetExpression", "declarator": "e = new SetExpression(operator,\n            propertyName, testValues)", "var_name": "e"}], "file": "seeking-core/src/test/java/com/eharmony/matching/seeking/query/criterion/expression/SetExpressionTest.java"}, "test_case": {"identifier": "getValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getValues() {\n        assertArrayEquals(testValues, e.getValues());\n    }", "signature": "void getValues()", "full_signature": "@Test public void getValues()", "class_method_signature": "SetExpressionTest.getValues()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "getValues"]}, "focal_class": {"identifier": "SetExpression", "superclass": "extends Expression", "interfaces": "", "fields": [{"original_string": "private final Object[] values;", "modifier": "private final", "type": "Object[]", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "SetExpression", "parameters": "(Operator operator, String propertyName,\n            final Object[] values)", "modifiers": "public", "return": "", "signature": " SetExpression(Operator operator, String propertyName,\n            final Object[] values)", "full_signature": "public  SetExpression(Operator operator, String propertyName,\n            final Object[] values)", "class_method_signature": "SetExpression.SetExpression(Operator operator, String propertyName,\n            final Object[] values)", "testcase": false, "constructor": true}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getValues()", "full_signature": "public Object[] getValues()", "class_method_signature": "SetExpression.getValues()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SetExpression.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SetExpression.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "SetExpression.equals(Object obj)", "testcase": false, "constructor": false}], "file": "seeking-core/src/main/java/com/eharmony/matching/seeking/query/criterion/expression/SetExpression.java"}, "focal_method": {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "Object[]", "body": "public Object[] getValues() {\n        return values;\n    }", "signature": "Object[] getValues()", "full_signature": "public Object[] getValues()", "class_method_signature": "SetExpression.getValues()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9248683, "url": "https://github.com/eHarmony/seeking", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 194, "license": "licensed"}}