{"test_class": {"identifier": "BroadcastPartitionerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BroadcastPartitioner<Tuple> broadcastPartitioner1;", "modifier": "private", "type": "BroadcastPartitioner<Tuple>", "declarator": "broadcastPartitioner1", "var_name": "broadcastPartitioner1"}, {"original_string": "private BroadcastPartitioner<Tuple> broadcastPartitioner2;", "modifier": "private", "type": "BroadcastPartitioner<Tuple>", "declarator": "broadcastPartitioner2", "var_name": "broadcastPartitioner2"}, {"original_string": "private BroadcastPartitioner<Tuple> broadcastPartitioner3;", "modifier": "private", "type": "BroadcastPartitioner<Tuple>", "declarator": "broadcastPartitioner3", "var_name": "broadcastPartitioner3"}, {"original_string": "private StreamRecord<Tuple> streamRecord = new StreamRecord<Tuple>(null);", "modifier": "private", "type": "StreamRecord<Tuple>", "declarator": "streamRecord = new StreamRecord<Tuple>(null)", "var_name": "streamRecord"}, {"original_string": "private SerializationDelegate<StreamRecord<Tuple>> sd = new SerializationDelegate<StreamRecord<Tuple>>(null);", "modifier": "private", "type": "SerializationDelegate<StreamRecord<Tuple>>", "declarator": "sd = new SerializationDelegate<StreamRecord<Tuple>>(null)", "var_name": "sd"}], "file": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/partitioner/BroadcastPartitionerTest.java"}, "test_case": {"identifier": "testSelectChannels", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSelectChannels() {\n\t\tint[] first = new int[] { 0 };\n\t\tint[] second = new int[] { 0, 1 };\n\t\tint[] sixth = new int[] { 0, 1, 2, 3, 4, 5 };\n\t\tsd.setInstance(streamRecord);\n\t\tassertArrayEquals(first, broadcastPartitioner1.selectChannels(sd, 1));\n\t\tassertArrayEquals(second, broadcastPartitioner2.selectChannels(sd, 2));\n\t\tassertArrayEquals(sixth, broadcastPartitioner3.selectChannels(sd, 6));\n\t}", "signature": "void testSelectChannels()", "full_signature": "@Test public void testSelectChannels()", "class_method_signature": "BroadcastPartitionerTest.testSelectChannels()", "testcase": true, "constructor": false, "invocations": ["setInstance", "assertArrayEquals", "selectChannels", "assertArrayEquals", "selectChannels", "assertArrayEquals", "selectChannels"]}, "focal_class": {"identifier": "BroadcastPartitioner", "superclass": "extends StreamPartitioner<T>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "int[] returnArray;", "modifier": "", "type": "int[]", "declarator": "returnArray", "var_name": "returnArray"}, {"original_string": "boolean set;", "modifier": "", "type": "boolean", "declarator": "set", "var_name": "set"}, {"original_string": "int setNumber;", "modifier": "", "type": "int", "declarator": "setNumber", "var_name": "setNumber"}], "methods": [{"identifier": "selectChannels", "parameters": "(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "modifiers": "@Override public", "return": "int[]", "signature": "int[] selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "full_signature": "@Override public int[] selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "class_method_signature": "BroadcastPartitioner.selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "StreamPartitioner<T>", "signature": "StreamPartitioner<T> copy()", "full_signature": "@Override public StreamPartitioner<T> copy()", "class_method_signature": "BroadcastPartitioner.copy()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BroadcastPartitioner.toString()", "testcase": false, "constructor": false}], "file": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/partitioner/BroadcastPartitioner.java"}, "focal_method": {"identifier": "selectChannels", "parameters": "(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "modifiers": "@Override public", "return": "int[]", "body": "@Override\n\tpublic int[] selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels) {\n\t\tif (set && setNumber == numberOfOutputChannels) {\n\t\t\treturn returnArray;\n\t\t} else {\n\t\t\tthis.returnArray = new int[numberOfOutputChannels];\n\t\t\tfor (int i = 0; i < numberOfOutputChannels; i++) {\n\t\t\t\treturnArray[i] = i;\n\t\t\t}\n\t\t\tset = true;\n\t\t\tsetNumber = numberOfOutputChannels;\n\t\t\treturn returnArray;\n\t\t}\n\t}", "signature": "int[] selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "full_signature": "@Override public int[] selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "class_method_signature": "BroadcastPartitioner.selectChannels(SerializationDelegate<StreamRecord<T>> record,\n\t\t\tint numberOfOutputChannels)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}