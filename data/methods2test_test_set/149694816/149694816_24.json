{"test_class": {"identifier": "LiveUpdateSessionHandlerTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/build/web/service/LiveUpdateSessionHandlerTest.java"}, "test_case": {"identifier": "testAfterConnectionClosed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAfterConnectionClosed() throws Exception {\n    // Given\n    final LiveUpdateService manager = mock(LiveUpdateService.class);\n    final WebSocketSession session = mock(WebSocketSession.class);\n\n    final LiveUpdateSessionHandler handler = new LiveUpdateSessionHandler();\n    handler.setManager(manager);\n\n    // When\n    handler.afterConnectionClosed(session, CloseStatus.NORMAL);\n\n    // Then\n    verify(manager).remove(any());\n  }", "signature": "void testAfterConnectionClosed()", "full_signature": "@Test public void testAfterConnectionClosed()", "class_method_signature": "LiveUpdateSessionHandlerTest.testAfterConnectionClosed()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "setManager", "afterConnectionClosed", "remove", "verify", "any"]}, "focal_class": {"identifier": "LiveUpdateSessionHandler", "superclass": "extends TextWebSocketHandler", "interfaces": "", "fields": [{"original_string": "@Inject\n  @Setter\n  protected LiveUpdateService manager;", "modifier": "@Inject\n  @Setter\n  protected", "type": "LiveUpdateService", "declarator": "manager", "var_name": "manager"}], "methods": [{"identifier": "afterConnectionEstablished", "parameters": "(final WebSocketSession session)", "modifiers": "@Override public", "return": "void", "signature": "void afterConnectionEstablished(final WebSocketSession session)", "full_signature": "@Override public void afterConnectionEstablished(final WebSocketSession session)", "class_method_signature": "LiveUpdateSessionHandler.afterConnectionEstablished(final WebSocketSession session)", "testcase": false, "constructor": false}, {"identifier": "afterConnectionClosed", "parameters": "(\n      final WebSocketSession session, final CloseStatus status)", "modifiers": "@Override public", "return": "void", "signature": "void afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "full_signature": "@Override public void afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "class_method_signature": "LiveUpdateSessionHandler.afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/web/service/LiveUpdateSessionHandler.java"}, "focal_method": {"identifier": "afterConnectionClosed", "parameters": "(\n      final WebSocketSession session, final CloseStatus status)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status) throws Exception {\n    manager.remove(new LiveUpdateSession(session));\n    super.afterConnectionClosed(session, status);\n  }", "signature": "void afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "full_signature": "@Override public void afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "class_method_signature": "LiveUpdateSessionHandler.afterConnectionClosed(\n      final WebSocketSession session, final CloseStatus status)", "testcase": false, "constructor": false, "invocations": ["remove", "afterConnectionClosed"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}