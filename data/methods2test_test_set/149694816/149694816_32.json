{"test_class": {"identifier": "BuildServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected BuildService buildService;", "modifier": "protected", "type": "BuildService", "declarator": "buildService", "var_name": "buildService"}], "file": "core/src/test/java/ship/build/web/service/BuildServiceTest.java"}, "test_case": {"identifier": "testSave", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSave() {\n    for (int i = 0 ; i<10000 ; ++i) {\n      buildService.save(new BuildDetails());\n    }\n  }", "signature": "void testSave()", "full_signature": "@Test public void testSave()", "class_method_signature": "BuildServiceTest.testSave()", "testcase": true, "constructor": false, "invocations": ["save"]}, "focal_class": {"identifier": "BuildService", "superclass": "extends AbstractService", "interfaces": "", "fields": [{"original_string": "protected final AtomicInteger sequence = new AtomicInteger();", "modifier": "protected final", "type": "AtomicInteger", "declarator": "sequence = new AtomicInteger()", "var_name": "sequence"}, {"original_string": "protected final LinkedList<String> uuids = new LinkedList<>();", "modifier": "protected final", "type": "LinkedList<String>", "declarator": "uuids = new LinkedList<>()", "var_name": "uuids"}, {"original_string": "protected final Map<String, BuildDetails> uuid2buildResult = new HashMap<>();", "modifier": "protected final", "type": "Map<String, BuildDetails>", "declarator": "uuid2buildResult = new HashMap<>()", "var_name": "uuid2buildResult"}, {"original_string": "protected final List<DangerousConsumer<BuildSummary>> listeners = new ArrayList<>();", "modifier": "protected final", "type": "List<DangerousConsumer<BuildSummary>>", "declarator": "listeners = new ArrayList<>()", "var_name": "listeners"}], "methods": [{"identifier": "addListener", "parameters": "(final DangerousConsumer<BuildSummary> listener)", "modifiers": "public", "return": "void", "signature": "void addListener(final DangerousConsumer<BuildSummary> listener)", "full_signature": "public void addListener(final DangerousConsumer<BuildSummary> listener)", "class_method_signature": "BuildService.addListener(final DangerousConsumer<BuildSummary> listener)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(final BuildDetails buildDetails)", "modifiers": "public", "return": "void", "signature": "void save(final BuildDetails buildDetails)", "full_signature": "public void save(final BuildDetails buildDetails)", "class_method_signature": "BuildService.save(final BuildDetails buildDetails)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String uuid)", "modifiers": "public", "return": "Optional<BuildDetails>", "signature": "Optional<BuildDetails> get(final String uuid)", "full_signature": "public Optional<BuildDetails> get(final String uuid)", "class_method_signature": "BuildService.get(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(final String from, final int requestSize)", "modifiers": "public", "return": "List<BuildSummary>", "signature": "List<BuildSummary> list(final String from, final int requestSize)", "full_signature": "public List<BuildSummary> list(final String from, final int requestSize)", "class_method_signature": "BuildService.list(final String from, final int requestSize)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/web/service/BuildService.java"}, "focal_method": {"identifier": "save", "parameters": "(final BuildDetails buildDetails)", "modifiers": "public", "return": "void", "body": "public void save(final BuildDetails buildDetails) {\n    buildDetails.setSequence(sequence.incrementAndGet());\n    uuid2buildResult.put(buildDetails.getUuid(), buildDetails);\n    logger.info(\"New build detected: {}\", buildDetails);\n    uuids.addFirst(buildDetails.getUuid());\n    while (100 < uuids.size()) {\n      final String uuid = uuids.removeLast();\n      uuid2buildResult.remove(uuid);\n    }\n    for (final DangerousConsumer<BuildSummary> listener : listeners) {\n      try {\n        listener.accept(buildDetails.getSummary());\n      } catch (final Throwable ex) {\n        logger.trace(\"Ignore exception: {}\", ex.getClass());\n      }\n    }\n  }", "signature": "void save(final BuildDetails buildDetails)", "full_signature": "public void save(final BuildDetails buildDetails)", "class_method_signature": "BuildService.save(final BuildDetails buildDetails)", "testcase": false, "constructor": false, "invocations": ["setSequence", "incrementAndGet", "put", "getUuid", "info", "addFirst", "getUuid", "size", "removeLast", "remove", "accept", "getSummary", "trace", "getClass"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}