{"test_class": {"identifier": "SkuDAOTest", "superclass": "extends DaoTestBootstrap", "interfaces": "", "fields": [{"original_string": "private Sku init;", "modifier": "private", "type": "Sku", "declarator": "init", "var_name": "init"}, {"original_string": "@Autowired\n    private SkuDAO sku;", "modifier": "@Autowired\n    private", "type": "SkuDAO", "declarator": "sku", "var_name": "sku"}], "file": "ic-product-core-master/ic-item/ic-item-core/src/test/java/com/mallcai/itemcenter/sku/repository/SkuDAOTest.java"}, "test_case": {"identifier": "testCrud", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCrud() {\n        Sku found = sku.findById(init.getId());\n        assertThat(found).isNotNull();\n    }", "signature": "void testCrud()", "full_signature": "@Test public void testCrud()", "class_method_signature": "SkuDAOTest.testCrud()", "testcase": true, "constructor": false, "invocations": ["findById", "getId", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "SkuDAO", "superclass": "extends MyBatisDAO<Sku>", "interfaces": "", "fields": [{"original_string": "private static final String CACHE_NAME = \"Sku:\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_NAME = \"Sku:\"", "var_name": "CACHE_NAME"}, {"original_string": "public static final String DEFAULT_KEY = \"#id\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_KEY = \"#id\"", "var_name": "DEFAULT_KEY"}, {"original_string": "private static final String SKU_ID_CACHE_NAME = \"ItemIdIndexSkuId:\";", "modifier": "private static final", "type": "String", "declarator": "SKU_ID_CACHE_NAME = \"ItemIdIndexSkuId:\"", "var_name": "SKU_ID_CACHE_NAME"}], "methods": [{"identifier": "findById", "parameters": "(Long id)", "modifiers": "@Cached(name = CACHE_NAME, key = DEFAULT_KEY, expire = Constant.EXPIRE_15M) public", "return": "Sku", "signature": "Sku findById(Long id)", "full_signature": "@Cached(name = CACHE_NAME, key = DEFAULT_KEY, expire = Constant.EXPIRE_15M) public Sku findById(Long id)", "class_method_signature": "SkuDAO.findById(Long id)", "testcase": false, "constructor": false}, {"identifier": "findSkuIdByItemId", "parameters": "(Long itemId)", "modifiers": "@Cached(name = SKU_ID_CACHE_NAME, key = \"#itemId\", expire = Constant.EXPIRE_15M) public", "return": "List<Long>", "signature": "List<Long> findSkuIdByItemId(Long itemId)", "full_signature": "@Cached(name = SKU_ID_CACHE_NAME, key = \"#itemId\", expire = Constant.EXPIRE_15M) public List<Long> findSkuIdByItemId(Long itemId)", "class_method_signature": "SkuDAO.findSkuIdByItemId(Long itemId)", "testcase": false, "constructor": false}, {"identifier": "releaseItemIdIndex", "parameters": "(Long itemId)", "modifiers": "@CacheInvalidate(name = SKU_ID_CACHE_NAME, key = \"#itemId\") public", "return": "void", "signature": "void releaseItemIdIndex(Long itemId)", "full_signature": "@CacheInvalidate(name = SKU_ID_CACHE_NAME, key = \"#itemId\") public void releaseItemIdIndex(Long itemId)", "class_method_signature": "SkuDAO.releaseItemIdIndex(Long itemId)", "testcase": false, "constructor": false}, {"identifier": "updateStatus", "parameters": "(Long id, Integer version, Integer status, Long updatedBy)", "modifiers": "@CacheInvalidate(name = CACHE_NAME, key = DEFAULT_KEY) public", "return": "boolean", "signature": "boolean updateStatus(Long id, Integer version, Integer status, Long updatedBy)", "full_signature": "@CacheInvalidate(name = CACHE_NAME, key = DEFAULT_KEY) public boolean updateStatus(Long id, Integer version, Integer status, Long updatedBy)", "class_method_signature": "SkuDAO.updateStatus(Long id, Integer version, Integer status, Long updatedBy)", "testcase": false, "constructor": false}, {"identifier": "findByItemId", "parameters": "(Long itemId)", "modifiers": "public", "return": "List<Sku>", "signature": "List<Sku> findByItemId(Long itemId)", "full_signature": "public List<Sku> findByItemId(Long itemId)", "class_method_signature": "SkuDAO.findByItemId(Long itemId)", "testcase": false, "constructor": false}, {"identifier": "findSkuId", "parameters": "(Long itemId)", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> findSkuId(Long itemId)", "full_signature": "public List<Long> findSkuId(Long itemId)", "class_method_signature": "SkuDAO.findSkuId(Long itemId)", "testcase": false, "constructor": false}, {"identifier": "findItemId", "parameters": "(Long skuId)", "modifiers": "public", "return": "Long", "signature": "Long findItemId(Long skuId)", "full_signature": "public Long findItemId(Long skuId)", "class_method_signature": "SkuDAO.findItemId(Long skuId)", "testcase": false, "constructor": false}, {"identifier": "updateStatusCheckSellerId", "parameters": "(Long id, Integer version, Integer status, Long sellerId, Long updatedBy)", "modifiers": "@CacheInvalidate(name = CACHE_NAME, key = DEFAULT_KEY) public", "return": "Boolean", "signature": "Boolean updateStatusCheckSellerId(Long id, Integer version, Integer status, Long sellerId, Long updatedBy)", "full_signature": "@CacheInvalidate(name = CACHE_NAME, key = DEFAULT_KEY) public Boolean updateStatusCheckSellerId(Long id, Integer version, Integer status, Long sellerId, Long updatedBy)", "class_method_signature": "SkuDAO.updateStatusCheckSellerId(Long id, Integer version, Integer status, Long sellerId, Long updatedBy)", "testcase": false, "constructor": false}], "file": "ic-product-core-master/ic-item/ic-item-core/src/main/java/com/mallcai/itemcenter/sku/repository/SkuDAO.java"}, "focal_method": {"identifier": "findById", "parameters": "(Long id)", "modifiers": "@Cached(name = CACHE_NAME, key = DEFAULT_KEY, expire = Constant.EXPIRE_15M) public", "return": "Sku", "body": "@Cached(name = CACHE_NAME, key = DEFAULT_KEY, expire = Constant.EXPIRE_15M)\n    public Sku findById(Long id) {\n        return getSqlSession().selectOne(sqlId(\"findById\"), id);\n    }", "signature": "Sku findById(Long id)", "full_signature": "@Cached(name = CACHE_NAME, key = DEFAULT_KEY, expire = Constant.EXPIRE_15M) public Sku findById(Long id)", "class_method_signature": "SkuDAO.findById(Long id)", "testcase": false, "constructor": false, "invocations": ["selectOne", "getSqlSession", "sqlId"]}, "repository": {"repo_id": 225164634, "url": "https://github.com/dailuobo-code/ic-product", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 883, "license": "licensed"}}