{"test_class": {"identifier": "ZTSTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_DATA_STORE_PATH = \"/tmp/zts_server_unit_tests/zts_root\"", "var_name": "ZTS_DATA_STORE_PATH"}], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/ZTSTest.java"}, "test_case": {"identifier": "testZTS", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testZTS() {\n        ZTS zts = new ZTS();\n        assertNotNull(zts);\n    }", "signature": "void testZTS()", "full_signature": "@Test public void testZTS()", "class_method_signature": "ZTSTest.testZTS()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "ZTS", "superclass": "extends ResourceConfig", "interfaces": "", "fields": [], "methods": [{"identifier": "ZTS", "parameters": "()", "modifiers": "public", "return": "", "signature": " ZTS()", "full_signature": "public  ZTS()", "class_method_signature": "ZTS.ZTS()", "testcase": false, "constructor": true}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTS.java"}, "focal_method": {"identifier": "ZTS", "parameters": "()", "modifiers": "public", "return": "", "body": "public ZTS() {\n        register(JsonGeneralExceptionMapper.class, 1);\n        register(JsonMappingExceptionMapper.class, 1);\n        register(JsonParseExceptionMapper.class, 1);\n        register(JsonProcessingExceptionMapper.class, 1);\n        register(ZTSResources.class);\n        register(new ZTSBinder());\n    }", "signature": " ZTS()", "full_signature": "public  ZTS()", "class_method_signature": "ZTS.ZTS()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}