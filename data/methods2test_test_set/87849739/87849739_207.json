{"test_class": {"identifier": "HiveMqtt5ClientActorTest", "superclass": "extends AbstractMqttClientActorTest<Mqtt5Publish>", "interfaces": "", "fields": [{"original_string": "private MockHiveMqtt5ClientFactory mockHiveMqtt5ClientFactory;", "modifier": "private", "type": "MockHiveMqtt5ClientFactory", "declarator": "mockHiveMqtt5ClientFactory", "var_name": "mockHiveMqtt5ClientFactory"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/mqtt/hivemq/HiveMqtt5ClientActorTest.java"}, "test_case": {"identifier": "testSubscribeFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSubscribeFails() {\n        new TestKit(actorSystem) {{\n            final MockHiveMqtt5ClientFactory clientFactory = mockHiveMqtt5ClientFactory\n                    .withTestProbe(getRef())\n                    .withFailingSubscribe();\n\n            final Props props =\n                    HiveMqtt5ClientActor.props(connection, getRef(), clientFactory, mockConnectionActor.ref());\n            final ActorRef mqttClientActor = actorSystem.actorOf(props, \"mqttClientActor-testSubscribeFails\");\n\n            mqttClientActor.tell(OpenConnection.of(connectionId, DittoHeaders.empty()), getRef());\n            expectMsgClass(Status.Failure.class);\n\n            mqttClientActor.tell(CloseConnection.of(connectionId, DittoHeaders.empty()), getRef());\n            expectMsg(DISCONNECTED_SUCCESS);\n        }};\n    }", "signature": "void testSubscribeFails()", "full_signature": "@Test public void testSubscribeFails()", "class_method_signature": "HiveMqtt5ClientActorTest.testSubscribeFails()", "testcase": true, "constructor": false, "invocations": ["withFailingSubscribe", "withTestProbe", "getRef", "props", "getRef", "ref", "actorOf", "tell", "of", "empty", "getRef", "expectMsgClass", "tell", "of", "empty", "getRef", "expectMsg"]}, "focal_class": {"identifier": "HiveMqtt5ClientActor", "superclass": "extends AbstractMqttClientActor<Mqtt5Subscribe, Mqtt5Publish, Mqtt5AsyncClient, Mqtt5SubAck>", "interfaces": "", "fields": [], "methods": [{"identifier": "HiveMqtt5ClientActor", "parameters": "(final Connection connection,\n            final ActorRef proxyActor,\n            final ActorRef connectionActor,\n            final HiveMqtt5ClientFactory clientFactory)", "modifiers": "@SuppressWarnings(\"unused\") // used by `props` via reflection private", "return": "", "signature": " HiveMqtt5ClientActor(final Connection connection,\n            final ActorRef proxyActor,\n            final ActorRef connectionActor,\n            final HiveMqtt5ClientFactory clientFactory)", "full_signature": "@SuppressWarnings(\"unused\") // used by `props` via reflection private  HiveMqtt5ClientActor(final Connection connection,\n            final ActorRef proxyActor,\n            final ActorRef connectionActor,\n            final HiveMqtt5ClientFactory clientFactory)", "class_method_signature": "HiveMqtt5ClientActor.HiveMqtt5ClientActor(final Connection connection,\n            final ActorRef proxyActor,\n            final ActorRef connectionActor,\n            final HiveMqtt5ClientFactory clientFactory)", "testcase": false, "constructor": true}, {"identifier": "HiveMqtt5ClientActor", "parameters": "(final Connection connection, final ActorRef proxyActor,\n            final ActorRef connectionActor)", "modifiers": "@SuppressWarnings(\"unused\") // used by `props` via reflection private", "return": "", "signature": " HiveMqtt5ClientActor(final Connection connection, final ActorRef proxyActor,\n            final ActorRef connectionActor)", "full_signature": "@SuppressWarnings(\"unused\") // used by `props` via reflection private  HiveMqtt5ClientActor(final Connection connection, final ActorRef proxyActor,\n            final ActorRef connectionActor)", "class_method_signature": "HiveMqtt5ClientActor.HiveMqtt5ClientActor(final Connection connection, final ActorRef proxyActor,\n            final ActorRef connectionActor)", "testcase": false, "constructor": true}, {"identifier": "props", "parameters": "(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "modifiers": "public static", "return": "Props", "signature": "Props props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "full_signature": "public static Props props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "class_method_signature": "HiveMqtt5ClientActor.props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "(final Connection connection, @Nullable final ActorRef proxyActor,\n            final ActorRef connectionActor)", "modifiers": "public static", "return": "Props", "signature": "Props props(final Connection connection, @Nullable final ActorRef proxyActor,\n            final ActorRef connectionActor)", "full_signature": "public static Props props(final Connection connection, @Nullable final ActorRef proxyActor,\n            final ActorRef connectionActor)", "class_method_signature": "HiveMqtt5ClientActor.props(final Connection connection, @Nullable final ActorRef proxyActor,\n            final ActorRef connectionActor)", "testcase": false, "constructor": false}, {"identifier": "createSubscriptionHandler", "parameters": "(\n            final Connection connection, final Mqtt5AsyncClient client, final ThreadSafeDittoLoggingAdapter logger)", "modifiers": "@Override", "return": "AbstractMqttSubscriptionHandler<Mqtt5Subscribe, Mqtt5Publish, Mqtt5SubAck>", "signature": "AbstractMqttSubscriptionHandler<Mqtt5Subscribe, Mqtt5Publish, Mqtt5SubAck> createSubscriptionHandler(\n            final Connection connection, final Mqtt5AsyncClient client, final ThreadSafeDittoLoggingAdapter logger)", "full_signature": "@Override AbstractMqttSubscriptionHandler<Mqtt5Subscribe, Mqtt5Publish, Mqtt5SubAck> createSubscriptionHandler(\n            final Connection connection, final Mqtt5AsyncClient client, final ThreadSafeDittoLoggingAdapter logger)", "class_method_signature": "HiveMqtt5ClientActor.createSubscriptionHandler(\n            final Connection connection, final Mqtt5AsyncClient client, final ThreadSafeDittoLoggingAdapter logger)", "testcase": false, "constructor": false}, {"identifier": "sendConn", "parameters": "(final Mqtt5AsyncClient client, final boolean cleanSession)", "modifiers": "@Override", "return": "CompletionStage<?>", "signature": "CompletionStage<?> sendConn(final Mqtt5AsyncClient client, final boolean cleanSession)", "full_signature": "@Override CompletionStage<?> sendConn(final Mqtt5AsyncClient client, final boolean cleanSession)", "class_method_signature": "HiveMqtt5ClientActor.sendConn(final Mqtt5AsyncClient client, final boolean cleanSession)", "testcase": false, "constructor": false}, {"identifier": "disconnectClient", "parameters": "(final Mqtt5AsyncClient client)", "modifiers": "@Override", "return": "CompletionStage<Void>", "signature": "CompletionStage<Void> disconnectClient(final Mqtt5AsyncClient client)", "full_signature": "@Override CompletionStage<Void> disconnectClient(final Mqtt5AsyncClient client)", "class_method_signature": "HiveMqtt5ClientActor.disconnectClient(final Mqtt5AsyncClient client)", "testcase": false, "constructor": false}, {"identifier": "startPublisherActor", "parameters": "(final Connection connection, final Mqtt5AsyncClient client)", "modifiers": "@Override", "return": "ActorRef", "signature": "ActorRef startPublisherActor(final Connection connection, final Mqtt5AsyncClient client)", "full_signature": "@Override ActorRef startPublisherActor(final Connection connection, final Mqtt5AsyncClient client)", "class_method_signature": "HiveMqtt5ClientActor.startPublisherActor(final Connection connection, final Mqtt5AsyncClient client)", "testcase": false, "constructor": false}, {"identifier": "startConsumerActor", "parameters": "(final boolean dryRun,\n            final Source source,\n            final ActorRef mappingActor,\n            final MqttSpecificConfig specificConfig)", "modifiers": "@Override", "return": "ActorRef", "signature": "ActorRef startConsumerActor(final boolean dryRun,\n            final Source source,\n            final ActorRef mappingActor,\n            final MqttSpecificConfig specificConfig)", "full_signature": "@Override ActorRef startConsumerActor(final boolean dryRun,\n            final Source source,\n            final ActorRef mappingActor,\n            final MqttSpecificConfig specificConfig)", "class_method_signature": "HiveMqtt5ClientActor.startConsumerActor(final boolean dryRun,\n            final Source source,\n            final ActorRef mappingActor,\n            final MqttSpecificConfig specificConfig)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/mqtt/hivemq/HiveMqtt5ClientActor.java"}, "focal_method": {"identifier": "props", "parameters": "(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "modifiers": "public static", "return": "Props", "body": "public static Props props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor) {\n        return Props.create(HiveMqtt5ClientActor.class, connection, proxyActor, connectionActor, clientFactory);\n    }", "signature": "Props props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "full_signature": "public static Props props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "class_method_signature": "HiveMqtt5ClientActor.props(final Connection connection, final ActorRef proxyActor,\n            final HiveMqtt5ClientFactory clientFactory, final ActorRef connectionActor)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}