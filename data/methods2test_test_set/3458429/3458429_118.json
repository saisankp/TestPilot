{"test_class": {"identifier": "DeflateFrameExtensionTest", "superclass": "extends AbstractExtensionTest", "interfaces": "", "fields": [{"original_string": "private static final LazyLogger LOG = SystemLogger.create(DeflateFrameExtensionTest.class);", "modifier": "private static final", "type": "LazyLogger", "declarator": "LOG = SystemLogger.create(DeflateFrameExtensionTest.class)", "var_name": "LOG"}], "file": "firefly-net/src/test/java/com/fireflysource/net/websocket/common/extension/compress/DeflateFrameExtensionTest.java"}, "test_case": {"identifier": "testGeneratedTwoFrames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGeneratedTwoFrames() throws IOException {\n        WebSocketPolicy policy = WebSocketPolicy.newClientPolicy();\n\n        DeflateFrameExtension ext = new DeflateFrameExtension();\n        ext.setPolicy(policy);\n        ext.setConfig(new ExtensionConfig(ext.getName()));\n\n        Generator generator = new Generator(policy, true);\n        generator.configureFromExtensions(Collections.singletonList(ext));\n\n        OutgoingNetworkBytesCapture capture = new OutgoingNetworkBytesCapture(generator);\n        ext.setNextOutgoingFrames(capture);\n\n        ext.outgoingFrame(new TextFrame().setPayload(\"Hello\"), null);\n        ext.outgoingFrame(new TextFrame(), null);\n        ext.outgoingFrame(new TextFrame().setPayload(\"There\"), null);\n\n        capture.assertBytes(0, \"c107f248cdc9c90700\");\n    }", "signature": "void testGeneratedTwoFrames()", "full_signature": "@Test public void testGeneratedTwoFrames()", "class_method_signature": "DeflateFrameExtensionTest.testGeneratedTwoFrames()", "testcase": true, "constructor": false, "invocations": ["newClientPolicy", "setPolicy", "setConfig", "getName", "configureFromExtensions", "singletonList", "setNextOutgoingFrames", "outgoingFrame", "setPayload", "outgoingFrame", "outgoingFrame", "setPayload", "assertBytes"]}, "focal_class": {"identifier": "DeflateFrameExtension", "superclass": "extends CompressExtension", "interfaces": "", "fields": [], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DeflateFrameExtension.getName()", "testcase": false, "constructor": false}, {"identifier": "getRsvUseMode", "parameters": "()", "modifiers": "@Override", "return": "int", "signature": "int getRsvUseMode()", "full_signature": "@Override int getRsvUseMode()", "class_method_signature": "DeflateFrameExtension.getRsvUseMode()", "testcase": false, "constructor": false}, {"identifier": "getTailDropMode", "parameters": "()", "modifiers": "@Override", "return": "int", "signature": "int getTailDropMode()", "full_signature": "@Override int getTailDropMode()", "class_method_signature": "DeflateFrameExtension.getTailDropMode()", "testcase": false, "constructor": false}, {"identifier": "incomingFrame", "parameters": "(Frame frame)", "modifiers": "@Override public", "return": "void", "signature": "void incomingFrame(Frame frame)", "full_signature": "@Override public void incomingFrame(Frame frame)", "class_method_signature": "DeflateFrameExtension.incomingFrame(Frame frame)", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/websocket/common/extension/compress/DeflateFrameExtension.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName() {\n        return \"deflate-frame\";\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DeflateFrameExtension.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}