{"test_class": {"identifier": "TestVoiceModalityComponent", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MMICallManager cm;", "modifier": "private", "type": "MMICallManager", "declarator": "cm", "var_name": "cm"}], "file": "org.jvoicexml.callmanager.mmi/src/test/java/org/jvoicexml/callmanager/mmi/TestVoiceModalityComponent.java"}, "test_case": {"identifier": "testReceivedEventStartRequestContentPrompt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReceivedEventStartRequestContentPrompt() throws Exception {\n        final VoiceModalityComponent mc = cm.getVoiceModalityComponent();\n        final Mmi mmi = new Mmi();\n        final StartRequest request = new StartRequest();\n        mmi.setStartRequest(request);\n        request.setContext(\"http://nowhere\");\n        request.setRequestId(\"4242\");\n        final VoiceXmlDocument document = new VoiceXmlDocument();\n        final Vxml vxml = document.getVxml();\n        final Form form = vxml.appendChild(Form.class);\n        final Block block = form.appendChild(Block.class);\n        final Prompt prompt = block.appendChild(Prompt.class);\n        prompt.setXmlLang(Locale.GERMAN);\n        prompt.addText(\"Das ist ein Test\");\n        final AnyComplexType any = new AnyComplexType();\n        any.addContent(prompt.getNode());\n        request.setContent(any);\n        final DecoratedMMIEvent event = new DecoratedMMIEvent(this, mmi);\n        final CallMetadata data = new CallMetadata();\n        mc.receivedEvent(event, data);\n    }", "signature": "void testReceivedEventStartRequestContentPrompt()", "full_signature": "@Test public void testReceivedEventStartRequestContentPrompt()", "class_method_signature": "TestVoiceModalityComponent.testReceivedEventStartRequestContentPrompt()", "testcase": true, "constructor": false, "invocations": ["getVoiceModalityComponent", "setStartRequest", "setContext", "setRequestId", "getVxml", "appendChild", "appendChild", "appendChild", "setXmlLang", "addText", "addContent", "getNode", "setContent", "receivedEvent"]}, "focal_class": {"identifier": "VoiceModalityComponent", "superclass": "", "interfaces": "implements MMIEventListener, SessionListener", "fields": [{"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(VoiceModalityComponent.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(VoiceModalityComponent.class)", "var_name": "LOGGER"}, {"original_string": "private static String encoding = System.getProperty(\n            \"jvoicexml.xml.encoding\", \"UTF-8\");", "modifier": "private static", "type": "String", "declarator": "encoding = System.getProperty(\n            \"jvoicexml.xml.encoding\", \"UTF-8\")", "var_name": "encoding"}, {"original_string": "private ETLProtocolAdapter adapter;", "modifier": "private", "type": "ETLProtocolAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private final MMICallManager callManager;", "modifier": "private final", "type": "MMICallManager", "declarator": "callManager", "var_name": "callManager"}, {"original_string": "private final Map<String, MMIContext> contexts;", "modifier": "private final", "type": "Map<String, MMIContext>", "declarator": "contexts", "var_name": "contexts"}, {"original_string": "private final String servletBaseUri;", "modifier": "private final", "type": "String", "declarator": "servletBaseUri", "var_name": "servletBaseUri"}, {"original_string": "private final ExtensionNotificationDataConverter converter;", "modifier": "private final", "type": "ExtensionNotificationDataConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private final ExtensionNotificationDataExtractor extractor;", "modifier": "private final", "type": "ExtensionNotificationDataExtractor", "declarator": "extractor", "var_name": "extractor"}], "methods": [{"identifier": "VoiceModalityComponent", "parameters": "(final MMICallManager cm,\n            final ExtensionNotificationDataConverter conv,\n            final ExtensionNotificationDataExtractor ext,\n            final String baseUri)", "modifiers": "public", "return": "", "signature": " VoiceModalityComponent(final MMICallManager cm,\n            final ExtensionNotificationDataConverter conv,\n            final ExtensionNotificationDataExtractor ext,\n            final String baseUri)", "full_signature": "public  VoiceModalityComponent(final MMICallManager cm,\n            final ExtensionNotificationDataConverter conv,\n            final ExtensionNotificationDataExtractor ext,\n            final String baseUri)", "class_method_signature": "VoiceModalityComponent.VoiceModalityComponent(final MMICallManager cm,\n            final ExtensionNotificationDataConverter conv,\n            final ExtensionNotificationDataExtractor ext,\n            final String baseUri)", "testcase": false, "constructor": true}, {"identifier": "startAcceptingLifecyleEvents", "parameters": "(\n            final ETLProtocolAdapter protocolAdapter)", "modifiers": "public", "return": "void", "signature": "void startAcceptingLifecyleEvents(\n            final ETLProtocolAdapter protocolAdapter)", "full_signature": "public void startAcceptingLifecyleEvents(\n            final ETLProtocolAdapter protocolAdapter)", "class_method_signature": "VoiceModalityComponent.startAcceptingLifecyleEvents(\n            final ETLProtocolAdapter protocolAdapter)", "testcase": false, "constructor": false}, {"identifier": "isAcceptingLifecycleEvents", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isAcceptingLifecycleEvents()", "full_signature": " boolean isAcceptingLifecycleEvents()", "class_method_signature": "VoiceModalityComponent.isAcceptingLifecycleEvents()", "testcase": false, "constructor": false}, {"identifier": "sendLifeCycleEvent", "parameters": "(final Object channel, final LifeCycleEvent event)", "modifiers": "", "return": "void", "signature": "void sendLifeCycleEvent(final Object channel, final LifeCycleEvent event)", "full_signature": " void sendLifeCycleEvent(final Object channel, final LifeCycleEvent event)", "class_method_signature": "VoiceModalityComponent.sendLifeCycleEvent(final Object channel, final LifeCycleEvent event)", "testcase": false, "constructor": false}, {"identifier": "receivedEvent", "parameters": "(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "modifiers": "@Override public", "return": "void", "signature": "void receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "full_signature": "@Override public void receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "class_method_signature": "VoiceModalityComponent.receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(final String contextId)", "modifiers": "private", "return": "MMIContext", "signature": "MMIContext getContext(final String contextId)", "full_signature": "private MMIContext getContext(final String contextId)", "class_method_signature": "VoiceModalityComponent.getContext(final String contextId)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(final URI contextId)", "modifiers": "", "return": "MMIContext", "signature": "MMIContext getContext(final URI contextId)", "full_signature": " MMIContext getContext(final URI contextId)", "class_method_signature": "VoiceModalityComponent.getContext(final URI contextId)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(final LifeCycleRequest request,\n            final boolean create)", "modifiers": "private", "return": "MMIContext", "signature": "MMIContext getContext(final LifeCycleRequest request,\n            final boolean create)", "full_signature": "private MMIContext getContext(final LifeCycleRequest request,\n            final boolean create)", "class_method_signature": "VoiceModalityComponent.getContext(final LifeCycleRequest request,\n            final boolean create)", "testcase": false, "constructor": false}, {"identifier": "copyCallMetadata", "parameters": "(final LifeCycleEvent event,\n            final CallMetadata data)", "modifiers": "private", "return": "void", "signature": "void copyCallMetadata(final LifeCycleEvent event,\n            final CallMetadata data)", "full_signature": "private void copyCallMetadata(final LifeCycleEvent event,\n            final CallMetadata data)", "class_method_signature": "VoiceModalityComponent.copyCallMetadata(final LifeCycleEvent event,\n            final CallMetadata data)", "testcase": false, "constructor": false}, {"identifier": "prepare", "parameters": "(final Object channel, final PrepareRequest request,\n            final CallMetadata data)", "modifiers": "private", "return": "void", "signature": "void prepare(final Object channel, final PrepareRequest request,\n            final CallMetadata data)", "full_signature": "private void prepare(final Object channel, final PrepareRequest request,\n            final CallMetadata data)", "class_method_signature": "VoiceModalityComponent.prepare(final Object channel, final PrepareRequest request,\n            final CallMetadata data)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(final MMIContext context, final PrepareRequest request)", "modifiers": "private", "return": "URI", "signature": "URI getUri(final MMIContext context, final PrepareRequest request)", "full_signature": "private URI getUri(final MMIContext context, final PrepareRequest request)", "class_method_signature": "VoiceModalityComponent.getUri(final MMIContext context, final PrepareRequest request)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(final Object channel, final StartRequest request,\n            final CallMetadata data)", "modifiers": "private", "return": "void", "signature": "void start(final Object channel, final StartRequest request,\n            final CallMetadata data)", "full_signature": "private void start(final Object channel, final StartRequest request,\n            final CallMetadata data)", "class_method_signature": "VoiceModalityComponent.start(final Object channel, final StartRequest request,\n            final CallMetadata data)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(final MMIContext context, final StartRequest request)", "modifiers": "private", "return": "URI", "signature": "URI getUri(final MMIContext context, final StartRequest request)", "full_signature": "private URI getUri(final MMIContext context, final StartRequest request)", "class_method_signature": "VoiceModalityComponent.getUri(final MMIContext context, final StartRequest request)", "testcase": false, "constructor": false}, {"identifier": "createTemporaryVoiceXmlDocumentUri", "parameters": "(final MMIContext context,\n            final AnyComplexType content)", "modifiers": "private", "return": "URI", "signature": "URI createTemporaryVoiceXmlDocumentUri(final MMIContext context,\n            final AnyComplexType content)", "full_signature": "private URI createTemporaryVoiceXmlDocumentUri(final MMIContext context,\n            final AnyComplexType content)", "class_method_signature": "VoiceModalityComponent.createTemporaryVoiceXmlDocumentUri(final MMIContext context,\n            final AnyComplexType content)", "testcase": false, "constructor": false}, {"identifier": "parseContent", "parameters": "(final Object object)", "modifiers": "private", "return": "String", "signature": "String parseContent(final Object object)", "full_signature": "private String parseContent(final Object object)", "class_method_signature": "VoiceModalityComponent.parseContent(final Object object)", "testcase": false, "constructor": false}, {"identifier": "isField", "parameters": "(final Object object)", "modifiers": "private", "return": "boolean", "signature": "boolean isField(final Object object)", "full_signature": "private boolean isField(final Object object)", "class_method_signature": "VoiceModalityComponent.isField(final Object object)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "(final Object channel, final CancelRequest request)", "modifiers": "private", "return": "void", "signature": "void cancel(final Object channel, final CancelRequest request)", "full_signature": "private void cancel(final Object channel, final CancelRequest request)", "class_method_signature": "VoiceModalityComponent.cancel(final Object channel, final CancelRequest request)", "testcase": false, "constructor": false}, {"identifier": "removeContext", "parameters": "(final String contextId)", "modifiers": "private", "return": "void", "signature": "void removeContext(final String contextId)", "full_signature": "private void removeContext(final String contextId)", "class_method_signature": "VoiceModalityComponent.removeContext(final String contextId)", "testcase": false, "constructor": false}, {"identifier": "clearContext", "parameters": "(final Object channel,\n            final ClearContextRequest request)", "modifiers": "private", "return": "void", "signature": "void clearContext(final Object channel,\n            final ClearContextRequest request)", "full_signature": "private void clearContext(final Object channel,\n            final ClearContextRequest request)", "class_method_signature": "VoiceModalityComponent.clearContext(final Object channel,\n            final ClearContextRequest request)", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "(final Object channel, final PauseRequest request)", "modifiers": "private", "return": "void", "signature": "void pause(final Object channel, final PauseRequest request)", "full_signature": "private void pause(final Object channel, final PauseRequest request)", "class_method_signature": "VoiceModalityComponent.pause(final Object channel, final PauseRequest request)", "testcase": false, "constructor": false}, {"identifier": "resume", "parameters": "(final Object channel, final ResumeRequest request)", "modifiers": "private", "return": "void", "signature": "void resume(final Object channel, final ResumeRequest request)", "full_signature": "private void resume(final Object channel, final ResumeRequest request)", "class_method_signature": "VoiceModalityComponent.resume(final Object channel, final ResumeRequest request)", "testcase": false, "constructor": false}, {"identifier": "status", "parameters": "(final Object channel, final StatusRequest request)", "modifiers": "private", "return": "void", "signature": "void status(final Object channel, final StatusRequest request)", "full_signature": "private void status(final Object channel, final StatusRequest request)", "class_method_signature": "VoiceModalityComponent.status(final Object channel, final StatusRequest request)", "testcase": false, "constructor": false}, {"identifier": "extensionInformation", "parameters": "(final Object channel, final Mmi mmi,\n            final ExtensionNotification ext)", "modifiers": "public", "return": "void", "signature": "void extensionInformation(final Object channel, final Mmi mmi,\n            final ExtensionNotification ext)", "full_signature": "public void extensionInformation(final Object channel, final Mmi mmi,\n            final ExtensionNotification ext)", "class_method_signature": "VoiceModalityComponent.extensionInformation(final Object channel, final Mmi mmi,\n            final ExtensionNotification ext)", "testcase": false, "constructor": false}, {"identifier": "newContext", "parameters": "(final Object channel,\n            final NewContextRequest request)", "modifiers": "private", "return": "void", "signature": "void newContext(final Object channel,\n            final NewContextRequest request)", "full_signature": "private void newContext(final Object channel,\n            final NewContextRequest request)", "class_method_signature": "VoiceModalityComponent.newContext(final Object channel,\n            final NewContextRequest request)", "testcase": false, "constructor": false}, {"identifier": "stopAcceptingLifecycleEvents", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stopAcceptingLifecycleEvents()", "full_signature": "public void stopAcceptingLifecycleEvents()", "class_method_signature": "VoiceModalityComponent.stopAcceptingLifecycleEvents()", "testcase": false, "constructor": false}, {"identifier": "sessionStarted", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void sessionStarted(final Session session)", "full_signature": "@Override public void sessionStarted(final Session session)", "class_method_signature": "VoiceModalityComponent.sessionStarted(final Session session)", "testcase": false, "constructor": false}, {"identifier": "findContext", "parameters": "(final Session session)", "modifiers": "private", "return": "MMIContext", "signature": "MMIContext findContext(final Session session)", "full_signature": "private MMIContext findContext(final Session session)", "class_method_signature": "VoiceModalityComponent.findContext(final Session session)", "testcase": false, "constructor": false}, {"identifier": "sessionEnded", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void sessionEnded(final Session session)", "full_signature": "@Override public void sessionEnded(final Session session)", "class_method_signature": "VoiceModalityComponent.sessionEnded(final Session session)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.callmanager.mmi/src/main/java/org/jvoicexml/callmanager/mmi/VoiceModalityComponent.java"}, "focal_method": {"identifier": "receivedEvent", "parameters": "(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data) {\n        final LifeCycleEvent event = evt.getLifeCycleEvent();\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"received new MMI event: \" + event);\n        }\n        final Object channel = evt.getChannel();\n        if (event instanceof PrepareRequest) {\n            final PrepareRequest request = (PrepareRequest) event;\n            prepare(channel, request, data);\n        } else if (event instanceof StartRequest) {\n            final StartRequest request = (StartRequest) event;\n            start(channel, request, data);\n        } else if (event instanceof CancelRequest) {\n            final CancelRequest request = (CancelRequest) event;\n            cancel(channel, request);\n        } else if (event instanceof ClearContextRequest) {\n            final ClearContextRequest request = (ClearContextRequest) event;\n            clearContext(channel, request);\n        } else if (event instanceof PauseRequest) {\n            final PauseRequest request = (PauseRequest) event;\n            pause(channel, request);\n        } else if (event instanceof ResumeRequest) {\n            final ResumeRequest request = (ResumeRequest) event;\n            resume(channel, request);\n        } else if (event instanceof StatusRequest) {\n            final StatusRequest request = (StatusRequest) event;\n            status(channel, request);\n        } else if (event instanceof NewContextRequest) {\n            final NewContextRequest request = (NewContextRequest) event;\n            newContext(channel, request);\n        } else if (evt.getExtensionNotification() != null) {\n            final Mmi mmi = evt.getMmi();\n            final ExtensionNotification ext = evt.getExtensionNotification();\n            extensionInformation(channel, mmi, ext);\n        } else {\n            LOGGER.warn(\"unable to handle that MMI event: \" + event);\n        }\n    }", "signature": "void receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "full_signature": "@Override public void receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "class_method_signature": "VoiceModalityComponent.receivedEvent(final DecoratedMMIEvent evt,\n            final CallMetadata data)", "testcase": false, "constructor": false, "invocations": ["getLifeCycleEvent", "isDebugEnabled", "debug", "getChannel", "prepare", "start", "cancel", "clearContext", "pause", "resume", "status", "newContext", "getExtensionNotification", "getMmi", "getExtensionNotification", "extensionInformation", "warn"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}