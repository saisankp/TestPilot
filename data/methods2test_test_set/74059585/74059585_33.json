{"test_class": {"identifier": "TracersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Tracer mockTracer = mock(Tracer.class);", "modifier": "private final", "type": "Tracer", "declarator": "mockTracer = mock(Tracer.class)", "var_name": "mockTracer"}], "file": "jdbc/driver/src/test/java/com/google/cloud/trace/jdbc/TracersTest.java"}, "test_case": {"identifier": "getCurrent_threadlocal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getCurrent_threadlocal() {\n    ThreadLocalTracerStore.setCurrent(mockTracer);\n    Tracer tracer = new Tracers().getCurrent();\n    assertThat(tracer).isSameAs(mockTracer);\n    ThreadLocalTracerStore.remove();\n  }", "signature": "void getCurrent_threadlocal()", "full_signature": "@Test public void getCurrent_threadlocal()", "class_method_signature": "TracersTest.getCurrent_threadlocal()", "testcase": true, "constructor": false, "invocations": ["setCurrent", "getCurrent", "isSameAs", "assertThat", "remove"]}, "focal_class": {"identifier": "Tracers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Tracer NOOP_TRACER = new Tracer() {\n    @Override\n    public TraceContext startSpan(String name, StartSpanOptions options) {\n      return null;\n    }\n\n    @Override\n    public TraceContext startSpan(String name) {\n      return null;\n    }\n\n    @Override\n    public void setStackTrace(TraceContext traceContext, StackTrace stackTrace) {}\n\n    @Override\n    public void endSpan(TraceContext traceContext, EndSpanOptions options) {}\n\n    @Override\n    public void endSpan(TraceContext traceContext) {}\n\n    @Override\n    public void annotateSpan(TraceContext traceContext, Labels labels) {}\n  };", "modifier": "private static final", "type": "Tracer", "declarator": "NOOP_TRACER = new Tracer() {\n    @Override\n    public TraceContext startSpan(String name, StartSpanOptions options) {\n      return null;\n    }\n\n    @Override\n    public TraceContext startSpan(String name) {\n      return null;\n    }\n\n    @Override\n    public void setStackTrace(TraceContext traceContext, StackTrace stackTrace) {}\n\n    @Override\n    public void endSpan(TraceContext traceContext, EndSpanOptions options) {}\n\n    @Override\n    public void endSpan(TraceContext traceContext) {}\n\n    @Override\n    public void annotateSpan(TraceContext traceContext, Labels labels) {}\n  }", "var_name": "NOOP_TRACER"}], "methods": [{"identifier": "getCurrent", "parameters": "()", "modifiers": "", "return": "Tracer", "signature": "Tracer getCurrent()", "full_signature": " Tracer getCurrent()", "class_method_signature": "Tracers.getCurrent()", "testcase": false, "constructor": false}], "file": "jdbc/driver/src/main/java/com/google/cloud/trace/jdbc/Tracers.java"}, "focal_method": {"identifier": "getCurrent", "parameters": "()", "modifiers": "", "return": "Tracer", "body": "Tracer getCurrent() {\n    return ThreadLocalTracerStore.getCurrent().or(NOOP_TRACER);\n  }", "signature": "Tracer getCurrent()", "full_signature": " Tracer getCurrent()", "class_method_signature": "Tracers.getCurrent()", "testcase": false, "constructor": false, "invocations": ["or", "getCurrent"]}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}