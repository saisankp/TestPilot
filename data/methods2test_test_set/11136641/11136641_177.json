{"test_class": {"identifier": "BaseLdapPathBeanPostProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BaseLdapPathBeanPostProcessor tested;", "modifier": "private", "type": "BaseLdapPathBeanPostProcessor", "declarator": "tested", "var_name": "tested"}, {"original_string": "private BaseLdapPathAware ldapPathAwareMock;", "modifier": "private", "type": "BaseLdapPathAware", "declarator": "ldapPathAwareMock", "var_name": "ldapPathAwareMock"}, {"original_string": "private ApplicationContext applicationContextMock;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContextMock", "var_name": "applicationContextMock"}, {"original_string": "private BaseLdapNameAware ldapNameAwareMock;", "modifier": "private", "type": "BaseLdapNameAware", "declarator": "ldapNameAwareMock", "var_name": "ldapNameAwareMock"}], "file": "core/src/test/java/org/springframework/ldap/core/support/BaseLdapPathBeanPostProcessorTest.java"}, "test_case": {"identifier": "testPostProcessBeforeInitializationWithLdapNameAwareNoBasePathSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPostProcessBeforeInitializationWithLdapNameAwareNoBasePathSet() throws Exception {\n        final LdapContextSource expectedContextSource = new LdapContextSource();\n        String expectedPath = \"dc=example, dc=com\";\n        expectedContextSource.setBase(expectedPath);\n\n        tested = new BaseLdapPathBeanPostProcessor() {\n            BaseLdapPathSource getBaseLdapPathSourceFromApplicationContext() {\n                return expectedContextSource;\n            }\n        };\n\n        Object result = tested.postProcessBeforeInitialization(ldapNameAwareMock, \"someName\");\n\n        verify(ldapNameAwareMock).setBaseLdapPath(LdapUtils.newLdapName(expectedPath));\n\n        assertThat(result).isSameAs(ldapNameAwareMock);\n    }", "signature": "void testPostProcessBeforeInitializationWithLdapNameAwareNoBasePathSet()", "full_signature": "@Test public void testPostProcessBeforeInitializationWithLdapNameAwareNoBasePathSet()", "class_method_signature": "BaseLdapPathBeanPostProcessorTest.testPostProcessBeforeInitializationWithLdapNameAwareNoBasePathSet()", "testcase": true, "constructor": false, "invocations": ["setBase", "postProcessBeforeInitialization", "setBaseLdapPath", "verify", "newLdapName", "isSameAs", "assertThat"]}, "focal_class": {"identifier": "BaseLdapPathBeanPostProcessor", "superclass": "", "interfaces": "implements BeanPostProcessor, ApplicationContextAware, Ordered", "fields": [{"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private LdapName basePath;", "modifier": "private", "type": "LdapName", "declarator": "basePath", "var_name": "basePath"}, {"original_string": "private String baseLdapPathSourceName;", "modifier": "private", "type": "String", "declarator": "baseLdapPathSourceName", "var_name": "baseLdapPathSourceName"}, {"original_string": "private int order = Ordered.LOWEST_PRECEDENCE;", "modifier": "private", "type": "int", "declarator": "order = Ordered.LOWEST_PRECEDENCE", "var_name": "order"}], "methods": [{"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "BaseLdapPathBeanPostProcessor.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "getBaseLdapPathSourceFromApplicationContext", "parameters": "()", "modifiers": "", "return": "BaseLdapPathSource", "signature": "BaseLdapPathSource getBaseLdapPathSourceFromApplicationContext()", "full_signature": " BaseLdapPathSource getBaseLdapPathSourceFromApplicationContext()", "class_method_signature": "BaseLdapPathBeanPostProcessor.getBaseLdapPathSourceFromApplicationContext()", "testcase": false, "constructor": false}, {"identifier": "postProcessAfterInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessAfterInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessAfterInitialization(Object bean, String beanName)", "class_method_signature": "BaseLdapPathBeanPostProcessor.postProcessAfterInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "@Override public", "return": "void", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "@Override public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "BaseLdapPathBeanPostProcessor.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "setBasePath", "parameters": "(DistinguishedName basePath)", "modifiers": "public", "return": "void", "signature": "void setBasePath(DistinguishedName basePath)", "full_signature": "public void setBasePath(DistinguishedName basePath)", "class_method_signature": "BaseLdapPathBeanPostProcessor.setBasePath(DistinguishedName basePath)", "testcase": false, "constructor": false}, {"identifier": "setBasePath", "parameters": "(String basePath)", "modifiers": "public", "return": "void", "signature": "void setBasePath(String basePath)", "full_signature": "public void setBasePath(String basePath)", "class_method_signature": "BaseLdapPathBeanPostProcessor.setBasePath(String basePath)", "testcase": false, "constructor": false}, {"identifier": "setBaseLdapPathSourceName", "parameters": "(String contextSourceName)", "modifiers": "public", "return": "void", "signature": "void setBaseLdapPathSourceName(String contextSourceName)", "full_signature": "public void setBaseLdapPathSourceName(String contextSourceName)", "class_method_signature": "BaseLdapPathBeanPostProcessor.setBaseLdapPathSourceName(String contextSourceName)", "testcase": false, "constructor": false}, {"identifier": "setOrder", "parameters": "(int order)", "modifiers": "public", "return": "void", "signature": "void setOrder(int order)", "full_signature": "public void setOrder(int order)", "class_method_signature": "BaseLdapPathBeanPostProcessor.setOrder(int order)", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOrder()", "full_signature": "public int getOrder()", "class_method_signature": "BaseLdapPathBeanPostProcessor.getOrder()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/support/BaseLdapPathBeanPostProcessor.java"}, "focal_method": {"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object postProcessBeforeInitialization(Object bean, String beanName) {\n\t\tif(bean instanceof BaseLdapNameAware) {\n            BaseLdapNameAware baseLdapNameAware = (BaseLdapNameAware) bean;\n\n            if (basePath != null) {\n                baseLdapNameAware.setBaseLdapPath(LdapUtils.newLdapName(basePath));\n            }\n            else {\n                BaseLdapPathSource ldapPathSource = getBaseLdapPathSourceFromApplicationContext();\n                baseLdapNameAware.setBaseLdapPath(LdapUtils.newLdapName(ldapPathSource.getBaseLdapName()));\n            }\n        } else if (bean instanceof BaseLdapPathAware) {\n\t\t\tBaseLdapPathAware baseLdapPathAware = (BaseLdapPathAware) bean;\n\n\t\t\tif (basePath != null) {\n\t\t\t\tbaseLdapPathAware.setBaseLdapPath(new DistinguishedName(basePath));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tBaseLdapPathSource ldapPathSource = getBaseLdapPathSourceFromApplicationContext();\n\t\t\t\tbaseLdapPathAware.setBaseLdapPath(ldapPathSource.getBaseLdapPath().immutableDistinguishedName());\n\t\t\t}\n\t\t}\n\t\treturn bean;\n\t}", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "BaseLdapPathBeanPostProcessor.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false, "invocations": ["setBaseLdapPath", "newLdapName", "getBaseLdapPathSourceFromApplicationContext", "setBaseLdapPath", "newLdapName", "getBaseLdapName", "setBaseLdapPath", "getBaseLdapPathSourceFromApplicationContext", "setBaseLdapPath", "immutableDistinguishedName", "getBaseLdapPath"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}