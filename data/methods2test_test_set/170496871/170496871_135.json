{"test_class": {"identifier": "GaussRandomProducerTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/util/generators/primitives/scalar/GaussRandomProducerTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGet() {\n        Random random = new Random(0L);\n        final double mean = random.nextInt(5) - 2.5;\n        final double variance = random.nextInt(5);\n        GaussRandomProducer producer = new GaussRandomProducer(mean, variance, 1L);\n\n        final int N = 50000;\n        double meanStat = IntStream.range(0, N).mapToDouble(i -> producer.get()).sum() / N;\n        double varianceStat = IntStream.range(0, N).mapToDouble(i -> Math.pow(producer.get() - mean, 2)).sum() / N;\n\n        assertEquals(mean, meanStat, 0.01);\n        assertEquals(variance, varianceStat, 0.1);\n    }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "GaussRandomProducerTest.testGet()", "testcase": true, "constructor": false, "invocations": ["nextInt", "nextInt", "sum", "mapToDouble", "range", "get", "sum", "mapToDouble", "range", "pow", "get", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "GaussRandomProducer", "superclass": "extends RandomProducerWithGenerator", "interfaces": "", "fields": [{"original_string": "private final double mean;", "modifier": "private final", "type": "double", "declarator": "mean", "var_name": "mean"}, {"original_string": "private final double variance;", "modifier": "private final", "type": "double", "declarator": "variance", "var_name": "variance"}], "methods": [{"identifier": "GaussRandomProducer", "parameters": "()", "modifiers": "public", "return": "", "signature": " GaussRandomProducer()", "full_signature": "public  GaussRandomProducer()", "class_method_signature": "GaussRandomProducer.GaussRandomProducer()", "testcase": false, "constructor": true}, {"identifier": "GaussRandomProducer", "parameters": "(long seed)", "modifiers": "public", "return": "", "signature": " GaussRandomProducer(long seed)", "full_signature": "public  GaussRandomProducer(long seed)", "class_method_signature": "GaussRandomProducer.GaussRandomProducer(long seed)", "testcase": false, "constructor": true}, {"identifier": "GaussRandomProducer", "parameters": "(double mean, double variance)", "modifiers": "public", "return": "", "signature": " GaussRandomProducer(double mean, double variance)", "full_signature": "public  GaussRandomProducer(double mean, double variance)", "class_method_signature": "GaussRandomProducer.GaussRandomProducer(double mean, double variance)", "testcase": false, "constructor": true}, {"identifier": "GaussRandomProducer", "parameters": "(double mean, double variance, long seed)", "modifiers": "public", "return": "", "signature": " GaussRandomProducer(double mean, double variance, long seed)", "full_signature": "public  GaussRandomProducer(double mean, double variance, long seed)", "class_method_signature": "GaussRandomProducer.GaussRandomProducer(double mean, double variance, long seed)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double get()", "full_signature": "@Override public Double get()", "class_method_signature": "GaussRandomProducer.get()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/util/generators/primitives/scalar/GaussRandomProducer.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Double", "body": "@Override public Double get() {\n        return mean + generator().nextGaussian() * Math.sqrt(variance);\n    }", "signature": "Double get()", "full_signature": "@Override public Double get()", "class_method_signature": "GaussRandomProducer.get()", "testcase": false, "constructor": false, "invocations": ["nextGaussian", "generator", "sqrt"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}