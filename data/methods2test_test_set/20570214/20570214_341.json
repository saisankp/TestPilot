{"test_class": {"identifier": "KeysetHandleTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/KeysetHandleTest.java"}, "test_case": {"identifier": "testVoidInputs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testVoidInputs() throws Exception {\n    KeysetHandle unused;\n    try {\n      KeysetReader reader = BinaryKeysetReader.withBytes(new byte[0]);\n      unused = KeysetHandle.read(reader, null /* masterKey */);\n      fail(\"Expected GeneralSecurityException\");\n    } catch (GeneralSecurityException e) {\n      assertExceptionContains(e, \"empty keyset\");\n    }\n  }", "signature": "void testVoidInputs()", "full_signature": "@Test public void testVoidInputs()", "class_method_signature": "KeysetHandleTest.testVoidInputs()", "testcase": true, "constructor": false, "invocations": ["withBytes", "read", "fail", "assertExceptionContains"]}, "focal_class": {"identifier": "KeysetHandle", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Keyset keyset;", "modifier": "private final", "type": "Keyset", "declarator": "keyset", "var_name": "keyset"}], "methods": [{"identifier": "KeysetHandle", "parameters": "(Keyset keyset)", "modifiers": "private", "return": "", "signature": " KeysetHandle(Keyset keyset)", "full_signature": "private  KeysetHandle(Keyset keyset)", "class_method_signature": "KeysetHandle.KeysetHandle(Keyset keyset)", "testcase": false, "constructor": true}, {"identifier": "fromKeyset", "parameters": "(Keyset keyset)", "modifiers": "static final", "return": "KeysetHandle", "signature": "KeysetHandle fromKeyset(Keyset keyset)", "full_signature": "static final KeysetHandle fromKeyset(Keyset keyset)", "class_method_signature": "KeysetHandle.fromKeyset(Keyset keyset)", "testcase": false, "constructor": false}, {"identifier": "getKeyset", "parameters": "()", "modifiers": "", "return": "Keyset", "signature": "Keyset getKeyset()", "full_signature": " Keyset getKeyset()", "class_method_signature": "KeysetHandle.getKeyset()", "testcase": false, "constructor": false}, {"identifier": "getKeysetInfo", "parameters": "()", "modifiers": "public", "return": "KeysetInfo", "signature": "KeysetInfo getKeysetInfo()", "full_signature": "public KeysetInfo getKeysetInfo()", "class_method_signature": "KeysetHandle.getKeysetInfo()", "testcase": false, "constructor": false}, {"identifier": "generateNew", "parameters": "(com.google.crypto.tink.proto.KeyTemplate keyTemplate)", "modifiers": "@Deprecated public static final", "return": "KeysetHandle", "signature": "KeysetHandle generateNew(com.google.crypto.tink.proto.KeyTemplate keyTemplate)", "full_signature": "@Deprecated public static final KeysetHandle generateNew(com.google.crypto.tink.proto.KeyTemplate keyTemplate)", "class_method_signature": "KeysetHandle.generateNew(com.google.crypto.tink.proto.KeyTemplate keyTemplate)", "testcase": false, "constructor": false}, {"identifier": "generateNew", "parameters": "(KeyTemplate keyTemplate)", "modifiers": "public static final", "return": "KeysetHandle", "signature": "KeysetHandle generateNew(KeyTemplate keyTemplate)", "full_signature": "public static final KeysetHandle generateNew(KeyTemplate keyTemplate)", "class_method_signature": "KeysetHandle.generateNew(KeyTemplate keyTemplate)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(KeysetReader reader, Aead masterKey)", "modifiers": "public static final", "return": "KeysetHandle", "signature": "KeysetHandle read(KeysetReader reader, Aead masterKey)", "full_signature": "public static final KeysetHandle read(KeysetReader reader, Aead masterKey)", "class_method_signature": "KeysetHandle.read(KeysetReader reader, Aead masterKey)", "testcase": false, "constructor": false}, {"identifier": "readNoSecret", "parameters": "(KeysetReader reader)", "modifiers": "public static final", "return": "KeysetHandle", "signature": "KeysetHandle readNoSecret(KeysetReader reader)", "full_signature": "public static final KeysetHandle readNoSecret(KeysetReader reader)", "class_method_signature": "KeysetHandle.readNoSecret(KeysetReader reader)", "testcase": false, "constructor": false}, {"identifier": "readNoSecret", "parameters": "(final byte[] serialized)", "modifiers": "public static final", "return": "KeysetHandle", "signature": "KeysetHandle readNoSecret(final byte[] serialized)", "full_signature": "public static final KeysetHandle readNoSecret(final byte[] serialized)", "class_method_signature": "KeysetHandle.readNoSecret(final byte[] serialized)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(KeysetWriter keysetWriter, Aead masterKey)", "modifiers": "public", "return": "void", "signature": "void write(KeysetWriter keysetWriter, Aead masterKey)", "full_signature": "public void write(KeysetWriter keysetWriter, Aead masterKey)", "class_method_signature": "KeysetHandle.write(KeysetWriter keysetWriter, Aead masterKey)", "testcase": false, "constructor": false}, {"identifier": "writeNoSecret", "parameters": "(KeysetWriter writer)", "modifiers": "public", "return": "void", "signature": "void writeNoSecret(KeysetWriter writer)", "full_signature": "public void writeNoSecret(KeysetWriter writer)", "class_method_signature": "KeysetHandle.writeNoSecret(KeysetWriter writer)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(Keyset keyset, Aead masterKey)", "modifiers": "private static", "return": "EncryptedKeyset", "signature": "EncryptedKeyset encrypt(Keyset keyset, Aead masterKey)", "full_signature": "private static EncryptedKeyset encrypt(Keyset keyset, Aead masterKey)", "class_method_signature": "KeysetHandle.encrypt(Keyset keyset, Aead masterKey)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(EncryptedKeyset encryptedKeyset, Aead masterKey)", "modifiers": "private static", "return": "Keyset", "signature": "Keyset decrypt(EncryptedKeyset encryptedKeyset, Aead masterKey)", "full_signature": "private static Keyset decrypt(EncryptedKeyset encryptedKeyset, Aead masterKey)", "class_method_signature": "KeysetHandle.decrypt(EncryptedKeyset encryptedKeyset, Aead masterKey)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeysetHandle", "parameters": "()", "modifiers": "public", "return": "KeysetHandle", "signature": "KeysetHandle getPublicKeysetHandle()", "full_signature": "public KeysetHandle getPublicKeysetHandle()", "class_method_signature": "KeysetHandle.getPublicKeysetHandle()", "testcase": false, "constructor": false}, {"identifier": "createPublicKeyData", "parameters": "(KeyData privateKeyData)", "modifiers": "private static", "return": "KeyData", "signature": "KeyData createPublicKeyData(KeyData privateKeyData)", "full_signature": "private static KeyData createPublicKeyData(KeyData privateKeyData)", "class_method_signature": "KeysetHandle.createPublicKeyData(KeyData privateKeyData)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(KeyData keyData)", "modifiers": "@SuppressWarnings(\"deprecation\") private static", "return": "void", "signature": "void validate(KeyData keyData)", "full_signature": "@SuppressWarnings(\"deprecation\") private static void validate(KeyData keyData)", "class_method_signature": "KeysetHandle.validate(KeyData keyData)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KeysetHandle.toString()", "testcase": false, "constructor": false}, {"identifier": "assertNoSecretKeyMaterial", "parameters": "(Keyset keyset)", "modifiers": "private static", "return": "void", "signature": "void assertNoSecretKeyMaterial(Keyset keyset)", "full_signature": "private static void assertNoSecretKeyMaterial(Keyset keyset)", "class_method_signature": "KeysetHandle.assertNoSecretKeyMaterial(Keyset keyset)", "testcase": false, "constructor": false}, {"identifier": "assertEnoughKeyMaterial", "parameters": "(Keyset keyset)", "modifiers": "public static", "return": "void", "signature": "void assertEnoughKeyMaterial(Keyset keyset)", "full_signature": "public static void assertEnoughKeyMaterial(Keyset keyset)", "class_method_signature": "KeysetHandle.assertEnoughKeyMaterial(Keyset keyset)", "testcase": false, "constructor": false}, {"identifier": "assertEnoughEncryptedKeyMaterial", "parameters": "(EncryptedKeyset keyset)", "modifiers": "public static", "return": "void", "signature": "void assertEnoughEncryptedKeyMaterial(EncryptedKeyset keyset)", "full_signature": "public static void assertEnoughEncryptedKeyMaterial(EncryptedKeyset keyset)", "class_method_signature": "KeysetHandle.assertEnoughEncryptedKeyMaterial(EncryptedKeyset keyset)", "testcase": false, "constructor": false}, {"identifier": "getPrimitiveWithKnownInputPrimitive", "parameters": "(\n      Class<P> classObject, Class<B> inputPrimitiveClassObject)", "modifiers": "private", "return": "P", "signature": "P getPrimitiveWithKnownInputPrimitive(\n      Class<P> classObject, Class<B> inputPrimitiveClassObject)", "full_signature": "private P getPrimitiveWithKnownInputPrimitive(\n      Class<P> classObject, Class<B> inputPrimitiveClassObject)", "class_method_signature": "KeysetHandle.getPrimitiveWithKnownInputPrimitive(\n      Class<P> classObject, Class<B> inputPrimitiveClassObject)", "testcase": false, "constructor": false}, {"identifier": "getPrimitive", "parameters": "(Class<P> targetClassObject)", "modifiers": "public", "return": "P", "signature": "P getPrimitive(Class<P> targetClassObject)", "full_signature": "public P getPrimitive(Class<P> targetClassObject)", "class_method_signature": "KeysetHandle.getPrimitive(Class<P> targetClassObject)", "testcase": false, "constructor": false}, {"identifier": "getPrimitive", "parameters": "(KeyManager<P> customKeyManager, Class<P> targetClassObject)", "modifiers": "public", "return": "P", "signature": "P getPrimitive(KeyManager<P> customKeyManager, Class<P> targetClassObject)", "full_signature": "public P getPrimitive(KeyManager<P> customKeyManager, Class<P> targetClassObject)", "class_method_signature": "KeysetHandle.getPrimitive(KeyManager<P> customKeyManager, Class<P> targetClassObject)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/KeysetHandle.java"}, "focal_method": {"identifier": "read", "parameters": "(KeysetReader reader, Aead masterKey)", "modifiers": "public static final", "return": "KeysetHandle", "body": "public static final KeysetHandle read(KeysetReader reader, Aead masterKey)\n      throws GeneralSecurityException, IOException {\n    EncryptedKeyset encryptedKeyset = reader.readEncrypted();\n    assertEnoughEncryptedKeyMaterial(encryptedKeyset);\n    return new KeysetHandle(decrypt(encryptedKeyset, masterKey));\n  }", "signature": "KeysetHandle read(KeysetReader reader, Aead masterKey)", "full_signature": "public static final KeysetHandle read(KeysetReader reader, Aead masterKey)", "class_method_signature": "KeysetHandle.read(KeysetReader reader, Aead masterKey)", "testcase": false, "constructor": false, "invocations": ["readEncrypted", "assertEnoughEncryptedKeyMaterial", "decrypt"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}