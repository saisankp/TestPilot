{"test_class": {"identifier": "CollectionSizedIteratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String s1, s2, s3, s4, s5;", "modifier": "private", "type": "String", "declarator": "s1", "var_name": "s1"}, {"original_string": "private Collection<String> collection;", "modifier": "private", "type": "Collection<String>", "declarator": "collection", "var_name": "collection"}, {"original_string": "private CollectionSizedIterator<String> iterator;", "modifier": "private", "type": "CollectionSizedIterator<String>", "declarator": "iterator", "var_name": "iterator"}], "file": "core/util/src/test/java/org/arakhne/afc/sizediterator/CollectionSizedIteratorTest.java"}, "test_case": {"identifier": "next", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void next() {\n\t\tassertSame(this.s1, this.iterator.next());\n\t\tassertSame(this.s2, this.iterator.next());\n\t\tassertSame(this.s3, this.iterator.next());\n\t\tassertSame(this.s4, this.iterator.next());\n\t\tassertSame(this.s5, this.iterator.next());\n\t\ttry {\n\t\t\tthis.iterator.next();\n\t\t\tfail(\"expecting NoSuchElementException\");  //$NON-NLS-1$\n\t\t}\n\t\tcatch(NoSuchElementException exception) {\n\t\t\t// Expected exception\n\t\t}\n\t}", "signature": "void next()", "full_signature": "@Test public void next()", "class_method_signature": "CollectionSizedIteratorTest.next()", "testcase": true, "constructor": false, "invocations": ["assertSame", "next", "assertSame", "next", "assertSame", "next", "assertSame", "next", "assertSame", "next", "next", "fail"]}, "focal_class": {"identifier": "CollectionSizedIterator", "superclass": "", "interfaces": "implements SizedIterator<OBJECTT>", "fields": [{"original_string": "private final Iterator<OBJECTT> iterator;", "modifier": "private final", "type": "Iterator<OBJECTT>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private int index;", "modifier": "private", "type": "int", "declarator": "index", "var_name": "index"}], "methods": [{"identifier": "CollectionSizedIterator", "parameters": "(Collection<OBJECTT> collection)", "modifiers": "public", "return": "", "signature": " CollectionSizedIterator(Collection<OBJECTT> collection)", "full_signature": "public  CollectionSizedIterator(Collection<OBJECTT> collection)", "class_method_signature": "CollectionSizedIterator.CollectionSizedIterator(Collection<OBJECTT> collection)", "testcase": false, "constructor": true}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Pure @Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Pure @Override public boolean hasNext()", "class_method_signature": "CollectionSizedIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "OBJECTT", "signature": "OBJECTT next()", "full_signature": "@Override public OBJECTT next()", "class_method_signature": "CollectionSizedIterator.next()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "CollectionSizedIterator.remove()", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int index()", "full_signature": "@Pure @Override public int index()", "class_method_signature": "CollectionSizedIterator.index()", "testcase": false, "constructor": false}, {"identifier": "totalSize", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int totalSize()", "full_signature": "@Pure @Override public int totalSize()", "class_method_signature": "CollectionSizedIterator.totalSize()", "testcase": false, "constructor": false}, {"identifier": "rest", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int rest()", "full_signature": "@Pure @Override public int rest()", "class_method_signature": "CollectionSizedIterator.rest()", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/org/arakhne/afc/sizediterator/CollectionSizedIterator.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "OBJECTT", "body": "@Override\n\tpublic OBJECTT next() {\n\t\tfinal OBJECTT n = this.iterator.next();\n\t\t++this.index;\n\t\treturn n;\n\t}", "signature": "OBJECTT next()", "full_signature": "@Override public OBJECTT next()", "class_method_signature": "CollectionSizedIterator.next()", "testcase": false, "constructor": false, "invocations": ["next"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}