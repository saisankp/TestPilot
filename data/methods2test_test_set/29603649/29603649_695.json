{"test_class": {"identifier": "JmsMessageIndexerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private JmsTemplate jmsTemplateForIndexing;", "modifier": "@Mock\n    private", "type": "JmsTemplate", "declarator": "jmsTemplateForIndexing", "var_name": "jmsTemplateForIndexing"}, {"original_string": "@Mock\n    private MessageCreatorFactory messageCreatorFactory;", "modifier": "@Mock\n    private", "type": "MessageCreatorFactory", "declarator": "messageCreatorFactory", "var_name": "messageCreatorFactory"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private IndexMessage message;", "modifier": "@Mock\n    private", "type": "IndexMessage", "declarator": "message", "var_name": "message"}, {"original_string": "@Mock\n    private JmsIndexMessageCreator messageCreator;", "modifier": "@Mock\n    private", "type": "JmsIndexMessageCreator", "declarator": "messageCreator", "var_name": "messageCreator"}, {"original_string": "@Mock\n    private ActiveMQConnectionFactory connectionFactory;", "modifier": "@Mock\n    private", "type": "ActiveMQConnectionFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "@InjectMocks\n    private JmsMessageIndexer underTest;", "modifier": "@InjectMocks\n    private", "type": "JmsMessageIndexer", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-indexing/src/test/java/com/epam/wilma/indexing/jms/JmsMessageIndexerTest.java"}, "test_case": {"identifier": "testSendMessageToIndexerShouldSendMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSendMessageToIndexerShouldSendMessage() {\n        //GIVEN\n        given(messageCreatorFactory.createJmsMessageCreator(message)).willReturn(messageCreator);\n        //WHEN\n        underTest.sendMessageToIndexer(message);\n        //THEN\n        verify(jmsTemplateForIndexing).send(messageCreator);\n    }", "signature": "void testSendMessageToIndexerShouldSendMessage()", "full_signature": "@Test public void testSendMessageToIndexerShouldSendMessage()", "class_method_signature": "JmsMessageIndexerTest.testSendMessageToIndexerShouldSendMessage()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "createJmsMessageCreator", "sendMessageToIndexer", "send", "verify"]}, "focal_class": {"identifier": "JmsMessageIndexer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(JmsMessageIndexer.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JmsMessageIndexer.class)", "var_name": "logger"}, {"original_string": "private boolean logConnectionError = true;", "modifier": "private", "type": "boolean", "declarator": "logConnectionError = true", "var_name": "logConnectionError"}, {"original_string": "@Autowired\n    @Qualifier(\"jmsTemplateForIndexing\")\n    private JmsTemplate jmsTemplateForIndexing;", "modifier": "@Autowired\n    @Qualifier(\"jmsTemplateForIndexing\")\n    private", "type": "JmsTemplate", "declarator": "jmsTemplateForIndexing", "var_name": "jmsTemplateForIndexing"}, {"original_string": "@Autowired\n    @Qualifier(\"jmsConnectionFactoryForIndex\")\n    private ActiveMQConnectionFactory connectionFactory;", "modifier": "@Autowired\n    @Qualifier(\"jmsConnectionFactoryForIndex\")\n    private", "type": "ActiveMQConnectionFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "@Autowired\n    private MessageCreatorFactory messageCreatorFactory;", "modifier": "@Autowired\n    private", "type": "MessageCreatorFactory", "declarator": "messageCreatorFactory", "var_name": "messageCreatorFactory"}], "methods": [{"identifier": "sendMessageToIndexer", "parameters": "(final IndexMessage message)", "modifiers": "public", "return": "void", "signature": "void sendMessageToIndexer(final IndexMessage message)", "full_signature": "public void sendMessageToIndexer(final IndexMessage message)", "class_method_signature": "JmsMessageIndexer.sendMessageToIndexer(final IndexMessage message)", "testcase": false, "constructor": false}, {"identifier": "turnOffConnectionErrorLog", "parameters": "(final Exception e)", "modifiers": "private", "return": "void", "signature": "void turnOffConnectionErrorLog(final Exception e)", "full_signature": "private void turnOffConnectionErrorLog(final Exception e)", "class_method_signature": "JmsMessageIndexer.turnOffConnectionErrorLog(final Exception e)", "testcase": false, "constructor": false}, {"identifier": "turnOnConnectionErrorLog", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void turnOnConnectionErrorLog()", "full_signature": "private void turnOnConnectionErrorLog()", "class_method_signature": "JmsMessageIndexer.turnOnConnectionErrorLog()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-indexing/src/main/java/com/epam/wilma/indexing/jms/JmsMessageIndexer.java"}, "focal_method": {"identifier": "sendMessageToIndexer", "parameters": "(final IndexMessage message)", "modifiers": "public", "return": "void", "body": "public void sendMessageToIndexer(final IndexMessage message) {\n        try {\n            jmsTemplateForIndexing.send(messageCreatorFactory.createJmsMessageCreator(message));\n            turnOnConnectionErrorLog();\n        } catch (Exception e) {\n            turnOffConnectionErrorLog(e);\n        }\n    }", "signature": "void sendMessageToIndexer(final IndexMessage message)", "full_signature": "public void sendMessageToIndexer(final IndexMessage message)", "class_method_signature": "JmsMessageIndexer.sendMessageToIndexer(final IndexMessage message)", "testcase": false, "constructor": false, "invocations": ["send", "createJmsMessageCreator", "turnOnConnectionErrorLog", "turnOffConnectionErrorLog"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}