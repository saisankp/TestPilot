{"test_class": {"identifier": "ParameterFormDataTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bbva/kltt/apirest/core/parsed_info/parameters/ParameterFormDataTest.java"}, "test_case": {"identifier": "invalidParameterAutoInjectedTrue", "parameters": "()", "modifiers": "@Test(expected = APIRestGeneratorException.class) public", "return": "void", "body": "@Test(expected = APIRestGeneratorException.class)\n\tpublic void invalidParameterAutoInjectedTrue() throws APIRestGeneratorException\n\t{\n\t\tfinal ParameterFormData parameterFormData = new ParameterFormData(ConstantsTest.NAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.ALIAS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.DESCRIPTION,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.REQUIRED,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsCommon.TYPE_FILE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ConstantsTest.CONSUMES_MULTIPAR,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \"true\") ;\n\t\tparameterFormData.validate() ;\n\t}", "signature": "void invalidParameterAutoInjectedTrue()", "full_signature": "@Test(expected = APIRestGeneratorException.class) public void invalidParameterAutoInjectedTrue()", "class_method_signature": "ParameterFormDataTest.invalidParameterAutoInjectedTrue()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "ParameterFormData", "superclass": "extends ParameterNoBody", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ParameterFormData.class) ;", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ParameterFormData.class)", "var_name": "LOGGER"}, {"original_string": "@JsonIgnore\n    private final Set<String> consumes ;", "modifier": "@JsonIgnore\n    private final", "type": "Set<String>", "declarator": "consumes", "var_name": "consumes"}], "methods": [{"identifier": "ParameterFormData", "parameters": "(final String name,\n\t\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t\t final Set<String> consumes,\n\t\t\t\t\t\t\t final String autoInjected)", "modifiers": "public", "return": "", "signature": " ParameterFormData(final String name,\n\t\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t\t final Set<String> consumes,\n\t\t\t\t\t\t\t final String autoInjected)", "full_signature": "public  ParameterFormData(final String name,\n\t\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t\t final Set<String> consumes,\n\t\t\t\t\t\t\t final String autoInjected)", "class_method_signature": "ParameterFormData.ParameterFormData(final String name,\n\t\t\t\t\t\t\t final String alias,\n\t\t\t\t\t\t\t final String description,\n\t\t\t\t\t\t\t final String required,\n\t\t\t\t\t\t\t final String type,\n\t\t\t\t\t\t\t final Set<String> consumes,\n\t\t\t\t\t\t\t final String autoInjected)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "ParameterFormData.validate()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClassName()", "full_signature": "@Override public String getClassName()", "class_method_signature": "ParameterFormData.getClassName()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/bbva/kltt/apirest/core/parsed_info/parameters/ParameterFormData.java"}, "focal_method": {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void validate() throws APIRestGeneratorException\n\t{\n    \tString errorString = null ;\n    \t\n    \tif (ConstantsCommon.TYPE_FILE.equals(this.getType()) \t\t  \t  &&\n    \t   !this.consumes.contains(ConstantsInput.CON_MULTIPART_FORM_DAT) && \n    \t   !this.consumes.contains(ConstantsInput.CON_APP_X_WWW_FORM_URL))\n\t\t{\n\t\t\terrorString = \"The 'name' field (with the value '\" + this.getName() + \"') needs some (or both) of the following types in the consumes definition: \"  + \n\t\t\t\t\t\t  ConstantsInput.CON_MULTIPART_FORM_DAT + ConstantsCommon.STRING_COMMA + ConstantsCommon.STRING_BLANK + ConstantsInput.CON_APP_X_WWW_FORM_URL ; \n\t\t}\n    \telse if (this.getType() == null)\n\t\t{\n\t\t\terrorString = \"The 'name' field (with the value '\" + this.getName() + \"') needs a 'type'\" ;\n\t\t}\n    \telse if (this.isAutoInjected())\n\t\t{\n\t\t\terrorString = \"Auto Injection is not implemented for form-data parameters\" ;\n\t\t}\n\t\t\n\t\tif (errorString != null)\n\t\t{\n\t\t\tParameterFormData.LOGGER.error(errorString) ;\n\t\t\tthrow new APIRestGeneratorException(errorString) ;\n\t\t}\n    }", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "ParameterFormData.validate()", "testcase": false, "constructor": false, "invocations": ["equals", "getType", "contains", "contains", "getName", "getType", "getName", "isAutoInjected", "error"]}, "repository": {"repo_id": 74581177, "url": "https://github.com/BBVA-CIB/APIRestGenerator", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 147303, "license": "licensed"}}