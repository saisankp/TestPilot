{"test_class": {"identifier": "CoffeeHouseAppTest", "superclass": "extends BaseAkkaTestCase", "interfaces": "", "fields": [], "file": "exercise_005_Child_actors/src/test/java/com/lightbend/training/coffeehouse/CoffeeHouseAppTest.java"}, "test_case": {"identifier": "argsToOptsShouldConvertArgsToOpts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void argsToOptsShouldConvertArgsToOpts() {\n        final Map<String, String> result = CoffeeHouseApp.argsToOpts(Arrays.asList(\"a=1\", \"b\", \"-Dc=2\"));\n        assertThat(result).contains(MapEntry.entry(\"a\", \"1\"), MapEntry.entry(\"-Dc\", \"2\"));\n    }", "signature": "void argsToOptsShouldConvertArgsToOpts()", "full_signature": "@Test public void argsToOptsShouldConvertArgsToOpts()", "class_method_signature": "CoffeeHouseAppTest.argsToOptsShouldConvertArgsToOpts()", "testcase": true, "constructor": false, "invocations": ["argsToOpts", "asList", "contains", "assertThat", "entry", "entry"]}, "focal_class": {"identifier": "CoffeeHouseApp", "superclass": "", "interfaces": "implements Terminal", "fields": [{"original_string": "public static final Pattern optPattern = Pattern.compile(\"(\\\\S+)=(\\\\S+)\");", "modifier": "public static final", "type": "Pattern", "declarator": "optPattern = Pattern.compile(\"(\\\\S+)=(\\\\S+)\")", "var_name": "optPattern"}, {"original_string": "private final ActorSystem system;", "modifier": "private final", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private final LoggingAdapter log;", "modifier": "private final", "type": "LoggingAdapter", "declarator": "log", "var_name": "log"}, {"original_string": "private final ActorRef coffeeHouse;", "modifier": "private final", "type": "ActorRef", "declarator": "coffeeHouse", "var_name": "coffeeHouse"}], "methods": [{"identifier": "CoffeeHouseApp", "parameters": "(final ActorSystem system)", "modifiers": "public", "return": "", "signature": " CoffeeHouseApp(final ActorSystem system)", "full_signature": "public  CoffeeHouseApp(final ActorSystem system)", "class_method_signature": "CoffeeHouseApp.CoffeeHouseApp(final ActorSystem system)", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(final String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(final String[] args)", "full_signature": "public static void main(final String[] args)", "class_method_signature": "CoffeeHouseApp.main(final String[] args)", "testcase": false, "constructor": false}, {"identifier": "argsToOpts", "parameters": "(final List<String> args)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> argsToOpts(final List<String> args)", "full_signature": "public static Map<String, String> argsToOpts(final List<String> args)", "class_method_signature": "CoffeeHouseApp.argsToOpts(final List<String> args)", "testcase": false, "constructor": false}, {"identifier": "applySystemProperties", "parameters": "(final Map<String, String> opts)", "modifiers": "public static", "return": "void", "signature": "void applySystemProperties(final Map<String, String> opts)", "full_signature": "public static void applySystemProperties(final Map<String, String> opts)", "class_method_signature": "CoffeeHouseApp.applySystemProperties(final Map<String, String> opts)", "testcase": false, "constructor": false}, {"identifier": "printerProps", "parameters": "(ActorRef coffeeHouse)", "modifiers": "private static", "return": "Props", "signature": "Props printerProps(ActorRef coffeeHouse)", "full_signature": "private static Props printerProps(ActorRef coffeeHouse)", "class_method_signature": "CoffeeHouseApp.printerProps(ActorRef coffeeHouse)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void run()", "full_signature": "private void run()", "class_method_signature": "CoffeeHouseApp.run()", "testcase": false, "constructor": false}, {"identifier": "createCoffeeHouse", "parameters": "()", "modifiers": "protected", "return": "ActorRef", "signature": "ActorRef createCoffeeHouse()", "full_signature": "protected ActorRef createCoffeeHouse()", "class_method_signature": "CoffeeHouseApp.createCoffeeHouse()", "testcase": false, "constructor": false}, {"identifier": "commandLoop", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void commandLoop()", "full_signature": "private void commandLoop()", "class_method_signature": "CoffeeHouseApp.commandLoop()", "testcase": false, "constructor": false}, {"identifier": "createGuest", "parameters": "(int count, Coffee coffee, int maxCoffeeCount)", "modifiers": "protected", "return": "void", "signature": "void createGuest(int count, Coffee coffee, int maxCoffeeCount)", "full_signature": "protected void createGuest(int count, Coffee coffee, int maxCoffeeCount)", "class_method_signature": "CoffeeHouseApp.createGuest(int count, Coffee coffee, int maxCoffeeCount)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void getStatus()", "full_signature": "protected void getStatus()", "class_method_signature": "CoffeeHouseApp.getStatus()", "testcase": false, "constructor": false}], "file": "exercise_005_Child_actors/src/main/java/com/lightbend/training/coffeehouse/CoffeeHouseApp.java"}, "focal_method": {"identifier": "argsToOpts", "parameters": "(final List<String> args)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> argsToOpts(final List<String> args) {\n        final Map<String, String> opts = new HashMap<>();\n        for (final String arg : args) {\n            final Matcher matcher = optPattern.matcher(arg);\n            if (matcher.matches()) opts.put(matcher.group(1), matcher.group(2));\n        }\n        return opts;\n    }", "signature": "Map<String, String> argsToOpts(final List<String> args)", "full_signature": "public static Map<String, String> argsToOpts(final List<String> args)", "class_method_signature": "CoffeeHouseApp.argsToOpts(final List<String> args)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "put", "group", "group"]}, "repository": {"repo_id": 97642523, "url": "https://github.com/ironfish/oreilly-reactive-architecture-student", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 14, "size": 84, "license": "licensed"}}