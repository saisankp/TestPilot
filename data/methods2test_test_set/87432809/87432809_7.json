{"test_class": {"identifier": "SoqlQueryAnalyzerTest", "superclass": "", "interfaces": "", "fields": [], "file": "sf-jdbc-driver/src/test/java/com/ascendix/jdbc/salesforce/statement/SoqlQueryAnalyzerTest.java"}, "test_case": {"identifier": "testGetFromObjectName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFromObjectName() {\n        SoqlQueryAnalyzer analyzer = new SoqlQueryAnalyzer(\" select Id , Account.Name \\r\\nfrom Contact\\r\\n where something = 'nothing' \", n -> this.describeSObject(n));\n        String expected = \"Contact\";\n        String actual = analyzer.getFromObjectName();\n\n        assertEquals(expected, actual);\n    }", "signature": "void testGetFromObjectName()", "full_signature": "@Test public void testGetFromObjectName()", "class_method_signature": "SoqlQueryAnalyzerTest.testGetFromObjectName()", "testcase": true, "constructor": false, "invocations": ["describeSObject", "getFromObjectName", "assertEquals"]}, "focal_class": {"identifier": "SoqlQueryAnalyzer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String soql;", "modifier": "private", "type": "String", "declarator": "soql", "var_name": "soql"}, {"original_string": "private Function<String, DescribeSObjectResult> objectDescriptor;", "modifier": "private", "type": "Function<String, DescribeSObjectResult>", "declarator": "objectDescriptor", "var_name": "objectDescriptor"}, {"original_string": "private Map<String, DescribeSObjectResult> describedObjectsCache;", "modifier": "private", "type": "Map<String, DescribeSObjectResult>", "declarator": "describedObjectsCache", "var_name": "describedObjectsCache"}, {"original_string": "private SOQLQuery queryData;", "modifier": "private", "type": "SOQLQuery", "declarator": "queryData", "var_name": "queryData"}, {"original_string": "private List fieldDefinitions;", "modifier": "private", "type": "List", "declarator": "fieldDefinitions", "var_name": "fieldDefinitions"}], "methods": [{"identifier": "SoqlQueryAnalyzer", "parameters": "(String soql, Function<String, DescribeSObjectResult> objectDescriptor)", "modifiers": "public", "return": "", "signature": " SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor)", "full_signature": "public  SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor)", "class_method_signature": "SoqlQueryAnalyzer.SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor)", "testcase": false, "constructor": true}, {"identifier": "SoqlQueryAnalyzer", "parameters": "(String soql, Function<String, DescribeSObjectResult> objectDescriptor, Map<String, DescribeSObjectResult> describedObjectsCache)", "modifiers": "public", "return": "", "signature": " SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor, Map<String, DescribeSObjectResult> describedObjectsCache)", "full_signature": "public  SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor, Map<String, DescribeSObjectResult> describedObjectsCache)", "class_method_signature": "SoqlQueryAnalyzer.SoqlQueryAnalyzer(String soql, Function<String, DescribeSObjectResult> objectDescriptor, Map<String, DescribeSObjectResult> describedObjectsCache)", "testcase": false, "constructor": true}, {"identifier": "getFieldDefinitions", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getFieldDefinitions()", "full_signature": "public List getFieldDefinitions()", "class_method_signature": "SoqlQueryAnalyzer.getFieldDefinitions()", "testcase": false, "constructor": false}, {"identifier": "findField", "parameters": "(String name, DescribeSObjectResult objectDesc, Function<Field, String> nameFetcher)", "modifiers": "private", "return": "Field", "signature": "Field findField(String name, DescribeSObjectResult objectDesc, Function<Field, String> nameFetcher)", "full_signature": "private Field findField(String name, DescribeSObjectResult objectDesc, Function<Field, String> nameFetcher)", "class_method_signature": "SoqlQueryAnalyzer.findField(String name, DescribeSObjectResult objectDesc, Function<Field, String> nameFetcher)", "testcase": false, "constructor": false}, {"identifier": "describeObject", "parameters": "(String fromObjectName)", "modifiers": "private", "return": "DescribeSObjectResult", "signature": "DescribeSObjectResult describeObject(String fromObjectName)", "full_signature": "private DescribeSObjectResult describeObject(String fromObjectName)", "class_method_signature": "SoqlQueryAnalyzer.describeObject(String fromObjectName)", "testcase": false, "constructor": false}, {"identifier": "getFromObjectName", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getFromObjectName()", "full_signature": "protected String getFromObjectName()", "class_method_signature": "SoqlQueryAnalyzer.getFromObjectName()", "testcase": false, "constructor": false}, {"identifier": "getQueryData", "parameters": "()", "modifiers": "private", "return": "SOQLQuery", "signature": "SOQLQuery getQueryData()", "full_signature": "private SOQLQuery getQueryData()", "class_method_signature": "SoqlQueryAnalyzer.getQueryData()", "testcase": false, "constructor": false}], "file": "sf-jdbc-driver/src/main/java/com/ascendix/jdbc/salesforce/statement/SoqlQueryAnalyzer.java"}, "focal_method": {"identifier": "getFromObjectName", "parameters": "()", "modifiers": "protected", "return": "String", "body": "protected String getFromObjectName() {\n        return getQueryData().getFromClause().getMainObjectSpec().getObjectName();\n    }", "signature": "String getFromObjectName()", "full_signature": "protected String getFromObjectName()", "class_method_signature": "SoqlQueryAnalyzer.getFromObjectName()", "testcase": false, "constructor": false, "invocations": ["getObjectName", "getMainObjectSpec", "getFromClause", "getQueryData"]}, "repository": {"repo_id": 87432809, "url": "https://github.com/ascendix/salesforce-jdbc", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 19, "size": 41622, "license": "licensed"}}