{"test_class": {"identifier": "RestWorkItemHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final boolean httpClient43;", "modifier": "private final", "type": "boolean", "declarator": "httpClient43", "var_name": "httpClient43"}, {"original_string": "private String contentParamName;", "modifier": "private", "type": "String", "declarator": "contentParamName", "var_name": "contentParamName"}, {"original_string": "private final static String serverURL = \"http://localhost:9998/test\";", "modifier": "private final static", "type": "String", "declarator": "serverURL = \"http://localhost:9998/test\"", "var_name": "serverURL"}, {"original_string": "private static Server server;", "modifier": "private static", "type": "Server", "declarator": "server", "var_name": "server"}], "file": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java"}, "test_case": {"identifier": "testGETOperationWithXmlCharsetTrasformation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGETOperationWithXmlCharsetTrasformation() {\n        RESTWorkItemHandler handler = new RESTWorkItemHandler();\n\n        WorkItemImpl workItem = new WorkItemImpl();\n        workItem.setParameter(\"Url\",\n                              serverURL + \"/xml-charset\");\n        workItem.setParameter(\"Method\",\n                              \"GET\");\n        workItem.setParameter(\"ResultClass\",\n                              Person.class.getName());\n\n        WorkItemManager manager = new TestWorkItemManager();\n        handler.executeWorkItem(workItem,\n                                manager);\n\n        Map<String, Object> results = ((TestWorkItemManager) manager).getResults(workItem.getId());\n        Person result = (Person) results.get(PARAM_RESULT);\n        assertNotNull(\"result cannot be null\",\n                      result);\n        assertEquals(\"Person Xml\",\n                     result.getName());\n        int responseCode = (Integer) results.get(PARAM_STATUS);\n        assertNotNull(responseCode);\n        assertEquals(200,\n                     responseCode);\n        String responseMsg = (String) results.get(PARAM_STATUS_MSG);\n        assertNotNull(responseMsg);\n        assertEquals(\"request to endpoint \" + workItem.getParameter(\"Url\") + \" successfully completed OK\",\n                     responseMsg);\n    }", "signature": "void testGETOperationWithXmlCharsetTrasformation()", "full_signature": "@Test public void testGETOperationWithXmlCharsetTrasformation()", "class_method_signature": "RestWorkItemHandlerTest.testGETOperationWithXmlCharsetTrasformation()", "testcase": true, "constructor": false, "invocations": ["setParameter", "setParameter", "setParameter", "getName", "executeWorkItem", "getResults", "getId", "get", "assertNotNull", "assertEquals", "getName", "get", "assertNotNull", "assertEquals", "get", "assertNotNull", "assertEquals", "getParameter"]}, "focal_class": {"identifier": "RESTWorkItemHandler", "superclass": "extends AbstractLogOrThrowWorkItemHandler", "interfaces": "implements Cacheable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(RESTWorkItemHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RESTWorkItemHandler.class)", "var_name": "logger"}, {"original_string": "private static final int DEFAULT_TOTAL_POOL_CONNECTIONS = 500;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_TOTAL_POOL_CONNECTIONS = 500", "var_name": "DEFAULT_TOTAL_POOL_CONNECTIONS"}, {"original_string": "private static final int DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE = 50;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE = 50", "var_name": "DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE"}, {"original_string": "protected static final String USE_SYSTEM_PROPERTIES = \"org.kie.workitem.rest.useSystemProperties\";", "modifier": "protected static final", "type": "String", "declarator": "USE_SYSTEM_PROPERTIES = \"org.kie.workitem.rest.useSystemProperties\"", "var_name": "USE_SYSTEM_PROPERTIES"}, {"original_string": "public static final String PARAM_AUTH_TYPE = \"AuthType\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_AUTH_TYPE = \"AuthType\"", "var_name": "PARAM_AUTH_TYPE"}, {"original_string": "public static final String PARAM_CONNECT_TIMEOUT = \"ConnectTimeout\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_CONNECT_TIMEOUT = \"ConnectTimeout\"", "var_name": "PARAM_CONNECT_TIMEOUT"}, {"original_string": "public static final String PARAM_READ_TIMEOUT = \"ReadTimeout\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_READ_TIMEOUT = \"ReadTimeout\"", "var_name": "PARAM_READ_TIMEOUT"}, {"original_string": "public static final String PARAM_CONTENT_TYPE = \"ContentType\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_CONTENT_TYPE = \"ContentType\"", "var_name": "PARAM_CONTENT_TYPE"}, {"original_string": "public static final String PARAM_CONTENT_TYPE_CHARSET = \"ContentTypeCharset\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_CONTENT_TYPE_CHARSET = \"ContentTypeCharset\"", "var_name": "PARAM_CONTENT_TYPE_CHARSET"}, {"original_string": "public static final String PARAM_HEADERS = \"Headers\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_HEADERS = \"Headers\"", "var_name": "PARAM_HEADERS"}, {"original_string": "public static final String PARAM_CONTENT = \"Content\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_CONTENT = \"Content\"", "var_name": "PARAM_CONTENT"}, {"original_string": "public static final String PARAM_CONTENT_DATA = \"ContentData\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_CONTENT_DATA = \"ContentData\"", "var_name": "PARAM_CONTENT_DATA"}, {"original_string": "public static final String PARAM_USERNAME = \"Username\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_USERNAME = \"Username\"", "var_name": "PARAM_USERNAME"}, {"original_string": "public static final String PARAM_PASSWORD = \"Password\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_PASSWORD = \"Password\"", "var_name": "PARAM_PASSWORD"}, {"original_string": "public static final String PARAM_AUTHURL = \"AuthUrl\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_AUTHURL = \"AuthUrl\"", "var_name": "PARAM_AUTHURL"}, {"original_string": "public static final String PARAM_RESULT = \"Result\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_RESULT = \"Result\"", "var_name": "PARAM_RESULT"}, {"original_string": "public static final String PARAM_STATUS = \"Status\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_STATUS = \"Status\"", "var_name": "PARAM_STATUS"}, {"original_string": "public static final String PARAM_STATUS_MSG = \"StatusMsg\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_STATUS_MSG = \"StatusMsg\"", "var_name": "PARAM_STATUS_MSG"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private AuthenticationType type;", "modifier": "private", "type": "AuthenticationType", "declarator": "type", "var_name": "type"}, {"original_string": "private String authUrl;", "modifier": "private", "type": "String", "declarator": "authUrl", "var_name": "authUrl"}, {"original_string": "private boolean doCacheClient;", "modifier": "private", "type": "boolean", "declarator": "doCacheClient", "var_name": "doCacheClient"}, {"original_string": "private ClassLoader classLoader;", "modifier": "private", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "protected static PoolingHttpClientConnectionManager connectionManager;", "modifier": "protected static", "type": "PoolingHttpClientConnectionManager", "declarator": "connectionManager", "var_name": "connectionManager"}, {"original_string": "protected static CloseableHttpClient cachedClient;", "modifier": "protected static", "type": "CloseableHttpClient", "declarator": "cachedClient", "var_name": "cachedClient"}, {"original_string": "protected static boolean HTTP_CLIENT_API_43 = true;", "modifier": "protected static", "type": "boolean", "declarator": "HTTP_CLIENT_API_43 = true", "var_name": "HTTP_CLIENT_API_43"}], "methods": [{"identifier": "RESTWorkItemHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler()", "full_signature": "public  RESTWorkItemHandler()", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler()", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               String authUrl,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password)", "full_signature": "public  RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient)", "full_signature": "public  RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "full_signature": "public  RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String handlingProcessId,\n                               String handlingStrategy,\n                               String username,\n                               String password,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader, \n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader, \n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader, \n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader, \n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader,\n                               boolean doCacheClient, \n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient, \n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient, \n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient, \n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "RESTWorkItemHandler", "parameters": "(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "modifiers": "public", "return": "", "signature": " RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "full_signature": "public  RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "class_method_signature": "RESTWorkItemHandler.RESTWorkItemHandler(String username,\n                               String password,\n                               ClassLoader classLoader,\n                               boolean doCacheClient,\n                               int totalPoolConnections,\n                               int maxPoolConnectionsPerRoute,\n                               String handlingProcessId,\n                               String handlingStrategy)", "testcase": false, "constructor": true}, {"identifier": "logProtocol", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void logProtocol()", "full_signature": "private void logProtocol()", "class_method_signature": "RESTWorkItemHandler.logProtocol()", "testcase": false, "constructor": false}, {"identifier": "getAuthUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAuthUrl()", "full_signature": "public String getAuthUrl()", "class_method_signature": "RESTWorkItemHandler.getAuthUrl()", "testcase": false, "constructor": false}, {"identifier": "getDoCacheClient", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDoCacheClient()", "full_signature": "public boolean getDoCacheClient()", "class_method_signature": "RESTWorkItemHandler.getDoCacheClient()", "testcase": false, "constructor": false}, {"identifier": "executeWorkItem", "parameters": "(WorkItem workItem,\n                                WorkItemManager manager)", "modifiers": "public", "return": "void", "signature": "void executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "full_signature": "public void executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "class_method_signature": "RESTWorkItemHandler.executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "testcase": false, "constructor": false}, {"identifier": "getParamAsInt", "parameters": "(Object param)", "modifiers": "protected", "return": "Integer", "signature": "Integer getParamAsInt(Object param)", "full_signature": "protected Integer getParamAsInt(Object param)", "class_method_signature": "RESTWorkItemHandler.getParamAsInt(Object param)", "testcase": false, "constructor": false}, {"identifier": "setCharset", "parameters": "(RequestBuilder builder,\n                              String charset)", "modifiers": "protected", "return": "void", "signature": "void setCharset(RequestBuilder builder,\n                              String charset)", "full_signature": "protected void setCharset(RequestBuilder builder,\n                              String charset)", "class_method_signature": "RESTWorkItemHandler.setCharset(RequestBuilder builder,\n                              String charset)", "testcase": false, "constructor": false}, {"identifier": "addAcceptHeader", "parameters": "(RequestBuilder builder,\n                                   String value)", "modifiers": "protected", "return": "void", "signature": "void addAcceptHeader(RequestBuilder builder,\n                                   String value)", "full_signature": "protected void addAcceptHeader(RequestBuilder builder,\n                                   String value)", "class_method_signature": "RESTWorkItemHandler.addAcceptHeader(RequestBuilder builder,\n                                   String value)", "testcase": false, "constructor": false}, {"identifier": "setCharset", "parameters": "(HttpRequestBase theMethod,\n                              String charset)", "modifiers": "protected", "return": "void", "signature": "void setCharset(HttpRequestBase theMethod,\n                              String charset)", "full_signature": "protected void setCharset(HttpRequestBase theMethod,\n                              String charset)", "class_method_signature": "RESTWorkItemHandler.setCharset(HttpRequestBase theMethod,\n                              String charset)", "testcase": false, "constructor": false}, {"identifier": "addAcceptHeader", "parameters": "(HttpRequestBase theMethod,\n                                   String value)", "modifiers": "protected", "return": "void", "signature": "void addAcceptHeader(HttpRequestBase theMethod,\n                                   String value)", "full_signature": "protected void addAcceptHeader(HttpRequestBase theMethod,\n                                   String value)", "class_method_signature": "RESTWorkItemHandler.addAcceptHeader(HttpRequestBase theMethod,\n                                   String value)", "testcase": false, "constructor": false}, {"identifier": "addCustomHeaders", "parameters": "(String headers,\n            BiConsumer<String, String> consumer)", "modifiers": "protected", "return": "void", "signature": "void addCustomHeaders(String headers,\n            BiConsumer<String, String> consumer)", "full_signature": "protected void addCustomHeaders(String headers,\n            BiConsumer<String, String> consumer)", "class_method_signature": "RESTWorkItemHandler.addCustomHeaders(String headers,\n            BiConsumer<String, String> consumer)", "testcase": false, "constructor": false}, {"identifier": "setBody", "parameters": "(RequestBuilder builder,\n                           Map<String, Object> params)", "modifiers": "protected", "return": "void", "signature": "void setBody(RequestBuilder builder,\n                           Map<String, Object> params)", "full_signature": "protected void setBody(RequestBuilder builder,\n                           Map<String, Object> params)", "class_method_signature": "RESTWorkItemHandler.setBody(RequestBuilder builder,\n                           Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "setBody", "parameters": "(HttpRequestBase theMethod,\n                           Map<String, Object> params)", "modifiers": "protected", "return": "void", "signature": "void setBody(HttpRequestBase theMethod,\n                           Map<String, Object> params)", "full_signature": "protected void setBody(HttpRequestBase theMethod,\n                           Map<String, Object> params)", "class_method_signature": "RESTWorkItemHandler.setBody(HttpRequestBase theMethod,\n                           Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "postProcessResult", "parameters": "(String result,\n                                     String resultClass,\n                                     String contentType,\n                                     Map<String, Object> results)", "modifiers": "protected", "return": "void", "signature": "void postProcessResult(String result,\n                                     String resultClass,\n                                     String contentType,\n                                     Map<String, Object> results)", "full_signature": "protected void postProcessResult(String result,\n                                     String resultClass,\n                                     String contentType,\n                                     Map<String, Object> results)", "class_method_signature": "RESTWorkItemHandler.postProcessResult(String result,\n                                     String resultClass,\n                                     String contentType,\n                                     Map<String, Object> results)", "testcase": false, "constructor": false}, {"identifier": "transformRequest", "parameters": "(Object data,\n                                      String contentType)", "modifiers": "protected", "return": "String", "signature": "String transformRequest(Object data,\n                                      String contentType)", "full_signature": "protected String transformRequest(Object data,\n                                      String contentType)", "class_method_signature": "RESTWorkItemHandler.transformRequest(Object data,\n                                      String contentType)", "testcase": false, "constructor": false}, {"identifier": "transformResult", "parameters": "(Class<?> clazz,\n                                     String contentType,\n                                     String content)", "modifiers": "protected", "return": "Object", "signature": "Object transformResult(Class<?> clazz,\n                                     String contentType,\n                                     String content)", "full_signature": "protected Object transformResult(Class<?> clazz,\n                                     String contentType,\n                                     String content)", "class_method_signature": "RESTWorkItemHandler.transformResult(Class<?> clazz,\n                                     String contentType,\n                                     String content)", "testcase": false, "constructor": false}, {"identifier": "doRequestWithAuthorization", "parameters": "(HttpClient httpclient,\n                                                      Object method,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType authType)", "modifiers": "protected", "return": "HttpResponse", "signature": "HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      Object method,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType authType)", "full_signature": "protected HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      Object method,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType authType)", "class_method_signature": "RESTWorkItemHandler.doRequestWithAuthorization(HttpClient httpclient,\n                                                      Object method,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType authType)", "testcase": false, "constructor": false}, {"identifier": "doRequestWithAuthorization", "parameters": "(HttpClient httpclient,\n                                                      RequestBuilder requestBuilder,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "modifiers": "protected", "return": "HttpResponse", "signature": "HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      RequestBuilder requestBuilder,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "full_signature": "protected HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      RequestBuilder requestBuilder,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "class_method_signature": "RESTWorkItemHandler.doRequestWithAuthorization(HttpClient httpclient,\n                                                      RequestBuilder requestBuilder,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "testcase": false, "constructor": false}, {"identifier": "doRequestWithAuthorization", "parameters": "(HttpClient httpclient,\n                                                      HttpRequestBase httpMethod,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "modifiers": "protected", "return": "HttpResponse", "signature": "HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      HttpRequestBase httpMethod,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "full_signature": "protected HttpResponse doRequestWithAuthorization(HttpClient httpclient,\n                                                      HttpRequestBase httpMethod,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "class_method_signature": "RESTWorkItemHandler.doRequestWithAuthorization(HttpClient httpclient,\n                                                      HttpRequestBase httpMethod,\n                                                      Map<String, Object> params,\n                                                      AuthenticationType type)", "testcase": false, "constructor": false}, {"identifier": "abortWorkItem", "parameters": "(WorkItem workItem,\n                              WorkItemManager manager)", "modifiers": "public", "return": "void", "signature": "void abortWorkItem(WorkItem workItem,\n                              WorkItemManager manager)", "full_signature": "public void abortWorkItem(WorkItem workItem,\n                              WorkItemManager manager)", "class_method_signature": "RESTWorkItemHandler.abortWorkItem(WorkItem workItem,\n                              WorkItemManager manager)", "testcase": false, "constructor": false}, {"identifier": "getHttpClient", "parameters": "(Integer readTimeout,\n                                       Integer connectTimeout)", "modifiers": "protected", "return": "HttpClient", "signature": "HttpClient getHttpClient(Integer readTimeout,\n                                       Integer connectTimeout)", "full_signature": "protected HttpClient getHttpClient(Integer readTimeout,\n                                       Integer connectTimeout)", "class_method_signature": "RESTWorkItemHandler.getHttpClient(Integer readTimeout,\n                                       Integer connectTimeout)", "testcase": false, "constructor": false}, {"identifier": "getRoutePlanner", "parameters": "()", "modifiers": "private", "return": "HttpRoutePlanner", "signature": "HttpRoutePlanner getRoutePlanner()", "full_signature": "private HttpRoutePlanner getRoutePlanner()", "class_method_signature": "RESTWorkItemHandler.getRoutePlanner()", "testcase": false, "constructor": false}, {"identifier": "getNewPooledHttpClient", "parameters": "(Integer readTimeout,\n                                                         Integer connectTimeout)", "modifiers": "protected", "return": "CloseableHttpClient", "signature": "CloseableHttpClient getNewPooledHttpClient(Integer readTimeout,\n                                                         Integer connectTimeout)", "full_signature": "protected CloseableHttpClient getNewPooledHttpClient(Integer readTimeout,\n                                                         Integer connectTimeout)", "class_method_signature": "RESTWorkItemHandler.getNewPooledHttpClient(Integer readTimeout,\n                                                         Integer connectTimeout)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(HttpClient httpClient,\n                         Object httpMethod)", "modifiers": "protected", "return": "void", "signature": "void close(HttpClient httpClient,\n                         Object httpMethod)", "full_signature": "protected void close(HttpClient httpClient,\n                         Object httpMethod)", "class_method_signature": "RESTWorkItemHandler.close(HttpClient httpClient,\n                         Object httpMethod)", "testcase": false, "constructor": false}, {"identifier": "configureRequest", "parameters": "(String method,\n                                      String urlStr,\n                                      Map<String, Object> params,\n                                      String acceptHeaderValue,\n                                      String acceptCharset,\n                                      String httpHeaders)", "modifiers": "protected", "return": "Object", "signature": "Object configureRequest(String method,\n                                      String urlStr,\n                                      Map<String, Object> params,\n                                      String acceptHeaderValue,\n                                      String acceptCharset,\n                                      String httpHeaders)", "full_signature": "protected Object configureRequest(String method,\n                                      String urlStr,\n                                      Map<String, Object> params,\n                                      String acceptHeaderValue,\n                                      String acceptCharset,\n                                      String httpHeaders)", "class_method_signature": "RESTWorkItemHandler.configureRequest(String method,\n                                      String urlStr,\n                                      Map<String, Object> params,\n                                      String acceptHeaderValue,\n                                      String acceptCharset,\n                                      String httpHeaders)", "testcase": false, "constructor": false}, {"identifier": "getContentTypeAndCharset", "parameters": "(Map<String, Object> params)", "modifiers": "protected", "return": "String", "signature": "String getContentTypeAndCharset(Map<String, Object> params)", "full_signature": "protected String getContentTypeAndCharset(Map<String, Object> params)", "class_method_signature": "RESTWorkItemHandler.getContentTypeAndCharset(Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "RESTWorkItemHandler.close()", "testcase": false, "constructor": false}], "file": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java"}, "focal_method": {"identifier": "executeWorkItem", "parameters": "(WorkItem workItem,\n                                WorkItemManager manager)", "modifiers": "public", "return": "void", "body": "public void executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager) {\n        boolean handleException = false;\n        // extract required parameters\n        String urlStr = (String) workItem.getParameter(\"Url\");\n        String method = (String) workItem.getParameter(\"Method\");\n        String handleExceptionStr = (String) workItem.getParameter(\"HandleResponseErrors\");\n        String resultClass = (String) workItem.getParameter(\"ResultClass\");\n        String acceptHeader = (String) workItem.getParameter(\"AcceptHeader\");\n        String acceptCharset = (String) workItem.getParameter(\"AcceptCharset\");\n        String headers = (String) workItem.getParameter(PARAM_HEADERS);\n\n        if (urlStr == null) {\n            throw new IllegalArgumentException(\"Url is a required parameter\");\n        }\n        if (method == null || method.trim().length() == 0) {\n            method = \"GET\";\n        }\n        if (handleExceptionStr != null) {\n            handleException = Boolean.parseBoolean(handleExceptionStr);\n        }\n        Map<String, Object> params = workItem.getParameters();\n\n        // authentication type from parameters\n        AuthenticationType authType = type;\n        if (params.get(PARAM_AUTH_TYPE) != null) {\n            authType = AuthenticationType.valueOf((String) params.get(PARAM_AUTH_TYPE));\n        }\n\n        // optional timeout config parameters, defaulted to 60 seconds\n        Integer connectTimeout = getParamAsInt(params.get(PARAM_CONNECT_TIMEOUT));\n        if (connectTimeout == null) {\n            connectTimeout = 60000;\n        }\n        Integer readTimeout = getParamAsInt(params.get(PARAM_READ_TIMEOUT));\n        if (readTimeout == null) {\n            readTimeout = 60000;\n        }\n        if(headers == null) {\n            headers = \"\";\n        }\n\n        HttpClient httpClient = getHttpClient(readTimeout,\n                                              connectTimeout);\n\n        Object methodObject = configureRequest(method,\n                                               urlStr,\n                                               params,\n                                               acceptHeader,\n                                               acceptCharset,\n                                               headers);\n        try {\n            HttpResponse response = doRequestWithAuthorization(httpClient,\n                                                               methodObject,\n                                                               params,\n                                                               authType);\n            StatusLine statusLine = response.getStatusLine();\n            int responseCode = statusLine.getStatusCode();\n            Map<String, Object> results = new HashMap<String, Object>();\n            HttpEntity respEntity = response.getEntity();\n            String responseBody = null;\n            String contentType = null;\n            if (respEntity != null) {\n                responseBody = EntityUtils.toString(respEntity, acceptCharset);\n\n                if (respEntity.getContentType() != null) {\n                    contentType = respEntity.getContentType().getValue();\n                }\n            }\n            if (responseCode >= 200 && responseCode < 300) {\n                postProcessResult(responseBody,\n                                  resultClass,\n                                  contentType,\n                                  results);\n                results.put(PARAM_STATUS_MSG,\n                            \"request to endpoint \" + urlStr + \" successfully completed \" + statusLine.getReasonPhrase());\n            } else {\n                if (handleException) {\n                    handleException(new RESTServiceException(responseCode,\n                                                             responseBody,\n                                                             urlStr));\n                } else {\n                    logger.warn(\"Unsuccessful response from REST server (status: {}, endpoint: {}, response: {}\",\n                                responseCode,\n                                urlStr,\n                                responseBody);\n                    results.put(PARAM_STATUS_MSG,\n                                \"endpoint \" + urlStr + \" could not be reached: \" + responseBody);\n                }\n            }\n            results.put(PARAM_STATUS,\n                        responseCode);\n\n            // notify manager that work item has been completed\n            manager.completeWorkItem(workItem.getId(),\n                                     results);\n        } catch (Exception e) {\n            handleException(e);\n        } finally {\n            try {\n                close(httpClient,\n                      methodObject);\n            } catch (Exception e) {\n                handleException(e);\n            }\n        }\n    }", "signature": "void executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "full_signature": "public void executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "class_method_signature": "RESTWorkItemHandler.executeWorkItem(WorkItem workItem,\n                                WorkItemManager manager)", "testcase": false, "constructor": false, "invocations": ["getParameter", "getParameter", "getParameter", "getParameter", "getParameter", "getParameter", "getParameter", "length", "trim", "parseBoolean", "getParameters", "get", "valueOf", "get", "getParamAsInt", "get", "getParamAsInt", "get", "getHttpClient", "configureRequest", "doRequestWithAuthorization", "getStatusLine", "getStatusCode", "getEntity", "toString", "getContentType", "getValue", "getContentType", "postProcessResult", "put", "getReasonPhrase", "handleException", "warn", "put", "put", "completeWorkItem", "getId", "handleException", "close", "handleException"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}