{"test_class": {"identifier": "LongArraySeriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/series/LongArraySeriesTest.java"}, "test_case": {"identifier": "testGetLong", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLong() {\n        LongArraySeries s = new LongArraySeries(1, 2);\n        assertEquals(1, s.getLong(0));\n        assertEquals(2, s.getLong(1));\n    }", "signature": "void testGetLong()", "full_signature": "@Test public void testGetLong()", "class_method_signature": "LongArraySeriesTest.testGetLong()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLong", "assertEquals", "getLong"]}, "focal_class": {"identifier": "LongArraySeries", "superclass": "extends LongBaseSeries", "interfaces": "", "fields": [{"original_string": "private long[] data;", "modifier": "private", "type": "long[]", "declarator": "data", "var_name": "data"}, {"original_string": "private int offset;", "modifier": "private", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private int size;", "modifier": "private", "type": "int", "declarator": "size", "var_name": "size"}], "methods": [{"identifier": "LongArraySeries", "parameters": "(long... data)", "modifiers": "public", "return": "", "signature": " LongArraySeries(long... data)", "full_signature": "public  LongArraySeries(long... data)", "class_method_signature": "LongArraySeries.LongArraySeries(long... data)", "testcase": false, "constructor": true}, {"identifier": "LongArraySeries", "parameters": "(long[] data, int offset, int size)", "modifiers": "public", "return": "", "signature": " LongArraySeries(long[] data, int offset, int size)", "full_signature": "public  LongArraySeries(long[] data, int offset, int size)", "class_method_signature": "LongArraySeries.LongArraySeries(long[] data, int offset, int size)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "LongArraySeries.size()", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(int index)", "modifiers": "@Override public", "return": "long", "signature": "long getLong(int index)", "full_signature": "@Override public long getLong(int index)", "class_method_signature": "LongArraySeries.getLong(int index)", "testcase": false, "constructor": false}, {"identifier": "copyToLong", "parameters": "(long[] to, int fromOffset, int toOffset, int len)", "modifiers": "@Override public", "return": "void", "signature": "void copyToLong(long[] to, int fromOffset, int toOffset, int len)", "full_signature": "@Override public void copyToLong(long[] to, int fromOffset, int toOffset, int len)", "class_method_signature": "LongArraySeries.copyToLong(long[] to, int fromOffset, int toOffset, int len)", "testcase": false, "constructor": false}, {"identifier": "headLong", "parameters": "(int len)", "modifiers": "@Override public", "return": "LongSeries", "signature": "LongSeries headLong(int len)", "full_signature": "@Override public LongSeries headLong(int len)", "class_method_signature": "LongArraySeries.headLong(int len)", "testcase": false, "constructor": false}, {"identifier": "tailLong", "parameters": "(int len)", "modifiers": "@Override public", "return": "LongSeries", "signature": "LongSeries tailLong(int len)", "full_signature": "@Override public LongSeries tailLong(int len)", "class_method_signature": "LongArraySeries.tailLong(int len)", "testcase": false, "constructor": false}, {"identifier": "rangeOpenClosedLong", "parameters": "(int fromInclusive, int toExclusive)", "modifiers": "@Override public", "return": "LongSeries", "signature": "LongSeries rangeOpenClosedLong(int fromInclusive, int toExclusive)", "full_signature": "@Override public LongSeries rangeOpenClosedLong(int fromInclusive, int toExclusive)", "class_method_signature": "LongArraySeries.rangeOpenClosedLong(int fromInclusive, int toExclusive)", "testcase": false, "constructor": false}, {"identifier": "materializeLong", "parameters": "()", "modifiers": "@Override public", "return": "LongSeries", "signature": "LongSeries materializeLong()", "full_signature": "@Override public LongSeries materializeLong()", "class_method_signature": "LongArraySeries.materializeLong()", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long max()", "full_signature": "@Override public long max()", "class_method_signature": "LongArraySeries.max()", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long min()", "full_signature": "@Override public long min()", "class_method_signature": "LongArraySeries.min()", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long sum()", "full_signature": "@Override public long sum()", "class_method_signature": "LongArraySeries.sum()", "testcase": false, "constructor": false}, {"identifier": "average", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double average()", "full_signature": "@Override public double average()", "class_method_signature": "LongArraySeries.average()", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double median()", "full_signature": "@Override public double median()", "class_method_signature": "LongArraySeries.median()", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/series/LongArraySeries.java"}, "focal_method": {"identifier": "getLong", "parameters": "(int index)", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getLong(int index) {\n        if (index >= size) {\n            throw new ArrayIndexOutOfBoundsException(index);\n        }\n\n        return data[offset + index];\n    }", "signature": "long getLong(int index)", "full_signature": "@Override public long getLong(int index)", "class_method_signature": "LongArraySeries.getLong(int index)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}