{"test_class": {"identifier": "TestStandardFDExtensionManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Bundle httpBundle;", "modifier": "private", "type": "Bundle", "declarator": "httpBundle", "var_name": "httpBundle"}, {"original_string": "private Bundle systemBundle;", "modifier": "private", "type": "Bundle", "declarator": "systemBundle", "var_name": "systemBundle"}, {"original_string": "private ProcessorDefinition invokeHttpProcessor;", "modifier": "private", "type": "ProcessorDefinition", "declarator": "invokeHttpProcessor", "var_name": "invokeHttpProcessor"}, {"original_string": "private ProcessorDefinition dynamicPropsProcessor;", "modifier": "private", "type": "ProcessorDefinition", "declarator": "dynamicPropsProcessor", "var_name": "dynamicPropsProcessor"}, {"original_string": "private ControllerServiceDefinition sslContextService;", "modifier": "private", "type": "ControllerServiceDefinition", "declarator": "sslContextService", "var_name": "sslContextService"}, {"original_string": "private ControllerServiceDefinition dynamicPropsService;", "modifier": "private", "type": "ControllerServiceDefinition", "declarator": "dynamicPropsService", "var_name": "dynamicPropsService"}, {"original_string": "private AgentManifest agentManifest;", "modifier": "private", "type": "AgentManifest", "declarator": "agentManifest", "var_name": "agentManifest"}, {"original_string": "private FDExtensionManager extensionManager;", "modifier": "private", "type": "FDExtensionManager", "declarator": "extensionManager", "var_name": "extensionManager"}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/test/java/com/cloudera/cem/efm/service/extension/TestStandardFDExtensionManager.java"}, "test_case": {"identifier": "testGetProcessorPropertyDescriptorWhenExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetProcessorPropertyDescriptorWhenExists() {\n        final String propertyName = \"SSL Context Service\";\n\n        final org.apache.nifi.registry.flow.Bundle bundle = getRequestBundle(httpBundle);\n        final Optional<PropertyDescriptor> propertyDescriptor = extensionManager.getProcessorPropertyDescriptor(\n                invokeHttpProcessor.getType(), bundle, propertyName);\n        assertTrue(propertyDescriptor.isPresent());\n        assertEquals(propertyName, propertyDescriptor.get().getName());\n    }", "signature": "void testGetProcessorPropertyDescriptorWhenExists()", "full_signature": "@Test public void testGetProcessorPropertyDescriptorWhenExists()", "class_method_signature": "TestStandardFDExtensionManager.testGetProcessorPropertyDescriptorWhenExists()", "testcase": true, "constructor": false, "invocations": ["getRequestBundle", "getProcessorPropertyDescriptor", "getType", "assertTrue", "isPresent", "assertEquals", "getName", "get"]}, "focal_class": {"identifier": "StandardFDExtensionManager", "superclass": "", "interfaces": "implements FDExtensionManager", "fields": [{"original_string": "static final Logger LOGGER = LoggerFactory.getLogger(StandardFDExtensionManager.class);", "modifier": "static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StandardFDExtensionManager.class)", "var_name": "LOGGER"}, {"original_string": "private AgentManifest agentManifest;", "modifier": "private", "type": "AgentManifest", "declarator": "agentManifest", "var_name": "agentManifest"}, {"original_string": "private Set<FDComponentType> processors;", "modifier": "private", "type": "Set<FDComponentType>", "declarator": "processors", "var_name": "processors"}, {"original_string": "private Set<FDComponentType> controllerServices;", "modifier": "private", "type": "Set<FDComponentType>", "declarator": "controllerServices", "var_name": "controllerServices"}], "methods": [{"identifier": "StandardFDExtensionManager", "parameters": "(final AgentManifest agentManifest)", "modifiers": "public", "return": "", "signature": " StandardFDExtensionManager(final AgentManifest agentManifest)", "full_signature": "public  StandardFDExtensionManager(final AgentManifest agentManifest)", "class_method_signature": "StandardFDExtensionManager.StandardFDExtensionManager(final AgentManifest agentManifest)", "testcase": false, "constructor": true}, {"identifier": "getProcessorTypes", "parameters": "()", "modifiers": "@Override public", "return": "Set<FDComponentType>", "signature": "Set<FDComponentType> getProcessorTypes()", "full_signature": "@Override public Set<FDComponentType> getProcessorTypes()", "class_method_signature": "StandardFDExtensionManager.getProcessorTypes()", "testcase": false, "constructor": false}, {"identifier": "getProcessorDefinition", "parameters": "(final String type, final Bundle bundle)", "modifiers": "@Override public", "return": "ProcessorDefinition", "signature": "ProcessorDefinition getProcessorDefinition(final String type, final Bundle bundle)", "full_signature": "@Override public ProcessorDefinition getProcessorDefinition(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.getProcessorDefinition(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "createProcessor", "parameters": "(final String type, final Bundle bundle)", "modifiers": "@Override public", "return": "FDProcessor", "signature": "FDProcessor createProcessor(final String type, final Bundle bundle)", "full_signature": "@Override public FDProcessor createProcessor(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.createProcessor(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "getProcessorPropertyDescriptor", "parameters": "(final String type, final Bundle bundle, final String propertyName)", "modifiers": "@Override public", "return": "Optional<PropertyDescriptor>", "signature": "Optional<PropertyDescriptor> getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "full_signature": "@Override public Optional<PropertyDescriptor> getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDExtensionManager.getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "createDynamicProcessorPropertyDescriptor", "parameters": "(final String type, final Bundle bundle, final String propertyName)", "modifiers": "@Override public", "return": "PropertyDescriptor", "signature": "PropertyDescriptor createDynamicProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "full_signature": "@Override public PropertyDescriptor createDynamicProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDExtensionManager.createDynamicProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getControllerServiceTypes", "parameters": "()", "modifiers": "@Override public", "return": "Set<FDComponentType>", "signature": "Set<FDComponentType> getControllerServiceTypes()", "full_signature": "@Override public Set<FDComponentType> getControllerServiceTypes()", "class_method_signature": "StandardFDExtensionManager.getControllerServiceTypes()", "testcase": false, "constructor": false}, {"identifier": "getControllerServiceDefinition", "parameters": "(final String type, final Bundle bundle)", "modifiers": "@Override public", "return": "ControllerServiceDefinition", "signature": "ControllerServiceDefinition getControllerServiceDefinition(final String type, final Bundle bundle)", "full_signature": "@Override public ControllerServiceDefinition getControllerServiceDefinition(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.getControllerServiceDefinition(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "createControllerService", "parameters": "(final String type, final Bundle bundle)", "modifiers": "@Override public", "return": "FDControllerService", "signature": "FDControllerService createControllerService(final String type, final Bundle bundle)", "full_signature": "@Override public FDControllerService createControllerService(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.createControllerService(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "getControllerServicePropertyDescriptor", "parameters": "(final String type, final Bundle bundle, final String propertyName)", "modifiers": "@Override public", "return": "Optional<PropertyDescriptor>", "signature": "Optional<PropertyDescriptor> getControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "full_signature": "@Override public Optional<PropertyDescriptor> getControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDExtensionManager.getControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "createDynamicControllerServicePropertyDescriptor", "parameters": "(final String type, final Bundle bundle, final String propertyName)", "modifiers": "@Override public", "return": "PropertyDescriptor", "signature": "PropertyDescriptor createDynamicControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "full_signature": "@Override public PropertyDescriptor createDynamicControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDExtensionManager.createDynamicControllerServicePropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "locateManifestBundle", "parameters": "(String type, Bundle bundle)", "modifiers": "private", "return": "com.cloudera.cem.efm.model.extension.Bundle", "signature": "com.cloudera.cem.efm.model.extension.Bundle locateManifestBundle(String type, Bundle bundle)", "full_signature": "private com.cloudera.cem.efm.model.extension.Bundle locateManifestBundle(String type, Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.locateManifestBundle(String type, Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "locateManifestControllerService", "parameters": "(final String type, final Bundle bundle)", "modifiers": "private", "return": "ControllerServiceDefinition", "signature": "ControllerServiceDefinition locateManifestControllerService(final String type, final Bundle bundle)", "full_signature": "private ControllerServiceDefinition locateManifestControllerService(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.locateManifestControllerService(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "locateManifestProcessor", "parameters": "(final String type, final Bundle bundle)", "modifiers": "private", "return": "ProcessorDefinition", "signature": "ProcessorDefinition locateManifestProcessor(final String type, final Bundle bundle)", "full_signature": "private ProcessorDefinition locateManifestProcessor(final String type, final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.locateManifestProcessor(final String type, final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "createControllerService", "parameters": "(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "modifiers": "private", "return": "FDControllerService", "signature": "FDControllerService createControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "full_signature": "private FDControllerService createControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "class_method_signature": "StandardFDExtensionManager.createControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "testcase": false, "constructor": false}, {"identifier": "copyManifestControllerService", "parameters": "(final ControllerServiceDefinition manifestControllerService)", "modifiers": "private", "return": "ControllerServiceDefinition", "signature": "ControllerServiceDefinition copyManifestControllerService(final ControllerServiceDefinition manifestControllerService)", "full_signature": "private ControllerServiceDefinition copyManifestControllerService(final ControllerServiceDefinition manifestControllerService)", "class_method_signature": "StandardFDExtensionManager.copyManifestControllerService(final ControllerServiceDefinition manifestControllerService)", "testcase": false, "constructor": false}, {"identifier": "createVersionedControllerService", "parameters": "(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "modifiers": "private", "return": "VersionedControllerService", "signature": "VersionedControllerService createVersionedControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "full_signature": "private VersionedControllerService createVersionedControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "class_method_signature": "StandardFDExtensionManager.createVersionedControllerService(final String type, final Bundle bundle, final ControllerServiceDefinition manifestControllerService)", "testcase": false, "constructor": false}, {"identifier": "createProcessor", "parameters": "(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "modifiers": "private", "return": "FDProcessor", "signature": "FDProcessor createProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "full_signature": "private FDProcessor createProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "class_method_signature": "StandardFDExtensionManager.createProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "testcase": false, "constructor": false}, {"identifier": "createVersionedProcessor", "parameters": "(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "modifiers": "private", "return": "VersionedProcessor", "signature": "VersionedProcessor createVersionedProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "full_signature": "private VersionedProcessor createVersionedProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "class_method_signature": "StandardFDExtensionManager.createVersionedProcessor(final String type, final Bundle bundle, final ProcessorDefinition manifestProcessor)", "testcase": false, "constructor": false}, {"identifier": "createVersionedBundle", "parameters": "(final Bundle bundle)", "modifiers": "private", "return": "Bundle", "signature": "Bundle createVersionedBundle(final Bundle bundle)", "full_signature": "private Bundle createVersionedBundle(final Bundle bundle)", "class_method_signature": "StandardFDExtensionManager.createVersionedBundle(final Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "createVersionedPropertyDescriptor", "parameters": "(final PropertyDescriptor manifestDescriptor)", "modifiers": "private", "return": "VersionedPropertyDescriptor", "signature": "VersionedPropertyDescriptor createVersionedPropertyDescriptor(final PropertyDescriptor manifestDescriptor)", "full_signature": "private VersionedPropertyDescriptor createVersionedPropertyDescriptor(final PropertyDescriptor manifestDescriptor)", "class_method_signature": "StandardFDExtensionManager.createVersionedPropertyDescriptor(final PropertyDescriptor manifestDescriptor)", "testcase": false, "constructor": false}, {"identifier": "copyManifestProcessor", "parameters": "(final ProcessorDefinition manifestProcessor)", "modifiers": "private", "return": "ProcessorDefinition", "signature": "ProcessorDefinition copyManifestProcessor(final ProcessorDefinition manifestProcessor)", "full_signature": "private ProcessorDefinition copyManifestProcessor(final ProcessorDefinition manifestProcessor)", "class_method_signature": "StandardFDExtensionManager.copyManifestProcessor(final ProcessorDefinition manifestProcessor)", "testcase": false, "constructor": false}, {"identifier": "copyRelationship", "parameters": "(Relationship sourceRelationship)", "modifiers": "private", "return": "Relationship", "signature": "Relationship copyRelationship(Relationship sourceRelationship)", "full_signature": "private Relationship copyRelationship(Relationship sourceRelationship)", "class_method_signature": "StandardFDExtensionManager.copyRelationship(Relationship sourceRelationship)", "testcase": false, "constructor": false}, {"identifier": "copyBuildInfo", "parameters": "(BuildInfo manifestBuildInfo)", "modifiers": "private", "return": "BuildInfo", "signature": "BuildInfo copyBuildInfo(BuildInfo manifestBuildInfo)", "full_signature": "private BuildInfo copyBuildInfo(BuildInfo manifestBuildInfo)", "class_method_signature": "StandardFDExtensionManager.copyBuildInfo(BuildInfo manifestBuildInfo)", "testcase": false, "constructor": false}, {"identifier": "copyDefinedType", "parameters": "(final DefinedType sourceDefinedType)", "modifiers": "private", "return": "DefinedType", "signature": "DefinedType copyDefinedType(final DefinedType sourceDefinedType)", "full_signature": "private DefinedType copyDefinedType(final DefinedType sourceDefinedType)", "class_method_signature": "StandardFDExtensionManager.copyDefinedType(final DefinedType sourceDefinedType)", "testcase": false, "constructor": false}, {"identifier": "copyPropertyDescriptor", "parameters": "(final PropertyDescriptor sourceDescriptor)", "modifiers": "private", "return": "PropertyDescriptor", "signature": "PropertyDescriptor copyPropertyDescriptor(final PropertyDescriptor sourceDescriptor)", "full_signature": "private PropertyDescriptor copyPropertyDescriptor(final PropertyDescriptor sourceDescriptor)", "class_method_signature": "StandardFDExtensionManager.copyPropertyDescriptor(final PropertyDescriptor sourceDescriptor)", "testcase": false, "constructor": false}, {"identifier": "copyAllowableValue", "parameters": "(final PropertyAllowableValue sourceAllowableValue)", "modifiers": "private", "return": "PropertyAllowableValue", "signature": "PropertyAllowableValue copyAllowableValue(final PropertyAllowableValue sourceAllowableValue)", "full_signature": "private PropertyAllowableValue copyAllowableValue(final PropertyAllowableValue sourceAllowableValue)", "class_method_signature": "StandardFDExtensionManager.copyAllowableValue(final PropertyAllowableValue sourceAllowableValue)", "testcase": false, "constructor": false}, {"identifier": "copyDefinedTypeFields", "parameters": "(final DefinedType source, final DefinedType dest)", "modifiers": "private", "return": "void", "signature": "void copyDefinedTypeFields(final DefinedType source, final DefinedType dest)", "full_signature": "private void copyDefinedTypeFields(final DefinedType source, final DefinedType dest)", "class_method_signature": "StandardFDExtensionManager.copyDefinedTypeFields(final DefinedType source, final DefinedType dest)", "testcase": false, "constructor": false}, {"identifier": "copyExtensionComponentFields", "parameters": "(final ExtensionComponent source, final ExtensionComponent dest)", "modifiers": "private", "return": "void", "signature": "void copyExtensionComponentFields(final ExtensionComponent source, final ExtensionComponent dest)", "full_signature": "private void copyExtensionComponentFields(final ExtensionComponent source, final ExtensionComponent dest)", "class_method_signature": "StandardFDExtensionManager.copyExtensionComponentFields(final ExtensionComponent source, final ExtensionComponent dest)", "testcase": false, "constructor": false}, {"identifier": "createSummaries", "parameters": "(final AgentManifest agentManifest,\n                                                 final Function<ComponentManifest,List<? extends ExtensionComponent>> getComponents)", "modifiers": "private", "return": "Set<FDComponentType>", "signature": "Set<FDComponentType> createSummaries(final AgentManifest agentManifest,\n                                                 final Function<ComponentManifest,List<? extends ExtensionComponent>> getComponents)", "full_signature": "private Set<FDComponentType> createSummaries(final AgentManifest agentManifest,\n                                                 final Function<ComponentManifest,List<? extends ExtensionComponent>> getComponents)", "class_method_signature": "StandardFDExtensionManager.createSummaries(final AgentManifest agentManifest,\n                                                 final Function<ComponentManifest,List<? extends ExtensionComponent>> getComponents)", "testcase": false, "constructor": false}, {"identifier": "createComponentSummary", "parameters": "(final AgentManifest agentManifest,\n                                                   final com.cloudera.cem.efm.model.extension.Bundle bundle,\n                                                   final ExtensionComponent component)", "modifiers": "private", "return": "FDComponentType", "signature": "FDComponentType createComponentSummary(final AgentManifest agentManifest,\n                                                   final com.cloudera.cem.efm.model.extension.Bundle bundle,\n                                                   final ExtensionComponent component)", "full_signature": "private FDComponentType createComponentSummary(final AgentManifest agentManifest,\n                                                   final com.cloudera.cem.efm.model.extension.Bundle bundle,\n                                                   final ExtensionComponent component)", "class_method_signature": "StandardFDExtensionManager.createComponentSummary(final AgentManifest agentManifest,\n                                                   final com.cloudera.cem.efm.model.extension.Bundle bundle,\n                                                   final ExtensionComponent component)", "testcase": false, "constructor": false}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/main/java/com/cloudera/cem/efm/service/extension/StandardFDExtensionManager.java"}, "focal_method": {"identifier": "getProcessorPropertyDescriptor", "parameters": "(final String type, final Bundle bundle, final String propertyName)", "modifiers": "@Override public", "return": "Optional<PropertyDescriptor>", "body": "@Override\n    public Optional<PropertyDescriptor> getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName) {\n        final ProcessorDefinition manifestProcessor = locateManifestProcessor(type, bundle);\n\n        final Map<String,PropertyDescriptor> propertyDescriptors = manifestProcessor.getPropertyDescriptors();\n        if (propertyDescriptors == null || !propertyDescriptors.containsKey(propertyName)) {\n            return Optional.empty();\n        } else {\n            return Optional.of(propertyDescriptors.get(propertyName));\n        }\n    }", "signature": "Optional<PropertyDescriptor> getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "full_signature": "@Override public Optional<PropertyDescriptor> getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDExtensionManager.getProcessorPropertyDescriptor(final String type, final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false, "invocations": ["locateManifestProcessor", "getPropertyDescriptors", "containsKey", "empty", "of", "get"]}, "repository": {"repo_id": 181071001, "url": "https://github.com/hortonworks/efm", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 2003, "license": "licensed"}}