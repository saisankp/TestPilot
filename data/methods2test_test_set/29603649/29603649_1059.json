{"test_class": {"identifier": "SequenceXmlTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private JsonConverter jsonConverter;", "modifier": "@Mock\n    private", "type": "JsonConverter", "declarator": "jsonConverter", "var_name": "jsonConverter"}, {"original_string": "@Mock\n    private NeutralConverter nullConverter;", "modifier": "@Mock\n    private", "type": "NeutralConverter", "declarator": "nullConverter", "var_name": "nullConverter"}, {"original_string": "@Mock\n    private WilmaHttpEntityUtils httpEntityUtils;", "modifier": "@Mock\n    private", "type": "WilmaHttpEntityUtils", "declarator": "httpEntityUtils", "var_name": "httpEntityUtils"}, {"original_string": "@Mock\n    private MessageFactory messageFactory;", "modifier": "@Mock\n    private", "type": "MessageFactory", "declarator": "messageFactory", "var_name": "messageFactory"}, {"original_string": "@InjectMocks\n    private SequenceXmlTransformer underTest;", "modifier": "@InjectMocks\n    private", "type": "SequenceXmlTransformer", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private WilmaHttpRequest wilmaHttpRequest;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "wilmaHttpRequest", "var_name": "wilmaHttpRequest"}, {"original_string": "@Mock\n    private WilmaHttpResponse wilmaHttpResponse;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponse", "declarator": "wilmaHttpResponse", "var_name": "wilmaHttpResponse"}, {"original_string": "@Mock\n    private ParameterList parameterList;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "parameterList", "var_name": "parameterList"}, {"original_string": "@Mock\n    private RequestResponsePair requestResponsePair;", "modifier": "@Mock\n    private", "type": "RequestResponsePair", "declarator": "requestResponsePair", "var_name": "requestResponsePair"}, {"original_string": "@Mock\n    private Message messageRequest;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "messageRequest", "var_name": "messageRequest"}, {"original_string": "@Mock\n    private Message messageResponse;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "messageResponse", "var_name": "messageResponse"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/sequence/formatters/helper/SequenceXmlTransformerTest.java"}, "test_case": {"identifier": "testGetXmlConverterShouldReturnJsonConverter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetXmlConverterShouldReturnJsonConverter() {\n        //GIVEN\n        //WHEN\n        Converter result = underTest.getXmlConverter();\n        //THEN\n        assertEquals(nullConverter, result);\n    }", "signature": "void testGetXmlConverterShouldReturnJsonConverter()", "full_signature": "@Test public void testGetXmlConverterShouldReturnJsonConverter()", "class_method_signature": "SequenceXmlTransformerTest.testGetXmlConverterShouldReturnJsonConverter()", "testcase": true, "constructor": false, "invocations": ["getXmlConverter", "assertEquals"]}, "focal_class": {"identifier": "SequenceXmlTransformer", "superclass": "extends SequenceTransformer", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private JsonConverter jsonConverter;", "modifier": "@Autowired\n    private", "type": "JsonConverter", "declarator": "jsonConverter", "var_name": "jsonConverter"}, {"original_string": "@Autowired\n    private NeutralConverter neutralConverter;", "modifier": "@Autowired\n    private", "type": "NeutralConverter", "declarator": "neutralConverter", "var_name": "neutralConverter"}], "methods": [{"identifier": "getXmlConverter", "parameters": "()", "modifiers": "@Override protected", "return": "Converter", "signature": "Converter getXmlConverter()", "full_signature": "@Override protected Converter getXmlConverter()", "class_method_signature": "SequenceXmlTransformer.getXmlConverter()", "testcase": false, "constructor": false}, {"identifier": "getJsonConverter", "parameters": "()", "modifiers": "@Override protected", "return": "Converter", "signature": "Converter getJsonConverter()", "full_signature": "@Override protected Converter getJsonConverter()", "class_method_signature": "SequenceXmlTransformer.getJsonConverter()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/sequence/formatters/helper/SequenceXmlTransformer.java"}, "focal_method": {"identifier": "getXmlConverter", "parameters": "()", "modifiers": "@Override protected", "return": "Converter", "body": "@Override\n    protected Converter getXmlConverter() {\n        return neutralConverter;\n    }", "signature": "Converter getXmlConverter()", "full_signature": "@Override protected Converter getXmlConverter()", "class_method_signature": "SequenceXmlTransformer.getXmlConverter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}