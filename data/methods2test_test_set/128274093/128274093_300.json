{"test_class": {"identifier": "QueueDrainHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/internal/util/QueueDrainHelperTest.java"}, "test_case": {"identifier": "isCancelled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isCancelled() {\n        assertTrue(QueueDrainHelper.isCancelled(new BooleanSupplier() {\n            @Override\n            public boolean getAsBoolean() throws Exception {\n                throw new IOException();\n            }\n        }));\n    }", "signature": "void isCancelled()", "full_signature": "@Test public void isCancelled()", "class_method_signature": "QueueDrainHelperTest.isCancelled()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isCancelled"]}, "focal_class": {"identifier": "QueueDrainHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final long COMPLETED_MASK = 0x8000000000000000L;", "modifier": "static final", "type": "long", "declarator": "COMPLETED_MASK = 0x8000000000000000L", "var_name": "COMPLETED_MASK"}, {"original_string": "static final long REQUESTED_MASK = 0x7FFFFFFFFFFFFFFFL;", "modifier": "static final", "type": "long", "declarator": "REQUESTED_MASK = 0x7FFFFFFFFFFFFFFFL", "var_name": "REQUESTED_MASK"}], "methods": [{"identifier": "QueueDrainHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " QueueDrainHelper()", "full_signature": "private  QueueDrainHelper()", "class_method_signature": "QueueDrainHelper.QueueDrainHelper()", "testcase": false, "constructor": true}, {"identifier": "drainMaxLoop", "parameters": "(SimplePlainQueue<T> q, Subscriber<? super U> a, boolean delayError,\n            Disposable dispose, QueueDrain<T, U> qd)", "modifiers": "public static", "return": "void", "signature": "void drainMaxLoop(SimplePlainQueue<T> q, Subscriber<? super U> a, boolean delayError,\n            Disposable dispose, QueueDrain<T, U> qd)", "full_signature": "public static void drainMaxLoop(SimplePlainQueue<T> q, Subscriber<? super U> a, boolean delayError,\n            Disposable dispose, QueueDrain<T, U> qd)", "class_method_signature": "QueueDrainHelper.drainMaxLoop(SimplePlainQueue<T> q, Subscriber<? super U> a, boolean delayError,\n            Disposable dispose, QueueDrain<T, U> qd)", "testcase": false, "constructor": false}, {"identifier": "checkTerminated", "parameters": "(boolean d, boolean empty,\n            Subscriber<?> s, boolean delayError, SimpleQueue<?> q, QueueDrain<T, U> qd)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkTerminated(boolean d, boolean empty,\n            Subscriber<?> s, boolean delayError, SimpleQueue<?> q, QueueDrain<T, U> qd)", "full_signature": "public static boolean checkTerminated(boolean d, boolean empty,\n            Subscriber<?> s, boolean delayError, SimpleQueue<?> q, QueueDrain<T, U> qd)", "class_method_signature": "QueueDrainHelper.checkTerminated(boolean d, boolean empty,\n            Subscriber<?> s, boolean delayError, SimpleQueue<?> q, QueueDrain<T, U> qd)", "testcase": false, "constructor": false}, {"identifier": "drainLoop", "parameters": "(SimplePlainQueue<T> q, Observer<? super U> a, boolean delayError, Disposable dispose, ObservableQueueDrain<T, U> qd)", "modifiers": "public static", "return": "void", "signature": "void drainLoop(SimplePlainQueue<T> q, Observer<? super U> a, boolean delayError, Disposable dispose, ObservableQueueDrain<T, U> qd)", "full_signature": "public static void drainLoop(SimplePlainQueue<T> q, Observer<? super U> a, boolean delayError, Disposable dispose, ObservableQueueDrain<T, U> qd)", "class_method_signature": "QueueDrainHelper.drainLoop(SimplePlainQueue<T> q, Observer<? super U> a, boolean delayError, Disposable dispose, ObservableQueueDrain<T, U> qd)", "testcase": false, "constructor": false}, {"identifier": "checkTerminated", "parameters": "(boolean d, boolean empty,\n            Observer<?> s, boolean delayError, SimpleQueue<?> q, Disposable disposable, ObservableQueueDrain<T, U> qd)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkTerminated(boolean d, boolean empty,\n            Observer<?> s, boolean delayError, SimpleQueue<?> q, Disposable disposable, ObservableQueueDrain<T, U> qd)", "full_signature": "public static boolean checkTerminated(boolean d, boolean empty,\n            Observer<?> s, boolean delayError, SimpleQueue<?> q, Disposable disposable, ObservableQueueDrain<T, U> qd)", "class_method_signature": "QueueDrainHelper.checkTerminated(boolean d, boolean empty,\n            Observer<?> s, boolean delayError, SimpleQueue<?> q, Disposable disposable, ObservableQueueDrain<T, U> qd)", "testcase": false, "constructor": false}, {"identifier": "createQueue", "parameters": "(int capacityHint)", "modifiers": "public static", "return": "SimpleQueue<T>", "signature": "SimpleQueue<T> createQueue(int capacityHint)", "full_signature": "public static SimpleQueue<T> createQueue(int capacityHint)", "class_method_signature": "QueueDrainHelper.createQueue(int capacityHint)", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "(Subscription s, int prefetch)", "modifiers": "public static", "return": "void", "signature": "void request(Subscription s, int prefetch)", "full_signature": "public static void request(Subscription s, int prefetch)", "class_method_signature": "QueueDrainHelper.request(Subscription s, int prefetch)", "testcase": false, "constructor": false}, {"identifier": "postCompleteRequest", "parameters": "(long n,\n                                                  Subscriber<? super T> actual,\n                                                  Queue<T> queue,\n                                                  AtomicLong state,\n                                                  BooleanSupplier isCancelled)", "modifiers": "public static", "return": "boolean", "signature": "boolean postCompleteRequest(long n,\n                                                  Subscriber<? super T> actual,\n                                                  Queue<T> queue,\n                                                  AtomicLong state,\n                                                  BooleanSupplier isCancelled)", "full_signature": "public static boolean postCompleteRequest(long n,\n                                                  Subscriber<? super T> actual,\n                                                  Queue<T> queue,\n                                                  AtomicLong state,\n                                                  BooleanSupplier isCancelled)", "class_method_signature": "QueueDrainHelper.postCompleteRequest(long n,\n                                                  Subscriber<? super T> actual,\n                                                  Queue<T> queue,\n                                                  AtomicLong state,\n                                                  BooleanSupplier isCancelled)", "testcase": false, "constructor": false}, {"identifier": "isCancelled", "parameters": "(BooleanSupplier cancelled)", "modifiers": "static", "return": "boolean", "signature": "boolean isCancelled(BooleanSupplier cancelled)", "full_signature": "static boolean isCancelled(BooleanSupplier cancelled)", "class_method_signature": "QueueDrainHelper.isCancelled(BooleanSupplier cancelled)", "testcase": false, "constructor": false}, {"identifier": "postCompleteDrain", "parameters": "(long n,\n                                         Subscriber<? super T> actual,\n                                         Queue<T> queue,\n                                         AtomicLong state,\n                                         BooleanSupplier isCancelled)", "modifiers": "static", "return": "boolean", "signature": "boolean postCompleteDrain(long n,\n                                         Subscriber<? super T> actual,\n                                         Queue<T> queue,\n                                         AtomicLong state,\n                                         BooleanSupplier isCancelled)", "full_signature": "static boolean postCompleteDrain(long n,\n                                         Subscriber<? super T> actual,\n                                         Queue<T> queue,\n                                         AtomicLong state,\n                                         BooleanSupplier isCancelled)", "class_method_signature": "QueueDrainHelper.postCompleteDrain(long n,\n                                         Subscriber<? super T> actual,\n                                         Queue<T> queue,\n                                         AtomicLong state,\n                                         BooleanSupplier isCancelled)", "testcase": false, "constructor": false}, {"identifier": "postComplete", "parameters": "(Subscriber<? super T> actual,\n                                        Queue<T> queue,\n                                        AtomicLong state,\n                                        BooleanSupplier isCancelled)", "modifiers": "public static", "return": "void", "signature": "void postComplete(Subscriber<? super T> actual,\n                                        Queue<T> queue,\n                                        AtomicLong state,\n                                        BooleanSupplier isCancelled)", "full_signature": "public static void postComplete(Subscriber<? super T> actual,\n                                        Queue<T> queue,\n                                        AtomicLong state,\n                                        BooleanSupplier isCancelled)", "class_method_signature": "QueueDrainHelper.postComplete(Subscriber<? super T> actual,\n                                        Queue<T> queue,\n                                        AtomicLong state,\n                                        BooleanSupplier isCancelled)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/util/QueueDrainHelper.java"}, "focal_method": {"identifier": "isCancelled", "parameters": "(BooleanSupplier cancelled)", "modifiers": "static", "return": "boolean", "body": "static boolean isCancelled(BooleanSupplier cancelled) {\n        try {\n            return cancelled.getAsBoolean();\n        } catch (Throwable ex) {\n            Exceptions.throwIfFatal(ex);\n            return true;\n        }\n    }", "signature": "boolean isCancelled(BooleanSupplier cancelled)", "full_signature": "static boolean isCancelled(BooleanSupplier cancelled)", "class_method_signature": "QueueDrainHelper.isCancelled(BooleanSupplier cancelled)", "testcase": false, "constructor": false, "invocations": ["getAsBoolean", "throwIfFatal"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}