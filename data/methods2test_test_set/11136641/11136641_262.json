{"test_class": {"identifier": "LdapTemplateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_BASE_STRING = \"o=example.com\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_BASE_STRING = \"o=example.com\"", "var_name": "DEFAULT_BASE_STRING"}, {"original_string": "private ContextSource contextSourceMock;", "modifier": "private", "type": "ContextSource", "declarator": "contextSourceMock", "var_name": "contextSourceMock"}, {"original_string": "private DirContext dirContextMock;", "modifier": "private", "type": "DirContext", "declarator": "dirContextMock", "var_name": "dirContextMock"}, {"original_string": "private AttributesMapper attributesMapperMock;", "modifier": "private", "type": "AttributesMapper", "declarator": "attributesMapperMock", "var_name": "attributesMapperMock"}, {"original_string": "private NamingEnumeration namingEnumerationMock;", "modifier": "private", "type": "NamingEnumeration", "declarator": "namingEnumerationMock", "var_name": "namingEnumerationMock"}, {"original_string": "private Name nameMock;", "modifier": "private", "type": "Name", "declarator": "nameMock", "var_name": "nameMock"}, {"original_string": "private NameClassPairCallbackHandler handlerMock;", "modifier": "private", "type": "NameClassPairCallbackHandler", "declarator": "handlerMock", "var_name": "handlerMock"}, {"original_string": "private ContextMapper contextMapperMock;", "modifier": "private", "type": "ContextMapper", "declarator": "contextMapperMock", "var_name": "contextMapperMock"}, {"original_string": "private ContextExecutor contextExecutorMock;", "modifier": "private", "type": "ContextExecutor", "declarator": "contextExecutorMock", "var_name": "contextExecutorMock"}, {"original_string": "private SearchExecutor searchExecutorMock;", "modifier": "private", "type": "SearchExecutor", "declarator": "searchExecutorMock", "var_name": "searchExecutorMock"}, {"original_string": "private LdapTemplate tested;", "modifier": "private", "type": "LdapTemplate", "declarator": "tested", "var_name": "tested"}, {"original_string": "private DirContextProcessor dirContextProcessorMock;", "modifier": "private", "type": "DirContextProcessor", "declarator": "dirContextProcessorMock", "var_name": "dirContextProcessorMock"}, {"original_string": "private DirContextOperations dirContextOperationsMock;", "modifier": "private", "type": "DirContextOperations", "declarator": "dirContextOperationsMock", "var_name": "dirContextOperationsMock"}, {"original_string": "private DirContext authenticatedContextMock;", "modifier": "private", "type": "DirContext", "declarator": "authenticatedContextMock", "var_name": "authenticatedContextMock"}, {"original_string": "private AuthenticatedLdapEntryContextCallback entryContextCallbackMock;", "modifier": "private", "type": "AuthenticatedLdapEntryContextCallback", "declarator": "entryContextCallbackMock", "var_name": "entryContextCallbackMock"}, {"original_string": "private ObjectDirectoryMapper odmMock;", "modifier": "private", "type": "ObjectDirectoryMapper", "declarator": "odmMock", "var_name": "odmMock"}, {"original_string": "private LdapQuery query;", "modifier": "private", "type": "LdapQuery", "declarator": "query", "var_name": "query"}, {"original_string": "private AuthenticatedLdapEntryContextMapper authContextMapperMock;", "modifier": "private", "type": "AuthenticatedLdapEntryContextMapper", "declarator": "authContextMapperMock", "var_name": "authContextMapperMock"}], "file": "core/src/test/java/org/springframework/ldap/core/LdapTemplateTest.java"}, "test_case": {"identifier": "testSearch_PartialResult_IgnoreNotSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSearch_PartialResult_IgnoreNotSet() throws Exception {\n\t\texpectGetReadOnlyContext();\n\n\t\tjavax.naming.PartialResultException ex = new javax.naming.PartialResultException();\n\t\twhen(searchExecutorMock.executeSearch(dirContextMock)).thenThrow(ex);\n\n\t\ttry {\n\t\t\ttested.search(searchExecutorMock, handlerMock, dirContextProcessorMock);\n\t\t\tfail(\"PartialResultException expected\");\n\t\t}\n\t\tcatch (PartialResultException expected) {\n\t\t\tassertThat(true).isTrue();\n\t\t}\n\n        verify(dirContextProcessorMock).preProcess(dirContextMock);\n        verify(dirContextProcessorMock).postProcess(dirContextMock);\n        verify(dirContextMock).close();\n\t}", "signature": "void testSearch_PartialResult_IgnoreNotSet()", "full_signature": "@Test public void testSearch_PartialResult_IgnoreNotSet()", "class_method_signature": "LdapTemplateTest.testSearch_PartialResult_IgnoreNotSet()", "testcase": true, "constructor": false, "invocations": ["expectGetReadOnlyContext", "thenThrow", "when", "executeSearch", "search", "fail", "isTrue", "assertThat", "preProcess", "verify", "postProcess", "verify", "close", "verify"]}, "focal_class": {"identifier": "LdapTemplate", "superclass": "", "interfaces": "implements LdapOperations, InitializingBean", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(LdapTemplate.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(LdapTemplate.class)", "var_name": "LOG"}, {"original_string": "private static final boolean DONT_RETURN_OBJ_FLAG = false;", "modifier": "private static final", "type": "boolean", "declarator": "DONT_RETURN_OBJ_FLAG = false", "var_name": "DONT_RETURN_OBJ_FLAG"}, {"original_string": "private static final boolean RETURN_OBJ_FLAG = true;", "modifier": "private static final", "type": "boolean", "declarator": "RETURN_OBJ_FLAG = true", "var_name": "RETURN_OBJ_FLAG"}, {"original_string": "private static final String[] ALL_ATTRIBUTES = null;", "modifier": "private static final", "type": "String[]", "declarator": "ALL_ATTRIBUTES = null", "var_name": "ALL_ATTRIBUTES"}, {"original_string": "private ContextSource contextSource;", "modifier": "private", "type": "ContextSource", "declarator": "contextSource", "var_name": "contextSource"}, {"original_string": "private boolean ignorePartialResultException = false;", "modifier": "private", "type": "boolean", "declarator": "ignorePartialResultException = false", "var_name": "ignorePartialResultException"}, {"original_string": "private boolean ignoreNameNotFoundException = false;", "modifier": "private", "type": "boolean", "declarator": "ignoreNameNotFoundException = false", "var_name": "ignoreNameNotFoundException"}, {"original_string": "private boolean ignoreSizeLimitExceededException = true;", "modifier": "private", "type": "boolean", "declarator": "ignoreSizeLimitExceededException = true", "var_name": "ignoreSizeLimitExceededException"}, {"original_string": "private int defaultSearchScope = SearchControls.SUBTREE_SCOPE;", "modifier": "private", "type": "int", "declarator": "defaultSearchScope = SearchControls.SUBTREE_SCOPE", "var_name": "defaultSearchScope"}, {"original_string": "private int defaultTimeLimit = 0;", "modifier": "private", "type": "int", "declarator": "defaultTimeLimit = 0", "var_name": "defaultTimeLimit"}, {"original_string": "private int defaultCountLimit = 0;", "modifier": "private", "type": "int", "declarator": "defaultCountLimit = 0", "var_name": "defaultCountLimit"}, {"original_string": "private ObjectDirectoryMapper odm = new DefaultObjectDirectoryMapper();", "modifier": "private", "type": "ObjectDirectoryMapper", "declarator": "odm = new DefaultObjectDirectoryMapper()", "var_name": "odm"}], "methods": [{"identifier": "LdapTemplate", "parameters": "()", "modifiers": "public", "return": "", "signature": " LdapTemplate()", "full_signature": "public  LdapTemplate()", "class_method_signature": "LdapTemplate.LdapTemplate()", "testcase": false, "constructor": true}, {"identifier": "LdapTemplate", "parameters": "(ContextSource contextSource)", "modifiers": "public", "return": "", "signature": " LdapTemplate(ContextSource contextSource)", "full_signature": "public  LdapTemplate(ContextSource contextSource)", "class_method_signature": "LdapTemplate.LdapTemplate(ContextSource contextSource)", "testcase": false, "constructor": true}, {"identifier": "setContextSource", "parameters": "(ContextSource contextSource)", "modifiers": "public", "return": "void", "signature": "void setContextSource(ContextSource contextSource)", "full_signature": "public void setContextSource(ContextSource contextSource)", "class_method_signature": "LdapTemplate.setContextSource(ContextSource contextSource)", "testcase": false, "constructor": false}, {"identifier": "getObjectDirectoryMapper", "parameters": "()", "modifiers": "@Override public", "return": "ObjectDirectoryMapper", "signature": "ObjectDirectoryMapper getObjectDirectoryMapper()", "full_signature": "@Override public ObjectDirectoryMapper getObjectDirectoryMapper()", "class_method_signature": "LdapTemplate.getObjectDirectoryMapper()", "testcase": false, "constructor": false}, {"identifier": "setObjectDirectoryMapper", "parameters": "(ObjectDirectoryMapper odm)", "modifiers": "public", "return": "void", "signature": "void setObjectDirectoryMapper(ObjectDirectoryMapper odm)", "full_signature": "public void setObjectDirectoryMapper(ObjectDirectoryMapper odm)", "class_method_signature": "LdapTemplate.setObjectDirectoryMapper(ObjectDirectoryMapper odm)", "testcase": false, "constructor": false}, {"identifier": "getContextSource", "parameters": "()", "modifiers": "public", "return": "ContextSource", "signature": "ContextSource getContextSource()", "full_signature": "public ContextSource getContextSource()", "class_method_signature": "LdapTemplate.getContextSource()", "testcase": false, "constructor": false}, {"identifier": "setIgnoreNameNotFoundException", "parameters": "(boolean ignore)", "modifiers": "public", "return": "void", "signature": "void setIgnoreNameNotFoundException(boolean ignore)", "full_signature": "public void setIgnoreNameNotFoundException(boolean ignore)", "class_method_signature": "LdapTemplate.setIgnoreNameNotFoundException(boolean ignore)", "testcase": false, "constructor": false}, {"identifier": "setIgnorePartialResultException", "parameters": "(boolean ignore)", "modifiers": "public", "return": "void", "signature": "void setIgnorePartialResultException(boolean ignore)", "full_signature": "public void setIgnorePartialResultException(boolean ignore)", "class_method_signature": "LdapTemplate.setIgnorePartialResultException(boolean ignore)", "testcase": false, "constructor": false}, {"identifier": "setIgnoreSizeLimitExceededException", "parameters": "(boolean ignore)", "modifiers": "public", "return": "void", "signature": "void setIgnoreSizeLimitExceededException(boolean ignore)", "full_signature": "public void setIgnoreSizeLimitExceededException(boolean ignore)", "class_method_signature": "LdapTemplate.setIgnoreSizeLimitExceededException(boolean ignore)", "testcase": false, "constructor": false}, {"identifier": "setDefaultSearchScope", "parameters": "(int defaultSearchScope)", "modifiers": "public", "return": "void", "signature": "void setDefaultSearchScope(int defaultSearchScope)", "full_signature": "public void setDefaultSearchScope(int defaultSearchScope)", "class_method_signature": "LdapTemplate.setDefaultSearchScope(int defaultSearchScope)", "testcase": false, "constructor": false}, {"identifier": "setDefaultTimeLimit", "parameters": "(int defaultTimeLimit)", "modifiers": "public", "return": "void", "signature": "void setDefaultTimeLimit(int defaultTimeLimit)", "full_signature": "public void setDefaultTimeLimit(int defaultTimeLimit)", "class_method_signature": "LdapTemplate.setDefaultTimeLimit(int defaultTimeLimit)", "testcase": false, "constructor": false}, {"identifier": "setDefaultCountLimit", "parameters": "(int defaultCountLimit)", "modifiers": "public", "return": "void", "signature": "void setDefaultCountLimit(int defaultCountLimit)", "full_signature": "public void setDefaultCountLimit(int defaultCountLimit)", "class_method_signature": "LdapTemplate.setDefaultCountLimit(int defaultCountLimit)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(String base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(String base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(String base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "full_signature": "@Override public void search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(final Name base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "full_signature": "@Override public void search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(final String base, final String filter, final SearchControls controls,\n\t\t\tNameClassPairCallbackHandler handler, DirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void search(SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor)", "full_signature": "@Override public void search(SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(SearchExecutor se, NameClassPairCallbackHandler handler, DirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(SearchExecutor se, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(SearchExecutor se, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(SearchExecutor se, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(SearchExecutor se, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(Name base, String filter, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(Name base, String filter, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(Name base, String filter, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void search(String base, String filter, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(String base, String filter, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(String base, String filter, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, int searchScope, String[] attrs, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, int searchScope, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, int searchScope, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, int searchScope, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, int searchScope, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, int searchScope, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, int searchScope, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, int searchScope, String[] attrs, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, int searchScope, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, int searchScope, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, int searchScope, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, int searchScope, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, int searchScope, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, int searchScope, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, SearchControls controls, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, SearchControls controls, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, SearchControls controls, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, SearchControls controls, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, SearchControls controls, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "full_signature": "@Override public List<T> search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(String base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "full_signature": "@Override public List<T> search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(Name base, String filter, SearchControls controls, AttributesMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(String base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "full_signature": "@Override public List<T> search(String base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(String base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Name base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "full_signature": "@Override public List<T> search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "class_method_signature": "LdapTemplate.search(Name base, String filter, SearchControls controls, ContextMapper<T> mapper,\n\t\t\tDirContextProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(final String base, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void list(final String base, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void list(final String base, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.list(final String base, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(final Name base, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void list(final Name base, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void list(final Name base, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.list(final Name base, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(String base, NameClassPairMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> list(String base, NameClassPairMapper<T> mapper)", "full_signature": "@Override public List<T> list(String base, NameClassPairMapper<T> mapper)", "class_method_signature": "LdapTemplate.list(String base, NameClassPairMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(Name base, NameClassPairMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> list(Name base, NameClassPairMapper<T> mapper)", "full_signature": "@Override public List<T> list(Name base, NameClassPairMapper<T> mapper)", "class_method_signature": "LdapTemplate.list(Name base, NameClassPairMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(final Name base)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> list(final Name base)", "full_signature": "@Override public List<String> list(final Name base)", "class_method_signature": "LdapTemplate.list(final Name base)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(final String base)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> list(final String base)", "full_signature": "@Override public List<String> list(final String base)", "class_method_signature": "LdapTemplate.list(final String base)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(final String base, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void listBindings(final String base, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void listBindings(final String base, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.listBindings(final String base, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(final Name base, NameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void listBindings(final Name base, NameClassPairCallbackHandler handler)", "full_signature": "@Override public void listBindings(final Name base, NameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.listBindings(final Name base, NameClassPairCallbackHandler handler)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(String base, NameClassPairMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> listBindings(String base, NameClassPairMapper<T> mapper)", "full_signature": "@Override public List<T> listBindings(String base, NameClassPairMapper<T> mapper)", "class_method_signature": "LdapTemplate.listBindings(String base, NameClassPairMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(Name base, NameClassPairMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> listBindings(Name base, NameClassPairMapper<T> mapper)", "full_signature": "@Override public List<T> listBindings(Name base, NameClassPairMapper<T> mapper)", "class_method_signature": "LdapTemplate.listBindings(Name base, NameClassPairMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(final String base)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listBindings(final String base)", "full_signature": "@Override public List<String> listBindings(final String base)", "class_method_signature": "LdapTemplate.listBindings(final String base)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(final Name base)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listBindings(final Name base)", "full_signature": "@Override public List<String> listBindings(final Name base)", "class_method_signature": "LdapTemplate.listBindings(final Name base)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(String base, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> listBindings(String base, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> listBindings(String base, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.listBindings(String base, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "listBindings", "parameters": "(Name base, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> listBindings(Name base, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> listBindings(Name base, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.listBindings(Name base, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "executeReadOnly", "parameters": "(ContextExecutor<T> ce)", "modifiers": "@Override public", "return": "T", "signature": "T executeReadOnly(ContextExecutor<T> ce)", "full_signature": "@Override public T executeReadOnly(ContextExecutor<T> ce)", "class_method_signature": "LdapTemplate.executeReadOnly(ContextExecutor<T> ce)", "testcase": false, "constructor": false}, {"identifier": "executeReadWrite", "parameters": "(ContextExecutor<T> ce)", "modifiers": "@Override public", "return": "T", "signature": "T executeReadWrite(ContextExecutor<T> ce)", "full_signature": "@Override public T executeReadWrite(ContextExecutor<T> ce)", "class_method_signature": "LdapTemplate.executeReadWrite(ContextExecutor<T> ce)", "testcase": false, "constructor": false}, {"identifier": "executeWithContext", "parameters": "(ContextExecutor<T> ce, DirContext ctx)", "modifiers": "private", "return": "T", "signature": "T executeWithContext(ContextExecutor<T> ce, DirContext ctx)", "full_signature": "private T executeWithContext(ContextExecutor<T> ce, DirContext ctx)", "class_method_signature": "LdapTemplate.executeWithContext(ContextExecutor<T> ce, DirContext ctx)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final Name dn)", "modifiers": "@Override public", "return": "Object", "signature": "Object lookup(final Name dn)", "full_signature": "@Override public Object lookup(final Name dn)", "class_method_signature": "LdapTemplate.lookup(final Name dn)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String dn)", "modifiers": "@Override public", "return": "Object", "signature": "Object lookup(final String dn)", "full_signature": "@Override public Object lookup(final String dn)", "class_method_signature": "LdapTemplate.lookup(final String dn)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final Name dn, final AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final Name dn, final AttributesMapper<T> mapper)", "full_signature": "@Override public T lookup(final Name dn, final AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final Name dn, final AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String dn, final AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final String dn, final AttributesMapper<T> mapper)", "full_signature": "@Override public T lookup(final String dn, final AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final String dn, final AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final Name dn, final ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final Name dn, final ContextMapper<T> mapper)", "full_signature": "@Override public T lookup(final Name dn, final ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final Name dn, final ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String dn, final ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final String dn, final ContextMapper<T> mapper)", "full_signature": "@Override public T lookup(final String dn, final ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final String dn, final ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final Name dn, final String[] attributes, final AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final Name dn, final String[] attributes, final AttributesMapper<T> mapper)", "full_signature": "@Override public T lookup(final Name dn, final String[] attributes, final AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final Name dn, final String[] attributes, final AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String dn, final String[] attributes, final AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final String dn, final String[] attributes, final AttributesMapper<T> mapper)", "full_signature": "@Override public T lookup(final String dn, final String[] attributes, final AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final String dn, final String[] attributes, final AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final Name dn, final String[] attributes, final ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final Name dn, final String[] attributes, final ContextMapper<T> mapper)", "full_signature": "@Override public T lookup(final Name dn, final String[] attributes, final ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final Name dn, final String[] attributes, final ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String dn, final String[] attributes, final ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T lookup(final String dn, final String[] attributes, final ContextMapper<T> mapper)", "full_signature": "@Override public T lookup(final String dn, final String[] attributes, final ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.lookup(final String dn, final String[] attributes, final ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "modifyAttributes", "parameters": "(final Name dn, final ModificationItem[] mods)", "modifiers": "@Override public", "return": "void", "signature": "void modifyAttributes(final Name dn, final ModificationItem[] mods)", "full_signature": "@Override public void modifyAttributes(final Name dn, final ModificationItem[] mods)", "class_method_signature": "LdapTemplate.modifyAttributes(final Name dn, final ModificationItem[] mods)", "testcase": false, "constructor": false}, {"identifier": "modifyAttributes", "parameters": "(final String dn, final ModificationItem[] mods)", "modifiers": "@Override public", "return": "void", "signature": "void modifyAttributes(final String dn, final ModificationItem[] mods)", "full_signature": "@Override public void modifyAttributes(final String dn, final ModificationItem[] mods)", "class_method_signature": "LdapTemplate.modifyAttributes(final String dn, final ModificationItem[] mods)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(final Name dn, final Object obj, final Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void bind(final Name dn, final Object obj, final Attributes attributes)", "full_signature": "@Override public void bind(final Name dn, final Object obj, final Attributes attributes)", "class_method_signature": "LdapTemplate.bind(final Name dn, final Object obj, final Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(final String dn, final Object obj, final Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void bind(final String dn, final Object obj, final Attributes attributes)", "full_signature": "@Override public void bind(final String dn, final Object obj, final Attributes attributes)", "class_method_signature": "LdapTemplate.bind(final String dn, final Object obj, final Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "unbind", "parameters": "(final Name dn)", "modifiers": "@Override public", "return": "void", "signature": "void unbind(final Name dn)", "full_signature": "@Override public void unbind(final Name dn)", "class_method_signature": "LdapTemplate.unbind(final Name dn)", "testcase": false, "constructor": false}, {"identifier": "unbind", "parameters": "(final String dn)", "modifiers": "@Override public", "return": "void", "signature": "void unbind(final String dn)", "full_signature": "@Override public void unbind(final String dn)", "class_method_signature": "LdapTemplate.unbind(final String dn)", "testcase": false, "constructor": false}, {"identifier": "unbind", "parameters": "(final Name dn, boolean recursive)", "modifiers": "@Override public", "return": "void", "signature": "void unbind(final Name dn, boolean recursive)", "full_signature": "@Override public void unbind(final Name dn, boolean recursive)", "class_method_signature": "LdapTemplate.unbind(final Name dn, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "unbind", "parameters": "(final String dn, boolean recursive)", "modifiers": "@Override public", "return": "void", "signature": "void unbind(final String dn, boolean recursive)", "full_signature": "@Override public void unbind(final String dn, boolean recursive)", "class_method_signature": "LdapTemplate.unbind(final String dn, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "doUnbind", "parameters": "(final Name dn)", "modifiers": "private", "return": "void", "signature": "void doUnbind(final Name dn)", "full_signature": "private void doUnbind(final Name dn)", "class_method_signature": "LdapTemplate.doUnbind(final Name dn)", "testcase": false, "constructor": false}, {"identifier": "doUnbind", "parameters": "(final String dn)", "modifiers": "private", "return": "void", "signature": "void doUnbind(final String dn)", "full_signature": "private void doUnbind(final String dn)", "class_method_signature": "LdapTemplate.doUnbind(final String dn)", "testcase": false, "constructor": false}, {"identifier": "doUnbindRecursively", "parameters": "(final Name dn)", "modifiers": "private", "return": "void", "signature": "void doUnbindRecursively(final Name dn)", "full_signature": "private void doUnbindRecursively(final Name dn)", "class_method_signature": "LdapTemplate.doUnbindRecursively(final Name dn)", "testcase": false, "constructor": false}, {"identifier": "doUnbindRecursively", "parameters": "(final String dn)", "modifiers": "private", "return": "void", "signature": "void doUnbindRecursively(final String dn)", "full_signature": "private void doUnbindRecursively(final String dn)", "class_method_signature": "LdapTemplate.doUnbindRecursively(final String dn)", "testcase": false, "constructor": false}, {"identifier": "deleteRecursively", "parameters": "(DirContext ctx, Name name)", "modifiers": "protected", "return": "void", "signature": "void deleteRecursively(DirContext ctx, Name name)", "full_signature": "protected void deleteRecursively(DirContext ctx, Name name)", "class_method_signature": "LdapTemplate.deleteRecursively(DirContext ctx, Name name)", "testcase": false, "constructor": false}, {"identifier": "rebind", "parameters": "(final Name dn, final Object obj, final Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void rebind(final Name dn, final Object obj, final Attributes attributes)", "full_signature": "@Override public void rebind(final Name dn, final Object obj, final Attributes attributes)", "class_method_signature": "LdapTemplate.rebind(final Name dn, final Object obj, final Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "rebind", "parameters": "(final String dn, final Object obj, final Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void rebind(final String dn, final Object obj, final Attributes attributes)", "full_signature": "@Override public void rebind(final String dn, final Object obj, final Attributes attributes)", "class_method_signature": "LdapTemplate.rebind(final String dn, final Object obj, final Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(final Name oldDn, final Name newDn)", "modifiers": "@Override public", "return": "void", "signature": "void rename(final Name oldDn, final Name newDn)", "full_signature": "@Override public void rename(final Name oldDn, final Name newDn)", "class_method_signature": "LdapTemplate.rename(final Name oldDn, final Name newDn)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(final String oldDn, final String newDn)", "modifiers": "@Override public", "return": "void", "signature": "void rename(final String oldDn, final String newDn)", "full_signature": "@Override public void rename(final String oldDn, final String newDn)", "class_method_signature": "LdapTemplate.rename(final String oldDn, final String newDn)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "LdapTemplate.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "closeContextAndNamingEnumeration", "parameters": "(DirContext ctx, NamingEnumeration results)", "modifiers": "private", "return": "void", "signature": "void closeContextAndNamingEnumeration(DirContext ctx, NamingEnumeration results)", "full_signature": "private void closeContextAndNamingEnumeration(DirContext ctx, NamingEnumeration results)", "class_method_signature": "LdapTemplate.closeContextAndNamingEnumeration(DirContext ctx, NamingEnumeration results)", "testcase": false, "constructor": false}, {"identifier": "closeContext", "parameters": "(DirContext ctx)", "modifiers": "private", "return": "void", "signature": "void closeContext(DirContext ctx)", "full_signature": "private void closeContext(DirContext ctx)", "class_method_signature": "LdapTemplate.closeContext(DirContext ctx)", "testcase": false, "constructor": false}, {"identifier": "closeNamingEnumeration", "parameters": "(NamingEnumeration results)", "modifiers": "private", "return": "void", "signature": "void closeNamingEnumeration(NamingEnumeration results)", "full_signature": "private void closeNamingEnumeration(NamingEnumeration results)", "class_method_signature": "LdapTemplate.closeNamingEnumeration(NamingEnumeration results)", "testcase": false, "constructor": false}, {"identifier": "getDefaultSearchControls", "parameters": "(int searchScope, boolean returningObjFlag, String[] attrs)", "modifiers": "private", "return": "SearchControls", "signature": "SearchControls getDefaultSearchControls(int searchScope, boolean returningObjFlag, String[] attrs)", "full_signature": "private SearchControls getDefaultSearchControls(int searchScope, boolean returningObjFlag, String[] attrs)", "class_method_signature": "LdapTemplate.getDefaultSearchControls(int searchScope, boolean returningObjFlag, String[] attrs)", "testcase": false, "constructor": false}, {"identifier": "assureReturnObjFlagSet", "parameters": "(SearchControls controls)", "modifiers": "private", "return": "void", "signature": "void assureReturnObjFlagSet(SearchControls controls)", "full_signature": "private void assureReturnObjFlagSet(SearchControls controls)", "class_method_signature": "LdapTemplate.assureReturnObjFlagSet(SearchControls controls)", "testcase": false, "constructor": false}, {"identifier": "lookupContext", "parameters": "(Name dn)", "modifiers": "@Override public", "return": "DirContextOperations", "signature": "DirContextOperations lookupContext(Name dn)", "full_signature": "@Override public DirContextOperations lookupContext(Name dn)", "class_method_signature": "LdapTemplate.lookupContext(Name dn)", "testcase": false, "constructor": false}, {"identifier": "lookupContext", "parameters": "(String dn)", "modifiers": "@Override public", "return": "DirContextOperations", "signature": "DirContextOperations lookupContext(String dn)", "full_signature": "@Override public DirContextOperations lookupContext(String dn)", "class_method_signature": "LdapTemplate.lookupContext(String dn)", "testcase": false, "constructor": false}, {"identifier": "modifyAttributes", "parameters": "(DirContextOperations ctx)", "modifiers": "@Override public", "return": "void", "signature": "void modifyAttributes(DirContextOperations ctx)", "full_signature": "@Override public void modifyAttributes(DirContextOperations ctx)", "class_method_signature": "LdapTemplate.modifyAttributes(DirContextOperations ctx)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(DirContextOperations ctx)", "modifiers": "@Override public", "return": "void", "signature": "void bind(DirContextOperations ctx)", "full_signature": "@Override public void bind(DirContextOperations ctx)", "class_method_signature": "LdapTemplate.bind(DirContextOperations ctx)", "testcase": false, "constructor": false}, {"identifier": "rebind", "parameters": "(DirContextOperations ctx)", "modifiers": "@Override public", "return": "void", "signature": "void rebind(DirContextOperations ctx)", "full_signature": "@Override public void rebind(DirContextOperations ctx)", "class_method_signature": "LdapTemplate.rebind(DirContextOperations ctx)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(Name base, String filter, String password)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(Name base, String filter, String password)", "full_signature": "@Override public boolean authenticate(Name base, String filter, String password)", "class_method_signature": "LdapTemplate.authenticate(Name base, String filter, String password)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String base, String filter, String password)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(String base, String filter, String password)", "full_signature": "@Override public boolean authenticate(String base, String filter, String password)", "class_method_signature": "LdapTemplate.authenticate(String base, String filter, String password)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String base, String filter, String password,\n\t\t\tAuthenticatedLdapEntryContextCallback callback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(String base, String filter, String password,\n\t\t\tAuthenticatedLdapEntryContextCallback callback)", "full_signature": "@Override public boolean authenticate(String base, String filter, String password,\n\t\t\tAuthenticatedLdapEntryContextCallback callback)", "class_method_signature": "LdapTemplate.authenticate(String base, String filter, String password,\n\t\t\tAuthenticatedLdapEntryContextCallback callback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback)", "full_signature": "@Override public boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback)", "class_method_signature": "LdapTemplate.authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String base, String filter, String password,\n\t\t\tAuthenticationErrorCallback errorCallback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(String base, String filter, String password,\n\t\t\tAuthenticationErrorCallback errorCallback)", "full_signature": "@Override public boolean authenticate(String base, String filter, String password,\n\t\t\tAuthenticationErrorCallback errorCallback)", "class_method_signature": "LdapTemplate.authenticate(String base, String filter, String password,\n\t\t\tAuthenticationErrorCallback errorCallback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(Name base, String filter, String password,\n\t\t\tfinal AuthenticationErrorCallback errorCallback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticationErrorCallback errorCallback)", "full_signature": "@Override public boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticationErrorCallback errorCallback)", "class_method_signature": "LdapTemplate.authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticationErrorCallback errorCallback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(String base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "full_signature": "@Override public boolean authenticate(String base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "class_method_signature": "LdapTemplate.authenticate(String base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "full_signature": "@Override public boolean authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "class_method_signature": "LdapTemplate.authenticate(Name base, String filter, String password,\n\t\t\tfinal AuthenticatedLdapEntryContextCallback callback, final AuthenticationErrorCallback errorCallback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(Name base,\n                                String filter,\n                                String password,\n                                SearchControls searchControls,\n                                final AuthenticatedLdapEntryContextCallback callback,\n                                final AuthenticationErrorCallback errorCallback)", "modifiers": "private", "return": "AuthenticationStatus", "signature": "AuthenticationStatus authenticate(Name base,\n                                String filter,\n                                String password,\n                                SearchControls searchControls,\n                                final AuthenticatedLdapEntryContextCallback callback,\n                                final AuthenticationErrorCallback errorCallback)", "full_signature": "private AuthenticationStatus authenticate(Name base,\n                                String filter,\n                                String password,\n                                SearchControls searchControls,\n                                final AuthenticatedLdapEntryContextCallback callback,\n                                final AuthenticationErrorCallback errorCallback)", "class_method_signature": "LdapTemplate.authenticate(Name base,\n                                String filter,\n                                String password,\n                                SearchControls searchControls,\n                                final AuthenticatedLdapEntryContextCallback callback,\n                                final AuthenticationErrorCallback errorCallback)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(LdapQuery query, String password, AuthenticatedLdapEntryContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T authenticate(LdapQuery query, String password, AuthenticatedLdapEntryContextMapper<T> mapper)", "full_signature": "@Override public T authenticate(LdapQuery query, String password, AuthenticatedLdapEntryContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.authenticate(LdapQuery query, String password, AuthenticatedLdapEntryContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(LdapQuery query, String password)", "modifiers": "@Override public", "return": "void", "signature": "void authenticate(LdapQuery query, String password)", "full_signature": "@Override public void authenticate(LdapQuery query, String password)", "class_method_signature": "LdapTemplate.authenticate(LdapQuery query, String password)", "testcase": false, "constructor": false}, {"identifier": "searchForObject", "parameters": "(Name base, String filter, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T searchForObject(Name base, String filter, ContextMapper<T> mapper)", "full_signature": "@Override public T searchForObject(Name base, String filter, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.searchForObject(Name base, String filter, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "searchForObject", "parameters": "(String base, String filter, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T searchForObject(String base, String filter, ContextMapper<T> mapper)", "full_signature": "@Override public T searchForObject(String base, String filter, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.searchForObject(String base, String filter, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "searchForObject", "parameters": "(Name base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T searchForObject(Name base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "full_signature": "@Override public T searchForObject(Name base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.searchForObject(Name base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "searchForObject", "parameters": "(String base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T searchForObject(String base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "full_signature": "@Override public T searchForObject(String base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.searchForObject(String base, String filter, SearchControls searchControls, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(LdapQuery query, NameClassPairCallbackHandler callbackHandler)", "modifiers": "@Override public", "return": "void", "signature": "void search(LdapQuery query, NameClassPairCallbackHandler callbackHandler)", "full_signature": "@Override public void search(LdapQuery query, NameClassPairCallbackHandler callbackHandler)", "class_method_signature": "LdapTemplate.search(LdapQuery query, NameClassPairCallbackHandler callbackHandler)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(LdapQuery query, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(LdapQuery query, ContextMapper<T> mapper)", "full_signature": "@Override public List<T> search(LdapQuery query, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(LdapQuery query, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "searchControlsForQuery", "parameters": "(LdapQuery query, boolean returnObjFlag)", "modifiers": "private", "return": "SearchControls", "signature": "SearchControls searchControlsForQuery(LdapQuery query, boolean returnObjFlag)", "full_signature": "private SearchControls searchControlsForQuery(LdapQuery query, boolean returnObjFlag)", "class_method_signature": "LdapTemplate.searchControlsForQuery(LdapQuery query, boolean returnObjFlag)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(LdapQuery query, AttributesMapper<T> mapper)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> search(LdapQuery query, AttributesMapper<T> mapper)", "full_signature": "@Override public List<T> search(LdapQuery query, AttributesMapper<T> mapper)", "class_method_signature": "LdapTemplate.search(LdapQuery query, AttributesMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "searchForContext", "parameters": "(LdapQuery query)", "modifiers": "@Override public", "return": "DirContextOperations", "signature": "DirContextOperations searchForContext(LdapQuery query)", "full_signature": "@Override public DirContextOperations searchForContext(LdapQuery query)", "class_method_signature": "LdapTemplate.searchForContext(LdapQuery query)", "testcase": false, "constructor": false}, {"identifier": "searchForObject", "parameters": "(LdapQuery query, ContextMapper<T> mapper)", "modifiers": "@Override public", "return": "T", "signature": "T searchForObject(LdapQuery query, ContextMapper<T> mapper)", "full_signature": "@Override public T searchForObject(LdapQuery query, ContextMapper<T> mapper)", "class_method_signature": "LdapTemplate.searchForObject(LdapQuery query, ContextMapper<T> mapper)", "testcase": false, "constructor": false}, {"identifier": "findByDn", "parameters": "(Name dn, final Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T findByDn(Name dn, final Class<T> clazz)", "full_signature": "@Override public T findByDn(Name dn, final Class<T> clazz)", "class_method_signature": "LdapTemplate.findByDn(Name dn, final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Object entry)", "modifiers": "@Override public", "return": "void", "signature": "void create(Object entry)", "full_signature": "@Override public void create(Object entry)", "class_method_signature": "LdapTemplate.create(Object entry)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Object entry)", "modifiers": "@Override public", "return": "void", "signature": "void update(Object entry)", "full_signature": "@Override public void update(Object entry)", "class_method_signature": "LdapTemplate.update(Object entry)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Object entry)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Object entry)", "full_signature": "@Override public void delete(Object entry)", "class_method_signature": "LdapTemplate.delete(Object entry)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Name base, SearchControls searchControls, final Class<T> clazz)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findAll(Name base, SearchControls searchControls, final Class<T> clazz)", "full_signature": "@Override public List<T> findAll(Name base, SearchControls searchControls, final Class<T> clazz)", "class_method_signature": "LdapTemplate.findAll(Name base, SearchControls searchControls, final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Class<T> clazz)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findAll(Class<T> clazz)", "full_signature": "@Override public List<T> findAll(Class<T> clazz)", "class_method_signature": "LdapTemplate.findAll(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Name base, Filter filter, SearchControls searchControls, final Class<T> clazz)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(Name base, Filter filter, SearchControls searchControls, final Class<T> clazz)", "full_signature": "@Override public List<T> find(Name base, Filter filter, SearchControls searchControls, final Class<T> clazz)", "class_method_signature": "LdapTemplate.find(Name base, Filter filter, SearchControls searchControls, final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(LdapQuery query, Class<T> clazz)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(LdapQuery query, Class<T> clazz)", "full_signature": "@Override public List<T> find(LdapQuery query, Class<T> clazz)", "class_method_signature": "LdapTemplate.find(LdapQuery query, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "findOne", "parameters": "(LdapQuery query, Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T findOne(LdapQuery query, Class<T> clazz)", "full_signature": "@Override public T findOne(LdapQuery query, Class<T> clazz)", "class_method_signature": "LdapTemplate.findOne(LdapQuery query, Class<T> clazz)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/LdapTemplate.java"}, "focal_method": {"identifier": "search", "parameters": "(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler) {\n\n\t\tsearch(base, filter, getDefaultSearchControls(searchScope, returningObjFlag, ALL_ATTRIBUTES), handler);\n\t}", "signature": "void search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "full_signature": "@Override public void search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "class_method_signature": "LdapTemplate.search(Name base, String filter, int searchScope, boolean returningObjFlag,\n\t\t\tNameClassPairCallbackHandler handler)", "testcase": false, "constructor": false, "invocations": ["search", "getDefaultSearchControls"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}