{"test_class": {"identifier": "DomainParameterParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-batch-lightmin-domain/src/test/java/org/tuxdevelop/spring/batch/lightmin/util/DomainParameterParserTest.java"}, "test_case": {"identifier": "parseParametersNullTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseParametersNullTest() {\n        final Map<String, Object> parameterMap = DomainParameterParser\n                .parseParameters(null);\n        assertThat(parameterMap).isNotNull();\n        assertThat(parameterMap).isEmpty();\n    }", "signature": "void parseParametersNullTest()", "full_signature": "@Test public void parseParametersNullTest()", "class_method_signature": "DomainParameterParserTest.parseParametersNullTest()", "testcase": true, "constructor": false, "invocations": ["parseParameters", "isNotNull", "assertThat", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "DomainParameterParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DATE_FORMAT_WITH_TIMESTAMP = \"yyyy/MM/dd HH:mm:ss:SSS\";", "modifier": "public static final", "type": "String", "declarator": "DATE_FORMAT_WITH_TIMESTAMP = \"yyyy/MM/dd HH:mm:ss:SSS\"", "var_name": "DATE_FORMAT_WITH_TIMESTAMP"}, {"original_string": "public static final String DATE_FORMAT = \"yyyy/MM/dd\";", "modifier": "public static final", "type": "String", "declarator": "DATE_FORMAT = \"yyyy/MM/dd\"", "var_name": "DATE_FORMAT"}, {"original_string": "private static final SimpleDateFormat simpleDateFormatTimeStamp = new SimpleDateFormat(DATE_FORMAT_WITH_TIMESTAMP);", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "simpleDateFormatTimeStamp = new SimpleDateFormat(DATE_FORMAT_WITH_TIMESTAMP)", "var_name": "simpleDateFormatTimeStamp"}, {"original_string": "private static final SimpleDateFormat simpleDateFormat = new SimpleDateFormat(DATE_FORMAT);", "modifier": "private static final", "type": "SimpleDateFormat", "declarator": "simpleDateFormat = new SimpleDateFormat(DATE_FORMAT)", "var_name": "simpleDateFormat"}], "methods": [{"identifier": "DomainParameterParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " DomainParameterParser()", "full_signature": "private  DomainParameterParser()", "class_method_signature": "DomainParameterParser.DomainParameterParser()", "testcase": false, "constructor": true}, {"identifier": "parseParameterMapToString", "parameters": "(final Map<String, Object> parametersMap)", "modifiers": "public static", "return": "String", "signature": "String parseParameterMapToString(final Map<String, Object> parametersMap)", "full_signature": "public static String parseParameterMapToString(final Map<String, Object> parametersMap)", "class_method_signature": "DomainParameterParser.parseParameterMapToString(final Map<String, Object> parametersMap)", "testcase": false, "constructor": false}, {"identifier": "parseParameterEntryToString", "parameters": "(final StringBuilder stringBuilder, final Entry<String, Object> entry)", "modifiers": "public static", "return": "void", "signature": "void parseParameterEntryToString(final StringBuilder stringBuilder, final Entry<String, Object> entry)", "full_signature": "public static void parseParameterEntryToString(final StringBuilder stringBuilder, final Entry<String, Object> entry)", "class_method_signature": "DomainParameterParser.parseParameterEntryToString(final StringBuilder stringBuilder, final Entry<String, Object> entry)", "testcase": false, "constructor": false}, {"identifier": "parseParametersToJobParameters", "parameters": "(final String parameters)", "modifiers": "public static", "return": "JobParameters", "signature": "JobParameters parseParametersToJobParameters(final String parameters)", "full_signature": "public static JobParameters parseParametersToJobParameters(final String parameters)", "class_method_signature": "DomainParameterParser.parseParametersToJobParameters(final String parameters)", "testcase": false, "constructor": false}, {"identifier": "parseParameters", "parameters": "(final String parameters)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> parseParameters(final String parameters)", "full_signature": "public static Map<String, Object> parseParameters(final String parameters)", "class_method_signature": "DomainParameterParser.parseParameters(final String parameters)", "testcase": false, "constructor": false}, {"identifier": "parseJobParametersToString", "parameters": "(final JobParameters jobParameters)", "modifiers": "public static", "return": "String", "signature": "String parseJobParametersToString(final JobParameters jobParameters)", "full_signature": "public static String parseJobParametersToString(final JobParameters jobParameters)", "class_method_signature": "DomainParameterParser.parseJobParametersToString(final JobParameters jobParameters)", "testcase": false, "constructor": false}, {"identifier": "splitParameters", "parameters": "(final String parameters)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> splitParameters(final String parameters)", "full_signature": "private static List<String> splitParameters(final String parameters)", "class_method_signature": "DomainParameterParser.splitParameters(final String parameters)", "testcase": false, "constructor": false}, {"identifier": "evaluateParameters", "parameters": "(final List<String> parameterList)", "modifiers": "private static", "return": "Map<String, Object>", "signature": "Map<String, Object> evaluateParameters(final List<String> parameterList)", "full_signature": "private static Map<String, Object> evaluateParameters(final List<String> parameterList)", "class_method_signature": "DomainParameterParser.evaluateParameters(final List<String> parameterList)", "testcase": false, "constructor": false}, {"identifier": "generateParameterEntry", "parameters": "(final String parameter)", "modifiers": "public static", "return": "Entry<String, Object>", "signature": "Entry<String, Object> generateParameterEntry(final String parameter)", "full_signature": "public static Entry<String, Object> generateParameterEntry(final String parameter)", "class_method_signature": "DomainParameterParser.generateParameterEntry(final String parameter)", "testcase": false, "constructor": false}, {"identifier": "createValueInstance", "parameters": "(final String type, final String valueString)", "modifiers": "public static", "return": "Object", "signature": "Object createValueInstance(final String type, final String valueString)", "full_signature": "public static Object createValueInstance(final String type, final String valueString)", "class_method_signature": "DomainParameterParser.createValueInstance(final String type, final String valueString)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(final String dateString)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(final String dateString)", "full_signature": "public static Date parseDate(final String dateString)", "class_method_signature": "DomainParameterParser.parseDate(final String dateString)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(final Date date)", "modifiers": "public static", "return": "String", "signature": "String parseDate(final Date date)", "full_signature": "public static String parseDate(final Date date)", "class_method_signature": "DomainParameterParser.parseDate(final Date date)", "testcase": false, "constructor": false}], "file": "spring-batch-lightmin-domain/src/main/java/org/tuxdevelop/spring/batch/lightmin/util/DomainParameterParser.java"}, "focal_method": {"identifier": "parseParameters", "parameters": "(final String parameters)", "modifiers": "public static", "return": "Map<String, Object>", "body": "public static Map<String, Object> parseParameters(final String parameters) {\n        final Map<String, Object> parameterMap;\n        if (parameters == null || parameters.isEmpty()) {\n            log.debug(\"parameters null or empty, nothing to map!\");\n            parameterMap = new HashMap<>();\n        } else {\n            final List<String> parameterList = splitParameters(parameters);\n            parameterMap = evaluateParameters(parameterList);\n        }\n        return parameterMap;\n    }", "signature": "Map<String, Object> parseParameters(final String parameters)", "full_signature": "public static Map<String, Object> parseParameters(final String parameters)", "class_method_signature": "DomainParameterParser.parseParameters(final String parameters)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "debug", "splitParameters", "evaluateParameters"]}, "repository": {"repo_id": 29479059, "url": "https://github.com/tuxdevelop/spring-batch-lightmin", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 109, "size": 12355, "license": "licensed"}}