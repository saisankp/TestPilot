{"test_class": {"identifier": "MDLRXNWriterTest", "superclass": "extends ChemObjectIOTest", "interfaces": "", "fields": [{"original_string": "private static IChemObjectBuilder builder;", "modifier": "private static", "type": "IChemObjectBuilder", "declarator": "builder", "var_name": "builder"}], "file": "storage/ctab/src/test/java/org/openscience/cdk/io/MDLRXNWriterTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() throws Exception {\n        MDLRXNWriter reader = new MDLRXNWriter();\n        Assert.assertTrue(reader.accepts(Reaction.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "MDLRXNWriterTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "MDLRXNWriter", "superclass": "extends DefaultChemObjectWriter", "interfaces": "", "fields": [{"original_string": "private BufferedWriter      writer;", "modifier": "private", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private static ILoggingTool logger   = LoggingToolFactory.createLoggingTool(MDLRXNWriter.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger   = LoggingToolFactory.createLoggingTool(MDLRXNWriter.class)", "var_name": "logger"}, {"original_string": "private int                 reactionNumber;", "modifier": "private", "type": "int", "declarator": "reactionNumber", "var_name": "reactionNumber"}, {"original_string": "public Map<String, Object>  rdFields = null;", "modifier": "public", "type": "Map<String, Object>", "declarator": "rdFields = null", "var_name": "rdFields"}], "methods": [{"identifier": "MDLRXNWriter", "parameters": "(Writer out)", "modifiers": "public", "return": "", "signature": " MDLRXNWriter(Writer out)", "full_signature": "public  MDLRXNWriter(Writer out)", "class_method_signature": "MDLRXNWriter.MDLRXNWriter(Writer out)", "testcase": false, "constructor": true}, {"identifier": "MDLRXNWriter", "parameters": "(OutputStream output)", "modifiers": "public", "return": "", "signature": " MDLRXNWriter(OutputStream output)", "full_signature": "public  MDLRXNWriter(OutputStream output)", "class_method_signature": "MDLRXNWriter.MDLRXNWriter(OutputStream output)", "testcase": false, "constructor": true}, {"identifier": "MDLRXNWriter", "parameters": "()", "modifiers": "public", "return": "", "signature": " MDLRXNWriter()", "full_signature": "public  MDLRXNWriter()", "class_method_signature": "MDLRXNWriter.MDLRXNWriter()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "MDLRXNWriter.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(Writer out)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(Writer out)", "full_signature": "@Override public void setWriter(Writer out)", "class_method_signature": "MDLRXNWriter.setWriter(Writer out)", "testcase": false, "constructor": false}, {"identifier": "setWriter", "parameters": "(OutputStream output)", "modifiers": "@Override public", "return": "void", "signature": "void setWriter(OutputStream output)", "full_signature": "@Override public void setWriter(OutputStream output)", "class_method_signature": "MDLRXNWriter.setWriter(OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "setRdFields", "parameters": "(Map<String, Object> map)", "modifiers": "public", "return": "void", "signature": "void setRdFields(Map<String, Object> map)", "full_signature": "public void setRdFields(Map<String, Object> map)", "class_method_signature": "MDLRXNWriter.setRdFields(Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MDLRXNWriter.close()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "MDLRXNWriter.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(IChemObject object)", "modifiers": "@Override public", "return": "void", "signature": "void write(IChemObject object)", "full_signature": "@Override public void write(IChemObject object)", "class_method_signature": "MDLRXNWriter.write(IChemObject object)", "testcase": false, "constructor": false}, {"identifier": "writeReactionSet", "parameters": "(IReactionSet reactions)", "modifiers": "private", "return": "void", "signature": "void writeReactionSet(IReactionSet reactions)", "full_signature": "private void writeReactionSet(IReactionSet reactions)", "class_method_signature": "MDLRXNWriter.writeReactionSet(IReactionSet reactions)", "testcase": false, "constructor": false}, {"identifier": "writeReaction", "parameters": "(IReaction reaction)", "modifiers": "private", "return": "void", "signature": "void writeReaction(IReaction reaction)", "full_signature": "private void writeReaction(IReaction reaction)", "class_method_signature": "MDLRXNWriter.writeReaction(IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "writeAtomContainerSet", "parameters": "(IAtomContainerSet som)", "modifiers": "private", "return": "void", "signature": "void writeAtomContainerSet(IAtomContainerSet som)", "full_signature": "private void writeAtomContainerSet(IAtomContainerSet som)", "class_method_signature": "MDLRXNWriter.writeAtomContainerSet(IAtomContainerSet som)", "testcase": false, "constructor": false}, {"identifier": "formatMDLInt", "parameters": "(int i, int l)", "modifiers": "private", "return": "String", "signature": "String formatMDLInt(int i, int l)", "full_signature": "private String formatMDLInt(int i, int l)", "class_method_signature": "MDLRXNWriter.formatMDLInt(int i, int l)", "testcase": false, "constructor": false}], "file": "storage/ctab/src/main/java/org/openscience/cdk/io/MDLRXNWriter.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        if (IReaction.class.equals(classObject)) return true;\n        if (IReactionSet.class.equals(classObject)) return true;\n        Class<?>[] interfaces = classObject.getInterfaces();\n        for (Class<?> anInterface : interfaces) {\n            if (IReaction.class.equals(anInterface)) return true;\n            if (IReactionSet.class.equals(anInterface)) return true;\n        }\n        Class superClass = classObject.getSuperclass();\n        if (superClass != null) return this.accepts(superClass);\n        return false;\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "MDLRXNWriter.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "getInterfaces", "equals", "equals", "getSuperclass", "accepts"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}