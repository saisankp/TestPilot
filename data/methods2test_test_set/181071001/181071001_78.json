{"test_class": {"identifier": "TestStandardFDControllerServiceService", "superclass": "extends BaseFDServiceTest", "interfaces": "", "fields": [{"original_string": "private FDControllerServiceService controllerServiceService;", "modifier": "private", "type": "FDControllerServiceService", "declarator": "controllerServiceService", "var_name": "controllerServiceService"}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/test/java/com/cloudera/cem/efm/service/component/TestStandardFDControllerServiceService.java"}, "test_case": {"identifier": "testDeleteControllerServiceSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteControllerServiceSuccess() {\n        when(flowManager.getFlow(flow.getFlowMetadata().getIdentifier())).thenReturn(Optional.of(flow));\n        when(extensionManagers.getExtensionManager(flow.getFlowMetadata().getAgentClass())).thenReturn(Optional.of(extensionManager));\n\n        assertEquals(1, group2.getControllerServices().size());\n\n        controllerServiceService.delete(\n                flow.getFlowMetadata().getIdentifier(),\n                existingService.getIdentifier());\n\n        assertEquals(0, group2.getControllerServices().size());\n    }", "signature": "void testDeleteControllerServiceSuccess()", "full_signature": "@Test public void testDeleteControllerServiceSuccess()", "class_method_signature": "TestStandardFDControllerServiceService.testDeleteControllerServiceSuccess()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getFlow", "getIdentifier", "getFlowMetadata", "of", "thenReturn", "when", "getExtensionManager", "getAgentClass", "getFlowMetadata", "of", "assertEquals", "size", "getControllerServices", "delete", "getIdentifier", "getFlowMetadata", "getIdentifier", "assertEquals", "size", "getControllerServices"]}, "focal_class": {"identifier": "StandardFDControllerServiceService", "superclass": "extends BaseExtensionComponentService<VersionedControllerService, ControllerServiceDefinition, FDControllerService>", "interfaces": "implements FDControllerServiceService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StandardFDControllerServiceService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StandardFDControllerServiceService.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "StandardFDControllerServiceService", "parameters": "(final FDFlowManager flowManager, final FDExtensionManagers extensionManagers, final ValidationService validationService)", "modifiers": "@Autowired public", "return": "", "signature": " StandardFDControllerServiceService(final FDFlowManager flowManager, final FDExtensionManagers extensionManagers, final ValidationService validationService)", "full_signature": "@Autowired public  StandardFDControllerServiceService(final FDFlowManager flowManager, final FDExtensionManagers extensionManagers, final ValidationService validationService)", "class_method_signature": "StandardFDControllerServiceService.StandardFDControllerServiceService(final FDFlowManager flowManager, final FDExtensionManagers extensionManagers, final ValidationService validationService)", "testcase": false, "constructor": true}, {"identifier": "getControllerServiceTypes", "parameters": "(final String flowId)", "modifiers": "@Override public", "return": "FDComponentTypes", "signature": "FDComponentTypes getControllerServiceTypes(final String flowId)", "full_signature": "@Override public FDComponentTypes getControllerServiceTypes(final String flowId)", "class_method_signature": "StandardFDControllerServiceService.getControllerServiceTypes(final String flowId)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String flowId, final String processGroupId, final VersionedControllerService requestComponentConfig)", "modifiers": "@Override public", "return": "FDControllerService", "signature": "FDControllerService create(final String flowId, final String processGroupId, final VersionedControllerService requestComponentConfig)", "full_signature": "@Override public FDControllerService create(final String flowId, final String processGroupId, final VersionedControllerService requestComponentConfig)", "class_method_signature": "StandardFDControllerServiceService.create(final String flowId, final String processGroupId, final VersionedControllerService requestComponentConfig)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String flowId, final String controllerServiceId)", "modifiers": "@Override public", "return": "FDControllerService", "signature": "FDControllerService get(final String flowId, final String controllerServiceId)", "full_signature": "@Override public FDControllerService get(final String flowId, final String controllerServiceId)", "class_method_signature": "StandardFDControllerServiceService.get(final String flowId, final String controllerServiceId)", "testcase": false, "constructor": false}, {"identifier": "getForProcessGroup", "parameters": "(final String flowId, final String processGroupId)", "modifiers": "@Override public", "return": "Set<FDControllerService>", "signature": "Set<FDControllerService> getForProcessGroup(final String flowId, final String processGroupId)", "full_signature": "@Override public Set<FDControllerService> getForProcessGroup(final String flowId, final String processGroupId)", "class_method_signature": "StandardFDControllerServiceService.getForProcessGroup(final String flowId, final String processGroupId)", "testcase": false, "constructor": false}, {"identifier": "getPropertyDescriptor", "parameters": "(final String flowId, final String controllerServiceId, final String propertyName)", "modifiers": "@Override public", "return": "FDPropertyDescriptor", "signature": "FDPropertyDescriptor getPropertyDescriptor(final String flowId, final String controllerServiceId, final String propertyName)", "full_signature": "@Override public FDPropertyDescriptor getPropertyDescriptor(final String flowId, final String controllerServiceId, final String propertyName)", "class_method_signature": "StandardFDControllerServiceService.getPropertyDescriptor(final String flowId, final String controllerServiceId, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getPropertyDescriptorFromExtensionManager", "parameters": "(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "modifiers": "@Override protected", "return": "Optional<PropertyDescriptor>", "signature": "Optional<PropertyDescriptor> getPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "full_signature": "@Override protected Optional<PropertyDescriptor> getPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDControllerServiceService.getPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "createDynamicPropertyDescriptorFromExtensionManager", "parameters": "(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "modifiers": "@Override protected", "return": "PropertyDescriptor", "signature": "PropertyDescriptor createDynamicPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "full_signature": "@Override protected PropertyDescriptor createDynamicPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "class_method_signature": "StandardFDControllerServiceService.createDynamicPropertyDescriptorFromExtensionManager(\n            final FDExtensionManager extensionManager, final String type,\n            final Bundle bundle, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final String flowId, final VersionedControllerService requestComponentConfig)", "modifiers": "@Override public", "return": "FDControllerService", "signature": "FDControllerService update(final String flowId, final VersionedControllerService requestComponentConfig)", "full_signature": "@Override public FDControllerService update(final String flowId, final VersionedControllerService requestComponentConfig)", "class_method_signature": "StandardFDControllerServiceService.update(final String flowId, final VersionedControllerService requestComponentConfig)", "testcase": false, "constructor": false}, {"identifier": "revalidateReferencingComponents", "parameters": "(final VersionedControllerService serviceConfig, final String flowId)", "modifiers": "private", "return": "void", "signature": "void revalidateReferencingComponents(final VersionedControllerService serviceConfig, final String flowId)", "full_signature": "private void revalidateReferencingComponents(final VersionedControllerService serviceConfig, final String flowId)", "class_method_signature": "StandardFDControllerServiceService.revalidateReferencingComponents(final VersionedControllerService serviceConfig, final String flowId)", "testcase": false, "constructor": false}, {"identifier": "findReferencingComponents", "parameters": "(final String controllerServiceId, final VersionedProcessGroup group, final FDExtensionManager extensionManager)", "modifiers": "private", "return": "Set<VersionedComponent>", "signature": "Set<VersionedComponent> findReferencingComponents(final String controllerServiceId, final VersionedProcessGroup group, final FDExtensionManager extensionManager)", "full_signature": "private Set<VersionedComponent> findReferencingComponents(final String controllerServiceId, final VersionedProcessGroup group, final FDExtensionManager extensionManager)", "class_method_signature": "StandardFDControllerServiceService.findReferencingComponents(final String controllerServiceId, final VersionedProcessGroup group, final FDExtensionManager extensionManager)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final String flowId, final String controllerServiceId)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final String flowId, final String controllerServiceId)", "full_signature": "@Override public void delete(final String flowId, final String controllerServiceId)", "class_method_signature": "StandardFDControllerServiceService.delete(final String flowId, final String controllerServiceId)", "testcase": false, "constructor": false}, {"identifier": "getComponentDefinition", "parameters": "(final String agentClass, final VersionedControllerService componentConfig)", "modifiers": "@Override public", "return": "ControllerServiceDefinition", "signature": "ControllerServiceDefinition getComponentDefinition(final String agentClass, final VersionedControllerService componentConfig)", "full_signature": "@Override public ControllerServiceDefinition getComponentDefinition(final String agentClass, final VersionedControllerService componentConfig)", "class_method_signature": "StandardFDControllerServiceService.getComponentDefinition(final String agentClass, final VersionedControllerService componentConfig)", "testcase": false, "constructor": false}, {"identifier": "instantiateExtensionComponent", "parameters": "(final VersionedControllerService componentConfig,\n                                                                final ControllerServiceDefinition componentDefinition)", "modifiers": "@Override protected", "return": "FDControllerService", "signature": "FDControllerService instantiateExtensionComponent(final VersionedControllerService componentConfig,\n                                                                final ControllerServiceDefinition componentDefinition)", "full_signature": "@Override protected FDControllerService instantiateExtensionComponent(final VersionedControllerService componentConfig,\n                                                                final ControllerServiceDefinition componentDefinition)", "class_method_signature": "StandardFDControllerServiceService.instantiateExtensionComponent(final VersionedControllerService componentConfig,\n                                                                final ControllerServiceDefinition componentDefinition)", "testcase": false, "constructor": false}, {"identifier": "configureComponentSpecifics", "parameters": "(final VersionedControllerService requestService, final VersionedControllerService resultService)", "modifiers": "@Override protected", "return": "void", "signature": "void configureComponentSpecifics(final VersionedControllerService requestService, final VersionedControllerService resultService)", "full_signature": "@Override protected void configureComponentSpecifics(final VersionedControllerService requestService, final VersionedControllerService resultService)", "class_method_signature": "StandardFDControllerServiceService.configureComponentSpecifics(final VersionedControllerService requestService, final VersionedControllerService resultService)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final FDControllerService service, final VersionedProcessGroup group,\n                                        final String flowId, final ControllerServiceLookup serviceLookup)", "modifiers": "private", "return": "Collection<String>", "signature": "Collection<String> validate(final FDControllerService service, final VersionedProcessGroup group,\n                                        final String flowId, final ControllerServiceLookup serviceLookup)", "full_signature": "private Collection<String> validate(final FDControllerService service, final VersionedProcessGroup group,\n                                        final String flowId, final ControllerServiceLookup serviceLookup)", "class_method_signature": "StandardFDControllerServiceService.validate(final FDControllerService service, final VersionedProcessGroup group,\n                                        final String flowId, final ControllerServiceLookup serviceLookup)", "testcase": false, "constructor": false}], "file": "efm/efm-flow-designer/efm-flow-designer-framework/src/main/java/com/cloudera/cem/efm/service/component/StandardFDControllerServiceService.java"}, "focal_method": {"identifier": "delete", "parameters": "(final String flowId, final String controllerServiceId)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void delete(final String flowId, final String controllerServiceId) {\n        final VersionedControllerService removed = deleteExtensionComponent(flowId, controllerServiceId, VersionedProcessGroup::getControllerServices);\n        revalidateReferencingComponents(removed, flowId);\n    }", "signature": "void delete(final String flowId, final String controllerServiceId)", "full_signature": "@Override public void delete(final String flowId, final String controllerServiceId)", "class_method_signature": "StandardFDControllerServiceService.delete(final String flowId, final String controllerServiceId)", "testcase": false, "constructor": false, "invocations": ["deleteExtensionComponent", "revalidateReferencingComponents"]}, "repository": {"repo_id": 181071001, "url": "https://github.com/hortonworks/efm", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 2003, "license": "licensed"}}