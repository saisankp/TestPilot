{"test_class": {"identifier": "JsonObjectMergerTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/enforcers/src/test/java/org/eclipse/ditto/model/enforcers/JsonObjectMergerTest.java"}, "test_case": {"identifier": "apply", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void apply() {\n        final JsonObjectMerger underTest = new JsonObjectMerger();\n        final JsonObject mergedObject = underTest.apply(JsonFactory.nullObject(), JsonFactory.nullObject());\n\n        assertThat(mergedObject).isEqualTo(JsonFactory.nullObject());\n    }", "signature": "void apply()", "full_signature": "@Test public void apply()", "class_method_signature": "JsonObjectMergerTest.apply()", "testcase": true, "constructor": false, "invocations": ["apply", "nullObject", "nullObject", "isEqualTo", "assertThat", "nullObject"]}, "focal_class": {"identifier": "JsonObjectMerger", "superclass": "", "interfaces": "implements BiFunction<JsonObject, JsonObject, JsonObject>", "fields": [], "methods": [{"identifier": "apply", "parameters": "(final JsonObject jsonObject1, final JsonObject jsonObject2)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "full_signature": "@Override public JsonObject apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "class_method_signature": "JsonObjectMerger.apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "testcase": false, "constructor": false}, {"identifier": "mergeJsonObjects", "parameters": "(final JsonObject object1, final JsonObject object2)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject mergeJsonObjects(final JsonObject object1, final JsonObject object2)", "full_signature": "private static JsonObject mergeJsonObjects(final JsonObject object1, final JsonObject object2)", "class_method_signature": "JsonObjectMerger.mergeJsonObjects(final JsonObject object1, final JsonObject object2)", "testcase": false, "constructor": false}, {"identifier": "mergeJsonValues", "parameters": "(final JsonValue value1, final JsonValue value2)", "modifiers": "private static", "return": "JsonValue", "signature": "JsonValue mergeJsonValues(final JsonValue value1, final JsonValue value2)", "full_signature": "private static JsonValue mergeJsonValues(final JsonValue value1, final JsonValue value2)", "class_method_signature": "JsonObjectMerger.mergeJsonValues(final JsonValue value1, final JsonValue value2)", "testcase": false, "constructor": false}, {"identifier": "areJsonObjects", "parameters": "(final JsonValue value1, final JsonValue value2)", "modifiers": "private static", "return": "boolean", "signature": "boolean areJsonObjects(final JsonValue value1, final JsonValue value2)", "full_signature": "private static boolean areJsonObjects(final JsonValue value1, final JsonValue value2)", "class_method_signature": "JsonObjectMerger.areJsonObjects(final JsonValue value1, final JsonValue value2)", "testcase": false, "constructor": false}, {"identifier": "areJsonArrays", "parameters": "(final JsonValue value1, final JsonValue value2)", "modifiers": "private static", "return": "boolean", "signature": "boolean areJsonArrays(final JsonValue value1, final JsonValue value2)", "full_signature": "private static boolean areJsonArrays(final JsonValue value1, final JsonValue value2)", "class_method_signature": "JsonObjectMerger.areJsonArrays(final JsonValue value1, final JsonValue value2)", "testcase": false, "constructor": false}, {"identifier": "mergeJsonArrays", "parameters": "(final JsonArray array1, final JsonArray array2)", "modifiers": "private static", "return": "JsonArray", "signature": "JsonArray mergeJsonArrays(final JsonArray array1, final JsonArray array2)", "full_signature": "private static JsonArray mergeJsonArrays(final JsonArray array1, final JsonArray array2)", "class_method_signature": "JsonObjectMerger.mergeJsonArrays(final JsonArray array1, final JsonArray array2)", "testcase": false, "constructor": false}, {"identifier": "getOrThrow", "parameters": "(final JsonArray jsonArray, final int index)", "modifiers": "private static", "return": "JsonValue", "signature": "JsonValue getOrThrow(final JsonArray jsonArray, final int index)", "full_signature": "private static JsonValue getOrThrow(final JsonArray jsonArray, final int index)", "class_method_signature": "JsonObjectMerger.getOrThrow(final JsonArray jsonArray, final int index)", "testcase": false, "constructor": false}], "file": "model/enforcers/src/main/java/org/eclipse/ditto/model/enforcers/JsonObjectMerger.java"}, "focal_method": {"identifier": "apply", "parameters": "(final JsonObject jsonObject1, final JsonObject jsonObject2)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject apply(final JsonObject jsonObject1, final JsonObject jsonObject2) {\n        return mergeJsonObjects(jsonObject1, jsonObject2);\n    }", "signature": "JsonObject apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "full_signature": "@Override public JsonObject apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "class_method_signature": "JsonObjectMerger.apply(final JsonObject jsonObject1, final JsonObject jsonObject2)", "testcase": false, "constructor": false, "invocations": ["mergeJsonObjects"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}