{"test_class": {"identifier": "DistanceMomentTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "boolean standAlone = false;", "modifier": "", "type": "boolean", "declarator": "standAlone = false", "var_name": "standAlone"}], "file": "descriptor/fingerprint/src/test/java/org/openscience/cdk/similarity/DistanceMomentTest.java"}, "test_case": {"identifier": "test3DSim1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test3DSim1() throws Exception {\n        String filename = \"data/mdl/sim3d1.sdf\";\n        IAtomContainer ac = loadMolecule(filename);\n        float sim = DistanceMoment.calculate(ac, ac);\n        Assert.assertEquals(1.0000, sim, 0.00001);\n    }", "signature": "void test3DSim1()", "full_signature": "@Test public void test3DSim1()", "class_method_signature": "DistanceMomentTest.test3DSim1()", "testcase": true, "constructor": false, "invocations": ["loadMolecule", "calculate", "assertEquals"]}, "focal_class": {"identifier": "DistanceMoment", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getGeometricCenter", "parameters": "(IAtomContainer atomContainer)", "modifiers": "private static", "return": "Point3d", "signature": "Point3d getGeometricCenter(IAtomContainer atomContainer)", "full_signature": "private static Point3d getGeometricCenter(IAtomContainer atomContainer)", "class_method_signature": "DistanceMoment.getGeometricCenter(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "mu1", "parameters": "(double[] x)", "modifiers": "private static", "return": "float", "signature": "float mu1(double[] x)", "full_signature": "private static float mu1(double[] x)", "class_method_signature": "DistanceMoment.mu1(double[] x)", "testcase": false, "constructor": false}, {"identifier": "mu2", "parameters": "(double[] x, double mean)", "modifiers": "private static", "return": "float", "signature": "float mu2(double[] x, double mean)", "full_signature": "private static float mu2(double[] x, double mean)", "class_method_signature": "DistanceMoment.mu2(double[] x, double mean)", "testcase": false, "constructor": false}, {"identifier": "mu3", "parameters": "(double[] x, double mean, double sigma)", "modifiers": "private static", "return": "float", "signature": "float mu3(double[] x, double mean, double sigma)", "full_signature": "private static float mu3(double[] x, double mean, double sigma)", "class_method_signature": "DistanceMoment.mu3(double[] x, double mean, double sigma)", "testcase": false, "constructor": false}, {"identifier": "generateMoments", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public static", "return": "float[]", "signature": "float[] generateMoments(IAtomContainer atomContainer)", "full_signature": "public static float[] generateMoments(IAtomContainer atomContainer)", "class_method_signature": "DistanceMoment.generateMoments(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtomContainer query, IAtomContainer target)", "modifiers": "public static", "return": "float", "signature": "float calculate(IAtomContainer query, IAtomContainer target)", "full_signature": "public static float calculate(IAtomContainer query, IAtomContainer target)", "class_method_signature": "DistanceMoment.calculate(IAtomContainer query, IAtomContainer target)", "testcase": false, "constructor": false}], "file": "descriptor/fingerprint/src/main/java/org/openscience/cdk/similarity/DistanceMoment.java"}, "focal_method": {"identifier": "calculate", "parameters": "(IAtomContainer query, IAtomContainer target)", "modifiers": "public static", "return": "float", "body": "public static float calculate(IAtomContainer query, IAtomContainer target) throws CDKException {\n        float[] mom1 = generateMoments(query);\n        float[] mom2 = generateMoments(target);\n        float sum = 0;\n        for (int i = 0; i < mom1.length; i++) {\n            sum += Math.abs(mom1[i] - mom2[i]);\n        }\n        return (float) (1.0 / (1.0 + sum / 12.0));\n    }", "signature": "float calculate(IAtomContainer query, IAtomContainer target)", "full_signature": "public static float calculate(IAtomContainer query, IAtomContainer target)", "class_method_signature": "DistanceMoment.calculate(IAtomContainer query, IAtomContainer target)", "testcase": false, "constructor": false, "invocations": ["generateMoments", "generateMoments", "abs"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}