{"test_class": {"identifier": "ExecutorUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/utils/ExecutorUtilTest.java"}, "test_case": {"identifier": "testSetThreadName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetThreadName() throws Exception {\n        URL url = new URL(\"dubbo\", \"localhost\", 1234).addParameter(Constants.THREAD_NAME_KEY, \"custom-thread\");\n        url = ExecutorUtil.setThreadName(url, \"default-name\");\n        assertThat(url.getParameter(Constants.THREAD_NAME_KEY), equalTo(\"custom-thread-localhost:1234\"));\n    }", "signature": "void testSetThreadName()", "full_signature": "@Test public void testSetThreadName()", "class_method_signature": "ExecutorUtilTest.testSetThreadName()", "testcase": true, "constructor": false, "invocations": ["addParameter", "setThreadName", "assertThat", "getParameter", "equalTo"]}, "focal_class": {"identifier": "ExecutorUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ExecutorUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ExecutorUtil.class)", "var_name": "logger"}, {"original_string": "private static final ThreadPoolExecutor shutdownExecutor = new ThreadPoolExecutor(0, 1,\n            0L, TimeUnit.MILLISECONDS,\n            new LinkedBlockingQueue<Runnable>(100),\n            new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));", "modifier": "private static final", "type": "ThreadPoolExecutor", "declarator": "shutdownExecutor = new ThreadPoolExecutor(0, 1,\n            0L, TimeUnit.MILLISECONDS,\n            new LinkedBlockingQueue<Runnable>(100),\n            new NamedThreadFactory(\"Close-ExecutorService-Timer\", true))", "var_name": "shutdownExecutor"}], "methods": [{"identifier": "isTerminated", "parameters": "(Executor executor)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTerminated(Executor executor)", "full_signature": "public static boolean isTerminated(Executor executor)", "class_method_signature": "ExecutorUtil.isTerminated(Executor executor)", "testcase": false, "constructor": false}, {"identifier": "gracefulShutdown", "parameters": "(Executor executor, int timeout)", "modifiers": "public static", "return": "void", "signature": "void gracefulShutdown(Executor executor, int timeout)", "full_signature": "public static void gracefulShutdown(Executor executor, int timeout)", "class_method_signature": "ExecutorUtil.gracefulShutdown(Executor executor, int timeout)", "testcase": false, "constructor": false}, {"identifier": "shutdownNow", "parameters": "(Executor executor, final int timeout)", "modifiers": "public static", "return": "void", "signature": "void shutdownNow(Executor executor, final int timeout)", "full_signature": "public static void shutdownNow(Executor executor, final int timeout)", "class_method_signature": "ExecutorUtil.shutdownNow(Executor executor, final int timeout)", "testcase": false, "constructor": false}, {"identifier": "newThreadToCloseExecutor", "parameters": "(final ExecutorService es)", "modifiers": "private static", "return": "void", "signature": "void newThreadToCloseExecutor(final ExecutorService es)", "full_signature": "private static void newThreadToCloseExecutor(final ExecutorService es)", "class_method_signature": "ExecutorUtil.newThreadToCloseExecutor(final ExecutorService es)", "testcase": false, "constructor": false}, {"identifier": "setThreadName", "parameters": "(URL url, String defaultName)", "modifiers": "public static", "return": "URL", "signature": "URL setThreadName(URL url, String defaultName)", "full_signature": "public static URL setThreadName(URL url, String defaultName)", "class_method_signature": "ExecutorUtil.setThreadName(URL url, String defaultName)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java"}, "focal_method": {"identifier": "setThreadName", "parameters": "(URL url, String defaultName)", "modifiers": "public static", "return": "URL", "body": "public static URL setThreadName(URL url, String defaultName) {\n        String name = url.getParameter(Constants.THREAD_NAME_KEY, defaultName);\n        name = name + \"-\" + url.getAddress();\n        url = url.addParameter(Constants.THREAD_NAME_KEY, name);\n        return url;\n    }", "signature": "URL setThreadName(URL url, String defaultName)", "full_signature": "public static URL setThreadName(URL url, String defaultName)", "class_method_signature": "ExecutorUtil.setThreadName(URL url, String defaultName)", "testcase": false, "constructor": false, "invocations": ["getParameter", "getAddress", "addParameter"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}