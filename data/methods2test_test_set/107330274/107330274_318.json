{"test_class": {"identifier": "ExplicitJobPodResourcePoolResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ExplicitJobPodResourcePoolResolver resolver = new ExplicitJobPodResourcePoolResolver();", "modifier": "private final", "type": "ExplicitJobPodResourcePoolResolver", "declarator": "resolver = new ExplicitJobPodResourcePoolResolver()", "var_name": "resolver"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/ExplicitJobPodResourcePoolResolverTest.java"}, "test_case": {"identifier": "testAssignment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssignment() {\n        List<ResourcePoolAssignment> result = resolver.resolve(newJob(\"myResourcePool\"));\n        assertThat(result).hasSize(1);\n        assertThat(result.get(0).getResourcePoolName()).isEqualTo(\"myResourcePool\");\n    }", "signature": "void testAssignment()", "full_signature": "@Test public void testAssignment()", "class_method_signature": "ExplicitJobPodResourcePoolResolverTest.testAssignment()", "testcase": true, "constructor": false, "invocations": ["resolve", "newJob", "hasSize", "assertThat", "isEqualTo", "assertThat", "getResourcePoolName", "get"]}, "focal_class": {"identifier": "ExplicitJobPodResourcePoolResolver", "superclass": "", "interfaces": "implements PodResourcePoolResolver", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "ExplicitJobPodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/ExplicitJobPodResourcePoolResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "body": "@Override\n    public List<ResourcePoolAssignment> resolve(Job<?> job) {\n        List<String> resourcePoolNames = StringExt.splitByComma(\n                job.getJobDescriptor().getAttributes().get(JobAttributes.JOB_PARAMETER_RESOURCE_POOLS)\n        );\n        if (resourcePoolNames.isEmpty()) {\n            return Collections.emptyList();\n        }\n\n        String rule = \"Job requested placement in resource pools: \" + resourcePoolNames;\n        return resourcePoolNames.stream().map(name ->\n                ResourcePoolAssignment.newBuilder().withResourcePoolName(name).withRule(rule).build()\n        ).collect(Collectors.toList());\n    }", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "ExplicitJobPodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false, "invocations": ["splitByComma", "get", "getAttributes", "getJobDescriptor", "isEmpty", "emptyList", "collect", "map", "stream", "build", "withRule", "withResourcePoolName", "newBuilder", "toList"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}