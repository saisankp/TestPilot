{"test_class": {"identifier": "BrokerAuthenticatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/apache/iotdb/db/mqtt/BrokerAuthenticatorTest.java"}, "test_case": {"identifier": "checkValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkValid() {\n        BrokerAuthenticator authenticator = new BrokerAuthenticator();\n        assertTrue(authenticator.checkValid(null, \"root\", \"root\".getBytes()));\n        assertFalse(authenticator.checkValid(null, \"\", \"foo\".getBytes()));\n        assertFalse(authenticator.checkValid(null, \"root\", null));\n        assertFalse(authenticator.checkValid(null, \"foo\", \"foo\".getBytes()));\n    }", "signature": "void checkValid()", "full_signature": "@Test public void checkValid()", "class_method_signature": "BrokerAuthenticatorTest.checkValid()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "checkValid", "getBytes", "assertFalse", "checkValid", "getBytes", "assertFalse", "checkValid", "assertFalse", "checkValid", "getBytes"]}, "focal_class": {"identifier": "BrokerAuthenticator", "superclass": "", "interfaces": "implements IAuthenticator", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BrokerAuthenticator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BrokerAuthenticator.class)", "var_name": "LOG"}], "methods": [{"identifier": "checkValid", "parameters": "(String clientId, String username, byte[] password)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkValid(String clientId, String username, byte[] password)", "full_signature": "@Override public boolean checkValid(String clientId, String username, byte[] password)", "class_method_signature": "BrokerAuthenticator.checkValid(String clientId, String username, byte[] password)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/iotdb/db/mqtt/BrokerAuthenticator.java"}, "focal_method": {"identifier": "checkValid", "parameters": "(String clientId, String username, byte[] password)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkValid(String clientId, String username, byte[] password) {\n        if (StringUtils.isBlank(username) || password == null) {\n            return false;\n        }\n\n        try {\n            IAuthorizer authorizer = BasicAuthorizer.getInstance();\n            return authorizer.login(username, new String(password));\n        } catch (AuthException e) {\n            LOG.info(\"meet error while logging in.\", e);\n            return false;\n        }\n    }", "signature": "boolean checkValid(String clientId, String username, byte[] password)", "full_signature": "@Override public boolean checkValid(String clientId, String username, byte[] password)", "class_method_signature": "BrokerAuthenticator.checkValid(String clientId, String username, byte[] password)", "testcase": false, "constructor": false, "invocations": ["isBlank", "getInstance", "login", "info"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}