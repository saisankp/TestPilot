{"test_class": {"identifier": "SetMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/common/SetMapTest.java"}, "test_case": {"identifier": "testPutValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutValues()\n    {\n        SetMap<String, Integer> map = new SetMap<>();\n\n        map.putValues( \"a\", Sets.newHashSet( 1, 2, 3 ) );\n        map.putValues( \"a\", Sets.newHashSet( 3, 4 ) );\n        map.putValues( \"b\", Sets.newHashSet( 5, 6 ) );\n        \n        assertEquals( Sets.newHashSet( 1, 2, 3, 4 ), map.get( \"a\" ) );\n        assertEquals( Sets.newHashSet( 5, 6 ), map.get( \"b\" ) );\n    }", "signature": "void testPutValues()", "full_signature": "@Test public void testPutValues()", "class_method_signature": "SetMapTest.testPutValues()", "testcase": true, "constructor": false, "invocations": ["putValues", "newHashSet", "putValues", "newHashSet", "putValues", "newHashSet", "assertEquals", "newHashSet", "get", "assertEquals", "newHashSet", "get"]}, "focal_class": {"identifier": "SetMap", "superclass": "extends HashMap<T, Set<V>>", "interfaces": "", "fields": [], "methods": [{"identifier": "SetMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " SetMap()", "full_signature": "public  SetMap()", "class_method_signature": "SetMap.SetMap()", "testcase": false, "constructor": true}, {"identifier": "SetMap", "parameters": "( SetMap<T, V> setMap )", "modifiers": "public", "return": "", "signature": " SetMap( SetMap<T, V> setMap )", "full_signature": "public  SetMap( SetMap<T, V> setMap )", "class_method_signature": "SetMap.SetMap( SetMap<T, V> setMap )", "testcase": false, "constructor": true}, {"identifier": "putValue", "parameters": "( T key, V value )", "modifiers": "public", "return": "Set<V>", "signature": "Set<V> putValue( T key, V value )", "full_signature": "public Set<V> putValue( T key, V value )", "class_method_signature": "SetMap.putValue( T key, V value )", "testcase": false, "constructor": false}, {"identifier": "putValues", "parameters": "( T key, Set<V> values )", "modifiers": "public", "return": "Set<V>", "signature": "Set<V> putValues( T key, Set<V> values )", "full_signature": "public Set<V> putValues( T key, Set<V> values )", "class_method_signature": "SetMap.putValues( T key, Set<V> values )", "testcase": false, "constructor": false}, {"identifier": "putValues", "parameters": "( SetMap<T, V> setMap )", "modifiers": "public", "return": "void", "signature": "void putValues( SetMap<T, V> setMap )", "full_signature": "public void putValues( SetMap<T, V> setMap )", "class_method_signature": "SetMap.putValues( SetMap<T, V> setMap )", "testcase": false, "constructor": false}, {"identifier": "getSetMap", "parameters": "( Set<V> values, Function<V, T> keyMapper )", "modifiers": "public static", "return": "SetMap<T, V>", "signature": "SetMap<T, V> getSetMap( Set<V> values, Function<V, T> keyMapper )", "full_signature": "public static SetMap<T, V> getSetMap( Set<V> values, Function<V, T> keyMapper )", "class_method_signature": "SetMap.getSetMap( Set<V> values, Function<V, T> keyMapper )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/common/SetMap.java"}, "focal_method": {"identifier": "putValues", "parameters": "( T key, Set<V> values )", "modifiers": "public", "return": "Set<V>", "body": "public Set<V> putValues( T key, Set<V> values )\n    {\n        Set<V> set = this.get( key );\n        set = set == null ? new HashSet<>() : set;\n        set.addAll( values );\n        return super.put( key, set );\n    }", "signature": "Set<V> putValues( T key, Set<V> values )", "full_signature": "public Set<V> putValues( T key, Set<V> values )", "class_method_signature": "SetMap.putValues( T key, Set<V> values )", "testcase": false, "constructor": false, "invocations": ["get", "addAll", "put"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}