{"test_class": {"identifier": "StCompilerTest", "superclass": "extends AbstractCompilerTest", "interfaces": "", "fields": [], "file": "protostuff-generator/src/test/java/io/protostuff/generator/StCompilerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test @Disabled public", "return": "void", "body": "@Test\n    @Disabled\n    public void test() throws Exception {\n        Importer importer = injector.getInstance(Importer.class);\n        ProtoContext context = importer.importFile(new ClasspathFileReader(), \"protostuff_unittest/messages_sample.proto\");\n        Proto proto = context.getProto();\n        StCompilerFactory compilerFactory = injector.getInstance(StCompilerFactory.class);\n        ProtoCompiler compiler = compilerFactory.create(\"io/protostuff/generator/proto/proto3.stg\");\n        Module module = ImmutableModule.builder()\n                .addProtos(proto)\n                .output(\"./\")\n                .usageIndex(UsageIndex.build(Collections.emptyList()))\n                .build();\n        compiler.compile(module);\n    }", "signature": "void test()", "full_signature": "@Test @Disabled public void test()", "class_method_signature": "StCompilerTest.test()", "testcase": true, "constructor": false, "invocations": ["getInstance", "importFile", "getProto", "getInstance", "create", "build", "usageIndex", "output", "addProtos", "builder", "build", "emptyList", "compile"]}, "focal_class": {"identifier": "StCompiler", "superclass": "extends AbstractProtoCompiler", "interfaces": "", "fields": [{"original_string": "private static final String MODULE = \"module\";", "modifier": "private static final", "type": "String", "declarator": "MODULE = \"module\"", "var_name": "MODULE"}, {"original_string": "private static final String MODULE_COMPILER_ENABLED = \"module_compiler_enabled\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_COMPILER_ENABLED = \"module_compiler_enabled\"", "var_name": "MODULE_COMPILER_ENABLED"}, {"original_string": "private static final String MODULE_COMPILER_TEMPLATE = \"module_compiler_template\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_COMPILER_TEMPLATE = \"module_compiler_template\"", "var_name": "MODULE_COMPILER_TEMPLATE"}, {"original_string": "private static final String MODULE_COMPILER_OUTPUT = \"module_compiler_output\";", "modifier": "private static final", "type": "String", "declarator": "MODULE_COMPILER_OUTPUT = \"module_compiler_output\"", "var_name": "MODULE_COMPILER_OUTPUT"}, {"original_string": "private static final String PROTO = \"proto\";", "modifier": "private static final", "type": "String", "declarator": "PROTO = \"proto\"", "var_name": "PROTO"}, {"original_string": "private static final String PROTO_COMPILER_ENABLED = \"proto_compiler_enabled\";", "modifier": "private static final", "type": "String", "declarator": "PROTO_COMPILER_ENABLED = \"proto_compiler_enabled\"", "var_name": "PROTO_COMPILER_ENABLED"}, {"original_string": "private static final String PROTO_COMPILER_TEMPLATE = \"proto_compiler_template\";", "modifier": "private static final", "type": "String", "declarator": "PROTO_COMPILER_TEMPLATE = \"proto_compiler_template\"", "var_name": "PROTO_COMPILER_TEMPLATE"}, {"original_string": "private static final String PROTO_COMPILER_OUTPUT = \"proto_compiler_output\";", "modifier": "private static final", "type": "String", "declarator": "PROTO_COMPILER_OUTPUT = \"proto_compiler_output\"", "var_name": "PROTO_COMPILER_OUTPUT"}, {"original_string": "private static final String MESSAGE = \"message\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE = \"message\"", "var_name": "MESSAGE"}, {"original_string": "private static final String MESSAGE_COMPILER_ENABLED = \"message_compiler_enabled\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_COMPILER_ENABLED = \"message_compiler_enabled\"", "var_name": "MESSAGE_COMPILER_ENABLED"}, {"original_string": "private static final String MESSAGE_COMPILER_TEMPLATE = \"message_compiler_template\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_COMPILER_TEMPLATE = \"message_compiler_template\"", "var_name": "MESSAGE_COMPILER_TEMPLATE"}, {"original_string": "private static final String MESSAGE_COMPILER_OUTPUT = \"message_compiler_output\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_COMPILER_OUTPUT = \"message_compiler_output\"", "var_name": "MESSAGE_COMPILER_OUTPUT"}, {"original_string": "private static final String ENUM = \"enum\";", "modifier": "private static final", "type": "String", "declarator": "ENUM = \"enum\"", "var_name": "ENUM"}, {"original_string": "private static final String ENUM_COMPILER_ENABLED = \"enum_compiler_enabled\";", "modifier": "private static final", "type": "String", "declarator": "ENUM_COMPILER_ENABLED = \"enum_compiler_enabled\"", "var_name": "ENUM_COMPILER_ENABLED"}, {"original_string": "private static final String ENUM_COMPILER_TEMPLATE = \"enum_compiler_template\";", "modifier": "private static final", "type": "String", "declarator": "ENUM_COMPILER_TEMPLATE = \"enum_compiler_template\"", "var_name": "ENUM_COMPILER_TEMPLATE"}, {"original_string": "private static final String ENUM_COMPILER_OUTPUT = \"enum_compiler_output\";", "modifier": "private static final", "type": "String", "declarator": "ENUM_COMPILER_OUTPUT = \"enum_compiler_output\"", "var_name": "ENUM_COMPILER_OUTPUT"}, {"original_string": "private static final String SERVICE = \"service\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE = \"service\"", "var_name": "SERVICE"}, {"original_string": "private static final String SERVICE_COMPILER_ENABLED = \"service_compiler_enabled\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_COMPILER_ENABLED = \"service_compiler_enabled\"", "var_name": "SERVICE_COMPILER_ENABLED"}, {"original_string": "private static final String SERVICE_COMPILER_TEMPLATE = \"service_compiler_template\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_COMPILER_TEMPLATE = \"service_compiler_template\"", "var_name": "SERVICE_COMPILER_TEMPLATE"}, {"original_string": "private static final String SERVICE_COMPILER_OUTPUT = \"service_compiler_output\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_COMPILER_OUTPUT = \"service_compiler_output\"", "var_name": "SERVICE_COMPILER_OUTPUT"}, {"original_string": "private final STGroup stGroup;", "modifier": "private final", "type": "STGroup", "declarator": "stGroup", "var_name": "stGroup"}], "methods": [{"identifier": "StCompiler", "parameters": "(OutputStreamFactory outputStreamFactory,\n                      @Assisted String templateFileName)", "modifiers": "@Inject public", "return": "", "signature": " StCompiler(OutputStreamFactory outputStreamFactory,\n                      @Assisted String templateFileName)", "full_signature": "@Inject public  StCompiler(OutputStreamFactory outputStreamFactory,\n                      @Assisted String templateFileName)", "class_method_signature": "StCompiler.StCompiler(OutputStreamFactory outputStreamFactory,\n                      @Assisted String templateFileName)", "testcase": false, "constructor": true}, {"identifier": "getStGroup", "parameters": "()", "modifiers": "final", "return": "STGroup", "signature": "STGroup getStGroup()", "full_signature": "final STGroup getStGroup()", "class_method_signature": "StCompiler.getStGroup()", "testcase": false, "constructor": false}, {"identifier": "compileModule", "parameters": "(Module module, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void compileModule(Module module, Writer writer)", "full_signature": "@Override protected void compileModule(Module module, Writer writer)", "class_method_signature": "StCompiler.compileModule(Module module, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "compileProto", "parameters": "(Proto proto, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void compileProto(Proto proto, Writer writer)", "full_signature": "@Override protected void compileProto(Proto proto, Writer writer)", "class_method_signature": "StCompiler.compileProto(Proto proto, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "compileMessage", "parameters": "(Message message, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void compileMessage(Message message, Writer writer)", "full_signature": "@Override protected void compileMessage(Message message, Writer writer)", "class_method_signature": "StCompiler.compileMessage(Message message, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "compileEnum", "parameters": "(io.protostuff.compiler.model.Enum anEnum, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void compileEnum(io.protostuff.compiler.model.Enum anEnum, Writer writer)", "full_signature": "@Override protected void compileEnum(io.protostuff.compiler.model.Enum anEnum, Writer writer)", "class_method_signature": "StCompiler.compileEnum(io.protostuff.compiler.model.Enum anEnum, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "compileService", "parameters": "(Service service, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void compileService(Service service, Writer writer)", "full_signature": "@Override protected void compileService(Service service, Writer writer)", "class_method_signature": "StCompiler.compileService(Service service, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "compile", "parameters": "(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "modifiers": "protected", "return": "void", "signature": "void compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "full_signature": "protected void compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "class_method_signature": "StCompiler.compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "canProcessModule", "parameters": "(Module module)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canProcessModule(Module module)", "full_signature": "@Override protected boolean canProcessModule(Module module)", "class_method_signature": "StCompiler.canProcessModule(Module module)", "testcase": false, "constructor": false}, {"identifier": "canProcessProto", "parameters": "(Proto proto)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canProcessProto(Proto proto)", "full_signature": "@Override protected boolean canProcessProto(Proto proto)", "class_method_signature": "StCompiler.canProcessProto(Proto proto)", "testcase": false, "constructor": false}, {"identifier": "canProcessMessage", "parameters": "(Message message)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canProcessMessage(Message message)", "full_signature": "@Override protected boolean canProcessMessage(Message message)", "class_method_signature": "StCompiler.canProcessMessage(Message message)", "testcase": false, "constructor": false}, {"identifier": "canProcessEnum", "parameters": "(Enum anEnum)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canProcessEnum(Enum anEnum)", "full_signature": "@Override protected boolean canProcessEnum(Enum anEnum)", "class_method_signature": "StCompiler.canProcessEnum(Enum anEnum)", "testcase": false, "constructor": false}, {"identifier": "canProcessService", "parameters": "(Service service)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canProcessService(Service service)", "full_signature": "@Override protected boolean canProcessService(Service service)", "class_method_signature": "StCompiler.canProcessService(Service service)", "testcase": false, "constructor": false}, {"identifier": "getModuleOutputFileName", "parameters": "(Module module)", "modifiers": "@Override protected", "return": "String", "signature": "String getModuleOutputFileName(Module module)", "full_signature": "@Override protected String getModuleOutputFileName(Module module)", "class_method_signature": "StCompiler.getModuleOutputFileName(Module module)", "testcase": false, "constructor": false}, {"identifier": "getProtoOutputFileName", "parameters": "(Proto proto)", "modifiers": "@Override protected", "return": "String", "signature": "String getProtoOutputFileName(Proto proto)", "full_signature": "@Override protected String getProtoOutputFileName(Proto proto)", "class_method_signature": "StCompiler.getProtoOutputFileName(Proto proto)", "testcase": false, "constructor": false}, {"identifier": "getMessageOutputFileName", "parameters": "(Message message)", "modifiers": "@Override protected", "return": "String", "signature": "String getMessageOutputFileName(Message message)", "full_signature": "@Override protected String getMessageOutputFileName(Message message)", "class_method_signature": "StCompiler.getMessageOutputFileName(Message message)", "testcase": false, "constructor": false}, {"identifier": "getEnumOutputFileName", "parameters": "(Enum anEnum)", "modifiers": "@Override protected", "return": "String", "signature": "String getEnumOutputFileName(Enum anEnum)", "full_signature": "@Override protected String getEnumOutputFileName(Enum anEnum)", "class_method_signature": "StCompiler.getEnumOutputFileName(Enum anEnum)", "testcase": false, "constructor": false}, {"identifier": "getServiceOutputFileName", "parameters": "(Service service)", "modifiers": "@Override protected", "return": "String", "signature": "String getServiceOutputFileName(Service service)", "full_signature": "@Override protected String getServiceOutputFileName(Service service)", "class_method_signature": "StCompiler.getServiceOutputFileName(Service service)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String stName, String arg, Object value)", "modifiers": "private", "return": "boolean", "signature": "boolean getBoolean(String stName, String arg, Object value)", "full_signature": "private boolean getBoolean(String stName, String arg, Object value)", "class_method_signature": "StCompiler.getBoolean(String stName, String arg, Object value)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String stName, String arg, Object value)", "modifiers": "private", "return": "String", "signature": "String getString(String stName, String arg, Object value)", "full_signature": "private String getString(String stName, String arg, Object value)", "class_method_signature": "StCompiler.getString(String stName, String arg, Object value)", "testcase": false, "constructor": false}], "file": "protostuff-generator/src/main/java/io/protostuff/generator/StCompiler.java"}, "focal_method": {"identifier": "compile", "parameters": "(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "modifiers": "protected", "return": "void", "body": "protected void compile(String templateName, String templateArgName, Object templateArgValue, Writer writer) {\n        ST st = stGroup.getInstanceOf(templateName);\n        if (st == null) {\n            throw new GeneratorException(\"Template %s is not defined\", templateName);\n        }\n        st.add(templateArgName, templateArgValue);\n        String result = st.render();\n        try {\n            writer.append(result);\n        } catch (IOException e) {\n            throw new GeneratorException(\"Could not write file: %s\", e.getMessage(), e);\n        }\n    }", "signature": "void compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "full_signature": "protected void compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "class_method_signature": "StCompiler.compile(String templateName, String templateArgName, Object templateArgValue, Writer writer)", "testcase": false, "constructor": false, "invocations": ["getInstanceOf", "add", "render", "append", "getMessage"]}, "repository": {"repo_id": 32651977, "url": "https://github.com/protostuff/protostuff-compiler", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 30, "size": 1539, "license": "licensed"}}