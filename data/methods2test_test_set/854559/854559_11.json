{"test_class": {"identifier": "UserEventHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UserViewRepository userViewRepository = mock(UserViewRepository.class);", "modifier": "private final", "type": "UserViewRepository", "declarator": "userViewRepository = mock(UserViewRepository.class)", "var_name": "userViewRepository"}, {"original_string": "private UserEventHandler testSubject;", "modifier": "private", "type": "UserEventHandler", "declarator": "testSubject", "var_name": "testSubject"}], "file": "users-query/src/test/java/org/axonframework/samples/trader/query/users/UserEventHandlerTest.java"}, "test_case": {"identifier": "testOnUserCreatedEventAnUserViewIsSaved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnUserCreatedEventAnUserViewIsSaved() {\n        UserId expectedUserId = new UserId();\n        String expectedName = \"name\";\n        String expectedUserName = \"userName\";\n\n        UserCreatedEvent testEvent = new UserCreatedEvent(expectedUserId, expectedName, expectedUserName, \"password\");\n\n        testSubject.on(testEvent);\n\n        ArgumentCaptor<UserView> userViewCaptor = ArgumentCaptor.forClass(UserView.class);\n\n        verify(userViewRepository).save(userViewCaptor.capture());\n\n        UserView result = userViewCaptor.getValue();\n        assertNotNull(result);\n        assertEquals(expectedUserId.getIdentifier(), result.getUserId());\n        assertEquals(expectedName, result.getName());\n        assertEquals(expectedUserName, result.getUserName());\n    }", "signature": "void testOnUserCreatedEventAnUserViewIsSaved()", "full_signature": "@Test public void testOnUserCreatedEventAnUserViewIsSaved()", "class_method_signature": "UserEventHandlerTest.testOnUserCreatedEventAnUserViewIsSaved()", "testcase": true, "constructor": false, "invocations": ["on", "forClass", "save", "verify", "capture", "getValue", "assertNotNull", "assertEquals", "getIdentifier", "getUserId", "assertEquals", "getName", "assertEquals", "getUserName"]}, "focal_class": {"identifier": "UserEventHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UserViewRepository userRepository;", "modifier": "private final", "type": "UserViewRepository", "declarator": "userRepository", "var_name": "userRepository"}], "methods": [{"identifier": "UserEventHandler", "parameters": "(UserViewRepository userRepository)", "modifiers": "@Autowired public", "return": "", "signature": " UserEventHandler(UserViewRepository userRepository)", "full_signature": "@Autowired public  UserEventHandler(UserViewRepository userRepository)", "class_method_signature": "UserEventHandler.UserEventHandler(UserViewRepository userRepository)", "testcase": false, "constructor": true}, {"identifier": "on", "parameters": "(UserCreatedEvent event)", "modifiers": "@EventHandler public", "return": "void", "signature": "void on(UserCreatedEvent event)", "full_signature": "@EventHandler public void on(UserCreatedEvent event)", "class_method_signature": "UserEventHandler.on(UserCreatedEvent event)", "testcase": false, "constructor": false}], "file": "users-query/src/main/java/org/axonframework/samples/trader/query/users/UserEventHandler.java"}, "focal_method": {"identifier": "on", "parameters": "(UserCreatedEvent event)", "modifiers": "@EventHandler public", "return": "void", "body": "@EventHandler\n    public void on(UserCreatedEvent event) {\n        UserView userView = new UserView();\n\n        userView.setIdentifier(event.getUserId().getIdentifier());\n        userView.setName(event.getName());\n        userView.setUsername(event.getUsername());\n        userView.setPassword(event.getPassword());\n\n        userRepository.save(userView);\n    }", "signature": "void on(UserCreatedEvent event)", "full_signature": "@EventHandler public void on(UserCreatedEvent event)", "class_method_signature": "UserEventHandler.on(UserCreatedEvent event)", "testcase": false, "constructor": false, "invocations": ["setIdentifier", "getIdentifier", "getUserId", "setName", "getName", "setUsername", "getUsername", "setPassword", "getPassword", "save"]}, "repository": {"repo_id": 854559, "url": "https://github.com/AxonFramework/Axon-trader", "language": "Java", "is_fork": false, "fork_count": 178, "stargazer_count": 356, "size": 1455, "license": "licensed"}}