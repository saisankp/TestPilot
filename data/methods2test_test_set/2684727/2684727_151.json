{"test_class": {"identifier": "IntentImportInformationPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "IntentImportInformationPresenter presenter;", "modifier": "", "type": "IntentImportInformationPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    IntentImportInformationView view;", "modifier": "@Mock", "type": "IntentImportInformationView", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    IntentImportInformationInteractor interactor;", "modifier": "@Mock", "type": "IntentImportInformationInteractor", "declarator": "interactor", "var_name": "interactor"}, {"original_string": "@Mock\n    IntentImportProvider intentImportProvider;", "modifier": "@Mock", "type": "IntentImportProvider", "declarator": "intentImportProvider", "var_name": "intentImportProvider"}, {"original_string": "@Mock\n    NavigationHandler<SmartReceiptsActivity> navigationHandler;", "modifier": "@Mock", "type": "NavigationHandler<SmartReceiptsActivity>", "declarator": "navigationHandler", "var_name": "navigationHandler"}, {"original_string": "@Mock\n    Intent intent;", "modifier": "@Mock", "type": "Intent", "declarator": "intent", "var_name": "intent"}], "file": "app/src/test/java/co/smartreceipts/android/imports/intents/widget/info/IntentImportInformationPresenterTest.java"}, "test_case": {"identifier": "errorsDisplayFatalView", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void errorsDisplayFatalView() {\n        when(interactor.process(intent)).thenReturn(Observable.error(new Exception(\"test\")));\n        presenter.subscribe();\n\n        verify(view).presentIntentImportFatalError();\n        verifyNoMoreInteractions(view);\n        verifyZeroInteractions(navigationHandler);\n    }", "signature": "void errorsDisplayFatalView()", "full_signature": "@Test public void errorsDisplayFatalView()", "class_method_signature": "IntentImportInformationPresenterTest.errorsDisplayFatalView()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "process", "error", "subscribe", "presentIntentImportFatalError", "verify", "verifyNoMoreInteractions", "verifyZeroInteractions"]}, "focal_class": {"identifier": "IntentImportInformationPresenter", "superclass": "extends BaseViperPresenter<IntentImportInformationView, IntentImportInformationInteractor>", "interfaces": "", "fields": [{"original_string": "private final IntentImportProvider intentImportProvider;", "modifier": "private final", "type": "IntentImportProvider", "declarator": "intentImportProvider", "var_name": "intentImportProvider"}, {"original_string": "private final NavigationHandler<SmartReceiptsActivity> navigationHandler;", "modifier": "private final", "type": "NavigationHandler<SmartReceiptsActivity>", "declarator": "navigationHandler", "var_name": "navigationHandler"}], "methods": [{"identifier": "IntentImportInformationPresenter", "parameters": "(@NonNull IntentImportInformationView view, @NonNull IntentImportInformationInteractor interactor,\n                                            @NonNull IntentImportProvider intentImportProvider,\n                                            @NonNull NavigationHandler<SmartReceiptsActivity> navigationHandler)", "modifiers": "@Inject public", "return": "", "signature": " IntentImportInformationPresenter(@NonNull IntentImportInformationView view, @NonNull IntentImportInformationInteractor interactor,\n                                            @NonNull IntentImportProvider intentImportProvider,\n                                            @NonNull NavigationHandler<SmartReceiptsActivity> navigationHandler)", "full_signature": "@Inject public  IntentImportInformationPresenter(@NonNull IntentImportInformationView view, @NonNull IntentImportInformationInteractor interactor,\n                                            @NonNull IntentImportProvider intentImportProvider,\n                                            @NonNull NavigationHandler<SmartReceiptsActivity> navigationHandler)", "class_method_signature": "IntentImportInformationPresenter.IntentImportInformationPresenter(@NonNull IntentImportInformationView view, @NonNull IntentImportInformationInteractor interactor,\n                                            @NonNull IntentImportProvider intentImportProvider,\n                                            @NonNull NavigationHandler<SmartReceiptsActivity> navigationHandler)", "testcase": false, "constructor": true}, {"identifier": "subscribe", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void subscribe()", "full_signature": "@Override public void subscribe()", "class_method_signature": "IntentImportInformationPresenter.subscribe()", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/imports/intents/widget/info/IntentImportInformationPresenter.java"}, "focal_method": {"identifier": "subscribe", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void subscribe() {\n        compositeDisposable.add(intentImportProvider.getIntentMaybe()\n                .flatMapObservable(interactor::process)\n                .observeOn(AndroidSchedulers.mainThread())\n                .filter(uiIndicator -> uiIndicator.getState() == UiIndicator.State.Success)\n                .subscribe(uiIndicator -> {\n                            final IntentImportResult result = uiIndicator.getData().get();\n                            if (result.getFileType() == FileType.Smr) {\n                                navigationHandler.showDialog(ImportLocalBackupDialogFragment.newInstance(result.getUri()));\n                            } else {\n                                view.presentIntentImportInformation(result.getFileType());\n                            }\n                        },\n                        throwable -> {\n                            Logger.error(IntentImportInformationPresenter.this, \"Failed to process file import\", throwable);\n                            view.presentIntentImportFatalError();\n                        }));\n    }", "signature": "void subscribe()", "full_signature": "@Override public void subscribe()", "class_method_signature": "IntentImportInformationPresenter.subscribe()", "testcase": false, "constructor": false, "invocations": ["add", "subscribe", "filter", "observeOn", "flatMapObservable", "getIntentMaybe", "mainThread", "getState", "get", "getData", "getFileType", "showDialog", "newInstance", "getUri", "presentIntentImportInformation", "getFileType", "error", "presentIntentImportFatalError"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}