{"test_class": {"identifier": "BaseComQueueTest", "superclass": "", "interfaces": "implements Serializable", "fields": [], "file": "core/src/test/java/com/alibaba/alink/common/comqueue/BaseComQueueTest.java"}, "test_case": {"identifier": "optimize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void optimize() {\n\t\tIterativeComQueue queue = new IterativeComQueue()\n\t\t\t.add(new MyComputeFunction())\n\t\t\t.add(new MyComputeFunction())\n\t\t\t.add(new MyCommunicateFunction())\n\t\t\t.add(new MyCommunicateFunction())\n\t\t\t.add(new MyComputeFunction())\n\t\t\t.add(new MyComputeFunction())\n\t\t\t.add(new MyCommunicateFunction());\n\n\t\tqueue.exec();\n\n\t\tAssert.assertTrue(\n\t\t\tqueue.toString().matches(\n\t\t\t\t\"\\\\{\\\"completeResult\\\":null,\\\"maxIter\\\":2147483647,\\\"sessionId\\\":[0-9]*\" +\n\t\t\t\t\t\",\\\"queue\\\":\\\"ChainedComputation,MyCommunicateFunction,MyCommunicateFunction,\" +\n\t\t\t\t\t\"ChainedComputation,MyCommunicateFunction\\\",\\\"compareCriterion\\\":null\\\\}\"));\n\t}", "signature": "void optimize()", "full_signature": "@Test public void optimize()", "class_method_signature": "BaseComQueueTest.optimize()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "exec", "assertTrue", "matches", "toString"]}, "focal_class": {"identifier": "BaseComQueue", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final List<ComQueueItem> queue = new ArrayList<>();", "modifier": "private final", "type": "List<ComQueueItem>", "declarator": "queue = new ArrayList<>()", "var_name": "queue"}, {"original_string": "private final int sessionId = SessionSharedObjs.getNewSessionId();", "modifier": "private final", "type": "int", "declarator": "sessionId = SessionSharedObjs.getNewSessionId()", "var_name": "sessionId"}, {"original_string": "private CompareCriterionFunction compareCriterion;", "modifier": "private", "type": "CompareCriterionFunction", "declarator": "compareCriterion", "var_name": "compareCriterion"}, {"original_string": "private CompleteResultFunction completeResult;", "modifier": "private", "type": "CompleteResultFunction", "declarator": "completeResult", "var_name": "completeResult"}, {"original_string": "private int maxIter = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "maxIter = Integer.MAX_VALUE", "var_name": "maxIter"}, {"original_string": "private transient List<String> cacheDataObjNames = new ArrayList<>();", "modifier": "private transient", "type": "List<String>", "declarator": "cacheDataObjNames = new ArrayList<>()", "var_name": "cacheDataObjNames"}, {"original_string": "private transient DataSet<byte[]> cacheDataRel;", "modifier": "private transient", "type": "DataSet<byte[]>", "declarator": "cacheDataRel", "var_name": "cacheDataRel"}, {"original_string": "private transient ExecutionEnvironment executionEnvironment;", "modifier": "private transient", "type": "ExecutionEnvironment", "declarator": "executionEnvironment", "var_name": "executionEnvironment"}], "methods": [{"identifier": "thisAsQ", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Q", "signature": "Q thisAsQ()", "full_signature": "@SuppressWarnings(\"unchecked\") private Q thisAsQ()", "class_method_signature": "BaseComQueue.thisAsQ()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(ComQueueItem com)", "modifiers": "public", "return": "Q", "signature": "Q add(ComQueueItem com)", "full_signature": "public Q add(ComQueueItem com)", "class_method_signature": "BaseComQueue.add(ComQueueItem com)", "testcase": false, "constructor": false}, {"identifier": "setCompareCriterionOfNode0", "parameters": "(CompareCriterionFunction compareCriterion)", "modifiers": "protected", "return": "Q", "signature": "Q setCompareCriterionOfNode0(CompareCriterionFunction compareCriterion)", "full_signature": "protected Q setCompareCriterionOfNode0(CompareCriterionFunction compareCriterion)", "class_method_signature": "BaseComQueue.setCompareCriterionOfNode0(CompareCriterionFunction compareCriterion)", "testcase": false, "constructor": false}, {"identifier": "closeWith", "parameters": "(CompleteResultFunction completeResult)", "modifiers": "public", "return": "Q", "signature": "Q closeWith(CompleteResultFunction completeResult)", "full_signature": "public Q closeWith(CompleteResultFunction completeResult)", "class_method_signature": "BaseComQueue.closeWith(CompleteResultFunction completeResult)", "testcase": false, "constructor": false}, {"identifier": "setMaxIter", "parameters": "(int maxIter)", "modifiers": "protected", "return": "Q", "signature": "Q setMaxIter(int maxIter)", "full_signature": "protected Q setMaxIter(int maxIter)", "class_method_signature": "BaseComQueue.setMaxIter(int maxIter)", "testcase": false, "constructor": false}, {"identifier": "initWithPartitionedData", "parameters": "(String objName, DataSet<T> data)", "modifiers": "public", "return": "Q", "signature": "Q initWithPartitionedData(String objName, DataSet<T> data)", "full_signature": "public Q initWithPartitionedData(String objName, DataSet<T> data)", "class_method_signature": "BaseComQueue.initWithPartitionedData(String objName, DataSet<T> data)", "testcase": false, "constructor": false}, {"identifier": "initWithBroadcastData", "parameters": "(String objName, DataSet<T> data)", "modifiers": "public", "return": "Q", "signature": "Q initWithBroadcastData(String objName, DataSet<T> data)", "full_signature": "public Q initWithBroadcastData(String objName, DataSet<T> data)", "class_method_signature": "BaseComQueue.initWithBroadcastData(String objName, DataSet<T> data)", "testcase": false, "constructor": false}, {"identifier": "initWithMLSessionId", "parameters": "(Long sessionId)", "modifiers": "public", "return": "Q", "signature": "Q initWithMLSessionId(Long sessionId)", "full_signature": "public Q initWithMLSessionId(Long sessionId)", "class_method_signature": "BaseComQueue.initWithMLSessionId(Long sessionId)", "testcase": false, "constructor": false}, {"identifier": "exec", "parameters": "()", "modifiers": "public", "return": "DataSet<Row>", "signature": "DataSet<Row> exec()", "full_signature": "public DataSet<Row> exec()", "class_method_signature": "BaseComQueue.exec()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BaseComQueue.toString()", "testcase": false, "constructor": false}, {"identifier": "serializeModel", "parameters": "(DataSet<byte[]> model)", "modifiers": "private static", "return": "DataSet<Row>", "signature": "DataSet<Row> serializeModel(DataSet<byte[]> model)", "full_signature": "private static DataSet<Row> serializeModel(DataSet<byte[]> model)", "class_method_signature": "BaseComQueue.serializeModel(DataSet<byte[]> model)", "testcase": false, "constructor": false}, {"identifier": "broadcastDataSet", "parameters": "(DataSet<T> data)", "modifiers": "private static", "return": "DataSet<T>", "signature": "DataSet<T> broadcastDataSet(DataSet<T> data)", "full_signature": "private static DataSet<T> broadcastDataSet(DataSet<T> data)", "class_method_signature": "BaseComQueue.broadcastDataSet(DataSet<T> data)", "testcase": false, "constructor": false}, {"identifier": "expandDataSet2MaxParallelism", "parameters": "(DataSet<T> data)", "modifiers": "private static", "return": "DataSet<T>", "signature": "DataSet<T> expandDataSet2MaxParallelism(DataSet<T> data)", "full_signature": "private static DataSet<T> expandDataSet2MaxParallelism(DataSet<T> data)", "class_method_signature": "BaseComQueue.expandDataSet2MaxParallelism(DataSet<T> data)", "testcase": false, "constructor": false}, {"identifier": "loopStartDataSet", "parameters": "(ExecutionEnvironment env)", "modifiers": "private", "return": "DataSet<byte[]>", "signature": "DataSet<byte[]> loopStartDataSet(ExecutionEnvironment env)", "full_signature": "private DataSet<byte[]> loopStartDataSet(ExecutionEnvironment env)", "class_method_signature": "BaseComQueue.loopStartDataSet(ExecutionEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "clearObjs", "parameters": "(DataSet<byte[]> raw)", "modifiers": "private", "return": "DataSet<byte[]>", "signature": "DataSet<byte[]> clearObjs(DataSet<byte[]> raw)", "full_signature": "private DataSet<byte[]> clearObjs(DataSet<byte[]> raw)", "class_method_signature": "BaseComQueue.clearObjs(DataSet<byte[]> raw)", "testcase": false, "constructor": false}, {"identifier": "createRelationshipAndCachedData", "parameters": "(DataSet<T> data, final String key)", "modifiers": "private", "return": "void", "signature": "void createRelationshipAndCachedData(DataSet<T> data, final String key)", "full_signature": "private void createRelationshipAndCachedData(DataSet<T> data, final String key)", "class_method_signature": "BaseComQueue.createRelationshipAndCachedData(DataSet<T> data, final String key)", "testcase": false, "constructor": false}, {"identifier": "optimize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void optimize()", "full_signature": "private void optimize()", "class_method_signature": "BaseComQueue.optimize()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/common/comqueue/BaseComQueue.java"}, "focal_method": {"identifier": "optimize", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void optimize() {\n\t\tif (queue.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tint current = 0;\n\t\tfor (int ahead = 1; ahead < queue.size(); ++ahead) {\n\t\t\tComQueueItem curItem = queue.get(current);\n\t\t\tComQueueItem aheadItem = queue.get(ahead);\n\n\t\t\tif (aheadItem instanceof ComputeFunction && curItem instanceof ComputeFunction) {\n\t\t\t\tif (curItem instanceof ChainedComputation) {\n\t\t\t\t\tqueue.set(current, ((ChainedComputation) curItem).add((ComputeFunction) aheadItem));\n\t\t\t\t} else {\n\t\t\t\t\tqueue.set(current, new ChainedComputation()\n\t\t\t\t\t\t.add((ComputeFunction) curItem)\n\t\t\t\t\t\t.add((ComputeFunction) aheadItem)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue.set(++current, aheadItem);\n\t\t\t}\n\t\t}\n\n\t\tqueue.subList(current + 1, queue.size()).clear();\n\t}", "signature": "void optimize()", "full_signature": "private void optimize()", "class_method_signature": "BaseComQueue.optimize()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "size", "get", "get", "set", "add", "set", "add", "add", "set", "clear", "subList", "size"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}