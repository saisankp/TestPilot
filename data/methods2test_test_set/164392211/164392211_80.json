{"test_class": {"identifier": "SeriesConcatTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/concat/SeriesConcatTest.java"}, "test_case": {"identifier": "testConcat_Array", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConcat_Array() {\n        Series<String> s1 = Series.forData(\"m\", \"n\");\n        Series<String> s2 = Series.forData(\"a\", \"b\");\n        Series<String> s3 = Series.forData(\"d\");\n\n        Series<String> c = SeriesConcat.concat(s1, s2, s3);\n        new SeriesAsserts(c).expectData(\"m\", \"n\", \"a\", \"b\", \"d\");\n    }", "signature": "void testConcat_Array()", "full_signature": "@Test public void testConcat_Array()", "class_method_signature": "SeriesConcatTest.testConcat_Array()", "testcase": true, "constructor": false, "invocations": ["forData", "forData", "forData", "concat", "expectData"]}, "focal_class": {"identifier": "SeriesConcat", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "concat", "parameters": "(Series<T>... concat)", "modifiers": "public static", "return": "Series<T>", "signature": "Series<T> concat(Series<T>... concat)", "full_signature": "public static Series<T> concat(Series<T>... concat)", "class_method_signature": "SeriesConcat.concat(Series<T>... concat)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(Iterable<Series<T>> concat)", "modifiers": "public static", "return": "Series<T>", "signature": "Series<T> concat(Iterable<Series<T>> concat)", "full_signature": "public static Series<T> concat(Iterable<Series<T>> concat)", "class_method_signature": "SeriesConcat.concat(Iterable<Series<T>> concat)", "testcase": false, "constructor": false}, {"identifier": "intConcat", "parameters": "(IntSeries... concat)", "modifiers": "public static", "return": "IntSeries", "signature": "IntSeries intConcat(IntSeries... concat)", "full_signature": "public static IntSeries intConcat(IntSeries... concat)", "class_method_signature": "SeriesConcat.intConcat(IntSeries... concat)", "testcase": false, "constructor": false}, {"identifier": "intConcat", "parameters": "(Iterable<IntSeries> concat)", "modifiers": "public static", "return": "IntSeries", "signature": "IntSeries intConcat(Iterable<IntSeries> concat)", "full_signature": "public static IntSeries intConcat(Iterable<IntSeries> concat)", "class_method_signature": "SeriesConcat.intConcat(Iterable<IntSeries> concat)", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/concat/SeriesConcat.java"}, "focal_method": {"identifier": "concat", "parameters": "(Series<T>... concat)", "modifiers": "public static", "return": "Series<T>", "body": "public static <T> Series<T> concat(Series<T>... concat) {\n        int h = 0;\n        for (Series<? extends T> s : concat) {\n            h += s.size();\n        }\n\n        T[] data = (T[]) new Object[h];\n        int offset = 0;\n        for (Series<? extends T> s : concat) {\n            int len = s.size();\n            s.copyTo(data, 0, offset, len);\n            offset += len;\n        }\n\n        return new ArraySeries<>(data);\n    }", "signature": "Series<T> concat(Series<T>... concat)", "full_signature": "public static Series<T> concat(Series<T>... concat)", "class_method_signature": "SeriesConcat.concat(Series<T>... concat)", "testcase": false, "constructor": false, "invocations": ["size", "size", "copyTo"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}