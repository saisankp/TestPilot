{"test_class": {"identifier": "SendThingMessageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ThingId THING_ID = ThingId.of(\"test.ns\", \"theThingId\");", "modifier": "private static final", "type": "ThingId", "declarator": "THING_ID = ThingId.of(\"test.ns\", \"theThingId\")", "var_name": "THING_ID"}, {"original_string": "private static final String SUBJECT = \"theSubject\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT = \"theSubject\"", "var_name": "SUBJECT"}, {"original_string": "private static final String CONTENT_TYPE = \"application/xml\";", "modifier": "private static final", "type": "String", "declarator": "CONTENT_TYPE = \"application/xml\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String CORRELATION_ID = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_ID = UUID.randomUUID().toString()", "var_name": "CORRELATION_ID"}, {"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(CORRELATION_ID).build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(CORRELATION_ID).build()", "var_name": "DITTO_HEADERS"}, {"original_string": "private static final String KNOWN_RAW_PAYLOAD_STR = \"<some>42</some>\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_RAW_PAYLOAD_STR = \"<some>42</some>\"", "var_name": "KNOWN_RAW_PAYLOAD_STR"}, {"original_string": "private static final byte[] KNOWN_RAW_PAYLOAD_BYTES = KNOWN_RAW_PAYLOAD_STR.getBytes(StandardCharsets.UTF_8);", "modifier": "private static final", "type": "byte[]", "declarator": "KNOWN_RAW_PAYLOAD_BYTES = KNOWN_RAW_PAYLOAD_STR.getBytes(StandardCharsets.UTF_8)", "var_name": "KNOWN_RAW_PAYLOAD_BYTES"}, {"original_string": "private static final Message<?> MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .build())\n            .payload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_BYTES))\n            .rawPayload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_BYTES))\n            .build();", "modifier": "private static final", "type": "Message<?>", "declarator": "MESSAGE = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .build())\n            .payload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_BYTES))\n            .rawPayload(ByteBuffer.wrap(KNOWN_RAW_PAYLOAD_BYTES))\n            .build()", "var_name": "MESSAGE"}, {"original_string": "private static final Message<?> MESSAGE_EMPTY_PAYLOAD = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .build())\n            .build();", "modifier": "private static final", "type": "Message<?>", "declarator": "MESSAGE_EMPTY_PAYLOAD = MessagesModelFactory.newMessageBuilder(\n            MessageHeaders.newBuilder(MessageDirection.TO, THING_ID, SUBJECT)\n                    .contentType(CONTENT_TYPE)\n                    .build())\n            .build()", "var_name": "MESSAGE_EMPTY_PAYLOAD"}, {"original_string": "private static final JsonObject KNOWN_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_PAYLOAD, JsonFactory.newValue(new String(Base64.getEncoder()\n                    .encode(KNOWN_RAW_PAYLOAD_BYTES), StandardCharsets.UTF_8))\n            )\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_PAYLOAD, JsonFactory.newValue(new String(Base64.getEncoder()\n                    .encode(KNOWN_RAW_PAYLOAD_BYTES), StandardCharsets.UTF_8))\n            )\n            .build()", "var_name": "KNOWN_MESSAGE_AS_JSON"}, {"original_string": "private static final JsonObject KNOWN_EMPTY_PAYLOAD_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_EMPTY_PAYLOAD_MESSAGE_AS_JSON = JsonFactory.newObjectBuilder()\n            .set(MessageCommand.JsonFields.JSON_MESSAGE_HEADERS, MESSAGE.getHeaders().toJson())\n            .build()", "var_name": "KNOWN_EMPTY_PAYLOAD_MESSAGE_AS_JSON"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendThingMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_MESSAGE_AS_JSON)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendThingMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_MESSAGE_AS_JSON)\n            .build()", "var_name": "KNOWN_JSON"}, {"original_string": "private static final JsonObject KNOWN_JSON_WITH_EMPTY_PAYLOAD = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendThingMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_EMPTY_PAYLOAD_MESSAGE_AS_JSON)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON_WITH_EMPTY_PAYLOAD = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SendThingMessage.TYPE)\n            .set(MessageCommand.JsonFields.JSON_THING_ID, THING_ID.toString())\n            .set(MessageCommand.JsonFields.JSON_MESSAGE, KNOWN_EMPTY_PAYLOAD_MESSAGE_AS_JSON)\n            .build()", "var_name": "KNOWN_JSON_WITH_EMPTY_PAYLOAD"}], "file": "signals/commands/messages/src/test/java/org/eclipse/ditto/signals/commands/messages/SendThingMessageTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final SendThingMessage<?> underTest =\n                SendThingMessage.of(THING_ID, MESSAGE, TestConstants.EMPTY_DITTO_HEADERS);\n        final JsonObject actualJson = underTest.toJson(FieldType.regularOrSpecial());\n\n        assertThat(actualJson).isEqualTo(KNOWN_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "SendThingMessageTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "toJson", "regularOrSpecial", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "SendThingMessage", "superclass": "extends AbstractMessageCommand<T, SendThingMessage<T>>", "interfaces": "", "fields": [{"original_string": "public static final String NAME = \"thingMessage\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"thingMessage\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}], "methods": [{"identifier": "SendThingMessage", "parameters": "(final ThingId thingId, final Message<T> message, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " SendThingMessage(final ThingId thingId, final Message<T> message, final DittoHeaders dittoHeaders)", "full_signature": "private  SendThingMessage(final ThingId thingId, final Message<T> message, final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.SendThingMessage(final ThingId thingId, final Message<T> message, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "SendThingMessage", "signature": "SendThingMessage setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public SendThingMessage setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "SendThingMessage<T>", "signature": "SendThingMessage<T> of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static SendThingMessage<T> of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final ThingId thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendThingMessage<T>", "signature": "SendThingMessage<T> of(final ThingId thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SendThingMessage<T> of(final ThingId thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.of(final ThingId thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendThingMessage<?>", "signature": "SendThingMessage<?> fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static SendThingMessage<?> fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SendThingMessage<?>", "signature": "SendThingMessage<?> fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static SendThingMessage<?> fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "SendThingMessage.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SendThingMessage.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/messages/src/main/java/org/eclipse/ditto/signals/commands/messages/SendThingMessage.java"}, "focal_method": {"identifier": "of", "parameters": "(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "SendThingMessage<T>", "body": "@Deprecated\n    public static <T> SendThingMessage<T> of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders) {\n        return of(ThingId.of(thingId), message, dittoHeaders);\n    }", "signature": "SendThingMessage<T> of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static SendThingMessage<T> of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SendThingMessage.of(final String thingId, final Message<T> message,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}