{"test_class": {"identifier": "DecimalValueFactoryTest", "superclass": "extends BaseValueFactoryTest", "interfaces": "", "fields": [{"original_string": "private DecimalValueFactory factory;", "modifier": "private", "type": "DecimalValueFactory", "declarator": "factory", "var_name": "factory"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/value/basic/DecimalValueFactoryTest.java"}, "test_case": {"identifier": "shouldCreateDecimalFromByteArrayContainingUtf8EncodingOfStringWithDecimal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateDecimalFromByteArrayContainingUtf8EncodingOfStringWithDecimal() throws Exception {\n        assertThat(factory.create(\"1\".getBytes(\"UTF-8\")), is(BigDecimal.valueOf(1l)));\n        assertThat(factory.create(\"-1.0\".getBytes(\"UTF-8\")), is(BigDecimal.valueOf(-1.d)));\n        assertThat(factory.create(\"100.000101\".getBytes(\"UTF-8\")), is(BigDecimal.valueOf(100.000101d)));\n    }", "signature": "void shouldCreateDecimalFromByteArrayContainingUtf8EncodingOfStringWithDecimal()", "full_signature": "@Test public void shouldCreateDecimalFromByteArrayContainingUtf8EncodingOfStringWithDecimal()", "class_method_signature": "DecimalValueFactoryTest.shouldCreateDecimalFromByteArrayContainingUtf8EncodingOfStringWithDecimal()", "testcase": true, "constructor": false, "invocations": ["assertThat", "create", "getBytes", "is", "valueOf", "assertThat", "create", "getBytes", "is", "valueOf", "assertThat", "create", "getBytes", "is", "valueOf"]}, "focal_class": {"identifier": "DecimalValueFactory", "superclass": "extends AbstractValueFactory<BigDecimal>", "interfaces": "", "fields": [], "methods": [{"identifier": "DecimalValueFactory", "parameters": "( TextDecoder decoder,\n                                ValueFactories factories )", "modifiers": "public", "return": "", "signature": " DecimalValueFactory( TextDecoder decoder,\n                                ValueFactories factories )", "full_signature": "public  DecimalValueFactory( TextDecoder decoder,\n                                ValueFactories factories )", "class_method_signature": "DecimalValueFactory.DecimalValueFactory( TextDecoder decoder,\n                                ValueFactories factories )", "testcase": false, "constructor": true}, {"identifier": "with", "parameters": "( ValueFactories valueFactories )", "modifiers": "@Override public", "return": "ValueFactory<BigDecimal>", "signature": "ValueFactory<BigDecimal> with( ValueFactories valueFactories )", "full_signature": "@Override public ValueFactory<BigDecimal> with( ValueFactories valueFactories )", "class_method_signature": "DecimalValueFactory.with( ValueFactories valueFactories )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( String value )", "full_signature": "@Override public BigDecimal create( String value )", "class_method_signature": "DecimalValueFactory.create( String value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String value,\n                              TextDecoder decoder )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( String value,\n                              TextDecoder decoder )", "full_signature": "@Override public BigDecimal create( String value,\n                              TextDecoder decoder )", "class_method_signature": "DecimalValueFactory.create( String value,\n                              TextDecoder decoder )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( int value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( int value )", "full_signature": "@Override public BigDecimal create( int value )", "class_method_signature": "DecimalValueFactory.create( int value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( long value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( long value )", "full_signature": "@Override public BigDecimal create( long value )", "class_method_signature": "DecimalValueFactory.create( long value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( boolean value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( boolean value )", "full_signature": "@Override public BigDecimal create( boolean value )", "class_method_signature": "DecimalValueFactory.create( boolean value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( float value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( float value )", "full_signature": "@Override public BigDecimal create( float value )", "class_method_signature": "DecimalValueFactory.create( float value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( double value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( double value )", "full_signature": "@Override public BigDecimal create( double value )", "class_method_signature": "DecimalValueFactory.create( double value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BigDecimal value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( BigDecimal value )", "full_signature": "@Override public BigDecimal create( BigDecimal value )", "class_method_signature": "DecimalValueFactory.create( BigDecimal value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Calendar value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Calendar value )", "full_signature": "@Override public BigDecimal create( Calendar value )", "class_method_signature": "DecimalValueFactory.create( Calendar value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Date value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Date value )", "full_signature": "@Override public BigDecimal create( Date value )", "class_method_signature": "DecimalValueFactory.create( Date value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( DateTime value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( DateTime value )", "full_signature": "@Override public BigDecimal create( DateTime value )", "class_method_signature": "DecimalValueFactory.create( DateTime value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Name value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Name value )", "full_signature": "@Override public BigDecimal create( Name value )", "class_method_signature": "DecimalValueFactory.create( Name value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Path value )", "full_signature": "@Override public BigDecimal create( Path value )", "class_method_signature": "DecimalValueFactory.create( Path value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path.Segment value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Path.Segment value )", "full_signature": "@Override public BigDecimal create( Path.Segment value )", "class_method_signature": "DecimalValueFactory.create( Path.Segment value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Reference value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( Reference value )", "full_signature": "@Override public BigDecimal create( Reference value )", "class_method_signature": "DecimalValueFactory.create( Reference value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( URI value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( URI value )", "full_signature": "@Override public BigDecimal create( URI value )", "class_method_signature": "DecimalValueFactory.create( URI value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( UUID value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( UUID value )", "full_signature": "@Override public BigDecimal create( UUID value )", "class_method_signature": "DecimalValueFactory.create( UUID value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( NodeKey value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( NodeKey value )", "full_signature": "@Override public BigDecimal create( NodeKey value )", "class_method_signature": "DecimalValueFactory.create( NodeKey value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( byte[] value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( byte[] value )", "full_signature": "@Override public BigDecimal create( byte[] value )", "class_method_signature": "DecimalValueFactory.create( byte[] value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BinaryValue value )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( BinaryValue value )", "full_signature": "@Override public BigDecimal create( BinaryValue value )", "class_method_signature": "DecimalValueFactory.create( BinaryValue value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( InputStream stream )", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal create( InputStream stream )", "full_signature": "@Override public BigDecimal create( InputStream stream )", "class_method_signature": "DecimalValueFactory.create( InputStream stream )", "testcase": false, "constructor": false}, {"identifier": "createEmptyArray", "parameters": "( int length )", "modifiers": "@Override public", "return": "BigDecimal[]", "signature": "BigDecimal[] createEmptyArray( int length )", "full_signature": "@Override public BigDecimal[] createEmptyArray( int length )", "class_method_signature": "DecimalValueFactory.createEmptyArray( int length )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/value/basic/DecimalValueFactory.java"}, "focal_method": {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "BigDecimal", "body": "@Override\n    public BigDecimal create( String value ) {\n        if (value == null) return null;\n        try {\n            return new BigDecimal(value.trim());\n        } catch (NumberFormatException err) {\n            throw new ValueFormatException(value, getPropertyType(),\n                                           GraphI18n.errorConvertingType.text(String.class.getSimpleName(),\n                                                                              BigDecimal.class.getSimpleName(),\n                                                                              value), err);\n        }\n    }", "signature": "BigDecimal create( String value )", "full_signature": "@Override public BigDecimal create( String value )", "class_method_signature": "DecimalValueFactory.create( String value )", "testcase": false, "constructor": false, "invocations": ["trim", "getPropertyType", "text", "getSimpleName", "getSimpleName"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}