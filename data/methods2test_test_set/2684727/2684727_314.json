{"test_class": {"identifier": "ReceiptBackupListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ReceiptBackupListener mListener;", "modifier": "", "type": "ReceiptBackupListener", "declarator": "mListener", "var_name": "mListener"}, {"original_string": "@Mock\n    DriveDatabaseManager mDriveDatabaseManager;", "modifier": "@Mock", "type": "DriveDatabaseManager", "declarator": "mDriveDatabaseManager", "var_name": "mDriveDatabaseManager"}, {"original_string": "@Mock\n    DriveReceiptsManager mDriveReceiptsManager;", "modifier": "@Mock", "type": "DriveReceiptsManager", "declarator": "mDriveReceiptsManager", "var_name": "mDriveReceiptsManager"}, {"original_string": "@Mock\n    Receipt mReceipt;", "modifier": "@Mock", "type": "Receipt", "declarator": "mReceipt", "var_name": "mReceipt"}, {"original_string": "@Mock\n    Receipt mOldReceipt;", "modifier": "@Mock", "type": "Receipt", "declarator": "mOldReceipt", "var_name": "mOldReceipt"}], "file": "app/src/test/java/co/smartreceipts/android/sync/drive/listeners/ReceiptBackupListenerTest.java"}, "test_case": {"identifier": "onSyncInsertSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onSyncInsertSuccess() {\n        mListener.onInsertSuccess(mReceipt, new DatabaseOperationMetadata(OperationFamilyType.Sync));\n        verify(mDriveDatabaseManager, never()).syncDatabase();\n        verify(mDriveReceiptsManager, never()).handleInsertOrUpdate(any(Receipt.class));\n    }", "signature": "void onSyncInsertSuccess()", "full_signature": "@Test public void onSyncInsertSuccess()", "class_method_signature": "ReceiptBackupListenerTest.onSyncInsertSuccess()", "testcase": true, "constructor": false, "invocations": ["onInsertSuccess", "syncDatabase", "verify", "never", "handleInsertOrUpdate", "verify", "never", "any"]}, "focal_class": {"identifier": "ReceiptBackupListener", "superclass": "extends DatabaseBackupListener<Receipt>", "interfaces": "", "fields": [{"original_string": "private final DriveReceiptsManager mDriveReceiptsManager;", "modifier": "private final", "type": "DriveReceiptsManager", "declarator": "mDriveReceiptsManager", "var_name": "mDriveReceiptsManager"}], "methods": [{"identifier": "ReceiptBackupListener", "parameters": "(@NonNull DriveDatabaseManager driveDatabaseManager, @NonNull DriveReceiptsManager driveReceiptsManager)", "modifiers": "public", "return": "", "signature": " ReceiptBackupListener(@NonNull DriveDatabaseManager driveDatabaseManager, @NonNull DriveReceiptsManager driveReceiptsManager)", "full_signature": "public  ReceiptBackupListener(@NonNull DriveDatabaseManager driveDatabaseManager, @NonNull DriveReceiptsManager driveReceiptsManager)", "class_method_signature": "ReceiptBackupListener.ReceiptBackupListener(@NonNull DriveDatabaseManager driveDatabaseManager, @NonNull DriveReceiptsManager driveReceiptsManager)", "testcase": false, "constructor": true}, {"identifier": "onInsertSuccess", "parameters": "(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override public void onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ReceiptBackupListener.onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}, {"identifier": "onUpdateSuccess", "parameters": "(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void onUpdateSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override public void onUpdateSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ReceiptBackupListener.onUpdateSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}, {"identifier": "onDeleteSuccess", "parameters": "(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void onDeleteSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override public void onDeleteSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ReceiptBackupListener.onDeleteSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/sync/drive/listeners/ReceiptBackupListener.java"}, "focal_method": {"identifier": "onInsertSuccess", "parameters": "(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata) {\n        super.onInsertSuccess(receipt, databaseOperationMetadata);\n        if (databaseOperationMetadata.getOperationFamilyType() != OperationFamilyType.Sync) {\n            mDriveReceiptsManager.handleInsertOrUpdate(receipt);\n        }\n    }", "signature": "void onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override public void onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ReceiptBackupListener.onInsertSuccess(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false, "invocations": ["onInsertSuccess", "getOperationFamilyType", "handleInsertOrUpdate"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}