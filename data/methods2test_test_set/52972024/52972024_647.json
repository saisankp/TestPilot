{"test_class": {"identifier": "CheckValidityAsyncOperationActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CheckValidityAsyncOperationActor actor;", "modifier": "private", "type": "CheckValidityAsyncOperationActor", "declarator": "actor", "var_name": "actor"}, {"original_string": "private CheckValidityMessage message;", "modifier": "private", "type": "CheckValidityMessage", "declarator": "message", "var_name": "message"}], "file": "CommonFeatures/AsyncOperations/CheckValidityAsyncOperationActor/src/test/java/info/smart_tools/smartactors/async_operations/check_validity_async_operation/CheckValidityAsyncOperationActorTest.java"}, "test_case": {"identifier": "Should_ThrowException_When_ListOfIdsIsNull", "parameters": "()", "modifiers": "@Test(expected = InvalidAsyncOperationIdException.class) public", "return": "void", "body": "@Test(expected = InvalidAsyncOperationIdException.class)\n    public void Should_ThrowException_When_ListOfIdsIsNull() throws ChangeValueException, ReadValueException, InvalidAsyncOperationIdException {\n        PowerMockito.when(message.getIdentifiers()).thenReturn(null);\n        PowerMockito.when(message.getAsyncOperationId()).thenReturn(\"000\");\n        actor.check(message);\n    }", "signature": "void Should_ThrowException_When_ListOfIdsIsNull()", "full_signature": "@Test(expected = InvalidAsyncOperationIdException.class) public void Should_ThrowException_When_ListOfIdsIsNull()", "class_method_signature": "CheckValidityAsyncOperationActorTest.Should_ThrowException_When_ListOfIdsIsNull()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getIdentifiers", "thenReturn", "when", "getAsyncOperationId", "check"]}, "focal_class": {"identifier": "CheckValidityAsyncOperationActor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CheckValidityAsyncOperationActor", "parameters": "(final IObject config)", "modifiers": "public", "return": "", "signature": " CheckValidityAsyncOperationActor(final IObject config)", "full_signature": "public  CheckValidityAsyncOperationActor(final IObject config)", "class_method_signature": "CheckValidityAsyncOperationActor.CheckValidityAsyncOperationActor(final IObject config)", "testcase": false, "constructor": true}, {"identifier": "check", "parameters": "(final CheckValidityMessage message)", "modifiers": "public", "return": "void", "signature": "void check(final CheckValidityMessage message)", "full_signature": "public void check(final CheckValidityMessage message)", "class_method_signature": "CheckValidityAsyncOperationActor.check(final CheckValidityMessage message)", "testcase": false, "constructor": false}], "file": "CommonFeatures/AsyncOperations/CheckValidityAsyncOperationActor/src/main/java/info/smart_tools/smartactors/async_operations/check_validity_async_operation/CheckValidityAsyncOperationActor.java"}, "focal_method": {"identifier": "check", "parameters": "(final CheckValidityMessage message)", "modifiers": "public", "return": "void", "body": "public void check(final CheckValidityMessage message) throws InvalidAsyncOperationIdException {\n        try {\n            List<String> validIds = message.getIdentifiers();\n            if (validIds == null || validIds.isEmpty()) {\n                throw new InvalidAsyncOperationIdException(\"List of valid id is empty\");\n            }\n            if (!validIds.contains(message.getAsyncOperationId())) {\n                throw new InvalidAsyncOperationIdException(\"List of async operations does not contain operation with received token\");\n            }\n        } catch (ReadValueException e) {\n            throw new InvalidAsyncOperationIdException(e);\n        }\n\n    }", "signature": "void check(final CheckValidityMessage message)", "full_signature": "public void check(final CheckValidityMessage message)", "class_method_signature": "CheckValidityAsyncOperationActor.check(final CheckValidityMessage message)", "testcase": false, "constructor": false, "invocations": ["getIdentifiers", "isEmpty", "contains", "getAsyncOperationId"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}