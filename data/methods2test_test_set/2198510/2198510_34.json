{"test_class": {"identifier": "TestPollingZooKeeperConfigurationProvider", "superclass": "extends\n    TestAbstractZooKeeperConfigurationProvider", "interfaces": "", "fields": [{"original_string": "private EventBus eb;", "modifier": "private", "type": "EventBus", "declarator": "eb", "var_name": "eb"}, {"original_string": "private EventSync es;", "modifier": "private", "type": "EventSync", "declarator": "es", "var_name": "es"}, {"original_string": "private PollingZooKeeperConfigurationProvider cp;", "modifier": "private", "type": "PollingZooKeeperConfigurationProvider", "declarator": "cp", "var_name": "cp"}], "file": "flume-ng-node/src/test/java/org/apache/flume/node/TestPollingZooKeeperConfigurationProvider.java"}, "test_case": {"identifier": "testPolling", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPolling() throws Exception {\n    es.awaitEvent();\n    es.reset();\n\n    FlumeConfiguration fc = cp.getFlumeConfiguration();\n    Assert.assertTrue(fc.getConfigurationErrors().isEmpty());\n    AgentConfiguration ac = fc.getConfigurationFor(AGENT_NAME);\n    Assert.assertNull(ac);\n\n    addData();\n    es.awaitEvent();\n    es.reset();\n\n    verifyProperties(cp);\n  }", "signature": "void testPolling()", "full_signature": "@Test public void testPolling()", "class_method_signature": "TestPollingZooKeeperConfigurationProvider.testPolling()", "testcase": true, "constructor": false, "invocations": ["awaitEvent", "reset", "getFlumeConfiguration", "assertTrue", "isEmpty", "getConfigurationErrors", "getConfigurationFor", "assertNull", "addData", "awaitEvent", "reset", "verifyProperties"]}, "focal_class": {"identifier": "PollingZooKeeperConfigurationProvider", "superclass": "extends\n    AbstractZooKeeperConfigurationProvider", "interfaces": "implements LifecycleAware", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory\n      .getLogger(PollingZooKeeperConfigurationProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory\n      .getLogger(PollingZooKeeperConfigurationProvider.class)", "var_name": "LOGGER"}, {"original_string": "private final EventBus eventBus;", "modifier": "private final", "type": "EventBus", "declarator": "eventBus", "var_name": "eventBus"}, {"original_string": "private final CuratorFramework client;", "modifier": "private final", "type": "CuratorFramework", "declarator": "client", "var_name": "client"}, {"original_string": "private NodeCache agentNodeCache;", "modifier": "private", "type": "NodeCache", "declarator": "agentNodeCache", "var_name": "agentNodeCache"}, {"original_string": "private FlumeConfiguration flumeConfiguration;", "modifier": "private", "type": "FlumeConfiguration", "declarator": "flumeConfiguration", "var_name": "flumeConfiguration"}, {"original_string": "private LifecycleState lifecycleState;", "modifier": "private", "type": "LifecycleState", "declarator": "lifecycleState", "var_name": "lifecycleState"}], "methods": [{"identifier": "PollingZooKeeperConfigurationProvider", "parameters": "(String agentName,\n      String zkConnString, String basePath, EventBus eventBus)", "modifiers": "public", "return": "", "signature": " PollingZooKeeperConfigurationProvider(String agentName,\n      String zkConnString, String basePath, EventBus eventBus)", "full_signature": "public  PollingZooKeeperConfigurationProvider(String agentName,\n      String zkConnString, String basePath, EventBus eventBus)", "class_method_signature": "PollingZooKeeperConfigurationProvider.PollingZooKeeperConfigurationProvider(String agentName,\n      String zkConnString, String basePath, EventBus eventBus)", "testcase": false, "constructor": true}, {"identifier": "getFlumeConfiguration", "parameters": "()", "modifiers": "@Override protected", "return": "FlumeConfiguration", "signature": "FlumeConfiguration getFlumeConfiguration()", "full_signature": "@Override protected FlumeConfiguration getFlumeConfiguration()", "class_method_signature": "PollingZooKeeperConfigurationProvider.getFlumeConfiguration()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "PollingZooKeeperConfigurationProvider.start()", "testcase": false, "constructor": false}, {"identifier": "refreshConfiguration", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void refreshConfiguration()", "full_signature": "private void refreshConfiguration()", "class_method_signature": "PollingZooKeeperConfigurationProvider.refreshConfiguration()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "PollingZooKeeperConfigurationProvider.stop()", "testcase": false, "constructor": false}, {"identifier": "getLifecycleState", "parameters": "()", "modifiers": "@Override public", "return": "LifecycleState", "signature": "LifecycleState getLifecycleState()", "full_signature": "@Override public LifecycleState getLifecycleState()", "class_method_signature": "PollingZooKeeperConfigurationProvider.getLifecycleState()", "testcase": false, "constructor": false}], "file": "flume-ng-node/src/main/java/org/apache/flume/node/PollingZooKeeperConfigurationProvider.java"}, "focal_method": {"identifier": "getFlumeConfiguration", "parameters": "()", "modifiers": "@Override protected", "return": "FlumeConfiguration", "body": "@Override\n  protected FlumeConfiguration getFlumeConfiguration() {\n    return flumeConfiguration;\n  }", "signature": "FlumeConfiguration getFlumeConfiguration()", "full_signature": "@Override protected FlumeConfiguration getFlumeConfiguration()", "class_method_signature": "PollingZooKeeperConfigurationProvider.getFlumeConfiguration()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}