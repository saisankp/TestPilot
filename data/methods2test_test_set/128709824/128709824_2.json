{"test_class": {"identifier": "SnappyRpcCompressorTest", "superclass": "", "interfaces": "", "fields": [], "file": "codec/codec-api/src/test/java/com/alipay/sofa/rpc/codec/snappy/SnappyRpcCompressorTest.java"}, "test_case": {"identifier": "testCompress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompress() throws UnsupportedEncodingException {\n        SnappyRpcCompressor compressor = new SnappyRpcCompressor();\n        String s = \"xxxxasdasdasd0as8d0asdkmasldjalsd\";\n        byte[] bs = compressor.compress(s.getBytes(\"utf-8\"));\n        Assert.assertNotNull(s);\n\n        String s1 = new String(compressor.deCompress(bs), \"utf-8\");\n        Assert.assertEquals(s, s1);\n    }", "signature": "void testCompress()", "full_signature": "@Test public void testCompress()", "class_method_signature": "SnappyRpcCompressorTest.testCompress()", "testcase": true, "constructor": false, "invocations": ["compress", "getBytes", "assertNotNull", "deCompress", "assertEquals"]}, "focal_class": {"identifier": "SnappyRpcCompressor", "superclass": "", "interfaces": "implements Compressor", "fields": [{"original_string": "private final static Logger LOGGER = LoggerFactory.getLogger(SnappyRpcCompressor.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SnappyRpcCompressor.class)", "var_name": "LOGGER"}, {"original_string": "static final int LITERAL            = 0;", "modifier": "static final", "type": "int", "declarator": "LITERAL            = 0", "var_name": "LITERAL"}, {"original_string": "static final int COPY_1_BYTE_OFFSET = 1;", "modifier": "static final", "type": "int", "declarator": "COPY_1_BYTE_OFFSET = 1", "var_name": "COPY_1_BYTE_OFFSET"}, {"original_string": "static final int COPY_2_BYTE_OFFSET = 2;", "modifier": "static final", "type": "int", "declarator": "COPY_2_BYTE_OFFSET = 2", "var_name": "COPY_2_BYTE_OFFSET"}, {"original_string": "static final int COPY_4_BYTE_OFFSET = 3;", "modifier": "static final", "type": "int", "declarator": "COPY_4_BYTE_OFFSET = 3", "var_name": "COPY_4_BYTE_OFFSET"}], "methods": [{"identifier": "SnappyRpcCompressor", "parameters": "()", "modifiers": "public", "return": "", "signature": " SnappyRpcCompressor()", "full_signature": "public  SnappyRpcCompressor()", "class_method_signature": "SnappyRpcCompressor.SnappyRpcCompressor()", "testcase": false, "constructor": true}, {"identifier": "deCompress", "parameters": "(byte[] src)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] deCompress(byte[] src)", "full_signature": "@Override public byte[] deCompress(byte[] src)", "class_method_signature": "SnappyRpcCompressor.deCompress(byte[] src)", "testcase": false, "constructor": false}, {"identifier": "getUncompressedLength", "parameters": "(byte[] compressed, int compressedOffset)", "modifiers": "public", "return": "int", "signature": "int getUncompressedLength(byte[] compressed, int compressedOffset)", "full_signature": "public int getUncompressedLength(byte[] compressed, int compressedOffset)", "class_method_signature": "SnappyRpcCompressor.getUncompressedLength(byte[] compressed, int compressedOffset)", "testcase": false, "constructor": false}, {"identifier": "uncompress", "parameters": "(byte[] compressed, int compressedOffset, int compressedSize)", "modifiers": "public", "return": "byte[]", "signature": "byte[] uncompress(byte[] compressed, int compressedOffset, int compressedSize)", "full_signature": "public byte[] uncompress(byte[] compressed, int compressedOffset, int compressedSize)", "class_method_signature": "SnappyRpcCompressor.uncompress(byte[] compressed, int compressedOffset, int compressedSize)", "testcase": false, "constructor": false}, {"identifier": "uncompress", "parameters": "(byte[] compressed, int compressedOffset, int compressedSize, byte[] uncompressed,\n                          int uncompressedOffset)", "modifiers": "public", "return": "int", "signature": "int uncompress(byte[] compressed, int compressedOffset, int compressedSize, byte[] uncompressed,\n                          int uncompressedOffset)", "full_signature": "public int uncompress(byte[] compressed, int compressedOffset, int compressedSize, byte[] uncompressed,\n                          int uncompressedOffset)", "class_method_signature": "SnappyRpcCompressor.uncompress(byte[] compressed, int compressedOffset, int compressedSize, byte[] uncompressed,\n                          int uncompressedOffset)", "testcase": false, "constructor": false}, {"identifier": "maxCompressedLength", "parameters": "(int sourceLength)", "modifiers": "public", "return": "int", "signature": "int maxCompressedLength(int sourceLength)", "full_signature": "public int maxCompressedLength(int sourceLength)", "class_method_signature": "SnappyRpcCompressor.maxCompressedLength(int sourceLength)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "modifiers": "public", "return": "int", "signature": "int compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "full_signature": "public int compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "class_method_signature": "SnappyRpcCompressor.compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(byte[] data)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] compress(byte[] data)", "full_signature": "@Override public byte[] compress(byte[] data)", "class_method_signature": "SnappyRpcCompressor.compress(byte[] data)", "testcase": false, "constructor": false}], "file": "codec/codec-api/src/main/java/com/alipay/sofa/rpc/codec/snappy/SnappyRpcCompressor.java"}, "focal_method": {"identifier": "compress", "parameters": "(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "modifiers": "public", "return": "int", "body": "public int compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset) {\n        return SnappyCompressor.compress(uncompressed,\n            uncompressedOffset,\n            uncompressedLength,\n            compressed,\n            compressedOffset);\n    }", "signature": "int compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "full_signature": "public int compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "class_method_signature": "SnappyRpcCompressor.compress(\n                        byte[] uncompressed,\n                        int uncompressedOffset,\n                        int uncompressedLength,\n                        byte[] compressed,\n                        int compressedOffset)", "testcase": false, "constructor": false, "invocations": ["compress"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}