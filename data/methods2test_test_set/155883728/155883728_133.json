{"test_class": {"identifier": "JavaxJsonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String KEY_PREFIX = \"prefix\";", "modifier": "static final", "type": "String", "declarator": "KEY_PREFIX = \"prefix\"", "var_name": "KEY_PREFIX"}, {"original_string": "static final String KEY_URI = \"uri\";", "modifier": "static final", "type": "String", "declarator": "KEY_URI = \"uri\"", "var_name": "KEY_URI"}], "file": "api/src/test/java/net/adamcin/oakpal/api/JavaxJsonTest.java"}, "test_case": {"identifier": "testArr", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testArr() {\n        JsonArray array = arr().get();\n        assertNotNull(\"arr().get() results in non-null JsonArray\", array);\n        assertTrue(\"arr().get() results in empty JsonArray\", !array.iterator().hasNext());\n\n        JsonArray nullArray = arr((Object[]) null).get();\n        assertNotNull(\"arr(null).get() results in non-null JsonArray\", nullArray);\n        assertTrue(\"arr(null).get() results in empty JsonArray\", !nullArray.iterator().hasNext());\n\n        assertEquals(\"easy numerical sequence\",\n                \"[0,1,2,3,4]\", arr(0, 1, 2, 3, 4).get().toString());\n\n        assertEquals(\"easy numerical sequence as vals\",\n                \"[0,1,2,3,4]\",\n                arr(val(0), val(1), val(2), val(3), val(4)).get().toString());\n\n        assertEquals(\"easy numerical sequence as dotted vals\",\n                \"[0,1,2,3,4]\",\n                arr().val(0).val(1).val(2).val(3).val(4).get().toString());\n\n        assertEquals(\"easy numerical sequence as dotted vals, no arr() initiator\",\n                \"[0,1,2,3,4]\",\n                val(0).val(1).val(2).val(3).val(4).get().toString());\n\n        assertEquals(\"numerical sequence as arr().and()\",\n                \"[0,1,2,3,4]\", arr(0, 1).and(2, 3, 4).get().toString());\n\n        assertEquals(\"arr().opt(null) should leave empty object\",\n                Json.createArrayBuilder().build(), arr().opt(null).get());\n        assertEquals(\"arr().opt(null, ifNotValue) should return with JsonObject.NULL when ifNotValue is provided\",\n                Json.createArrayBuilder().add(JsonValue.NULL).build(),\n                arr().opt(null, \"value\").get());\n        assertEquals(\"arr().opt(obj()) should leave empty object\",\n                Json.createArrayBuilder().build(),\n                arr().opt(obj()).get());\n        assertEquals(\"arr().opt(arr()) should leave empty object\",\n                Json.createArrayBuilder().build(),\n                arr().opt(arr()).get());\n        assertEquals(\"arr().opt(JsonObject.NULL) should leave empty object\",\n                Json.createArrayBuilder().build(),\n                arr().opt(JsonObject.NULL).get());\n        assertEquals(\"arr().opt(string) should return object with key\",\n                Json.createArrayBuilder().add(\"value\").build(),\n                arr().opt(\"value\").get());\n        assertEquals(\"arr().opt(string, default) should return object with key\",\n                Json.createArrayBuilder().add(\"value\").build(),\n                arr().opt(\"value\", \"notValue\").get());\n        assertEquals(\"arr().opt(string, ifNotValue) should return object with key when value is not ifNotValue\",\n                Json.createArrayBuilder().add(\"value\").build(),\n                arr().opt(\"value\", \"notValue\").get());\n        assertEquals(\"arr().opt(string, ifNotValue) should return empty object when value is ifNotValue\",\n                Json.createArrayBuilder().build(),\n                arr().opt(\"value\", \"value\").get());\n    }", "signature": "void testArr()", "full_signature": "@Test public void testArr()", "class_method_signature": "JavaxJsonTest.testArr()", "testcase": true, "constructor": false, "invocations": ["get", "arr", "assertNotNull", "assertTrue", "hasNext", "iterator", "get", "arr", "assertNotNull", "assertTrue", "hasNext", "iterator", "assertEquals", "toString", "get", "arr", "assertEquals", "toString", "get", "arr", "val", "val", "val", "val", "val", "assertEquals", "toString", "get", "val", "val", "val", "val", "val", "arr", "assertEquals", "toString", "get", "val", "val", "val", "val", "val", "assertEquals", "toString", "get", "and", "arr", "assertEquals", "build", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "add", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "createArrayBuilder", "get", "opt", "arr", "obj", "assertEquals", "build", "createArrayBuilder", "get", "opt", "arr", "arr", "assertEquals", "build", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "add", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "add", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "add", "createArrayBuilder", "get", "opt", "arr", "assertEquals", "build", "createArrayBuilder", "get", "opt", "arr"]}, "focal_class": {"identifier": "JavaxJson", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"WeakerAccess\")\n    public static final Function<JsonValue, String> JSON_VALUE_STRING = compose1(JavaxJson::unwrap, Object::toString);", "modifier": "@SuppressWarnings(\"WeakerAccess\")\n    public static final", "type": "Function<JsonValue, String>", "declarator": "JSON_VALUE_STRING = compose1(JavaxJson::unwrap, Object::toString)", "var_name": "JSON_VALUE_STRING"}], "methods": [{"identifier": "JavaxJson", "parameters": "()", "modifiers": "private", "return": "", "signature": " JavaxJson()", "full_signature": "private  JavaxJson()", "class_method_signature": "JavaxJson.JavaxJson()", "testcase": false, "constructor": true}, {"identifier": "nonEmptyValue", "parameters": "(final @Nullable JsonValue value)", "modifiers": "public static", "return": "boolean", "signature": "boolean nonEmptyValue(final @Nullable JsonValue value)", "full_signature": "public static boolean nonEmptyValue(final @Nullable JsonValue value)", "class_method_signature": "JavaxJson.nonEmptyValue(final @Nullable JsonValue value)", "testcase": false, "constructor": false}, {"identifier": "nonDefaultValue", "parameters": "(final @Nullable JsonValue value, final @NotNull JsonValue defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean nonDefaultValue(final @Nullable JsonValue value, final @NotNull JsonValue defaultValue)", "full_signature": "public static boolean nonDefaultValue(final @Nullable JsonValue value, final @NotNull JsonValue defaultValue)", "class_method_signature": "JavaxJson.nonDefaultValue(final @Nullable JsonValue value, final @NotNull JsonValue defaultValue)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(final Object object)", "modifiers": "public static", "return": "JsonValue", "signature": "JsonValue wrap(final Object object)", "full_signature": "public static JsonValue wrap(final Object object)", "class_method_signature": "JavaxJson.wrap(final Object object)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(final JsonValue jsonValue)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Object", "signature": "Object unwrap(final JsonValue jsonValue)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Object unwrap(final JsonValue jsonValue)", "class_method_signature": "JavaxJson.unwrap(final JsonValue jsonValue)", "testcase": false, "constructor": false}, {"identifier": "unwrapObject", "parameters": "(final JsonObject jsonObject)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Map<String, Object>", "signature": "Map<String, Object> unwrapObject(final JsonObject jsonObject)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Map<String, Object> unwrapObject(final JsonObject jsonObject)", "class_method_signature": "JavaxJson.unwrapObject(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "unwrapArray", "parameters": "(final JsonArray jsonArray)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "List<Object>", "signature": "List<Object> unwrapArray(final JsonArray jsonArray)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static List<Object> unwrapArray(final JsonArray jsonArray)", "class_method_signature": "JavaxJson.unwrapArray(final JsonArray jsonArray)", "testcase": false, "constructor": false}, {"identifier": "shallowMergeObjects", "parameters": "(final @Nullable JsonObject base,\n                                                          final @Nullable JsonObject overlay)", "modifiers": "public static @NotNull", "return": "JsonObject", "signature": "JsonObject shallowMergeObjects(final @Nullable JsonObject base,\n                                                          final @Nullable JsonObject overlay)", "full_signature": "public static @NotNull JsonObject shallowMergeObjects(final @Nullable JsonObject base,\n                                                          final @Nullable JsonObject overlay)", "class_method_signature": "JavaxJson.shallowMergeObjects(final @Nullable JsonObject base,\n                                                          final @Nullable JsonObject overlay)", "testcase": false, "constructor": false}, {"identifier": "val", "parameters": "(Object value)", "modifiers": "public static", "return": "Value", "signature": "Value val(Object value)", "full_signature": "public static Value val(Object value)", "class_method_signature": "JavaxJson.val(Object value)", "testcase": false, "constructor": false}, {"identifier": "obj", "parameters": "(final Key... keys)", "modifiers": "public static", "return": "Obj", "signature": "Obj obj(final Key... keys)", "full_signature": "public static Obj obj(final Key... keys)", "class_method_signature": "JavaxJson.obj(final Key... keys)", "testcase": false, "constructor": false}, {"identifier": "obj", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Obj", "signature": "Obj obj(final JsonObject jsonObject)", "full_signature": "public static Obj obj(final JsonObject jsonObject)", "class_method_signature": "JavaxJson.obj(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "obj", "parameters": "(final Map<?, ?> map)", "modifiers": "public static", "return": "Obj", "signature": "Obj obj(final Map<?, ?> map)", "full_signature": "public static Obj obj(final Map<?, ?> map)", "class_method_signature": "JavaxJson.obj(final Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "key", "parameters": "(final String key, final Object value)", "modifiers": "public static", "return": "Key", "signature": "Key key(final String key, final Object value)", "full_signature": "public static Key key(final String key, final Object value)", "class_method_signature": "JavaxJson.key(final String key, final Object value)", "testcase": false, "constructor": false}, {"identifier": "key", "parameters": "(final String key)", "modifiers": "public static", "return": "KeyCursor", "signature": "KeyCursor key(final String key)", "full_signature": "public static KeyCursor key(final String key)", "class_method_signature": "JavaxJson.key(final String key)", "testcase": false, "constructor": false}, {"identifier": "arr", "parameters": "(Object... values)", "modifiers": "public static", "return": "Arr", "signature": "Arr arr(Object... values)", "full_signature": "public static Arr arr(Object... values)", "class_method_signature": "JavaxJson.arr(Object... values)", "testcase": false, "constructor": false}, {"identifier": "optObject", "parameters": "(final JsonObject json, final String key)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Optional<JsonObject>", "signature": "Optional<JsonObject> optObject(final JsonObject json, final String key)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Optional<JsonObject> optObject(final JsonObject json, final String key)", "class_method_signature": "JavaxJson.optObject(final JsonObject json, final String key)", "testcase": false, "constructor": false}, {"identifier": "objectOrEmpty", "parameters": "(final JsonObject json, final String key)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "JsonObject", "signature": "JsonObject objectOrEmpty(final JsonObject json, final String key)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static JsonObject objectOrEmpty(final JsonObject json, final String key)", "class_method_signature": "JavaxJson.objectOrEmpty(final JsonObject json, final String key)", "testcase": false, "constructor": false}, {"identifier": "optArray", "parameters": "(final JsonObject json, final String key)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "Optional<JsonArray>", "signature": "Optional<JsonArray> optArray(final JsonObject json, final String key)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static Optional<JsonArray> optArray(final JsonObject json, final String key)", "class_method_signature": "JavaxJson.optArray(final JsonObject json, final String key)", "testcase": false, "constructor": false}, {"identifier": "arrayOrEmpty", "parameters": "(final JsonObject json, final String key)", "modifiers": "public static", "return": "JsonArray", "signature": "JsonArray arrayOrEmpty(final JsonObject json, final String key)", "full_signature": "public static JsonArray arrayOrEmpty(final JsonObject json, final String key)", "class_method_signature": "JavaxJson.arrayOrEmpty(final JsonObject json, final String key)", "testcase": false, "constructor": false}, {"identifier": "mapArrayOfStrings", "parameters": "(final JsonArray jsonArray)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> mapArrayOfStrings(final JsonArray jsonArray)", "full_signature": "public static List<String> mapArrayOfStrings(final JsonArray jsonArray)", "class_method_signature": "JavaxJson.mapArrayOfStrings(final JsonArray jsonArray)", "testcase": false, "constructor": false}, {"identifier": "mapArrayOfStrings", "parameters": "(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction)", "modifiers": "public static", "return": "List<R>", "signature": "List<R> mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction)", "full_signature": "public static List<R> mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction)", "class_method_signature": "JavaxJson.mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction)", "testcase": false, "constructor": false}, {"identifier": "mapArrayOfStrings", "parameters": "(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction,\n                                                final boolean discardNulls)", "modifiers": "public static", "return": "List<R>", "signature": "List<R> mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction,\n                                                final boolean discardNulls)", "full_signature": "public static List<R> mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction,\n                                                final boolean discardNulls)", "class_method_signature": "JavaxJson.mapArrayOfStrings(final JsonArray jsonArray,\n                                                final Function<String, R> mapFunction,\n                                                final boolean discardNulls)", "testcase": false, "constructor": false}, {"identifier": "mapArrayOfObjects", "parameters": "(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction)", "modifiers": "public static", "return": "List<R>", "signature": "List<R> mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction)", "full_signature": "public static List<R> mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction)", "class_method_signature": "JavaxJson.mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction)", "testcase": false, "constructor": false}, {"identifier": "mapArrayOfObjects", "parameters": "(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction,\n                                                final boolean discardNulls)", "modifiers": "public static", "return": "List<R>", "signature": "List<R> mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction,\n                                                final boolean discardNulls)", "full_signature": "public static List<R> mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction,\n                                                final boolean discardNulls)", "class_method_signature": "JavaxJson.mapArrayOfObjects(final JsonArray jsonArray,\n                                                final Function<JsonObject, R> mapFunction,\n                                                final boolean discardNulls)", "testcase": false, "constructor": false}, {"identifier": "mapObjectValues", "parameters": "(final JsonObject jsonObject,\n                                              final BiFunction<String, JsonObject, R> mapBiFunction,\n                                              final boolean discardNulls)", "modifiers": "public static", "return": "List<R>", "signature": "List<R> mapObjectValues(final JsonObject jsonObject,\n                                              final BiFunction<String, JsonObject, R> mapBiFunction,\n                                              final boolean discardNulls)", "full_signature": "public static List<R> mapObjectValues(final JsonObject jsonObject,\n                                              final BiFunction<String, JsonObject, R> mapBiFunction,\n                                              final boolean discardNulls)", "class_method_signature": "JavaxJson.mapObjectValues(final JsonObject jsonObject,\n                                              final BiFunction<String, JsonObject, R> mapBiFunction,\n                                              final boolean discardNulls)", "testcase": false, "constructor": false}, {"identifier": "parseFromArray", "parameters": "(final @NotNull JsonArray jsonArray,\n                                             final @NotNull Fun.ThrowingFunction<String, R> parser,\n                                             final @Nullable BiConsumer<String, Exception> errorConsumer)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "List<R>", "signature": "List<R> parseFromArray(final @NotNull JsonArray jsonArray,\n                                             final @NotNull Fun.ThrowingFunction<String, R> parser,\n                                             final @Nullable BiConsumer<String, Exception> errorConsumer)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static List<R> parseFromArray(final @NotNull JsonArray jsonArray,\n                                             final @NotNull Fun.ThrowingFunction<String, R> parser,\n                                             final @Nullable BiConsumer<String, Exception> errorConsumer)", "class_method_signature": "JavaxJson.parseFromArray(final @NotNull JsonArray jsonArray,\n                                             final @NotNull Fun.ThrowingFunction<String, R> parser,\n                                             final @Nullable BiConsumer<String, Exception> errorConsumer)", "testcase": false, "constructor": false}, {"identifier": "hasNonNull", "parameters": "(final @NotNull JsonObject json, final String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasNonNull(final @NotNull JsonObject json, final String key)", "full_signature": "public static boolean hasNonNull(final @NotNull JsonObject json, final String key)", "class_method_signature": "JavaxJson.hasNonNull(final @NotNull JsonObject json, final String key)", "testcase": false, "constructor": false}], "file": "api/src/main/java/net/adamcin/oakpal/api/JavaxJson.java"}, "focal_method": {"identifier": "arr", "parameters": "(Object... values)", "modifiers": "public static", "return": "Arr", "body": "public static Arr arr(Object... values) {\n        if (values != null) {\n            return new Arr(Arrays.asList(values));\n        } else {\n            return new Arr(Collections.emptyList());\n        }\n    }", "signature": "Arr arr(Object... values)", "full_signature": "public static Arr arr(Object... values)", "class_method_signature": "JavaxJson.arr(Object... values)", "testcase": false, "constructor": false, "invocations": ["asList", "emptyList"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}