{"test_class": {"identifier": "LdifReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/io/LdifReaderTest.java"}, "test_case": {"identifier": "read", "parameters": "(final Reader actual, final SearchResponse expected)", "modifiers": "@Test(groups = \"io\", dataProvider = \"ldif\") public", "return": "void", "body": "@Test(groups = \"io\", dataProvider = \"ldif\")\n  public void read(final Reader actual, final SearchResponse expected)\n    throws Exception\n  {\n    final LdifReader reader = new LdifReader(actual);\n    Assert.assertEquals(reader.read(), expected);\n  }", "signature": "void read(final Reader actual, final SearchResponse expected)", "full_signature": "@Test(groups = \"io\", dataProvider = \"ldif\") public void read(final Reader actual, final SearchResponse expected)", "class_method_signature": "LdifReaderTest.read(final Reader actual, final SearchResponse expected)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "read"]}, "focal_class": {"identifier": "LdifReader", "superclass": "", "interfaces": "implements SearchResultReader", "fields": [{"original_string": "private static final int READ_AHEAD_LIMIT = 1024;", "modifier": "private static final", "type": "int", "declarator": "READ_AHEAD_LIMIT = 1024", "var_name": "READ_AHEAD_LIMIT"}, {"original_string": "protected final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private final Reader ldifReader;", "modifier": "private final", "type": "Reader", "declarator": "ldifReader", "var_name": "ldifReader"}], "methods": [{"identifier": "LdifReader", "parameters": "(final Reader reader)", "modifiers": "public", "return": "", "signature": " LdifReader(final Reader reader)", "full_signature": "public  LdifReader(final Reader reader)", "class_method_signature": "LdifReader.LdifReader(final Reader reader)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "SearchResponse", "signature": "SearchResponse read()", "full_signature": "@Override public SearchResponse read()", "class_method_signature": "LdifReader.read()", "testcase": false, "constructor": false}, {"identifier": "readSection", "parameters": "(final BufferedReader reader)", "modifiers": "private", "return": "List<String>", "signature": "List<String> readSection(final BufferedReader reader)", "full_signature": "private List<String> readSection(final BufferedReader reader)", "class_method_signature": "LdifReader.readSection(final BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "parseEntry", "parameters": "(final List<String> section)", "modifiers": "private", "return": "LdapEntry", "signature": "LdapEntry parseEntry(final List<String> section)", "full_signature": "private LdapEntry parseEntry(final List<String> section)", "class_method_signature": "LdifReader.parseEntry(final List<String> section)", "testcase": false, "constructor": false}, {"identifier": "parseAttribute", "parameters": "(final String line)", "modifiers": "private", "return": "LdapAttribute", "signature": "LdapAttribute parseAttribute(final String line)", "full_signature": "private LdapAttribute parseAttribute(final String line)", "class_method_signature": "LdifReader.parseAttribute(final String line)", "testcase": false, "constructor": false}, {"identifier": "parseReference", "parameters": "(final List<String> section)", "modifiers": "private", "return": "SearchResultReference", "signature": "SearchResultReference parseReference(final List<String> section)", "full_signature": "private SearchResultReference parseReference(final List<String> section)", "class_method_signature": "LdifReader.parseReference(final List<String> section)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/io/LdifReader.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "SearchResponse", "body": "@Override\n  public SearchResponse read()\n    throws IOException\n  {\n    final SearchResponse result = new SearchResponse();\n    final BufferedReader br = new BufferedReader(ldifReader);\n    String line;\n    br.mark(READ_AHEAD_LIMIT);\n    while ((line = br.readLine()) != null) {\n      if (!\"\".equals(line)) {\n        br.reset();\n        final List<String> section = readSection(br);\n        if (!section.isEmpty()) {\n          if (section.get(0).startsWith(\"version\")) {\n            section.remove(0);\n          }\n          if (!section.isEmpty()) {\n            if (section.get(0).startsWith(\"dn\")) {\n              result.addEntries(parseEntry(section));\n            } else if (section.get(0).startsWith(\"ref\")) {\n              result.addReferences(parseReference(section));\n            } else {\n              logger.debug(\"Unknown LDIF section {}\", section.get(0));\n            }\n          }\n        }\n      }\n      br.mark(READ_AHEAD_LIMIT);\n    }\n    return result;\n  }", "signature": "SearchResponse read()", "full_signature": "@Override public SearchResponse read()", "class_method_signature": "LdifReader.read()", "testcase": false, "constructor": false, "invocations": ["mark", "readLine", "equals", "reset", "readSection", "isEmpty", "startsWith", "get", "remove", "isEmpty", "startsWith", "get", "addEntries", "parseEntry", "startsWith", "get", "addReferences", "parseReference", "debug", "get", "mark"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}