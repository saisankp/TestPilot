{"test_class": {"identifier": "HTTP_URI_ParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/referencing/src/test/java/org/geotools/referencing/factory/HTTP_URI_ParserTest.java"}, "test_case": {"identifier": "testParseVersioned", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseVersioned() throws NoSuchAuthorityCodeException {\n        URI_Parser parser = HTTP_URI_Parser\n                .buildParser(\"http://www.opengis.net/def/crs/EPSG/6.11.2/4326\");\n        assertEquals(\"crs\", parser.type.name);\n        assertEquals(\"EPSG\", parser.authority);\n        assertEquals(\"6.11.2\", parser.version.toString());\n        assertEquals(\"4326\", parser.code);\n        assertEquals(\"EPSG:4326\", parser.getAuthorityCode());\n    }", "signature": "void testParseVersioned()", "full_signature": "@Test public void testParseVersioned()", "class_method_signature": "HTTP_URI_ParserTest.testParseVersioned()", "testcase": true, "constructor": false, "invocations": ["buildParser", "assertEquals", "assertEquals", "assertEquals", "toString", "assertEquals", "assertEquals", "getAuthorityCode"]}, "focal_class": {"identifier": "HTTP_URI_Parser", "superclass": "extends URI_Parser", "interfaces": "", "fields": [{"original_string": "private static final String AUTHORITY = \"http://www.opengis.net/def\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORITY = \"http://www.opengis.net/def\"", "var_name": "AUTHORITY"}, {"original_string": "private static final String SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = \"/\"", "var_name": "SEPARATOR"}, {"original_string": "private static final String BASE_URI = AUTHORITY + SEPARATOR;", "modifier": "private static final", "type": "String", "declarator": "BASE_URI = AUTHORITY + SEPARATOR", "var_name": "BASE_URI"}, {"original_string": "private static final String UNVERSIONED = \"0\";", "modifier": "private static final", "type": "String", "declarator": "UNVERSIONED = \"0\"", "var_name": "UNVERSIONED"}], "methods": [{"identifier": "HTTP_URI_Parser", "parameters": "(String uri, URI_Type type, String authority, Version version,\n            String code)", "modifiers": "protected", "return": "", "signature": " HTTP_URI_Parser(String uri, URI_Type type, String authority, Version version,\n            String code)", "full_signature": "protected  HTTP_URI_Parser(String uri, URI_Type type, String authority, Version version,\n            String code)", "class_method_signature": "HTTP_URI_Parser.HTTP_URI_Parser(String uri, URI_Type type, String authority, Version version,\n            String code)", "testcase": false, "constructor": true}, {"identifier": "buildParser", "parameters": "(final String uri)", "modifiers": "public static", "return": "HTTP_URI_Parser", "signature": "HTTP_URI_Parser buildParser(final String uri)", "full_signature": "public static HTTP_URI_Parser buildParser(final String uri)", "class_method_signature": "HTTP_URI_Parser.buildParser(final String uri)", "testcase": false, "constructor": false}], "file": "modules/library/referencing/src/main/java/org/geotools/referencing/factory/HTTP_URI_Parser.java"}, "focal_method": {"identifier": "buildParser", "parameters": "(final String uri)", "modifiers": "public static", "return": "HTTP_URI_Parser", "body": "public static HTTP_URI_Parser buildParser(final String uri) throws NoSuchAuthorityCodeException {\n        String uriText = uri.trim();\n        int length = BASE_URI.length();\n        if (uriText.regionMatches(true, 0, BASE_URI, 0, length)) {\n            String[] segments = uriText.substring(length).split(SEPARATOR);\n            if (segments.length == 4 && !segments[0].isEmpty()) {\n                URI_Type uriType = URI_Type.get(segments[0]);\n                if (uriType != null && !segments[1].isEmpty() && !segments[2].isEmpty()\n                        && !segments[3].isEmpty()) {\n                    String uriAuthority = segments[1];\n                    Version uriVersion = segments[2].equals(UNVERSIONED) ? null : new Version(\n                            segments[2]);\n                    String uriCode = segments[3];\n                    return new HTTP_URI_Parser(uriText, uriType, uriAuthority, uriVersion, uriCode);\n                }\n            }\n        }\n        throw new NoSuchAuthorityCodeException(\n                Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1, uriText), AUTHORITY, uriText);\n    }", "signature": "HTTP_URI_Parser buildParser(final String uri)", "full_signature": "public static HTTP_URI_Parser buildParser(final String uri)", "class_method_signature": "HTTP_URI_Parser.buildParser(final String uri)", "testcase": false, "constructor": false, "invocations": ["trim", "length", "regionMatches", "split", "substring", "isEmpty", "get", "isEmpty", "isEmpty", "isEmpty", "equals", "format"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}