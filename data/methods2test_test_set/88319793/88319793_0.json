{"test_class": {"identifier": "ImageClassificationWorkItemHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "integration/jbpm/jbpm-wih-image-classification/src/test/java/org/fxapps/wih/ImageClassificationWorkItemHandlerTest.java"}, "test_case": {"identifier": "testHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHandler() throws Exception {\n\t\tWorkItemImpl workItem = new WorkItemImpl();\n\t\tTestWorkItemManager manager = new TestWorkItemManager();\n\t\tImageClassificationWorkItemHandler handler = new ImageClassificationWorkItemHandler();\n\t\tInputStream testImageIS = ImageClassificationWorkItemHandlerTest.class.getResourceAsStream(\"/my_bike.jpg\");\n\t\tworkItem.setParameter(ImageClassificationWorkItemHandler.PARAM_IMAGE, testImageIS);\n\t\thandler.executeWorkItem(workItem, manager);\n\t\tassertNotNull(manager.getResults());\n\t\tassertEquals(1, manager.getResults().size());\n\t\tassertEquals(\"mountain_bike\", manager.getResults().get(workItem.getId()).get(\"prediction\"));\n\t\tassertTrue(manager.getResults().containsKey(workItem.getId()));\n\t}", "signature": "void testHandler()", "full_signature": "@Test public void testHandler()", "class_method_signature": "ImageClassificationWorkItemHandlerTest.testHandler()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "setParameter", "executeWorkItem", "assertNotNull", "getResults", "assertEquals", "size", "getResults", "assertEquals", "get", "get", "getResults", "getId", "assertTrue", "containsKey", "getResults", "getId"]}, "focal_class": {"identifier": "ImageClassificationWorkItemHandler", "superclass": "extends AbstractLogOrThrowWorkItemHandler", "interfaces": "implements Cacheable", "fields": [{"original_string": "public final static String PARAM_IMAGE = \"image\";", "modifier": "public final static", "type": "String", "declarator": "PARAM_IMAGE = \"image\"", "var_name": "PARAM_IMAGE"}, {"original_string": "public final static String RESULT_PREDICTIONS = \"predictions\";", "modifier": "public final static", "type": "String", "declarator": "RESULT_PREDICTIONS = \"predictions\"", "var_name": "RESULT_PREDICTIONS"}, {"original_string": "public static final String RESULT_PREDICTION = \"prediction\";", "modifier": "public static final", "type": "String", "declarator": "RESULT_PREDICTION = \"prediction\"", "var_name": "RESULT_PREDICTION"}, {"original_string": "private static final String DEFAULT_MODEL = \"/resnet50_dl4j_inference.v3.zip\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MODEL = \"/resnet50_dl4j_inference.v3.zip\"", "var_name": "DEFAULT_MODEL"}, {"original_string": "private static final String LABELS_SEPARATOR = \"\\\\,\";", "modifier": "private static final", "type": "String", "declarator": "LABELS_SEPARATOR = \"\\\\,\"", "var_name": "LABELS_SEPARATOR"}, {"original_string": "private ImageClassifier classifier;", "modifier": "private", "type": "ImageClassifier", "declarator": "classifier", "var_name": "classifier"}], "methods": [{"identifier": "ImageClassificationWorkItemHandler", "parameters": "(ClassLoader cl, String model, String labels, int width, int height, int channels)", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler(ClassLoader cl, String model, String labels, int width, int height, int channels)", "full_signature": "public  ImageClassificationWorkItemHandler(ClassLoader cl, String model, String labels, int width, int height, int channels)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(ClassLoader cl, String model, String labels, int width, int height, int channels)", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "(File model, String labels, int width, int height, int channels)", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler(File model, String labels, int width, int height, int channels)", "full_signature": "public  ImageClassificationWorkItemHandler(File model, String labels, int width, int height, int channels)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(File model, String labels, int width, int height, int channels)", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "(URL model, String labels, int width, int height, int channels)", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler(URL model, String labels, int width, int height, int channels)", "full_signature": "public  ImageClassificationWorkItemHandler(URL model, String labels, int width, int height, int channels)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(URL model, String labels, int width, int height, int channels)", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "(InputStream model, String labels, int width, int height, int channels)", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels)", "full_signature": "public  ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels)", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "(InputStream model, String labels, int width, int height, int channels, DataNormalization normalization)", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels, DataNormalization normalization)", "full_signature": "public  ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels, DataNormalization normalization)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(InputStream model, String labels, int width, int height, int channels, DataNormalization normalization)", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " ImageClassificationWorkItemHandler()", "full_signature": "public  ImageClassificationWorkItemHandler()", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler()", "testcase": false, "constructor": true}, {"identifier": "ImageClassificationWorkItemHandler", "parameters": "(InputStream model, List<String> labels, int width, int height,\n\t\t\tint channels, DataNormalization normalization)", "modifiers": "private", "return": "", "signature": " ImageClassificationWorkItemHandler(InputStream model, List<String> labels, int width, int height,\n\t\t\tint channels, DataNormalization normalization)", "full_signature": "private  ImageClassificationWorkItemHandler(InputStream model, List<String> labels, int width, int height,\n\t\t\tint channels, DataNormalization normalization)", "class_method_signature": "ImageClassificationWorkItemHandler.ImageClassificationWorkItemHandler(InputStream model, List<String> labels, int width, int height,\n\t\t\tint channels, DataNormalization normalization)", "testcase": false, "constructor": true}, {"identifier": "getLabels", "parameters": "(InputStream labelsIS)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getLabels(InputStream labelsIS)", "full_signature": "private static List<String> getLabels(InputStream labelsIS)", "class_method_signature": "ImageClassificationWorkItemHandler.getLabels(InputStream labelsIS)", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "(String labels)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getLabels(String labels)", "full_signature": "private static List<String> getLabels(String labels)", "class_method_signature": "ImageClassificationWorkItemHandler.getLabels(String labels)", "testcase": false, "constructor": false}, {"identifier": "executeWorkItem", "parameters": "(WorkItem workItem, WorkItemManager manager)", "modifiers": "public", "return": "void", "signature": "void executeWorkItem(WorkItem workItem, WorkItemManager manager)", "full_signature": "public void executeWorkItem(WorkItem workItem, WorkItemManager manager)", "class_method_signature": "ImageClassificationWorkItemHandler.executeWorkItem(WorkItem workItem, WorkItemManager manager)", "testcase": false, "constructor": false}, {"identifier": "abortWorkItem", "parameters": "(WorkItem workItem, WorkItemManager manager)", "modifiers": "@Override public", "return": "void", "signature": "void abortWorkItem(WorkItem workItem, WorkItemManager manager)", "full_signature": "@Override public void abortWorkItem(WorkItem workItem, WorkItemManager manager)", "class_method_signature": "ImageClassificationWorkItemHandler.abortWorkItem(WorkItem workItem, WorkItemManager manager)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ImageClassificationWorkItemHandler.close()", "testcase": false, "constructor": false}, {"identifier": "getPrediction", "parameters": "(Map<String, Double> predictions)", "modifiers": "private", "return": "String", "signature": "String getPrediction(Map<String, Double> predictions)", "full_signature": "private String getPrediction(Map<String, Double> predictions)", "class_method_signature": "ImageClassificationWorkItemHandler.getPrediction(Map<String, Double> predictions)", "testcase": false, "constructor": false}], "file": "integration/jbpm/jbpm-wih-image-classification/src/main/java/org/fxapps/wih/ImageClassificationWorkItemHandler.java"}, "focal_method": {"identifier": "executeWorkItem", "parameters": "(WorkItem workItem, WorkItemManager manager)", "modifiers": "public", "return": "void", "body": "public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {\n\t\ttry {\n\t\t\tInputStream imageIS = null;\n\t\t\tObject inputImage = workItem.getParameter(PARAM_IMAGE);\n\t\t\tif (inputImage instanceof InputStream) {\n\t\t\t\timageIS = (InputStream) inputImage;\n\t\t\t} else if (inputImage instanceof File) {\n\t\t\t\timageIS = new FileInputStream((File) inputImage);\n\t\t\t} else if (inputImage instanceof URL) {\n\t\t\t\timageIS = ((URL) inputImage).openStream();\n\t\t\t} else {\n\t\t\t\tthrow new IllegalArgumentException(\"Input Parameter \" + PARAM_IMAGE + \" has an invalid type.\");\n\t\t\t}\n\t\t\tMap<String, Object> results = new HashMap<String, Object>();\n\t\t\tMap<String, Double> predictions = classifier.classifyImage(imageIS);\n\t\t\tresults.put(RESULT_PREDICTIONS, predictions);\n\t\t\tresults.put(RESULT_PREDICTION, getPrediction(predictions));\n\t\t\tmanager.completeWorkItem(workItem.getId(), results);\n\t\t} catch (Throwable cause) {\n\t\t\tSystem.out.println(\"Error running WIH: \" + cause.getMessage());\n\t\t\thandleException(cause);\n\t\t}\n\t}", "signature": "void executeWorkItem(WorkItem workItem, WorkItemManager manager)", "full_signature": "public void executeWorkItem(WorkItem workItem, WorkItemManager manager)", "class_method_signature": "ImageClassificationWorkItemHandler.executeWorkItem(WorkItem workItem, WorkItemManager manager)", "testcase": false, "constructor": false, "invocations": ["getParameter", "openStream", "classifyImage", "put", "put", "getPrediction", "completeWorkItem", "getId", "println", "getMessage", "handleException"]}, "repository": {"repo_id": 88319793, "url": "https://github.com/jesuino/java-ml-projects", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 35, "size": 3387, "license": "licensed"}}