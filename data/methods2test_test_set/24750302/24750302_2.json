{"test_class": {"identifier": "EqualConstraintTest", "superclass": "", "interfaces": "", "fields": [], "file": "alien4cloud-tosca/src/test/java/org/alien4cloud/tosca/model/definitions/constraints/EqualConstraintTest.java"}, "test_case": {"identifier": "testEqualConstraintFailNullDef", "parameters": "()", "modifiers": "@Test(expected = ConstraintViolationException.class) public", "return": "void", "body": "@Test(expected = ConstraintViolationException.class)\n    public void testEqualConstraintFailNullDef() throws ConstraintViolationException {\n        EqualConstraint constraint = new EqualConstraint();\n        constraint.setEqual(null);\n        constraint.validate(\"value\");\n    }", "signature": "void testEqualConstraintFailNullDef()", "full_signature": "@Test(expected = ConstraintViolationException.class) public void testEqualConstraintFailNullDef()", "class_method_signature": "EqualConstraintTest.testEqualConstraintFailNullDef()", "testcase": true, "constructor": false, "invocations": ["setEqual", "validate"]}, "focal_class": {"identifier": "EqualConstraint", "superclass": "extends AbstractPropertyConstraint", "interfaces": "implements IMatchPropertyConstraint", "fields": [{"original_string": "@NotNull\n    private String equal;", "modifier": "@NotNull\n    private", "type": "String", "declarator": "equal", "var_name": "equal"}, {"original_string": "@JsonIgnore\n    private Object typed;", "modifier": "@JsonIgnore\n    private", "type": "Object", "declarator": "typed", "var_name": "typed"}], "methods": [{"identifier": "initialize", "parameters": "(IPropertyType<?> propertyType)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(IPropertyType<?> propertyType)", "full_signature": "@Override public void initialize(IPropertyType<?> propertyType)", "class_method_signature": "EqualConstraint.initialize(IPropertyType<?> propertyType)", "testcase": false, "constructor": false}, {"identifier": "setConstraintValue", "parameters": "(IPropertyType<?> toscaType, String textValue)", "modifiers": "@Override public", "return": "void", "signature": "void setConstraintValue(IPropertyType<?> toscaType, String textValue)", "full_signature": "@Override public void setConstraintValue(IPropertyType<?> toscaType, String textValue)", "class_method_signature": "EqualConstraint.setConstraintValue(IPropertyType<?> toscaType, String textValue)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(Object propertyValue)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Object propertyValue)", "full_signature": "@Override public void validate(Object propertyValue)", "class_method_signature": "EqualConstraint.validate(Object propertyValue)", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(Object propertyValue)", "modifiers": "private", "return": "void", "signature": "void fail(Object propertyValue)", "full_signature": "private void fail(Object propertyValue)", "class_method_signature": "EqualConstraint.fail(Object propertyValue)", "testcase": false, "constructor": false}], "file": "alien4cloud-tosca/src/main/java/org/alien4cloud/tosca/model/definitions/constraints/EqualConstraint.java"}, "focal_method": {"identifier": "validate", "parameters": "(Object propertyValue)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Object propertyValue) throws ConstraintViolationException {\n        if (propertyValue == null) {\n            if (typed != null) {\n                fail(propertyValue);\n            }\n        } else if (typed == null) {\n            fail(propertyValue);\n        } else if (!typed.equals(propertyValue)) {\n            fail(propertyValue);\n        }\n    }", "signature": "void validate(Object propertyValue)", "full_signature": "@Override public void validate(Object propertyValue)", "class_method_signature": "EqualConstraint.validate(Object propertyValue)", "testcase": false, "constructor": false, "invocations": ["fail", "fail", "equals", "fail"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}