{"test_class": {"identifier": "MessageFormatCheckTest", "superclass": "extends AbstractReviewTest", "interfaces": "", "fields": [], "file": "org.jabylon.review.standard/src/test/java/org/jabylon/review/standard/internal/MessageFormatCheckTest.java"}, "test_case": {"identifier": "testReview", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReview() {\n\n        Property master = createProperty(\"key\", \"value {0}\");\n        Property slave = createProperty(\"value\", \"{0} wert\");\n        assertNull(getFixture().review(null, master, slave));\n    }", "signature": "void testReview()", "full_signature": "@Test public void testReview()", "class_method_signature": "MessageFormatCheckTest.testReview()", "testcase": true, "constructor": false, "invocations": ["createProperty", "createProperty", "assertNull", "review", "getFixture"]}, "focal_class": {"identifier": "MessageFormatCheck", "superclass": "", "interfaces": "implements ReviewParticipant", "fields": [{"original_string": "private static final Pattern PATTERN = Pattern.compile(\"\\\\{(\\\\d+)(,.*?)?\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"\\\\{(\\\\d+)(,.*?)?\\\\}\")", "var_name": "PATTERN"}], "methods": [{"identifier": "MessageFormatCheck", "parameters": "()", "modifiers": "public", "return": "", "signature": " MessageFormatCheck()", "full_signature": "public  MessageFormatCheck()", "class_method_signature": "MessageFormatCheck.MessageFormatCheck()", "testcase": false, "constructor": true}, {"identifier": "review", "parameters": "(PropertyFileDescriptor descriptor, Property master, Property slave)", "modifiers": "@Override public", "return": "Review", "signature": "Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "full_signature": "@Override public Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "class_method_signature": "MessageFormatCheck.review(PropertyFileDescriptor descriptor, Property master, Property slave)", "testcase": false, "constructor": false}, {"identifier": "getReviewType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getReviewType()", "full_signature": "@Override public String getReviewType()", "class_method_signature": "MessageFormatCheck.getReviewType()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "MessageFormatCheck.getID()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "MessageFormatCheck.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "MessageFormatCheck.getName()", "testcase": false, "constructor": false}], "file": "org.jabylon.review.standard/src/main/java/org/jabylon/review/standard/internal/MessageFormatCheck.java"}, "focal_method": {"identifier": "review", "parameters": "(PropertyFileDescriptor descriptor, Property master, Property slave)", "modifiers": "@Override public", "return": "Review", "body": "@Override\n\tpublic Review review(PropertyFileDescriptor descriptor, Property master, Property slave) {\n\t\tif(master==null || slave==null || master.getValue()==null || slave.getValue()==null)\n\t\t\treturn null;\n\t\tMatcher masterMatcher = PATTERN.matcher(master.getValue());\n\t\tSet<String> masterPatterns = new HashSet<String>();\n\t\twhile(masterMatcher.find())\n\t\t{\n\t\t\tmasterPatterns.add(\"{\"+masterMatcher.group(1)+\"}\");\n\t\t}\n\t\tSet<String> mustHavePatterns = new HashSet<String>(masterPatterns);\n\t\t\n\t\tMatcher slaveMatcher = PATTERN.matcher(slave.getValue());\n\t\twhile(slaveMatcher.find())\n\t\t{\n\t\t\tString patternNumber = slaveMatcher.group(1);\n\t\t\tString pattern = \"{\"+patternNumber+\"}\";\n\t\t\tif(!masterPatterns.contains(pattern))\n\t\t\t{\n\t\t\t\tReview review = PropertiesFactory.eINSTANCE.createReview();\n\t\t\t\treview.setCreated(System.currentTimeMillis());\n\t\t\t\tString message = \"Translation contains message format ''{0}'' which is not present in the template language\";\n\t\t\t\treview.setMessage(MessageFormat.format(message, pattern));\n\t\t\t\treview.setUser(\"Jabylon\");\n\t\t\t\treview.setReviewType(\"Message Format\");\n\t\t\t\treview.setSeverity(Severity.ERROR);\n\t\t\t\treturn review;\n\t\t\t}\n\t\t\tmustHavePatterns.remove(pattern);\n\t\t}\n\t\tif(!mustHavePatterns.isEmpty())\n\t\t{\n\t\t\tReview review = PropertiesFactory.eINSTANCE.createReview();\n\t\t\tString message = \"The template language contains message format ''{0}'' which is not referenced in the translation\";\n\t\t\treview.setMessage(MessageFormat.format(message, mustHavePatterns.iterator().next()));\n\t\t\treview.setUser(\"Jabylon\");\n\t\t\treview.setSeverity(Severity.ERROR);\n\t\t\treview.setReviewType(getReviewType());\n\t\t\treturn review;\n\t\t}\n\t\t\n\t\treturn null;\n\t}", "signature": "Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "full_signature": "@Override public Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "class_method_signature": "MessageFormatCheck.review(PropertyFileDescriptor descriptor, Property master, Property slave)", "testcase": false, "constructor": false, "invocations": ["getValue", "getValue", "matcher", "getValue", "find", "add", "group", "matcher", "getValue", "find", "group", "contains", "createReview", "setCreated", "currentTimeMillis", "setMessage", "format", "setUser", "setReviewType", "setSeverity", "remove", "isEmpty", "createReview", "setMessage", "format", "next", "iterator", "setUser", "setSeverity", "setReviewType", "getReviewType"]}, "repository": {"repo_id": 3986627, "url": "https://github.com/jutzig/jabylon", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 51, "size": 13400, "license": "licensed"}}