{"test_class": {"identifier": "PageViewSpoutTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map ANY_CONF = new HashMap();", "modifier": "private static final", "type": "Map", "declarator": "ANY_CONF = new HashMap()", "var_name": "ANY_CONF"}, {"original_string": "private static final String NEXT_CLICK_EVENT = \"next click event\";", "modifier": "private static final", "type": "String", "declarator": "NEXT_CLICK_EVENT = \"next click event\"", "var_name": "NEXT_CLICK_EVENT"}, {"original_string": "private OutputFieldsDeclarer declarer;", "modifier": "private", "type": "OutputFieldsDeclarer", "declarator": "declarer", "var_name": "declarer"}, {"original_string": "private TopologyContext context;", "modifier": "private", "type": "TopologyContext", "declarator": "context", "var_name": "context"}, {"original_string": "private SpoutOutputCollector collector;", "modifier": "private", "type": "SpoutOutputCollector", "declarator": "collector", "var_name": "collector"}, {"original_string": "private PageViewGenerator generator;", "modifier": "private", "type": "PageViewGenerator", "declarator": "generator", "var_name": "generator"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/spout/pageview/PageViewSpoutTest.java"}, "test_case": {"identifier": "shouldDeclareOutputFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldDeclareOutputFields() {\n    PageViewSpout spout = new PageViewSpout(false, generator);\n\n    spout.declareOutputFields(declarer);\n\n    verify(declarer, times(1)).declare(any(Fields.class));\n  }", "signature": "void shouldDeclareOutputFields()", "full_signature": "@Test public void shouldDeclareOutputFields()", "class_method_signature": "PageViewSpoutTest.shouldDeclareOutputFields()", "testcase": true, "constructor": false, "invocations": ["declareOutputFields", "declare", "verify", "times", "any"]}, "focal_class": {"identifier": "PageViewSpout", "superclass": "extends BaseRichSpout", "interfaces": "", "fields": [{"original_string": "public static final String FIELDS = \"page_view\";", "modifier": "public static final", "type": "String", "declarator": "FIELDS = \"page_view\"", "var_name": "FIELDS"}, {"original_string": "private SpoutOutputCollector collector;", "modifier": "private", "type": "SpoutOutputCollector", "declarator": "collector", "var_name": "collector"}, {"original_string": "private final PageViewGenerator generator;", "modifier": "private final", "type": "PageViewGenerator", "declarator": "generator", "var_name": "generator"}, {"original_string": "private final boolean ackEnabled;", "modifier": "private final", "type": "boolean", "declarator": "ackEnabled", "var_name": "ackEnabled"}, {"original_string": "private long count = 0;", "modifier": "private", "type": "long", "declarator": "count = 0", "var_name": "count"}], "methods": [{"identifier": "PageViewSpout", "parameters": "(boolean ackEnabled)", "modifiers": "public", "return": "", "signature": " PageViewSpout(boolean ackEnabled)", "full_signature": "public  PageViewSpout(boolean ackEnabled)", "class_method_signature": "PageViewSpout.PageViewSpout(boolean ackEnabled)", "testcase": false, "constructor": true}, {"identifier": "PageViewSpout", "parameters": "(boolean ackEnabled, PageViewGenerator generator)", "modifiers": "public", "return": "", "signature": " PageViewSpout(boolean ackEnabled, PageViewGenerator generator)", "full_signature": "public  PageViewSpout(boolean ackEnabled, PageViewGenerator generator)", "class_method_signature": "PageViewSpout.PageViewSpout(boolean ackEnabled, PageViewGenerator generator)", "testcase": false, "constructor": true}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "PageViewSpout.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(Map conf, TopologyContext context, SpoutOutputCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "full_signature": "@Override public void open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "class_method_signature": "PageViewSpout.open(Map conf, TopologyContext context, SpoutOutputCollector collector)", "testcase": false, "constructor": false}, {"identifier": "nextTuple", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void nextTuple()", "full_signature": "@Override public void nextTuple()", "class_method_signature": "PageViewSpout.nextTuple()", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/spout/pageview/PageViewSpout.java"}, "focal_method": {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    declarer.declare(new Fields(FIELDS));\n  }", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "PageViewSpout.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false, "invocations": ["declare"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}