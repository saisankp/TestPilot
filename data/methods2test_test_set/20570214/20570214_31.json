{"test_class": {"identifier": "AesGcmSivKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AesGcmSivKeyManager manager = new AesGcmSivKeyManager();", "modifier": "private final", "type": "AesGcmSivKeyManager", "declarator": "manager = new AesGcmSivKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<AesGcmSivKeyFormat, AesGcmSivKey> factory =\n      manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<AesGcmSivKeyFormat, AesGcmSivKey>", "declarator": "factory =\n      manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/aead/AesGcmSivKeyManagerTest.java"}, "test_case": {"identifier": "testRawAes256GcmSivTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRawAes256GcmSivTemplate() throws Exception {\n    KeyTemplate template = AesGcmSivKeyManager.rawAes256GcmSivTemplate();\n    assertEquals(new AesGcmSivKeyManager().getKeyType(), template.getTypeUrl());\n    assertEquals(KeyTemplate.OutputPrefixType.RAW, template.getOutputPrefixType());\n    AesGcmSivKeyFormat format =\n        AesGcmSivKeyFormat.parseFrom(\n            ByteString.copyFrom(template.getValue()), ExtensionRegistryLite.getEmptyRegistry());\n    assertEquals(32, format.getKeySize());\n  }", "signature": "void testRawAes256GcmSivTemplate()", "full_signature": "@Test public void testRawAes256GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManagerTest.testRawAes256GcmSivTemplate()", "testcase": true, "constructor": false, "invocations": ["rawAes256GcmSivTemplate", "assertEquals", "getKeyType", "getTypeUrl", "assertEquals", "getOutputPrefixType", "parseFrom", "copyFrom", "getValue", "getEmptyRegistry", "assertEquals", "getKeySize"]}, "focal_class": {"identifier": "AesGcmSivKeyManager", "superclass": "extends KeyTypeManager<AesGcmSivKey>", "interfaces": "", "fields": [], "methods": [{"identifier": "AesGcmSivKeyManager", "parameters": "()", "modifiers": "", "return": "", "signature": " AesGcmSivKeyManager()", "full_signature": "  AesGcmSivKeyManager()", "class_method_signature": "AesGcmSivKeyManager.AesGcmSivKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "AesGcmSivKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "AesGcmSivKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "AesGcmSivKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(AesGcmSivKey key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(AesGcmSivKey key)", "full_signature": "@Override public void validateKey(AesGcmSivKey key)", "class_method_signature": "AesGcmSivKeyManager.validateKey(AesGcmSivKey key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "AesGcmSivKey", "signature": "AesGcmSivKey parseKey(ByteString byteString)", "full_signature": "@Override public AesGcmSivKey parseKey(ByteString byteString)", "class_method_signature": "AesGcmSivKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<AesGcmSivKeyFormat, AesGcmSivKey>", "signature": "KeyFactory<AesGcmSivKeyFormat, AesGcmSivKey> keyFactory()", "full_signature": "@Override public KeyFactory<AesGcmSivKeyFormat, AesGcmSivKey> keyFactory()", "class_method_signature": "AesGcmSivKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "canUseAesGcmSive", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean canUseAesGcmSive()", "full_signature": "private static boolean canUseAesGcmSive()", "class_method_signature": "AesGcmSivKeyManager.canUseAesGcmSive()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "AesGcmSivKeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "aes128GcmSivTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes128GcmSivTemplate()", "full_signature": "public static final KeyTemplate aes128GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManager.aes128GcmSivTemplate()", "testcase": false, "constructor": false}, {"identifier": "rawAes128GcmSivTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawAes128GcmSivTemplate()", "full_signature": "public static final KeyTemplate rawAes128GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManager.rawAes128GcmSivTemplate()", "testcase": false, "constructor": false}, {"identifier": "aes256GcmSivTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes256GcmSivTemplate()", "full_signature": "public static final KeyTemplate aes256GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManager.aes256GcmSivTemplate()", "testcase": false, "constructor": false}, {"identifier": "rawAes256GcmSivTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawAes256GcmSivTemplate()", "full_signature": "public static final KeyTemplate rawAes256GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManager.rawAes256GcmSivTemplate()", "testcase": false, "constructor": false}, {"identifier": "createKeyTemplate", "parameters": "(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "modifiers": "private static", "return": "KeyTemplate", "signature": "KeyTemplate createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "full_signature": "private static KeyTemplate createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "class_method_signature": "AesGcmSivKeyManager.createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/aead/AesGcmSivKeyManager.java"}, "focal_method": {"identifier": "rawAes256GcmSivTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate rawAes256GcmSivTemplate() {\n    return createKeyTemplate(32, KeyTemplate.OutputPrefixType.RAW);\n  }", "signature": "KeyTemplate rawAes256GcmSivTemplate()", "full_signature": "public static final KeyTemplate rawAes256GcmSivTemplate()", "class_method_signature": "AesGcmSivKeyManager.rawAes256GcmSivTemplate()", "testcase": false, "constructor": false, "invocations": ["createKeyTemplate"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}