{"test_class": {"identifier": "ClassTypeExtractorTest", "superclass": "", "interfaces": "", "fields": [], "file": "saga-lib/src/test/java/com/codebullets/sagalib/processing/ClassTypeExtractorTest.java"}, "test_case": {"identifier": "interfaces_ArrayList_returnsSuperInterfacesOfImplementedInterfaces", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void interfaces_ArrayList_returnsSuperInterfacesOfImplementedInterfaces() {\n        // given\n        ClassTypeExtractor sut = new ClassTypeExtractor(ArrayList.class);\n\n        // when\n        Iterable<Class<?>> interfaces = sut.interfaces();\n\n        // then\n        assertThat(\"Expected iterable base interface.\", interfaces, hasItem(Iterable.class));\n    }", "signature": "void interfaces_ArrayList_returnsSuperInterfacesOfImplementedInterfaces()", "full_signature": "@Test public void interfaces_ArrayList_returnsSuperInterfacesOfImplementedInterfaces()", "class_method_signature": "ClassTypeExtractorTest.interfaces_ArrayList_returnsSuperInterfacesOfImplementedInterfaces()", "testcase": true, "constructor": false, "invocations": ["interfaces", "assertThat", "hasItem"]}, "focal_class": {"identifier": "ClassTypeExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<Class<?>> classes = new ArrayList<>();", "modifier": "private final", "type": "List<Class<?>>", "declarator": "classes = new ArrayList<>()", "var_name": "classes"}, {"original_string": "private final Set<Class<?>> interfaces = new HashSet<>();", "modifier": "private final", "type": "Set<Class<?>>", "declarator": "interfaces = new HashSet<>()", "var_name": "interfaces"}], "methods": [{"identifier": "ClassTypeExtractor", "parameters": "(final Class<?> rootType)", "modifiers": "public", "return": "", "signature": " ClassTypeExtractor(final Class<?> rootType)", "full_signature": "public  ClassTypeExtractor(final Class<?> rootType)", "class_method_signature": "ClassTypeExtractor.ClassTypeExtractor(final Class<?> rootType)", "testcase": false, "constructor": true}, {"identifier": "allClasses", "parameters": "()", "modifiers": "public", "return": "Iterable<Class<?>>", "signature": "Iterable<Class<?>> allClasses()", "full_signature": "public Iterable<Class<?>> allClasses()", "class_method_signature": "ClassTypeExtractor.allClasses()", "testcase": false, "constructor": false}, {"identifier": "interfaces", "parameters": "()", "modifiers": "public", "return": "Iterable<Class<?>>", "signature": "Iterable<Class<?>> interfaces()", "full_signature": "public Iterable<Class<?>> interfaces()", "class_method_signature": "ClassTypeExtractor.interfaces()", "testcase": false, "constructor": false}, {"identifier": "allClassesAndInterfaces", "parameters": "()", "modifiers": "public", "return": "Iterable<Class<?>>", "signature": "Iterable<Class<?>> allClassesAndInterfaces()", "full_signature": "public Iterable<Class<?>> allClassesAndInterfaces()", "class_method_signature": "ClassTypeExtractor.allClassesAndInterfaces()", "testcase": false, "constructor": false}, {"identifier": "scanType", "parameters": "(final Class<?> root)", "modifiers": "private", "return": "void", "signature": "void scanType(final Class<?> root)", "full_signature": "private void scanType(final Class<?> root)", "class_method_signature": "ClassTypeExtractor.scanType(final Class<?> root)", "testcase": false, "constructor": false}, {"identifier": "addAllInterfaces", "parameters": "(final Class<?> root)", "modifiers": "private", "return": "void", "signature": "void addAllInterfaces(final Class<?> root)", "full_signature": "private void addAllInterfaces(final Class<?> root)", "class_method_signature": "ClassTypeExtractor.addAllInterfaces(final Class<?> root)", "testcase": false, "constructor": false}], "file": "saga-lib/src/main/java/com/codebullets/sagalib/processing/ClassTypeExtractor.java"}, "focal_method": {"identifier": "interfaces", "parameters": "()", "modifiers": "public", "return": "Iterable<Class<?>>", "body": "public Iterable<Class<?>> interfaces() {\n        return interfaces;\n    }", "signature": "Iterable<Class<?>> interfaces()", "full_signature": "public Iterable<Class<?>> interfaces()", "class_method_signature": "ClassTypeExtractor.interfaces()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10566148, "url": "https://github.com/Domo42/saga-lib", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 32, "size": 545, "license": "licensed"}}