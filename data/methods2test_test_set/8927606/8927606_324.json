{"test_class": {"identifier": "OverridesMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "OverridesMap<String> map;", "modifier": "", "type": "OverridesMap<String>", "declarator": "map", "var_name": "map"}], "file": "core/src/test/java/nl/nn/adapterframework/align/OverridesMapTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tmap.registerSubstitute(\"Party/Id\", \"PartyId\");\n\t\tmap.registerSubstitute(\"Address/Id\", \"AdressId\");\n\t\tmap.registerSubstitute(\"Id\", \"DefaultId\");\n\t\tmap.registerSubstitute(\"Data\", \"Data\");\n\t\tmap.registerSubstitute(\"Root/Sub\", \"SubValue\");\n\t\t\n\t\ttestSubst(null,\"Id\",\"DefaultId\");\n\t\ttestSubst(null,\"Party\",null, true);\n\t\ttestSubst(null,\"Data\",\"Data\");\n\t\ttestSubst(null,\"Sub\",null);\n\n\t\ttestSubst(\"Root\",\"Id\",\"DefaultId\");\n\t\ttestSubst(\"Root\",\"Party\",null, true);\n\t\ttestSubst(\"Root\",\"Data\",\"Data\");\n\t\ttestSubst(\"Root\",\"Sub\",\"SubValue\");\n\n\t\ttestSubst(\"Root/Party\",\"Id\",\"PartyId\");\n\t\ttestSubst(\"Root/Party\",\"Party\",null, true);\n\t\ttestSubst(\"Root/Party\",\"Data\",\"Data\");\n\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "OverridesMapTest.test()", "testcase": true, "constructor": false, "invocations": ["registerSubstitute", "registerSubstitute", "registerSubstitute", "registerSubstitute", "registerSubstitute", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst", "testSubst"]}, "focal_class": {"identifier": "OverridesMap", "superclass": "extends SubstitutionNode<V>", "interfaces": "implements SubstitutionProvider<V>", "fields": [{"original_string": "Map<String,Set<String>> allParents = new HashMap<String,Set<String>>();", "modifier": "", "type": "Map<String,Set<String>>", "declarator": "allParents = new HashMap<String,Set<String>>()", "var_name": "allParents"}], "methods": [{"identifier": "registerSubstitute", "parameters": "(String[] elements, int index, V value)", "modifiers": "@Override protected", "return": "void", "signature": "void registerSubstitute(String[] elements, int index, V value)", "full_signature": "@Override protected void registerSubstitute(String[] elements, int index, V value)", "class_method_signature": "OverridesMap.registerSubstitute(String[] elements, int index, V value)", "testcase": false, "constructor": false}, {"identifier": "registerParent", "parameters": "(String parent, String child)", "modifiers": "protected", "return": "void", "signature": "void registerParent(String parent, String child)", "full_signature": "protected void registerParent(String parent, String child)", "class_method_signature": "OverridesMap.registerParent(String parent, String child)", "testcase": false, "constructor": false}, {"identifier": "hasSubstitutionsFor", "parameters": "(AlignmentContext context, String childName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasSubstitutionsFor(AlignmentContext context, String childName)", "full_signature": "@Override public boolean hasSubstitutionsFor(AlignmentContext context, String childName)", "class_method_signature": "OverridesMap.hasSubstitutionsFor(AlignmentContext context, String childName)", "testcase": false, "constructor": false}, {"identifier": "getOverride", "parameters": "(AlignmentContext context)", "modifiers": "@Override public", "return": "V", "signature": "V getOverride(AlignmentContext context)", "full_signature": "@Override public V getOverride(AlignmentContext context)", "class_method_signature": "OverridesMap.getOverride(AlignmentContext context)", "testcase": false, "constructor": false}, {"identifier": "getDefault", "parameters": "(AlignmentContext context)", "modifiers": "@Override public", "return": "V", "signature": "V getDefault(AlignmentContext context)", "full_signature": "@Override public V getDefault(AlignmentContext context)", "class_method_signature": "OverridesMap.getDefault(AlignmentContext context)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/align/OverridesMap.java"}, "focal_method": {"identifier": "registerSubstitute", "parameters": "(String[] elements, int index, V value)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void registerSubstitute(String[] elements, int index, V value) {\n\t\tsuper.registerSubstitute(elements, index, value);\n\t\tfor(int i=0;i<index;i++) {\n\t\t\tregisterParent(i>0?elements[i-1]:null,elements[i]);\n\t\t}\n\t}", "signature": "void registerSubstitute(String[] elements, int index, V value)", "full_signature": "@Override protected void registerSubstitute(String[] elements, int index, V value)", "class_method_signature": "OverridesMap.registerSubstitute(String[] elements, int index, V value)", "testcase": false, "constructor": false, "invocations": ["registerSubstitute", "registerParent"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}