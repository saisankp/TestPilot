{"test_class": {"identifier": "TestUserDao", "superclass": "extends TestAbstractHibernateDao<User, String>", "interfaces": "", "fields": [{"original_string": "@Autowired\n   private UserDao dao;", "modifier": "@Autowired\n   private", "type": "UserDao", "declarator": "dao", "var_name": "dao"}], "file": "core/src/test/java/fr/gael/dhus/database/dao/TestUserDao.java"}, "test_case": {"identifier": "getUserSearches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void getUserSearches ()\n   {\n      List<Search> s = dao.getUserSearches (dao.read (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\"));\n      Assert.assertEquals (s.size (), 2);\n   }", "signature": "void getUserSearches()", "full_signature": "@Test public void getUserSearches()", "class_method_signature": "TestUserDao.getUserSearches()", "testcase": true, "constructor": false, "invocations": ["getUserSearches", "read", "assertEquals", "size"]}, "focal_class": {"identifier": "UserDao", "superclass": "extends HibernateDao<User, String>", "interfaces": "", "fields": [{"original_string": "@Autowired\n   private ConfigurationManager cfgManager;", "modifier": "@Autowired\n   private", "type": "ConfigurationManager", "declarator": "cfgManager", "var_name": "cfgManager"}, {"original_string": "@Autowired\n   private ProductCartDao productCartDao;", "modifier": "@Autowired\n   private", "type": "ProductCartDao", "declarator": "productCartDao", "var_name": "productCartDao"}, {"original_string": "@Autowired\n   private SearchDao searchDao;", "modifier": "@Autowired\n   private", "type": "SearchDao", "declarator": "searchDao", "var_name": "searchDao"}, {"original_string": "@Autowired\n   private AccessRestrictionDao accessRestrictionDao;", "modifier": "@Autowired\n   private", "type": "AccessRestrictionDao", "declarator": "accessRestrictionDao", "var_name": "accessRestrictionDao"}, {"original_string": "private final Logger LOGGER = LogManager.getLogger();", "modifier": "private final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger()", "var_name": "LOGGER"}], "methods": [{"identifier": "getByName", "parameters": "(final String name)", "modifiers": "public", "return": "User", "signature": "User getByName(final String name)", "full_signature": "public User getByName(final String name)", "class_method_signature": "UserDao.getByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final User user)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final User user)", "full_signature": "@Override public void delete(final User user)", "class_method_signature": "UserDao.delete(final User user)", "testcase": false, "constructor": false}, {"identifier": "forceDelete", "parameters": "(User user)", "modifiers": "private", "return": "void", "signature": "void forceDelete(User user)", "full_signature": "private void forceDelete(User user)", "class_method_signature": "UserDao.forceDelete(User user)", "testcase": false, "constructor": false}, {"identifier": "readNotAdmin", "parameters": "()", "modifiers": "@SuppressWarnings (\"unchecked\") public", "return": "List<User>", "signature": "List<User> readNotAdmin()", "full_signature": "@SuppressWarnings (\"unchecked\") public List<User> readNotAdmin()", "class_method_signature": "UserDao.readNotAdmin()", "testcase": false, "constructor": false}, {"identifier": "iterate", "parameters": "(final String filter, int skip)", "modifiers": "public", "return": "Iterator<User>", "signature": "Iterator<User> iterate(final String filter, int skip)", "full_signature": "public Iterator<User> iterate(final String filter, int skip)", "class_method_signature": "UserDao.iterate(final String filter, int skip)", "testcase": false, "constructor": false}, {"identifier": "scrollAll", "parameters": "(String filter, int skip)", "modifiers": "public", "return": "Iterator<User>", "signature": "Iterator<User> scrollAll(String filter, int skip)", "full_signature": "public Iterator<User> scrollAll(String filter, int skip)", "class_method_signature": "UserDao.scrollAll(String filter, int skip)", "testcase": false, "constructor": false}, {"identifier": "countNotAdmin", "parameters": "(String filter)", "modifiers": "public", "return": "int", "signature": "int countNotAdmin(String filter)", "full_signature": "public int countNotAdmin(String filter)", "class_method_signature": "UserDao.countNotAdmin(String filter)", "testcase": false, "constructor": false}, {"identifier": "countAll", "parameters": "(String filter)", "modifiers": "public", "return": "int", "signature": "int countAll(String filter)", "full_signature": "public int countAll(String filter)", "class_method_signature": "UserDao.countAll(String filter)", "testcase": false, "constructor": false}, {"identifier": "computeUserCode", "parameters": "(User user)", "modifiers": "public", "return": "String", "signature": "String computeUserCode(User user)", "full_signature": "public String computeUserCode(User user)", "class_method_signature": "UserDao.computeUserCode(User user)", "testcase": false, "constructor": false}, {"identifier": "getUserFromUserCode", "parameters": "(String code)", "modifiers": "public", "return": "User", "signature": "User getUserFromUserCode(String code)", "full_signature": "public User getUserFromUserCode(String code)", "class_method_signature": "UserDao.getUserFromUserCode(String code)", "testcase": false, "constructor": false}, {"identifier": "lockUser", "parameters": "(User user, String reason)", "modifiers": "public", "return": "void", "signature": "void lockUser(User user, String reason)", "full_signature": "public void lockUser(User user, String reason)", "class_method_signature": "UserDao.lockUser(User user, String reason)", "testcase": false, "constructor": false}, {"identifier": "unlockUser", "parameters": "(User user, Class<? extends AccessRestriction> car)", "modifiers": "public", "return": "void", "signature": "void unlockUser(User user, Class<? extends AccessRestriction> car)", "full_signature": "public void unlockUser(User user, Class<? extends AccessRestriction> car)", "class_method_signature": "UserDao.unlockUser(User user, Class<? extends AccessRestriction> car)", "testcase": false, "constructor": false}, {"identifier": "createTmpUser", "parameters": "(User user)", "modifiers": "public", "return": "void", "signature": "void createTmpUser(User user)", "full_signature": "public void createTmpUser(User user)", "class_method_signature": "UserDao.createTmpUser(User user)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(User u)", "modifiers": "@Override public", "return": "User", "signature": "User create(User u)", "full_signature": "@Override public User create(User u)", "class_method_signature": "UserDao.create(User u)", "testcase": false, "constructor": false}, {"identifier": "createWithoutMail", "parameters": "(User user)", "modifiers": "public", "return": "User", "signature": "User createWithoutMail(User user)", "full_signature": "public User createWithoutMail(User user)", "class_method_signature": "UserDao.createWithoutMail(User user)", "testcase": false, "constructor": false}, {"identifier": "registerTmpUser", "parameters": "(User u)", "modifiers": "public", "return": "void", "signature": "void registerTmpUser(User u)", "full_signature": "public void registerTmpUser(User u)", "class_method_signature": "UserDao.registerTmpUser(User u)", "testcase": false, "constructor": false}, {"identifier": "isTmpUser", "parameters": "(User u)", "modifiers": "public", "return": "boolean", "signature": "boolean isTmpUser(User u)", "full_signature": "public boolean isTmpUser(User u)", "class_method_signature": "UserDao.isTmpUser(User u)", "testcase": false, "constructor": false}, {"identifier": "cleanupTmpUser", "parameters": "(int max_days)", "modifiers": "public", "return": "void", "signature": "void cleanupTmpUser(int max_days)", "full_signature": "public void cleanupTmpUser(int max_days)", "class_method_signature": "UserDao.cleanupTmpUser(int max_days)", "testcase": false, "constructor": false}, {"identifier": "getRootUser", "parameters": "()", "modifiers": "public", "return": "User", "signature": "User getRootUser()", "full_signature": "public User getRootUser()", "class_method_signature": "UserDao.getRootUser()", "testcase": false, "constructor": false}, {"identifier": "isRootUser", "parameters": "(User user)", "modifiers": "public", "return": "boolean", "signature": "boolean isRootUser(User user)", "full_signature": "public boolean isRootUser(User user)", "class_method_signature": "UserDao.isRootUser(User user)", "testcase": false, "constructor": false}, {"identifier": "fireUserRegister", "parameters": "(DaoEvent<User> e)", "modifiers": "", "return": "void", "signature": "void fireUserRegister(DaoEvent<User> e)", "full_signature": " void fireUserRegister(DaoEvent<User> e)", "class_method_signature": "UserDao.fireUserRegister(DaoEvent<User> e)", "testcase": false, "constructor": false}, {"identifier": "updateUserPreference", "parameters": "(User user)", "modifiers": "private", "return": "void", "signature": "void updateUserPreference(User user)", "full_signature": "private void updateUserPreference(User user)", "class_method_signature": "UserDao.updateUserPreference(User user)", "testcase": false, "constructor": false}, {"identifier": "storeUserSearch", "parameters": "(User user, String request, String footprint,\n         HashMap<String, String> advanced, String complete)", "modifiers": "public", "return": "void", "signature": "void storeUserSearch(User user, String request, String footprint,\n         HashMap<String, String> advanced, String complete)", "full_signature": "public void storeUserSearch(User user, String request, String footprint,\n         HashMap<String, String> advanced, String complete)", "class_method_signature": "UserDao.storeUserSearch(User user, String request, String footprint,\n         HashMap<String, String> advanced, String complete)", "testcase": false, "constructor": false}, {"identifier": "removeUserSearch", "parameters": "(User user, String uuid)", "modifiers": "public", "return": "void", "signature": "void removeUserSearch(User user, String uuid)", "full_signature": "public void removeUserSearch(User user, String uuid)", "class_method_signature": "UserDao.removeUserSearch(User user, String uuid)", "testcase": false, "constructor": false}, {"identifier": "activateUserSearchNotification", "parameters": "(String uuid, boolean notify)", "modifiers": "public", "return": "void", "signature": "void activateUserSearchNotification(String uuid, boolean notify)", "full_signature": "public void activateUserSearchNotification(String uuid, boolean notify)", "class_method_signature": "UserDao.activateUserSearchNotification(String uuid, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearUserSearches", "parameters": "(User user)", "modifiers": "public", "return": "void", "signature": "void clearUserSearches(User user)", "full_signature": "public void clearUserSearches(User user)", "class_method_signature": "UserDao.clearUserSearches(User user)", "testcase": false, "constructor": false}, {"identifier": "getUserSearches", "parameters": "(User user)", "modifiers": "public", "return": "List<Search>", "signature": "List<Search> getUserSearches(User user)", "full_signature": "public List<Search> getUserSearches(User user)", "class_method_signature": "UserDao.getUserSearches(User user)", "testcase": false, "constructor": false}, {"identifier": "getUsersByFilter", "parameters": "(String filter, int skip)", "modifiers": "public", "return": "Iterator<User>", "signature": "Iterator<User> getUsersByFilter(String filter, int skip)", "full_signature": "public Iterator<User> getUsersByFilter(String filter, int skip)", "class_method_signature": "UserDao.getUsersByFilter(String filter, int skip)", "testcase": false, "constructor": false}, {"identifier": "countByFilter", "parameters": "(String filter)", "modifiers": "public", "return": "int", "signature": "int countByFilter(String filter)", "full_signature": "public int countByFilter(String filter)", "class_method_signature": "UserDao.countByFilter(String filter)", "testcase": false, "constructor": false}, {"identifier": "countUsers", "parameters": "(String filter)", "modifiers": "public", "return": "int", "signature": "int countUsers(String filter)", "full_signature": "public int countUsers(String filter)", "class_method_signature": "UserDao.countUsers(String filter)", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "()", "modifiers": "public", "return": "Iterator<User>", "signature": "Iterator<User> getAllUsers()", "full_signature": "public Iterator<User> getAllUsers()", "class_method_signature": "UserDao.getAllUsers()", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/database/dao/UserDao.java"}, "focal_method": {"identifier": "getUserSearches", "parameters": "(User user)", "modifiers": "public", "return": "List<Search>", "body": "public List<Search> getUserSearches (User user)\n   {\n      Set<Search> searches = read (user.getUUID ()).getPreferences ().\n            getSearches ();\n      List<Search> list = new ArrayList<Search> (searches);\n      Collections.sort (list, new Comparator<Search> ()\n      {\n         @Override\n         public int compare (Search arg0, Search arg1)\n         {\n            return arg0.getValue ().compareTo (arg1.getValue ());\n         }\n      });      \n      return list;\n   }", "signature": "List<Search> getUserSearches(User user)", "full_signature": "public List<Search> getUserSearches(User user)", "class_method_signature": "UserDao.getUserSearches(User user)", "testcase": false, "constructor": false, "invocations": ["getSearches", "getPreferences", "read", "getUUID", "sort", "compareTo", "getValue", "getValue"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}