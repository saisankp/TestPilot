{"test_class": {"identifier": "BuildPropertiesParserImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BuildPropertiesParserImpl parser;", "modifier": "private", "type": "BuildPropertiesParserImpl", "declarator": "parser", "var_name": "parser"}, {"original_string": "private LegacySupport legacySupport;", "modifier": "private", "type": "LegacySupport", "declarator": "legacySupport", "var_name": "legacySupport"}, {"original_string": "private MavenSession mavenSession;", "modifier": "private", "type": "MavenSession", "declarator": "mavenSession", "var_name": "mavenSession"}, {"original_string": "private MavenProject project1;", "modifier": "private", "type": "MavenProject", "declarator": "project1", "var_name": "project1"}, {"original_string": "private MavenProject project2;", "modifier": "private", "type": "MavenProject", "declarator": "project2", "var_name": "project2"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "file": "tycho-core/src/test/java/org/eclipse/tycho/core/osgitools/BuildPropertiesParserImplTest.java"}, "test_case": {"identifier": "testInterpolateWithEmptyProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInterpolateWithEmptyProperties() {\n        parser.interpolate(new Properties(), null);\n    }", "signature": "void testInterpolateWithEmptyProperties()", "full_signature": "@Test public void testInterpolateWithEmptyProperties()", "class_method_signature": "BuildPropertiesParserImplTest.testInterpolateWithEmptyProperties()", "testcase": true, "constructor": false, "invocations": ["interpolate"]}, "focal_class": {"identifier": "BuildPropertiesParserImpl", "superclass": "", "interfaces": "implements BuildPropertiesParser, Disposable", "fields": [{"original_string": "@Requirement\n    private LegacySupport legacySupport;", "modifier": "@Requirement\n    private", "type": "LegacySupport", "declarator": "legacySupport", "var_name": "legacySupport"}, {"original_string": "@Requirement\n    private Logger logger;", "modifier": "@Requirement\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private final Map<String, BuildPropertiesImpl> cache = new HashMap<>();", "modifier": "private final", "type": "Map<String, BuildPropertiesImpl>", "declarator": "cache = new HashMap<>()", "var_name": "cache"}], "methods": [{"identifier": "BuildPropertiesParserImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " BuildPropertiesParserImpl()", "full_signature": "public  BuildPropertiesParserImpl()", "class_method_signature": "BuildPropertiesParserImpl.BuildPropertiesParserImpl()", "testcase": false, "constructor": true}, {"identifier": "BuildPropertiesParserImpl", "parameters": "(LegacySupport legacySupport, Logger logger)", "modifiers": "protected", "return": "", "signature": " BuildPropertiesParserImpl(LegacySupport legacySupport, Logger logger)", "full_signature": "protected  BuildPropertiesParserImpl(LegacySupport legacySupport, Logger logger)", "class_method_signature": "BuildPropertiesParserImpl.BuildPropertiesParserImpl(LegacySupport legacySupport, Logger logger)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(File baseDir)", "modifiers": "@Override public", "return": "BuildProperties", "signature": "BuildProperties parse(File baseDir)", "full_signature": "@Override public BuildProperties parse(File baseDir)", "class_method_signature": "BuildPropertiesParserImpl.parse(File baseDir)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "BuildPropertiesParserImpl.dispose()", "testcase": false, "constructor": false}, {"identifier": "readProperties", "parameters": "(File propsFile)", "modifiers": "protected static", "return": "Properties", "signature": "Properties readProperties(File propsFile)", "full_signature": "protected static Properties readProperties(File propsFile)", "class_method_signature": "BuildPropertiesParserImpl.readProperties(File propsFile)", "testcase": false, "constructor": false}, {"identifier": "interpolate", "parameters": "(Properties properties, File baseDir)", "modifiers": "protected", "return": "void", "signature": "void interpolate(Properties properties, File baseDir)", "full_signature": "protected void interpolate(Properties properties, File baseDir)", "class_method_signature": "BuildPropertiesParserImpl.interpolate(Properties properties, File baseDir)", "testcase": false, "constructor": false}], "file": "tycho-core/src/main/java/org/eclipse/tycho/core/osgitools/BuildPropertiesParserImpl.java"}, "focal_method": {"identifier": "interpolate", "parameters": "(Properties properties, File baseDir)", "modifiers": "protected", "return": "void", "body": "protected void interpolate(Properties properties, File baseDir) {\n        if (properties.isEmpty()) {\n            return;\n        }\n        MavenSession mavenSession = legacySupport.getSession();\n        if (mavenSession == null) {\n            logger.warn(\"No maven session available, values in the build.properties will not be interpolated!\");\n            return;\n        }\n        // find the maven project for the currently used basedir, so that the correct maven project is used by the interpolator.\n        // if no project could be found, it does not make sense to interpolate the properties\n        MavenProject mavenProject = MavenSessionUtils.getMavenProject(mavenSession, baseDir);\n        if (mavenProject == null) {\n            logger.warn(\"No maven project found for baseDir '\" + baseDir.getAbsolutePath()\n                    + \"', values in the build.properties will not be interpolated!\");\n            return;\n        }\n        TychoInterpolator interpolator = new TychoInterpolator(mavenSession, mavenProject);\n\n        for (Entry<Object, Object> entry : properties.entrySet()) {\n            entry.setValue(interpolator.interpolate((String) entry.getValue()));\n        }\n    }", "signature": "void interpolate(Properties properties, File baseDir)", "full_signature": "protected void interpolate(Properties properties, File baseDir)", "class_method_signature": "BuildPropertiesParserImpl.interpolate(Properties properties, File baseDir)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getSession", "warn", "getMavenProject", "warn", "getAbsolutePath", "entrySet", "setValue", "interpolate", "getValue"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}