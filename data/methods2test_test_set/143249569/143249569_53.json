{"test_class": {"identifier": "SubModelTest", "superclass": "", "interfaces": "", "fields": [], "file": "ask-sdk-interaction-model-mapper/src/test/java/com/amazon/ask/interaction/data/model/SubModelTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SubModel left = SubModel.builder()\n            .withLanguageModel(SubLanguageModel.builder()\n                .withIntents(Collections.singletonList(\n                    Intent.builder()\n                        .withName(\"test\")\n                        .withSamples(Collections.singletonList(\"test\"))\n                        .withSlots(Collections.singletonList(\n                            Slot.builder()\n                                .withName(\"test\")\n                                .withType(\"test\")\n                                .build()\n                        ))\n                        .build()\n                ))\n                .build())\n            .withDialog(Dialog.builder()\n                .withIntents(Collections.singletonList(\n                    DialogIntent.builder()\n                        .withName(\"test\")\n                        .withConfirmationRequired(true)\n                        .withPrompts(DialogIntentPrompt.builder()\n                            .withConfirmation(\"test\")\n                            .build())\n                        .withSlots(Collections.singletonList(\n                            DialogSlot.builder()\n                                .withName(\"test\")\n                                .withType(\"test\")\n                                .withConfirmationRequired(true)\n                                .withElicitationRequired(true)\n                                .withPrompts(DialogSlotPrompt.builder()\n                                    .withConfirmation(\"testConfirm\")\n                                    .withElicitation(\"testElicit\")\n                                    .build())\n                                .build()\n                        ))\n                        .build()\n                ))\n                .build())\n            .addPrompts(Collections.singletonList(\n                Prompt.builder()\n                    .withId(\"test\")\n                    .withVariations(Collections.singletonList(\n                        PromptVariation.builder()\n                            .withType(\"PlainText\")\n                            .withValue(\"test\")\n                            .build()\n                    ))\n                    .build()\n            ))\n            .build();\n\n        SubModel right = SubModel.builder()\n            .withLanguageModel(SubLanguageModel.builder()\n                .withIntents(Collections.singletonList(\n                    Intent.builder()\n                        .withName(\"test\")\n                        .withSamples(Collections.singletonList(\"test\"))\n                        .withSlots(Collections.singletonList(\n                            Slot.builder()\n                                .withName(\"test\")\n                                .withType(\"test\")\n                                .build()\n                        ))\n                        .build()\n                ))\n                .build())\n            .withDialog(Dialog.builder()\n                .withIntents(Collections.singletonList(\n                    DialogIntent.builder()\n                        .withName(\"test\")\n                        .withConfirmationRequired(true)\n                        .withPrompts(DialogIntentPrompt.builder()\n                            .withConfirmation(\"test\")\n                            .build())\n                        .withSlots(Collections.singletonList(\n                            DialogSlot.builder()\n                                .withName(\"test\")\n                                .withType(\"test\")\n                                .withConfirmationRequired(true)\n                                .withElicitationRequired(true)\n                                .withPrompts(DialogSlotPrompt.builder()\n                                    .withConfirmation(\"testConfirm\")\n                                    .withElicitation(\"testElicit\")\n                                    .build())\n                                .build()\n                        ))\n                        .build()\n                ))\n                .build())\n            .addPrompts(Collections.singletonList(\n                Prompt.builder()\n                    .withId(\"test\")\n                    .withVariations(Collections.singletonList(\n                        PromptVariation.builder()\n                            .withType(\"PlainText\")\n                            .withValue(\"test\")\n                            .build()\n                    ))\n                    .build()\n            ))\n            .build();\n\n        assertEquals(left, right);\n        assertEquals(left.hashCode(), right.hashCode());\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "SubModelTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["build", "addPrompts", "withDialog", "withLanguageModel", "builder", "build", "withIntents", "builder", "singletonList", "build", "withSlots", "withSamples", "withName", "builder", "singletonList", "singletonList", "build", "withType", "withName", "builder", "build", "withIntents", "builder", "singletonList", "build", "withSlots", "withPrompts", "withConfirmationRequired", "withName", "builder", "build", "withConfirmation", "builder", "singletonList", "build", "withPrompts", "withElicitationRequired", "withConfirmationRequired", "withType", "withName", "builder", "build", "withElicitation", "withConfirmation", "builder", "singletonList", "build", "withVariations", "withId", "builder", "singletonList", "build", "withValue", "withType", "builder", "build", "addPrompts", "withDialog", "withLanguageModel", "builder", "build", "withIntents", "builder", "singletonList", "build", "withSlots", "withSamples", "withName", "builder", "singletonList", "singletonList", "build", "withType", "withName", "builder", "build", "withIntents", "builder", "singletonList", "build", "withSlots", "withPrompts", "withConfirmationRequired", "withName", "builder", "build", "withConfirmation", "builder", "singletonList", "build", "withPrompts", "withElicitationRequired", "withConfirmationRequired", "withType", "withName", "builder", "build", "withElicitation", "withConfirmation", "builder", "singletonList", "build", "withVariations", "withId", "builder", "singletonList", "build", "withValue", "withType", "builder", "assertEquals", "assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "SubModel", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SubLanguageModel languageModel;", "modifier": "private final", "type": "SubLanguageModel", "declarator": "languageModel", "var_name": "languageModel"}, {"original_string": "private final Dialog dialog;", "modifier": "private final", "type": "Dialog", "declarator": "dialog", "var_name": "dialog"}, {"original_string": "private final List<Prompt> prompts;", "modifier": "private final", "type": "List<Prompt>", "declarator": "prompts", "var_name": "prompts"}], "methods": [{"identifier": "SubModel", "parameters": "(SubLanguageModel languageModel, Dialog dialog, List<Prompt> prompts)", "modifiers": "public", "return": "", "signature": " SubModel(SubLanguageModel languageModel, Dialog dialog, List<Prompt> prompts)", "full_signature": "public  SubModel(SubLanguageModel languageModel, Dialog dialog, List<Prompt> prompts)", "class_method_signature": "SubModel.SubModel(SubLanguageModel languageModel, Dialog dialog, List<Prompt> prompts)", "testcase": false, "constructor": true}, {"identifier": "getLanguageModel", "parameters": "()", "modifiers": "@JsonProperty(\"languageModel\") public", "return": "SubLanguageModel", "signature": "SubLanguageModel getLanguageModel()", "full_signature": "@JsonProperty(\"languageModel\") public SubLanguageModel getLanguageModel()", "class_method_signature": "SubModel.getLanguageModel()", "testcase": false, "constructor": false}, {"identifier": "getDialog", "parameters": "()", "modifiers": "@JsonProperty(\"dialog\") public", "return": "Dialog", "signature": "Dialog getDialog()", "full_signature": "@JsonProperty(\"dialog\") public Dialog getDialog()", "class_method_signature": "SubModel.getDialog()", "testcase": false, "constructor": false}, {"identifier": "getPrompts", "parameters": "()", "modifiers": "@JsonProperty(\"prompts\") public", "return": "List<Prompt>", "signature": "List<Prompt> getPrompts()", "full_signature": "@JsonProperty(\"prompts\") public List<Prompt> getPrompts()", "class_method_signature": "SubModel.getPrompts()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SubModel.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SubModel.hashCode()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "SubModel.builder()", "testcase": false, "constructor": false}], "file": "ask-sdk-interaction-model-mapper/src/main/java/com/amazon/ask/interaction/data/model/SubModel.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        SubModel that = (SubModel) o;\n        return Objects.equals(languageModel, that.languageModel) &&\n            Objects.equals(dialog, that.dialog) &&\n            Objects.equals(prompts, that.prompts);\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SubModel.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}