{"test_class": {"identifier": "HexUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(HexUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HexUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/HexUtilTest.java"}, "test_case": {"identifier": "toByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toByteArray() throws Exception {\n        byte[] bytes = null;\n\n        bytes = HexUtil.toByteArray(null);\n        Assert.assertArrayEquals(null, bytes);\n\n        bytes = HexUtil.toByteArray(\"\");\n        Assert.assertArrayEquals(new byte[] { }, bytes);\n\n        bytes = HexUtil.toByteArray(\"65\");\n        Assert.assertArrayEquals(new byte[] { 0x65 }, bytes);\n\n        bytes = HexUtil.toByteArray(\"fF\");\n        Assert.assertArrayEquals(new byte[] { (byte)0xFF }, bytes);\n\n        bytes = HexUtil.toByteArray(\"BbCc\");\n        Assert.assertArrayEquals(new byte[] { (byte)0xbb, (byte)0xcc }, bytes);\n\n        bytes = HexUtil.toByteArray(\"AaBbCcDdEefF\");\n        Assert.assertArrayEquals(new byte[] { (byte)0xaa, (byte)0xbb, (byte)0xcc, (byte)0xdd, (byte)0xee, (byte)0xff }, bytes);\n    }", "signature": "void toByteArray()", "full_signature": "@Test public void toByteArray()", "class_method_signature": "HexUtilTest.toByteArray()", "testcase": true, "constructor": false, "invocations": ["toByteArray", "assertArrayEquals", "toByteArray", "assertArrayEquals", "toByteArray", "assertArrayEquals", "toByteArray", "assertArrayEquals", "toByteArray", "assertArrayEquals", "toByteArray", "assertArrayEquals"]}, "focal_class": {"identifier": "HexUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static char[] HEX_TABLE = {\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n    };", "modifier": "public static", "type": "char[]", "declarator": "HEX_TABLE = {\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n    }", "var_name": "HEX_TABLE"}], "methods": [{"identifier": "toHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String toHexString(byte[] bytes)", "full_signature": "public static String toHexString(byte[] bytes)", "class_method_signature": "HexUtil.toHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "String", "signature": "String toHexString(byte[] bytes, int offset, int length)", "full_signature": "public static String toHexString(byte[] bytes, int offset, int length)", "class_method_signature": "HexUtil.toHexString(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, byte[] bytes)", "modifiers": "public static", "return": "void", "signature": "void appendHexString(StringBuilder buffer, byte[] bytes)", "full_signature": "public static void appendHexString(StringBuilder buffer, byte[] bytes)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, byte[] bytes, int offset, int length)", "modifiers": "static public", "return": "void", "signature": "void appendHexString(StringBuilder buffer, byte[] bytes, int offset, int length)", "full_signature": "static public void appendHexString(StringBuilder buffer, byte[] bytes, int offset, int length)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(byte value)", "modifiers": "static public", "return": "String", "signature": "String toHexString(byte value)", "full_signature": "static public String toHexString(byte value)", "class_method_signature": "HexUtil.toHexString(byte value)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, byte value)", "modifiers": "static public", "return": "void", "signature": "void appendHexString(StringBuilder buffer, byte value)", "full_signature": "static public void appendHexString(StringBuilder buffer, byte value)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, byte value)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(short value)", "modifiers": "static public", "return": "String", "signature": "String toHexString(short value)", "full_signature": "static public String toHexString(short value)", "class_method_signature": "HexUtil.toHexString(short value)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, short value)", "modifiers": "static public", "return": "void", "signature": "void appendHexString(StringBuilder buffer, short value)", "full_signature": "static public void appendHexString(StringBuilder buffer, short value)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, short value)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(int value)", "modifiers": "static public", "return": "String", "signature": "String toHexString(int value)", "full_signature": "static public String toHexString(int value)", "class_method_signature": "HexUtil.toHexString(int value)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, int value)", "modifiers": "static public", "return": "void", "signature": "void appendHexString(StringBuilder buffer, int value)", "full_signature": "static public void appendHexString(StringBuilder buffer, int value)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, int value)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(long value)", "modifiers": "static public", "return": "String", "signature": "String toHexString(long value)", "full_signature": "static public String toHexString(long value)", "class_method_signature": "HexUtil.toHexString(long value)", "testcase": false, "constructor": false}, {"identifier": "appendHexString", "parameters": "(StringBuilder buffer, long value)", "modifiers": "static public", "return": "void", "signature": "void appendHexString(StringBuilder buffer, long value)", "full_signature": "static public void appendHexString(StringBuilder buffer, long value)", "class_method_signature": "HexUtil.appendHexString(StringBuilder buffer, long value)", "testcase": false, "constructor": false}, {"identifier": "assertNotNull", "parameters": "(StringBuilder buffer)", "modifiers": "static private", "return": "void", "signature": "void assertNotNull(StringBuilder buffer)", "full_signature": "static private void assertNotNull(StringBuilder buffer)", "class_method_signature": "HexUtil.assertNotNull(StringBuilder buffer)", "testcase": false, "constructor": false}, {"identifier": "assertOffsetLengthValid", "parameters": "(int offset, int length, int arrayLength)", "modifiers": "static private", "return": "void", "signature": "void assertOffsetLengthValid(int offset, int length, int arrayLength)", "full_signature": "static private void assertOffsetLengthValid(int offset, int length, int arrayLength)", "class_method_signature": "HexUtil.assertOffsetLengthValid(int offset, int length, int arrayLength)", "testcase": false, "constructor": false}, {"identifier": "hexCharToIntValue", "parameters": "(char c)", "modifiers": "static public", "return": "int", "signature": "int hexCharToIntValue(char c)", "full_signature": "static public int hexCharToIntValue(char c)", "class_method_signature": "HexUtil.hexCharToIntValue(char c)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(CharSequence hexString)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(CharSequence hexString)", "full_signature": "public static byte[] toByteArray(CharSequence hexString)", "class_method_signature": "HexUtil.toByteArray(CharSequence hexString)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(CharSequence hexString, int offset, int length)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(CharSequence hexString, int offset, int length)", "full_signature": "public static byte[] toByteArray(CharSequence hexString, int offset, int length)", "class_method_signature": "HexUtil.toByteArray(CharSequence hexString, int offset, int length)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/HexUtil.java"}, "focal_method": {"identifier": "toByteArray", "parameters": "(CharSequence hexString)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] toByteArray(CharSequence hexString) {\n        if (hexString == null) {\n            return null;\n        }\n        return toByteArray(hexString, 0, hexString.length());\n    }", "signature": "byte[] toByteArray(CharSequence hexString)", "full_signature": "public static byte[] toByteArray(CharSequence hexString)", "class_method_signature": "HexUtil.toByteArray(CharSequence hexString)", "testcase": false, "constructor": false, "invocations": ["toByteArray", "length"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}