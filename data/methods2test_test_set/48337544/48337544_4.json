{"test_class": {"identifier": "DescribableModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n    public static JenkinsRule rule = new JenkinsRule();", "modifier": "@ClassRule\n    public static", "type": "JenkinsRule", "declarator": "rule = new JenkinsRule()", "var_name": "rule"}, {"original_string": "@ClassRule\n    public static LoggerRule logging = new LoggerRule().record(DescribableModel.class, Level.ALL);", "modifier": "@ClassRule\n    public static", "type": "LoggerRule", "declarator": "logging = new LoggerRule().record(DescribableModel.class, Level.ALL)", "var_name": "logging"}], "file": "plugin/src/test/java/org/jenkinsci/plugins/structs/describable/DescribableModelTest.java"}, "test_case": {"identifier": "uninstantiate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void uninstantiate() throws Exception {\n        assertEquals(\"{flag=true, text=stuff}\", DescribableModel.uninstantiate_(new C(\"stuff\", true)).toString());\n        I i = new I(\"stuff\");\n        i.setFlag(true);\n        i.text = \"more\";\n        assertEquals(\"{flag=true, text=more, value=stuff}\", DescribableModel.uninstantiate_(i).toString());\n\n        Object net = new Internet();\n        UninstantiatedDescribable ud = UninstantiatedDescribable.from(net);\n        assertEquals(\"net\",ud.getSymbol());\n        assertTrue(ud.getArguments().isEmpty());\n        assertTrue(ud.instantiate(Tech.class) instanceof Internet);\n    }", "signature": "void uninstantiate()", "full_signature": "@Test public void uninstantiate()", "class_method_signature": "DescribableModelTest.uninstantiate()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "uninstantiate_", "setFlag", "assertEquals", "toString", "uninstantiate_", "from", "assertEquals", "getSymbol", "assertTrue", "isEmpty", "getArguments", "assertTrue", "instantiate"]}, "focal_class": {"identifier": "DescribableModel", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "@SuppressFBWarnings(\"MS_SHOULD_BE_FINAL\") // Used to control warnings that instantiate parameters will be ignored\n    @Restricted(NoExternalUse.class)\n    public static boolean STRICT_PARAMETER_CHECKING = Main.isUnitTest;", "modifier": "@SuppressFBWarnings(\"MS_SHOULD_BE_FINAL\") // Used to control warnings that instantiate parameters will be ignored\n    @Restricted(NoExternalUse.class)\n    public static", "type": "boolean", "declarator": "STRICT_PARAMETER_CHECKING = Main.isUnitTest", "var_name": "STRICT_PARAMETER_CHECKING"}, {"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private Map<String,DescribableParameter> parameters = new LinkedHashMap<String, DescribableParameter>(4);", "modifier": "private", "type": "Map<String,DescribableParameter>", "declarator": "parameters = new LinkedHashMap<String, DescribableParameter>(4)", "var_name": "parameters"}, {"original_string": "private Map<String,DescribableParameter> parametersView;", "modifier": "private", "type": "Map<String,DescribableParameter>", "declarator": "parametersView", "var_name": "parametersView"}, {"original_string": "private final Constructor<T> constructor;", "modifier": "private final", "type": "Constructor<T>", "declarator": "constructor", "var_name": "constructor"}, {"original_string": "private final String[] constructorParamNames;", "modifier": "private final", "type": "String[]", "declarator": "constructorParamNames", "var_name": "constructorParamNames"}, {"original_string": "static ConcurrentHashMap<String, DescribableModel> modelCache = new ConcurrentHashMap<String, DescribableModel>();", "modifier": "static", "type": "ConcurrentHashMap<String, DescribableModel>", "declarator": "modelCache = new ConcurrentHashMap<String, DescribableModel>()", "var_name": "modelCache"}, {"original_string": "public static final String CLAZZ = \"$class\";", "modifier": "public static final", "type": "String", "declarator": "CLAZZ = \"$class\"", "var_name": "CLAZZ"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(DescribableModel.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DescribableModel.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final Map<Class,Object> defaultPrimitiveValue = new HashMap<Class, Object>();", "modifier": "private static final", "type": "Map<Class,Object>", "declarator": "defaultPrimitiveValue = new HashMap<Class, Object>()", "var_name": "defaultPrimitiveValue"}], "methods": [{"identifier": "of", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "DescribableModel<T>", "signature": "DescribableModel<T> of(Class<T> clazz)", "full_signature": "public static DescribableModel<T> of(Class<T> clazz)", "class_method_signature": "DescribableModel.of(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "DescribableModel", "parameters": "(Class<T> clazz)", "modifiers": "public", "return": "", "signature": " DescribableModel(Class<T> clazz)", "full_signature": "public  DescribableModel(Class<T> clazz)", "class_method_signature": "DescribableModel.DescribableModel(Class<T> clazz)", "testcase": false, "constructor": true}, {"identifier": "addParameter", "parameters": "(Map<String,DescribableParameter> props, Type type, String name, Setter setter)", "modifiers": "private", "return": "void", "signature": "void addParameter(Map<String,DescribableParameter> props, Type type, String name, Setter setter)", "full_signature": "private void addParameter(Map<String,DescribableParameter> props, Type type, String name, Setter setter)", "class_method_signature": "DescribableModel.addParameter(Map<String,DescribableParameter> props, Type type, String name, Setter setter)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Class<T>", "signature": "Class<T> getType()", "full_signature": "public Class<T> getType()", "class_method_signature": "DescribableModel.getType()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Collection<DescribableParameter>", "signature": "Collection<DescribableParameter> getParameters()", "full_signature": "public Collection<DescribableParameter> getParameters()", "class_method_signature": "DescribableModel.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getParameter", "parameters": "(String name)", "modifiers": "public", "return": "DescribableParameter", "signature": "DescribableParameter getParameter(String name)", "full_signature": "public DescribableParameter getParameter(String name)", "class_method_signature": "DescribableModel.getParameter(String name)", "testcase": false, "constructor": false}, {"identifier": "hasSingleRequiredParameter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSingleRequiredParameter()", "full_signature": "public boolean hasSingleRequiredParameter()", "class_method_signature": "DescribableModel.hasSingleRequiredParameter()", "testcase": false, "constructor": false}, {"identifier": "getSoleRequiredParameter", "parameters": "()", "modifiers": "public @CheckForNull", "return": "DescribableParameter", "signature": "DescribableParameter getSoleRequiredParameter()", "full_signature": "public @CheckForNull DescribableParameter getSoleRequiredParameter()", "class_method_signature": "DescribableModel.getSoleRequiredParameter()", "testcase": false, "constructor": false}, {"identifier": "getFirstRequiredParameter", "parameters": "()", "modifiers": "public @CheckForNull", "return": "DescribableParameter", "signature": "DescribableParameter getFirstRequiredParameter()", "full_signature": "public @CheckForNull DescribableParameter getFirstRequiredParameter()", "class_method_signature": "DescribableModel.getFirstRequiredParameter()", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDisplayName()", "full_signature": "public String getDisplayName()", "class_method_signature": "DescribableModel.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(Map<String,?> arguments)", "modifiers": "@Deprecated public", "return": "T", "signature": "T instantiate(Map<String,?> arguments)", "full_signature": "@Deprecated public T instantiate(Map<String,?> arguments)", "class_method_signature": "DescribableModel.instantiate(Map<String,?> arguments)", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(Map<String,?> arguments, @CheckForNull TaskListener listener)", "modifiers": "public", "return": "T", "signature": "T instantiate(Map<String,?> arguments, @CheckForNull TaskListener listener)", "full_signature": "public T instantiate(Map<String,?> arguments, @CheckForNull TaskListener listener)", "class_method_signature": "DescribableModel.instantiate(Map<String,?> arguments, @CheckForNull TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "deeplyImmutable", "parameters": "(Map<String, ?> m)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "Map<String, Object>", "signature": "Map<String, Object> deeplyImmutable(Map<String, ?> m)", "full_signature": "@SuppressWarnings(\"unchecked\") private static Map<String, Object> deeplyImmutable(Map<String, ?> m)", "class_method_signature": "DescribableModel.deeplyImmutable(Map<String, ?> m)", "testcase": false, "constructor": false}, {"identifier": "deeplyImmutable", "parameters": "(UninstantiatedDescribable ud)", "modifiers": "private static", "return": "UninstantiatedDescribable", "signature": "UninstantiatedDescribable deeplyImmutable(UninstantiatedDescribable ud)", "full_signature": "private static UninstantiatedDescribable deeplyImmutable(UninstantiatedDescribable ud)", "class_method_signature": "DescribableModel.deeplyImmutable(UninstantiatedDescribable ud)", "testcase": false, "constructor": false}, {"identifier": "findConstructor", "parameters": "(int length)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Constructor<T>", "signature": "Constructor<T> findConstructor(int length)", "full_signature": "@SuppressWarnings(\"unchecked\") private Constructor<T> findConstructor(int length)", "class_method_signature": "DescribableModel.findConstructor(int length)", "testcase": false, "constructor": false}, {"identifier": "buildArguments", "parameters": "(Map<String,?> bag, Type[] types, String[] names, boolean callEvenIfNoArgs, TaskListener listener)", "modifiers": "private", "return": "Object[]", "signature": "Object[] buildArguments(Map<String,?> bag, Type[] types, String[] names, boolean callEvenIfNoArgs, TaskListener listener)", "full_signature": "private Object[] buildArguments(Map<String,?> bag, Type[] types, String[] names, boolean callEvenIfNoArgs, TaskListener listener)", "class_method_signature": "DescribableModel.buildArguments(Map<String,?> bag, Type[] types, String[] names, boolean callEvenIfNoArgs, TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "injectSetters", "parameters": "(Object o, Map<String,?> arguments, TaskListener listener)", "modifiers": "private", "return": "void", "signature": "void injectSetters(Object o, Map<String,?> arguments, TaskListener listener)", "full_signature": "private void injectSetters(Object o, Map<String,?> arguments, TaskListener listener)", "class_method_signature": "DescribableModel.injectSetters(Object o, Map<String,?> arguments, TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(String context, Type type, Object o, TaskListener listener)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Object", "signature": "Object coerce(String context, Type type, Object o, TaskListener listener)", "full_signature": "@SuppressWarnings(\"unchecked\") private Object coerce(String context, Type type, Object o, TaskListener listener)", "class_method_signature": "DescribableModel.coerce(String context, Type type, Object o, TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "coerceStringToNumber", "parameters": "(@Nonnull String context, @Nonnull Class numberClass, @Nonnull String o)", "modifiers": "private", "return": "Object", "signature": "Object coerceStringToNumber(@Nonnull String context, @Nonnull Class numberClass, @Nonnull String o)", "full_signature": "private Object coerceStringToNumber(@Nonnull String context, @Nonnull Class numberClass, @Nonnull String o)", "class_method_signature": "DescribableModel.coerceStringToNumber(@Nonnull String context, @Nonnull Class numberClass, @Nonnull String o)", "testcase": false, "constructor": false}, {"identifier": "resolveClass", "parameters": "(Class<?> base, @Nullable String name, @Nullable String symbol)", "modifiers": "static", "return": "Class<?>", "signature": "Class<?> resolveClass(Class<?> base, @Nullable String name, @Nullable String symbol)", "full_signature": "static Class<?> resolveClass(Class<?> base, @Nullable String name, @Nullable String symbol)", "class_method_signature": "DescribableModel.resolveClass(Class<?> base, @Nullable String name, @Nullable String symbol)", "testcase": false, "constructor": false}, {"identifier": "coerceList", "parameters": "(String context, Type type, List<?> list, TaskListener listener)", "modifiers": "private", "return": "List<Object>", "signature": "List<Object> coerceList(String context, Type type, List<?> list, TaskListener listener)", "full_signature": "private List<Object> coerceList(String context, Type type, List<?> list, TaskListener listener)", "class_method_signature": "DescribableModel.coerceList(String context, Type type, List<?> list, TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "parameterValueClass", "parameters": "(@Nonnull Class<?> parameterDefinitionClass)", "modifiers": "private static @CheckForNull", "return": "Class<?>", "signature": "Class<?> parameterValueClass(@Nonnull Class<?> parameterDefinitionClass)", "full_signature": "private static @CheckForNull Class<?> parameterValueClass(@Nonnull Class<?> parameterDefinitionClass)", "class_method_signature": "DescribableModel.parameterValueClass(@Nonnull Class<?> parameterDefinitionClass)", "testcase": false, "constructor": false}, {"identifier": "findSubtypes", "parameters": "(Class<?> supertype)", "modifiers": "static", "return": "Set<Class<?>>", "signature": "Set<Class<?>> findSubtypes(Class<?> supertype)", "full_signature": "static Set<Class<?>> findSubtypes(Class<?> supertype)", "class_method_signature": "DescribableModel.findSubtypes(Class<?> supertype)", "testcase": false, "constructor": false}, {"identifier": "uninstantiate", "parameters": "(T o)", "modifiers": "public", "return": "Map<String,Object>", "signature": "Map<String,Object> uninstantiate(T o)", "full_signature": "public Map<String,Object> uninstantiate(T o)", "class_method_signature": "DescribableModel.uninstantiate(T o)", "testcase": false, "constructor": false}, {"identifier": "uninstantiate2", "parameters": "(T o)", "modifiers": "public", "return": "UninstantiatedDescribable", "signature": "UninstantiatedDescribable uninstantiate2(T o)", "full_signature": "public UninstantiatedDescribable uninstantiate2(T o)", "class_method_signature": "DescribableModel.uninstantiate2(T o)", "testcase": false, "constructor": false}, {"identifier": "symbolOf", "parameters": "(Object o)", "modifiers": "static", "return": "String", "signature": "String symbolOf(Object o)", "full_signature": "static String symbolOf(Object o)", "class_method_signature": "DescribableModel.symbolOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "uninstantiate_", "parameters": "(Object o)", "modifiers": "public static", "return": "Map<String,Object>", "signature": "Map<String,Object> uninstantiate_(Object o)", "full_signature": "public static Map<String,Object> uninstantiate_(Object o)", "class_method_signature": "DescribableModel.uninstantiate_(Object o)", "testcase": false, "constructor": false}, {"identifier": "uninstantiate__", "parameters": "(Object o, Class<T> clazz)", "modifiers": "private static", "return": "Map<String,Object>", "signature": "Map<String,Object> uninstantiate__(Object o, Class<T> clazz)", "full_signature": "private static Map<String,Object> uninstantiate__(Object o, Class<T> clazz)", "class_method_signature": "DescribableModel.uninstantiate__(Object o, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "uninstantiate2_", "parameters": "(Object o)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "UninstantiatedDescribable", "signature": "UninstantiatedDescribable uninstantiate2_(Object o)", "full_signature": "@SuppressWarnings(\"unchecked\") public static UninstantiatedDescribable uninstantiate2_(Object o)", "class_method_signature": "DescribableModel.uninstantiate2_(Object o)", "testcase": false, "constructor": false}, {"identifier": "isDeprecated", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDeprecated()", "full_signature": "public boolean isDeprecated()", "class_method_signature": "DescribableModel.isDeprecated()", "testcase": false, "constructor": false}, {"identifier": "getHelp", "parameters": "()", "modifiers": "public @CheckForNull", "return": "String", "signature": "String getHelp()", "full_signature": "public @CheckForNull String getHelp()", "class_method_signature": "DescribableModel.getHelp()", "testcase": false, "constructor": false}, {"identifier": "getHelp", "parameters": "(String name)", "modifiers": "@CheckForNull", "return": "String", "signature": "String getHelp(String name)", "full_signature": "@CheckForNull String getHelp(String name)", "class_method_signature": "DescribableModel.getHelp(String name)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(StringBuilder b, Stack<Class<?>> modelTypes)", "modifiers": "", "return": "void", "signature": "void toString(StringBuilder b, Stack<Class<?>> modelTypes)", "full_signature": " void toString(StringBuilder b, Stack<Class<?>> modelTypes)", "class_method_signature": "DescribableModel.toString(StringBuilder b, Stack<Class<?>> modelTypes)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DescribableModel.toString()", "testcase": false, "constructor": false}, {"identifier": "writeReplace", "parameters": "()", "modifiers": "private", "return": "Object", "signature": "Object writeReplace()", "full_signature": "private Object writeReplace()", "class_method_signature": "DescribableModel.writeReplace()", "testcase": false, "constructor": false}, {"identifier": "getVmDefaultValueForPrimitiveType", "parameters": "(Class<?> type)", "modifiers": "private static", "return": "Object", "signature": "Object getVmDefaultValueForPrimitiveType(Class<?> type)", "full_signature": "private static Object getVmDefaultValueForPrimitiveType(Class<?> type)", "class_method_signature": "DescribableModel.getVmDefaultValueForPrimitiveType(Class<?> type)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/org/jenkinsci/plugins/structs/describable/DescribableModel.java"}, "focal_method": {"identifier": "uninstantiate", "parameters": "(T o)", "modifiers": "public", "return": "Map<String,Object>", "body": "public Map<String,Object> uninstantiate(T o) throws UnsupportedOperationException {\n        return uninstantiate2(o).toMap();\n    }", "signature": "Map<String,Object> uninstantiate(T o)", "full_signature": "public Map<String,Object> uninstantiate(T o)", "class_method_signature": "DescribableModel.uninstantiate(T o)", "testcase": false, "constructor": false, "invocations": ["toMap", "uninstantiate2"]}, "repository": {"repo_id": 48337544, "url": "https://github.com/jenkinsci/structs-plugin", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 8, "size": 421, "license": "licensed"}}