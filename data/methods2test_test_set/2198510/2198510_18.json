{"test_class": {"identifier": "TestEventQueueBackingStoreFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final List<Long> pointersInTestCheckpoint = Arrays.asList(new Long[]{\n      8589936804L,\n      4294969563L,\n      12884904153L,\n      8589936919L,\n      4294969678L,\n      12884904268L,\n      8589937034L,\n      4294969793L,\n      12884904383L\n  });", "modifier": "static final", "type": "List<Long>", "declarator": "pointersInTestCheckpoint = Arrays.asList(new Long[]{\n      8589936804L,\n      4294969563L,\n      12884904153L,\n      8589936919L,\n      4294969678L,\n      12884904268L,\n      8589937034L,\n      4294969793L,\n      12884904383L\n  })", "var_name": "pointersInTestCheckpoint"}, {"original_string": "File baseDir;", "modifier": "", "type": "File", "declarator": "baseDir", "var_name": "baseDir"}, {"original_string": "File checkpoint;", "modifier": "", "type": "File", "declarator": "checkpoint", "var_name": "checkpoint"}, {"original_string": "File inflightTakes;", "modifier": "", "type": "File", "declarator": "inflightTakes", "var_name": "inflightTakes"}, {"original_string": "File inflightPuts;", "modifier": "", "type": "File", "declarator": "inflightPuts", "var_name": "inflightPuts"}, {"original_string": "File queueSetDir;", "modifier": "", "type": "File", "declarator": "queueSetDir", "var_name": "queueSetDir"}], "file": "flume-ng-channels/flume-file-channel/src/test/java/org/apache/flume/channel/file/TestEventQueueBackingStoreFactory.java"}, "test_case": {"identifier": "testIncreaseCapacity", "parameters": "()", "modifiers": "@Test(expected = BadCheckpointException.class) public", "return": "void", "body": "@Test(expected = BadCheckpointException.class)\n  public void testIncreaseCapacity() throws Exception {\n    Assert.assertTrue(checkpoint.delete());\n    EventQueueBackingStore backingStore =\n        EventQueueBackingStoreFactory.get(checkpoint, 10, \"test\", new FileChannelCounter(\"test\"));\n    backingStore.close();\n    EventQueueBackingStoreFactory.get(checkpoint, 11, \"test\", new FileChannelCounter(\"test\"));\n    Assert.fail();\n  }", "signature": "void testIncreaseCapacity()", "full_signature": "@Test(expected = BadCheckpointException.class) public void testIncreaseCapacity()", "class_method_signature": "TestEventQueueBackingStoreFactory.testIncreaseCapacity()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "delete", "get", "close", "get", "fail"]}, "focal_class": {"identifier": "EventQueueBackingStoreFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(EventQueueBackingStoreFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(EventQueueBackingStoreFactory.class)", "var_name": "LOG"}], "methods": [{"identifier": "EventQueueBackingStoreFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " EventQueueBackingStoreFactory()", "full_signature": "private  EventQueueBackingStoreFactory()", "class_method_signature": "EventQueueBackingStoreFactory.EventQueueBackingStoreFactory()", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "modifiers": "static", "return": "EventQueueBackingStore", "signature": "EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "full_signature": "static EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "class_method_signature": "EventQueueBackingStoreFactory.get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter, boolean upgrade\n  )", "modifiers": "static", "return": "EventQueueBackingStore", "signature": "EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter, boolean upgrade\n  )", "full_signature": "static EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter, boolean upgrade\n  )", "class_method_signature": "EventQueueBackingStoreFactory.get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter, boolean upgrade\n  )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(\n      File checkpointFile, File backupCheckpointDir, int capacity, String name,\n      FileChannelCounter counter, boolean upgrade, boolean shouldBackup, boolean compressBackup\n  )", "modifiers": "static", "return": "EventQueueBackingStore", "signature": "EventQueueBackingStore get(\n      File checkpointFile, File backupCheckpointDir, int capacity, String name,\n      FileChannelCounter counter, boolean upgrade, boolean shouldBackup, boolean compressBackup\n  )", "full_signature": "static EventQueueBackingStore get(\n      File checkpointFile, File backupCheckpointDir, int capacity, String name,\n      FileChannelCounter counter, boolean upgrade, boolean shouldBackup, boolean compressBackup\n  )", "class_method_signature": "EventQueueBackingStoreFactory.get(\n      File checkpointFile, File backupCheckpointDir, int capacity, String name,\n      FileChannelCounter counter, boolean upgrade, boolean shouldBackup, boolean compressBackup\n  )", "testcase": false, "constructor": false}, {"identifier": "upgrade", "parameters": "(\n      File checkpointFile, int capacity, String name, File backupCheckpointDir,\n      boolean shouldBackup, boolean compressBackup, FileChannelCounter counter\n  )", "modifiers": "private static", "return": "EventQueueBackingStore", "signature": "EventQueueBackingStore upgrade(\n      File checkpointFile, int capacity, String name, File backupCheckpointDir,\n      boolean shouldBackup, boolean compressBackup, FileChannelCounter counter\n  )", "full_signature": "private static EventQueueBackingStore upgrade(\n      File checkpointFile, int capacity, String name, File backupCheckpointDir,\n      boolean shouldBackup, boolean compressBackup, FileChannelCounter counter\n  )", "class_method_signature": "EventQueueBackingStoreFactory.upgrade(\n      File checkpointFile, int capacity, String name, File backupCheckpointDir,\n      boolean shouldBackup, boolean compressBackup, FileChannelCounter counter\n  )", "testcase": false, "constructor": false}], "file": "flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/EventQueueBackingStoreFactory.java"}, "focal_method": {"identifier": "get", "parameters": "(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "modifiers": "static", "return": "EventQueueBackingStore", "body": "static EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  ) throws Exception {\n    return get(checkpointFile, capacity, name, counter, true);\n  }", "signature": "EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "full_signature": "static EventQueueBackingStore get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "class_method_signature": "EventQueueBackingStoreFactory.get(\n      File checkpointFile, int capacity, String name, FileChannelCounter counter\n  )", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}