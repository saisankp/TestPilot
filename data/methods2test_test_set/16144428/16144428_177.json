{"test_class": {"identifier": "MediaInfoDocumentImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper mapper = new DatamodelMapper(\"http://example.com/entity/\");", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new DatamodelMapper(\"http://example.com/entity/\")", "var_name": "mapper"}, {"original_string": "private final MediaInfoIdValue mid = new MediaInfoIdValueImpl(\"M42\", \"http://example.com/entity/\");", "modifier": "private final", "type": "MediaInfoIdValue", "declarator": "mid = new MediaInfoIdValueImpl(\"M42\", \"http://example.com/entity/\")", "var_name": "mid"}, {"original_string": "private final Statement s = new StatementImpl(\"MyId\", StatementRank.NORMAL,\n\t\t\tnew SomeValueSnakImpl(new PropertyIdValueImpl(\"P42\", \"http://example.com/entity/\")),\n\t\t\tCollections.emptyList(), Collections.emptyList(), mid);", "modifier": "private final", "type": "Statement", "declarator": "s = new StatementImpl(\"MyId\", StatementRank.NORMAL,\n\t\t\tnew SomeValueSnakImpl(new PropertyIdValueImpl(\"P42\", \"http://example.com/entity/\")),\n\t\t\tCollections.emptyList(), Collections.emptyList(), mid)", "var_name": "s"}, {"original_string": "private final List<StatementGroup> statementGroups = Collections.singletonList(\n\t\t\tnew StatementGroupImpl(Collections.singletonList(s))\n\t);", "modifier": "private final", "type": "List<StatementGroup>", "declarator": "statementGroups = Collections.singletonList(\n\t\t\tnew StatementGroupImpl(Collections.singletonList(s))\n\t)", "var_name": "statementGroups"}, {"original_string": "private final MonolingualTextValue label = new TermImpl(\"en\", \"label\");", "modifier": "private final", "type": "MonolingualTextValue", "declarator": "label = new TermImpl(\"en\", \"label\")", "var_name": "label"}, {"original_string": "private final List<MonolingualTextValue> labelList = Collections.singletonList(label);", "modifier": "private final", "type": "List<MonolingualTextValue>", "declarator": "labelList = Collections.singletonList(label)", "var_name": "labelList"}, {"original_string": "private final MediaInfoDocument mi1 = new MediaInfoDocumentImpl(mid, labelList, statementGroups,1234);", "modifier": "private final", "type": "MediaInfoDocument", "declarator": "mi1 = new MediaInfoDocumentImpl(mid, labelList, statementGroups,1234)", "var_name": "mi1"}, {"original_string": "private final MediaInfoDocument mi2 = new MediaInfoDocumentImpl(mid, labelList, statementGroups,  1234);", "modifier": "private final", "type": "MediaInfoDocument", "declarator": "mi2 = new MediaInfoDocumentImpl(mid, labelList, statementGroups,  1234)", "var_name": "mi2"}, {"original_string": "private final String JSON_MEDIA_INFO_LABEL = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{\\\"en\\\":{\\\"language\\\":\\\"en\\\",\\\"value\\\":\\\"label\\\"}},\\\"claims\\\":{}}\";", "modifier": "private final", "type": "String", "declarator": "JSON_MEDIA_INFO_LABEL = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{\\\"en\\\":{\\\"language\\\":\\\"en\\\",\\\"value\\\":\\\"label\\\"}},\\\"claims\\\":{}}\"", "var_name": "JSON_MEDIA_INFO_LABEL"}, {"original_string": "private final String JSON_MEDIA_INFO_DESCRIPTION = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"descriptions\\\":{},\\\"statements\\\":{}}\";", "modifier": "private final", "type": "String", "declarator": "JSON_MEDIA_INFO_DESCRIPTION = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"descriptions\\\":{},\\\"statements\\\":{}}\"", "var_name": "JSON_MEDIA_INFO_DESCRIPTION"}, {"original_string": "private final String JSON_MEDIA_INFO_STATEMENTS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"statements\\\":{\\\"P42\\\":[{\\\"rank\\\":\\\"normal\\\",\\\"id\\\":\\\"MyId\\\",\\\"mainsnak\\\":{\\\"property\\\":\\\"P42\\\",\\\"snaktype\\\":\\\"somevalue\\\"},\\\"type\\\":\\\"statement\\\"}]}}\";", "modifier": "private final", "type": "String", "declarator": "JSON_MEDIA_INFO_STATEMENTS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"statements\\\":{\\\"P42\\\":[{\\\"rank\\\":\\\"normal\\\",\\\"id\\\":\\\"MyId\\\",\\\"mainsnak\\\":{\\\"property\\\":\\\"P42\\\",\\\"snaktype\\\":\\\"somevalue\\\"},\\\"type\\\":\\\"statement\\\"}]}}\"", "var_name": "JSON_MEDIA_INFO_STATEMENTS"}, {"original_string": "private final String JSON_MEDIA_INFO_CLAIMS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"claims\\\":{\\\"P42\\\":[{\\\"rank\\\":\\\"normal\\\",\\\"id\\\":\\\"MyId\\\",\\\"mainsnak\\\":{\\\"property\\\":\\\"P42\\\",\\\"snaktype\\\":\\\"somevalue\\\"},\\\"type\\\":\\\"statement\\\"}]}}\";", "modifier": "private final", "type": "String", "declarator": "JSON_MEDIA_INFO_CLAIMS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":{},\\\"claims\\\":{\\\"P42\\\":[{\\\"rank\\\":\\\"normal\\\",\\\"id\\\":\\\"MyId\\\",\\\"mainsnak\\\":{\\\"property\\\":\\\"P42\\\",\\\"snaktype\\\":\\\"somevalue\\\"},\\\"type\\\":\\\"statement\\\"}]}}\"", "var_name": "JSON_MEDIA_INFO_CLAIMS"}, {"original_string": "private final String JSON_MEDIA_INFO_EMPTY_ARRAYS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":[],\\\"descriptions\\\":[],\\\"statements\\\":[],\\\"sitelinks\\\":[]}\";", "modifier": "private final", "type": "String", "declarator": "JSON_MEDIA_INFO_EMPTY_ARRAYS = \"{\\\"type\\\":\\\"mediainfo\\\",\\\"id\\\":\\\"M42\\\",\\\"labels\\\":[],\\\"descriptions\\\":[],\\\"statements\\\":[],\\\"sitelinks\\\":[]}\"", "var_name": "JSON_MEDIA_INFO_EMPTY_ARRAYS"}], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/implementation/MediaInfoDocumentImplTest.java"}, "test_case": {"identifier": "testWithRevisionId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWithRevisionId() {\n\t\tassertEquals(1235L, mi1.withRevisionId(1235L).getRevisionId());\n\t\tassertEquals(mi1, mi1.withRevisionId(1325L).withRevisionId(mi1.getRevisionId()));\n\t}", "signature": "void testWithRevisionId()", "full_signature": "@Test public void testWithRevisionId()", "class_method_signature": "MediaInfoDocumentImplTest.testWithRevisionId()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getRevisionId", "withRevisionId", "assertEquals", "withRevisionId", "withRevisionId", "getRevisionId"]}, "focal_class": {"identifier": "MediaInfoDocumentImpl", "superclass": "extends LabeledStatementDocumentImpl", "interfaces": "implements MediaInfoDocument", "fields": [], "methods": [{"identifier": "MediaInfoDocumentImpl", "parameters": "(\n\t\t\tMediaInfoIdValue id,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<StatementGroup> statements,\n\t\t\tlong revisionId)", "modifiers": "public", "return": "", "signature": " MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue id,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<StatementGroup> statements,\n\t\t\tlong revisionId)", "full_signature": "public  MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue id,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<StatementGroup> statements,\n\t\t\tlong revisionId)", "class_method_signature": "MediaInfoDocumentImpl.MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue id,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<StatementGroup> statements,\n\t\t\tlong revisionId)", "testcase": false, "constructor": true}, {"identifier": "MediaInfoDocumentImpl", "parameters": "(\n\t\t\t@JsonProperty(\"id\") String jsonId,\n\t\t\t@JsonProperty(\"labels\") @JsonDeserialize(contentAs=TermImpl.class) Map<String, MonolingualTextValue> labels,\n\t\t\t@JsonProperty(\"claims\") Map<String, List<StatementImpl.PreStatement>> claims,\n\t\t\t@JsonProperty(\"statements\") Map<String, List<StatementImpl.PreStatement>> statements,\n\t\t\t@JsonProperty(\"lastrevid\") long revisionId,\n\t\t\t@JacksonInject(\"siteIri\") String siteIri)", "modifiers": "@JsonCreator public", "return": "", "signature": " MediaInfoDocumentImpl(\n\t\t\t@JsonProperty(\"id\") String jsonId,\n\t\t\t@JsonProperty(\"labels\") @JsonDeserialize(contentAs=TermImpl.class) Map<String, MonolingualTextValue> labels,\n\t\t\t@JsonProperty(\"claims\") Map<String, List<StatementImpl.PreStatement>> claims,\n\t\t\t@JsonProperty(\"statements\") Map<String, List<StatementImpl.PreStatement>> statements,\n\t\t\t@JsonProperty(\"lastrevid\") long revisionId,\n\t\t\t@JacksonInject(\"siteIri\") String siteIri)", "full_signature": "@JsonCreator public  MediaInfoDocumentImpl(\n\t\t\t@JsonProperty(\"id\") String jsonId,\n\t\t\t@JsonProperty(\"labels\") @JsonDeserialize(contentAs=TermImpl.class) Map<String, MonolingualTextValue> labels,\n\t\t\t@JsonProperty(\"claims\") Map<String, List<StatementImpl.PreStatement>> claims,\n\t\t\t@JsonProperty(\"statements\") Map<String, List<StatementImpl.PreStatement>> statements,\n\t\t\t@JsonProperty(\"lastrevid\") long revisionId,\n\t\t\t@JacksonInject(\"siteIri\") String siteIri)", "class_method_signature": "MediaInfoDocumentImpl.MediaInfoDocumentImpl(\n\t\t\t@JsonProperty(\"id\") String jsonId,\n\t\t\t@JsonProperty(\"labels\") @JsonDeserialize(contentAs=TermImpl.class) Map<String, MonolingualTextValue> labels,\n\t\t\t@JsonProperty(\"claims\") Map<String, List<StatementImpl.PreStatement>> claims,\n\t\t\t@JsonProperty(\"statements\") Map<String, List<StatementImpl.PreStatement>> statements,\n\t\t\t@JsonProperty(\"lastrevid\") long revisionId,\n\t\t\t@JacksonInject(\"siteIri\") String siteIri)", "testcase": false, "constructor": true}, {"identifier": "MediaInfoDocumentImpl", "parameters": "(\n\t\t\tMediaInfoIdValue subject,\n\t\t\tMap<String, MonolingualTextValue> labels,\n\t\t\tMap<String, List<Statement>> claims,\n\t\t\tlong revisionId)", "modifiers": "protected", "return": "", "signature": " MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue subject,\n\t\t\tMap<String, MonolingualTextValue> labels,\n\t\t\tMap<String, List<Statement>> claims,\n\t\t\tlong revisionId)", "full_signature": "protected  MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue subject,\n\t\t\tMap<String, MonolingualTextValue> labels,\n\t\t\tMap<String, List<Statement>> claims,\n\t\t\tlong revisionId)", "class_method_signature": "MediaInfoDocumentImpl.MediaInfoDocumentImpl(\n\t\t\tMediaInfoIdValue subject,\n\t\t\tMap<String, MonolingualTextValue> labels,\n\t\t\tMap<String, List<Statement>> claims,\n\t\t\tlong revisionId)", "testcase": false, "constructor": true}, {"identifier": "getEntityId", "parameters": "()", "modifiers": "@JsonIgnore @Override public", "return": "MediaInfoIdValue", "signature": "MediaInfoIdValue getEntityId()", "full_signature": "@JsonIgnore @Override public MediaInfoIdValue getEntityId()", "class_method_signature": "MediaInfoDocumentImpl.getEntityId()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MediaInfoDocumentImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "MediaInfoDocumentImpl.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MediaInfoDocumentImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "withRevisionId", "parameters": "(long newRevisionId)", "modifiers": "@Override public", "return": "MediaInfoDocument", "signature": "MediaInfoDocument withRevisionId(long newRevisionId)", "full_signature": "@Override public MediaInfoDocument withRevisionId(long newRevisionId)", "class_method_signature": "MediaInfoDocumentImpl.withRevisionId(long newRevisionId)", "testcase": false, "constructor": false}, {"identifier": "withLabel", "parameters": "(MonolingualTextValue newLabel)", "modifiers": "@Override public", "return": "MediaInfoDocument", "signature": "MediaInfoDocument withLabel(MonolingualTextValue newLabel)", "full_signature": "@Override public MediaInfoDocument withLabel(MonolingualTextValue newLabel)", "class_method_signature": "MediaInfoDocumentImpl.withLabel(MonolingualTextValue newLabel)", "testcase": false, "constructor": false}, {"identifier": "withStatement", "parameters": "(Statement statement)", "modifiers": "@Override public", "return": "MediaInfoDocument", "signature": "MediaInfoDocument withStatement(Statement statement)", "full_signature": "@Override public MediaInfoDocument withStatement(Statement statement)", "class_method_signature": "MediaInfoDocumentImpl.withStatement(Statement statement)", "testcase": false, "constructor": false}, {"identifier": "withoutStatementIds", "parameters": "(Set<String> statementIds)", "modifiers": "@Override public", "return": "MediaInfoDocument", "signature": "MediaInfoDocument withoutStatementIds(Set<String> statementIds)", "full_signature": "@Override public MediaInfoDocument withoutStatementIds(Set<String> statementIds)", "class_method_signature": "MediaInfoDocumentImpl.withoutStatementIds(Set<String> statementIds)", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/implementation/MediaInfoDocumentImpl.java"}, "focal_method": {"identifier": "withRevisionId", "parameters": "(long newRevisionId)", "modifiers": "@Override public", "return": "MediaInfoDocument", "body": "@Override\n\tpublic MediaInfoDocument withRevisionId(long newRevisionId) {\n\t\treturn new MediaInfoDocumentImpl(getEntityId(), labels, claims, newRevisionId);\n\t}", "signature": "MediaInfoDocument withRevisionId(long newRevisionId)", "full_signature": "@Override public MediaInfoDocument withRevisionId(long newRevisionId)", "class_method_signature": "MediaInfoDocumentImpl.withRevisionId(long newRevisionId)", "testcase": false, "constructor": false, "invocations": ["getEntityId"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}