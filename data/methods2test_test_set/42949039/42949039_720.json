{"test_class": {"identifier": "AwsClientFactoryTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AwsClientFactory awsClientFactory;", "modifier": "@Autowired\n    private", "type": "AwsClientFactory", "declarator": "awsClientFactory", "var_name": "awsClientFactory"}, {"original_string": "@Autowired\n    private CacheManager cacheManager;", "modifier": "@Autowired\n    private", "type": "CacheManager", "declarator": "cacheManager", "var_name": "cacheManager"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/AwsClientFactoryTest.java"}, "test_case": {"identifier": "testGetAmazonSQSClientCacheHitMiss", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAmazonSQSClientCacheHitMiss()\n    {\n        // Create an AWS parameters DTO that contains proxy information.\n        AwsParamsDto awsParamsDto =\n            new AwsParamsDto(NO_AWS_ACCESS_KEY, NO_AWS_SECRET_KEY, NO_SESSION_TOKEN, HTTP_PROXY_HOST, HTTP_PROXY_PORT, AWS_REGION_NAME_US_EAST_1);\n\n        // Get an Amazon SQS client.\n        AmazonSQS amazonSQS = awsClientFactory.getAmazonSQSClient(awsParamsDto);\n\n        // Confirm a cache hit.\n        assertEquals(amazonSQS, awsClientFactory.getAmazonSQSClient(\n            new AwsParamsDto(NO_AWS_ACCESS_KEY, NO_AWS_SECRET_KEY, NO_SESSION_TOKEN, HTTP_PROXY_HOST, HTTP_PROXY_PORT, AWS_REGION_NAME_US_EAST_1)));\n\n        // Confirm a cache miss due to http proxy information.\n        assertNotEquals(amazonSQS, awsClientFactory.getAmazonSQSClient(\n            new AwsParamsDto(NO_AWS_ACCESS_KEY, NO_AWS_SECRET_KEY, NO_SESSION_TOKEN, HTTP_PROXY_HOST_2, HTTP_PROXY_PORT_2, AWS_REGION_NAME_US_EAST_1)));\n\n        // Clear the cache.\n        cacheManager.getCache(DaoSpringModuleConfig.HERD_CACHE_NAME).clear();\n\n        // Confirm a cache miss due to cleared cache.\n        assertNotEquals(amazonSQS, awsClientFactory.getAmazonSQSClient(awsParamsDto));\n    }", "signature": "void testGetAmazonSQSClientCacheHitMiss()", "full_signature": "@Test public void testGetAmazonSQSClientCacheHitMiss()", "class_method_signature": "AwsClientFactoryTest.testGetAmazonSQSClientCacheHitMiss()", "testcase": true, "constructor": false, "invocations": ["getAmazonSQSClient", "assertEquals", "getAmazonSQSClient", "assertNotEquals", "getAmazonSQSClient", "clear", "getCache", "assertNotEquals", "getAmazonSQSClient"]}, "focal_class": {"identifier": "AwsClientFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AwsHelper awsHelper;", "modifier": "@Autowired\n    private", "type": "AwsHelper", "declarator": "awsHelper", "var_name": "awsHelper"}], "methods": [{"identifier": "getAmazonSNSClient", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonSNS", "signature": "AmazonSNS getAmazonSNSClient(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonSNS getAmazonSNSClient(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getAmazonSNSClient(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}, {"identifier": "getAmazonSQSClient", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonSQS", "signature": "AmazonSQS getAmazonSQSClient(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonSQS getAmazonSQSClient(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getAmazonSQSClient(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}, {"identifier": "getEc2Client", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonEC2", "signature": "AmazonEC2 getEc2Client(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonEC2 getEc2Client(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getEc2Client(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}, {"identifier": "getEmrClient", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonElasticMapReduce", "signature": "AmazonElasticMapReduce getEmrClient(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonElasticMapReduce getEmrClient(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getEmrClient(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}, {"identifier": "getSesClient", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonSimpleEmailService", "signature": "AmazonSimpleEmailService getSesClient(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonSimpleEmailService getSesClient(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getSesClient(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/AwsClientFactory.java"}, "focal_method": {"identifier": "getAmazonSQSClient", "parameters": "(AwsParamsDto awsParamsDto)", "modifiers": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public", "return": "AmazonSQS", "body": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME)\n    public AmazonSQS getAmazonSQSClient(AwsParamsDto awsParamsDto)\n    {\n        // Construct and return a new client to invoke service methods on Amazon SQS using default credentials provider chain.\n        return AmazonSQSClientBuilder.standard().withClientConfiguration(awsHelper.getClientConfiguration(awsParamsDto))\n            .withRegion(awsParamsDto.getAwsRegionName()).build();\n    }", "signature": "AmazonSQS getAmazonSQSClient(AwsParamsDto awsParamsDto)", "full_signature": "@Cacheable(DaoSpringModuleConfig.HERD_CACHE_NAME) public AmazonSQS getAmazonSQSClient(AwsParamsDto awsParamsDto)", "class_method_signature": "AwsClientFactory.getAmazonSQSClient(AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false, "invocations": ["build", "withRegion", "withClientConfiguration", "standard", "getClientConfiguration", "getAwsRegionName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}