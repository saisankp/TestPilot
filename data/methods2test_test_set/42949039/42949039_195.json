{"test_class": {"identifier": "BusinessObjectDefinitionDescriptionSuggestionDaoHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionDescriptionSuggestionDao businessObjectDefinitionDescriptionSuggestionDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDescriptionSuggestionDao", "declarator": "businessObjectDefinitionDescriptionSuggestionDao", "var_name": "businessObjectDefinitionDescriptionSuggestionDao"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionDescriptionSuggestionStatusDao businessObjectDefinitionDescriptionSuggestionStatusDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDescriptionSuggestionStatusDao", "declarator": "businessObjectDefinitionDescriptionSuggestionStatusDao", "var_name": "businessObjectDefinitionDescriptionSuggestionStatusDao"}, {"original_string": "@InjectMocks\n    private BusinessObjectDefinitionDescriptionSuggestionDaoHelper businessObjectDefinitionDescriptionSuggestionDaoHelper;", "modifier": "@InjectMocks\n    private", "type": "BusinessObjectDefinitionDescriptionSuggestionDaoHelper", "declarator": "businessObjectDefinitionDescriptionSuggestionDaoHelper", "var_name": "businessObjectDefinitionDescriptionSuggestionDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectDefinitionDescriptionSuggestionDaoHelperTest.java"}, "test_case": {"identifier": "testGetBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatusWithEmptyStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatusWithEmptyStatus()\n    {\n        // Create the relative entities.\n        NamespaceEntity namespaceEntity = namespaceDaoTestHelper.createNamespaceEntity(NAMESPACE);\n        BusinessObjectDefinitionEntity businessObjectDefinitionEntity = businessObjectDefinitionDaoTestHelper\n            .createBusinessObjectDefinitionEntity(namespaceEntity.getCode(), BDEF_NAME, DATA_PROVIDER_NAME, BDEF_DESCRIPTION);\n\n        BusinessObjectDefinitionKey businessObjectDefinitionKey = new BusinessObjectDefinitionKey(NAMESPACE, BDEF_NAME);\n\n        BusinessObjectDefinitionDescriptionSuggestionStatusEntity businessObjectDefinitionDescriptionSuggestionStatusEntity =\n            businessObjectDefinitionDescriptionSuggestionStatusDaoTestHelper\n                .createBusinessObjectDefinitionDescriptionSuggestionStatusEntity(BDEF_DESCRIPTION_SUGGESTION_STATUS);\n\n        // Create new business object definition description suggestion entities.\n        BusinessObjectDefinitionDescriptionSuggestionEntity businessObjectDefinitionDescriptionSuggestionEntity =\n            new BusinessObjectDefinitionDescriptionSuggestionEntity();\n        businessObjectDefinitionDescriptionSuggestionEntity.setBusinessObjectDefinition(businessObjectDefinitionEntity);\n        businessObjectDefinitionDescriptionSuggestionEntity.setDescriptionSuggestion(DESCRIPTION_SUGGESTION);\n        businessObjectDefinitionDescriptionSuggestionEntity.setUserId(USER_ID);\n        businessObjectDefinitionDescriptionSuggestionEntity.setStatus(businessObjectDefinitionDescriptionSuggestionStatusEntity);\n\n        BusinessObjectDefinitionDescriptionSuggestionEntity businessObjectDefinitionDescriptionSuggestionEntity2 =\n            new BusinessObjectDefinitionDescriptionSuggestionEntity();\n        businessObjectDefinitionDescriptionSuggestionEntity2.setBusinessObjectDefinition(businessObjectDefinitionEntity);\n        businessObjectDefinitionDescriptionSuggestionEntity2.setDescriptionSuggestion(DESCRIPTION_SUGGESTION_2);\n        businessObjectDefinitionDescriptionSuggestionEntity2.setUserId(USER_ID_2);\n        businessObjectDefinitionDescriptionSuggestionEntity2.setStatus(businessObjectDefinitionDescriptionSuggestionStatusEntity);\n\n        List<BusinessObjectDefinitionDescriptionSuggestionEntity> businessObjectDefinitionDescriptionSuggestionEntities =\n            Lists.newArrayList(businessObjectDefinitionDescriptionSuggestionEntity, businessObjectDefinitionDescriptionSuggestionEntity2);\n\n        // Setup mock interactions.\n        when(businessObjectDefinitionDao.getBusinessObjectDefinitionByKey(businessObjectDefinitionKey)).thenReturn(businessObjectDefinitionEntity);\n        when(businessObjectDefinitionDescriptionSuggestionDao\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionEntity, null))\n            .thenReturn(businessObjectDefinitionDescriptionSuggestionEntities);\n\n        // Call method under test.\n        List<BusinessObjectDefinitionDescriptionSuggestionEntity> result = businessObjectDefinitionDescriptionSuggestionDaoHelper\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionKey, \"\");\n\n        // Validate results.\n        assertThat(\"Result size does not equal businessObjectDefinitionDescriptionSuggestionEntities.\", result.size(),\n            is(equalTo(businessObjectDefinitionDescriptionSuggestionEntities.size())));\n\n        for (int i = 0; i < result.size(); i++)\n        {\n            assertThat(\"Result is not equal businessObjectDefinitionDescriptionSuggestionEntity.\", result.get(i),\n                is(equalTo(businessObjectDefinitionDescriptionSuggestionEntities.get(i))));\n        }\n\n        // Verify mocks interactions.\n        verify(businessObjectDefinitionDao).getBusinessObjectDefinitionByKey(businessObjectDefinitionKey);\n        verify(businessObjectDefinitionDescriptionSuggestionDao)\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionEntity, null);\n        verifyNoMoreInteractions(businessObjectDefinitionDao, businessObjectDefinitionDescriptionSuggestionDao,\n            businessObjectDefinitionDescriptionSuggestionStatusDao);\n\n        // Reset the mocks\n        reset(businessObjectDefinitionDao);\n        reset(businessObjectDefinitionDescriptionSuggestionDao);\n\n        // Setup mock interactions.\n        when(businessObjectDefinitionDao.getBusinessObjectDefinitionByKey(businessObjectDefinitionKey)).thenReturn(businessObjectDefinitionEntity);\n        when(businessObjectDefinitionDescriptionSuggestionDao\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionEntity, null))\n            .thenReturn(businessObjectDefinitionDescriptionSuggestionEntities);\n\n        // Call method under test.\n        result = businessObjectDefinitionDescriptionSuggestionDaoHelper\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionKey, \"  \");\n\n        // Validate results.\n        assertThat(\"Result size does not equal businessObjectDefinitionDescriptionSuggestionEntities.\", result.size(),\n            is(equalTo(businessObjectDefinitionDescriptionSuggestionEntities.size())));\n\n        for (int i = 0; i < result.size(); i++)\n        {\n            assertThat(\"Result is not equal businessObjectDefinitionDescriptionSuggestionEntity.\", result.get(i),\n                is(equalTo(businessObjectDefinitionDescriptionSuggestionEntities.get(i))));\n        }\n\n        // Verify mocks interactions.\n        verify(businessObjectDefinitionDao).getBusinessObjectDefinitionByKey(businessObjectDefinitionKey);\n        verify(businessObjectDefinitionDescriptionSuggestionDao)\n            .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionEntity, null);\n        verifyNoMoreInteractions(businessObjectDefinitionDao, businessObjectDefinitionDescriptionSuggestionDao,\n            businessObjectDefinitionDescriptionSuggestionStatusDao);\n    }", "signature": "void testGetBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatusWithEmptyStatus()", "full_signature": "@Test public void testGetBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatusWithEmptyStatus()", "class_method_signature": "BusinessObjectDefinitionDescriptionSuggestionDaoHelperTest.testGetBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatusWithEmptyStatus()", "testcase": true, "constructor": false, "invocations": ["createNamespaceEntity", "createBusinessObjectDefinitionEntity", "getCode", "createBusinessObjectDefinitionDescriptionSuggestionStatusEntity", "setBusinessObjectDefinition", "setDescriptionSuggestion", "setUserId", "setStatus", "setBusinessObjectDefinition", "setDescriptionSuggestion", "setUserId", "setStatus", "newArrayList", "thenReturn", "when", "getBusinessObjectDefinitionByKey", "thenReturn", "when", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "assertThat", "size", "is", "equalTo", "size", "size", "assertThat", "get", "is", "equalTo", "get", "getBusinessObjectDefinitionByKey", "verify", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "verify", "verifyNoMoreInteractions", "reset", "reset", "thenReturn", "when", "getBusinessObjectDefinitionByKey", "thenReturn", "when", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "assertThat", "size", "is", "equalTo", "size", "size", "assertThat", "get", "is", "equalTo", "get", "getBusinessObjectDefinitionByKey", "verify", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "BusinessObjectDefinitionDescriptionSuggestionDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionDescriptionSuggestionDao businessObjectDefinitionDescriptionSuggestionDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDescriptionSuggestionDao", "declarator": "businessObjectDefinitionDescriptionSuggestionDao", "var_name": "businessObjectDefinitionDescriptionSuggestionDao"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionDescriptionSuggestionStatusDao businessObjectDefinitionDescriptionSuggestionStatusDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDescriptionSuggestionStatusDao", "declarator": "businessObjectDefinitionDescriptionSuggestionStatusDao", "var_name": "businessObjectDefinitionDescriptionSuggestionStatusDao"}], "methods": [{"identifier": "getBusinessObjectDefinitionDescriptionSuggestionEntity", "parameters": "(\n        final BusinessObjectDefinitionEntity businessObjectDefinitionEntity, final String userId)", "modifiers": "public", "return": "BusinessObjectDefinitionDescriptionSuggestionEntity", "signature": "BusinessObjectDefinitionDescriptionSuggestionEntity getBusinessObjectDefinitionDescriptionSuggestionEntity(\n        final BusinessObjectDefinitionEntity businessObjectDefinitionEntity, final String userId)", "full_signature": "public BusinessObjectDefinitionDescriptionSuggestionEntity getBusinessObjectDefinitionDescriptionSuggestionEntity(\n        final BusinessObjectDefinitionEntity businessObjectDefinitionEntity, final String userId)", "class_method_signature": "BusinessObjectDefinitionDescriptionSuggestionDaoHelper.getBusinessObjectDefinitionDescriptionSuggestionEntity(\n        final BusinessObjectDefinitionEntity businessObjectDefinitionEntity, final String userId)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "parameters": "(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "modifiers": "public", "return": "List<BusinessObjectDefinitionDescriptionSuggestionEntity>", "signature": "List<BusinessObjectDefinitionDescriptionSuggestionEntity> getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "full_signature": "public List<BusinessObjectDefinitionDescriptionSuggestionEntity> getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "class_method_signature": "BusinessObjectDefinitionDescriptionSuggestionDaoHelper.getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectDefinitionDescriptionSuggestionDaoHelper.java"}, "focal_method": {"identifier": "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "parameters": "(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "modifiers": "public", "return": "List<BusinessObjectDefinitionDescriptionSuggestionEntity>", "body": "public List<BusinessObjectDefinitionDescriptionSuggestionEntity> getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)\n    {\n        // Retrieve the business object definition and ensure it exists.\n        BusinessObjectDefinitionEntity businessObjectDefinitionEntity =\n            businessObjectDefinitionDao.getBusinessObjectDefinitionByKey(businessObjectDefinitionKey);\n\n        // If the business object definition entity does not exist return an empty list.\n        if (businessObjectDefinitionEntity == null)\n        {\n            return Lists.newArrayList();\n        }\n\n        // First get the status entity.\n        BusinessObjectDefinitionDescriptionSuggestionStatusEntity businessObjectDefinitionDescriptionSuggestionStatusEntity = null;\n        if (StringUtils.isNotBlank(status))\n        {\n            // Attempt to find the status entity associated with the status string.\n            businessObjectDefinitionDescriptionSuggestionStatusEntity =\n                businessObjectDefinitionDescriptionSuggestionStatusDao.getBusinessObjectDefinitionDescriptionSuggestionStatusByCode(status);\n\n            // If the status was not found in the status table return an empty list.\n            if (businessObjectDefinitionDescriptionSuggestionStatusEntity == null)\n            {\n                return Lists.newArrayList();\n            }\n        }\n\n        // The list of business object definition description suggestions.\n        List<BusinessObjectDefinitionDescriptionSuggestionEntity> businessObjectDefinitionDescriptionSuggestionEntities =\n            businessObjectDefinitionDescriptionSuggestionDao\n                .getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(businessObjectDefinitionEntity,\n                    businessObjectDefinitionDescriptionSuggestionStatusEntity);\n\n        // If business object definition description suggestion entities do not exist return an empty list.\n        if (businessObjectDefinitionDescriptionSuggestionEntities == null)\n        {\n            return Lists.newArrayList();\n        }\n\n        return businessObjectDefinitionDescriptionSuggestionEntities;\n    }", "signature": "List<BusinessObjectDefinitionDescriptionSuggestionEntity> getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "full_signature": "public List<BusinessObjectDefinitionDescriptionSuggestionEntity> getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "class_method_signature": "BusinessObjectDefinitionDescriptionSuggestionDaoHelper.getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus(\n        final BusinessObjectDefinitionKey businessObjectDefinitionKey, final String status)", "testcase": false, "constructor": false, "invocations": ["getBusinessObjectDefinitionByKey", "newArrayList", "isNotBlank", "getBusinessObjectDefinitionDescriptionSuggestionStatusByCode", "newArrayList", "getBusinessObjectDefinitionDescriptionSuggestionsByBusinessObjectDefinitionAndStatus", "newArrayList"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}