{"test_class": {"identifier": "SecurityAnalysisExecutionImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SecurityAnalysis analysis;", "modifier": "private", "type": "SecurityAnalysis", "declarator": "analysis", "var_name": "analysis"}, {"original_string": "private SecurityAnalysisFactory factory;", "modifier": "private", "type": "SecurityAnalysisFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private LimitViolationFilter filter;", "modifier": "private", "type": "LimitViolationFilter", "declarator": "filter", "var_name": "filter"}, {"original_string": "private LimitViolationDetector detector;", "modifier": "private", "type": "LimitViolationDetector", "declarator": "detector", "var_name": "detector"}, {"original_string": "private ContingenciesProvider contingencies;", "modifier": "private", "type": "ContingenciesProvider", "declarator": "contingencies", "var_name": "contingencies"}, {"original_string": "private SecurityAnalysisParameters parameters;", "modifier": "private", "type": "SecurityAnalysisParameters", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private SecurityAnalysisExecution execution;", "modifier": "private", "type": "SecurityAnalysisExecution", "declarator": "execution", "var_name": "execution"}, {"original_string": "private Network network;", "modifier": "private", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private ComputationManager computationManager;", "modifier": "private", "type": "ComputationManager", "declarator": "computationManager", "var_name": "computationManager"}, {"original_string": "private SecurityAnalysisExecutionInput input;", "modifier": "private", "type": "SecurityAnalysisExecutionInput", "declarator": "input", "var_name": "input"}], "file": "security-analysis-api/src/test/java/com/powsybl/security/execution/SecurityAnalysisExecutionImplTest.java"}, "test_case": {"identifier": "checkExecutionWithLogCallAndArguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkExecutionWithLogCallAndArguments() {\n\n        execution.executeWithLog(computationManager, input);\n        Mockito.verify(factory, Mockito.times(1))\n                .create(same(network), same(detector), same(filter), same(computationManager), anyInt());\n        Mockito.verify(analysis, Mockito.times(1))\n                .runWithLog(eq(\"variantId\"), same(parameters), same(contingencies));\n    }", "signature": "void checkExecutionWithLogCallAndArguments()", "full_signature": "@Test public void checkExecutionWithLogCallAndArguments()", "class_method_signature": "SecurityAnalysisExecutionImplTest.checkExecutionWithLogCallAndArguments()", "testcase": true, "constructor": false, "invocations": ["executeWithLog", "create", "verify", "times", "same", "same", "same", "same", "anyInt", "runWithLog", "verify", "times", "eq", "same", "same"]}, "focal_class": {"identifier": "SecurityAnalysisExecutionImpl", "superclass": "", "interfaces": "implements SecurityAnalysisExecution", "fields": [{"original_string": "private final SecurityAnalysisFactory factory;", "modifier": "private final", "type": "SecurityAnalysisFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private final SecurityAnalysisInputBuildStrategy inputBuildStrategy;", "modifier": "private final", "type": "SecurityAnalysisInputBuildStrategy", "declarator": "inputBuildStrategy", "var_name": "inputBuildStrategy"}], "methods": [{"identifier": "SecurityAnalysisExecutionImpl", "parameters": "(SecurityAnalysisFactory factory)", "modifiers": "public", "return": "", "signature": " SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory)", "full_signature": "public  SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory)", "class_method_signature": "SecurityAnalysisExecutionImpl.SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory)", "testcase": false, "constructor": true}, {"identifier": "SecurityAnalysisExecutionImpl", "parameters": "(SecurityAnalysisFactory factory, SecurityAnalysisInputBuildStrategy inputBuildStrategy)", "modifiers": "public", "return": "", "signature": " SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory, SecurityAnalysisInputBuildStrategy inputBuildStrategy)", "full_signature": "public  SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory, SecurityAnalysisInputBuildStrategy inputBuildStrategy)", "class_method_signature": "SecurityAnalysisExecutionImpl.SecurityAnalysisExecutionImpl(SecurityAnalysisFactory factory, SecurityAnalysisInputBuildStrategy inputBuildStrategy)", "testcase": false, "constructor": true}, {"identifier": "buildDefault", "parameters": "(SecurityAnalysisExecutionInput executionInput)", "modifiers": "private static", "return": "SecurityAnalysisInput", "signature": "SecurityAnalysisInput buildDefault(SecurityAnalysisExecutionInput executionInput)", "full_signature": "private static SecurityAnalysisInput buildDefault(SecurityAnalysisExecutionInput executionInput)", "class_method_signature": "SecurityAnalysisExecutionImpl.buildDefault(SecurityAnalysisExecutionInput executionInput)", "testcase": false, "constructor": false}, {"identifier": "buildInput", "parameters": "(SecurityAnalysisExecutionInput executionInput)", "modifiers": "private", "return": "SecurityAnalysisInput", "signature": "SecurityAnalysisInput buildInput(SecurityAnalysisExecutionInput executionInput)", "full_signature": "private SecurityAnalysisInput buildInput(SecurityAnalysisExecutionInput executionInput)", "class_method_signature": "SecurityAnalysisExecutionImpl.buildInput(SecurityAnalysisExecutionInput executionInput)", "testcase": false, "constructor": false}, {"identifier": "buildSecurityAnalysis", "parameters": "(SecurityAnalysisInput input, ComputationManager computationManager)", "modifiers": "private", "return": "SecurityAnalysis", "signature": "SecurityAnalysis buildSecurityAnalysis(SecurityAnalysisInput input, ComputationManager computationManager)", "full_signature": "private SecurityAnalysis buildSecurityAnalysis(SecurityAnalysisInput input, ComputationManager computationManager)", "class_method_signature": "SecurityAnalysisExecutionImpl.buildSecurityAnalysis(SecurityAnalysisInput input, ComputationManager computationManager)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "modifiers": "@Override public", "return": "CompletableFuture<SecurityAnalysisResult>", "signature": "CompletableFuture<SecurityAnalysisResult> execute(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "full_signature": "@Override public CompletableFuture<SecurityAnalysisResult> execute(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "class_method_signature": "SecurityAnalysisExecutionImpl.execute(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "testcase": false, "constructor": false}, {"identifier": "executeWithLog", "parameters": "(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "modifiers": "@Override public", "return": "CompletableFuture<SecurityAnalysisResultWithLog>", "signature": "CompletableFuture<SecurityAnalysisResultWithLog> executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "full_signature": "@Override public CompletableFuture<SecurityAnalysisResultWithLog> executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "class_method_signature": "SecurityAnalysisExecutionImpl.executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "testcase": false, "constructor": false}], "file": "security-analysis-api/src/main/java/com/powsybl/security/execution/SecurityAnalysisExecutionImpl.java"}, "focal_method": {"identifier": "executeWithLog", "parameters": "(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "modifiers": "@Override public", "return": "CompletableFuture<SecurityAnalysisResultWithLog>", "body": "@Override\n    public CompletableFuture<SecurityAnalysisResultWithLog> executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data) {\n        SecurityAnalysisInput input = buildInput(data);\n        SecurityAnalysis securityAnalysis = buildSecurityAnalysis(input, computationManager);\n        return securityAnalysis.runWithLog(input.getNetworkVariant().getVariantId(), input.getParameters(), input.getContingenciesProvider());\n    }", "signature": "CompletableFuture<SecurityAnalysisResultWithLog> executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "full_signature": "@Override public CompletableFuture<SecurityAnalysisResultWithLog> executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "class_method_signature": "SecurityAnalysisExecutionImpl.executeWithLog(ComputationManager computationManager, SecurityAnalysisExecutionInput data)", "testcase": false, "constructor": false, "invocations": ["buildInput", "buildSecurityAnalysis", "runWithLog", "getVariantId", "getNetworkVariant", "getParameters", "getContingenciesProvider"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}