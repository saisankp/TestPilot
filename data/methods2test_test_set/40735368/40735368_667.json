{"test_class": {"identifier": "DisposeStopperTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/coverage/src/test/java/org/geotools/image/DisposeStopperTest.java"}, "test_case": {"identifier": "testDispose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDispose() throws FileNotFoundException, IOException {\n        final File tiff = TestData.file(MosaicTest.class, \"sample0.tif\");\n\n        final TIFFImageReader reader = (it.geosolutions.imageioimpl.plugins.tiff.TIFFImageReader) new TIFFImageReaderSpi()\n                .createReaderInstance();\n        final ImageInputStream stream = ImageIO.createImageInputStream(tiff);\n        reader.setInput(stream);\n        RenderedImage image = ImageReadDescriptor.create(stream, 0, false, false, false, null,\n                null, null, reader, null);\n\n        DisposeStopper stopper = new DisposeStopper(image);\n        boolean readSuccess = true;\n        try {\n            // Try to dispose. It shouldn't since we are using the wrapper.\n            ImageUtilities.disposeImage(stopper);\n            assertNotNull(image);\n\n            // I still can get data since using the stopper the image isn't disposed\n            assertEquals(187, image.getData().getSample(1, 5, 0));\n\n            ImageUtilities.disposeImage(image);\n            image.getData().getSample(1, 5, 0);\n        } catch (RuntimeException ioe) {\n            // The dispose on the image (without using the disposeStopper wrapper)\n            // should have successfully disposed so the read can't success\n            readSuccess = false;\n        } finally {\n            if (stream != null) {\n                try {\n                    stream.close();\n                } catch (Throwable t) {\n\n                }\n            }\n            if (reader != null) {\n                try {\n                    reader.dispose();\n                } catch (Throwable t) {\n\n                }\n            }\n        }\n        assertFalse(readSuccess);\n    }", "signature": "void testDispose()", "full_signature": "@Test public void testDispose()", "class_method_signature": "DisposeStopperTest.testDispose()", "testcase": true, "constructor": false, "invocations": ["file", "createReaderInstance", "createImageInputStream", "setInput", "create", "disposeImage", "assertNotNull", "assertEquals", "getSample", "getData", "disposeImage", "getSample", "getData", "close", "dispose", "assertFalse"]}, "focal_class": {"identifier": "DisposeStopper", "superclass": "", "interfaces": "implements RenderedImage", "fields": [{"original_string": "private RenderedImage adaptee;", "modifier": "private", "type": "RenderedImage", "declarator": "adaptee", "var_name": "adaptee"}], "methods": [{"identifier": "DisposeStopper", "parameters": "(RenderedImage adaptee)", "modifiers": "public", "return": "", "signature": " DisposeStopper(RenderedImage adaptee)", "full_signature": "public  DisposeStopper(RenderedImage adaptee)", "class_method_signature": "DisposeStopper.DisposeStopper(RenderedImage adaptee)", "testcase": false, "constructor": true}, {"identifier": "getSources", "parameters": "()", "modifiers": "public", "return": "Vector<RenderedImage>", "signature": "Vector<RenderedImage> getSources()", "full_signature": "public Vector<RenderedImage> getSources()", "class_method_signature": "DisposeStopper.getSources()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(String name)", "modifiers": "public", "return": "Object", "signature": "Object getProperty(String name)", "full_signature": "public Object getProperty(String name)", "class_method_signature": "DisposeStopper.getProperty(String name)", "testcase": false, "constructor": false}, {"identifier": "getPropertyNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getPropertyNames()", "full_signature": "public String[] getPropertyNames()", "class_method_signature": "DisposeStopper.getPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "getColorModel", "parameters": "()", "modifiers": "public", "return": "ColorModel", "signature": "ColorModel getColorModel()", "full_signature": "public ColorModel getColorModel()", "class_method_signature": "DisposeStopper.getColorModel()", "testcase": false, "constructor": false}, {"identifier": "getSampleModel", "parameters": "()", "modifiers": "public", "return": "SampleModel", "signature": "SampleModel getSampleModel()", "full_signature": "public SampleModel getSampleModel()", "class_method_signature": "DisposeStopper.getSampleModel()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "DisposeStopper.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHeight()", "full_signature": "public int getHeight()", "class_method_signature": "DisposeStopper.getHeight()", "testcase": false, "constructor": false}, {"identifier": "getMinX", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinX()", "full_signature": "public int getMinX()", "class_method_signature": "DisposeStopper.getMinX()", "testcase": false, "constructor": false}, {"identifier": "getMinY", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinY()", "full_signature": "public int getMinY()", "class_method_signature": "DisposeStopper.getMinY()", "testcase": false, "constructor": false}, {"identifier": "getNumXTiles", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumXTiles()", "full_signature": "public int getNumXTiles()", "class_method_signature": "DisposeStopper.getNumXTiles()", "testcase": false, "constructor": false}, {"identifier": "getNumYTiles", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumYTiles()", "full_signature": "public int getNumYTiles()", "class_method_signature": "DisposeStopper.getNumYTiles()", "testcase": false, "constructor": false}, {"identifier": "getMinTileX", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinTileX()", "full_signature": "public int getMinTileX()", "class_method_signature": "DisposeStopper.getMinTileX()", "testcase": false, "constructor": false}, {"identifier": "getMinTileY", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinTileY()", "full_signature": "public int getMinTileY()", "class_method_signature": "DisposeStopper.getMinTileY()", "testcase": false, "constructor": false}, {"identifier": "getTileWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTileWidth()", "full_signature": "public int getTileWidth()", "class_method_signature": "DisposeStopper.getTileWidth()", "testcase": false, "constructor": false}, {"identifier": "getTileHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTileHeight()", "full_signature": "public int getTileHeight()", "class_method_signature": "DisposeStopper.getTileHeight()", "testcase": false, "constructor": false}, {"identifier": "getTileGridXOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTileGridXOffset()", "full_signature": "public int getTileGridXOffset()", "class_method_signature": "DisposeStopper.getTileGridXOffset()", "testcase": false, "constructor": false}, {"identifier": "getTileGridYOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTileGridYOffset()", "full_signature": "public int getTileGridYOffset()", "class_method_signature": "DisposeStopper.getTileGridYOffset()", "testcase": false, "constructor": false}, {"identifier": "getTile", "parameters": "(int tileX, int tileY)", "modifiers": "public", "return": "Raster", "signature": "Raster getTile(int tileX, int tileY)", "full_signature": "public Raster getTile(int tileX, int tileY)", "class_method_signature": "DisposeStopper.getTile(int tileX, int tileY)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "Raster", "signature": "Raster getData()", "full_signature": "public Raster getData()", "class_method_signature": "DisposeStopper.getData()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(Rectangle rect)", "modifiers": "public", "return": "Raster", "signature": "Raster getData(Rectangle rect)", "full_signature": "public Raster getData(Rectangle rect)", "class_method_signature": "DisposeStopper.getData(Rectangle rect)", "testcase": false, "constructor": false}, {"identifier": "copyData", "parameters": "(WritableRaster raster)", "modifiers": "public", "return": "WritableRaster", "signature": "WritableRaster copyData(WritableRaster raster)", "full_signature": "public WritableRaster copyData(WritableRaster raster)", "class_method_signature": "DisposeStopper.copyData(WritableRaster raster)", "testcase": false, "constructor": false}], "file": "modules/library/coverage/src/main/java/org/geotools/image/DisposeStopper.java"}, "focal_method": {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "Raster", "body": "public Raster getData() {\n        return adaptee.getData();\n    }", "signature": "Raster getData()", "full_signature": "public Raster getData()", "class_method_signature": "DisposeStopper.getData()", "testcase": false, "constructor": false, "invocations": ["getData"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}