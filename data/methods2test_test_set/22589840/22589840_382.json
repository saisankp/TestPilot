{"test_class": {"identifier": "EncoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "olat7.8/src/test/java/org/olat/system/commons/encoder/EncoderTest.java"}, "test_case": {"identifier": "testBCryptEncode_wrongPasswordHash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBCryptEncode_wrongPasswordHash() {\n        String plaintext = \"aBc_123_X\";\n        String humbugPasswordHash = \"e8136d63483adcd7760a1d50a2a8978b\";\n        boolean matches = Encoder.matches(plaintext, humbugPasswordHash);\n        assertFalse(matches);\n    }", "signature": "void testBCryptEncode_wrongPasswordHash()", "full_signature": "@Test public void testBCryptEncode_wrongPasswordHash()", "class_method_signature": "EncoderTest.testBCryptEncode_wrongPasswordHash()", "testcase": true, "constructor": false, "invocations": ["matches", "assertFalse"]}, "focal_class": {"identifier": "Encoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerHelper.getLogger()", "var_name": "LOG"}, {"original_string": "@Deprecated\n    private static final String HASH_ALGORITHM = \"MD5\";", "modifier": "@Deprecated\n    private static final", "type": "String", "declarator": "HASH_ALGORITHM = \"MD5\"", "var_name": "HASH_ALGORITHM"}, {"original_string": "private static final PasswordEncoder bCryptPasswordEncoder = new BCryptPasswordEncoder(5);", "modifier": "private static final", "type": "PasswordEncoder", "declarator": "bCryptPasswordEncoder = new BCryptPasswordEncoder(5)", "var_name": "bCryptPasswordEncoder"}, {"original_string": "public static final MD5Encoder md5Encoder = new MD5Encoder();", "modifier": "public static final", "type": "MD5Encoder", "declarator": "md5Encoder = new MD5Encoder()", "var_name": "md5Encoder"}], "methods": [{"identifier": "encrypt", "parameters": "(String s)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String encrypt(String s)", "full_signature": "@Deprecated public static String encrypt(String s)", "class_method_signature": "Encoder.encrypt(String s)", "testcase": false, "constructor": false}, {"identifier": "bCryptEncode", "parameters": "(String rawPassword)", "modifiers": "public static", "return": "String", "signature": "String bCryptEncode(String rawPassword)", "full_signature": "public static String bCryptEncode(String rawPassword)", "class_method_signature": "Encoder.bCryptEncode(String rawPassword)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(String rawPassword, String encodedPassword)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(String rawPassword, String encodedPassword)", "full_signature": "public static boolean matches(String rawPassword, String encodedPassword)", "class_method_signature": "Encoder.matches(String rawPassword, String encodedPassword)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Encoder.main(String[] args)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/system/commons/encoder/Encoder.java"}, "focal_method": {"identifier": "matches", "parameters": "(String rawPassword, String encodedPassword)", "modifiers": "public static", "return": "boolean", "body": "public static boolean matches(String rawPassword, String encodedPassword) {\n        try {\n            return bCryptPasswordEncoder.matches(rawPassword, encodedPassword);\n        } catch (Exception e) {\n            LOG.error(\"password match check failed because of: \" + e.getMessage());\n        }\n        return false;\n    }", "signature": "boolean matches(String rawPassword, String encodedPassword)", "full_signature": "public static boolean matches(String rawPassword, String encodedPassword)", "class_method_signature": "Encoder.matches(String rawPassword, String encodedPassword)", "testcase": false, "constructor": false, "invocations": ["matches", "error", "getMessage"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}