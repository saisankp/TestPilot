{"test_class": {"identifier": "VehicleServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Captor\n    private ArgumentCaptor<Vehicle> vehicleArgumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Vehicle>", "declarator": "vehicleArgumentCaptor", "var_name": "vehicleArgumentCaptor"}, {"original_string": "@Mock\n    private RouteOptimizer optimizer;", "modifier": "@Mock\n    private", "type": "RouteOptimizer", "declarator": "optimizer", "var_name": "optimizer"}, {"original_string": "@Mock\n    private VehicleRepository vehicleRepository;", "modifier": "@Mock\n    private", "type": "VehicleRepository", "declarator": "vehicleRepository", "var_name": "vehicleRepository"}, {"original_string": "@InjectMocks\n    private VehicleService vehicleService;", "modifier": "@InjectMocks\n    private", "type": "VehicleService", "declarator": "vehicleService", "var_name": "vehicleService"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/service/vehicle/VehicleServiceTest.java"}, "test_case": {"identifier": "removeAll", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void removeAll() {\n        vehicleService.removeAll();\n        verify(optimizer).removeAllVehicles();\n        verify(vehicleRepository).removeAll();\n    }", "signature": "void removeAll()", "full_signature": "@Test void removeAll()", "class_method_signature": "VehicleServiceTest.removeAll()", "testcase": true, "constructor": false, "invocations": ["removeAll", "removeAllVehicles", "verify", "removeAll", "verify"]}, "focal_class": {"identifier": "VehicleService", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int DEFAULT_VEHICLE_CAPACITY = 10;", "modifier": "static final", "type": "int", "declarator": "DEFAULT_VEHICLE_CAPACITY = 10", "var_name": "DEFAULT_VEHICLE_CAPACITY"}, {"original_string": "private final RouteOptimizer optimizer;", "modifier": "private final", "type": "RouteOptimizer", "declarator": "optimizer", "var_name": "optimizer"}, {"original_string": "private final VehicleRepository vehicleRepository;", "modifier": "private final", "type": "VehicleRepository", "declarator": "vehicleRepository", "var_name": "vehicleRepository"}], "methods": [{"identifier": "VehicleService", "parameters": "(RouteOptimizer optimizer, VehicleRepository vehicleRepository)", "modifiers": "@Autowired public", "return": "", "signature": " VehicleService(RouteOptimizer optimizer, VehicleRepository vehicleRepository)", "full_signature": "@Autowired public  VehicleService(RouteOptimizer optimizer, VehicleRepository vehicleRepository)", "class_method_signature": "VehicleService.VehicleService(RouteOptimizer optimizer, VehicleRepository vehicleRepository)", "testcase": false, "constructor": true}, {"identifier": "createVehicle", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createVehicle()", "full_signature": "public void createVehicle()", "class_method_signature": "VehicleService.createVehicle()", "testcase": false, "constructor": false}, {"identifier": "createVehicle", "parameters": "(VehicleData vehicleData)", "modifiers": "public", "return": "void", "signature": "void createVehicle(VehicleData vehicleData)", "full_signature": "public void createVehicle(VehicleData vehicleData)", "class_method_signature": "VehicleService.createVehicle(VehicleData vehicleData)", "testcase": false, "constructor": false}, {"identifier": "addVehicle", "parameters": "(Vehicle vehicle)", "modifiers": "public", "return": "void", "signature": "void addVehicle(Vehicle vehicle)", "full_signature": "public void addVehicle(Vehicle vehicle)", "class_method_signature": "VehicleService.addVehicle(Vehicle vehicle)", "testcase": false, "constructor": false}, {"identifier": "removeVehicle", "parameters": "(long vehicleId)", "modifiers": "public", "return": "void", "signature": "void removeVehicle(long vehicleId)", "full_signature": "public void removeVehicle(long vehicleId)", "class_method_signature": "VehicleService.removeVehicle(long vehicleId)", "testcase": false, "constructor": false}, {"identifier": "removeAnyVehicle", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void removeAnyVehicle()", "full_signature": "public synchronized void removeAnyVehicle()", "class_method_signature": "VehicleService.removeAnyVehicle()", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAll()", "full_signature": "public void removeAll()", "class_method_signature": "VehicleService.removeAll()", "testcase": false, "constructor": false}, {"identifier": "changeCapacity", "parameters": "(long vehicleId, int capacity)", "modifiers": "public", "return": "void", "signature": "void changeCapacity(long vehicleId, int capacity)", "full_signature": "public void changeCapacity(long vehicleId, int capacity)", "class_method_signature": "VehicleService.changeCapacity(long vehicleId, int capacity)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/service/vehicle/VehicleService.java"}, "focal_method": {"identifier": "removeAll", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void removeAll() {\n        optimizer.removeAllVehicles();\n        vehicleRepository.removeAll();\n    }", "signature": "void removeAll()", "full_signature": "public void removeAll()", "class_method_signature": "VehicleService.removeAll()", "testcase": false, "constructor": false, "invocations": ["removeAllVehicles", "removeAll"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}