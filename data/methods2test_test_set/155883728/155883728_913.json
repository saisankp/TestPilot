{"test_class": {"identifier": "OsgiConfigInstallableParamsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/sling/OsgiConfigInstallableParamsTest.java"}, "test_case": {"identifier": "testCreateInstallable_throws", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testCreateInstallable_throws() throws Exception {\n        final Map<String, Object> expectProperties = new LinkedHashMap<>();\n        expectProperties.put(\"foo\", \"bar\");\n        expectProperties.put(\"bar\", \"foo\");\n        final String expectServicePid = \"myServicePid\";\n        final String expectFactoryPid = \"myFactoryPid\";\n        final Exception expectParseError = new IllegalArgumentException(\"my parse error\");\n        OsgiConfigInstallableParams params = new OsgiConfigInstallableParams(expectProperties, expectServicePid,\n                expectFactoryPid, expectParseError);\n        params.createInstallable(PackageId.fromString(\"test\"), \"/some/path\");\n    }", "signature": "void testCreateInstallable_throws()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testCreateInstallable_throws()", "class_method_signature": "OsgiConfigInstallableParamsTest.testCreateInstallable_throws()", "testcase": true, "constructor": false, "invocations": ["put", "put", "createInstallable", "fromString"]}, "focal_class": {"identifier": "OsgiConfigInstallableParams", "superclass": "", "interfaces": "implements SlingInstallableParams<OsgiConfigInstallable>", "fields": [{"original_string": "private final @NotNull Map<String, Object> properties;", "modifier": "private final @NotNull", "type": "Map<String, Object>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private final @NotNull String servicePid;", "modifier": "private final @NotNull", "type": "String", "declarator": "servicePid", "var_name": "servicePid"}, {"original_string": "private final @Nullable String factoryPid;", "modifier": "private final @Nullable", "type": "String", "declarator": "factoryPid", "var_name": "factoryPid"}, {"original_string": "private final @Nullable Exception parseError;", "modifier": "private final @Nullable", "type": "Exception", "declarator": "parseError", "var_name": "parseError"}], "methods": [{"identifier": "OsgiConfigInstallableParams", "parameters": "(@NotNull final Map<String, Object> properties,\n                                       @NotNull final String servicePid,\n                                       @Nullable final String factoryPid,\n                                       @Nullable final Exception parseError)", "modifiers": "public", "return": "", "signature": " OsgiConfigInstallableParams(@NotNull final Map<String, Object> properties,\n                                       @NotNull final String servicePid,\n                                       @Nullable final String factoryPid,\n                                       @Nullable final Exception parseError)", "full_signature": "public  OsgiConfigInstallableParams(@NotNull final Map<String, Object> properties,\n                                       @NotNull final String servicePid,\n                                       @Nullable final String factoryPid,\n                                       @Nullable final Exception parseError)", "class_method_signature": "OsgiConfigInstallableParams.OsgiConfigInstallableParams(@NotNull final Map<String, Object> properties,\n                                       @NotNull final String servicePid,\n                                       @Nullable final String factoryPid,\n                                       @Nullable final Exception parseError)", "testcase": false, "constructor": true}, {"identifier": "getServicePid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServicePid()", "full_signature": "public String getServicePid()", "class_method_signature": "OsgiConfigInstallableParams.getServicePid()", "testcase": false, "constructor": false}, {"identifier": "getFactoryPid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFactoryPid()", "full_signature": "public String getFactoryPid()", "class_method_signature": "OsgiConfigInstallableParams.getFactoryPid()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getProperties()", "full_signature": "public Map<String, Object> getProperties()", "class_method_signature": "OsgiConfigInstallableParams.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getParseError", "parameters": "()", "modifiers": "public", "return": "Exception", "signature": "Exception getParseError()", "full_signature": "public Exception getParseError()", "class_method_signature": "OsgiConfigInstallableParams.getParseError()", "testcase": false, "constructor": false}, {"identifier": "createInstallable", "parameters": "(final PackageId parentPackageId, final String jcrPath)", "modifiers": "@NotNull @Override public", "return": "OsgiConfigInstallable", "signature": "OsgiConfigInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "full_signature": "@NotNull @Override public OsgiConfigInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "class_method_signature": "OsgiConfigInstallableParams.createInstallable(final PackageId parentPackageId, final String jcrPath)", "testcase": false, "constructor": false}, {"identifier": "getInstallableType", "parameters": "()", "modifiers": "@Override public @NotNull", "return": "Class<OsgiConfigInstallable>", "signature": "Class<OsgiConfigInstallable> getInstallableType()", "full_signature": "@Override public @NotNull Class<OsgiConfigInstallable> getInstallableType()", "class_method_signature": "OsgiConfigInstallableParams.getInstallableType()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/sling/OsgiConfigInstallableParams.java"}, "focal_method": {"identifier": "createInstallable", "parameters": "(final PackageId parentPackageId, final String jcrPath)", "modifiers": "@NotNull @Override public", "return": "OsgiConfigInstallable", "body": "@NotNull\n    @Override\n    public OsgiConfigInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)\n            throws Exception {\n        if (parseError != null) {\n            throw parseError;\n        }\n        return new OsgiConfigInstallable(parentPackageId, jcrPath, properties, servicePid, factoryPid);\n    }", "signature": "OsgiConfigInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "full_signature": "@NotNull @Override public OsgiConfigInstallable createInstallable(final PackageId parentPackageId, final String jcrPath)", "class_method_signature": "OsgiConfigInstallableParams.createInstallable(final PackageId parentPackageId, final String jcrPath)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}