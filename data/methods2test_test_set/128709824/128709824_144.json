{"test_class": {"identifier": "LoadBalancerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/client/LoadBalancerFactoryTest.java"}, "test_case": {"identifier": "getLoadBalancer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLoadBalancer() throws Exception {\n        ConsumerConfig consumerConfig = new ConsumerConfig().setBootstrap(\"test\").setLoadBalancer(\"test\");\n        ConsumerBootstrap bootstrap = Bootstraps.from(consumerConfig);\n\n        Assert.assertEquals(LoadBalancerFactory.getLoadBalancer(bootstrap).getClass(), TestLoadBalancer.class);\n\n        boolean error = false;\n        try {\n            consumerConfig.setLoadBalancer(\"xasdsa\");\n            LoadBalancerFactory.getLoadBalancer(bootstrap);\n        } catch (Exception e) {\n            error = true;\n        }\n        Assert.assertTrue(error);\n    }", "signature": "void getLoadBalancer()", "full_signature": "@Test public void getLoadBalancer()", "class_method_signature": "LoadBalancerFactoryTest.getLoadBalancer()", "testcase": true, "constructor": false, "invocations": ["setLoadBalancer", "setBootstrap", "from", "assertEquals", "getClass", "getLoadBalancer", "setLoadBalancer", "getLoadBalancer", "assertTrue"]}, "focal_class": {"identifier": "LoadBalancerFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getLoadBalancer", "parameters": "(ConsumerBootstrap consumerBootstrap)", "modifiers": "public static", "return": "LoadBalancer", "signature": "LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "full_signature": "public static LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "class_method_signature": "LoadBalancerFactory.getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "testcase": false, "constructor": false}, {"identifier": "getLoadBalancer", "parameters": "(ConsumerBootstrap consumerBootstrap, String loadBalancer)", "modifiers": "public static", "return": "LoadBalancer", "signature": "LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap, String loadBalancer)", "full_signature": "public static LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap, String loadBalancer)", "class_method_signature": "LoadBalancerFactory.getLoadBalancer(ConsumerBootstrap consumerBootstrap, String loadBalancer)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/client/LoadBalancerFactory.java"}, "focal_method": {"identifier": "getLoadBalancer", "parameters": "(ConsumerBootstrap consumerBootstrap)", "modifiers": "public static", "return": "LoadBalancer", "body": "public static LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap) {\n        return getLoadBalancer(consumerBootstrap, consumerBootstrap.getConsumerConfig().getLoadBalancer());\n    }", "signature": "LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "full_signature": "public static LoadBalancer getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "class_method_signature": "LoadBalancerFactory.getLoadBalancer(ConsumerBootstrap consumerBootstrap)", "testcase": false, "constructor": false, "invocations": ["getLoadBalancer", "getLoadBalancer", "getConsumerConfig"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}