{"test_class": {"identifier": "JeuTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Jeu testDuJeu;", "modifier": "private", "type": "Jeu", "declarator": "testDuJeu", "var_name": "testDuJeu"}], "file": "moteur/src/test/java/moteur/JeuTest.java"}, "test_case": {"identifier": "finAgeTest", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void finAgeTest() {\n        // Le jeu n'a pas \u00e9t\u00e9 touch\u00e9 donc l'age n'est pas fini\n        assertEquals(false, testDuJeu.finAge());\n\n        // Est que le finAge se termine apr\u00e9s 6 tour ?\n        changeField(\"tour\", 7);\n        assertEquals(false, testDuJeu.finAge());\n        changeField(\"tour\", 5);\n\n        // modifier le deck main pour qu'il reste qu'une seule carte\n        ArrayList<Joueur> joueurs = testDuJeu.getJoueurs();\n        ArrayList<Carte> c = new ArrayList<Carte>();\n        c.add(new Carte(\"CarteTest\", BLANC, 0));\n        for (int i = 0; i < joueurs.size(); i++) {\n            joueurs.get(0).setDeckMain(c);\n        }\n        assertEquals(false, testDuJeu.finAge());\n        // modifier le deck main pour qu'il reste plusieurs cartes\n        c.add(new Carte(\"CarteTest\", BLANC, 0));\n        for (int i = 0; i < joueurs.size(); i++) {\n            joueurs.get(0).setDeckMain(c);\n        }\n        assertEquals(false, testDuJeu.finAge());\n    }", "signature": "void finAgeTest()", "full_signature": "@Test public final void finAgeTest()", "class_method_signature": "JeuTest.finAgeTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "finAge", "changeField", "assertEquals", "finAge", "changeField", "getJoueurs", "add", "size", "setDeckMain", "get", "assertEquals", "finAge", "add", "size", "setDeckMain", "get", "assertEquals", "finAge"]}, "focal_class": {"identifier": "Jeu", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ArrayList<Joueur> mesJoueurs;", "modifier": "private", "type": "ArrayList<Joueur>", "declarator": "mesJoueurs", "var_name": "mesJoueurs"}, {"original_string": "private final ArrayList<ArrayList<Carte>> tabDeck = new ArrayList<ArrayList<Carte>>(3);", "modifier": "private final", "type": "ArrayList<ArrayList<Carte>>", "declarator": "tabDeck = new ArrayList<ArrayList<Carte>>(3)", "var_name": "tabDeck"}, {"original_string": "private int age = 1, tour = 1;", "modifier": "private", "type": "int", "declarator": "age = 1", "var_name": "age"}], "methods": [{"identifier": "Jeu", "parameters": "(int nbJoueurs)", "modifiers": "public", "return": "", "signature": " Jeu(int nbJoueurs)", "full_signature": "public  Jeu(int nbJoueurs)", "class_method_signature": "Jeu.Jeu(int nbJoueurs)", "testcase": false, "constructor": true}, {"identifier": "getTour", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getTour()", "full_signature": "public final int getTour()", "class_method_signature": "Jeu.getTour()", "testcase": false, "constructor": false}, {"identifier": "getAge", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getAge()", "full_signature": "public final int getAge()", "class_method_signature": "Jeu.getAge()", "testcase": false, "constructor": false}, {"identifier": "getDecks", "parameters": "()", "modifiers": "public final", "return": "ArrayList<ArrayList<Carte>>", "signature": "ArrayList<ArrayList<Carte>> getDecks()", "full_signature": "public final ArrayList<ArrayList<Carte>> getDecks()", "class_method_signature": "Jeu.getDecks()", "testcase": false, "constructor": false}, {"identifier": "getTailleDeck", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getTailleDeck()", "full_signature": "public final int getTailleDeck()", "class_method_signature": "Jeu.getTailleDeck()", "testcase": false, "constructor": false}, {"identifier": "getDeckPrincipal", "parameters": "()", "modifiers": "public final", "return": "ArrayList<Carte>", "signature": "ArrayList<Carte> getDeckPrincipal()", "full_signature": "public final ArrayList<Carte> getDeckPrincipal()", "class_method_signature": "Jeu.getDeckPrincipal()", "testcase": false, "constructor": false}, {"identifier": "getJoueurs", "parameters": "()", "modifiers": "public final", "return": "ArrayList<Joueur>", "signature": "ArrayList<Joueur> getJoueurs()", "full_signature": "public final ArrayList<Joueur> getJoueurs()", "class_method_signature": "Jeu.getJoueurs()", "testcase": false, "constructor": false}, {"identifier": "tourSuivant", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void tourSuivant()", "full_signature": "public final void tourSuivant()", "class_method_signature": "Jeu.tourSuivant()", "testcase": false, "constructor": false}, {"identifier": "initCartes", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void initCartes()", "full_signature": "public final void initCartes()", "class_method_signature": "Jeu.initCartes()", "testcase": false, "constructor": false}, {"identifier": "roulementCarte", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void roulementCarte()", "full_signature": "public final void roulementCarte()", "class_method_signature": "Jeu.roulementCarte()", "testcase": false, "constructor": false}, {"identifier": "distributionCarte", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void distributionCarte()", "full_signature": "public final void distributionCarte()", "class_method_signature": "Jeu.distributionCarte()", "testcase": false, "constructor": false}, {"identifier": "distributionPlateau", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void distributionPlateau()", "full_signature": "public final void distributionPlateau()", "class_method_signature": "Jeu.distributionPlateau()", "testcase": false, "constructor": false}, {"identifier": "jouerAction", "parameters": "(Action ja)", "modifiers": "public final", "return": "String", "signature": "String jouerAction(Action ja)", "full_signature": "public final String jouerAction(Action ja)", "class_method_signature": "Jeu.jouerAction(Action ja)", "testcase": false, "constructor": false}, {"identifier": "finAge", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean finAge()", "full_signature": "public final boolean finAge()", "class_method_signature": "Jeu.finAge()", "testcase": false, "constructor": false}, {"identifier": "compareConfiltsJoueur", "parameters": "(Joueur j1, Joueur j2)", "modifiers": "private final", "return": "void", "signature": "void compareConfiltsJoueur(Joueur j1, Joueur j2)", "full_signature": "private final void compareConfiltsJoueur(Joueur j1, Joueur j2)", "class_method_signature": "Jeu.compareConfiltsJoueur(Joueur j1, Joueur j2)", "testcase": false, "constructor": false}, {"identifier": "ageSuivant", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void ageSuivant()", "full_signature": "public final void ageSuivant()", "class_method_signature": "Jeu.ageSuivant()", "testcase": false, "constructor": false}, {"identifier": "finJeu", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean finJeu()", "full_signature": "public final boolean finJeu()", "class_method_signature": "Jeu.finJeu()", "testcase": false, "constructor": false}, {"identifier": "getClassement", "parameters": "()", "modifiers": "public final", "return": "ArrayList<int[]>", "signature": "ArrayList<int[]> getClassement()", "full_signature": "public final ArrayList<int[]> getClassement()", "class_method_signature": "Jeu.getClassement()", "testcase": false, "constructor": false}, {"identifier": "getVisionsJeu", "parameters": "()", "modifiers": "public final", "return": "ArrayList<VisionJeu>", "signature": "ArrayList<VisionJeu> getVisionsJeu()", "full_signature": "public final ArrayList<VisionJeu> getVisionsJeu()", "class_method_signature": "Jeu.getVisionsJeu()", "testcase": false, "constructor": false}], "file": "moteur/src/main/java/moteur/Jeu.java"}, "focal_method": {"identifier": "finAge", "parameters": "()", "modifiers": "public final", "return": "boolean", "body": "public final boolean finAge() {\n        if (tour > 7)\n            return true;\n\n        Boolean isFin = true;\n        for (Joueur j : mesJoueurs) {\n            if (j.getDeckMain().size() != 1) {\n                isFin = false;\n                break;\n            }\n        }\n        return isFin;\n    }", "signature": "boolean finAge()", "full_signature": "public final boolean finAge()", "class_method_signature": "Jeu.finAge()", "testcase": false, "constructor": false, "invocations": ["size", "getDeckMain"]}, "repository": {"repo_id": 169146883, "url": "https://github.com/RemiFELIN/7Wonders_By_Miagestics", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 9826, "license": "licensed"}}