{"test_class": {"identifier": "FireworkEffectBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FireworkEffectMeta meta = MockBukkit.meta(FireworkEffectMeta.class);", "modifier": "", "type": "FireworkEffectMeta", "declarator": "meta = MockBukkit.meta(FireworkEffectMeta.class)", "var_name": "meta"}, {"original_string": "FireworkEffect effect = mock(FireworkEffect.class);", "modifier": "", "type": "FireworkEffect", "declarator": "effect = mock(FireworkEffect.class)", "var_name": "effect"}], "file": "commons/src/test/java/com/karuslabs/commons/item/builders/FireworkEffectBuilderTest.java"}, "test_case": {"identifier": "effect", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void effect() {\n        FireworkEffectBuilder.of().self().effect(effect);\n        \n        verify(meta).setEffect(effect);\n    }", "signature": "void effect()", "full_signature": "@Test void effect()", "class_method_signature": "FireworkEffectBuilderTest.effect()", "testcase": true, "constructor": false, "invocations": ["effect", "self", "of", "setEffect", "verify"]}, "focal_class": {"identifier": "FireworkEffectBuilder", "superclass": "extends Builder<FireworkEffectMeta, FireworkEffectBuilder>", "interfaces": "", "fields": [], "methods": [{"identifier": "of", "parameters": "()", "modifiers": "public static", "return": "FireworkEffectBuilder", "signature": "FireworkEffectBuilder of()", "full_signature": "public static FireworkEffectBuilder of()", "class_method_signature": "FireworkEffectBuilder.of()", "testcase": false, "constructor": false}, {"identifier": "FireworkEffectBuilder", "parameters": "()", "modifiers": "", "return": "", "signature": " FireworkEffectBuilder()", "full_signature": "  FireworkEffectBuilder()", "class_method_signature": "FireworkEffectBuilder.FireworkEffectBuilder()", "testcase": false, "constructor": true}, {"identifier": "FireworkEffectBuilder", "parameters": "(Builder<ItemMeta, ?> source)", "modifiers": "", "return": "", "signature": " FireworkEffectBuilder(Builder<ItemMeta, ?> source)", "full_signature": "  FireworkEffectBuilder(Builder<ItemMeta, ?> source)", "class_method_signature": "FireworkEffectBuilder.FireworkEffectBuilder(Builder<ItemMeta, ?> source)", "testcase": false, "constructor": true}, {"identifier": "effect", "parameters": "(FireworkEffect effect)", "modifiers": "public", "return": "FireworkEffectBuilder", "signature": "FireworkEffectBuilder effect(FireworkEffect effect)", "full_signature": "public FireworkEffectBuilder effect(FireworkEffect effect)", "class_method_signature": "FireworkEffectBuilder.effect(FireworkEffect effect)", "testcase": false, "constructor": false}, {"identifier": "self", "parameters": "()", "modifiers": "@Override", "return": "FireworkEffectBuilder", "signature": "FireworkEffectBuilder self()", "full_signature": "@Override FireworkEffectBuilder self()", "class_method_signature": "FireworkEffectBuilder.self()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/karuslabs/commons/item/builders/FireworkEffectBuilder.java"}, "focal_method": {"identifier": "effect", "parameters": "(FireworkEffect effect)", "modifiers": "public", "return": "FireworkEffectBuilder", "body": "public FireworkEffectBuilder effect(FireworkEffect effect) {\n        meta.setEffect(effect);\n        return this;\n    }", "signature": "FireworkEffectBuilder effect(FireworkEffect effect)", "full_signature": "public FireworkEffectBuilder effect(FireworkEffect effect)", "class_method_signature": "FireworkEffectBuilder.effect(FireworkEffect effect)", "testcase": false, "constructor": false, "invocations": ["setEffect"]}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}