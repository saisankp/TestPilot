{"test_class": {"identifier": "JdbcParamRepositoryTest", "superclass": "extends DatabaseTest", "interfaces": "", "fields": [], "file": "smartparam-repository-jdbc/src/test/java/org/smartparam/repository/jdbc/JdbcParamRepositoryTest.java"}, "test_case": {"identifier": "shouldOverwriteExistingParameterWithSameName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldOverwriteExistingParameterWithSameName() {\n        // given\n        database().withParameter(\"parameter\").withLevels(\"parameter\", 2).withParameterEntries(\"parameter\", 2).build();\n        Level[] levels = new Level[]{level().withName(\"lvl1\").withType(\"string\").build()};\n        ParameterEntry[] entries = new ParameterEntry[]{parameterEntry().withLevels(\"A\").build()};\n        Parameter parameter = parameter().withName(\"parameter\").withLevels(levels).withEntries(entries).build();\n        JdbcParamRepository repository = get(JdbcParamRepository.class);\n\n        // when\n        repository.write(parameter);\n\n        // then\n        assertDatabase().hasParameter(\"parameter\").hasEntriesForParameter(\"parameter\", 1).hasLevelsForParameter(\"parameter\", 1).close();\n    }", "signature": "void shouldOverwriteExistingParameterWithSameName()", "full_signature": "@Test public void shouldOverwriteExistingParameterWithSameName()", "class_method_signature": "JdbcParamRepositoryTest.shouldOverwriteExistingParameterWithSameName()", "testcase": true, "constructor": false, "invocations": ["build", "withParameterEntries", "withLevels", "withParameter", "database", "build", "withType", "withName", "level", "build", "withLevels", "parameterEntry", "build", "withEntries", "withLevels", "withName", "parameter", "get", "write", "close", "hasLevelsForParameter", "hasEntriesForParameter", "hasParameter", "assertDatabase"]}, "focal_class": {"identifier": "JdbcParamRepository", "superclass": "", "interfaces": "implements WritableParamRepository, EditableParamRepository, ViewableParamRepository, InitializableComponent", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(JdbcParamRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JdbcParamRepository.class)", "var_name": "logger"}, {"original_string": "private static final int LOADED_BATCH_SIZE = 500;", "modifier": "private static final", "type": "int", "declarator": "LOADED_BATCH_SIZE = 500", "var_name": "LOADED_BATCH_SIZE"}, {"original_string": "private final TransactionRunner transactionRunner;", "modifier": "private final", "type": "TransactionRunner", "declarator": "transactionRunner", "var_name": "transactionRunner"}, {"original_string": "private final JdbcParameterEntryBatchLoaderFactory batchLoaderFactory;", "modifier": "private final", "type": "JdbcParameterEntryBatchLoaderFactory", "declarator": "batchLoaderFactory", "var_name": "batchLoaderFactory"}, {"original_string": "private final JdbcRepository dao;", "modifier": "private final", "type": "JdbcRepository", "declarator": "dao", "var_name": "dao"}, {"original_string": "private final SchemaCreator schemaCreator;", "modifier": "private final", "type": "SchemaCreator", "declarator": "schemaCreator", "var_name": "schemaCreator"}], "methods": [{"identifier": "JdbcParamRepository", "parameters": "(TransactionRunner operationRunner, JdbcParameterEntryBatchLoaderFactory batchLoaderFactory,\n            JdbcRepository dao, SchemaCreator schemaCreator)", "modifiers": "public", "return": "", "signature": " JdbcParamRepository(TransactionRunner operationRunner, JdbcParameterEntryBatchLoaderFactory batchLoaderFactory,\n            JdbcRepository dao, SchemaCreator schemaCreator)", "full_signature": "public  JdbcParamRepository(TransactionRunner operationRunner, JdbcParameterEntryBatchLoaderFactory batchLoaderFactory,\n            JdbcRepository dao, SchemaCreator schemaCreator)", "class_method_signature": "JdbcParamRepository.JdbcParamRepository(TransactionRunner operationRunner, JdbcParameterEntryBatchLoaderFactory batchLoaderFactory,\n            JdbcRepository dao, SchemaCreator schemaCreator)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "JdbcParamRepository.initialize()", "testcase": false, "constructor": false}, {"identifier": "capabilities", "parameters": "()", "modifiers": "@Override public", "return": "RepositoryCapabilities", "signature": "RepositoryCapabilities capabilities()", "full_signature": "@Override public RepositoryCapabilities capabilities()", "class_method_signature": "JdbcParamRepository.capabilities()", "testcase": false, "constructor": false}, {"identifier": "listParameters", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> listParameters()", "full_signature": "@Override public Set<String> listParameters()", "class_method_signature": "JdbcParamRepository.listParameters()", "testcase": false, "constructor": false}, {"identifier": "listParameters", "parameters": "(ParameterFilter filter)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listParameters(ParameterFilter filter)", "full_signature": "@Override public List<String> listParameters(ParameterFilter filter)", "class_method_signature": "JdbcParamRepository.listParameters(ParameterFilter filter)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(final String parameterName)", "modifiers": "@Override public", "return": "Parameter", "signature": "Parameter load(final String parameterName)", "full_signature": "@Override public Parameter load(final String parameterName)", "class_method_signature": "JdbcParamRepository.load(final String parameterName)", "testcase": false, "constructor": false}, {"identifier": "batchLoad", "parameters": "(final String parameterName)", "modifiers": "@Override public", "return": "ParameterBatchLoader", "signature": "ParameterBatchLoader batchLoad(final String parameterName)", "full_signature": "@Override public ParameterBatchLoader batchLoad(final String parameterName)", "class_method_signature": "JdbcParamRepository.batchLoad(final String parameterName)", "testcase": false, "constructor": false}, {"identifier": "findEntries", "parameters": "(String parameterName, String[] levelValues)", "modifiers": "@Override public", "return": "Set<ParameterEntry>", "signature": "Set<ParameterEntry> findEntries(String parameterName, String[] levelValues)", "full_signature": "@Override public Set<ParameterEntry> findEntries(String parameterName, String[] levelValues)", "class_method_signature": "JdbcParamRepository.findEntries(String parameterName, String[] levelValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final Parameter parameter)", "modifiers": "@Override public", "return": "void", "signature": "void write(final Parameter parameter)", "full_signature": "@Override public void write(final Parameter parameter)", "class_method_signature": "JdbcParamRepository.write(final Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final ParameterBatchLoader batchLoader)", "modifiers": "@Override public", "return": "void", "signature": "void write(final ParameterBatchLoader batchLoader)", "full_signature": "@Override public void write(final ParameterBatchLoader batchLoader)", "class_method_signature": "JdbcParamRepository.write(final ParameterBatchLoader batchLoader)", "testcase": false, "constructor": false}, {"identifier": "writeAll", "parameters": "(final Iterable<Parameter> parameters)", "modifiers": "@Override public", "return": "void", "signature": "void writeAll(final Iterable<Parameter> parameters)", "full_signature": "@Override public void writeAll(final Iterable<Parameter> parameters)", "class_method_signature": "JdbcParamRepository.writeAll(final Iterable<Parameter> parameters)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(QueryRunner queryRunner, Parameter parameter)", "modifiers": "private", "return": "void", "signature": "void write(QueryRunner queryRunner, Parameter parameter)", "full_signature": "private void write(QueryRunner queryRunner, Parameter parameter)", "class_method_signature": "JdbcParamRepository.write(QueryRunner queryRunner, Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "writeParameterEntries", "parameters": "(final String parameterName, final Iterable<ParameterEntry> parameterEntries)", "modifiers": "@Override public", "return": "void", "signature": "void writeParameterEntries(final String parameterName, final Iterable<ParameterEntry> parameterEntries)", "full_signature": "@Override public void writeParameterEntries(final String parameterName, final Iterable<ParameterEntry> parameterEntries)", "class_method_signature": "JdbcParamRepository.writeParameterEntries(final String parameterName, final Iterable<ParameterEntry> parameterEntries)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final String parameterName)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final String parameterName)", "full_signature": "@Override public void delete(final String parameterName)", "class_method_signature": "JdbcParamRepository.delete(final String parameterName)", "testcase": false, "constructor": false}, {"identifier": "getParameterMetadata", "parameters": "(final String prameterName)", "modifiers": "@Override public", "return": "Parameter", "signature": "Parameter getParameterMetadata(final String prameterName)", "full_signature": "@Override public Parameter getParameterMetadata(final String prameterName)", "class_method_signature": "JdbcParamRepository.getParameterMetadata(final String prameterName)", "testcase": false, "constructor": false}, {"identifier": "createParameter", "parameters": "(final Parameter parameter)", "modifiers": "@Override public", "return": "ParameterKey", "signature": "ParameterKey createParameter(final Parameter parameter)", "full_signature": "@Override public ParameterKey createParameter(final Parameter parameter)", "class_method_signature": "JdbcParamRepository.createParameter(final Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "updateParameter", "parameters": "(final String parameterName, final Parameter parameter)", "modifiers": "@Override public", "return": "void", "signature": "void updateParameter(final String parameterName, final Parameter parameter)", "full_signature": "@Override public void updateParameter(final String parameterName, final Parameter parameter)", "class_method_signature": "JdbcParamRepository.updateParameter(final String parameterName, final Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "deleteParameter", "parameters": "(String parameterName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteParameter(String parameterName)", "full_signature": "@Override public void deleteParameter(String parameterName)", "class_method_signature": "JdbcParamRepository.deleteParameter(String parameterName)", "testcase": false, "constructor": false}, {"identifier": "addLevel", "parameters": "(final String parameterName, final Level level)", "modifiers": "@Override public", "return": "LevelKey", "signature": "LevelKey addLevel(final String parameterName, final Level level)", "full_signature": "@Override public LevelKey addLevel(final String parameterName, final Level level)", "class_method_signature": "JdbcParamRepository.addLevel(final String parameterName, final Level level)", "testcase": false, "constructor": false}, {"identifier": "updateLevel", "parameters": "(String parameterName, final LevelKey levelKey, final Level level)", "modifiers": "@Override public", "return": "void", "signature": "void updateLevel(String parameterName, final LevelKey levelKey, final Level level)", "full_signature": "@Override public void updateLevel(String parameterName, final LevelKey levelKey, final Level level)", "class_method_signature": "JdbcParamRepository.updateLevel(String parameterName, final LevelKey levelKey, final Level level)", "testcase": false, "constructor": false}, {"identifier": "reorderLevels", "parameters": "(String parameterName, final List<LevelKey> orderedLevels)", "modifiers": "@Override public", "return": "void", "signature": "void reorderLevels(String parameterName, final List<LevelKey> orderedLevels)", "full_signature": "@Override public void reorderLevels(String parameterName, final List<LevelKey> orderedLevels)", "class_method_signature": "JdbcParamRepository.reorderLevels(String parameterName, final List<LevelKey> orderedLevels)", "testcase": false, "constructor": false}, {"identifier": "deleteLevel", "parameters": "(final String parameterName, final LevelKey levelKey)", "modifiers": "@Override public", "return": "void", "signature": "void deleteLevel(final String parameterName, final LevelKey levelKey)", "full_signature": "@Override public void deleteLevel(final String parameterName, final LevelKey levelKey)", "class_method_signature": "JdbcParamRepository.deleteLevel(final String parameterName, final LevelKey levelKey)", "testcase": false, "constructor": false}, {"identifier": "getParameterEntries", "parameters": "(final String parameterName, final Iterable<ParameterEntryKey> parameterEntryKeys)", "modifiers": "@Override public", "return": "List<ParameterEntry>", "signature": "List<ParameterEntry> getParameterEntries(final String parameterName, final Iterable<ParameterEntryKey> parameterEntryKeys)", "full_signature": "@Override public List<ParameterEntry> getParameterEntries(final String parameterName, final Iterable<ParameterEntryKey> parameterEntryKeys)", "class_method_signature": "JdbcParamRepository.getParameterEntries(final String parameterName, final Iterable<ParameterEntryKey> parameterEntryKeys)", "testcase": false, "constructor": false}, {"identifier": "listEntries", "parameters": "(final String parameterName, final ParameterEntriesFilter filter)", "modifiers": "@Override public", "return": "List<ParameterEntry>", "signature": "List<ParameterEntry> listEntries(final String parameterName, final ParameterEntriesFilter filter)", "full_signature": "@Override public List<ParameterEntry> listEntries(final String parameterName, final ParameterEntriesFilter filter)", "class_method_signature": "JdbcParamRepository.listEntries(final String parameterName, final ParameterEntriesFilter filter)", "testcase": false, "constructor": false}, {"identifier": "addEntry", "parameters": "(final String parameterName, final ParameterEntry entry)", "modifiers": "@Override public", "return": "ParameterEntryKey", "signature": "ParameterEntryKey addEntry(final String parameterName, final ParameterEntry entry)", "full_signature": "@Override public ParameterEntryKey addEntry(final String parameterName, final ParameterEntry entry)", "class_method_signature": "JdbcParamRepository.addEntry(final String parameterName, final ParameterEntry entry)", "testcase": false, "constructor": false}, {"identifier": "addEntries", "parameters": "(final String parameterName, final Iterable<ParameterEntry> entries)", "modifiers": "@Override public", "return": "List<ParameterEntryKey>", "signature": "List<ParameterEntryKey> addEntries(final String parameterName, final Iterable<ParameterEntry> entries)", "full_signature": "@Override public List<ParameterEntryKey> addEntries(final String parameterName, final Iterable<ParameterEntry> entries)", "class_method_signature": "JdbcParamRepository.addEntries(final String parameterName, final Iterable<ParameterEntry> entries)", "testcase": false, "constructor": false}, {"identifier": "updateEntry", "parameters": "(String parameterName, final ParameterEntryKey entryKey, final ParameterEntry entry)", "modifiers": "@Override public", "return": "void", "signature": "void updateEntry(String parameterName, final ParameterEntryKey entryKey, final ParameterEntry entry)", "full_signature": "@Override public void updateEntry(String parameterName, final ParameterEntryKey entryKey, final ParameterEntry entry)", "class_method_signature": "JdbcParamRepository.updateEntry(String parameterName, final ParameterEntryKey entryKey, final ParameterEntry entry)", "testcase": false, "constructor": false}, {"identifier": "deleteEntry", "parameters": "(String parameterName, final ParameterEntryKey entryKey)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntry(String parameterName, final ParameterEntryKey entryKey)", "full_signature": "@Override public void deleteEntry(String parameterName, final ParameterEntryKey entryKey)", "class_method_signature": "JdbcParamRepository.deleteEntry(String parameterName, final ParameterEntryKey entryKey)", "testcase": false, "constructor": false}, {"identifier": "deleteEntries", "parameters": "(String parameterName, final Iterable<ParameterEntryKey> entryKeys)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntries(String parameterName, final Iterable<ParameterEntryKey> entryKeys)", "full_signature": "@Override public void deleteEntries(String parameterName, final Iterable<ParameterEntryKey> entryKeys)", "class_method_signature": "JdbcParamRepository.deleteEntries(String parameterName, final Iterable<ParameterEntryKey> entryKeys)", "testcase": false, "constructor": false}, {"identifier": "deleteEntries", "parameters": "(final String parameterName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntries(final String parameterName)", "full_signature": "@Override public void deleteEntries(final String parameterName)", "class_method_signature": "JdbcParamRepository.deleteEntries(final String parameterName)", "testcase": false, "constructor": false}], "file": "smartparam-repository-jdbc/src/main/java/org/smartparam/repository/jdbc/JdbcParamRepository.java"}, "focal_method": {"identifier": "write", "parameters": "(final Parameter parameter)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(final Parameter parameter) {\n        transactionRunner.run(new VoidTransactionWrapper() {\n            @Override\n            public void performVoid(QueryRunner queryRunner) {\n                write(queryRunner, parameter);\n            }\n        });\n    }", "signature": "void write(final Parameter parameter)", "full_signature": "@Override public void write(final Parameter parameter)", "class_method_signature": "JdbcParamRepository.write(final Parameter parameter)", "testcase": false, "constructor": false, "invocations": ["run", "write"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}