{"test_class": {"identifier": "Stream2JSONInputStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Stream2JSONInputStream collection2InputStream;", "modifier": "private", "type": "Stream2JSONInputStream", "declarator": "collection2InputStream", "var_name": "collection2InputStream"}, {"original_string": "private static final Gson GSON = new GsonBuilder().create();", "modifier": "private static final", "type": "Gson", "declarator": "GSON = new GsonBuilder().create()", "var_name": "GSON"}], "file": "bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java"}, "test_case": {"identifier": "shouldFailForNullSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFailForNullSource() throws IOException {\n        assertThrows(IllegalArgumentException.class, () -> new Stream2JSONInputStream(null).close());\n    }", "signature": "void shouldFailForNullSource()", "full_signature": "@Test public void shouldFailForNullSource()", "class_method_signature": "Stream2JSONInputStreamTest.shouldFailForNullSource()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "close"]}, "focal_class": {"identifier": "Stream2JSONInputStream", "superclass": "extends InputStream", "interfaces": "implements JSONInputStream", "fields": [{"original_string": "private final Iterator<String> iterator;", "modifier": "private final", "type": "Iterator<String>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "private InputStream jsonElementStream;", "modifier": "private", "type": "InputStream", "declarator": "jsonElementStream", "var_name": "jsonElementStream"}, {"original_string": "private boolean firstIteratorElement;", "modifier": "private", "type": "boolean", "declarator": "firstIteratorElement", "var_name": "firstIteratorElement"}, {"original_string": "private final Gson gson = new GsonBuilder().setDateFormat(DateTimeType.DATE_PATTERN_WITH_TZ_AND_MS).create();", "modifier": "private final", "type": "Gson", "declarator": "gson = new GsonBuilder().setDateFormat(DateTimeType.DATE_PATTERN_WITH_TZ_AND_MS).create()", "var_name": "gson"}], "methods": [{"identifier": "Stream2JSONInputStream", "parameters": "(Stream<?> source)", "modifiers": "public", "return": "", "signature": " Stream2JSONInputStream(Stream<?> source)", "full_signature": "public  Stream2JSONInputStream(Stream<?> source)", "class_method_signature": "Stream2JSONInputStream.Stream2JSONInputStream(Stream<?> source)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "Stream2JSONInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Stream2JSONInputStream.close()", "testcase": false, "constructor": false}, {"identifier": "fillBuffer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fillBuffer()", "full_signature": "private void fillBuffer()", "class_method_signature": "Stream2JSONInputStream.fillBuffer()", "testcase": false, "constructor": false}, {"identifier": "finished", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean finished()", "full_signature": "private boolean finished()", "class_method_signature": "Stream2JSONInputStream.finished()", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/Stream2JSONInputStream.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void close() throws IOException {\n        jsonElementStream.close();\n    }", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Stream2JSONInputStream.close()", "testcase": false, "constructor": false, "invocations": ["close"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}