{"test_class": {"identifier": "HudsonXmlHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "component/core/src/test/java/fr/norad/visuwall/providers/hudson/helper/HudsonXmlHelperTest.java"}, "test_case": {"identifier": "testGetCommiters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCommiters() {\n        List<Culprit> users = new ArrayList<Culprit>();\n        Culprit user1 = new Culprit();\n        Culprit user2 = new Culprit();\n\n        user1.setFullName(\"dude\");\n        user2.setFullName(\"sweet\");\n\n        users.add(user1);\n        users.add(user2);\n\n        MavenModuleSetBuild setBuild = mock(MavenModuleSetBuild.class);\n        when(setBuild.getCulprits()).thenReturn(users);\n\n        String[] commiters = HudsonXmlHelper.getCommiterNames(setBuild);\n        assertEquals(\"dude\", commiters[0]);\n        assertEquals(\"sweet\", commiters[1]);\n    }", "signature": "void testGetCommiters()", "full_signature": "@Test public void testGetCommiters()", "class_method_signature": "HudsonXmlHelperTest.testGetCommiters()", "testcase": true, "constructor": false, "invocations": ["setFullName", "setFullName", "add", "add", "mock", "thenReturn", "when", "getCulprits", "getCommiterNames", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "HudsonXmlHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HudsonXmlHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " HudsonXmlHelper()", "full_signature": "private  HudsonXmlHelper()", "class_method_signature": "HudsonXmlHelper.HudsonXmlHelper()", "testcase": false, "constructor": true}, {"identifier": "isSuccessful", "parameters": "(Build build)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSuccessful(Build build)", "full_signature": "public static boolean isSuccessful(Build build)", "class_method_signature": "HudsonXmlHelper.isSuccessful(Build build)", "testcase": false, "constructor": false}, {"identifier": "getCommiterNames", "parameters": "(Build build)", "modifiers": "public static", "return": "String[]", "signature": "String[] getCommiterNames(Build build)", "full_signature": "public static String[] getCommiterNames(Build build)", "class_method_signature": "HudsonXmlHelper.getCommiterNames(Build build)", "testcase": false, "constructor": false}, {"identifier": "checkBuild", "parameters": "(Build build)", "modifiers": "private static", "return": "void", "signature": "void checkBuild(Build build)", "full_signature": "private static void checkBuild(Build build)", "class_method_signature": "HudsonXmlHelper.checkBuild(Build build)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/providers/hudson/helper/HudsonXmlHelper.java"}, "focal_method": {"identifier": "getCommiterNames", "parameters": "(Build build)", "modifiers": "public static", "return": "String[]", "body": "public static String[] getCommiterNames(Build build) {\n        checkBuild(build);\n        List<Culprit> users = build.getCulprits();\n        String[] commiters = new String[users.size()];\n        for (int i = 0; i < users.size(); i++) {\n            Culprit hudsonModelUser = users.get(i);\n            String name = hudsonModelUser.getFullName();\n            commiters[i] = name;\n        }\n        return commiters;\n    }", "signature": "String[] getCommiterNames(Build build)", "full_signature": "public static String[] getCommiterNames(Build build)", "class_method_signature": "HudsonXmlHelper.getCommiterNames(Build build)", "testcase": false, "constructor": false, "invocations": ["checkBuild", "getCulprits", "size", "size", "get", "getFullName"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}