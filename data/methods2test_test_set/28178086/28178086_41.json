{"test_class": {"identifier": "XmlMatrixTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE = \"c:\\\\localdata\\\\matrix.xml\";", "modifier": "private static final", "type": "String", "declarator": "FILE = \"c:\\\\localdata\\\\matrix.xml\"", "var_name": "FILE"}], "file": "jtss/src/test/java/ec/demetra/xml/core/XmlMatrixTest.java"}, "test_case": {"identifier": "testValidation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidation() throws FileNotFoundException, JAXBException, IOException, SAXException {\n\n        JAXBContext jaxb = JAXBContext.newInstance(XmlMatrix.class);\n        Matrix m = new Matrix(5, 8);\n        m.set((r, c) -> (r + 1) * (c + 1));\n        XmlMatrix xmat = XmlMatrix.getAdapter().marshal(m);\n        JAXBSource source = new JAXBSource(jaxb, xmat);\n        Validator validator = Schemas.Core.newValidator();\n        //validator.setErrorHandler(new TestErrorHandler());\n        validator.validate(source);\n    }", "signature": "void testValidation()", "full_signature": "@Test public void testValidation()", "class_method_signature": "XmlMatrixTest.testValidation()", "testcase": true, "constructor": false, "invocations": ["newInstance", "set", "marshal", "getAdapter", "newValidator", "validate"]}, "focal_class": {"identifier": "XmlMatrix", "superclass": "", "interfaces": "", "fields": [{"original_string": "@XmlElement(name = \"Dimensions\")\n    @XmlList\n    protected int[] dimensions;", "modifier": "@XmlElement(name = \"Dimensions\")\n    @XmlList\n    protected", "type": "int[]", "declarator": "dimensions", "var_name": "dimensions"}, {"original_string": "@XmlElement(name = \"Values\")\n    @XmlList\n    protected double[] values;", "modifier": "@XmlElement(name = \"Values\")\n    @XmlList\n    protected", "type": "double[]", "declarator": "values", "var_name": "values"}, {"original_string": "private static final Adapter ADAPTER=new Adapter();", "modifier": "private static final", "type": "Adapter", "declarator": "ADAPTER=new Adapter()", "var_name": "ADAPTER"}], "methods": [{"identifier": "getDimensions", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getDimensions()", "full_signature": "public int[] getDimensions()", "class_method_signature": "XmlMatrix.getDimensions()", "testcase": false, "constructor": false}, {"identifier": "setDimensions", "parameters": "(int[] dimensions)", "modifiers": "public", "return": "void", "signature": "void setDimensions(int[] dimensions)", "full_signature": "public void setDimensions(int[] dimensions)", "class_method_signature": "XmlMatrix.setDimensions(int[] dimensions)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] getValues()", "full_signature": "public double[] getValues()", "class_method_signature": "XmlMatrix.getValues()", "testcase": false, "constructor": false}, {"identifier": "setValues", "parameters": "(double[] values)", "modifiers": "public", "return": "void", "signature": "void setValues(double[] values)", "full_signature": "public void setValues(double[] values)", "class_method_signature": "XmlMatrix.setValues(double[] values)", "testcase": false, "constructor": false}, {"identifier": "getAdapter", "parameters": "()", "modifiers": "public static", "return": "Adapter", "signature": "Adapter getAdapter()", "full_signature": "public static Adapter getAdapter()", "class_method_signature": "XmlMatrix.getAdapter()", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/demetra/xml/core/XmlMatrix.java"}, "focal_method": {"identifier": "getAdapter", "parameters": "()", "modifiers": "public static", "return": "Adapter", "body": "public static Adapter getAdapter(){\n        return ADAPTER;\n    }", "signature": "Adapter getAdapter()", "full_signature": "public static Adapter getAdapter()", "class_method_signature": "XmlMatrix.getAdapter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}