{"test_class": {"identifier": "TestLocationUtils", "superclass": "extends AbstractDSpaceTest", "interfaces": "", "fields": [{"original_string": "private static final String UNKNOWN_CONTINENT = I18nUtil\n            .getMessage(\"org.dspace.statistics.util.LocationUtils.unknown-continent\");", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_CONTINENT = I18nUtil\n            .getMessage(\"org.dspace.statistics.util.LocationUtils.unknown-continent\")", "var_name": "UNKNOWN_CONTINENT"}, {"original_string": "private static final String UNKNOWN_COUNTRY = I18nUtil\n            .getMessage(\"org.dspace.statistics.util.LocationUtils.unknown-country\");", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_COUNTRY = I18nUtil\n            .getMessage(\"org.dspace.statistics.util.LocationUtils.unknown-country\")", "var_name": "UNKNOWN_COUNTRY"}], "file": "dspace-api/src/test/java/org/dspace/statistics/util/TestLocationUtils.java"}, "test_case": {"identifier": "testGetCountryNameString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCountryNameString()\n    {\n        assertEquals(Locale.US.getDisplayCountry(), LocationUtils.getCountryName(\n                \"US\"));\n        assertEquals(UNKNOWN_COUNTRY, LocationUtils.getCountryName(null));\n        assertEquals(\"XX\", LocationUtils.getCountryName(\"XX\"));\n    }", "signature": "void testGetCountryNameString()", "full_signature": "@Test public void testGetCountryNameString()", "class_method_signature": "TestLocationUtils.testGetCountryNameString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDisplayCountry", "getCountryName", "assertEquals", "getCountryName", "assertEquals", "getCountryName"]}, "focal_class": {"identifier": "LocationUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(LocationUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(LocationUtils.class)", "var_name": "logger"}, {"original_string": "private static final Properties countryToContinent = new Properties();", "modifier": "private static final", "type": "Properties", "declarator": "countryToContinent = new Properties()", "var_name": "countryToContinent"}, {"original_string": "private static final String CONTINENT_NAMES_BUNDLE\n            = LocationUtils.class.getPackage().getName() + \".continent-names\";", "modifier": "private static final", "type": "String", "declarator": "CONTINENT_NAMES_BUNDLE\n            = LocationUtils.class.getPackage().getName() + \".continent-names\"", "var_name": "CONTINENT_NAMES_BUNDLE"}], "methods": [{"identifier": "getContinentCode", "parameters": "(String countryCode)", "modifiers": "static public", "return": "String", "signature": "String getContinentCode(String countryCode)", "full_signature": "static public String getContinentCode(String countryCode)", "class_method_signature": "LocationUtils.getContinentCode(String countryCode)", "testcase": false, "constructor": false}, {"identifier": "getContinentName", "parameters": "(String continentCode)", "modifiers": "@Deprecated static public", "return": "String", "signature": "String getContinentName(String continentCode)", "full_signature": "@Deprecated static public String getContinentName(String continentCode)", "class_method_signature": "LocationUtils.getContinentName(String continentCode)", "testcase": false, "constructor": false}, {"identifier": "getContinentName", "parameters": "(String continentCode, Locale locale)", "modifiers": "static public", "return": "String", "signature": "String getContinentName(String continentCode, Locale locale)", "full_signature": "static public String getContinentName(String continentCode, Locale locale)", "class_method_signature": "LocationUtils.getContinentName(String continentCode, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getCountryName", "parameters": "(String countryCode)", "modifiers": "@Deprecated static public", "return": "String", "signature": "String getCountryName(String countryCode)", "full_signature": "@Deprecated static public String getCountryName(String countryCode)", "class_method_signature": "LocationUtils.getCountryName(String countryCode)", "testcase": false, "constructor": false}, {"identifier": "getCountryName", "parameters": "(String countryCode, Locale locale)", "modifiers": "static public", "return": "String", "signature": "String getCountryName(String countryCode, Locale locale)", "full_signature": "static public String getCountryName(String countryCode, Locale locale)", "class_method_signature": "LocationUtils.getCountryName(String countryCode, Locale locale)", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/statistics/util/LocationUtils.java"}, "focal_method": {"identifier": "getCountryName", "parameters": "(String countryCode)", "modifiers": "@Deprecated static public", "return": "String", "body": "@Deprecated\n    static public String getCountryName(String countryCode)\n    {\n        return getCountryName(countryCode, Locale.getDefault());\n    }", "signature": "String getCountryName(String countryCode)", "full_signature": "@Deprecated static public String getCountryName(String countryCode)", "class_method_signature": "LocationUtils.getCountryName(String countryCode)", "testcase": false, "constructor": false, "invocations": ["getCountryName", "getDefault"]}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}