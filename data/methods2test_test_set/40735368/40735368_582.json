{"test_class": {"identifier": "CoordinateOperationFactoryUsingWKTTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CoordinateOperationFactoryUsingWKT factory;", "modifier": "", "type": "CoordinateOperationFactoryUsingWKT", "declarator": "factory", "var_name": "factory"}, {"original_string": "private static final String DEFINITIONS_FILE_NAME = \"epsg_operations.properties\";", "modifier": "private static final", "type": "String", "declarator": "DEFINITIONS_FILE_NAME = \"epsg_operations.properties\"", "var_name": "DEFINITIONS_FILE_NAME"}, {"original_string": "private static Properties properties;", "modifier": "private static", "type": "Properties", "declarator": "properties", "var_name": "properties"}, {"original_string": "private static final String SOURCE_CRS = \"EPSG:TEST1\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_CRS = \"EPSG:TEST1\"", "var_name": "SOURCE_CRS"}, {"original_string": "private static final String TARGET_CRS = \"EPSG:TEST2\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_CRS = \"EPSG:TEST2\"", "var_name": "TARGET_CRS"}, {"original_string": "private static final String CRS_PAIR = SOURCE_CRS + \",\" + TARGET_CRS;", "modifier": "private static final", "type": "String", "declarator": "CRS_PAIR = SOURCE_CRS + \",\" + TARGET_CRS", "var_name": "CRS_PAIR"}, {"original_string": "private static final String INVERSE_CRS_PAIR = TARGET_CRS + \",\" + SOURCE_CRS;", "modifier": "private static final", "type": "String", "declarator": "INVERSE_CRS_PAIR = TARGET_CRS + \",\" + SOURCE_CRS", "var_name": "INVERSE_CRS_PAIR"}, {"original_string": "private static final String INVALID_CRS = \"nonexistent\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_CRS = \"nonexistent\"", "var_name": "INVALID_CRS"}, {"original_string": "private static final double[] SRC_TEST_POINT = {3.084896111, 39.592654167};", "modifier": "private static final", "type": "double[]", "declarator": "SRC_TEST_POINT = {3.084896111, 39.592654167}", "var_name": "SRC_TEST_POINT"}, {"original_string": "private static final double[] DST_TEST_POINT = {3.0844689951999427, 39.594235744481225};", "modifier": "private static final", "type": "double[]", "declarator": "DST_TEST_POINT = {3.0844689951999427, 39.594235744481225}", "var_name": "DST_TEST_POINT"}], "file": "modules/library/referencing/src/test/java/org/geotools/referencing/factory/epsg/CoordinateOperationFactoryUsingWKTTest.java"}, "test_case": {"identifier": "testCreateFromCoordinateReferenceSystemCodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateFromCoordinateReferenceSystemCodes() throws TransformException {\n        try {\n            Set<CoordinateOperation> cos = factory.createFromCoordinateReferenceSystemCodes(\n                    INVALID_CRS, INVALID_CRS);\n            assertTrue(cos.isEmpty());\n        } catch (FactoryException e) {\n            fail(factory.getClass().getSimpleName() + \" threw a FactoryException when requesting\"\n                    + \"a nonexistent operation. Instead, a NoSuchAuthorityCodeException was expected.\");\n        }\n        \n        try {\n            // Test CoordinateOperation\n            Set<CoordinateOperation> cos = factory.createFromCoordinateReferenceSystemCodes(SOURCE_CRS, TARGET_CRS);\n            assertTrue(cos.size() == 1);\n            CoordinateOperation co = cos.iterator().next();\n            assertNotNull(co);\n\n            // Test CRSs\n            CoordinateReferenceSystem crs = CRS.decode(SOURCE_CRS);\n            assertSame(crs, co.getSourceCRS());\n            crs = CRS.decode(TARGET_CRS);\n            assertSame(crs, co.getTargetCRS());\n            \n            // Test MathTransform\n            assertTrue(co.getMathTransform() instanceof MathTransform);\n            double[] p = new double[2];\n            co.getMathTransform().transform(SRC_TEST_POINT, 0, p, 0, 1);\n            assertEquals(p[0], DST_TEST_POINT[0], 1e-8);\n            assertEquals(p[1], DST_TEST_POINT[1], 1e-8);\n        } catch (FactoryException e) {\n            fail(factory.getClass().getSimpleName() + \" threw a FactoryException when creating\" +\n                    \" coordinate operation from an existing code.\");            \n        }\n    }", "signature": "void testCreateFromCoordinateReferenceSystemCodes()", "full_signature": "@Test public void testCreateFromCoordinateReferenceSystemCodes()", "class_method_signature": "CoordinateOperationFactoryUsingWKTTest.testCreateFromCoordinateReferenceSystemCodes()", "testcase": true, "constructor": false, "invocations": ["createFromCoordinateReferenceSystemCodes", "assertTrue", "isEmpty", "fail", "getSimpleName", "getClass", "createFromCoordinateReferenceSystemCodes", "assertTrue", "size", "next", "iterator", "assertNotNull", "decode", "assertSame", "getSourceCRS", "decode", "assertSame", "getTargetCRS", "assertTrue", "getMathTransform", "transform", "getMathTransform", "assertEquals", "assertEquals", "fail", "getSimpleName", "getClass"]}, "focal_class": {"identifier": "CoordinateOperationFactoryUsingWKT", "superclass": "extends DeferredAuthorityFactory", "interfaces": "implements CoordinateOperationAuthorityFactory", "fields": [{"original_string": "protected Citation authority;", "modifier": "protected", "type": "Citation", "declarator": "authority", "var_name": "authority"}, {"original_string": "public static final String FILENAME = \"epsg_operations.properties\";", "modifier": "public static final", "type": "String", "declarator": "FILENAME = \"epsg_operations.properties\"", "var_name": "FILENAME"}, {"original_string": "public static final int PRIORITY = NORMAL_PRIORITY - 20;", "modifier": "public static final", "type": "int", "declarator": "PRIORITY = NORMAL_PRIORITY - 20", "var_name": "PRIORITY"}, {"original_string": "protected final ReferencingFactoryContainer factories;", "modifier": "protected final", "type": "ReferencingFactoryContainer", "declarator": "factories", "var_name": "factories"}, {"original_string": "protected final String directory;", "modifier": "protected final", "type": "String", "declarator": "directory", "var_name": "directory"}, {"original_string": "protected CoordinateOperationAuthorityFactory fallbackAuthorityFactory = null;", "modifier": "protected", "type": "CoordinateOperationAuthorityFactory", "declarator": "fallbackAuthorityFactory = null", "var_name": "fallbackAuthorityFactory"}, {"original_string": "protected boolean fallbackAuthorityFactorySearched = false;", "modifier": "protected", "type": "boolean", "declarator": "fallbackAuthorityFactorySearched = false", "var_name": "fallbackAuthorityFactorySearched"}], "methods": [{"identifier": "CoordinateOperationFactoryUsingWKT", "parameters": "()", "modifiers": "public", "return": "", "signature": " CoordinateOperationFactoryUsingWKT()", "full_signature": "public  CoordinateOperationFactoryUsingWKT()", "class_method_signature": "CoordinateOperationFactoryUsingWKT.CoordinateOperationFactoryUsingWKT()", "testcase": false, "constructor": true}, {"identifier": "CoordinateOperationFactoryUsingWKT", "parameters": "(Hints userHints)", "modifiers": "public", "return": "", "signature": " CoordinateOperationFactoryUsingWKT(Hints userHints)", "full_signature": "public  CoordinateOperationFactoryUsingWKT(Hints userHints)", "class_method_signature": "CoordinateOperationFactoryUsingWKT.CoordinateOperationFactoryUsingWKT(Hints userHints)", "testcase": false, "constructor": true}, {"identifier": "CoordinateOperationFactoryUsingWKT", "parameters": "(final Hints userHints, final int priority)", "modifiers": "protected", "return": "", "signature": " CoordinateOperationFactoryUsingWKT(final Hints userHints, final int priority)", "full_signature": "protected  CoordinateOperationFactoryUsingWKT(final Hints userHints, final int priority)", "class_method_signature": "CoordinateOperationFactoryUsingWKT.CoordinateOperationFactoryUsingWKT(final Hints userHints, final int priority)", "testcase": false, "constructor": true}, {"identifier": "getAuthority", "parameters": "()", "modifiers": "public synchronized", "return": "Citation", "signature": "Citation getAuthority()", "full_signature": "public synchronized Citation getAuthority()", "class_method_signature": "CoordinateOperationFactoryUsingWKT.getAuthority()", "testcase": false, "constructor": false}, {"identifier": "createBackingStore", "parameters": "()", "modifiers": "protected", "return": "AbstractAuthorityFactory", "signature": "AbstractAuthorityFactory createBackingStore()", "full_signature": "protected AbstractAuthorityFactory createBackingStore()", "class_method_signature": "CoordinateOperationFactoryUsingWKT.createBackingStore()", "testcase": false, "constructor": false}, {"identifier": "getDefinitionsURL", "parameters": "()", "modifiers": "protected", "return": "URL", "signature": "URL getDefinitionsURL()", "full_signature": "protected URL getDefinitionsURL()", "class_method_signature": "CoordinateOperationFactoryUsingWKT.getDefinitionsURL()", "testcase": false, "constructor": false}, {"identifier": "createFromCoordinateReferenceSystemCodes", "parameters": "(\n            String sourceCRS, String targetCRS)", "modifiers": "@Override public", "return": "Set<CoordinateOperation>", "signature": "Set<CoordinateOperation> createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "full_signature": "@Override public Set<CoordinateOperation> createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "class_method_signature": "CoordinateOperationFactoryUsingWKT.createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "testcase": false, "constructor": false}, {"identifier": "createCoordinateOperation", "parameters": "(String code)", "modifiers": "public", "return": "CoordinateOperation", "signature": "CoordinateOperation createCoordinateOperation(String code)", "full_signature": "public CoordinateOperation createCoordinateOperation(String code)", "class_method_signature": "CoordinateOperationFactoryUsingWKT.createCoordinateOperation(String code)", "testcase": false, "constructor": false}, {"identifier": "getFallbackAuthorityFactory", "parameters": "()", "modifiers": "protected", "return": "CoordinateOperationAuthorityFactory", "signature": "CoordinateOperationAuthorityFactory getFallbackAuthorityFactory()", "full_signature": "protected CoordinateOperationAuthorityFactory getFallbackAuthorityFactory()", "class_method_signature": "CoordinateOperationFactoryUsingWKT.getFallbackAuthorityFactory()", "testcase": false, "constructor": false}], "file": "modules/library/referencing/src/main/java/org/geotools/referencing/factory/epsg/CoordinateOperationFactoryUsingWKT.java"}, "focal_method": {"identifier": "createFromCoordinateReferenceSystemCodes", "parameters": "(\n            String sourceCRS, String targetCRS)", "modifiers": "@Override public", "return": "Set<CoordinateOperation>", "body": "@Override\n    public Set<CoordinateOperation> createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS) throws NoSuchAuthorityCodeException, FactoryException {\n        Set<CoordinateOperation> coordops = super.createFromCoordinateReferenceSystemCodes(sourceCRS, targetCRS);\n        if (coordops.isEmpty()) {\n            // If not found, delegate to the fallback factory.\n            CoordinateOperationAuthorityFactory fallback = getFallbackAuthorityFactory();\n            if (fallback != null) {\n                coordops = fallback.createFromCoordinateReferenceSystemCodes(sourceCRS, targetCRS);\n            }\n        }\n        return coordops;\n    }", "signature": "Set<CoordinateOperation> createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "full_signature": "@Override public Set<CoordinateOperation> createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "class_method_signature": "CoordinateOperationFactoryUsingWKT.createFromCoordinateReferenceSystemCodes(\n            String sourceCRS, String targetCRS)", "testcase": false, "constructor": false, "invocations": ["createFromCoordinateReferenceSystemCodes", "isEmpty", "getFallbackAuthorityFactory", "createFromCoordinateReferenceSystemCodes"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}