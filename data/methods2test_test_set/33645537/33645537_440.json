{"test_class": {"identifier": "FindLongestConsecutiveSequenceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FindLongestConsecutiveSequence lcs;", "modifier": "private", "type": "FindLongestConsecutiveSequence", "declarator": "lcs", "var_name": "lcs"}], "file": "algs/src/test/java/com/github/pedrovgs/problem31/FindLongestConsecutiveSequenceTest.java"}, "test_case": {"identifier": "shouldFindLongestConsecutiveSequenceRecursiveSupportingEqualsConsecutiveNumbers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldFindLongestConsecutiveSequenceRecursiveSupportingEqualsConsecutiveNumbers() {\n    int[] array = { 1, 1, 1, 1, 3, 4, 5, 64, 4, 5, 6, 7, 8, 9, 98, -1, -2 };\n\n    int sequenceLength = lcs.findRecursive(array);\n\n    assertEquals(7, sequenceLength);\n  }", "signature": "void shouldFindLongestConsecutiveSequenceRecursiveSupportingEqualsConsecutiveNumbers()", "full_signature": "@Test public void shouldFindLongestConsecutiveSequenceRecursiveSupportingEqualsConsecutiveNumbers()", "class_method_signature": "FindLongestConsecutiveSequenceTest.shouldFindLongestConsecutiveSequenceRecursiveSupportingEqualsConsecutiveNumbers()", "testcase": true, "constructor": false, "invocations": ["findRecursive", "assertEquals"]}, "focal_class": {"identifier": "FindLongestConsecutiveSequence", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "findIterative", "parameters": "(int[] numbers)", "modifiers": "public", "return": "int", "signature": "int findIterative(int[] numbers)", "full_signature": "public int findIterative(int[] numbers)", "class_method_signature": "FindLongestConsecutiveSequence.findIterative(int[] numbers)", "testcase": false, "constructor": false}, {"identifier": "findRecursive", "parameters": "(int[] array)", "modifiers": "public", "return": "int", "signature": "int findRecursive(int[] array)", "full_signature": "public int findRecursive(int[] array)", "class_method_signature": "FindLongestConsecutiveSequence.findRecursive(int[] array)", "testcase": false, "constructor": false}, {"identifier": "findRecursiveInner", "parameters": "(int[] array, int i, int acc, int maxLength)", "modifiers": "private", "return": "int", "signature": "int findRecursiveInner(int[] array, int i, int acc, int maxLength)", "full_signature": "private int findRecursiveInner(int[] array, int i, int acc, int maxLength)", "class_method_signature": "FindLongestConsecutiveSequence.findRecursiveInner(int[] array, int i, int acc, int maxLength)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[] numbers)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[] numbers)", "full_signature": "private void validateInput(int[] numbers)", "class_method_signature": "FindLongestConsecutiveSequence.validateInput(int[] numbers)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem31/FindLongestConsecutiveSequence.java"}, "focal_method": {"identifier": "findRecursive", "parameters": "(int[] array)", "modifiers": "public", "return": "int", "body": "public int findRecursive(int[] array) {\n    validateInput(array);\n    return findRecursiveInner(array, 1, 0, 0);\n  }", "signature": "int findRecursive(int[] array)", "full_signature": "public int findRecursive(int[] array)", "class_method_signature": "FindLongestConsecutiveSequence.findRecursive(int[] array)", "testcase": false, "constructor": false, "invocations": ["validateInput", "findRecursiveInner"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}