{"test_class": {"identifier": "HexTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "dexlib2/src/test/java/org/jf/util/HexTest.java"}, "test_case": {"identifier": "testS8", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testS8() {\n        Assert.assertEquals(\"+0000000000000000\", Hex.s8(0L));\n        Assert.assertEquals(\"-7fffffffffffffff\", Hex.s8(-9223372036854775807L));\n        Assert.assertEquals(\"+002bdc545d6b4b87\", Hex.s8(12345678901234567L));\n    }", "signature": "void testS8()", "full_signature": "@Test public void testS8()", "class_method_signature": "HexTest.testS8()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "s8", "assertEquals", "s8", "assertEquals", "s8"]}, "focal_class": {"identifier": "Hex", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Hex", "parameters": "()", "modifiers": "private", "return": "", "signature": " Hex()", "full_signature": "private  Hex()", "class_method_signature": "Hex.Hex()", "testcase": false, "constructor": true}, {"identifier": "u8", "parameters": "(long v)", "modifiers": "public static", "return": "String", "signature": "String u8(long v)", "full_signature": "public static String u8(long v)", "class_method_signature": "Hex.u8(long v)", "testcase": false, "constructor": false}, {"identifier": "u4", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String u4(int v)", "full_signature": "public static String u4(int v)", "class_method_signature": "Hex.u4(int v)", "testcase": false, "constructor": false}, {"identifier": "u3", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String u3(int v)", "full_signature": "public static String u3(int v)", "class_method_signature": "Hex.u3(int v)", "testcase": false, "constructor": false}, {"identifier": "u2", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String u2(int v)", "full_signature": "public static String u2(int v)", "class_method_signature": "Hex.u2(int v)", "testcase": false, "constructor": false}, {"identifier": "u2or4", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String u2or4(int v)", "full_signature": "public static String u2or4(int v)", "class_method_signature": "Hex.u2or4(int v)", "testcase": false, "constructor": false}, {"identifier": "u1", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String u1(int v)", "full_signature": "public static String u1(int v)", "class_method_signature": "Hex.u1(int v)", "testcase": false, "constructor": false}, {"identifier": "uNibble", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String uNibble(int v)", "full_signature": "public static String uNibble(int v)", "class_method_signature": "Hex.uNibble(int v)", "testcase": false, "constructor": false}, {"identifier": "s8", "parameters": "(long v)", "modifiers": "public static", "return": "String", "signature": "String s8(long v)", "full_signature": "public static String s8(long v)", "class_method_signature": "Hex.s8(long v)", "testcase": false, "constructor": false}, {"identifier": "s4", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String s4(int v)", "full_signature": "public static String s4(int v)", "class_method_signature": "Hex.s4(int v)", "testcase": false, "constructor": false}, {"identifier": "s2", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String s2(int v)", "full_signature": "public static String s2(int v)", "class_method_signature": "Hex.s2(int v)", "testcase": false, "constructor": false}, {"identifier": "s1", "parameters": "(int v)", "modifiers": "public static", "return": "String", "signature": "String s1(int v)", "full_signature": "public static String s1(int v)", "class_method_signature": "Hex.s1(int v)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(byte[] arr, int offset, int length,\n                              int outOffset, int bpl, int addressLength)", "modifiers": "public static", "return": "String", "signature": "String dump(byte[] arr, int offset, int length,\n                              int outOffset, int bpl, int addressLength)", "full_signature": "public static String dump(byte[] arr, int offset, int length,\n                              int outOffset, int bpl, int addressLength)", "class_method_signature": "Hex.dump(byte[] arr, int offset, int length,\n                              int outOffset, int bpl, int addressLength)", "testcase": false, "constructor": false}], "file": "dexlib2/src/main/java/org/jf/util/Hex.java"}, "focal_method": {"identifier": "s8", "parameters": "(long v)", "modifiers": "public static", "return": "String", "body": "public static String s8(long v) {\n        char[] result = new char[17];\n\n        if (v < 0) {\n            result[0] = '-';\n            v = -v;\n        } else {\n            result[0] = '+';\n        }\n\n        for (int i = 0; i < 16; i++) {\n            result[16 - i] = Character.forDigit((int) v & 0x0f, 16);\n            v >>= 4;\n        }\n\n        return new String(result);\n    }", "signature": "String s8(long v)", "full_signature": "public static String s8(long v)", "class_method_signature": "Hex.s8(long v)", "testcase": false, "constructor": false, "invocations": ["forDigit"]}, "repository": {"repo_id": 5925560, "url": "https://github.com/JesusFreke/smali", "language": "Java", "is_fork": false, "fork_count": 875, "stargazer_count": 4465, "size": 9375, "license": "licensed"}}