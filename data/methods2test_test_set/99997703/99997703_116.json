{"test_class": {"identifier": "SimpleIdentifiedTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final I id;", "modifier": "private final", "type": "I", "declarator": "id", "var_name": "id"}, {"original_string": "private T simpleIdentified;", "modifier": "private", "type": "T", "declarator": "simpleIdentified", "var_name": "simpleIdentified"}], "file": "OcavaCore/src/test/java/com/ocadotechnology/id/SimpleIdentifiedTest.java"}, "test_case": {"identifier": "isNotEqualToInstanceWithDifferentClass", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void isNotEqualToInstanceWithDifferentClass() {\n        SimpleIdentified<Object, I> instanceWithDifferentClass = new SimpleIdentified<Object, I>(simpleIdentified.getId()) {};\n        assertNotEquals(simpleIdentified, instanceWithDifferentClass);\n        assertNotEquals(instanceWithDifferentClass, simpleIdentified);\n    }", "signature": "void isNotEqualToInstanceWithDifferentClass()", "full_signature": "@Test void isNotEqualToInstanceWithDifferentClass()", "class_method_signature": "SimpleIdentifiedTest.isNotEqualToInstanceWithDifferentClass()", "testcase": true, "constructor": false, "invocations": ["getId", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "SimpleIdentified", "superclass": "", "interfaces": "implements Identified<T>", "fields": [{"original_string": "private final I id;", "modifier": "private final", "type": "I", "declarator": "id", "var_name": "id"}], "methods": [{"identifier": "SimpleIdentified", "parameters": "(I id)", "modifiers": "", "return": "", "signature": " SimpleIdentified(I id)", "full_signature": "  SimpleIdentified(I id)", "class_method_signature": "SimpleIdentified.SimpleIdentified(I id)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public final", "return": "I", "signature": "I getId()", "full_signature": "@Override public final I getId()", "class_method_signature": "SimpleIdentified.getId()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "SimpleIdentified.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public final boolean equals(Object o)", "class_method_signature": "SimpleIdentified.equals(Object o)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/id/SimpleIdentified.java"}, "focal_method": {"identifier": "getId", "parameters": "()", "modifiers": "@Override public final", "return": "I", "body": "@Override\n    public final I getId() {\n        return id;\n    }", "signature": "I getId()", "full_signature": "@Override public final I getId()", "class_method_signature": "SimpleIdentified.getId()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}