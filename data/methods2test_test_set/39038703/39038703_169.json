{"test_class": {"identifier": "CommunityTest", "superclass": "extends AbstractDSpaceObjectTest", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(CommunityTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(CommunityTest.class)", "var_name": "log"}, {"original_string": "private Community c;", "modifier": "private", "type": "Community", "declarator": "c", "var_name": "c"}], "file": "dspace-api/src/test/java/org/dspace/content/CommunityTest.java"}, "test_case": {"identifier": "testGetParentCommunity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetParentCommunity() throws Exception \n    {\n        new NonStrictExpectations(authorizeService.getClass())\n        {{\n            // Allow current Community ADD perms\n            authorizeService.authorizeAction((Context) any, (Community) any,\n                    Constants.ADD); result = null;\n            // Allow *parent* Community ADD perms\n            authorizeService.authorizeActionBoolean((Context) any, (Community) any,\n                    Constants.ADD); result = true;\n        }};\n\n        //null by default\n        assertEquals(\"testGetParentCommunity 0\", c.getParentCommunities().size(), 0);\n\n        //community with  parent\n        Community son = communityService.create(c, context);\n        assertThat(\"testGetParentCommunity 1\",son.getParentCommunities().size(), not(0));\n        assertThat(\"testGetParentCommunity 2\", son.getParentCommunities().get(0), equalTo(c));\n    }", "signature": "void testGetParentCommunity()", "full_signature": "@Test public void testGetParentCommunity()", "class_method_signature": "CommunityTest.testGetParentCommunity()", "testcase": true, "constructor": false, "invocations": ["getClass", "authorizeAction", "authorizeActionBoolean", "assertEquals", "size", "getParentCommunities", "create", "assertThat", "size", "getParentCommunities", "not", "assertThat", "get", "getParentCommunities", "equalTo"]}, "focal_class": {"identifier": "Community", "superclass": "extends DSpaceObject", "interfaces": "implements DSpaceObjectLegacySupport", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(Community.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(Community.class)", "var_name": "log"}, {"original_string": "@Column(name=\"community_id\", insertable = false, updatable = false)\n    private Integer legacyId;", "modifier": "@Column(name=\"community_id\", insertable = false, updatable = false)\n    private", "type": "Integer", "declarator": "legacyId", "var_name": "legacyId"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n            name = \"community2community\",\n            joinColumns = {@JoinColumn(name = \"parent_comm_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"child_comm_id\") }\n    )\n    private Set<Community> subCommunities = new HashSet<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n            name = \"community2community\",\n            joinColumns = {@JoinColumn(name = \"parent_comm_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"child_comm_id\") }\n    )\n    private", "type": "Set<Community>", "declarator": "subCommunities = new HashSet<>()", "var_name": "subCommunities"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"subCommunities\")\n    private Set<Community> parentCommunities = new HashSet<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"subCommunities\")\n    private", "type": "Set<Community>", "declarator": "parentCommunities = new HashSet<>()", "var_name": "parentCommunities"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"communities\", cascade = {CascadeType.PERSIST})\n    private Set<Collection> collections = new HashSet<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"communities\", cascade = {CascadeType.PERSIST})\n    private", "type": "Set<Collection>", "declarator": "collections = new HashSet<>()", "var_name": "collections"}, {"original_string": "@OneToOne\n    @JoinColumn(name = \"admin\")\n    /** The default group of administrators */\n    private Group admins;", "modifier": "@OneToOne\n    @JoinColumn(name = \"admin\")\n    /** The default group of administrators */\n    private", "type": "Group", "declarator": "admins", "var_name": "admins"}, {"original_string": "@OneToOne\n    @JoinColumn(name = \"logo_bitstream_id\")\n    private Bitstream logo = null;", "modifier": "@OneToOne\n    @JoinColumn(name = \"logo_bitstream_id\")\n    private", "type": "Bitstream", "declarator": "logo = null", "var_name": "logo"}, {"original_string": "public static final String COPYRIGHT_TEXT = \"copyright_text\";", "modifier": "public static final", "type": "String", "declarator": "COPYRIGHT_TEXT = \"copyright_text\"", "var_name": "COPYRIGHT_TEXT"}, {"original_string": "public static final String INTRODUCTORY_TEXT = \"introductory_text\";", "modifier": "public static final", "type": "String", "declarator": "INTRODUCTORY_TEXT = \"introductory_text\"", "var_name": "INTRODUCTORY_TEXT"}, {"original_string": "public static final String SHORT_DESCRIPTION = \"short_description\";", "modifier": "public static final", "type": "String", "declarator": "SHORT_DESCRIPTION = \"short_description\"", "var_name": "SHORT_DESCRIPTION"}, {"original_string": "public static final String SIDEBAR_TEXT = \"side_bar_text\";", "modifier": "public static final", "type": "String", "declarator": "SIDEBAR_TEXT = \"side_bar_text\"", "var_name": "SIDEBAR_TEXT"}, {"original_string": "@Transient\n    protected transient CommunityService communityService;", "modifier": "@Transient\n    protected transient", "type": "CommunityService", "declarator": "communityService", "var_name": "communityService"}], "methods": [{"identifier": "Community", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Community()", "full_signature": "protected  Community()", "class_method_signature": "Community.Community()", "testcase": false, "constructor": true}, {"identifier": "addSubCommunity", "parameters": "(Community subCommunity)", "modifiers": "", "return": "void", "signature": "void addSubCommunity(Community subCommunity)", "full_signature": " void addSubCommunity(Community subCommunity)", "class_method_signature": "Community.addSubCommunity(Community subCommunity)", "testcase": false, "constructor": false}, {"identifier": "removeSubCommunity", "parameters": "(Community subCommunity)", "modifiers": "", "return": "void", "signature": "void removeSubCommunity(Community subCommunity)", "full_signature": " void removeSubCommunity(Community subCommunity)", "class_method_signature": "Community.removeSubCommunity(Community subCommunity)", "testcase": false, "constructor": false}, {"identifier": "getLogo", "parameters": "()", "modifiers": "public", "return": "Bitstream", "signature": "Bitstream getLogo()", "full_signature": "public Bitstream getLogo()", "class_method_signature": "Community.getLogo()", "testcase": false, "constructor": false}, {"identifier": "setLogo", "parameters": "(Bitstream logo)", "modifiers": "", "return": "void", "signature": "void setLogo(Bitstream logo)", "full_signature": " void setLogo(Bitstream logo)", "class_method_signature": "Community.setLogo(Bitstream logo)", "testcase": false, "constructor": false}, {"identifier": "getAdministrators", "parameters": "()", "modifiers": "public", "return": "Group", "signature": "Group getAdministrators()", "full_signature": "public Group getAdministrators()", "class_method_signature": "Community.getAdministrators()", "testcase": false, "constructor": false}, {"identifier": "setAdmins", "parameters": "(Group admins)", "modifiers": "", "return": "void", "signature": "void setAdmins(Group admins)", "full_signature": " void setAdmins(Group admins)", "class_method_signature": "Community.setAdmins(Group admins)", "testcase": false, "constructor": false}, {"identifier": "getCollections", "parameters": "()", "modifiers": "public", "return": "List<Collection>", "signature": "List<Collection> getCollections()", "full_signature": "public List<Collection> getCollections()", "class_method_signature": "Community.getCollections()", "testcase": false, "constructor": false}, {"identifier": "addCollection", "parameters": "(Collection collection)", "modifiers": "", "return": "void", "signature": "void addCollection(Collection collection)", "full_signature": " void addCollection(Collection collection)", "class_method_signature": "Community.addCollection(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "removeCollection", "parameters": "(Collection collection)", "modifiers": "", "return": "void", "signature": "void removeCollection(Collection collection)", "full_signature": " void removeCollection(Collection collection)", "class_method_signature": "Community.removeCollection(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "getSubcommunities", "parameters": "()", "modifiers": "public", "return": "List<Community>", "signature": "List<Community> getSubcommunities()", "full_signature": "public List<Community> getSubcommunities()", "class_method_signature": "Community.getSubcommunities()", "testcase": false, "constructor": false}, {"identifier": "getParentCommunities", "parameters": "()", "modifiers": "public", "return": "List<Community>", "signature": "List<Community> getParentCommunities()", "full_signature": "public List<Community> getParentCommunities()", "class_method_signature": "Community.getParentCommunities()", "testcase": false, "constructor": false}, {"identifier": "addParentCommunity", "parameters": "(Community parentCommunity)", "modifiers": "", "return": "void", "signature": "void addParentCommunity(Community parentCommunity)", "full_signature": " void addParentCommunity(Community parentCommunity)", "class_method_signature": "Community.addParentCommunity(Community parentCommunity)", "testcase": false, "constructor": false}, {"identifier": "clearParentCommunities", "parameters": "()", "modifiers": "", "return": "void", "signature": "void clearParentCommunities()", "full_signature": " void clearParentCommunities()", "class_method_signature": "Community.clearParentCommunities()", "testcase": false, "constructor": false}, {"identifier": "removeParentCommunity", "parameters": "(Community parentCommunity)", "modifiers": "public", "return": "void", "signature": "void removeParentCommunity(Community parentCommunity)", "full_signature": "public void removeParentCommunity(Community parentCommunity)", "class_method_signature": "Community.removeParentCommunity(Community parentCommunity)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Community.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Community.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getType()", "full_signature": "@Override public int getType()", "class_method_signature": "Community.getType()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Community.getName()", "testcase": false, "constructor": false}, {"identifier": "getLegacyId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getLegacyId()", "full_signature": "@Override public Integer getLegacyId()", "class_method_signature": "Community.getLegacyId()", "testcase": false, "constructor": false}, {"identifier": "getCommunityService", "parameters": "()", "modifiers": "private", "return": "CommunityService", "signature": "CommunityService getCommunityService()", "full_signature": "private CommunityService getCommunityService()", "class_method_signature": "Community.getCommunityService()", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/content/Community.java"}, "focal_method": {"identifier": "getParentCommunities", "parameters": "()", "modifiers": "public", "return": "List<Community>", "body": "public List<Community> getParentCommunities()\n    {\n        // We return a copy because we do not want people to add elements to this collection directly.\n        // We return a list to maintain backwards compatibility\n        Community[] output = parentCommunities.toArray(new Community[]{});\n        Arrays.sort(output, new NameAscendingComparator());\n        return Arrays.asList(output);\n    }", "signature": "List<Community> getParentCommunities()", "full_signature": "public List<Community> getParentCommunities()", "class_method_signature": "Community.getParentCommunities()", "testcase": false, "constructor": false, "invocations": ["toArray", "sort", "asList"]}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}