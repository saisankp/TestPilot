{"test_class": {"identifier": "HttpAlerterTest", "superclass": "extends AbstractElasticsearchTest", "interfaces": "", "fields": [{"original_string": "public AbstractAlerterTest abstractAlerterTest = new AbstractAlerterTest();", "modifier": "public", "type": "AbstractAlerterTest", "declarator": "abstractAlerterTest = new AbstractAlerterTest()", "var_name": "abstractAlerterTest"}, {"original_string": "private HttpAlerter httpAlerter;", "modifier": "private", "type": "HttpAlerter", "declarator": "httpAlerter", "var_name": "httpAlerter"}, {"original_string": "private AlertSender alertSender;", "modifier": "private", "type": "AlertSender", "declarator": "alertSender", "var_name": "alertSender"}], "file": "stagemonitor-alerting/src/test/java/org/stagemonitor/alerting/alerter/HttpAlerterTest.java"}, "test_case": {"identifier": "testAlert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAlert() throws Exception {\n\t\tSubscription subscription = abstractAlerterTest.createSubscription(httpAlerter);\n\t\tsubscription.setTarget(elasticsearchUrl + \"/stagemonitor/alerts\");\n\t\tIncident incident = alertSender.sendTestAlert(subscription, CheckResult.Status.ERROR);\n\t\trefresh();\n\t\tCollection<Incident> allIncidents = elasticsearchClient.getAll(\"/stagemonitor/alerts\", 10, Incident.class);\n\t\tAssert.assertEquals(1, allIncidents.size());\n\t\tAssert.assertEquals(incident, allIncidents.iterator().next());\n\t}", "signature": "void testAlert()", "full_signature": "@Test public void testAlert()", "class_method_signature": "HttpAlerterTest.testAlert()", "testcase": true, "constructor": false, "invocations": ["createSubscription", "setTarget", "sendTestAlert", "refresh", "getAll", "assertEquals", "size", "assertEquals", "next", "iterator"]}, "focal_class": {"identifier": "HttpAlerter", "superclass": "extends Alerter", "interfaces": "", "fields": [{"original_string": "protected final HttpClient httpClient;", "modifier": "protected final", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}], "methods": [{"identifier": "HttpAlerter", "parameters": "()", "modifiers": "public", "return": "", "signature": " HttpAlerter()", "full_signature": "public  HttpAlerter()", "class_method_signature": "HttpAlerter.HttpAlerter()", "testcase": false, "constructor": true}, {"identifier": "alert", "parameters": "(AlertArguments alertArguments)", "modifiers": "@Override public", "return": "void", "signature": "void alert(AlertArguments alertArguments)", "full_signature": "@Override public void alert(AlertArguments alertArguments)", "class_method_signature": "HttpAlerter.alert(AlertArguments alertArguments)", "testcase": false, "constructor": false}, {"identifier": "getAlerterType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAlerterType()", "full_signature": "@Override public String getAlerterType()", "class_method_signature": "HttpAlerter.getAlerterType()", "testcase": false, "constructor": false}, {"identifier": "getTargetLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTargetLabel()", "full_signature": "@Override public String getTargetLabel()", "class_method_signature": "HttpAlerter.getTargetLabel()", "testcase": false, "constructor": false}], "file": "stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/alerter/HttpAlerter.java"}, "focal_method": {"identifier": "alert", "parameters": "(AlertArguments alertArguments)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void alert(AlertArguments alertArguments) {\n\t\thttpClient.send(HttpRequestBuilder.<Integer>jsonRequest(\"POST\", alertArguments.getSubscription().getTarget(), alertArguments.getIncident()).build());\n\t}", "signature": "void alert(AlertArguments alertArguments)", "full_signature": "@Override public void alert(AlertArguments alertArguments)", "class_method_signature": "HttpAlerter.alert(AlertArguments alertArguments)", "testcase": false, "constructor": false, "invocations": ["send", "build", "jsonRequest", "getTarget", "getSubscription", "getIncident"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}