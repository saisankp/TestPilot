{"test_class": {"identifier": "TestDigesterDefinitionsReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory\n            .getLogger(TestDigesterDefinitionsReader.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory\n            .getLogger(TestDigesterDefinitionsReader.class)", "var_name": "log"}, {"original_string": "private DigesterDefinitionsReader reader;", "modifier": "private", "type": "DigesterDefinitionsReader", "declarator": "reader", "var_name": "reader"}], "file": "tiles-core/src/test/java/org/apache/tiles/definition/digester/TestDigesterDefinitionsReader.java"}, "test_case": {"identifier": "testBadXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBadXml() {\n        try {\n            URL configFile = this.getClass().getClassLoader().getResource(\n                    \"org/apache/tiles/config/malformed-defs.xml\");\n            assertNotNull(\"Config file not found\", configFile);\n\n            InputStream source = configFile.openStream();\n            reader.read(source);\n            fail(\"Should've thrown an exception.\");\n        } catch (DefinitionsFactoryException e) {\n            // correct.\n            if (log.isDebugEnabled()) {\n                log.debug(\"Exception caught, it is OK\", e);\n            }\n        } catch (Exception e) {\n            fail(\"Exception reading configuration.\" + e);\n        }\n    }", "signature": "void testBadXml()", "full_signature": "@Test public void testBadXml()", "class_method_signature": "TestDigesterDefinitionsReader.testBadXml()", "testcase": true, "constructor": false, "invocations": ["getResource", "getClassLoader", "getClass", "assertNotNull", "openStream", "read", "fail", "isDebugEnabled", "debug", "fail"]}, "focal_class": {"identifier": "DigesterDefinitionsReader", "superclass": "", "interfaces": "implements DefinitionsReader", "fields": [{"original_string": "public static final String PARSER_VALIDATE_PARAMETER_NAME =\n        \"org.apache.tiles.definition.digester.DigesterDefinitionsReader.PARSER_VALIDATE\";", "modifier": "public static final", "type": "String", "declarator": "PARSER_VALIDATE_PARAMETER_NAME =\n        \"org.apache.tiles.definition.digester.DigesterDefinitionsReader.PARSER_VALIDATE\"", "var_name": "PARSER_VALIDATE_PARAMETER_NAME"}, {"original_string": "private static final String DEFINITION_TAG = \"tiles-definitions/definition\";", "modifier": "private static final", "type": "String", "declarator": "DEFINITION_TAG = \"tiles-definitions/definition\"", "var_name": "DEFINITION_TAG"}, {"original_string": "private static final String PUT_TAG = \"*/definition/put-attribute\";", "modifier": "private static final", "type": "String", "declarator": "PUT_TAG = \"*/definition/put-attribute\"", "var_name": "PUT_TAG"}, {"original_string": "private static final String PUT_DEFINITION_TAG = \"*/put-attribute/definition\";", "modifier": "private static final", "type": "String", "declarator": "PUT_DEFINITION_TAG = \"*/put-attribute/definition\"", "var_name": "PUT_DEFINITION_TAG"}, {"original_string": "private static final String ADD_DEFINITION_TAG = \"*/add-attribute/definition\";", "modifier": "private static final", "type": "String", "declarator": "ADD_DEFINITION_TAG = \"*/add-attribute/definition\"", "var_name": "ADD_DEFINITION_TAG"}, {"original_string": "private static final String DEF_LIST_TAG = \"*/definition/put-list-attribute\";", "modifier": "private static final", "type": "String", "declarator": "DEF_LIST_TAG = \"*/definition/put-list-attribute\"", "var_name": "DEF_LIST_TAG"}, {"original_string": "private static final String ADD_LIST_ELE_TAG = \"*/add-attribute\";", "modifier": "private static final", "type": "String", "declarator": "ADD_LIST_ELE_TAG = \"*/add-attribute\"", "var_name": "ADD_LIST_ELE_TAG"}, {"original_string": "private static final String NESTED_LIST = \"*/add-list-attribute\";", "modifier": "private static final", "type": "String", "declarator": "NESTED_LIST = \"*/add-list-attribute\"", "var_name": "NESTED_LIST"}, {"original_string": "protected static final String DEFINITION_HANDLER_CLASS =\n        Definition.class.getName();", "modifier": "protected static final", "type": "String", "declarator": "DEFINITION_HANDLER_CLASS =\n        Definition.class.getName()", "var_name": "DEFINITION_HANDLER_CLASS"}, {"original_string": "protected static final String PUT_ATTRIBUTE_HANDLER_CLASS =\n        Attribute.class.getName();", "modifier": "protected static final", "type": "String", "declarator": "PUT_ATTRIBUTE_HANDLER_CLASS =\n        Attribute.class.getName()", "var_name": "PUT_ATTRIBUTE_HANDLER_CLASS"}, {"original_string": "protected static final String LIST_HANDLER_CLASS =\n        ListAttribute.class.getName();", "modifier": "protected static final", "type": "String", "declarator": "LIST_HANDLER_CLASS =\n        ListAttribute.class.getName()", "var_name": "LIST_HANDLER_CLASS"}, {"original_string": "protected Digester digester;", "modifier": "protected", "type": "Digester", "declarator": "digester", "var_name": "digester"}, {"original_string": "protected String[] registrations;", "modifier": "protected", "type": "String[]", "declarator": "registrations", "var_name": "registrations"}, {"original_string": "private Map<String, Definition> definitions;", "modifier": "private", "type": "Map<String, Definition>", "declarator": "definitions", "var_name": "definitions"}, {"original_string": "private int anonymousDefinitionIndex = 1;", "modifier": "private", "type": "int", "declarator": "anonymousDefinitionIndex = 1", "var_name": "anonymousDefinitionIndex"}], "methods": [{"identifier": "DigesterDefinitionsReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " DigesterDefinitionsReader()", "full_signature": "public  DigesterDefinitionsReader()", "class_method_signature": "DigesterDefinitionsReader.DigesterDefinitionsReader()", "testcase": false, "constructor": true}, {"identifier": "setValidating", "parameters": "(boolean validating)", "modifiers": "public", "return": "void", "signature": "void setValidating(boolean validating)", "full_signature": "public void setValidating(boolean validating)", "class_method_signature": "DigesterDefinitionsReader.setValidating(boolean validating)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Object source)", "modifiers": "public", "return": "Map<String, Definition>", "signature": "Map<String, Definition> read(Object source)", "full_signature": "public Map<String, Definition> read(Object source)", "class_method_signature": "DigesterDefinitionsReader.read(Object source)", "testcase": false, "constructor": false}, {"identifier": "initSyntax", "parameters": "(Digester digester)", "modifiers": "protected", "return": "void", "signature": "void initSyntax(Digester digester)", "full_signature": "protected void initSyntax(Digester digester)", "class_method_signature": "DigesterDefinitionsReader.initSyntax(Digester digester)", "testcase": false, "constructor": false}, {"identifier": "initDigesterForTilesDefinitionsSyntax", "parameters": "(Digester digester)", "modifiers": "private", "return": "void", "signature": "void initDigesterForTilesDefinitionsSyntax(Digester digester)", "full_signature": "private void initDigesterForTilesDefinitionsSyntax(Digester digester)", "class_method_signature": "DigesterDefinitionsReader.initDigesterForTilesDefinitionsSyntax(Digester digester)", "testcase": false, "constructor": false}, {"identifier": "addDefinition", "parameters": "(Definition definition)", "modifiers": "public", "return": "void", "signature": "void addDefinition(Definition definition)", "full_signature": "public void addDefinition(Definition definition)", "class_method_signature": "DigesterDefinitionsReader.addDefinition(Definition definition)", "testcase": false, "constructor": false}, {"identifier": "getRegistrations", "parameters": "()", "modifiers": "protected", "return": "String[]", "signature": "String[] getRegistrations()", "full_signature": "protected String[] getRegistrations()", "class_method_signature": "DigesterDefinitionsReader.getRegistrations()", "testcase": false, "constructor": false}, {"identifier": "getNextUniqueDefinitionName", "parameters": "(\n            Map<String, Definition> definitions)", "modifiers": "protected", "return": "String", "signature": "String getNextUniqueDefinitionName(\n            Map<String, Definition> definitions)", "full_signature": "protected String getNextUniqueDefinitionName(\n            Map<String, Definition> definitions)", "class_method_signature": "DigesterDefinitionsReader.getNextUniqueDefinitionName(\n            Map<String, Definition> definitions)", "testcase": false, "constructor": false}], "file": "tiles-core/src/main/java/org/apache/tiles/definition/digester/DigesterDefinitionsReader.java"}, "focal_method": {"identifier": "read", "parameters": "(Object source)", "modifiers": "public", "return": "Map<String, Definition>", "body": "public Map<String, Definition> read(Object source) {\n        // This is an instance variable instead of a local variable because\n        // we want to be able to call the addDefinition method to populate it.\n        // But we reset the Map here, which, of course, has threading implications.\n        definitions = new LinkedHashMap<String, Definition>();\n\n        if (source == null) {\n            // Perhaps we should throw an exception here.\n            return null;\n        }\n\n        InputStream input;\n        try {\n            input = (InputStream) source;\n        } catch (ClassCastException e) {\n            throw new DefinitionsFactoryException(\n                \"Invalid source type.  Requires java.io.InputStream.\", e);\n        }\n\n        try {\n            // set first object in stack\n            //digester.clear();\n            digester.push(this);\n            // parse\n            digester.parse(input);\n\n        } catch (SAXException e) {\n            throw new DefinitionsFactoryException(\n                \"XML error reading definitions.\", e);\n        } catch (IOException e) {\n            throw new DefinitionsFactoryException(\n                \"I/O Error reading definitions.\", e);\n        } finally {\n            digester.clear();\n        }\n\n        return definitions;\n    }", "signature": "Map<String, Definition> read(Object source)", "full_signature": "public Map<String, Definition> read(Object source)", "class_method_signature": "DigesterDefinitionsReader.read(Object source)", "testcase": false, "constructor": false, "invocations": ["push", "parse", "clear"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}