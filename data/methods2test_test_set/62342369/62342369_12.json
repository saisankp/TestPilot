{"test_class": {"identifier": "ConfigurableTokenLifecycleStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "step-functions/step-functions-client/src/test/java/step/functions/execution/ConfigurableTokenLifecycleStrategyTest.java"}, "test_case": {"identifier": "testAddErrorOnTokenCallErrorTrue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAddErrorOnTokenCallErrorTrue() {\n\t\tAtomicBoolean callBackCalled = new AtomicBoolean(false);\n\t\tTokenLifecycleStrategy s = new ConfigurableTokenLifecycleStrategy(true, true, true, true, null);\n\t\ts.afterTokenCallError(new TokenLifecycleStrategyCallback(null, null) {\n\n\t\t\t@Override\n\t\t\tpublic void addTokenError(String errorMessage, Exception exception) {\n\t\t\t\tAssert.assertEquals(\"my message\", exception.getMessage());\n\t\t\t\tcallBackCalled.set(true);\n\t\t\t}\n\t\t\t\n\t\t}, new TokenWrapper(), new Exception(\"my message\"));\n\n\t\tAssert.assertTrue(callBackCalled.get());\n\t}", "signature": "void testAddErrorOnTokenCallErrorTrue()", "full_signature": "@Test public void testAddErrorOnTokenCallErrorTrue()", "class_method_signature": "ConfigurableTokenLifecycleStrategyTest.testAddErrorOnTokenCallErrorTrue()", "testcase": true, "constructor": false, "invocations": ["afterTokenCallError", "assertEquals", "getMessage", "set", "assertTrue", "get"]}, "focal_class": {"identifier": "ConfigurableTokenLifecycleStrategy", "superclass": "", "interfaces": "implements TokenLifecycleStrategy", "fields": [{"original_string": "private boolean addErrorOnTokenReleaseError = true;", "modifier": "private", "type": "boolean", "declarator": "addErrorOnTokenReleaseError = true", "var_name": "addErrorOnTokenReleaseError"}, {"original_string": "private boolean addErrorOnTokenReservationError = true;", "modifier": "private", "type": "boolean", "declarator": "addErrorOnTokenReservationError = true", "var_name": "addErrorOnTokenReservationError"}, {"original_string": "private boolean addErrorOnTokenCallError = true;", "modifier": "private", "type": "boolean", "declarator": "addErrorOnTokenCallError = true", "var_name": "addErrorOnTokenCallError"}, {"original_string": "private boolean addErrorOnAgentError = true;", "modifier": "private", "type": "boolean", "declarator": "addErrorOnAgentError = true", "var_name": "addErrorOnAgentError"}, {"original_string": "private Set<AgentErrorCode> concernedAgentErrors;", "modifier": "private", "type": "Set<AgentErrorCode>", "declarator": "concernedAgentErrors", "var_name": "concernedAgentErrors"}, {"original_string": "private List<TokenErrorListener> listeners = new ArrayList<>();", "modifier": "private", "type": "List<TokenErrorListener>", "declarator": "listeners = new ArrayList<>()", "var_name": "listeners"}], "methods": [{"identifier": "ConfigurableTokenLifecycleStrategy", "parameters": "(boolean addErrorOnTokenReleaseError,\n\t\t\tboolean addErrorOnTokenReservationError, boolean addErrorOnTokenCallError, boolean addErrorOnAgentError,\n\t\t\tSet<AgentErrorCode> concernedAgentErrors)", "modifiers": "public", "return": "", "signature": " ConfigurableTokenLifecycleStrategy(boolean addErrorOnTokenReleaseError,\n\t\t\tboolean addErrorOnTokenReservationError, boolean addErrorOnTokenCallError, boolean addErrorOnAgentError,\n\t\t\tSet<AgentErrorCode> concernedAgentErrors)", "full_signature": "public  ConfigurableTokenLifecycleStrategy(boolean addErrorOnTokenReleaseError,\n\t\t\tboolean addErrorOnTokenReservationError, boolean addErrorOnTokenCallError, boolean addErrorOnAgentError,\n\t\t\tSet<AgentErrorCode> concernedAgentErrors)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.ConfigurableTokenLifecycleStrategy(boolean addErrorOnTokenReleaseError,\n\t\t\tboolean addErrorOnTokenReservationError, boolean addErrorOnTokenCallError, boolean addErrorOnAgentError,\n\t\t\tSet<AgentErrorCode> concernedAgentErrors)", "testcase": false, "constructor": true}, {"identifier": "isAddErrorOnTokenReleaseError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAddErrorOnTokenReleaseError()", "full_signature": "public boolean isAddErrorOnTokenReleaseError()", "class_method_signature": "ConfigurableTokenLifecycleStrategy.isAddErrorOnTokenReleaseError()", "testcase": false, "constructor": false}, {"identifier": "setAddErrorOnTokenReleaseError", "parameters": "(boolean addErrorOnTokenReleaseError)", "modifiers": "public", "return": "void", "signature": "void setAddErrorOnTokenReleaseError(boolean addErrorOnTokenReleaseError)", "full_signature": "public void setAddErrorOnTokenReleaseError(boolean addErrorOnTokenReleaseError)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.setAddErrorOnTokenReleaseError(boolean addErrorOnTokenReleaseError)", "testcase": false, "constructor": false}, {"identifier": "isAddErrorOnTokenReservationError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAddErrorOnTokenReservationError()", "full_signature": "public boolean isAddErrorOnTokenReservationError()", "class_method_signature": "ConfigurableTokenLifecycleStrategy.isAddErrorOnTokenReservationError()", "testcase": false, "constructor": false}, {"identifier": "setAddErrorOnTokenReservationError", "parameters": "(boolean addErrorOnTokenReservationError)", "modifiers": "public", "return": "void", "signature": "void setAddErrorOnTokenReservationError(boolean addErrorOnTokenReservationError)", "full_signature": "public void setAddErrorOnTokenReservationError(boolean addErrorOnTokenReservationError)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.setAddErrorOnTokenReservationError(boolean addErrorOnTokenReservationError)", "testcase": false, "constructor": false}, {"identifier": "isAddErrorOnTokenCallError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAddErrorOnTokenCallError()", "full_signature": "public boolean isAddErrorOnTokenCallError()", "class_method_signature": "ConfigurableTokenLifecycleStrategy.isAddErrorOnTokenCallError()", "testcase": false, "constructor": false}, {"identifier": "setAddErrorOnTokenCallError", "parameters": "(boolean addErrorOnTokenCallError)", "modifiers": "public", "return": "void", "signature": "void setAddErrorOnTokenCallError(boolean addErrorOnTokenCallError)", "full_signature": "public void setAddErrorOnTokenCallError(boolean addErrorOnTokenCallError)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.setAddErrorOnTokenCallError(boolean addErrorOnTokenCallError)", "testcase": false, "constructor": false}, {"identifier": "isAddErrorOnAgentError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAddErrorOnAgentError()", "full_signature": "public boolean isAddErrorOnAgentError()", "class_method_signature": "ConfigurableTokenLifecycleStrategy.isAddErrorOnAgentError()", "testcase": false, "constructor": false}, {"identifier": "setAddErrorOnAgentError", "parameters": "(boolean addErrorOnAgentError)", "modifiers": "public", "return": "void", "signature": "void setAddErrorOnAgentError(boolean addErrorOnAgentError)", "full_signature": "public void setAddErrorOnAgentError(boolean addErrorOnAgentError)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.setAddErrorOnAgentError(boolean addErrorOnAgentError)", "testcase": false, "constructor": false}, {"identifier": "getConcernedAgentErrors", "parameters": "()", "modifiers": "public", "return": "Set<AgentErrorCode>", "signature": "Set<AgentErrorCode> getConcernedAgentErrors()", "full_signature": "public Set<AgentErrorCode> getConcernedAgentErrors()", "class_method_signature": "ConfigurableTokenLifecycleStrategy.getConcernedAgentErrors()", "testcase": false, "constructor": false}, {"identifier": "setConcernedAgentErrors", "parameters": "(Set<AgentErrorCode> concernedAgentErrors)", "modifiers": "public", "return": "void", "signature": "void setConcernedAgentErrors(Set<AgentErrorCode> concernedAgentErrors)", "full_signature": "public void setConcernedAgentErrors(Set<AgentErrorCode> concernedAgentErrors)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.setConcernedAgentErrors(Set<AgentErrorCode> concernedAgentErrors)", "testcase": false, "constructor": false}, {"identifier": "afterTokenReleaseError", "parameters": "(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "modifiers": "@Override public", "return": "void", "signature": "void afterTokenReleaseError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "full_signature": "@Override public void afterTokenReleaseError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.afterTokenReleaseError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "testcase": false, "constructor": false}, {"identifier": "afterTokenReservationError", "parameters": "(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "modifiers": "@Override public", "return": "void", "signature": "void afterTokenReservationError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "full_signature": "@Override public void afterTokenReservationError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.afterTokenReservationError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tException e)", "testcase": false, "constructor": false}, {"identifier": "afterTokenCallError", "parameters": "(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "modifiers": "@Override public", "return": "void", "signature": "void afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "full_signature": "@Override public void afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "testcase": false, "constructor": false}, {"identifier": "afterTokenCall", "parameters": "(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tOutputMessage outputMessage)", "modifiers": "@Override public", "return": "void", "signature": "void afterTokenCall(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tOutputMessage outputMessage)", "full_signature": "@Override public void afterTokenCall(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tOutputMessage outputMessage)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.afterTokenCall(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper,\n\t\t\tOutputMessage outputMessage)", "testcase": false, "constructor": false}, {"identifier": "addTokenError", "parameters": "(TokenLifecycleStrategyCallback callback, String errorMessage, Exception e)", "modifiers": "protected", "return": "void", "signature": "void addTokenError(TokenLifecycleStrategyCallback callback, String errorMessage, Exception e)", "full_signature": "protected void addTokenError(TokenLifecycleStrategyCallback callback, String errorMessage, Exception e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.addTokenError(TokenLifecycleStrategyCallback callback, String errorMessage, Exception e)", "testcase": false, "constructor": false}, {"identifier": "registerTokenErrorListener", "parameters": "(TokenErrorListener e)", "modifiers": "public", "return": "boolean", "signature": "boolean registerTokenErrorListener(TokenErrorListener e)", "full_signature": "public boolean registerTokenErrorListener(TokenErrorListener e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.registerTokenErrorListener(TokenErrorListener e)", "testcase": false, "constructor": false}], "file": "step-functions/step-functions-client/src/main/java/step/functions/execution/ConfigurableTokenLifecycleStrategy.java"}, "focal_method": {"identifier": "afterTokenCallError", "parameters": "(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e) {\n\t\tif(addErrorOnTokenCallError) { \n\t\t\taddTokenError(callback, \"Error while calling agent\", e);\n\t\t}\n\t}", "signature": "void afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "full_signature": "@Override public void afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "class_method_signature": "ConfigurableTokenLifecycleStrategy.afterTokenCallError(TokenLifecycleStrategyCallback callback, TokenWrapper tokenWrapper, Exception e)", "testcase": false, "constructor": false, "invocations": ["addTokenError"]}, "repository": {"repo_id": 62342369, "url": "https://github.com/exense/step", "stars": 12, "created": "6/30/2016 9:08:29 PM +00:00", "updates": "2020-01-24T17:13:24+00:00", "fork": "False", "license": "licensed"}}