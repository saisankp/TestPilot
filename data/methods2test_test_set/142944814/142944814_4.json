{"test_class": {"identifier": "WalletExceptionConverterTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "client/wallet/src/test/java/hera/exception/WalletExceptionConverterTest.java"}, "test_case": {"identifier": "testConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConvert() {\n    final Throwable[] parameters = {\n        new HerajException(\"\"),\n        new UnsupportedOperationException()\n    };\n    final Class<?>[] expected = {\n        HerajException.class,\n        HerajException.class\n    };\n\n    final WalletExceptionConverter converter = new WalletExceptionConverter();\n    for (int i = 0; i < parameters.length; ++i) {\n      final Throwable parameter = parameters[i];\n      final Class<?> expectedClass = expected[i];\n      final HerajException actual = converter.convert(parameter);\n      assertEquals(actual.getClass(), expectedClass);\n    }\n  }", "signature": "void testConvert()", "full_signature": "@Test public void testConvert()", "class_method_signature": "WalletExceptionConverterTest.testConvert()", "testcase": true, "constructor": false, "invocations": ["convert", "assertEquals", "getClass"]}, "focal_class": {"identifier": "WalletExceptionConverter", "superclass": "", "interfaces": "implements ExceptionConverter<HerajException>", "fields": [{"original_string": "protected final transient Logger logger = getLogger(getClass());", "modifier": "protected final transient", "type": "Logger", "declarator": "logger = getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "convert", "parameters": "(final Throwable t)", "modifiers": "@Override public", "return": "HerajException", "signature": "HerajException convert(final Throwable t)", "full_signature": "@Override public HerajException convert(final Throwable t)", "class_method_signature": "WalletExceptionConverter.convert(final Throwable t)", "testcase": false, "constructor": false}], "file": "client/wallet/src/main/java/hera/exception/WalletExceptionConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(final Throwable t)", "modifiers": "@Override public", "return": "HerajException", "body": "@Override\n  public HerajException convert(final Throwable t) {\n    logger.debug(\"Handle exception {}\", t.toString());\n    if (t instanceof HerajException) {\n      return (HerajException) t;\n    } else {\n      return new HerajException(t);\n    }\n  }", "signature": "HerajException convert(final Throwable t)", "full_signature": "@Override public HerajException convert(final Throwable t)", "class_method_signature": "WalletExceptionConverter.convert(final Throwable t)", "testcase": false, "constructor": false, "invocations": ["debug", "toString"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}