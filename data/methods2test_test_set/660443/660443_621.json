{"test_class": {"identifier": "ExtAtomContainerManipulatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/smsd/tools/ExtAtomContainerManipulatorTest.java"}, "test_case": {"identifier": "testConvertExplicitToImplicitHydrogens", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertExplicitToImplicitHydrogens() throws InvalidSmilesException {\n        String rawMolSmiles = \"[H]POOSC(Br)C(Cl)C(F)I\";\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer atomContainer = sp.parseSmiles(rawMolSmiles);\n        int expResult = 11;\n        IAtomContainer result = ExtAtomContainerManipulator.convertExplicitToImplicitHydrogens(atomContainer);\n        assertEquals(expResult, result.getAtomCount());\n    }", "signature": "void testConvertExplicitToImplicitHydrogens()", "full_signature": "@Test public void testConvertExplicitToImplicitHydrogens()", "class_method_signature": "ExtAtomContainerManipulatorTest.testConvertExplicitToImplicitHydrogens()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "convertExplicitToImplicitHydrogens", "assertEquals", "getAtomCount"]}, "focal_class": {"identifier": "ExtAtomContainerManipulator", "superclass": "extends AtomContainerManipulator", "interfaces": "", "fields": [], "methods": [{"identifier": "printAtoms", "parameters": "(IAtomContainer mol)", "modifiers": "private static", "return": "void", "signature": "void printAtoms(IAtomContainer mol)", "full_signature": "private static void printAtoms(IAtomContainer mol)", "class_method_signature": "ExtAtomContainerManipulator.printAtoms(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "makeDeepCopy", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "IAtomContainer", "signature": "IAtomContainer makeDeepCopy(IAtomContainer container)", "full_signature": "public static IAtomContainer makeDeepCopy(IAtomContainer container)", "class_method_signature": "ExtAtomContainerManipulator.makeDeepCopy(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "aromatizeMolecule", "parameters": "(IAtomContainer mol)", "modifiers": "public static", "return": "void", "signature": "void aromatizeMolecule(IAtomContainer mol)", "full_signature": "public static void aromatizeMolecule(IAtomContainer mol)", "class_method_signature": "ExtAtomContainerManipulator.aromatizeMolecule(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "getExplicitHydrogenCount", "parameters": "(IAtomContainer atomContainer, IAtom atom)", "modifiers": "public static", "return": "int", "signature": "int getExplicitHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "full_signature": "public static int getExplicitHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "class_method_signature": "ExtAtomContainerManipulator.getExplicitHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getImplicitHydrogenCount", "parameters": "(IAtom atom)", "modifiers": "public static", "return": "int", "signature": "int getImplicitHydrogenCount(IAtom atom)", "full_signature": "public static int getImplicitHydrogenCount(IAtom atom)", "class_method_signature": "ExtAtomContainerManipulator.getImplicitHydrogenCount(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getHydrogenCount", "parameters": "(IAtomContainer atomContainer, IAtom atom)", "modifiers": "public static", "return": "int", "signature": "int getHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "full_signature": "public static int getHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "class_method_signature": "ExtAtomContainerManipulator.getHydrogenCount(IAtomContainer atomContainer, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "removeHydrogensExceptSingleAndPreserveAtomID", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public static", "return": "IAtomContainer", "signature": "IAtomContainer removeHydrogensExceptSingleAndPreserveAtomID(IAtomContainer atomContainer)", "full_signature": "public static IAtomContainer removeHydrogensExceptSingleAndPreserveAtomID(IAtomContainer atomContainer)", "class_method_signature": "ExtAtomContainerManipulator.removeHydrogensExceptSingleAndPreserveAtomID(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "convertExplicitToImplicitHydrogens", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public static", "return": "IAtomContainer", "signature": "IAtomContainer convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "full_signature": "public static IAtomContainer convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "class_method_signature": "ExtAtomContainerManipulator.convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "percieveAtomTypesAndConfigureAtoms", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "void", "signature": "void percieveAtomTypesAndConfigureAtoms(IAtomContainer container)", "full_signature": "public static void percieveAtomTypesAndConfigureAtoms(IAtomContainer container)", "class_method_signature": "ExtAtomContainerManipulator.percieveAtomTypesAndConfigureAtoms(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "copyAtoms", "parameters": "(IAtomContainer container, IAtomContainer newAtomContainer)", "modifiers": "private static", "return": "IAtom[]", "signature": "IAtom[] copyAtoms(IAtomContainer container, IAtomContainer newAtomContainer)", "full_signature": "private static IAtom[] copyAtoms(IAtomContainer container, IAtomContainer newAtomContainer)", "class_method_signature": "ExtAtomContainerManipulator.copyAtoms(IAtomContainer container, IAtomContainer newAtomContainer)", "testcase": false, "constructor": false}, {"identifier": "copyBonds", "parameters": "(IAtom[] atoms, IAtomContainer container, IAtomContainer newAtomContainer)", "modifiers": "private static", "return": "void", "signature": "void copyBonds(IAtom[] atoms, IAtomContainer container, IAtomContainer newAtomContainer)", "full_signature": "private static void copyBonds(IAtom[] atoms, IAtomContainer container, IAtomContainer newAtomContainer)", "class_method_signature": "ExtAtomContainerManipulator.copyBonds(IAtom[] atoms, IAtomContainer container, IAtomContainer newAtomContainer)", "testcase": false, "constructor": false}, {"identifier": "reComputeHydrogens", "parameters": "(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "modifiers": "private static", "return": "IAtomContainer", "signature": "IAtomContainer reComputeHydrogens(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "full_signature": "private static IAtomContainer reComputeHydrogens(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "class_method_signature": "ExtAtomContainerManipulator.reComputeHydrogens(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "testcase": false, "constructor": false}, {"identifier": "cloneAndMarkNonHBonds", "parameters": "(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "modifiers": "private static", "return": "IAtomContainer", "signature": "IAtomContainer cloneAndMarkNonHBonds(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "full_signature": "private static IAtomContainer cloneAndMarkNonHBonds(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "class_method_signature": "ExtAtomContainerManipulator.cloneAndMarkNonHBonds(IAtomContainer mol, IAtomContainer atomContainer,\n            List<IAtom> remove, Map<IAtom, IAtom> map)", "testcase": false, "constructor": false}, {"identifier": "set2D", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void set2D(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void set2D(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.set2D(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "set3D", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void set3D(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void set3D(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.set3D(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "setFractionalPoint3d", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void setFractionalPoint3d(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void setFractionalPoint3d(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.setFractionalPoint3d(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void setID(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void setID(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.setID(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "setHydrogenCount", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void setHydrogenCount(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void setHydrogenCount(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.setHydrogenCount(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}, {"identifier": "setCharge", "parameters": "(IAtomContainer container, int index, IAtom[] atoms)", "modifiers": "private static", "return": "void", "signature": "void setCharge(IAtomContainer container, int index, IAtom[] atoms)", "full_signature": "private static void setCharge(IAtomContainer container, int index, IAtom[] atoms)", "class_method_signature": "ExtAtomContainerManipulator.setCharge(IAtomContainer container, int index, IAtom[] atoms)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/smsd/tools/ExtAtomContainerManipulator.java"}, "focal_method": {"identifier": "convertExplicitToImplicitHydrogens", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public static", "return": "IAtomContainer", "body": "public static IAtomContainer convertExplicitToImplicitHydrogens(IAtomContainer atomContainer) {\n        IAtomContainer mol = atomContainer.getBuilder().newInstance(IAtomContainer.class, atomContainer);\n        convertImplicitToExplicitHydrogens(mol);\n        if (mol.getAtomCount() > 1) {\n            mol = removeHydrogens(mol);\n        } else if (atomContainer.atoms().iterator().next().getSymbol().equalsIgnoreCase(\"H\")) {\n            System.err.println(\"WARNING: single hydrogen atom removal not supported!\");\n        }\n        mol.addProperties(atomContainer.getProperties());\n        mol.setFlags(atomContainer.getFlags());\n        if (atomContainer.getID() != null) {\n            mol.setID(atomContainer.getID());\n        }\n        return mol;\n    }", "signature": "IAtomContainer convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "full_signature": "public static IAtomContainer convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "class_method_signature": "ExtAtomContainerManipulator.convertExplicitToImplicitHydrogens(IAtomContainer atomContainer)", "testcase": false, "constructor": false, "invocations": ["newInstance", "getBuilder", "convertImplicitToExplicitHydrogens", "getAtomCount", "removeHydrogens", "equalsIgnoreCase", "getSymbol", "next", "iterator", "atoms", "println", "addProperties", "getProperties", "setFlags", "getFlags", "getID", "setID", "getID"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}