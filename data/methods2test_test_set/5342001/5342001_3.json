{"test_class": {"identifier": "DownloadTransferListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILENAME = \"file.txt\";", "modifier": "private static final", "type": "String", "declarator": "FILENAME = \"file.txt\"", "var_name": "FILENAME"}, {"original_string": "private DownloadTransferListener listener;", "modifier": "private", "type": "DownloadTransferListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "@Mock\n\tprivate DownloadsSessionManager downloadsSessionManager;", "modifier": "@Mock\n\tprivate", "type": "DownloadsSessionManager", "declarator": "downloadsSessionManager", "var_name": "downloadsSessionManager"}, {"original_string": "@Mock\n\tprivate DownloadSession session;", "modifier": "@Mock\n\tprivate", "type": "DownloadSession", "declarator": "session", "var_name": "session"}], "file": "seedboxer-core/src/test/java/net/seedboxer/mule/processor/transfer/DownloadTransferListenerTest.java"}, "test_case": {"identifier": "shouldNotPublishByteTransferedWhenAreNotSufficient", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldNotPublishByteTransferedWhenAreNotSufficient() throws Exception {\n\t\tlistener.bytesTransfered(FILENAME, 1000);\n\t\tverify(session, never()).setTransferredInMbs(1000);\n\t}", "signature": "void shouldNotPublishByteTransferedWhenAreNotSufficient()", "full_signature": "@Test public void shouldNotPublishByteTransferedWhenAreNotSufficient()", "class_method_signature": "DownloadTransferListenerTest.shouldNotPublishByteTransferedWhenAreNotSufficient()", "testcase": true, "constructor": false, "invocations": ["bytesTransfered", "setTransferredInMbs", "verify", "never"]}, "focal_class": {"identifier": "DownloadTransferListener", "superclass": "", "interfaces": "implements TransferListener", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DownloadTransferListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DownloadTransferListener.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n\tprivate DownloadsSessionManager downloadsSessionManager;", "modifier": "@Autowired\n\tprivate", "type": "DownloadsSessionManager", "declarator": "downloadsSessionManager", "var_name": "downloadsSessionManager"}, {"original_string": "private long totalBytes;", "modifier": "private", "type": "long", "declarator": "totalBytes", "var_name": "totalBytes"}, {"original_string": "private DownloadSession session;", "modifier": "private", "type": "DownloadSession", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "setDownloadsSessionManager", "parameters": "(\n\t\t\tDownloadsSessionManager downloadsSessionManager)", "modifiers": "public", "return": "void", "signature": "void setDownloadsSessionManager(\n\t\t\tDownloadsSessionManager downloadsSessionManager)", "full_signature": "public void setDownloadsSessionManager(\n\t\t\tDownloadsSessionManager downloadsSessionManager)", "class_method_signature": "DownloadTransferListener.setDownloadsSessionManager(\n\t\t\tDownloadsSessionManager downloadsSessionManager)", "testcase": false, "constructor": false}, {"identifier": "bytesTransfered", "parameters": "(String file, long bytesTransfered)", "modifiers": "@Override public", "return": "void", "signature": "void bytesTransfered(String file, long bytesTransfered)", "full_signature": "@Override public void bytesTransfered(String file, long bytesTransfered)", "class_method_signature": "DownloadTransferListener.bytesTransfered(String file, long bytesTransfered)", "testcase": false, "constructor": false}, {"identifier": "initSession", "parameters": "(String file)", "modifiers": "private", "return": "void", "signature": "void initSession(String file)", "full_signature": "private void initSession(String file)", "class_method_signature": "DownloadTransferListener.initSession(String file)", "testcase": false, "constructor": false}], "file": "seedboxer-core/src/main/java/net/seedboxer/mule/processor/transfer/DownloadTransferListener.java"}, "focal_method": {"identifier": "bytesTransfered", "parameters": "(String file, long bytesTransfered)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void bytesTransfered(String file, long bytesTransfered) {\n\t\ttotalBytes += bytesTransfered;\n\n\t\tif (totalBytes % 1024 == 0) {\n\t\t\tlong sizeInMbs = FileUtils.byteCountToDisplaySize(totalBytes);\n\t\t\tLOGGER.trace(\"Transfered '{}': {} Mb\", file, sizeInMbs);\n\n\t\t\tif (session == null) {\n\t\t\t\tinitSession(file);\n\t\t\t}\n\t\t\tsession.setTransferredInMbs(sizeInMbs);\n\t\t}\n\t}", "signature": "void bytesTransfered(String file, long bytesTransfered)", "full_signature": "@Override public void bytesTransfered(String file, long bytesTransfered)", "class_method_signature": "DownloadTransferListener.bytesTransfered(String file, long bytesTransfered)", "testcase": false, "constructor": false, "invocations": ["byteCountToDisplaySize", "trace", "initSession", "setTransferredInMbs"]}, "repository": {"repo_id": 5342001, "url": "https://github.com/jdavisonc/seedboxer", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 15845, "license": "licensed"}}