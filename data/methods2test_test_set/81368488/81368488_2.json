{"test_class": {"identifier": "LogoFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay gazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "gazePlay", "var_name": "gazePlay"}, {"original_string": "@Mock\n    private Stage stage;", "modifier": "@Mock\n    private", "type": "Stage", "declarator": "stage", "var_name": "stage"}, {"original_string": "@Mock\n    private ScreenDimensionSupplier screenDimensionSupplier;", "modifier": "@Mock\n    private", "type": "ScreenDimensionSupplier", "declarator": "screenDimensionSupplier", "var_name": "screenDimensionSupplier"}], "file": "gazeplay-core/src/test/java/net/gazeplay/commons/app/LogoFactoryTest.java"}, "test_case": {"identifier": "shouldResizeStaticLogo", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldResizeStaticLogo() {\n        DoubleProperty mockHeightProperty = new SimpleDoubleProperty();\n\n        when(stage.getHeight()).thenReturn(100d).thenReturn(50d);\n        when(stage.getWidth()).thenReturn(100d);\n        when(stage.heightProperty()).thenReturn(mockHeightProperty);\n\n        LogoFactory logoFactory = LogoFactory.getInstance();\n        ImageView result = (ImageView) logoFactory.createLogoStatic(stage);\n\n        assertEquals(10d, result.getFitHeight());\n        assertEquals(50d, result.getFitWidth());\n\n        mockHeightProperty.set(50d);\n\n        assertEquals(5d, result.getFitHeight());\n        assertEquals(50d, result.getFitWidth());\n    }", "signature": "void shouldResizeStaticLogo()", "full_signature": "@Test void shouldResizeStaticLogo()", "class_method_signature": "LogoFactoryTest.shouldResizeStaticLogo()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "thenReturn", "when", "getHeight", "thenReturn", "when", "getWidth", "thenReturn", "when", "heightProperty", "getInstance", "createLogoStatic", "assertEquals", "getFitHeight", "assertEquals", "getFitWidth", "set", "assertEquals", "getFitHeight", "assertEquals", "getFitWidth"]}, "focal_class": {"identifier": "LogoFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n    private static final LogoFactory instance = new LogoFactory();", "modifier": "@Getter\n    private static final", "type": "LogoFactory", "declarator": "instance = new LogoFactory()", "var_name": "instance"}, {"original_string": "final static String staticLogoImagePath = \"data/common/images/logos/gazeplay-top-logo.png\";", "modifier": "final static", "type": "String", "declarator": "staticLogoImagePath = \"data/common/images/logos/gazeplay-top-logo.png\"", "var_name": "staticLogoImagePath"}], "methods": [{"identifier": "createLogoAnimated", "parameters": "(Stage stage)", "modifiers": "public", "return": "Node", "signature": "Node createLogoAnimated(Stage stage)", "full_signature": "public Node createLogoAnimated(Stage stage)", "class_method_signature": "LogoFactory.createLogoAnimated(Stage stage)", "testcase": false, "constructor": false}, {"identifier": "createLogoStatic", "parameters": "(Stage stage)", "modifiers": "public", "return": "Node", "signature": "Node createLogoStatic(Stage stage)", "full_signature": "public Node createLogoStatic(Stage stage)", "class_method_signature": "LogoFactory.createLogoStatic(Stage stage)", "testcase": false, "constructor": false}, {"identifier": "fitStaticLogo", "parameters": "(ImageView logoView, Stage stage)", "modifiers": "private static", "return": "void", "signature": "void fitStaticLogo(ImageView logoView, Stage stage)", "full_signature": "private static void fitStaticLogo(ImageView logoView, Stage stage)", "class_method_signature": "LogoFactory.fitStaticLogo(ImageView logoView, Stage stage)", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/commons/app/LogoFactory.java"}, "focal_method": {"identifier": "createLogoStatic", "parameters": "(Stage stage)", "modifiers": "public", "return": "Node", "body": "public Node createLogoStatic(Stage stage) {\n        final Image logoImage = new Image(staticLogoImagePath);\n        final ImageView logoView = new ImageView(logoImage);\n        logoView.setPreserveRatio(true);\n        fitStaticLogo(logoView, stage);\n\n        stage.heightProperty().addListener((observable, oldValue, newValue) -> {\n            fitStaticLogo(logoView, stage);\n        });\n        return logoView;\n    }", "signature": "Node createLogoStatic(Stage stage)", "full_signature": "public Node createLogoStatic(Stage stage)", "class_method_signature": "LogoFactory.createLogoStatic(Stage stage)", "testcase": false, "constructor": false, "invocations": ["setPreserveRatio", "fitStaticLogo", "addListener", "heightProperty", "fitStaticLogo"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}