{"test_class": {"identifier": "WebCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SystemSettingManager systemSettingManager;", "modifier": "@Mock\n    private", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "@Mock\n    private AnalyticsCacheSettings analyticsCacheSettings;", "modifier": "@Mock\n    private", "type": "AnalyticsCacheSettings", "declarator": "analyticsCacheSettings", "var_name": "analyticsCacheSettings"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = rule()", "var_name": "mockitoRule"}, {"original_string": "private WebCache webCache;", "modifier": "private", "type": "WebCache", "declarator": "webCache", "var_name": "webCache"}], "file": "dhis-2/dhis-web/dhis-web-api/src/test/java/org/hisp/dhis/webapi/service/WebCacheTest.java"}, "test_case": {"identifier": "testSetCacheabilityWhenCacheabilityIsSetToPublic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetCacheabilityWhenCacheabilityIsSetToPublic()\n    {\n        // Given\n        final CacheStrategy theCacheStrategy = CACHE_5_MINUTES;\n        final Cacheability setCacheability = PUBLIC;\n\n        // When\n        when( systemSettingManager.getSystemSetting( CACHEABILITY ) ).thenReturn( setCacheability );\n        final CacheControl actualCacheControl = webCache.getCacheControlFor( theCacheStrategy );\n\n        // Then\n        assertThat( actualCacheControl.toString().toLowerCase(), containsString( \"public\" ) );\n    }", "signature": "void testSetCacheabilityWhenCacheabilityIsSetToPublic()", "full_signature": "@Test public void testSetCacheabilityWhenCacheabilityIsSetToPublic()", "class_method_signature": "WebCacheTest.testSetCacheabilityWhenCacheabilityIsSetToPublic()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSystemSetting", "getCacheControlFor", "assertThat", "toLowerCase", "toString", "containsString"]}, "focal_class": {"identifier": "WebCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SystemSettingManager systemSettingManager;", "modifier": "private final", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "private final AnalyticsCacheSettings analyticsCacheSettings;", "modifier": "private final", "type": "AnalyticsCacheSettings", "declarator": "analyticsCacheSettings", "var_name": "analyticsCacheSettings"}], "methods": [{"identifier": "WebCache", "parameters": "( final SystemSettingManager systemSettingManager,\n        final AnalyticsCacheSettings analyticsCacheSettings )", "modifiers": "public", "return": "", "signature": " WebCache( final SystemSettingManager systemSettingManager,\n        final AnalyticsCacheSettings analyticsCacheSettings )", "full_signature": "public  WebCache( final SystemSettingManager systemSettingManager,\n        final AnalyticsCacheSettings analyticsCacheSettings )", "class_method_signature": "WebCache.WebCache( final SystemSettingManager systemSettingManager,\n        final AnalyticsCacheSettings analyticsCacheSettings )", "testcase": false, "constructor": true}, {"identifier": "getCacheControlFor", "parameters": "( CacheStrategy cacheStrategy )", "modifiers": "public", "return": "CacheControl", "signature": "CacheControl getCacheControlFor( CacheStrategy cacheStrategy )", "full_signature": "public CacheControl getCacheControlFor( CacheStrategy cacheStrategy )", "class_method_signature": "WebCache.getCacheControlFor( CacheStrategy cacheStrategy )", "testcase": false, "constructor": false}, {"identifier": "getCacheControlFor", "parameters": "( final Date latestEndDate )", "modifiers": "public", "return": "CacheControl", "signature": "CacheControl getCacheControlFor( final Date latestEndDate )", "full_signature": "public CacheControl getCacheControlFor( final Date latestEndDate )", "class_method_signature": "WebCache.getCacheControlFor( final Date latestEndDate )", "testcase": false, "constructor": false}, {"identifier": "isProgressiveCachingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isProgressiveCachingEnabled()", "full_signature": "public boolean isProgressiveCachingEnabled()", "class_method_signature": "WebCache.isProgressiveCachingEnabled()", "testcase": false, "constructor": false}, {"identifier": "setCacheabilityFor", "parameters": "( final CacheControl cacheControl )", "modifiers": "private", "return": "void", "signature": "void setCacheabilityFor( final CacheControl cacheControl )", "full_signature": "private void setCacheabilityFor( final CacheControl cacheControl )", "class_method_signature": "WebCache.setCacheabilityFor( final CacheControl cacheControl )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/service/WebCache.java"}, "focal_method": {"identifier": "getCacheControlFor", "parameters": "( CacheStrategy cacheStrategy )", "modifiers": "public", "return": "CacheControl", "body": "public CacheControl getCacheControlFor( CacheStrategy cacheStrategy )\n    {\n        final CacheControl cacheControl;\n\n        if ( RESPECT_SYSTEM_SETTING == cacheStrategy )\n        {\n            cacheStrategy = (CacheStrategy) systemSettingManager.getSystemSetting( CACHE_STRATEGY );\n        }\n\n        final boolean cacheStrategyHasExpirationTimeSet = cacheStrategy != null && cacheStrategy != NO_CACHE;\n\n        if ( cacheStrategyHasExpirationTimeSet )\n        {\n            cacheControl = maxAge( cacheStrategy.toSeconds(), SECONDS );\n\n            setCacheabilityFor( cacheControl );\n        }\n        else\n        {\n            cacheControl = noCache();\n        }\n\n        return cacheControl;\n    }", "signature": "CacheControl getCacheControlFor( CacheStrategy cacheStrategy )", "full_signature": "public CacheControl getCacheControlFor( CacheStrategy cacheStrategy )", "class_method_signature": "WebCache.getCacheControlFor( CacheStrategy cacheStrategy )", "testcase": false, "constructor": false, "invocations": ["getSystemSetting", "maxAge", "toSeconds", "setCacheabilityFor", "noCache"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}