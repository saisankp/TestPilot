{"test_class": {"identifier": "MetaStatementMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetaStatementMatcher metaStatementMatcher = new MetaStatementMatcher();", "modifier": "private", "type": "MetaStatementMatcher", "declarator": "metaStatementMatcher = new MetaStatementMatcher()", "var_name": "metaStatementMatcher"}], "file": "foxtrot-sql/src/test/java/com/flipkart/foxtrot/sql/MetaStatementMatcherTest.java"}, "test_case": {"identifier": "testParseShowTablesPositive2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseShowTablesPositive2() throws Exception {\n        ExtendedSqlStatement extendedSqlStatement = metaStatementMatcher.parse(\"\\tShow  \\t TaBLes\");\n        Assert.assertNotNull(extendedSqlStatement);\n        Assert.assertTrue(extendedSqlStatement instanceof ShowTables);\n    }", "signature": "void testParseShowTablesPositive2()", "full_signature": "@Test public void testParseShowTablesPositive2()", "class_method_signature": "MetaStatementMatcherTest.testParseShowTablesPositive2()", "testcase": true, "constructor": false, "invocations": ["parse", "assertNotNull", "assertTrue"]}, "focal_class": {"identifier": "MetaStatementMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DESC_STATEMENT_MATCH = \"^\\\\s*[dD][eE][sS][cC]\\\\s+[a-zA-Z-_]+$\";", "modifier": "private static final", "type": "String", "declarator": "DESC_STATEMENT_MATCH = \"^\\\\s*[dD][eE][sS][cC]\\\\s+[a-zA-Z-_]+$\"", "var_name": "DESC_STATEMENT_MATCH"}, {"original_string": "private static final String DESC_STATEMENT_DELIMITER = \"^\\\\s*[dD][eE][sS][cC]\\\\s+\";", "modifier": "private static final", "type": "String", "declarator": "DESC_STATEMENT_DELIMITER = \"^\\\\s*[dD][eE][sS][cC]\\\\s+\"", "var_name": "DESC_STATEMENT_DELIMITER"}, {"original_string": "private static final String SHOWTABLES_STATEMENT_MATCH = \"^\\\\s*[sS][hH][oO][wW]\\\\s+[tT][aA][bB][lL][eE][sS]$\";", "modifier": "private static final", "type": "String", "declarator": "SHOWTABLES_STATEMENT_MATCH = \"^\\\\s*[sS][hH][oO][wW]\\\\s+[tT][aA][bB][lL][eE][sS]$\"", "var_name": "SHOWTABLES_STATEMENT_MATCH"}], "methods": [{"identifier": "parse", "parameters": "(final String fql)", "modifiers": "public", "return": "ExtendedSqlStatement", "signature": "ExtendedSqlStatement parse(final String fql)", "full_signature": "public ExtendedSqlStatement parse(final String fql)", "class_method_signature": "MetaStatementMatcher.parse(final String fql)", "testcase": false, "constructor": false}], "file": "foxtrot-sql/src/main/java/com/flipkart/foxtrot/sql/MetaStatementMatcher.java"}, "focal_method": {"identifier": "parse", "parameters": "(final String fql)", "modifiers": "public", "return": "ExtendedSqlStatement", "body": "public ExtendedSqlStatement parse(final String fql) {\n        if(fql.matches(DESC_STATEMENT_MATCH)) {\n            final String[] parts = fql.split(DESC_STATEMENT_DELIMITER);\n            if(parts.length != 2) {\n                throw new FqlParsingException(\"Could not decode table name from desc statement. Table name format is: [a-zA-Z-_]+\");\n            }\n            return new Describe(new Table(parts[1].toLowerCase()));\n        }\n        if(fql.matches(SHOWTABLES_STATEMENT_MATCH)) {\n            return new ShowTables();\n        }\n        return null;\n    }", "signature": "ExtendedSqlStatement parse(final String fql)", "full_signature": "public ExtendedSqlStatement parse(final String fql)", "class_method_signature": "MetaStatementMatcher.parse(final String fql)", "testcase": false, "constructor": false, "invocations": ["matches", "split", "toLowerCase", "matches"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}