{"test_class": {"identifier": "DefinitionModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefinitionModel model;", "modifier": "private", "type": "DefinitionModel", "declarator": "model", "var_name": "model"}], "file": "tiles-template/src/test/java/org/apache/tiles/template/DefinitionModelTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws IOException {\n        MutableTilesContainer container = createMock(MutableTilesContainer.class);\n        Request request = createMock(Request.class);\n        Deque<Object> composeStack = new ArrayDeque<Object>();\n        Attribute attribute = new Attribute();\n        composeStack.push(attribute);\n        Map<String, Object> requestScope = new HashMap<String, Object>();\n        requestScope.put(ComposeStackUtil.COMPOSE_STACK_ATTRIBUTE_NAME, composeStack);\n        requestScope.put(TilesAccess.CURRENT_CONTAINER_ATTRIBUTE_NAME, container);\n        ApplicationContext applicationContext = createMock(ApplicationContext.class);\n        ModelBody modelBody = createMock(ModelBody.class);\n\n        modelBody.evaluateWithoutWriting();\n        expect(request.getApplicationContext()).andReturn(applicationContext);\n        expect(request.getContext(\"request\")).andReturn(requestScope).anyTimes();\n        container.register((Definition) notNull(), eq(request));\n\n        replay(container, request, modelBody, applicationContext);\n        model.execute(\"myName\", \"myTemplate\", \"myRole\", \"myExtends\",\n                \"myPreparer\", request, modelBody);\n        assertEquals(1, composeStack.size());\n        attribute = (Attribute) composeStack.peek();\n        assertEquals(\"definition\", attribute.getRenderer());\n        verify(container, request, modelBody, applicationContext);\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "DefinitionModelTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "push", "put", "put", "createMock", "createMock", "evaluateWithoutWriting", "andReturn", "expect", "getApplicationContext", "anyTimes", "andReturn", "expect", "getContext", "register", "notNull", "eq", "replay", "execute", "assertEquals", "size", "peek", "assertEquals", "getRenderer", "verify"]}, "focal_class": {"identifier": "DefinitionModel", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "execute", "parameters": "(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "signature": "void execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "full_signature": "public void execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "class_method_signature": "DefinitionModel.execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "testcase": false, "constructor": false}, {"identifier": "createDefinition", "parameters": "(String name, String template,\n            String role, String extendsParam, String preparer)", "modifiers": "private", "return": "Definition", "signature": "Definition createDefinition(String name, String template,\n            String role, String extendsParam, String preparer)", "full_signature": "private Definition createDefinition(String name, String template,\n            String role, String extendsParam, String preparer)", "class_method_signature": "DefinitionModel.createDefinition(String name, String template,\n            String role, String extendsParam, String preparer)", "testcase": false, "constructor": false}, {"identifier": "registerDefinition", "parameters": "(Definition definition,\n            MutableTilesContainer container, Deque<Object> composeStack,\n            Request request)", "modifiers": "private", "return": "void", "signature": "void registerDefinition(Definition definition,\n            MutableTilesContainer container, Deque<Object> composeStack,\n            Request request)", "full_signature": "private void registerDefinition(Definition definition,\n            MutableTilesContainer container, Deque<Object> composeStack,\n            Request request)", "class_method_signature": "DefinitionModel.registerDefinition(Definition definition,\n            MutableTilesContainer container, Deque<Object> composeStack,\n            Request request)", "testcase": false, "constructor": false}], "file": "tiles-template/src/main/java/org/apache/tiles/template/DefinitionModel.java"}, "focal_method": {"identifier": "execute", "parameters": "(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "body": "public void execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody) throws IOException {\n        Deque<Object> composeStack = ComposeStackUtil\n                .getComposeStack(request);\n        Definition definition = createDefinition(name, template, role,\n                extendsParam, preparer);\n        composeStack.push(definition);\n        modelBody.evaluateWithoutWriting();\n        MutableTilesContainer container = (MutableTilesContainer) TilesAccess\n                .getCurrentContainer(request);\n        definition = (Definition) composeStack.pop();\n        registerDefinition(definition, container, composeStack, request);\n    }", "signature": "void execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "full_signature": "public void execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "class_method_signature": "DefinitionModel.execute(String name, String template, String role,\n            @Parameter(name = \"extends\") String extendsParam, String preparer,\n            Request request, ModelBody modelBody)", "testcase": false, "constructor": false, "invocations": ["getComposeStack", "createDefinition", "push", "evaluateWithoutWriting", "getCurrentContainer", "pop", "registerDefinition"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}