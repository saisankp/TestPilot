{"test_class": {"identifier": "AddVehicleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ScoreDirector<VehicleRoutingSolution> scoreDirector;", "modifier": "@Mock\n    private", "type": "ScoreDirector<VehicleRoutingSolution>", "declarator": "scoreDirector", "var_name": "scoreDirector"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/plugin/planner/change/AddVehicleTest.java"}, "test_case": {"identifier": "add_vehicle_should_add_vehicle", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void add_vehicle_should_add_vehicle() {\n        VehicleRoutingSolution solution = SolutionFactory.emptySolution();\n        when(scoreDirector.getWorkingSolution()).thenReturn(solution);\n\n        PlanningVehicle vehicle = PlanningVehicleFactory.testVehicle(1);\n        AddVehicle addVehicle = new AddVehicle(vehicle);\n        addVehicle.doChange(scoreDirector);\n\n        assertThat(solution.getVehicleList()).containsExactly(vehicle);\n\n        verify(scoreDirector).beforeProblemFactAdded(vehicle);\n        verify(scoreDirector).afterProblemFactAdded(vehicle);\n        verify(scoreDirector).triggerVariableListeners();\n    }", "signature": "void add_vehicle_should_add_vehicle()", "full_signature": "@Test void add_vehicle_should_add_vehicle()", "class_method_signature": "AddVehicleTest.add_vehicle_should_add_vehicle()", "testcase": true, "constructor": false, "invocations": ["emptySolution", "thenReturn", "when", "getWorkingSolution", "testVehicle", "doChange", "containsExactly", "assertThat", "getVehicleList", "beforeProblemFactAdded", "verify", "afterProblemFactAdded", "verify", "triggerVariableListeners", "verify"]}, "focal_class": {"identifier": "AddVehicle", "superclass": "", "interfaces": "implements ProblemFactChange<VehicleRoutingSolution>", "fields": [{"original_string": "private final PlanningVehicle vehicle;", "modifier": "private final", "type": "PlanningVehicle", "declarator": "vehicle", "var_name": "vehicle"}], "methods": [{"identifier": "AddVehicle", "parameters": "(PlanningVehicle vehicle)", "modifiers": "public", "return": "", "signature": " AddVehicle(PlanningVehicle vehicle)", "full_signature": "public  AddVehicle(PlanningVehicle vehicle)", "class_method_signature": "AddVehicle.AddVehicle(PlanningVehicle vehicle)", "testcase": false, "constructor": true}, {"identifier": "doChange", "parameters": "(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "modifiers": "@Override public", "return": "void", "signature": "void doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "full_signature": "@Override public void doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "class_method_signature": "AddVehicle.doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/plugin/planner/change/AddVehicle.java"}, "focal_method": {"identifier": "doChange", "parameters": "(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector) {\n        scoreDirector.beforeProblemFactAdded(vehicle);\n        scoreDirector.getWorkingSolution().getVehicleList().add(vehicle);\n        scoreDirector.afterProblemFactAdded(vehicle);\n\n        scoreDirector.triggerVariableListeners();\n    }", "signature": "void doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "full_signature": "@Override public void doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "class_method_signature": "AddVehicle.doChange(ScoreDirector<VehicleRoutingSolution> scoreDirector)", "testcase": false, "constructor": false, "invocations": ["beforeProblemFactAdded", "add", "getVehicleList", "getWorkingSolution", "afterProblemFactAdded", "triggerVariableListeners"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}