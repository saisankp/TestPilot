{"test_class": {"identifier": "DebuggerActorTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IResolveDependencyStrategy sessionStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "sessionStrategyMock", "var_name": "sessionStrategyMock"}, {"original_string": "private IDebuggerSession[] session;", "modifier": "private", "type": "IDebuggerSession[]", "declarator": "session", "var_name": "session"}, {"original_string": "private DebuggableMessage debuggableMessageMock;", "modifier": "private", "type": "DebuggableMessage", "declarator": "debuggableMessageMock", "var_name": "debuggableMessageMock"}, {"original_string": "private IMessageProcessor messageProcessorMock = mock(IMessageProcessor.class);", "modifier": "private", "type": "IMessageProcessor", "declarator": "messageProcessorMock = mock(IMessageProcessor.class)", "var_name": "messageProcessorMock"}, {"original_string": "private CommandMessage commandMessageMock;", "modifier": "private", "type": "CommandMessage", "declarator": "commandMessageMock", "var_name": "commandMessageMock"}, {"original_string": "private Object debuggerAddress = new Object();", "modifier": "private", "type": "Object", "declarator": "debuggerAddress = new Object()", "var_name": "debuggerAddress"}], "file": "CoreFeatures/Debugger/DebuggerActor/src/test/java/info/smart_tools/smartactors/debugger/actor/DebuggerActorTest.java"}, "test_case": {"identifier": "Should_processInterrupt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_processInterrupt()\n            throws Exception {\n        DebuggerActor actor = new DebuggerActor();\n\n        String id = doCreateSession(actor, session[0]);\n\n        when(debuggableMessageMock.getSessionId()).thenReturn(id);\n        when(debuggableMessageMock.getProcessor()).thenReturn(messageProcessorMock);\n\n        actor.interrupt(debuggableMessageMock);\n\n        verify(session[0]).handleInterrupt(same(messageProcessorMock));\n    }", "signature": "void Should_processInterrupt()", "full_signature": "@Test public void Should_processInterrupt()", "class_method_signature": "DebuggerActorTest.Should_processInterrupt()", "testcase": true, "constructor": false, "invocations": ["doCreateSession", "thenReturn", "when", "getSessionId", "thenReturn", "when", "getProcessor", "interrupt", "handleInterrupt", "verify", "same"]}, "focal_class": {"identifier": "DebuggerActor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, IDebuggerSession> sessions = new HashMap<>();", "modifier": "private final", "type": "Map<String, IDebuggerSession>", "declarator": "sessions = new HashMap<>()", "var_name": "sessions"}, {"original_string": "private final Map<String, IDebuggerCommand> globalCommands = new HashMap<>();", "modifier": "private final", "type": "Map<String, IDebuggerCommand>", "declarator": "globalCommands = new HashMap<>()", "var_name": "globalCommands"}, {"original_string": "private Object debuggerAddress;", "modifier": "private", "type": "Object", "declarator": "debuggerAddress", "var_name": "debuggerAddress"}], "methods": [{"identifier": "executeCommand", "parameters": "(final CommandMessage message)", "modifiers": "public", "return": "void", "signature": "void executeCommand(final CommandMessage message)", "full_signature": "public void executeCommand(final CommandMessage message)", "class_method_signature": "DebuggerActor.executeCommand(final CommandMessage message)", "testcase": false, "constructor": false}, {"identifier": "interrupt", "parameters": "(final DebuggableMessage message)", "modifiers": "public", "return": "void", "signature": "void interrupt(final DebuggableMessage message)", "full_signature": "public void interrupt(final DebuggableMessage message)", "class_method_signature": "DebuggerActor.interrupt(final DebuggableMessage message)", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "(final String sessionId)", "modifiers": "private", "return": "IDebuggerSession", "signature": "IDebuggerSession getSession(final String sessionId)", "full_signature": "private IDebuggerSession getSession(final String sessionId)", "class_method_signature": "DebuggerActor.getSession(final String sessionId)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Debugger/DebuggerActor/src/main/java/info/smart_tools/smartactors/debugger/actor/DebuggerActor.java"}, "focal_method": {"identifier": "interrupt", "parameters": "(final DebuggableMessage message)", "modifiers": "public", "return": "void", "body": "public void interrupt(final DebuggableMessage message)\n            throws ReadValueException, SessionNotFoundException, InterruptProcessingException {\n        getSession(message.getSessionId()).handleInterrupt(message.getProcessor());\n    }", "signature": "void interrupt(final DebuggableMessage message)", "full_signature": "public void interrupt(final DebuggableMessage message)", "class_method_signature": "DebuggerActor.interrupt(final DebuggableMessage message)", "testcase": false, "constructor": false, "invocations": ["handleInterrupt", "getSession", "getSessionId", "getProcessor"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}