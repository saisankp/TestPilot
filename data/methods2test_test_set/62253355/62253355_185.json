{"test_class": {"identifier": "CatalogRestTest", "superclass": "extends MobiRestTestNg", "interfaces": "", "fields": [{"original_string": "private CatalogRest rest;", "modifier": "private", "type": "CatalogRest", "declarator": "rest", "var_name": "rest"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private OrmFactory<Record> recordFactory;", "modifier": "private", "type": "OrmFactory<Record>", "declarator": "recordFactory", "var_name": "recordFactory"}, {"original_string": "private OrmFactory<UnversionedRecord> unversionedRecordFactory;", "modifier": "private", "type": "OrmFactory<UnversionedRecord>", "declarator": "unversionedRecordFactory", "var_name": "unversionedRecordFactory"}, {"original_string": "private OrmFactory<VersionedRecord> versionedRecordFactory;", "modifier": "private", "type": "OrmFactory<VersionedRecord>", "declarator": "versionedRecordFactory", "var_name": "versionedRecordFactory"}, {"original_string": "private OrmFactory<VersionedRDFRecord> versionedRDFRecordFactory;", "modifier": "private", "type": "OrmFactory<VersionedRDFRecord>", "declarator": "versionedRDFRecordFactory", "var_name": "versionedRDFRecordFactory"}, {"original_string": "private OrmFactory<MappingRecord> mappingRecordFactory;", "modifier": "private", "type": "OrmFactory<MappingRecord>", "declarator": "mappingRecordFactory", "var_name": "mappingRecordFactory"}, {"original_string": "private OrmFactory<Distribution> distributionFactory;", "modifier": "private", "type": "OrmFactory<Distribution>", "declarator": "distributionFactory", "var_name": "distributionFactory"}, {"original_string": "private OrmFactory<Version> versionFactory;", "modifier": "private", "type": "OrmFactory<Version>", "declarator": "versionFactory", "var_name": "versionFactory"}, {"original_string": "private OrmFactory<Tag> tagFactory;", "modifier": "private", "type": "OrmFactory<Tag>", "declarator": "tagFactory", "var_name": "tagFactory"}, {"original_string": "private OrmFactory<Branch> branchFactory;", "modifier": "private", "type": "OrmFactory<Branch>", "declarator": "branchFactory", "var_name": "branchFactory"}, {"original_string": "private OrmFactory<UserBranch> userBranchFactory;", "modifier": "private", "type": "OrmFactory<UserBranch>", "declarator": "userBranchFactory", "var_name": "userBranchFactory"}, {"original_string": "private Catalog localCatalog;", "modifier": "private", "type": "Catalog", "declarator": "localCatalog", "var_name": "localCatalog"}, {"original_string": "private Catalog distributedCatalog;", "modifier": "private", "type": "Catalog", "declarator": "distributedCatalog", "var_name": "distributedCatalog"}, {"original_string": "private Record testRecord;", "modifier": "private", "type": "Record", "declarator": "testRecord", "var_name": "testRecord"}, {"original_string": "private UnversionedRecord testUnversionedRecord;", "modifier": "private", "type": "UnversionedRecord", "declarator": "testUnversionedRecord", "var_name": "testUnversionedRecord"}, {"original_string": "private VersionedRecord testVersionedRecord;", "modifier": "private", "type": "VersionedRecord", "declarator": "testVersionedRecord", "var_name": "testVersionedRecord"}, {"original_string": "private VersionedRDFRecord testVersionedRDFRecord;", "modifier": "private", "type": "VersionedRDFRecord", "declarator": "testVersionedRDFRecord", "var_name": "testVersionedRDFRecord"}, {"original_string": "private MappingRecord testMappingRecord;", "modifier": "private", "type": "MappingRecord", "declarator": "testMappingRecord", "var_name": "testMappingRecord"}, {"original_string": "private Distribution testDistribution;", "modifier": "private", "type": "Distribution", "declarator": "testDistribution", "var_name": "testDistribution"}, {"original_string": "private Version testVersion;", "modifier": "private", "type": "Version", "declarator": "testVersion", "var_name": "testVersion"}, {"original_string": "private Tag testTag;", "modifier": "private", "type": "Tag", "declarator": "testTag", "var_name": "testTag"}, {"original_string": "private List<Commit> testCommits;", "modifier": "private", "type": "List<Commit>", "declarator": "testCommits", "var_name": "testCommits"}, {"original_string": "private InProgressCommit testInProgressCommit;", "modifier": "private", "type": "InProgressCommit", "declarator": "testInProgressCommit", "var_name": "testInProgressCommit"}, {"original_string": "private Branch testBranch;", "modifier": "private", "type": "Branch", "declarator": "testBranch", "var_name": "testBranch"}, {"original_string": "private UserBranch testUserBranch;", "modifier": "private", "type": "UserBranch", "declarator": "testUserBranch", "var_name": "testUserBranch"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private CreateActivity createActivity;", "modifier": "private", "type": "CreateActivity", "declarator": "createActivity", "var_name": "createActivity"}, {"original_string": "private DeleteActivity deleteActivity;", "modifier": "private", "type": "DeleteActivity", "declarator": "deleteActivity", "var_name": "deleteActivity"}, {"original_string": "private Model compiledResource;", "modifier": "private", "type": "Model", "declarator": "compiledResource", "var_name": "compiledResource"}, {"original_string": "private Model compiledResourceWithChanges;", "modifier": "private", "type": "Model", "declarator": "compiledResourceWithChanges", "var_name": "compiledResourceWithChanges"}, {"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static final String ERROR_IRI = \"http://mobi.com/error\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_IRI = \"http://mobi.com/error\"", "var_name": "ERROR_IRI"}, {"original_string": "private static final String LOCAL_IRI = \"http://mobi.com/catalogs/local\";", "modifier": "private static final", "type": "String", "declarator": "LOCAL_IRI = \"http://mobi.com/catalogs/local\"", "var_name": "LOCAL_IRI"}, {"original_string": "private static final String DISTRIBUTED_IRI = \"http://mobi.com/catalogs/distributed\";", "modifier": "private static final", "type": "String", "declarator": "DISTRIBUTED_IRI = \"http://mobi.com/catalogs/distributed\"", "var_name": "DISTRIBUTED_IRI"}, {"original_string": "private static final String RECORD_IRI = \"http://mobi.com/records/test\";", "modifier": "private static final", "type": "String", "declarator": "RECORD_IRI = \"http://mobi.com/records/test\"", "var_name": "RECORD_IRI"}, {"original_string": "private static final String DISTRIBUTION_IRI = \"http://mobi.com/distributions/test\";", "modifier": "private static final", "type": "String", "declarator": "DISTRIBUTION_IRI = \"http://mobi.com/distributions/test\"", "var_name": "DISTRIBUTION_IRI"}, {"original_string": "private static final String VERSION_IRI = \"http://mobi.com/versions/test\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_IRI = \"http://mobi.com/versions/test\"", "var_name": "VERSION_IRI"}, {"original_string": "private static final String[] COMMIT_IRIS = new String[]{\n            \"http://mobi.com/commits/0\",\n            \"http://mobi.com/commits/1\",\n            \"http://mobi.com/commits/2\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "COMMIT_IRIS = new String[]{\n            \"http://mobi.com/commits/0\",\n            \"http://mobi.com/commits/1\",\n            \"http://mobi.com/commits/2\"\n    }", "var_name": "COMMIT_IRIS"}, {"original_string": "private static final String BRANCH_IRI = \"http://mobi.com/branches/test\";", "modifier": "private static final", "type": "String", "declarator": "BRANCH_IRI = \"http://mobi.com/branches/test\"", "var_name": "BRANCH_IRI"}, {"original_string": "private static final String USER_IRI = \"http://mobi.com/users/tester\";", "modifier": "private static final", "type": "String", "declarator": "USER_IRI = \"http://mobi.com/users/tester\"", "var_name": "USER_IRI"}, {"original_string": "private static final String ACTIVITY_IRI = \"http://mobi.com/activity/test\";", "modifier": "private static final", "type": "String", "declarator": "ACTIVITY_IRI = \"http://mobi.com/activity/test\"", "var_name": "ACTIVITY_IRI"}, {"original_string": "private static final String CONFLICT_IRI = \"http://mobi.com/conflicts/test\";", "modifier": "private static final", "type": "String", "declarator": "CONFLICT_IRI = \"http://mobi.com/conflicts/test\"", "var_name": "CONFLICT_IRI"}, {"original_string": "@Mock\n    private CatalogManager catalogManager;", "modifier": "@Mock\n    private", "type": "CatalogManager", "declarator": "catalogManager", "var_name": "catalogManager"}, {"original_string": "@Mock\n    private CatalogConfigProvider configProvider;", "modifier": "@Mock\n    private", "type": "CatalogConfigProvider", "declarator": "configProvider", "var_name": "configProvider"}, {"original_string": "@Mock\n    private VersioningManager versioningManager;", "modifier": "@Mock\n    private", "type": "VersioningManager", "declarator": "versioningManager", "var_name": "versioningManager"}, {"original_string": "@Mock\n    private EngineManager engineManager;", "modifier": "@Mock\n    private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "@Mock\n    private SesameTransformer transformer;", "modifier": "@Mock\n    private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Mock\n    private PaginatedSearchResults<Record> results;", "modifier": "@Mock\n    private", "type": "PaginatedSearchResults<Record>", "declarator": "results", "var_name": "results"}, {"original_string": "@Mock\n    private Conflict conflict;", "modifier": "@Mock\n    private", "type": "Conflict", "declarator": "conflict", "var_name": "conflict"}, {"original_string": "@Mock\n    private Difference difference;", "modifier": "@Mock\n    private", "type": "Difference", "declarator": "difference", "var_name": "difference"}, {"original_string": "@Mock\n    private BNodeService bNodeService;", "modifier": "@Mock\n    private", "type": "BNodeService", "declarator": "bNodeService", "var_name": "bNodeService"}, {"original_string": "@Mock\n    private CatalogProvUtils provUtils;", "modifier": "@Mock\n    private", "type": "CatalogProvUtils", "declarator": "provUtils", "var_name": "provUtils"}, {"original_string": "@Mock\n    private CatalogUtilsService catalogUtils;", "modifier": "@Mock\n    private", "type": "CatalogUtilsService", "declarator": "catalogUtils", "var_name": "catalogUtils"}, {"original_string": "@Mock\n    private Repository repo;", "modifier": "@Mock\n    private", "type": "Repository", "declarator": "repo", "var_name": "repo"}, {"original_string": "@Mock\n    private RepositoryConnection conn;", "modifier": "@Mock\n    private", "type": "RepositoryConnection", "declarator": "conn", "var_name": "conn"}], "file": "com.mobi.catalog.rest/src/test/java/com/mobi/catalog/rest/CatalogRestTest.java"}, "test_case": {"identifier": "getUnversionedDistributionWithIncorrectPathTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getUnversionedDistributionWithIncorrectPathTest() {\n        // Setup:\n        doThrow(new IllegalArgumentException()).when(catalogManager).getUnversionedDistribution(vf.createIRI(LOCAL_IRI), vf.createIRI(RECORD_IRI), vf.createIRI(ERROR_IRI));\n\n        Response response = target().path(\"catalogs/\" + encode(LOCAL_IRI) + \"/records/\" + encode(RECORD_IRI)\n                + \"/distributions/\" + encode(ERROR_IRI))\n                .request().get();\n        assertEquals(response.getStatus(), 400);\n    }", "signature": "void getUnversionedDistributionWithIncorrectPathTest()", "full_signature": "@Test public void getUnversionedDistributionWithIncorrectPathTest()", "class_method_signature": "CatalogRestTest.getUnversionedDistributionWithIncorrectPathTest()", "testcase": true, "constructor": false, "invocations": ["getUnversionedDistribution", "when", "doThrow", "createIRI", "createIRI", "createIRI", "get", "request", "path", "target", "encode", "encode", "encode", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "CatalogRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CatalogRest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CatalogRest.class)", "var_name": "LOG"}, {"original_string": "private static final Set<String> SORT_RESOURCES;", "modifier": "private static final", "type": "Set<String>", "declarator": "SORT_RESOURCES", "var_name": "SORT_RESOURCES"}, {"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private OrmFactoryRegistry factoryRegistry;", "modifier": "private", "type": "OrmFactoryRegistry", "declarator": "factoryRegistry", "var_name": "factoryRegistry"}, {"original_string": "private SesameTransformer transformer;", "modifier": "private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private CatalogConfigProvider configProvider;", "modifier": "private", "type": "CatalogConfigProvider", "declarator": "configProvider", "var_name": "configProvider"}, {"original_string": "private CatalogManager catalogManager;", "modifier": "private", "type": "CatalogManager", "declarator": "catalogManager", "var_name": "catalogManager"}, {"original_string": "private CatalogUtilsService catalogUtilsService;", "modifier": "private", "type": "CatalogUtilsService", "declarator": "catalogUtilsService", "var_name": "catalogUtilsService"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private VersioningManager versioningManager;", "modifier": "private", "type": "VersioningManager", "declarator": "versioningManager", "var_name": "versioningManager"}, {"original_string": "private BNodeService bNodeService;", "modifier": "private", "type": "BNodeService", "declarator": "bNodeService", "var_name": "bNodeService"}, {"original_string": "private CatalogProvUtils provUtils;", "modifier": "private", "type": "CatalogProvUtils", "declarator": "provUtils", "var_name": "provUtils"}, {"original_string": "protected EngineManager engineManager;", "modifier": "protected", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "protected DistributionFactory distributionFactory;", "modifier": "protected", "type": "DistributionFactory", "declarator": "distributionFactory", "var_name": "distributionFactory"}, {"original_string": "protected CommitFactory commitFactory;", "modifier": "protected", "type": "CommitFactory", "declarator": "commitFactory", "var_name": "commitFactory"}, {"original_string": "protected InProgressCommitFactory inProgressCommitFactory;", "modifier": "protected", "type": "InProgressCommitFactory", "declarator": "inProgressCommitFactory", "var_name": "inProgressCommitFactory"}], "methods": [{"identifier": "setEngineManager", "parameters": "(EngineManager engineManager)", "modifiers": "@Reference", "return": "void", "signature": "void setEngineManager(EngineManager engineManager)", "full_signature": "@Reference void setEngineManager(EngineManager engineManager)", "class_method_signature": "CatalogRest.setEngineManager(EngineManager engineManager)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(SesameTransformer transformer)", "modifiers": "@Reference", "return": "void", "signature": "void setTransformer(SesameTransformer transformer)", "full_signature": "@Reference void setTransformer(SesameTransformer transformer)", "class_method_signature": "CatalogRest.setTransformer(SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "setConfigProvider", "parameters": "(CatalogConfigProvider configProvider)", "modifiers": "@Reference", "return": "void", "signature": "void setConfigProvider(CatalogConfigProvider configProvider)", "full_signature": "@Reference void setConfigProvider(CatalogConfigProvider configProvider)", "class_method_signature": "CatalogRest.setConfigProvider(CatalogConfigProvider configProvider)", "testcase": false, "constructor": false}, {"identifier": "setCatalogManager", "parameters": "(CatalogManager catalogManager)", "modifiers": "@Reference", "return": "void", "signature": "void setCatalogManager(CatalogManager catalogManager)", "full_signature": "@Reference void setCatalogManager(CatalogManager catalogManager)", "class_method_signature": "CatalogRest.setCatalogManager(CatalogManager catalogManager)", "testcase": false, "constructor": false}, {"identifier": "setCatalogUtilsService", "parameters": "(CatalogUtilsService catalogUtilsService)", "modifiers": "@Reference", "return": "void", "signature": "void setCatalogUtilsService(CatalogUtilsService catalogUtilsService)", "full_signature": "@Reference void setCatalogUtilsService(CatalogUtilsService catalogUtilsService)", "class_method_signature": "CatalogRest.setCatalogUtilsService(CatalogUtilsService catalogUtilsService)", "testcase": false, "constructor": false}, {"identifier": "setVf", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setVf(ValueFactory vf)", "full_signature": "@Reference void setVf(ValueFactory vf)", "class_method_signature": "CatalogRest.setVf(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setMf", "parameters": "(ModelFactory mf)", "modifiers": "@Reference", "return": "void", "signature": "void setMf(ModelFactory mf)", "full_signature": "@Reference void setMf(ModelFactory mf)", "class_method_signature": "CatalogRest.setMf(ModelFactory mf)", "testcase": false, "constructor": false}, {"identifier": "setFactoryRegistry", "parameters": "(OrmFactoryRegistry factoryRegistry)", "modifiers": "@Reference", "return": "void", "signature": "void setFactoryRegistry(OrmFactoryRegistry factoryRegistry)", "full_signature": "@Reference void setFactoryRegistry(OrmFactoryRegistry factoryRegistry)", "class_method_signature": "CatalogRest.setFactoryRegistry(OrmFactoryRegistry factoryRegistry)", "testcase": false, "constructor": false}, {"identifier": "setDistributionFactory", "parameters": "(DistributionFactory distributionFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setDistributionFactory(DistributionFactory distributionFactory)", "full_signature": "@Reference void setDistributionFactory(DistributionFactory distributionFactory)", "class_method_signature": "CatalogRest.setDistributionFactory(DistributionFactory distributionFactory)", "testcase": false, "constructor": false}, {"identifier": "setCommitFactory", "parameters": "(CommitFactory commitFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setCommitFactory(CommitFactory commitFactory)", "full_signature": "@Reference void setCommitFactory(CommitFactory commitFactory)", "class_method_signature": "CatalogRest.setCommitFactory(CommitFactory commitFactory)", "testcase": false, "constructor": false}, {"identifier": "setInProgressCommitFactory", "parameters": "(InProgressCommitFactory inProgressCommitFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setInProgressCommitFactory(InProgressCommitFactory inProgressCommitFactory)", "full_signature": "@Reference void setInProgressCommitFactory(InProgressCommitFactory inProgressCommitFactory)", "class_method_signature": "CatalogRest.setInProgressCommitFactory(InProgressCommitFactory inProgressCommitFactory)", "testcase": false, "constructor": false}, {"identifier": "setVersioningManager", "parameters": "(VersioningManager versioningManager)", "modifiers": "@Reference", "return": "void", "signature": "void setVersioningManager(VersioningManager versioningManager)", "full_signature": "@Reference void setVersioningManager(VersioningManager versioningManager)", "class_method_signature": "CatalogRest.setVersioningManager(VersioningManager versioningManager)", "testcase": false, "constructor": false}, {"identifier": "setbNodeService", "parameters": "(BNodeService bNodeService)", "modifiers": "@Reference", "return": "void", "signature": "void setbNodeService(BNodeService bNodeService)", "full_signature": "@Reference void setbNodeService(BNodeService bNodeService)", "class_method_signature": "CatalogRest.setbNodeService(BNodeService bNodeService)", "testcase": false, "constructor": false}, {"identifier": "setProvUtils", "parameters": "(CatalogProvUtils provUtils)", "modifiers": "@Reference", "return": "void", "signature": "void setProvUtils(CatalogProvUtils provUtils)", "full_signature": "@Reference void setProvUtils(CatalogProvUtils provUtils)", "class_method_signature": "CatalogRest.setProvUtils(CatalogProvUtils provUtils)", "testcase": false, "constructor": false}, {"identifier": "getCatalogs", "parameters": "(@QueryParam(\"type\") String catalogType)", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the distributed and local Catalogs.\") public", "return": "Response", "signature": "Response getCatalogs(@QueryParam(\"type\") String catalogType)", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the distributed and local Catalogs.\") public Response getCatalogs(@QueryParam(\"type\") String catalogType)", "class_method_signature": "CatalogRest.getCatalogs(@QueryParam(\"type\") String catalogType)", "testcase": false, "constructor": false}, {"identifier": "getCatalog", "parameters": "(@PathParam(\"catalogId\") String catalogId)", "modifiers": "@GET @Path(\"{catalogId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Catalog specified by the provided ID.\") public", "return": "Response", "signature": "Response getCatalog(@PathParam(\"catalogId\") String catalogId)", "full_signature": "@GET @Path(\"{catalogId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Catalog specified by the provided ID.\") public Response getCatalog(@PathParam(\"catalogId\") String catalogId)", "class_method_signature": "CatalogRest.getCatalog(@PathParam(\"catalogId\") String catalogId)", "testcase": false, "constructor": false}, {"identifier": "getRecords", "parameters": "(@Context UriInfo uriInfo,\n                        @PathParam(\"catalogId\") String catalogId,\n                        @QueryParam(\"sort\") String sort,\n                        @QueryParam(\"type\") String recordType,\n                        @QueryParam(\"offset\") int offset,\n                        @QueryParam(\"limit\") int limit,\n                        @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                        @QueryParam(\"searchText\") String searchText)", "modifiers": "@GET @Path(\"{catalogId}/records\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Records in the Catalog.\") public", "return": "Response", "signature": "Response getRecords(@Context UriInfo uriInfo,\n                        @PathParam(\"catalogId\") String catalogId,\n                        @QueryParam(\"sort\") String sort,\n                        @QueryParam(\"type\") String recordType,\n                        @QueryParam(\"offset\") int offset,\n                        @QueryParam(\"limit\") int limit,\n                        @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                        @QueryParam(\"searchText\") String searchText)", "full_signature": "@GET @Path(\"{catalogId}/records\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Records in the Catalog.\") public Response getRecords(@Context UriInfo uriInfo,\n                        @PathParam(\"catalogId\") String catalogId,\n                        @QueryParam(\"sort\") String sort,\n                        @QueryParam(\"type\") String recordType,\n                        @QueryParam(\"offset\") int offset,\n                        @QueryParam(\"limit\") int limit,\n                        @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                        @QueryParam(\"searchText\") String searchText)", "class_method_signature": "CatalogRest.getRecords(@Context UriInfo uriInfo,\n                        @PathParam(\"catalogId\") String catalogId,\n                        @QueryParam(\"sort\") String sort,\n                        @QueryParam(\"type\") String recordType,\n                        @QueryParam(\"offset\") int offset,\n                        @QueryParam(\"limit\") int limit,\n                        @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                        @QueryParam(\"searchText\") String searchText)", "testcase": false, "constructor": false}, {"identifier": "createRecord", "parameters": "(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"identifier\") String identifier,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"markdown\") String markdown,\n                          @FormDataParam(\"keywords\") List<FormDataBodyPart> keywords)", "modifiers": "@POST @Path(\"{catalogId}/records\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Record in the Catalog.\") @ActionAttributes( @AttributeValue(id = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\", value = \"type\", type = ValueType.BODY)) @ResourceId(value = \"catalogId\", type = ValueType.PATH) public", "return": "Response", "signature": "Response createRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"identifier\") String identifier,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"markdown\") String markdown,\n                          @FormDataParam(\"keywords\") List<FormDataBodyPart> keywords)", "full_signature": "@POST @Path(\"{catalogId}/records\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Record in the Catalog.\") @ActionAttributes( @AttributeValue(id = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\", value = \"type\", type = ValueType.BODY)) @ResourceId(value = \"catalogId\", type = ValueType.PATH) public Response createRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"identifier\") String identifier,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"markdown\") String markdown,\n                          @FormDataParam(\"keywords\") List<FormDataBodyPart> keywords)", "class_method_signature": "CatalogRest.createRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"identifier\") String identifier,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"markdown\") String markdown,\n                          @FormDataParam(\"keywords\") List<FormDataBodyPart> keywords)", "testcase": false, "constructor": false}, {"identifier": "getRecord", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Catalog record by its ID.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getRecord(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the Catalog record by its ID.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getRecord(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.getRecord(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "deleteRecord", "parameters": "(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes the Catalog Record by its ID.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response deleteRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes the Catalog Record by its ID.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response deleteRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.deleteRecord(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "updateRecord", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          String newRecordJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates the Catalog Record by its ID using the provided Record JSON-LD.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response updateRecord(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          String newRecordJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates the Catalog Record by its ID using the provided Record JSON-LD.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response updateRecord(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          String newRecordJson)", "class_method_signature": "CatalogRest.updateRecord(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          String newRecordJson)", "testcase": false, "constructor": false}, {"identifier": "getUnversionedDistributions", "parameters": "(@Context UriInfo uriInfo,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @QueryParam(\"sort\") String sort,\n                                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/distributions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the list of Distributions associated with an UnversionedRecord.\") public", "return": "Response", "signature": "Response getUnversionedDistributions(@Context UriInfo uriInfo,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @QueryParam(\"sort\") String sort,\n                                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/distributions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves the list of Distributions associated with an UnversionedRecord.\") public Response getUnversionedDistributions(@Context UriInfo uriInfo,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @QueryParam(\"sort\") String sort,\n                                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "class_method_signature": "CatalogRest.getUnversionedDistributions(@Context UriInfo uriInfo,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @QueryParam(\"sort\") String sort,\n                                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "testcase": false, "constructor": false}, {"identifier": "createUnversionedDistribution", "parameters": "(@Context ContainerRequestContext context,\n                                           @PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @FormDataParam(\"title\") String title,\n                                           @FormDataParam(\"description\") String description,\n                                           @FormDataParam(\"format\") String format,\n                                           @FormDataParam(\"accessURL\") String accessURL,\n                                           @FormDataParam(\"downloadURL\") String downloadURL)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/distributions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Distribution for the provided UnversionedRecord.\") public", "return": "Response", "signature": "Response createUnversionedDistribution(@Context ContainerRequestContext context,\n                                           @PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @FormDataParam(\"title\") String title,\n                                           @FormDataParam(\"description\") String description,\n                                           @FormDataParam(\"format\") String format,\n                                           @FormDataParam(\"accessURL\") String accessURL,\n                                           @FormDataParam(\"downloadURL\") String downloadURL)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/distributions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a new Distribution for the provided UnversionedRecord.\") public Response createUnversionedDistribution(@Context ContainerRequestContext context,\n                                           @PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @FormDataParam(\"title\") String title,\n                                           @FormDataParam(\"description\") String description,\n                                           @FormDataParam(\"format\") String format,\n                                           @FormDataParam(\"accessURL\") String accessURL,\n                                           @FormDataParam(\"downloadURL\") String downloadURL)", "class_method_signature": "CatalogRest.createUnversionedDistribution(@Context ContainerRequestContext context,\n                                           @PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @FormDataParam(\"title\") String title,\n                                           @FormDataParam(\"description\") String description,\n                                           @FormDataParam(\"format\") String format,\n                                           @FormDataParam(\"accessURL\") String accessURL,\n                                           @FormDataParam(\"downloadURL\") String downloadURL)", "testcase": false, "constructor": false}, {"identifier": "getUnversionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution of an UnversionedRecord.\") public", "return": "Response", "signature": "Response getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution of an UnversionedRecord.\") public Response getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "class_method_signature": "CatalogRest.getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "testcase": false, "constructor": false}, {"identifier": "deleteUnversionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Distribution of an UnversionedRecord.\") public", "return": "Response", "signature": "Response deleteUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Distribution of an UnversionedRecord.\") public Response deleteUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId)", "class_method_signature": "CatalogRest.deleteUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId)", "testcase": false, "constructor": false}, {"identifier": "updateUnversionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId,\n                                           String newDistributionJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Distribution of an UnversionedRecord.\") public", "return": "Response", "signature": "Response updateUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId,\n                                           String newDistributionJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Distribution of an UnversionedRecord.\") public Response updateUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId,\n                                           String newDistributionJson)", "class_method_signature": "CatalogRest.updateUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                           @PathParam(\"recordId\") String recordId,\n                                           @PathParam(\"distributionId\") String distributionId,\n                                           String newDistributionJson)", "testcase": false, "constructor": false}, {"identifier": "getVersions", "parameters": "(@Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a list of Versions for a VersionedRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getVersions(@Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a list of Versions for a VersionedRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getVersions(@Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "class_method_signature": "CatalogRest.getVersions(@Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "testcase": false, "constructor": false}, {"identifier": "createVersion", "parameters": "(@Context ContainerRequestContext context,\n                           @PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @FormDataParam(\"type\") String typeIRI,\n                           @FormDataParam(\"title\") String title,\n                           @FormDataParam(\"description\") String description)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/versions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Version for the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response createVersion(@Context ContainerRequestContext context,\n                           @PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @FormDataParam(\"type\") String typeIRI,\n                           @FormDataParam(\"title\") String title,\n                           @FormDataParam(\"description\") String description)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/versions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Version for the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response createVersion(@Context ContainerRequestContext context,\n                           @PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @FormDataParam(\"type\") String typeIRI,\n                           @FormDataParam(\"title\") String title,\n                           @FormDataParam(\"description\") String description)", "class_method_signature": "CatalogRest.createVersion(@Context ContainerRequestContext context,\n                           @PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @FormDataParam(\"type\") String typeIRI,\n                           @FormDataParam(\"title\") String title,\n                           @FormDataParam(\"description\") String description)", "testcase": false, "constructor": false}, {"identifier": "createTag", "parameters": "(@Context ContainerRequestContext context,\n                       @PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @FormDataParam(\"title\") String title,\n                       @FormDataParam(\"description\") String description,\n                       @FormDataParam(\"iri\") String iri,\n                       @FormDataParam(\"commit\") String commitId)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/tags\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Tag for the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response createTag(@Context ContainerRequestContext context,\n                       @PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @FormDataParam(\"title\") String title,\n                       @FormDataParam(\"description\") String description,\n                       @FormDataParam(\"iri\") String iri,\n                       @FormDataParam(\"commit\") String commitId)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/tags\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Tag for the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response createTag(@Context ContainerRequestContext context,\n                       @PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @FormDataParam(\"title\") String title,\n                       @FormDataParam(\"description\") String description,\n                       @FormDataParam(\"iri\") String iri,\n                       @FormDataParam(\"commit\") String commitId)", "class_method_signature": "CatalogRest.createTag(@Context ContainerRequestContext context,\n                       @PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @FormDataParam(\"title\") String title,\n                       @FormDataParam(\"description\") String description,\n                       @FormDataParam(\"iri\") String iri,\n                       @FormDataParam(\"commit\") String commitId)", "testcase": false, "constructor": false}, {"identifier": "getLatestVersion", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions/latest\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the latest Version of a VersionedRecord.\") public", "return": "Response", "signature": "Response getLatestVersion(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions/latest\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the latest Version of a VersionedRecord.\") public Response getLatestVersion(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.getLatestVersion(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                        @PathParam(\"recordId\") String recordId,\n                        @PathParam(\"versionId\") String versionId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Version for the identified VersionedRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getVersion(@PathParam(\"catalogId\") String catalogId,\n                        @PathParam(\"recordId\") String recordId,\n                        @PathParam(\"versionId\") String versionId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Version for the identified VersionedRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getVersion(@PathParam(\"catalogId\") String catalogId,\n                        @PathParam(\"recordId\") String recordId,\n                        @PathParam(\"versionId\") String versionId)", "class_method_signature": "CatalogRest.getVersion(@PathParam(\"catalogId\") String catalogId,\n                        @PathParam(\"recordId\") String recordId,\n                        @PathParam(\"versionId\") String versionId)", "testcase": false, "constructor": false}, {"identifier": "deleteVersion", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Version from the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response deleteVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Version from the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response deleteVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId)", "class_method_signature": "CatalogRest.deleteVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId)", "testcase": false, "constructor": false}, {"identifier": "updateVersion", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId,\n                           String newVersionJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Version of the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response updateVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId,\n                           String newVersionJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}/versions/{versionId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Version of the identified VersionedRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response updateVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId,\n                           String newVersionJson)", "class_method_signature": "CatalogRest.updateVersion(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"versionId\") String versionId,\n                           String newVersionJson)", "testcase": false, "constructor": false}, {"identifier": "getVersionedDistributions", "parameters": "(@Context UriInfo uriInfo,\n                                       @PathParam(\"catalogId\") String catalogId,\n                                       @PathParam(\"recordId\") String recordId,\n                                       @PathParam(\"versionId\") String versionId,\n                                       @QueryParam(\"sort\") String sort,\n                                       @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                       @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                       @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the list of all Distributions for the identified Version.\") public", "return": "Response", "signature": "Response getVersionedDistributions(@Context UriInfo uriInfo,\n                                       @PathParam(\"catalogId\") String catalogId,\n                                       @PathParam(\"recordId\") String recordId,\n                                       @PathParam(\"versionId\") String versionId,\n                                       @QueryParam(\"sort\") String sort,\n                                       @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                       @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                       @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the list of all Distributions for the identified Version.\") public Response getVersionedDistributions(@Context UriInfo uriInfo,\n                                       @PathParam(\"catalogId\") String catalogId,\n                                       @PathParam(\"recordId\") String recordId,\n                                       @PathParam(\"versionId\") String versionId,\n                                       @QueryParam(\"sort\") String sort,\n                                       @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                       @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                       @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "class_method_signature": "CatalogRest.getVersionedDistributions(@Context UriInfo uriInfo,\n                                       @PathParam(\"catalogId\") String catalogId,\n                                       @PathParam(\"recordId\") String recordId,\n                                       @PathParam(\"versionId\") String versionId,\n                                       @QueryParam(\"sort\") String sort,\n                                       @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                                       @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                                       @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc)", "testcase": false, "constructor": false}, {"identifier": "createVersionedDistribution", "parameters": "(@Context ContainerRequestContext context,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @FormDataParam(\"title\") String title,\n                                         @FormDataParam(\"description\") String description,\n                                         @FormDataParam(\"format\") String format,\n                                         @FormDataParam(\"accessURL\") String accessURL,\n                                         @FormDataParam(\"downloadURL\") String downloadURL)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Distribution for the identified Version.\") public", "return": "Response", "signature": "Response createVersionedDistribution(@Context ContainerRequestContext context,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @FormDataParam(\"title\") String title,\n                                         @FormDataParam(\"description\") String description,\n                                         @FormDataParam(\"format\") String format,\n                                         @FormDataParam(\"accessURL\") String accessURL,\n                                         @FormDataParam(\"downloadURL\") String downloadURL)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Distribution for the identified Version.\") public Response createVersionedDistribution(@Context ContainerRequestContext context,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @FormDataParam(\"title\") String title,\n                                         @FormDataParam(\"description\") String description,\n                                         @FormDataParam(\"format\") String format,\n                                         @FormDataParam(\"accessURL\") String accessURL,\n                                         @FormDataParam(\"downloadURL\") String downloadURL)", "class_method_signature": "CatalogRest.createVersionedDistribution(@Context ContainerRequestContext context,\n                                         @PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @FormDataParam(\"title\") String title,\n                                         @FormDataParam(\"description\") String description,\n                                         @FormDataParam(\"format\") String format,\n                                         @FormDataParam(\"accessURL\") String accessURL,\n                                         @FormDataParam(\"downloadURL\") String downloadURL)", "testcase": false, "constructor": false}, {"identifier": "getVersionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"versionId\") String versionId,\n                                      @PathParam(\"distributionId\") String distributionId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution for the identified Version.\") public", "return": "Response", "signature": "Response getVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"versionId\") String versionId,\n                                      @PathParam(\"distributionId\") String distributionId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution for the identified Version.\") public Response getVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"versionId\") String versionId,\n                                      @PathParam(\"distributionId\") String distributionId)", "class_method_signature": "CatalogRest.getVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"versionId\") String versionId,\n                                      @PathParam(\"distributionId\") String distributionId)", "testcase": false, "constructor": false}, {"identifier": "deleteVersionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Distribution of the identified Version.\") public", "return": "Response", "signature": "Response deleteVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Distribution of the identified Version.\") public Response deleteVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId)", "class_method_signature": "CatalogRest.deleteVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId)", "testcase": false, "constructor": false}, {"identifier": "updateVersionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId,\n                                         String newDistributionJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Distribution of the identified Version.\") public", "return": "Response", "signature": "Response updateVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId,\n                                         String newDistributionJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Distribution of the identified Version.\") public Response updateVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId,\n                                         String newDistributionJson)", "class_method_signature": "CatalogRest.updateVersionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                         @PathParam(\"recordId\") String recordId,\n                                         @PathParam(\"versionId\") String versionId,\n                                         @PathParam(\"distributionId\") String distributionId,\n                                         String newDistributionJson)", "testcase": false, "constructor": false}, {"identifier": "getVersionCommit", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId,\n                              @PathParam(\"versionId\") String versionId,\n                              @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the Commit associated with the identified Version.\") public", "return": "Response", "signature": "Response getVersionCommit(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId,\n                              @PathParam(\"versionId\") String versionId,\n                              @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/versions/{versionId}/commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the Commit associated with the identified Version.\") public Response getVersionCommit(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId,\n                              @PathParam(\"versionId\") String versionId,\n                              @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "class_method_signature": "CatalogRest.getVersionCommit(@PathParam(\"catalogId\") String catalogId,\n                              @PathParam(\"recordId\") String recordId,\n                              @PathParam(\"versionId\") String versionId,\n                              @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "testcase": false, "constructor": false}, {"identifier": "getBranches", "parameters": "(@Context ContainerRequestContext context,\n                         @Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                         @DefaultValue(\"false\") @QueryParam(\"applyUserFilter\") boolean applyUserFilter)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets list of Branches associated with a specific VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getBranches(@Context ContainerRequestContext context,\n                         @Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                         @DefaultValue(\"false\") @QueryParam(\"applyUserFilter\") boolean applyUserFilter)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets list of Branches associated with a specific VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getBranches(@Context ContainerRequestContext context,\n                         @Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                         @DefaultValue(\"false\") @QueryParam(\"applyUserFilter\") boolean applyUserFilter)", "class_method_signature": "CatalogRest.getBranches(@Context ContainerRequestContext context,\n                         @Context UriInfo uriInfo,\n                         @PathParam(\"catalogId\") String catalogId,\n                         @PathParam(\"recordId\") String recordId,\n                         @QueryParam(\"sort\") String sort,\n                         @DefaultValue(\"0\") @QueryParam(\"offset\") int offset,\n                         @DefaultValue(\"100\") @QueryParam(\"limit\") int limit,\n                         @DefaultValue(\"true\") @QueryParam(\"ascending\") boolean asc,\n                         @DefaultValue(\"false\") @QueryParam(\"applyUserFilter\") boolean applyUserFilter)", "testcase": false, "constructor": false}, {"identifier": "createBranch", "parameters": "(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"commitId\") String commitId)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/branches\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response createBranch(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"commitId\") String commitId)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/branches\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Creates a branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response createBranch(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"commitId\") String commitId)", "class_method_signature": "CatalogRest.createBranch(@Context ContainerRequestContext context,\n                          @PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @FormDataParam(\"type\") String typeIRI,\n                          @FormDataParam(\"title\") String title,\n                          @FormDataParam(\"description\") String description,\n                          @FormDataParam(\"commitId\") String commitId)", "testcase": false, "constructor": false}, {"identifier": "getMasterBranch", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/master\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the master Branch of a VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getMasterBranch(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/master\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the master Branch of a VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getMasterBranch(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.getMasterBranch(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "getBranch", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @PathParam(\"branchId\") String branchId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Get a specific Branch for a specific VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getBranch(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @PathParam(\"branchId\") String branchId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Get a specific Branch for a specific VersionedRDFRecord.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getBranch(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @PathParam(\"branchId\") String branchId)", "class_method_signature": "CatalogRest.getBranch(@PathParam(\"catalogId\") String catalogId,\n                       @PathParam(\"recordId\") String recordId,\n                       @PathParam(\"branchId\") String branchId)", "testcase": false, "constructor": false}, {"identifier": "deleteBranch", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") @ActionAttributes( @AttributeValue(type = ValueType.PATH, id = VersionedRDFRecord.branch_IRI, value = \"branchId\") ) public", "return": "Response", "signature": "Response deleteBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes a specific Branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") @ActionAttributes( @AttributeValue(type = ValueType.PATH, id = VersionedRDFRecord.branch_IRI, value = \"branchId\") ) public Response deleteBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId)", "class_method_signature": "CatalogRest.deleteBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId)", "testcase": false, "constructor": false}, {"identifier": "updateBranch", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          String newBranchJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response updateBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          String newBranchJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}/branches/{branchId}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Updates a specific Branch for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response updateBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          String newBranchJson)", "class_method_signature": "CatalogRest.updateBranch(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          String newBranchJson)", "testcase": false, "constructor": false}, {"identifier": "getCommitChain", "parameters": "(@Context UriInfo uriInfo,\n                            @PathParam(\"catalogId\") String catalogId,\n                            @PathParam(\"recordId\") String recordId,\n                            @PathParam(\"branchId\") String branchId,\n                            @QueryParam(\"targetId\") String targetId,\n                            @QueryParam(\"offset\") int offset,\n                            @QueryParam(\"limit\") int limit)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the Commit chain for a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getCommitChain(@Context UriInfo uriInfo,\n                            @PathParam(\"catalogId\") String catalogId,\n                            @PathParam(\"recordId\") String recordId,\n                            @PathParam(\"branchId\") String branchId,\n                            @QueryParam(\"targetId\") String targetId,\n                            @QueryParam(\"offset\") int offset,\n                            @QueryParam(\"limit\") int limit)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the Commit chain for a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getCommitChain(@Context UriInfo uriInfo,\n                            @PathParam(\"catalogId\") String catalogId,\n                            @PathParam(\"recordId\") String recordId,\n                            @PathParam(\"branchId\") String branchId,\n                            @QueryParam(\"targetId\") String targetId,\n                            @QueryParam(\"offset\") int offset,\n                            @QueryParam(\"limit\") int limit)", "class_method_signature": "CatalogRest.getCommitChain(@Context UriInfo uriInfo,\n                            @PathParam(\"catalogId\") String catalogId,\n                            @PathParam(\"recordId\") String recordId,\n                            @PathParam(\"branchId\") String branchId,\n                            @QueryParam(\"targetId\") String targetId,\n                            @QueryParam(\"offset\") int offset,\n                            @QueryParam(\"limit\") int limit)", "testcase": false, "constructor": false}, {"identifier": "createBranchCommit", "parameters": "(@Context ContainerRequestContext context,\n                                @PathParam(\"catalogId\") String catalogId,\n                                @PathParam(\"recordId\") String recordId,\n                                @PathParam(\"branchId\") String branchId,\n                                @QueryParam(\"message\") String message)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits\") @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Commit for a specific Branch and sets it to be the new HEAD Commit.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") @ActionAttributes( @AttributeValue(type = ValueType.PATH, id = VersionedRDFRecord.branch_IRI, value = \"branchId\") ) public", "return": "Response", "signature": "Response createBranchCommit(@Context ContainerRequestContext context,\n                                @PathParam(\"catalogId\") String catalogId,\n                                @PathParam(\"recordId\") String recordId,\n                                @PathParam(\"branchId\") String branchId,\n                                @QueryParam(\"message\") String message)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits\") @Produces(MediaType.TEXT_PLAIN) @RolesAllowed(\"user\") @ApiOperation(\"Creates a Commit for a specific Branch and sets it to be the new HEAD Commit.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") @ActionAttributes( @AttributeValue(type = ValueType.PATH, id = VersionedRDFRecord.branch_IRI, value = \"branchId\") ) public Response createBranchCommit(@Context ContainerRequestContext context,\n                                @PathParam(\"catalogId\") String catalogId,\n                                @PathParam(\"recordId\") String recordId,\n                                @PathParam(\"branchId\") String branchId,\n                                @QueryParam(\"message\") String message)", "class_method_signature": "CatalogRest.createBranchCommit(@Context ContainerRequestContext context,\n                                @PathParam(\"catalogId\") String catalogId,\n                                @PathParam(\"recordId\") String recordId,\n                                @PathParam(\"branchId\") String branchId,\n                                @QueryParam(\"message\") String message)", "testcase": false, "constructor": false}, {"identifier": "getHead", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                     @PathParam(\"recordId\") String recordId,\n                     @PathParam(\"branchId\") String branchId,\n                     @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/head\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the HEAD Commit for a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getHead(@PathParam(\"catalogId\") String catalogId,\n                     @PathParam(\"recordId\") String recordId,\n                     @PathParam(\"branchId\") String branchId,\n                     @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/head\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the HEAD Commit for a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getHead(@PathParam(\"catalogId\") String catalogId,\n                     @PathParam(\"recordId\") String recordId,\n                     @PathParam(\"branchId\") String branchId,\n                     @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "class_method_signature": "CatalogRest.getHead(@PathParam(\"catalogId\") String catalogId,\n                     @PathParam(\"recordId\") String recordId,\n                     @PathParam(\"branchId\") String branchId,\n                     @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "testcase": false, "constructor": false}, {"identifier": "getBranchCommit", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId,\n                             @PathParam(\"branchId\") String branchId,\n                             @PathParam(\"commitId\") String commitId,\n                             @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Commit on a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getBranchCommit(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId,\n                             @PathParam(\"branchId\") String branchId,\n                             @PathParam(\"commitId\") String commitId,\n                             @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Commit on a specific Branch.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getBranchCommit(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId,\n                             @PathParam(\"branchId\") String branchId,\n                             @PathParam(\"commitId\") String commitId,\n                             @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "class_method_signature": "CatalogRest.getBranchCommit(@PathParam(\"catalogId\") String catalogId,\n                             @PathParam(\"recordId\") String recordId,\n                             @PathParam(\"branchId\") String branchId,\n                             @PathParam(\"commitId\") String commitId,\n                             @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "testcase": false, "constructor": false}, {"identifier": "getDifference", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"branchId\") String branchId,\n                           @QueryParam(\"targetId\") String targetBranchId,\n                           @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/difference\") @RolesAllowed(\"user\") @ApiOperation(\"Gets the difference between the two provided Branches' HEAD Commits.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getDifference(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"branchId\") String branchId,\n                           @QueryParam(\"targetId\") String targetBranchId,\n                           @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/difference\") @RolesAllowed(\"user\") @ApiOperation(\"Gets the difference between the two provided Branches' HEAD Commits.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getDifference(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"branchId\") String branchId,\n                           @QueryParam(\"targetId\") String targetBranchId,\n                           @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "class_method_signature": "CatalogRest.getDifference(@PathParam(\"catalogId\") String catalogId,\n                           @PathParam(\"recordId\") String recordId,\n                           @PathParam(\"branchId\") String branchId,\n                           @QueryParam(\"targetId\") String targetBranchId,\n                           @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "testcase": false, "constructor": false}, {"identifier": "getConflicts", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          @QueryParam(\"targetId\") String targetBranchId,\n                          @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/conflicts\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a list of Conflicts found between the two provided Branches' HEAD Commits.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getConflicts(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          @QueryParam(\"targetId\") String targetBranchId,\n                          @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/conflicts\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a list of Conflicts found between the two provided Branches' HEAD Commits.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getConflicts(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          @QueryParam(\"targetId\") String targetBranchId,\n                          @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "class_method_signature": "CatalogRest.getConflicts(@PathParam(\"catalogId\") String catalogId,\n                          @PathParam(\"recordId\") String recordId,\n                          @PathParam(\"branchId\") String branchId,\n                          @QueryParam(\"targetId\") String targetBranchId,\n                          @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(@Context ContainerRequestContext context,\n                   @PathParam(\"catalogId\") String catalogId,\n                   @PathParam(\"recordId\") String recordId,\n                   @PathParam(\"branchId\") String sourceBranchId,\n                   @QueryParam(\"targetId\") String targetBranchId,\n                   @FormDataParam(\"additions\") String additionsJson,\n                   @FormDataParam(\"deletions\") String deletionsJson)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/conflicts/resolution\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Merges the two commits identified by the provided IDs.\") @ActionId(value = Modify.TYPE) @ActionAttributes( @AttributeValue(type = ValueType.QUERY, id = VersionedRDFRecord.branch_IRI, value = \"targetId\") ) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response merge(@Context ContainerRequestContext context,\n                   @PathParam(\"catalogId\") String catalogId,\n                   @PathParam(\"recordId\") String recordId,\n                   @PathParam(\"branchId\") String sourceBranchId,\n                   @QueryParam(\"targetId\") String targetBranchId,\n                   @FormDataParam(\"additions\") String additionsJson,\n                   @FormDataParam(\"deletions\") String deletionsJson)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/conflicts/resolution\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Merges the two commits identified by the provided IDs.\") @ActionId(value = Modify.TYPE) @ActionAttributes( @AttributeValue(type = ValueType.QUERY, id = VersionedRDFRecord.branch_IRI, value = \"targetId\") ) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response merge(@Context ContainerRequestContext context,\n                   @PathParam(\"catalogId\") String catalogId,\n                   @PathParam(\"recordId\") String recordId,\n                   @PathParam(\"branchId\") String sourceBranchId,\n                   @QueryParam(\"targetId\") String targetBranchId,\n                   @FormDataParam(\"additions\") String additionsJson,\n                   @FormDataParam(\"deletions\") String deletionsJson)", "class_method_signature": "CatalogRest.merge(@Context ContainerRequestContext context,\n                   @PathParam(\"catalogId\") String catalogId,\n                   @PathParam(\"recordId\") String recordId,\n                   @PathParam(\"branchId\") String sourceBranchId,\n                   @QueryParam(\"targetId\") String targetBranchId,\n                   @FormDataParam(\"additions\") String additionsJson,\n                   @FormDataParam(\"deletions\") String deletionsJson)", "testcase": false, "constructor": false}, {"identifier": "getCompiledResource", "parameters": "(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @PathParam(\"branchId\") String branchId,\n                                 @PathParam(\"commitId\") String commitId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                 @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}/resource\") @Produces({MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN}) @RolesAllowed(\"user\") @ApiOperation(\"Gets the compiled resource for a the entity identified by a specific Commit.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response getCompiledResource(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @PathParam(\"branchId\") String branchId,\n                                 @PathParam(\"commitId\") String commitId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                 @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}/resource\") @Produces({MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN}) @RolesAllowed(\"user\") @ApiOperation(\"Gets the compiled resource for a the entity identified by a specific Commit.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response getCompiledResource(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @PathParam(\"branchId\") String branchId,\n                                 @PathParam(\"commitId\") String commitId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                 @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply)", "class_method_signature": "CatalogRest.getCompiledResource(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @PathParam(\"branchId\") String branchId,\n                                 @PathParam(\"commitId\") String commitId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                 @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply)", "testcase": false, "constructor": false}, {"identifier": "downloadCompiledResource", "parameters": "(@Context ContainerRequestContext context,\n                                      @PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"branchId\") String branchId,\n                                      @PathParam(\"commitId\") String commitId,\n                                      @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                      @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply,\n                                      @DefaultValue(\"resource\") @QueryParam(\"fileName\") String fileName)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}/resource\") @Produces({MediaType.APPLICATION_OCTET_STREAM, \"text/*\", \"application/*\"}) @RolesAllowed(\"user\") @ApiOperation(\"Gets the compiled resource for a the entity identified by a specific Commit.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response downloadCompiledResource(@Context ContainerRequestContext context,\n                                      @PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"branchId\") String branchId,\n                                      @PathParam(\"commitId\") String commitId,\n                                      @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                      @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply,\n                                      @DefaultValue(\"resource\") @QueryParam(\"fileName\") String fileName)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/branches/{branchId}/commits/{commitId}/resource\") @Produces({MediaType.APPLICATION_OCTET_STREAM, \"text/*\", \"application/*\"}) @RolesAllowed(\"user\") @ApiOperation(\"Gets the compiled resource for a the entity identified by a specific Commit.\") @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response downloadCompiledResource(@Context ContainerRequestContext context,\n                                      @PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"branchId\") String branchId,\n                                      @PathParam(\"commitId\") String commitId,\n                                      @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                      @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply,\n                                      @DefaultValue(\"resource\") @QueryParam(\"fileName\") String fileName)", "class_method_signature": "CatalogRest.downloadCompiledResource(@Context ContainerRequestContext context,\n                                      @PathParam(\"catalogId\") String catalogId,\n                                      @PathParam(\"recordId\") String recordId,\n                                      @PathParam(\"branchId\") String branchId,\n                                      @PathParam(\"commitId\") String commitId,\n                                      @DefaultValue(\"jsonld\") @QueryParam(\"format\") String rdfFormat,\n                                      @DefaultValue(\"false\") @QueryParam(\"applyInProgressCommit\") boolean apply,\n                                      @DefaultValue(\"resource\") @QueryParam(\"fileName\") String fileName)", "testcase": false, "constructor": false}, {"identifier": "createInProgressCommit", "parameters": "(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "modifiers": "@POST @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @RolesAllowed(\"user\") @ApiOperation(\"Creates a InProgressCommit linked to a specific VersionedRDFRecord.\") public", "return": "Response", "signature": "Response createInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "full_signature": "@POST @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @RolesAllowed(\"user\") @ApiOperation(\"Creates a InProgressCommit linked to a specific VersionedRDFRecord.\") public Response createInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.createInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "getInProgressCommit", "parameters": "(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") public", "return": "Response", "signature": "Response getInProgressCommit(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") public Response getInProgressCommit(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "class_method_signature": "CatalogRest.getInProgressCommit(@Context ContainerRequestContext context,\n                                 @PathParam(\"catalogId\") String catalogId,\n                                 @PathParam(\"recordId\") String recordId,\n                                 @DefaultValue(\"jsonld\") @QueryParam(\"format\") String format)", "testcase": false, "constructor": false}, {"identifier": "deleteInProgressCommit", "parameters": "(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "modifiers": "@DELETE @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") public", "return": "Response", "signature": "Response deleteInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "full_signature": "@DELETE @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Deletes the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") public Response deleteInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "class_method_signature": "CatalogRest.deleteInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId)", "testcase": false, "constructor": false}, {"identifier": "updateInProgressCommit", "parameters": "(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId,\n                                    @FormDataParam(\"additions\") String additionsJson,\n                                    @FormDataParam(\"deletions\") String deletionsJson)", "modifiers": "@PUT @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Updates the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public", "return": "Response", "signature": "Response updateInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId,\n                                    @FormDataParam(\"additions\") String additionsJson,\n                                    @FormDataParam(\"deletions\") String deletionsJson)", "full_signature": "@PUT @Path(\"{catalogId}/records/{recordId}/in-progress-commit\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.MULTIPART_FORM_DATA) @RolesAllowed(\"user\") @ApiOperation(\"Updates the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord.\") @ActionId(value = Modify.TYPE) @ResourceId(type = ValueType.PATH, value = \"recordId\") public Response updateInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId,\n                                    @FormDataParam(\"additions\") String additionsJson,\n                                    @FormDataParam(\"deletions\") String deletionsJson)", "class_method_signature": "CatalogRest.updateInProgressCommit(@Context ContainerRequestContext context,\n                                    @PathParam(\"catalogId\") String catalogId,\n                                    @PathParam(\"recordId\") String recordId,\n                                    @FormDataParam(\"additions\") String additionsJson,\n                                    @FormDataParam(\"deletions\") String deletionsJson)", "testcase": false, "constructor": false}, {"identifier": "getRecordTypes", "parameters": "()", "modifiers": "@GET @Path(\"record-types\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all the available record types.\") public", "return": "Response", "signature": "Response getRecordTypes()", "full_signature": "@GET @Path(\"record-types\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all the available record types.\") public Response getRecordTypes()", "class_method_signature": "CatalogRest.getRecordTypes()", "testcase": false, "constructor": false}, {"identifier": "getSortOptions", "parameters": "()", "modifiers": "@GET @Path(\"sort-options\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all the available sorting options.\") public", "return": "Response", "signature": "Response getSortOptions()", "full_signature": "@GET @Path(\"sort-options\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Retrieves all the available sorting options.\") public Response getSortOptions()", "class_method_signature": "CatalogRest.getSortOptions()", "testcase": false, "constructor": false}, {"identifier": "getCommitDifferenceObject", "parameters": "(Resource commitId, String format)", "modifiers": "private", "return": "ObjectNode", "signature": "ObjectNode getCommitDifferenceObject(Resource commitId, String format)", "full_signature": "private ObjectNode getCommitDifferenceObject(Resource commitId, String format)", "class_method_signature": "CatalogRest.getCommitDifferenceObject(Resource commitId, String format)", "testcase": false, "constructor": false}, {"identifier": "getDifferenceJson", "parameters": "(Difference difference, String format)", "modifiers": "private", "return": "ObjectNode", "signature": "ObjectNode getDifferenceJson(Difference difference, String format)", "full_signature": "private ObjectNode getDifferenceJson(Difference difference, String format)", "class_method_signature": "CatalogRest.getDifferenceJson(Difference difference, String format)", "testcase": false, "constructor": false}, {"identifier": "createDistribution", "parameters": "(String title, String description, String format, String accessURL,\n                                            String downloadURL, ContainerRequestContext context)", "modifiers": "private", "return": "Distribution", "signature": "Distribution createDistribution(String title, String description, String format, String accessURL,\n                                            String downloadURL, ContainerRequestContext context)", "full_signature": "private Distribution createDistribution(String title, String description, String format, String accessURL,\n                                            String downloadURL, ContainerRequestContext context)", "class_method_signature": "CatalogRest.createDistribution(String title, String description, String format, String accessURL,\n                                            String downloadURL, ContainerRequestContext context)", "testcase": false, "constructor": false}, {"identifier": "getNewThing", "parameters": "(String newThingJson, Resource thingId, OrmFactory<T> factory)", "modifiers": "private", "return": "T", "signature": "T getNewThing(String newThingJson, Resource thingId, OrmFactory<T> factory)", "full_signature": "private T getNewThing(String newThingJson, Resource thingId, OrmFactory<T> factory)", "class_method_signature": "CatalogRest.getNewThing(String newThingJson, Resource thingId, OrmFactory<T> factory)", "testcase": false, "constructor": false}, {"identifier": "conflictToJson", "parameters": "(Conflict conflict, String rdfFormat)", "modifiers": "private", "return": "ObjectNode", "signature": "ObjectNode conflictToJson(Conflict conflict, String rdfFormat)", "full_signature": "private ObjectNode conflictToJson(Conflict conflict, String rdfFormat)", "class_method_signature": "CatalogRest.conflictToJson(Conflict conflict, String rdfFormat)", "testcase": false, "constructor": false}, {"identifier": "convertJsonld", "parameters": "(String jsonld)", "modifiers": "private", "return": "Model", "signature": "Model convertJsonld(String jsonld)", "full_signature": "private Model convertJsonld(String jsonld)", "class_method_signature": "CatalogRest.convertJsonld(String jsonld)", "testcase": false, "constructor": false}, {"identifier": "getRecordFactories", "parameters": "()", "modifiers": "private", "return": "Map<String, OrmFactory<? extends Record>>", "signature": "Map<String, OrmFactory<? extends Record>> getRecordFactories()", "full_signature": "private Map<String, OrmFactory<? extends Record>> getRecordFactories()", "class_method_signature": "CatalogRest.getRecordFactories()", "testcase": false, "constructor": false}, {"identifier": "getVersionFactories", "parameters": "()", "modifiers": "private", "return": "Map<String, OrmFactory<? extends Version>>", "signature": "Map<String, OrmFactory<? extends Version>> getVersionFactories()", "full_signature": "private Map<String, OrmFactory<? extends Version>> getVersionFactories()", "class_method_signature": "CatalogRest.getVersionFactories()", "testcase": false, "constructor": false}, {"identifier": "getBranchFactories", "parameters": "()", "modifiers": "private", "return": "Map<String, OrmFactory<? extends Branch>>", "signature": "Map<String, OrmFactory<? extends Branch>> getBranchFactories()", "full_signature": "private Map<String, OrmFactory<? extends Branch>> getBranchFactories()", "class_method_signature": "CatalogRest.getBranchFactories()", "testcase": false, "constructor": false}, {"identifier": "getThingFactories", "parameters": "(Class<T> clazz)", "modifiers": "private", "return": "Map<String, OrmFactory<? extends T>>", "signature": "Map<String, OrmFactory<? extends T>> getThingFactories(Class<T> clazz)", "full_signature": "private Map<String, OrmFactory<? extends T>> getThingFactories(Class<T> clazz)", "class_method_signature": "CatalogRest.getThingFactories(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "removeContext", "parameters": "(Model model)", "modifiers": "private", "return": "Model", "signature": "Model removeContext(Model model)", "full_signature": "private Model removeContext(Model model)", "class_method_signature": "CatalogRest.removeContext(Model model)", "testcase": false, "constructor": false}], "file": "com.mobi.catalog.rest/src/main/java/com/mobi/catalog/rest/CatalogRest.java"}, "focal_method": {"identifier": "getUnversionedDistribution", "parameters": "(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "modifiers": "@GET @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution of an UnversionedRecord.\") public", "return": "Response", "body": "@GET\n    @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\")\n    @Produces(MediaType.APPLICATION_JSON)\n    @RolesAllowed(\"user\")\n    @ApiOperation(\"Gets a specific Distribution of an UnversionedRecord.\")\n    public Response getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId) {\n        try {\n            Distribution distribution = catalogManager.getUnversionedDistribution(vf.createIRI(catalogId),\n                    vf.createIRI(recordId), vf.createIRI(distributionId)).orElseThrow(() ->\n                    ErrorUtils.sendError(\"Distribution \" + distributionId + \" could not be found\",\n                            Response.Status.NOT_FOUND));\n            return Response.ok(thingToSkolemizedObjectNode(distribution, Distribution.TYPE, transformer, bNodeService)\n                    .toString()).build();\n        } catch (IllegalArgumentException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.BAD_REQUEST);\n        } catch (MobiException ex) {\n            throw ErrorUtils.sendError(ex, ex.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n        }\n    }", "signature": "Response getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "full_signature": "@GET @Path(\"{catalogId}/records/{recordId}/distributions/{distributionId}\") @Produces(MediaType.APPLICATION_JSON) @RolesAllowed(\"user\") @ApiOperation(\"Gets a specific Distribution of an UnversionedRecord.\") public Response getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "class_method_signature": "CatalogRest.getUnversionedDistribution(@PathParam(\"catalogId\") String catalogId,\n                                        @PathParam(\"recordId\") String recordId,\n                                        @PathParam(\"distributionId\") String distributionId)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "getUnversionedDistribution", "createIRI", "createIRI", "createIRI", "sendError", "build", "ok", "toString", "thingToSkolemizedObjectNode", "sendError", "getMessage", "sendError", "getMessage"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}