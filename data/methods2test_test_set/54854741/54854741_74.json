{"test_class": {"identifier": "CategoryWebServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CategoriesService categoriesService = mock(CategoriesService.class);", "modifier": "private final", "type": "CategoriesService", "declarator": "categoriesService = mock(CategoriesService.class)", "var_name": "categoriesService"}, {"original_string": "private final CategoryWebService service = new CategoryWebService(categoriesService);", "modifier": "private final", "type": "CategoryWebService", "declarator": "service = new CategoryWebService(categoriesService)", "var_name": "service"}, {"original_string": "private final Categories categories = createCategories();", "modifier": "private final", "type": "Categories", "declarator": "categories = createCategories()", "var_name": "categories"}], "file": "services/src/test/java/com/greensopinion/finance/services/web/CategoryWebServiceTest.java"}, "test_case": {"identifier": "list", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void list() {\n\t\tList<CategoryModel> list = service.list();\n\t\tassertNotNull(list);\n\t\tassertEquals(3, list.size());\n\t\tassertEquals(\"a\", list.get(0).getName());\n\t\tassertEquals(\"B\", list.get(1).getName());\n\t\tassertEquals(\"c\", list.get(2).getName());\n\t}", "signature": "void list()", "full_signature": "@Test public void list()", "class_method_signature": "CategoryWebServiceTest.list()", "testcase": true, "constructor": false, "invocations": ["list", "assertNotNull", "assertEquals", "size", "assertEquals", "getName", "get", "assertEquals", "getName", "get", "assertEquals", "getName", "get"]}, "focal_class": {"identifier": "CategoryWebService", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String BASE_PATH = \"/categories\";", "modifier": "static final", "type": "String", "declarator": "BASE_PATH = \"/categories\"", "var_name": "BASE_PATH"}, {"original_string": "private final CategoriesService categoriesService;", "modifier": "private final", "type": "CategoriesService", "declarator": "categoriesService", "var_name": "categoriesService"}], "methods": [{"identifier": "CategoryWebService", "parameters": "(CategoriesService categoriesService)", "modifiers": "@Inject", "return": "", "signature": " CategoryWebService(CategoriesService categoriesService)", "full_signature": "@Inject  CategoryWebService(CategoriesService categoriesService)", "class_method_signature": "CategoryWebService.CategoryWebService(CategoriesService categoriesService)", "testcase": false, "constructor": true}, {"identifier": "list", "parameters": "()", "modifiers": "@GET public", "return": "List<CategoryModel>", "signature": "List<CategoryModel> list()", "full_signature": "@GET public List<CategoryModel> list()", "class_method_signature": "CategoryWebService.list()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CategoryModel model)", "modifiers": "@POST public", "return": "void", "signature": "void create(CategoryModel model)", "full_signature": "@POST public void create(CategoryModel model)", "class_method_signature": "CategoryWebService.create(CategoryModel model)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"name\") String name)", "modifiers": "@DELETE @Path(\"{name}\") public", "return": "void", "signature": "void delete(@PathParam(\"name\") String name)", "full_signature": "@DELETE @Path(\"{name}\") public void delete(@PathParam(\"name\") String name)", "class_method_signature": "CategoryWebService.delete(@PathParam(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "addRule", "parameters": "(@PathParam(\"name\") String name, CategoryRuleModel ruleModel)", "modifiers": "@POST @Path(\"{name}/rules\") public", "return": "void", "signature": "void addRule(@PathParam(\"name\") String name, CategoryRuleModel ruleModel)", "full_signature": "@POST @Path(\"{name}/rules\") public void addRule(@PathParam(\"name\") String name, CategoryRuleModel ruleModel)", "class_method_signature": "CategoryWebService.addRule(@PathParam(\"name\") String name, CategoryRuleModel ruleModel)", "testcase": false, "constructor": false}, {"identifier": "toMatchRule", "parameters": "(CategoryRuleModel ruleModel)", "modifiers": "private", "return": "MatchRule", "signature": "MatchRule toMatchRule(CategoryRuleModel ruleModel)", "full_signature": "private MatchRule toMatchRule(CategoryRuleModel ruleModel)", "class_method_signature": "CategoryWebService.toMatchRule(CategoryRuleModel ruleModel)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/web/CategoryWebService.java"}, "focal_method": {"identifier": "list", "parameters": "()", "modifiers": "@GET public", "return": "List<CategoryModel>", "body": "@GET\n\tpublic List<CategoryModel> list() {\n\t\treturn FluentIterable.from(categoriesService.retrieve().getCategories())\n\t\t\t\t.transform(new Function<Category, CategoryModel>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic CategoryModel apply(Category category) {\n\t\t\t\t\t\treturn new CategoryModel(category.getName());\n\t\t\t\t\t}\n\t\t\t\t}).toSortedList(Ordering.natural());\n\t}", "signature": "List<CategoryModel> list()", "full_signature": "@GET public List<CategoryModel> list()", "class_method_signature": "CategoryWebService.list()", "testcase": false, "constructor": false, "invocations": ["toSortedList", "transform", "from", "getCategories", "retrieve", "getName", "natural"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}