{"test_class": {"identifier": "MetadataCol52Test", "superclass": "extends ColumnTestBase", "interfaces": "", "fields": [{"original_string": "private MetadataCol52 column1;", "modifier": "private", "type": "MetadataCol52", "declarator": "column1", "var_name": "column1"}, {"original_string": "private MetadataCol52 column2;", "modifier": "private", "type": "MetadataCol52", "declarator": "column2", "var_name": "column2"}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/test/java/org/drools/workbench/models/guided/dtable/shared/model/MetadataCol52Test.java"}, "test_case": {"identifier": "testCloneColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCloneColumn() {\n        column1.setWidth(10);\n        MetadataCol52 clone = column1.cloneColumn();\n\n        assertEquals(column1.getMetadata(), clone.getMetadata());\n        assertEquals(column1.getHeader(), clone.getHeader());\n        assertEquals(column1.getWidth(), clone.getWidth());\n        assertEquals(column1.isHideColumn(), clone.isHideColumn());\n        assertEquals(column1.getDefaultValue(), clone.getDefaultValue());\n    }", "signature": "void testCloneColumn()", "full_signature": "@Test public void testCloneColumn()", "class_method_signature": "MetadataCol52Test.testCloneColumn()", "testcase": true, "constructor": false, "invocations": ["setWidth", "cloneColumn", "assertEquals", "getMetadata", "getMetadata", "assertEquals", "getHeader", "getHeader", "assertEquals", "getWidth", "getWidth", "assertEquals", "isHideColumn", "isHideColumn", "assertEquals", "getDefaultValue", "getDefaultValue"]}, "focal_class": {"identifier": "MetadataCol52", "superclass": "extends DTColumnConfig52", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 729l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 729l", "var_name": "serialVersionUID"}, {"original_string": "private String metadata;", "modifier": "private", "type": "String", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "public static final String FIELD_METADATA = \"metadata\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_METADATA = \"metadata\"", "var_name": "FIELD_METADATA"}], "methods": [{"identifier": "getMetadata", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMetadata()", "full_signature": "public String getMetadata()", "class_method_signature": "MetadataCol52.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "setMetadata", "parameters": "( String metadata )", "modifiers": "public", "return": "void", "signature": "void setMetadata( String metadata )", "full_signature": "public void setMetadata( String metadata )", "class_method_signature": "MetadataCol52.setMetadata( String metadata )", "testcase": false, "constructor": false}, {"identifier": "diff", "parameters": "( BaseColumn otherColumn )", "modifiers": "@Override public", "return": "List<BaseColumnFieldDiff>", "signature": "List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "full_signature": "@Override public List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "class_method_signature": "MetadataCol52.diff( BaseColumn otherColumn )", "testcase": false, "constructor": false}, {"identifier": "cloneColumn", "parameters": "()", "modifiers": "public", "return": "MetadataCol52", "signature": "MetadataCol52 cloneColumn()", "full_signature": "public MetadataCol52 cloneColumn()", "class_method_signature": "MetadataCol52.cloneColumn()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "MetadataCol52.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MetadataCol52.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/shared/model/MetadataCol52.java"}, "focal_method": {"identifier": "cloneColumn", "parameters": "()", "modifiers": "public", "return": "MetadataCol52", "body": "public MetadataCol52 cloneColumn() {\n        MetadataCol52 cloned = new MetadataCol52();\n        cloned.setMetadata( getMetadata() );\n        cloned.cloneCommonColumnConfigFrom( this );\n        return cloned;\n    }", "signature": "MetadataCol52 cloneColumn()", "full_signature": "public MetadataCol52 cloneColumn()", "class_method_signature": "MetadataCol52.cloneColumn()", "testcase": false, "constructor": false, "invocations": ["setMetadata", "getMetadata", "cloneCommonColumnConfigFrom"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}