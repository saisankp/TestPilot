{"test_class": {"identifier": "AnagramsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static int BIRO_MAX_COMBINATIONS = 256;", "modifier": "private final static", "type": "int", "declarator": "BIRO_MAX_COMBINATIONS = 256", "var_name": "BIRO_MAX_COMBINATIONS"}], "file": "anagrams/20141012-adam-stefan/src/test/java/AnagramsTest.java"}, "test_case": {"identifier": "testMaximumLetterCount2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMaximumLetterCount2() {\n        Anagrams anagrams = new Anagrams(\"biro\");\n\n        List<String> output = anagrams.generate();\n\n        assertThat(output.size()).isEqualTo(BIRO_MAX_COMBINATIONS);\n    }", "signature": "void testMaximumLetterCount2()", "full_signature": "@Test public void testMaximumLetterCount2()", "class_method_signature": "AnagramsTest.testMaximumLetterCount2()", "testcase": true, "constructor": false, "invocations": ["generate", "isEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "Anagrams", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String word;", "modifier": "private", "type": "String", "declarator": "word", "var_name": "word"}], "methods": [{"identifier": "Anagrams", "parameters": "(String word)", "modifiers": "public", "return": "", "signature": " Anagrams(String word)", "full_signature": "public  Anagrams(String word)", "class_method_signature": "Anagrams.Anagrams(String word)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> generate()", "full_signature": "public List<String> generate()", "class_method_signature": "Anagrams.generate()", "testcase": false, "constructor": false}, {"identifier": "getMaxCombinations", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getMaxCombinations()", "full_signature": " int getMaxCombinations()", "class_method_signature": "Anagrams.getMaxCombinations()", "testcase": false, "constructor": false}, {"identifier": "makeListOfSize", "parameters": "(int size)", "modifiers": "private", "return": "List<String>", "signature": "List<String> makeListOfSize(int size)", "full_signature": "private List<String> makeListOfSize(int size)", "class_method_signature": "Anagrams.makeListOfSize(int size)", "testcase": false, "constructor": false}], "file": "anagrams/20141012-adam-stefan/src/main/java/Anagrams.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> generate() {\n        return makeListOfSize(getMaxCombinations());\n    }", "signature": "List<String> generate()", "full_signature": "public List<String> generate()", "class_method_signature": "Anagrams.generate()", "testcase": false, "constructor": false, "invocations": ["makeListOfSize", "getMaxCombinations"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}