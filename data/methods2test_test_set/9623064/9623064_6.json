{"test_class": {"identifier": "FilePipelineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ResultItems resultItems;", "modifier": "private static", "type": "ResultItems", "declarator": "resultItems", "var_name": "resultItems"}, {"original_string": "private static Task task;", "modifier": "private static", "type": "Task", "declarator": "task", "var_name": "task"}], "file": "webmagic-core/src/test/java/us/codecraft/webmagic/pipeline/FilePipelineTest.java"}, "test_case": {"identifier": "testProcess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcess() {\n        FilePipeline filePipeline = new FilePipeline();\n        filePipeline.process(resultItems, task);\n    }", "signature": "void testProcess()", "full_signature": "@Test public void testProcess()", "class_method_signature": "FilePipelineTest.testProcess()", "testcase": true, "constructor": false, "invocations": ["process"]}, "focal_class": {"identifier": "FilePipeline", "superclass": "extends FilePersistentBase", "interfaces": "implements Pipeline", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "FilePipeline", "parameters": "()", "modifiers": "public", "return": "", "signature": " FilePipeline()", "full_signature": "public  FilePipeline()", "class_method_signature": "FilePipeline.FilePipeline()", "testcase": false, "constructor": true}, {"identifier": "FilePipeline", "parameters": "(String path)", "modifiers": "public", "return": "", "signature": " FilePipeline(String path)", "full_signature": "public  FilePipeline(String path)", "class_method_signature": "FilePipeline.FilePipeline(String path)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(ResultItems resultItems, Task task)", "modifiers": "@Override public", "return": "void", "signature": "void process(ResultItems resultItems, Task task)", "full_signature": "@Override public void process(ResultItems resultItems, Task task)", "class_method_signature": "FilePipeline.process(ResultItems resultItems, Task task)", "testcase": false, "constructor": false}], "file": "webmagic-core/src/main/java/us/codecraft/webmagic/pipeline/FilePipeline.java"}, "focal_method": {"identifier": "process", "parameters": "(ResultItems resultItems, Task task)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(ResultItems resultItems, Task task) {\n        String path = this.path + PATH_SEPERATOR + task.getUUID() + PATH_SEPERATOR;\n        try {\n            PrintWriter printWriter = new PrintWriter(new OutputStreamWriter(new FileOutputStream(getFile(path + DigestUtils.md5Hex(resultItems.getRequest().getUrl()) + \".html\")),\"UTF-8\"));\n            printWriter.println(\"url:\\t\" + resultItems.getRequest().getUrl());\n            for (Map.Entry<String, Object> entry : resultItems.getAll().entrySet()) {\n                if (entry.getValue() instanceof Iterable) {\n                    Iterable value = (Iterable) entry.getValue();\n                    printWriter.println(entry.getKey() + \":\");\n                    for (Object o : value) {\n                        printWriter.println(o);\n                    }\n                } else {\n                    printWriter.println(entry.getKey() + \":\\t\" + entry.getValue());\n                }\n            }\n            printWriter.close();\n        } catch (IOException e) {\n            logger.warn(\"write file error\", e);\n        }\n    }", "signature": "void process(ResultItems resultItems, Task task)", "full_signature": "@Override public void process(ResultItems resultItems, Task task)", "class_method_signature": "FilePipeline.process(ResultItems resultItems, Task task)", "testcase": false, "constructor": false, "invocations": ["getUUID", "getFile", "md5Hex", "getUrl", "getRequest", "println", "getUrl", "getRequest", "entrySet", "getAll", "getValue", "getValue", "println", "getKey", "println", "println", "getKey", "getValue", "close", "warn"]}, "repository": {"repo_id": 9623064, "url": "https://github.com/code4craft/webmagic", "language": "Java", "is_fork": false, "fork_count": 3804, "stargazer_count": 9136, "size": 17041, "license": "licensed"}}