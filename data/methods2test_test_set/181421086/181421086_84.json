{"test_class": {"identifier": "DeviceManagerImplTest", "superclass": "extends FloodlightTestCase", "interfaces": "", "fields": [{"original_string": "protected static Logger logger =\n\t\t\tLoggerFactory.getLogger(DeviceManagerImplTest.class);", "modifier": "protected static", "type": "Logger", "declarator": "logger =\n\t\t\tLoggerFactory.getLogger(DeviceManagerImplTest.class)", "var_name": "logger"}, {"original_string": "protected OFPacketIn testARPReplyPacketIn_1, testARPReplyPacketIn_2;", "modifier": "protected", "type": "OFPacketIn", "declarator": "testARPReplyPacketIn_1", "var_name": "testARPReplyPacketIn_1"}, {"original_string": "protected OFPacketIn testUDPPacketIn;", "modifier": "protected", "type": "OFPacketIn", "declarator": "testUDPPacketIn", "var_name": "testUDPPacketIn"}, {"original_string": "protected IPacket testARPReplyPacket_1, testARPReplyPacket_2;", "modifier": "protected", "type": "IPacket", "declarator": "testARPReplyPacket_1", "var_name": "testARPReplyPacket_1"}, {"original_string": "protected Ethernet testUDPPacket;", "modifier": "protected", "type": "Ethernet", "declarator": "testUDPPacket", "var_name": "testUDPPacket"}, {"original_string": "protected byte[] testARPReplyPacket_1_Srld, testARPReplyPacket_2_Srld;", "modifier": "protected", "type": "byte[]", "declarator": "testARPReplyPacket_1_Srld", "var_name": "testARPReplyPacket_1_Srld"}, {"original_string": "protected byte[] testUDPPacketSrld;", "modifier": "protected", "type": "byte[]", "declarator": "testUDPPacketSrld", "var_name": "testUDPPacketSrld"}, {"original_string": "private MockSyncService syncService;", "modifier": "private", "type": "MockSyncService", "declarator": "syncService", "var_name": "syncService"}, {"original_string": "private IStoreClient<String, DeviceSyncRepresentation> storeClient;", "modifier": "private", "type": "IStoreClient<String, DeviceSyncRepresentation>", "declarator": "storeClient", "var_name": "storeClient"}, {"original_string": "DeviceManagerImpl deviceManager;", "modifier": "", "type": "DeviceManagerImpl", "declarator": "deviceManager", "var_name": "deviceManager"}, {"original_string": "MemoryStorageSource storageSource;", "modifier": "", "type": "MemoryStorageSource", "declarator": "storageSource", "var_name": "storageSource"}, {"original_string": "IDebugCounterService debugCounterService;", "modifier": "", "type": "IDebugCounterService", "declarator": "debugCounterService", "var_name": "debugCounterService"}, {"original_string": "IDebugEventService debugEventService;", "modifier": "", "type": "IDebugEventService", "declarator": "debugEventService", "var_name": "debugEventService"}], "file": "src/agents/apps/floodlight/floodlight-1.0/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java"}, "test_case": {"identifier": "testDeviceClassIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDeviceClassIndex() throws Exception {\n\t\tEnumSet<IDeviceService.DeviceField> indexFields =\n\t\t\t\tEnumSet.noneOf(IDeviceService.DeviceField.class);\n\t\tindexFields.add(IDeviceService.DeviceField.IPV4);\n\t\tindexFields.add(IDeviceService.DeviceField.VLAN);\n\t\tdeviceManager.addIndex(true, indexFields);\n\n\t\tITopologyService mockTopology = createMock(ITopologyService.class);\n\t\tdeviceManager.topology = mockTopology;\n\t\texpect(mockTopology.isAttachmentPointPort(DatapathId.of(anyLong()),\n\t\t\t\tOFPort.of(anyShort()))).\n\t\t\t\tandReturn(true).anyTimes();\n\t\texpect(mockTopology.getL2DomainId(DatapathId.of(EasyMock.anyLong()))).andReturn(DatapathId.of(1L)).anyTimes();\n\t\treplay(mockTopology);\n\n\t\tdoTestDeviceClassQuery();\n\t}", "signature": "void testDeviceClassIndex()", "full_signature": "@Test public void testDeviceClassIndex()", "class_method_signature": "DeviceManagerImplTest.testDeviceClassIndex()", "testcase": true, "constructor": false, "invocations": ["noneOf", "add", "add", "addIndex", "createMock", "anyTimes", "andReturn", "expect", "isAttachmentPointPort", "of", "anyLong", "of", "anyShort", "anyTimes", "andReturn", "expect", "getL2DomainId", "of", "anyLong", "of", "replay", "doTestDeviceClassQuery"]}, "focal_class": {"identifier": "DeviceManagerImpl", "superclass": "", "interfaces": "implements IDeviceService, IOFMessageListener, ITopologyListener, IFloodlightModule, IEntityClassListener, IInfoProvider", "fields": [{"original_string": "protected static Logger logger = LoggerFactory.getLogger(DeviceManagerImpl.class);", "modifier": "protected static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DeviceManagerImpl.class)", "var_name": "logger"}, {"original_string": "protected IFloodlightProviderService floodlightProvider;", "modifier": "protected", "type": "IFloodlightProviderService", "declarator": "floodlightProvider", "var_name": "floodlightProvider"}, {"original_string": "protected ITopologyService topology;", "modifier": "protected", "type": "ITopologyService", "declarator": "topology", "var_name": "topology"}, {"original_string": "protected IStorageSourceService storageSource;", "modifier": "protected", "type": "IStorageSourceService", "declarator": "storageSource", "var_name": "storageSource"}, {"original_string": "protected IRestApiService restApi;", "modifier": "protected", "type": "IRestApiService", "declarator": "restApi", "var_name": "restApi"}, {"original_string": "protected IThreadPoolService threadPool;", "modifier": "protected", "type": "IThreadPoolService", "declarator": "threadPool", "var_name": "threadPool"}, {"original_string": "protected IDebugCounterService debugCounters;", "modifier": "protected", "type": "IDebugCounterService", "declarator": "debugCounters", "var_name": "debugCounters"}, {"original_string": "private ISyncService syncService;", "modifier": "private", "type": "ISyncService", "declarator": "syncService", "var_name": "syncService"}, {"original_string": "private IStoreClient<String, DeviceSyncRepresentation> storeClient;", "modifier": "private", "type": "IStoreClient<String, DeviceSyncRepresentation>", "declarator": "storeClient", "var_name": "storeClient"}, {"original_string": "private DeviceSyncManager deviceSyncManager;", "modifier": "private", "type": "DeviceSyncManager", "declarator": "deviceSyncManager", "var_name": "deviceSyncManager"}, {"original_string": "public static final String MODULE_NAME = \"devicemanager\";", "modifier": "public static final", "type": "String", "declarator": "MODULE_NAME = \"devicemanager\"", "var_name": "MODULE_NAME"}, {"original_string": "public static final String PACKAGE = DeviceManagerImpl.class.getPackage().getName();", "modifier": "public static final", "type": "String", "declarator": "PACKAGE = DeviceManagerImpl.class.getPackage().getName()", "var_name": "PACKAGE"}, {"original_string": "public IDebugCounter cntIncoming;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntIncoming", "var_name": "cntIncoming"}, {"original_string": "public IDebugCounter cntReconcileRequest;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntReconcileRequest", "var_name": "cntReconcileRequest"}, {"original_string": "public IDebugCounter cntReconcileNoSource;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntReconcileNoSource", "var_name": "cntReconcileNoSource"}, {"original_string": "public IDebugCounter cntReconcileNoDest;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntReconcileNoDest", "var_name": "cntReconcileNoDest"}, {"original_string": "public IDebugCounter cntInvalidSource;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntInvalidSource", "var_name": "cntInvalidSource"}, {"original_string": "public IDebugCounter cntInvalidDest;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntInvalidDest", "var_name": "cntInvalidDest"}, {"original_string": "public IDebugCounter cntNoSource;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntNoSource", "var_name": "cntNoSource"}, {"original_string": "public IDebugCounter cntNoDest;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntNoDest", "var_name": "cntNoDest"}, {"original_string": "public IDebugCounter cntDhcpClientNameSnooped;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDhcpClientNameSnooped", "var_name": "cntDhcpClientNameSnooped"}, {"original_string": "public IDebugCounter cntDeviceOnInternalPortNotLearned;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceOnInternalPortNotLearned", "var_name": "cntDeviceOnInternalPortNotLearned"}, {"original_string": "public IDebugCounter cntPacketNotAllowed;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntPacketNotAllowed", "var_name": "cntPacketNotAllowed"}, {"original_string": "public IDebugCounter cntNewDevice;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntNewDevice", "var_name": "cntNewDevice"}, {"original_string": "public IDebugCounter cntPacketOnInternalPortForKnownDevice;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntPacketOnInternalPortForKnownDevice", "var_name": "cntPacketOnInternalPortForKnownDevice"}, {"original_string": "public IDebugCounter cntNewEntity;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntNewEntity", "var_name": "cntNewEntity"}, {"original_string": "public IDebugCounter cntDeviceChanged;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceChanged", "var_name": "cntDeviceChanged"}, {"original_string": "public IDebugCounter cntDeviceMoved;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceMoved", "var_name": "cntDeviceMoved"}, {"original_string": "public IDebugCounter cntCleanupEntitiesRuns;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntCleanupEntitiesRuns", "var_name": "cntCleanupEntitiesRuns"}, {"original_string": "public IDebugCounter cntEntityRemovedTimeout;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntEntityRemovedTimeout", "var_name": "cntEntityRemovedTimeout"}, {"original_string": "public IDebugCounter cntDeviceDeleted;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceDeleted", "var_name": "cntDeviceDeleted"}, {"original_string": "public IDebugCounter cntDeviceReclassifyDelete;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceReclassifyDelete", "var_name": "cntDeviceReclassifyDelete"}, {"original_string": "public IDebugCounter cntDeviceStrored;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceStrored", "var_name": "cntDeviceStrored"}, {"original_string": "public IDebugCounter cntDeviceStoreThrottled;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceStoreThrottled", "var_name": "cntDeviceStoreThrottled"}, {"original_string": "public IDebugCounter cntDeviceRemovedFromStore;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDeviceRemovedFromStore", "var_name": "cntDeviceRemovedFromStore"}, {"original_string": "public IDebugCounter cntSyncException;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntSyncException", "var_name": "cntSyncException"}, {"original_string": "public IDebugCounter cntDevicesFromStore;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntDevicesFromStore", "var_name": "cntDevicesFromStore"}, {"original_string": "public IDebugCounter cntConsolidateStoreRuns;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntConsolidateStoreRuns", "var_name": "cntConsolidateStoreRuns"}, {"original_string": "public IDebugCounter cntConsolidateStoreDevicesRemoved;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntConsolidateStoreDevicesRemoved", "var_name": "cntConsolidateStoreDevicesRemoved"}, {"original_string": "public IDebugCounter cntTransitionToMaster;", "modifier": "public", "type": "IDebugCounter", "declarator": "cntTransitionToMaster", "var_name": "cntTransitionToMaster"}, {"original_string": "private IDebugEventService debugEventService;", "modifier": "private", "type": "IDebugEventService", "declarator": "debugEventService", "var_name": "debugEventService"}, {"original_string": "private IEventCategory<DeviceEvent> debugEventCategory;", "modifier": "private", "type": "IEventCategory<DeviceEvent>", "declarator": "debugEventCategory", "var_name": "debugEventCategory"}, {"original_string": "private boolean isMaster = false;", "modifier": "private", "type": "boolean", "declarator": "isMaster = false", "var_name": "isMaster"}, {"original_string": "static final String DEVICE_SYNC_STORE_NAME =\n\t\t\tDeviceManagerImpl.class.getCanonicalName() + \".stateStore\";", "modifier": "static final", "type": "String", "declarator": "DEVICE_SYNC_STORE_NAME =\n\t\t\tDeviceManagerImpl.class.getCanonicalName() + \".stateStore\"", "var_name": "DEVICE_SYNC_STORE_NAME"}, {"original_string": "static final int DEFAULT_SYNC_STORE_WRITE_INTERVAL_MS = 5*60*1000;", "modifier": "static final", "type": "int", "declarator": "DEFAULT_SYNC_STORE_WRITE_INTERVAL_MS = 5*60*1000", "var_name": "DEFAULT_SYNC_STORE_WRITE_INTERVAL_MS"}, {"original_string": "private int syncStoreWriteIntervalMs = DEFAULT_SYNC_STORE_WRITE_INTERVAL_MS;", "modifier": "private", "type": "int", "declarator": "syncStoreWriteIntervalMs = DEFAULT_SYNC_STORE_WRITE_INTERVAL_MS", "var_name": "syncStoreWriteIntervalMs"}, {"original_string": "static final int DEFAULT_INITIAL_SYNC_STORE_CONSOLIDATE_MS =\n\t\t\t15*1000;", "modifier": "static final", "type": "int", "declarator": "DEFAULT_INITIAL_SYNC_STORE_CONSOLIDATE_MS =\n\t\t\t15*1000", "var_name": "DEFAULT_INITIAL_SYNC_STORE_CONSOLIDATE_MS"}, {"original_string": "private int initialSyncStoreConsolidateMs =\n\t\t\tDEFAULT_INITIAL_SYNC_STORE_CONSOLIDATE_MS;", "modifier": "private", "type": "int", "declarator": "initialSyncStoreConsolidateMs =\n\t\t\tDEFAULT_INITIAL_SYNC_STORE_CONSOLIDATE_MS", "var_name": "initialSyncStoreConsolidateMs"}, {"original_string": "static final int DEFAULT_SYNC_STORE_CONSOLIDATE_INTERVAL_MS =\n\t\t\t75*60*1000;", "modifier": "static final", "type": "int", "declarator": "DEFAULT_SYNC_STORE_CONSOLIDATE_INTERVAL_MS =\n\t\t\t75*60*1000", "var_name": "DEFAULT_SYNC_STORE_CONSOLIDATE_INTERVAL_MS"}, {"original_string": "private final int syncStoreConsolidateIntervalMs =\n\t\t\tDEFAULT_SYNC_STORE_CONSOLIDATE_INTERVAL_MS;", "modifier": "private final", "type": "int", "declarator": "syncStoreConsolidateIntervalMs =\n\t\t\tDEFAULT_SYNC_STORE_CONSOLIDATE_INTERVAL_MS", "var_name": "syncStoreConsolidateIntervalMs"}, {"original_string": "protected static final int ENTITY_TIMEOUT = 60*60*1000;", "modifier": "protected static final", "type": "int", "declarator": "ENTITY_TIMEOUT = 60*60*1000", "var_name": "ENTITY_TIMEOUT"}, {"original_string": "protected static final int ENTITY_CLEANUP_INTERVAL = 60*60;", "modifier": "protected static final", "type": "int", "declarator": "ENTITY_CLEANUP_INTERVAL = 60*60", "var_name": "ENTITY_CLEANUP_INTERVAL"}, {"original_string": "protected ConcurrentHashMap<Long, Device> deviceMap;", "modifier": "protected", "type": "ConcurrentHashMap<Long, Device>", "declarator": "deviceMap", "var_name": "deviceMap"}, {"original_string": "protected AtomicLong deviceKeyCounter = new AtomicLong(0);", "modifier": "protected", "type": "AtomicLong", "declarator": "deviceKeyCounter = new AtomicLong(0)", "var_name": "deviceKeyCounter"}, {"original_string": "protected DeviceUniqueIndex primaryIndex;", "modifier": "protected", "type": "DeviceUniqueIndex", "declarator": "primaryIndex", "var_name": "primaryIndex"}, {"original_string": "protected Map<EnumSet<DeviceField>, DeviceIndex> secondaryIndexMap;", "modifier": "protected", "type": "Map<EnumSet<DeviceField>, DeviceIndex>", "declarator": "secondaryIndexMap", "var_name": "secondaryIndexMap"}, {"original_string": "protected ConcurrentHashMap<String, ClassState> classStateMap;", "modifier": "protected", "type": "ConcurrentHashMap<String, ClassState>", "declarator": "classStateMap", "var_name": "classStateMap"}, {"original_string": "protected Set<EnumSet<DeviceField>> perClassIndices;", "modifier": "protected", "type": "Set<EnumSet<DeviceField>>", "declarator": "perClassIndices", "var_name": "perClassIndices"}, {"original_string": "protected IEntityClassifierService entityClassifier;", "modifier": "protected", "type": "IEntityClassifierService", "declarator": "entityClassifier", "var_name": "entityClassifier"}, {"original_string": "protected ListenerDispatcher<String,IDeviceListener> deviceListeners;", "modifier": "protected", "type": "ListenerDispatcher<String,IDeviceListener>", "declarator": "deviceListeners", "var_name": "deviceListeners"}, {"original_string": "public AttachmentPointComparator apComparator;", "modifier": "public", "type": "AttachmentPointComparator", "declarator": "apComparator", "var_name": "apComparator"}, {"original_string": "private Set<SwitchPort> suppressAPs;", "modifier": "private", "type": "Set<SwitchPort>", "declarator": "suppressAPs", "var_name": "suppressAPs"}, {"original_string": "public SingletonTask entityCleanupTask;", "modifier": "public", "type": "SingletonTask", "declarator": "entityCleanupTask", "var_name": "entityCleanupTask"}, {"original_string": "private SingletonTask storeConsolidateTask;", "modifier": "private", "type": "SingletonTask", "declarator": "storeConsolidateTask", "var_name": "storeConsolidateTask"}, {"original_string": "protected HAListenerDelegate haListenerDelegate;", "modifier": "protected", "type": "HAListenerDelegate", "declarator": "haListenerDelegate", "var_name": "haListenerDelegate"}], "methods": [{"identifier": "getDevice", "parameters": "(Long deviceKey)", "modifiers": "@Override public", "return": "IDevice", "signature": "IDevice getDevice(Long deviceKey)", "full_signature": "@Override public IDevice getDevice(Long deviceKey)", "class_method_signature": "DeviceManagerImpl.getDevice(Long deviceKey)", "testcase": false, "constructor": false}, {"identifier": "findDevice", "parameters": "(MacAddress macAddress, VlanVid vlan,\n\t\t\tIPv4Address ipv4Address, DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "modifiers": "@Override public", "return": "IDevice", "signature": "IDevice findDevice(MacAddress macAddress, VlanVid vlan,\n\t\t\tIPv4Address ipv4Address, DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "full_signature": "@Override public IDevice findDevice(MacAddress macAddress, VlanVid vlan,\n\t\t\tIPv4Address ipv4Address, DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "class_method_signature": "DeviceManagerImpl.findDevice(MacAddress macAddress, VlanVid vlan,\n\t\t\tIPv4Address ipv4Address, DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "findClassDevice", "parameters": "(IEntityClass entityClass, MacAddress macAddress,\n\t\t\tVlanVid vlan, IPv4Address ipv4Address)", "modifiers": "@Override public", "return": "IDevice", "signature": "IDevice findClassDevice(IEntityClass entityClass, MacAddress macAddress,\n\t\t\tVlanVid vlan, IPv4Address ipv4Address)", "full_signature": "@Override public IDevice findClassDevice(IEntityClass entityClass, MacAddress macAddress,\n\t\t\tVlanVid vlan, IPv4Address ipv4Address)", "class_method_signature": "DeviceManagerImpl.findClassDevice(IEntityClass entityClass, MacAddress macAddress,\n\t\t\tVlanVid vlan, IPv4Address ipv4Address)", "testcase": false, "constructor": false}, {"identifier": "getAllDevices", "parameters": "()", "modifiers": "@Override public", "return": "Collection<? extends IDevice>", "signature": "Collection<? extends IDevice> getAllDevices()", "full_signature": "@Override public Collection<? extends IDevice> getAllDevices()", "class_method_signature": "DeviceManagerImpl.getAllDevices()", "testcase": false, "constructor": false}, {"identifier": "addIndex", "parameters": "(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "modifiers": "@Override public", "return": "void", "signature": "void addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "full_signature": "@Override public void addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "class_method_signature": "DeviceManagerImpl.addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "testcase": false, "constructor": false}, {"identifier": "queryDevices", "parameters": "(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "modifiers": "@Override public", "return": "Iterator<? extends IDevice>", "signature": "Iterator<? extends IDevice> queryDevices(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "full_signature": "@Override public Iterator<? extends IDevice> queryDevices(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "class_method_signature": "DeviceManagerImpl.queryDevices(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "queryClassDevices", "parameters": "(IEntityClass entityClass,\n\t\t\tMacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "modifiers": "@Override public", "return": "Iterator<? extends IDevice>", "signature": "Iterator<? extends IDevice> queryClassDevices(IEntityClass entityClass,\n\t\t\tMacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "full_signature": "@Override public Iterator<? extends IDevice> queryClassDevices(IEntityClass entityClass,\n\t\t\tMacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "class_method_signature": "DeviceManagerImpl.queryClassDevices(IEntityClass entityClass,\n\t\t\tMacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "getDeviceIteratorForQuery", "parameters": "(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "modifiers": "protected", "return": "Iterator<Device>", "signature": "Iterator<Device> getDeviceIteratorForQuery(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "full_signature": "protected Iterator<Device> getDeviceIteratorForQuery(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "class_method_signature": "DeviceManagerImpl.getDeviceIteratorForQuery(MacAddress macAddress,\n\t\t\tVlanVid vlan,\n\t\t\tIPv4Address ipv4Address,\n\t\t\tDatapathId switchDPID,\n\t\t\tOFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(IDeviceListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IDeviceListener listener)", "full_signature": "@Override public void addListener(IDeviceListener listener)", "class_method_signature": "DeviceManagerImpl.addListener(IDeviceListener listener)", "testcase": false, "constructor": false}, {"identifier": "addSuppressAPs", "parameters": "(DatapathId swId, OFPort port)", "modifiers": "@Override public", "return": "void", "signature": "void addSuppressAPs(DatapathId swId, OFPort port)", "full_signature": "@Override public void addSuppressAPs(DatapathId swId, OFPort port)", "class_method_signature": "DeviceManagerImpl.addSuppressAPs(DatapathId swId, OFPort port)", "testcase": false, "constructor": false}, {"identifier": "removeSuppressAPs", "parameters": "(DatapathId swId, OFPort port)", "modifiers": "@Override public", "return": "void", "signature": "void removeSuppressAPs(DatapathId swId, OFPort port)", "full_signature": "@Override public void removeSuppressAPs(DatapathId swId, OFPort port)", "class_method_signature": "DeviceManagerImpl.removeSuppressAPs(DatapathId swId, OFPort port)", "testcase": false, "constructor": false}, {"identifier": "getSuppressAPs", "parameters": "()", "modifiers": "@Override public", "return": "Set<SwitchPort>", "signature": "Set<SwitchPort> getSuppressAPs()", "full_signature": "@Override public Set<SwitchPort> getSuppressAPs()", "class_method_signature": "DeviceManagerImpl.getSuppressAPs()", "testcase": false, "constructor": false}, {"identifier": "logListeners", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void logListeners()", "full_signature": "private void logListeners()", "class_method_signature": "DeviceManagerImpl.logListeners()", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "(String type)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getInfo(String type)", "full_signature": "@Override public Map<String, Object> getInfo(String type)", "class_method_signature": "DeviceManagerImpl.getInfo(String type)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DeviceManagerImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "isCallbackOrderingPrereq", "parameters": "(OFType type, String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCallbackOrderingPrereq(OFType type, String name)", "full_signature": "@Override public boolean isCallbackOrderingPrereq(OFType type, String name)", "class_method_signature": "DeviceManagerImpl.isCallbackOrderingPrereq(OFType type, String name)", "testcase": false, "constructor": false}, {"identifier": "isCallbackOrderingPostreq", "parameters": "(OFType type, String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCallbackOrderingPostreq(OFType type, String name)", "full_signature": "@Override public boolean isCallbackOrderingPostreq(OFType type, String name)", "class_method_signature": "DeviceManagerImpl.isCallbackOrderingPostreq(OFType type, String name)", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "(IOFSwitch sw, OFMessage msg,\n\t\t\tFloodlightContext cntx)", "modifiers": "@Override public", "return": "Command", "signature": "Command receive(IOFSwitch sw, OFMessage msg,\n\t\t\tFloodlightContext cntx)", "full_signature": "@Override public Command receive(IOFSwitch sw, OFMessage msg,\n\t\t\tFloodlightContext cntx)", "class_method_signature": "DeviceManagerImpl.receive(IOFSwitch sw, OFMessage msg,\n\t\t\tFloodlightContext cntx)", "testcase": false, "constructor": false}, {"identifier": "getModuleServices", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Class<? extends IFloodlightService>>", "signature": "Collection<Class<? extends IFloodlightService>> getModuleServices()", "full_signature": "@Override public Collection<Class<? extends IFloodlightService>> getModuleServices()", "class_method_signature": "DeviceManagerImpl.getModuleServices()", "testcase": false, "constructor": false}, {"identifier": "getServiceImpls", "parameters": "()", "modifiers": "@Override public", "return": "Map<Class<? extends IFloodlightService>, IFloodlightService>", "signature": "Map<Class<? extends IFloodlightService>, IFloodlightService> getServiceImpls()", "full_signature": "@Override public Map<Class<? extends IFloodlightService>, IFloodlightService> getServiceImpls()", "class_method_signature": "DeviceManagerImpl.getServiceImpls()", "testcase": false, "constructor": false}, {"identifier": "getModuleDependencies", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Class<? extends IFloodlightService>>", "signature": "Collection<Class<? extends IFloodlightService>> getModuleDependencies()", "full_signature": "@Override public Collection<Class<? extends IFloodlightService>> getModuleDependencies()", "class_method_signature": "DeviceManagerImpl.getModuleDependencies()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(FloodlightModuleContext fmc)", "modifiers": "@Override public", "return": "void", "signature": "void init(FloodlightModuleContext fmc)", "full_signature": "@Override public void init(FloodlightModuleContext fmc)", "class_method_signature": "DeviceManagerImpl.init(FloodlightModuleContext fmc)", "testcase": false, "constructor": false}, {"identifier": "registerDeviceManagerDebugEvents", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerDeviceManagerDebugEvents()", "full_signature": "private void registerDeviceManagerDebugEvents()", "class_method_signature": "DeviceManagerImpl.registerDeviceManagerDebugEvents()", "testcase": false, "constructor": false}, {"identifier": "startUp", "parameters": "(FloodlightModuleContext fmc)", "modifiers": "@Override public", "return": "void", "signature": "void startUp(FloodlightModuleContext fmc)", "full_signature": "@Override public void startUp(FloodlightModuleContext fmc)", "class_method_signature": "DeviceManagerImpl.startUp(FloodlightModuleContext fmc)", "testcase": false, "constructor": false}, {"identifier": "registerDeviceManagerDebugCounters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerDeviceManagerDebugCounters()", "full_signature": "private void registerDeviceManagerDebugCounters()", "class_method_signature": "DeviceManagerImpl.registerDeviceManagerDebugCounters()", "testcase": false, "constructor": false}, {"identifier": "processPacketInMessage", "parameters": "(IOFSwitch sw, OFPacketIn pi, FloodlightContext cntx)", "modifiers": "protected", "return": "Command", "signature": "Command processPacketInMessage(IOFSwitch sw, OFPacketIn pi, FloodlightContext cntx)", "full_signature": "protected Command processPacketInMessage(IOFSwitch sw, OFPacketIn pi, FloodlightContext cntx)", "class_method_signature": "DeviceManagerImpl.processPacketInMessage(IOFSwitch sw, OFPacketIn pi, FloodlightContext cntx)", "testcase": false, "constructor": false}, {"identifier": "snoopDHCPClientName", "parameters": "(Ethernet eth, Device srcDevice)", "modifiers": "private", "return": "void", "signature": "void snoopDHCPClientName(Ethernet eth, Device srcDevice)", "full_signature": "private void snoopDHCPClientName(Ethernet eth, Device srcDevice)", "class_method_signature": "DeviceManagerImpl.snoopDHCPClientName(Ethernet eth, Device srcDevice)", "testcase": false, "constructor": false}, {"identifier": "isValidAttachmentPoint", "parameters": "(DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidAttachmentPoint(DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "full_signature": "public boolean isValidAttachmentPoint(DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "class_method_signature": "DeviceManagerImpl.isValidAttachmentPoint(DatapathId switchDPID,\n\t\t\tOFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "getSrcNwAddr", "parameters": "(Ethernet eth, MacAddress dlAddr)", "modifiers": "private", "return": "IPv4Address", "signature": "IPv4Address getSrcNwAddr(Ethernet eth, MacAddress dlAddr)", "full_signature": "private IPv4Address getSrcNwAddr(Ethernet eth, MacAddress dlAddr)", "class_method_signature": "DeviceManagerImpl.getSrcNwAddr(Ethernet eth, MacAddress dlAddr)", "testcase": false, "constructor": false}, {"identifier": "getSourceEntityFromPacket", "parameters": "(Ethernet eth, DatapathId swdpid, OFPort port)", "modifiers": "protected", "return": "Entity", "signature": "Entity getSourceEntityFromPacket(Ethernet eth, DatapathId swdpid, OFPort port)", "full_signature": "protected Entity getSourceEntityFromPacket(Ethernet eth, DatapathId swdpid, OFPort port)", "class_method_signature": "DeviceManagerImpl.getSourceEntityFromPacket(Ethernet eth, DatapathId swdpid, OFPort port)", "testcase": false, "constructor": false}, {"identifier": "learnDeviceFromArpResponseData", "parameters": "(Ethernet eth,\n\t\t\tDatapathId swdpid,\n\t\t\tOFPort port)", "modifiers": "protected", "return": "void", "signature": "void learnDeviceFromArpResponseData(Ethernet eth,\n\t\t\tDatapathId swdpid,\n\t\t\tOFPort port)", "full_signature": "protected void learnDeviceFromArpResponseData(Ethernet eth,\n\t\t\tDatapathId swdpid,\n\t\t\tOFPort port)", "class_method_signature": "DeviceManagerImpl.learnDeviceFromArpResponseData(Ethernet eth,\n\t\t\tDatapathId swdpid,\n\t\t\tOFPort port)", "testcase": false, "constructor": false}, {"identifier": "getDestEntityFromPacket", "parameters": "(Ethernet eth)", "modifiers": "protected", "return": "Entity", "signature": "Entity getDestEntityFromPacket(Ethernet eth)", "full_signature": "protected Entity getDestEntityFromPacket(Ethernet eth)", "class_method_signature": "DeviceManagerImpl.getDestEntityFromPacket(Ethernet eth)", "testcase": false, "constructor": false}, {"identifier": "findDeviceByEntity", "parameters": "(Entity entity)", "modifiers": "protected", "return": "Device", "signature": "Device findDeviceByEntity(Entity entity)", "full_signature": "protected Device findDeviceByEntity(Entity entity)", "class_method_signature": "DeviceManagerImpl.findDeviceByEntity(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "findDestByEntity", "parameters": "(IEntityClass reference,\n\t\t\tEntity dstEntity)", "modifiers": "protected", "return": "Device", "signature": "Device findDestByEntity(IEntityClass reference,\n\t\t\tEntity dstEntity)", "full_signature": "protected Device findDestByEntity(IEntityClass reference,\n\t\t\tEntity dstEntity)", "class_method_signature": "DeviceManagerImpl.findDestByEntity(IEntityClass reference,\n\t\t\tEntity dstEntity)", "testcase": false, "constructor": false}, {"identifier": "learnDeviceByEntity", "parameters": "(Entity entity)", "modifiers": "protected", "return": "Device", "signature": "Device learnDeviceByEntity(Entity entity)", "full_signature": "protected Device learnDeviceByEntity(Entity entity)", "class_method_signature": "DeviceManagerImpl.learnDeviceByEntity(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "isEntityAllowed", "parameters": "(Entity entity, IEntityClass entityClass)", "modifiers": "protected", "return": "boolean", "signature": "boolean isEntityAllowed(Entity entity, IEntityClass entityClass)", "full_signature": "protected boolean isEntityAllowed(Entity entity, IEntityClass entityClass)", "class_method_signature": "DeviceManagerImpl.isEntityAllowed(Entity entity, IEntityClass entityClass)", "testcase": false, "constructor": false}, {"identifier": "findChangedFields", "parameters": "(Device device,\n\t\t\tEntity newEntity)", "modifiers": "protected", "return": "EnumSet<DeviceField>", "signature": "EnumSet<DeviceField> findChangedFields(Device device,\n\t\t\tEntity newEntity)", "full_signature": "protected EnumSet<DeviceField> findChangedFields(Device device,\n\t\t\tEntity newEntity)", "class_method_signature": "DeviceManagerImpl.findChangedFields(Device device,\n\t\t\tEntity newEntity)", "testcase": false, "constructor": false}, {"identifier": "processUpdates", "parameters": "(Queue<DeviceUpdate> updates)", "modifiers": "protected", "return": "void", "signature": "void processUpdates(Queue<DeviceUpdate> updates)", "full_signature": "protected void processUpdates(Queue<DeviceUpdate> updates)", "class_method_signature": "DeviceManagerImpl.processUpdates(Queue<DeviceUpdate> updates)", "testcase": false, "constructor": false}, {"identifier": "notifyListeners", "parameters": "(List<IDeviceListener> listeners, DeviceUpdate update)", "modifiers": "protected", "return": "void", "signature": "void notifyListeners(List<IDeviceListener> listeners, DeviceUpdate update)", "full_signature": "protected void notifyListeners(List<IDeviceListener> listeners, DeviceUpdate update)", "class_method_signature": "DeviceManagerImpl.notifyListeners(List<IDeviceListener> listeners, DeviceUpdate update)", "testcase": false, "constructor": false}, {"identifier": "allKeyFieldsPresent", "parameters": "(Entity e, EnumSet<DeviceField> keyFields)", "modifiers": "protected", "return": "boolean", "signature": "boolean allKeyFieldsPresent(Entity e, EnumSet<DeviceField> keyFields)", "full_signature": "protected boolean allKeyFieldsPresent(Entity e, EnumSet<DeviceField> keyFields)", "class_method_signature": "DeviceManagerImpl.allKeyFieldsPresent(Entity e, EnumSet<DeviceField> keyFields)", "testcase": false, "constructor": false}, {"identifier": "updateUpdates", "parameters": "(LinkedList<DeviceUpdate> list, DeviceUpdate update)", "modifiers": "private", "return": "LinkedList<DeviceUpdate>", "signature": "LinkedList<DeviceUpdate> updateUpdates(LinkedList<DeviceUpdate> list, DeviceUpdate update)", "full_signature": "private LinkedList<DeviceUpdate> updateUpdates(LinkedList<DeviceUpdate> list, DeviceUpdate update)", "class_method_signature": "DeviceManagerImpl.updateUpdates(LinkedList<DeviceUpdate> list, DeviceUpdate update)", "testcase": false, "constructor": false}, {"identifier": "getClassState", "parameters": "(IEntityClass clazz)", "modifiers": "private", "return": "ClassState", "signature": "ClassState getClassState(IEntityClass clazz)", "full_signature": "private ClassState getClassState(IEntityClass clazz)", "class_method_signature": "DeviceManagerImpl.getClassState(IEntityClass clazz)", "testcase": false, "constructor": false}, {"identifier": "updateIndices", "parameters": "(Device device, Long deviceKey)", "modifiers": "private", "return": "boolean", "signature": "boolean updateIndices(Device device, Long deviceKey)", "full_signature": "private boolean updateIndices(Device device, Long deviceKey)", "class_method_signature": "DeviceManagerImpl.updateIndices(Device device, Long deviceKey)", "testcase": false, "constructor": false}, {"identifier": "updateSecondaryIndices", "parameters": "(Entity entity,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey)", "modifiers": "private", "return": "void", "signature": "void updateSecondaryIndices(Entity entity,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey)", "full_signature": "private void updateSecondaryIndices(Entity entity,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey)", "class_method_signature": "DeviceManagerImpl.updateSecondaryIndices(Entity entity,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey)", "testcase": false, "constructor": false}, {"identifier": "cleanupEntities", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void cleanupEntities()", "full_signature": "protected void cleanupEntities()", "class_method_signature": "DeviceManagerImpl.cleanupEntities()", "testcase": false, "constructor": false}, {"identifier": "removeEntity", "parameters": "(Entity removed,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey,\n\t\t\t Collection<Entity> others)", "modifiers": "protected", "return": "void", "signature": "void removeEntity(Entity removed,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey,\n\t\t\t Collection<Entity> others)", "full_signature": "protected void removeEntity(Entity removed,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey,\n\t\t\t Collection<Entity> others)", "class_method_signature": "DeviceManagerImpl.removeEntity(Entity removed,\n\t\t\t IEntityClass entityClass,\n\t\t\t Long deviceKey,\n\t\t\t Collection<Entity> others)", "testcase": false, "constructor": false}, {"identifier": "deleteDevice", "parameters": "(Device device)", "modifiers": "protected", "return": "void", "signature": "void deleteDevice(Device device)", "full_signature": "protected void deleteDevice(Device device)", "class_method_signature": "DeviceManagerImpl.deleteDevice(Device device)", "testcase": false, "constructor": false}, {"identifier": "getEntityKeys", "parameters": "(MacAddress macAddress,\n\t\t\t VlanVid vlan,\n\t\t\t IPv4Address ipv4Address,\n\t\t\t DatapathId switchDPID,\n\t\t\t OFPort switchPort)", "modifiers": "private", "return": "EnumSet<DeviceField>", "signature": "EnumSet<DeviceField> getEntityKeys(MacAddress macAddress,\n\t\t\t VlanVid vlan,\n\t\t\t IPv4Address ipv4Address,\n\t\t\t DatapathId switchDPID,\n\t\t\t OFPort switchPort)", "full_signature": "private EnumSet<DeviceField> getEntityKeys(MacAddress macAddress,\n\t\t\t VlanVid vlan,\n\t\t\t IPv4Address ipv4Address,\n\t\t\t DatapathId switchDPID,\n\t\t\t OFPort switchPort)", "class_method_signature": "DeviceManagerImpl.getEntityKeys(MacAddress macAddress,\n\t\t\t VlanVid vlan,\n\t\t\t IPv4Address ipv4Address,\n\t\t\t DatapathId switchDPID,\n\t\t\t OFPort switchPort)", "testcase": false, "constructor": false}, {"identifier": "queryClassByEntity", "parameters": "(IEntityClass clazz,\n\t\t\t EnumSet<DeviceField> keyFields,\n\t\t\t Entity entity)", "modifiers": "protected", "return": "Iterator<Device>", "signature": "Iterator<Device> queryClassByEntity(IEntityClass clazz,\n\t\t\t EnumSet<DeviceField> keyFields,\n\t\t\t Entity entity)", "full_signature": "protected Iterator<Device> queryClassByEntity(IEntityClass clazz,\n\t\t\t EnumSet<DeviceField> keyFields,\n\t\t\t Entity entity)", "class_method_signature": "DeviceManagerImpl.queryClassByEntity(IEntityClass clazz,\n\t\t\t EnumSet<DeviceField> keyFields,\n\t\t\t Entity entity)", "testcase": false, "constructor": false}, {"identifier": "allocateDevice", "parameters": "(Long deviceKey,\n\t\t\t Entity entity,\n\t\t\t IEntityClass entityClass)", "modifiers": "protected", "return": "Device", "signature": "Device allocateDevice(Long deviceKey,\n\t\t\t Entity entity,\n\t\t\t IEntityClass entityClass)", "full_signature": "protected Device allocateDevice(Long deviceKey,\n\t\t\t Entity entity,\n\t\t\t IEntityClass entityClass)", "class_method_signature": "DeviceManagerImpl.allocateDevice(Long deviceKey,\n\t\t\t Entity entity,\n\t\t\t IEntityClass entityClass)", "testcase": false, "constructor": false}, {"identifier": "allocateDevice", "parameters": "(Long deviceKey,\n\t\t\t String dhcpClientName,\n\t\t\t List<AttachmentPoint> aps,\n\t\t\t List<AttachmentPoint> trueAPs,\n\t\t\t Collection<Entity> entities,\n\t\t\t IEntityClass entityClass)", "modifiers": "protected", "return": "Device", "signature": "Device allocateDevice(Long deviceKey,\n\t\t\t String dhcpClientName,\n\t\t\t List<AttachmentPoint> aps,\n\t\t\t List<AttachmentPoint> trueAPs,\n\t\t\t Collection<Entity> entities,\n\t\t\t IEntityClass entityClass)", "full_signature": "protected Device allocateDevice(Long deviceKey,\n\t\t\t String dhcpClientName,\n\t\t\t List<AttachmentPoint> aps,\n\t\t\t List<AttachmentPoint> trueAPs,\n\t\t\t Collection<Entity> entities,\n\t\t\t IEntityClass entityClass)", "class_method_signature": "DeviceManagerImpl.allocateDevice(Long deviceKey,\n\t\t\t String dhcpClientName,\n\t\t\t List<AttachmentPoint> aps,\n\t\t\t List<AttachmentPoint> trueAPs,\n\t\t\t Collection<Entity> entities,\n\t\t\t IEntityClass entityClass)", "testcase": false, "constructor": false}, {"identifier": "allocateDevice", "parameters": "(Device device,\n\t\t\t Entity entity,\n\t\t\t int insertionpoint)", "modifiers": "protected", "return": "Device", "signature": "Device allocateDevice(Device device,\n\t\t\t Entity entity,\n\t\t\t int insertionpoint)", "full_signature": "protected Device allocateDevice(Device device,\n\t\t\t Entity entity,\n\t\t\t int insertionpoint)", "class_method_signature": "DeviceManagerImpl.allocateDevice(Device device,\n\t\t\t Entity entity,\n\t\t\t int insertionpoint)", "testcase": false, "constructor": false}, {"identifier": "allocateDevice", "parameters": "(Device device, Set <Entity> entities)", "modifiers": "protected", "return": "Device", "signature": "Device allocateDevice(Device device, Set <Entity> entities)", "full_signature": "protected Device allocateDevice(Device device, Set <Entity> entities)", "class_method_signature": "DeviceManagerImpl.allocateDevice(Device device, Set <Entity> entities)", "testcase": false, "constructor": false}, {"identifier": "topologyChanged", "parameters": "(List<LDUpdate> updateList)", "modifiers": "@Override public", "return": "void", "signature": "void topologyChanged(List<LDUpdate> updateList)", "full_signature": "@Override public void topologyChanged(List<LDUpdate> updateList)", "class_method_signature": "DeviceManagerImpl.topologyChanged(List<LDUpdate> updateList)", "testcase": false, "constructor": false}, {"identifier": "sendDeviceMovedNotification", "parameters": "(Device d)", "modifiers": "protected", "return": "void", "signature": "void sendDeviceMovedNotification(Device d)", "full_signature": "protected void sendDeviceMovedNotification(Device d)", "class_method_signature": "DeviceManagerImpl.sendDeviceMovedNotification(Device d)", "testcase": false, "constructor": false}, {"identifier": "entityClassChanged", "parameters": "(Set<String> entityClassNames)", "modifiers": "@Override public", "return": "void", "signature": "void entityClassChanged(Set<String> entityClassNames)", "full_signature": "@Override public void entityClassChanged(Set<String> entityClassNames)", "class_method_signature": "DeviceManagerImpl.entityClassChanged(Set<String> entityClassNames)", "testcase": false, "constructor": false}, {"identifier": "reclassifyDevice", "parameters": "(Device device)", "modifiers": "protected", "return": "boolean", "signature": "boolean reclassifyDevice(Device device)", "full_signature": "protected boolean reclassifyDevice(Device device)", "class_method_signature": "DeviceManagerImpl.reclassifyDevice(Device device)", "testcase": false, "constructor": false}, {"identifier": "setSyncStoreWriteInterval", "parameters": "(int intervalMs)", "modifiers": "", "return": "void", "signature": "void setSyncStoreWriteInterval(int intervalMs)", "full_signature": " void setSyncStoreWriteInterval(int intervalMs)", "class_method_signature": "DeviceManagerImpl.setSyncStoreWriteInterval(int intervalMs)", "testcase": false, "constructor": false}, {"identifier": "setInitialSyncStoreConsolidateMs", "parameters": "(int intervalMs)", "modifiers": "", "return": "void", "signature": "void setInitialSyncStoreConsolidateMs(int intervalMs)", "full_signature": " void setInitialSyncStoreConsolidateMs(int intervalMs)", "class_method_signature": "DeviceManagerImpl.setInitialSyncStoreConsolidateMs(int intervalMs)", "testcase": false, "constructor": false}, {"identifier": "scheduleConsolidateStoreNow", "parameters": "()", "modifiers": "", "return": "void", "signature": "void scheduleConsolidateStoreNow()", "full_signature": " void scheduleConsolidateStoreNow()", "class_method_signature": "DeviceManagerImpl.scheduleConsolidateStoreNow()", "testcase": false, "constructor": false}, {"identifier": "setSyncServiceIfNotSet", "parameters": "(ISyncService syncService)", "modifiers": "protected", "return": "void", "signature": "void setSyncServiceIfNotSet(ISyncService syncService)", "full_signature": "protected void setSyncServiceIfNotSet(ISyncService syncService)", "class_method_signature": "DeviceManagerImpl.setSyncServiceIfNotSet(ISyncService syncService)", "testcase": false, "constructor": false}, {"identifier": "getHAListener", "parameters": "()", "modifiers": "", "return": "IHAListener", "signature": "IHAListener getHAListener()", "full_signature": " IHAListener getHAListener()", "class_method_signature": "DeviceManagerImpl.getHAListener()", "testcase": false, "constructor": false}], "file": "src/agents/apps/floodlight/floodlight-1.0/src/main/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImpl.java"}, "focal_method": {"identifier": "addIndex", "parameters": "(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields) {\n\t\tif (perClass) {\n\t\t\tperClassIndices.add(keyFields);\n\t\t} else {\n\t\t\tsecondaryIndexMap.put(keyFields,\n\t\t\t\t\tnew DeviceMultiIndex(keyFields));\n\t\t}\n\t}", "signature": "void addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "full_signature": "@Override public void addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "class_method_signature": "DeviceManagerImpl.addIndex(boolean perClass,\n\t\t\tEnumSet<DeviceField> keyFields)", "testcase": false, "constructor": false, "invocations": ["add", "put"]}, "repository": {"repo_id": 181421086, "url": "https://github.com/seungsoo-lee/DELTA", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 99244, "license": "licensed"}}