{"test_class": {"identifier": "CampusUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Set<Long> processedIdsSet;", "modifier": "private static", "type": "Set<Long>", "declarator": "processedIdsSet", "var_name": "processedIdsSet"}], "file": "olat7.8/src/test/java/org/olat/connectors/campus/CampusUtilsTest.java"}, "test_case": {"identifier": "addIfNotAlreadyProcessed_notAdded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addIfNotAlreadyProcessed_notAdded() {\n        assertFalse(CampusUtils.addIfNotAlreadyProcessed(processedIdsSet, new Long(100)));\n    }", "signature": "void addIfNotAlreadyProcessed_notAdded()", "full_signature": "@Test public void addIfNotAlreadyProcessed_notAdded()", "class_method_signature": "CampusUtilsTest.addIfNotAlreadyProcessed_notAdded()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "addIfNotAlreadyProcessed"]}, "focal_class": {"identifier": "CampusUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String SEMICOLON_REPLACEMENT = \"&Semikolon&\";", "modifier": "public final static", "type": "String", "declarator": "SEMICOLON_REPLACEMENT = \"&Semikolon&\"", "var_name": "SEMICOLON_REPLACEMENT"}, {"original_string": "public final static String SEMICOLON = \";\";", "modifier": "public final static", "type": "String", "declarator": "SEMICOLON = \";\"", "var_name": "SEMICOLON"}], "methods": [{"identifier": "addIfNotAlreadyProcessed", "parameters": "(Set<Long> processedIdsSet, Long id)", "modifiers": "public static", "return": "boolean", "signature": "boolean addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "full_signature": "public static boolean addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "class_method_signature": "CampusUtils.addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/connectors/campus/CampusUtils.java"}, "focal_method": {"identifier": "addIfNotAlreadyProcessed", "parameters": "(Set<Long> processedIdsSet, Long id)", "modifiers": "public static", "return": "boolean", "body": "public static boolean addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id) {\n        if (processedIdsSet.contains(id)) {\n            return false;\n        } else {\n            processedIdsSet.add(id);\n            return true;\n        }\n    }", "signature": "boolean addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "full_signature": "public static boolean addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "class_method_signature": "CampusUtils.addIfNotAlreadyProcessed(Set<Long> processedIdsSet, Long id)", "testcase": false, "constructor": false, "invocations": ["contains", "add"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}