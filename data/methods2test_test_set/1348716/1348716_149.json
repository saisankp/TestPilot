{"test_class": {"identifier": "FlatLoanInterestCalculatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FlatLoanInterestCalculator flatLoanInterestCalculator;", "modifier": "private", "type": "FlatLoanInterestCalculator", "declarator": "flatLoanInterestCalculator", "var_name": "flatLoanInterestCalculator"}], "file": "appdomain/src/test/java/org/mifos/clientportfolio/newloan/domain/FlatLoanInterestCalculatorTest.java"}, "test_case": {"identifier": "shouldCalculateFlatLoanInterest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCalculateFlatLoanInterest() {\n\n        // setup\n        LoanInterestCalculationDetails loanInterestCalculationDetails = new LoanInterestCalculationDetailsBuilder().withLoanAmount(\"100.0\")\n                                                                                                                   .withInterestRate(\"10.0\")\n                                                                                                                   .withDurationInYears(\"1.0\")\n                                                                                                                   .build();\n\n        // exercise test\n        Money calculatedInterest = flatLoanInterestCalculator.calculate(loanInterestCalculationDetails);\n\n        // verification\n        assertThat(calculatedInterest, is(TestMoneyUtil.createMoney(\"10.0\")));\n    }", "signature": "void shouldCalculateFlatLoanInterest()", "full_signature": "@Test public void shouldCalculateFlatLoanInterest()", "class_method_signature": "FlatLoanInterestCalculatorTest.shouldCalculateFlatLoanInterest()", "testcase": true, "constructor": false, "invocations": ["build", "withDurationInYears", "withInterestRate", "withLoanAmount", "calculate", "assertThat", "is", "createMoney"]}, "focal_class": {"identifier": "FlatLoanInterestCalculator", "superclass": "", "interfaces": "implements LoanInterestCalculator", "fields": [], "methods": [{"identifier": "calculate", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "Money", "signature": "Money calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public Money calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "FlatLoanInterestCalculator.calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/clientportfolio/newloan/domain/FlatLoanInterestCalculator.java"}, "focal_method": {"identifier": "calculate", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "Money", "body": "@Override\n    public Money calculate(LoanInterestCalculationDetails loanInterestCalculationDetails) {\n        Money loanAmount = loanInterestCalculationDetails.getLoanAmount();\n        Double interestRate = loanInterestCalculationDetails.getInterestRate();\n        Double durationInYears = loanInterestCalculationDetails.getDurationInYears();\n\n        // FIXME - keithw - the calls to Money.multiply() and Money.divide() round prematurely\n        return loanAmount.multiply(interestRate).multiply(durationInYears).divide(new BigDecimal(\"100\"));\n    }", "signature": "Money calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public Money calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "FlatLoanInterestCalculator.calculate(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false, "invocations": ["getLoanAmount", "getInterestRate", "getDurationInYears", "divide", "multiply", "multiply"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}