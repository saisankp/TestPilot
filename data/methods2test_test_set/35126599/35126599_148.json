{"test_class": {"identifier": "BaseFinishedSelectStatementTest", "superclass": "", "interfaces": "", "fields": [], "file": "sqlitebuilder/src/test/java/com/nhaarman/sqlitebuilder/impl/BaseFinishedSelectStatementTest.java"}, "test_case": {"identifier": "iterator_returnsProperIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void iterator_returnsProperIterator() {\n    /* Given */\n    SqlPart sqlPart = mock(SqlPart.class);\n    TestBaseFinishedSelectStatement statement = new TestBaseFinishedSelectStatement(sqlPart);\n\n    /* When */\n    Iterator<SqlPart> iterator = statement.iterator();\n\n    /* Then */\n    assertThat(iterator.hasNext(), is(true));\n    assertThat(iterator.next(), is((SqlPart) statement));\n    assertThat(iterator.hasNext(), is(true));\n    assertThat(iterator.next(), is(sqlPart));\n    assertThat(iterator.hasNext(), is(false));\n  }", "signature": "void iterator_returnsProperIterator()", "full_signature": "@Test public void iterator_returnsProperIterator()", "class_method_signature": "BaseFinishedSelectStatementTest.iterator_returnsProperIterator()", "testcase": true, "constructor": false, "invocations": ["mock", "iterator", "assertThat", "hasNext", "is", "assertThat", "next", "is", "assertThat", "hasNext", "is", "assertThat", "next", "is", "assertThat", "hasNext", "is"]}, "focal_class": {"identifier": "BaseFinishedSelectStatement", "superclass": "extends BaseSqlPart", "interfaces": "implements FinishedSelectStatement", "fields": [], "methods": [{"identifier": "iterator", "parameters": "()", "modifiers": "@NotNull @Override public final", "return": "Iterator<SqlPart>", "signature": "Iterator<SqlPart> iterator()", "full_signature": "@NotNull @Override public final Iterator<SqlPart> iterator()", "class_method_signature": "BaseFinishedSelectStatement.iterator()", "testcase": false, "constructor": false}, {"identifier": "executeOn", "parameters": "(@NotNull final StatementExecutor<T> statementExecutor)", "modifiers": "@Override public", "return": "T", "signature": "T executeOn(@NotNull final StatementExecutor<T> statementExecutor)", "full_signature": "@Override public T executeOn(@NotNull final StatementExecutor<T> statementExecutor)", "class_method_signature": "BaseFinishedSelectStatement.executeOn(@NotNull final StatementExecutor<T> statementExecutor)", "testcase": false, "constructor": false}], "file": "sqlitebuilder/src/main/java/com/nhaarman/sqlitebuilder/impl/BaseFinishedSelectStatement.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@NotNull @Override public final", "return": "Iterator<SqlPart>", "body": "@NotNull\n  @Override\n  public final Iterator<SqlPart> iterator() {\n    return new SqlPartIterator(this);\n  }", "signature": "Iterator<SqlPart> iterator()", "full_signature": "@NotNull @Override public final Iterator<SqlPart> iterator()", "class_method_signature": "BaseFinishedSelectStatement.iterator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}