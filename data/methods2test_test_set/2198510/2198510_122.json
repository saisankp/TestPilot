{"test_class": {"identifier": "TestJMSMessageConsumer", "superclass": "extends JMSMessageConsumerTestBase", "interfaces": "", "fields": [], "file": "flume-ng-sources/flume-jms-source/src/test/java/org/apache/flume/source/jms/TestJMSMessageConsumer.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClose() throws Exception {\n    doThrow(new JMSException(\"\")).when(session).close();\n    consumer = create();\n    consumer.close();\n    verify(session, times(1)).close();\n    verify(connection, times(1)).close();\n  }", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "TestJMSMessageConsumer.testClose()", "testcase": true, "constructor": false, "invocations": ["close", "when", "doThrow", "create", "close", "close", "verify", "times", "close", "verify", "times"]}, "focal_class": {"identifier": "JMSMessageConsumer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(JMSMessageConsumer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(JMSMessageConsumer.class)", "var_name": "logger"}, {"original_string": "private final int batchSize;", "modifier": "private final", "type": "int", "declarator": "batchSize", "var_name": "batchSize"}, {"original_string": "private final long pollTimeout;", "modifier": "private final", "type": "long", "declarator": "pollTimeout", "var_name": "pollTimeout"}, {"original_string": "private final JMSMessageConverter messageConverter;", "modifier": "private final", "type": "JMSMessageConverter", "declarator": "messageConverter", "var_name": "messageConverter"}, {"original_string": "private final Connection connection;", "modifier": "private final", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private final Session session;", "modifier": "private final", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private final Destination destination;", "modifier": "private final", "type": "Destination", "declarator": "destination", "var_name": "destination"}, {"original_string": "private final MessageConsumer messageConsumer;", "modifier": "private final", "type": "MessageConsumer", "declarator": "messageConsumer", "var_name": "messageConsumer"}], "methods": [{"identifier": "JMSMessageConsumer", "parameters": "(InitialContext initialContext, ConnectionFactory connectionFactory,\n                     String destinationName, JMSDestinationLocator destinationLocator,\n                     JMSDestinationType destinationType, String messageSelector, int batchSize,\n                     long pollTimeout, JMSMessageConverter messageConverter,\n                     Optional<String> userName, Optional<String> password,\n                     Optional<String> clientId, boolean createDurableSubscription,\n                     String durableSubscriptionName)", "modifiers": "", "return": "", "signature": " JMSMessageConsumer(InitialContext initialContext, ConnectionFactory connectionFactory,\n                     String destinationName, JMSDestinationLocator destinationLocator,\n                     JMSDestinationType destinationType, String messageSelector, int batchSize,\n                     long pollTimeout, JMSMessageConverter messageConverter,\n                     Optional<String> userName, Optional<String> password,\n                     Optional<String> clientId, boolean createDurableSubscription,\n                     String durableSubscriptionName)", "full_signature": "  JMSMessageConsumer(InitialContext initialContext, ConnectionFactory connectionFactory,\n                     String destinationName, JMSDestinationLocator destinationLocator,\n                     JMSDestinationType destinationType, String messageSelector, int batchSize,\n                     long pollTimeout, JMSMessageConverter messageConverter,\n                     Optional<String> userName, Optional<String> password,\n                     Optional<String> clientId, boolean createDurableSubscription,\n                     String durableSubscriptionName)", "class_method_signature": "JMSMessageConsumer.JMSMessageConsumer(InitialContext initialContext, ConnectionFactory connectionFactory,\n                     String destinationName, JMSDestinationLocator destinationLocator,\n                     JMSDestinationType destinationType, String messageSelector, int batchSize,\n                     long pollTimeout, JMSMessageConverter messageConverter,\n                     Optional<String> userName, Optional<String> password,\n                     Optional<String> clientId, boolean createDurableSubscription,\n                     String durableSubscriptionName)", "testcase": false, "constructor": true}, {"identifier": "take", "parameters": "()", "modifiers": "", "return": "List<Event>", "signature": "List<Event> take()", "full_signature": " List<Event> take()", "class_method_signature": "JMSMessageConsumer.take()", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "()", "modifiers": "private", "return": "Message", "signature": "Message receive()", "full_signature": "private Message receive()", "class_method_signature": "JMSMessageConsumer.receive()", "testcase": false, "constructor": false}, {"identifier": "receiveNoWait", "parameters": "()", "modifiers": "private", "return": "Message", "signature": "Message receiveNoWait()", "full_signature": "private Message receiveNoWait()", "class_method_signature": "JMSMessageConsumer.receiveNoWait()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "", "return": "void", "signature": "void commit()", "full_signature": " void commit()", "class_method_signature": "JMSMessageConsumer.commit()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "", "return": "void", "signature": "void rollback()", "full_signature": " void rollback()", "class_method_signature": "JMSMessageConsumer.rollback()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "", "return": "void", "signature": "void close()", "full_signature": " void close()", "class_method_signature": "JMSMessageConsumer.close()", "testcase": false, "constructor": false}], "file": "flume-ng-sources/flume-jms-source/src/main/java/org/apache/flume/source/jms/JMSMessageConsumer.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "", "return": "void", "body": "void close() {\n    try {\n      if (session != null) {\n        session.close();\n      }\n    } catch (JMSException e) {\n      logger.error(\"Could not destroy session\", e);\n    }\n    try {\n      if (connection != null) {\n        connection.close();\n      }\n    } catch (JMSException e) {\n      logger.error(\"Could not destroy connection\", e);\n    }\n  }", "signature": "void close()", "full_signature": " void close()", "class_method_signature": "JMSMessageConsumer.close()", "testcase": false, "constructor": false, "invocations": ["close", "error", "close", "error"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}