{"test_class": {"identifier": "JerseyClientJsonParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "heroku-json-jersey-client/src/test/java/com/heroku/api/parser/JerseyClientJsonParserTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() throws Exception {\n        Parser p = new JerseyClientJsonParser();\n        Something expected = new Something(\"coffee\");\n        Something actual = p.parse(\"{\\\"name\\\":\\\"coffee\\\"}\".getBytes(), Something.class);\n        assertEquals(actual, expected);\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "JerseyClientJsonParserTest.testParse()", "testcase": true, "constructor": false, "invocations": ["parse", "getBytes", "assertEquals"]}, "focal_class": {"identifier": "JerseyClientJsonParser", "superclass": "", "interfaces": "implements Parser", "fields": [], "methods": [{"identifier": "encode", "parameters": "(Object object)", "modifiers": "@Override public", "return": "String", "signature": "String encode(Object object)", "full_signature": "@Override public String encode(Object object)", "class_method_signature": "JerseyClientJsonParser.encode(Object object)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(byte[] data, Type type)", "modifiers": "@Override public", "return": "T", "signature": "T parse(byte[] data, Type type)", "full_signature": "@Override public T parse(byte[] data, Type type)", "class_method_signature": "JerseyClientJsonParser.parse(byte[] data, Type type)", "testcase": false, "constructor": false}], "file": "heroku-json-jersey-client/src/main/java/com/heroku/api/parser/JerseyClientJsonParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(byte[] data, Type type)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public <T> T parse(byte[] data, Type type) {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n        JavaType javaType = mapper.constructType(type);\n        try {\n            return mapper.readValue(data, javaType);\n        } catch (IOException e) {\n            throw new ParseException(\"Unable to parse data.\", e);\n        }\n    }", "signature": "T parse(byte[] data, Type type)", "full_signature": "@Override public T parse(byte[] data, Type type)", "class_method_signature": "JerseyClientJsonParser.parse(byte[] data, Type type)", "testcase": false, "constructor": false, "invocations": ["configure", "constructType", "readValue"]}, "repository": {"repo_id": 2595446, "url": "https://github.com/heroku/heroku.jar", "stars": 29, "created": "10/17/2011 10:35:37 PM +00:00", "updates": "2020-01-07T09:33:05+00:00", "fork": "False", "license": "licensed"}}