{"test_class": {"identifier": "AllTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/query/simple/AllTest.java"}, "test_case": {"identifier": "testAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAll() {\n        IndexedCollection<Integer> indexedCollection = new ConcurrentIndexedCollection<Integer>();\n        indexedCollection.addAll(asList(1, 2, 3, 4, 5));\n        IndexedCollection<Integer> collection = indexedCollection;\n        Query<Integer> query = all(Integer.class);\n        ResultSet<Integer> results = collection.retrieve(query);\n        assertEquals(5, results.size());\n        assertTrue(results.iterator().hasNext());\n    }", "signature": "void testAll()", "full_signature": "@Test public void testAll()", "class_method_signature": "AllTest.testAll()", "testcase": true, "constructor": false, "invocations": ["addAll", "asList", "all", "retrieve", "assertEquals", "size", "assertTrue", "hasNext", "iterator"]}, "focal_class": {"identifier": "All", "superclass": "extends SimpleQuery<O, O>", "interfaces": "", "fields": [{"original_string": "final Class<O> objectType;", "modifier": "final", "type": "Class<O>", "declarator": "objectType", "var_name": "objectType"}], "methods": [{"identifier": "All", "parameters": "(Class<O> objectType)", "modifiers": "public", "return": "", "signature": " All(Class<O> objectType)", "full_signature": "public  All(Class<O> objectType)", "class_method_signature": "All.All(Class<O> objectType)", "testcase": false, "constructor": true}, {"identifier": "matchesSimpleAttribute", "parameters": "(SimpleAttribute<O, O> attribute, O object, QueryOptions queryOptions)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean matchesSimpleAttribute(SimpleAttribute<O, O> attribute, O object, QueryOptions queryOptions)", "full_signature": "@Override protected boolean matchesSimpleAttribute(SimpleAttribute<O, O> attribute, O object, QueryOptions queryOptions)", "class_method_signature": "All.matchesSimpleAttribute(SimpleAttribute<O, O> attribute, O object, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "matchesNonSimpleAttribute", "parameters": "(Attribute<O, O> attribute, O object, QueryOptions queryOptions)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean matchesNonSimpleAttribute(Attribute<O, O> attribute, O object, QueryOptions queryOptions)", "full_signature": "@Override protected boolean matchesNonSimpleAttribute(Attribute<O, O> attribute, O object, QueryOptions queryOptions)", "class_method_signature": "All.matchesNonSimpleAttribute(Attribute<O, O> attribute, O object, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "calcHashCode", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int calcHashCode()", "full_signature": "@Override protected int calcHashCode()", "class_method_signature": "All.calcHashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "All.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "All.toString()", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/query/simple/All.java"}, "focal_method": {"identifier": "All", "parameters": "(Class<O> objectType)", "modifiers": "public", "return": "", "body": "public All(Class<O> objectType) {\n        super(new SelfAttribute<O>(checkObjectTypeNotNull(objectType), \"all\"));\n        this.objectType = objectType;\n    }", "signature": " All(Class<O> objectType)", "full_signature": "public  All(Class<O> objectType)", "class_method_signature": "All.All(Class<O> objectType)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}