{"test_class": {"identifier": "ResnikSimilarityTest", "superclass": "extends VegetableOntologyTestBase", "interfaces": "", "fields": [{"original_string": "private ResnikSimilarity similarity;", "modifier": "private", "type": "ResnikSimilarity", "declarator": "similarity", "var_name": "similarity"}], "file": "phenol-core/src/test/java/org/monarchinitiative/phenol/ontology/similarity/ResnikSimilarityTest.java"}, "test_case": {"identifier": "testQueries", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testQueries() {\n    assertEquals(\"Resnik similarity\", similarity.getName());\n    assertTrue(similarity.isSymmetric());\n    assertEquals(\"{symmetric: true}\", similarity.getParameters());\n  }", "signature": "void testQueries()", "full_signature": "@Test void testQueries()", "class_method_signature": "ResnikSimilarityTest.testQueries()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "assertTrue", "isSymmetric", "assertEquals", "getParameters"]}, "focal_class": {"identifier": "ResnikSimilarity", "superclass": "extends AbstractCommonAncestorSimilarity", "interfaces": "implements Serializable", "fields": [{"original_string": "static final long serialVersionUID = 2L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = 2L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "ResnikSimilarity", "parameters": "(\n    Ontology ontology, Map<TermId, Double> termToIc, boolean symmetric)", "modifiers": "public", "return": "", "signature": " ResnikSimilarity(\n    Ontology ontology, Map<TermId, Double> termToIc, boolean symmetric)", "full_signature": "public  ResnikSimilarity(\n    Ontology ontology, Map<TermId, Double> termToIc, boolean symmetric)", "class_method_signature": "ResnikSimilarity.ResnikSimilarity(\n    Ontology ontology, Map<TermId, Double> termToIc, boolean symmetric)", "testcase": false, "constructor": true}, {"identifier": "ResnikSimilarity", "parameters": "(PairwiseSimilarity pairwiseSimilarity, boolean symmetric)", "modifiers": "public", "return": "", "signature": " ResnikSimilarity(PairwiseSimilarity pairwiseSimilarity, boolean symmetric)", "full_signature": "public  ResnikSimilarity(PairwiseSimilarity pairwiseSimilarity, boolean symmetric)", "class_method_signature": "ResnikSimilarity.ResnikSimilarity(PairwiseSimilarity pairwiseSimilarity, boolean symmetric)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ResnikSimilarity.getName()", "testcase": false, "constructor": false}], "file": "phenol-core/src/main/java/org/monarchinitiative/phenol/ontology/similarity/ResnikSimilarity.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String getName() {\n    return \"Resnik similarity\";\n  }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ResnikSimilarity.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}