{"test_class": {"identifier": "PostContingencyResultComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "security-analysis-api/src/test/java/com/powsybl/security/comparator/PostContingencyResultComparatorTest.java"}, "test_case": {"identifier": "compare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compare() {\n        Contingency contingency1 = Mockito.mock(Contingency.class);\n        Mockito.when(contingency1.getId()).thenReturn(\"contingency1\");\n        PostContingencyResult result1 = new PostContingencyResult(contingency1, true, Collections.emptyList());\n        Contingency contingency2 = Mockito.mock(Contingency.class);\n        Mockito.when(contingency2.getId()).thenReturn(\"contingency2\");\n        PostContingencyResult result2 = new PostContingencyResult(contingency2, true, Collections.emptyList());\n        Contingency contingency3 = Mockito.mock(Contingency.class);\n        Mockito.when(contingency3.getId()).thenReturn(\"contingency3\");\n        PostContingencyResult result3 = new PostContingencyResult(contingency3, true, Collections.emptyList());\n\n        List<PostContingencyResult> results = Arrays.asList(result3, result1, result2);\n        Collections.sort(results, new PostContingencyResultComparator());\n\n        assertEquals(result1, results.get(0));\n        assertEquals(result2, results.get(1));\n        assertEquals(result3, results.get(2));\n    }", "signature": "void compare()", "full_signature": "@Test public void compare()", "class_method_signature": "PostContingencyResultComparatorTest.compare()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getId", "emptyList", "mock", "thenReturn", "when", "getId", "emptyList", "mock", "thenReturn", "when", "getId", "emptyList", "asList", "sort", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "PostContingencyResultComparator", "superclass": "", "interfaces": "implements Comparator<PostContingencyResult>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(PostContingencyResult result1, PostContingencyResult result2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(PostContingencyResult result1, PostContingencyResult result2)", "full_signature": "@Override public int compare(PostContingencyResult result1, PostContingencyResult result2)", "class_method_signature": "PostContingencyResultComparator.compare(PostContingencyResult result1, PostContingencyResult result2)", "testcase": false, "constructor": false}], "file": "security-analysis-api/src/main/java/com/powsybl/security/comparator/PostContingencyResultComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(PostContingencyResult result1, PostContingencyResult result2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compare(PostContingencyResult result1, PostContingencyResult result2) {\n        Objects.requireNonNull(result1);\n        Objects.requireNonNull(result2);\n        return result1.getContingency().getId().compareTo(result2.getContingency().getId());\n    }", "signature": "int compare(PostContingencyResult result1, PostContingencyResult result2)", "full_signature": "@Override public int compare(PostContingencyResult result1, PostContingencyResult result2)", "class_method_signature": "PostContingencyResultComparator.compare(PostContingencyResult result1, PostContingencyResult result2)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "compareTo", "getId", "getContingency", "getId", "getContingency"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}