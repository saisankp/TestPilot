{"test_class": {"identifier": "StormMetadataServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STORM_TOPOLOGIES_SUMMARY_JSON = \"metadata/topology-summary.json\";", "modifier": "private static final", "type": "String", "declarator": "STORM_TOPOLOGIES_SUMMARY_JSON = \"metadata/topology-summary.json\"", "var_name": "STORM_TOPOLOGIES_SUMMARY_JSON"}, {"original_string": "private static final String STORM_UI_URL_EXPECTED =  \"http://localhost:8080/api/v1/topology/summary\";", "modifier": "private static final", "type": "String", "declarator": "STORM_UI_URL_EXPECTED =  \"http://localhost:8080/api/v1/topology/summary\"", "var_name": "STORM_UI_URL_EXPECTED"}, {"original_string": "@Tested\n    StormMetadataService stormService;", "modifier": "@Tested", "type": "StormMetadataService", "declarator": "stormService", "var_name": "stormService"}, {"original_string": "@Injectable\n    Client client;", "modifier": "@Injectable", "type": "Client", "declarator": "client", "var_name": "client"}, {"original_string": "@Injectable\n    String url;", "modifier": "@Injectable", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "@Injectable\n    String mainPageUrl;", "modifier": "@Injectable", "type": "String", "declarator": "mainPageUrl", "var_name": "mainPageUrl"}, {"original_string": "@Injectable\n    SecurityContext securityContext;", "modifier": "@Injectable", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "@Injectable\n    ServiceConfiguration stormEnvConfig;", "modifier": "@Injectable", "type": "ServiceConfiguration", "declarator": "stormEnvConfig", "var_name": "stormEnvConfig"}, {"original_string": "@Injectable\n    Subject subject;", "modifier": "@Injectable", "type": "Subject", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Injectable\n    Component nimbus;", "modifier": "@Injectable", "type": "Component", "declarator": "nimbus", "var_name": "nimbus"}, {"original_string": "@Injectable\n    Collection<ComponentProcess> nimbusProcesses;", "modifier": "@Injectable", "type": "Collection<ComponentProcess>", "declarator": "nimbusProcesses", "var_name": "nimbusProcesses"}, {"original_string": "@Injectable\n    Component stormUi;", "modifier": "@Injectable", "type": "Component", "declarator": "stormUi", "var_name": "stormUi"}, {"original_string": "@Injectable\n    Collection<ComponentProcess> stormUiProcesses;", "modifier": "@Injectable", "type": "Collection<ComponentProcess>", "declarator": "stormUiProcesses", "var_name": "stormUiProcesses"}, {"original_string": "@Injectable\n    Invocation.Builder builder;", "modifier": "@Injectable", "type": "Invocation.Builder", "declarator": "builder", "var_name": "builder"}, {"original_string": "@Injectable\n    EnvironmentService environmentService;", "modifier": "@Injectable", "type": "EnvironmentService", "declarator": "environmentService", "var_name": "environmentService"}], "file": "streams/cluster/src/test/java/com/hortonworks/streamline/streams/cluster/service/metadata/StormMetadataServiceTest.java"}, "test_case": {"identifier": "getTopologies", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTopologies() throws Exception {\n        new Expectations() {{\n            builder.get(String.class); result = getTopologiesSummary();\n            // Means test run in insecure mode as they did before adding security\n            securityContext.getAuthenticationScheme(); result = AUTHENTICATION_SCHEME_NOT_KERBEROS;\n        }};\n\n        Deencapsulation.setField(stormService, \"nimbusProcesses\", buildNimbusComponentProcesses());\n        Deencapsulation.setField(stormService, \"stormUiProcesses\", buildUiComponentProcesses());\n\n        final List<String> actualTopologies = stormService.getTopologies().list();\n        Collections.sort(actualTopologies);\n\n        final List<String> expectedTopologies = Lists.newArrayList(\"kafka-topology-2-1474413185\",\n                \"kafka-topology-2-3-1474413375\");\n\n        Assert.assertEquals(expectedTopologies, actualTopologies);\n    }", "signature": "void getTopologies()", "full_signature": "@Test public void getTopologies()", "class_method_signature": "StormMetadataServiceTest.getTopologies()", "testcase": true, "constructor": false, "invocations": ["get", "getTopologiesSummary", "getAuthenticationScheme", "setField", "buildNimbusComponentProcesses", "setField", "buildUiComponentProcesses", "list", "getTopologies", "sort", "newArrayList", "assertEquals"]}, "focal_class": {"identifier": "StormMetadataService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AMBARI_JSON_SERVICE_STORM = ServiceConfigurations.STORM.name();", "modifier": "private static final", "type": "String", "declarator": "AMBARI_JSON_SERVICE_STORM = ServiceConfigurations.STORM.name()", "var_name": "AMBARI_JSON_SERVICE_STORM"}, {"original_string": "private static final String AMBARI_JSON_COMPONENT_STORM_UI_SERVER = ComponentPropertyPattern.STORM_UI_SERVER.name();", "modifier": "private static final", "type": "String", "declarator": "AMBARI_JSON_COMPONENT_STORM_UI_SERVER = ComponentPropertyPattern.STORM_UI_SERVER.name()", "var_name": "AMBARI_JSON_COMPONENT_STORM_UI_SERVER"}, {"original_string": "private static final String AMBARI_JSON_COMPONENT_STORM_NIMBUS = ComponentPropertyPattern.NIMBUS.name();", "modifier": "private static final", "type": "String", "declarator": "AMBARI_JSON_COMPONENT_STORM_NIMBUS = ComponentPropertyPattern.NIMBUS.name()", "var_name": "AMBARI_JSON_COMPONENT_STORM_NIMBUS"}, {"original_string": "private static final String AMBARI_JSON_CONFIG_STORM_ENV = ServiceConfigurations.STORM.getConfNames()[1];", "modifier": "private static final", "type": "String", "declarator": "AMBARI_JSON_CONFIG_STORM_ENV = ServiceConfigurations.STORM.getConfNames()[1]", "var_name": "AMBARI_JSON_CONFIG_STORM_ENV"}, {"original_string": "private static final String STORM_REST_API_TOPOLOGIES_DEFAULT_RELATIVE_PATH = \"/api/v1/topology/summary\";", "modifier": "private static final", "type": "String", "declarator": "STORM_REST_API_TOPOLOGIES_DEFAULT_RELATIVE_PATH = \"/api/v1/topology/summary\"", "var_name": "STORM_REST_API_TOPOLOGIES_DEFAULT_RELATIVE_PATH"}, {"original_string": "private static final String STORM_REST_API_TOPOLOGIES_KEY = \"topologies\";", "modifier": "private static final", "type": "String", "declarator": "STORM_REST_API_TOPOLOGIES_KEY = \"topologies\"", "var_name": "STORM_REST_API_TOPOLOGIES_KEY"}, {"original_string": "private static final String STORM_REST_API_TOPOLOGY_ID_KEY = \"id\";", "modifier": "private static final", "type": "String", "declarator": "STORM_REST_API_TOPOLOGY_ID_KEY = \"id\"", "var_name": "STORM_REST_API_TOPOLOGY_ID_KEY"}, {"original_string": "public  static final String STORM_REST_API_DO_AS_USER_QUERY_PARAM = \"doAsUser\";", "modifier": "public  static final", "type": "String", "declarator": "STORM_REST_API_DO_AS_USER_QUERY_PARAM = \"doAsUser\"", "var_name": "STORM_REST_API_DO_AS_USER_QUERY_PARAM"}, {"original_string": "public static final String SERVICE_STORM_VIEW = \"STORM_VIEW\";", "modifier": "public static final", "type": "String", "declarator": "SERVICE_STORM_VIEW = \"STORM_VIEW\"", "var_name": "SERVICE_STORM_VIEW"}, {"original_string": "public static final String STORM_VIEW_CONFIGURATION_KEY_STORM_VIEW_URL = \"storm.view.url\";", "modifier": "public static final", "type": "String", "declarator": "STORM_VIEW_CONFIGURATION_KEY_STORM_VIEW_URL = \"storm.view.url\"", "var_name": "STORM_VIEW_CONFIGURATION_KEY_STORM_VIEW_URL"}, {"original_string": "private final SecurityContext securityContext;", "modifier": "private final", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "private final Client httpClient;", "modifier": "private final", "type": "Client", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final ServiceConfiguration stormEnvConfig;", "modifier": "private final", "type": "ServiceConfiguration", "declarator": "stormEnvConfig", "var_name": "stormEnvConfig"}, {"original_string": "private final Component nimbus;", "modifier": "private final", "type": "Component", "declarator": "nimbus", "var_name": "nimbus"}, {"original_string": "private final Component stormUi;", "modifier": "private final", "type": "Component", "declarator": "stormUi", "var_name": "stormUi"}, {"original_string": "private final Collection<ComponentProcess> nimbusProcesses;", "modifier": "private final", "type": "Collection<ComponentProcess>", "declarator": "nimbusProcesses", "var_name": "nimbusProcesses"}, {"original_string": "private final Collection<ComponentProcess> stormUiProcesses;", "modifier": "private final", "type": "Collection<ComponentProcess>", "declarator": "stormUiProcesses", "var_name": "stormUiProcesses"}, {"original_string": "private Subject subject;", "modifier": "private", "type": "Subject", "declarator": "subject", "var_name": "subject"}, {"original_string": "private final String tplgySumUrl;", "modifier": "private final", "type": "String", "declarator": "tplgySumUrl", "var_name": "tplgySumUrl"}, {"original_string": "private final String mainPageUrl;", "modifier": "private final", "type": "String", "declarator": "mainPageUrl", "var_name": "mainPageUrl"}], "methods": [{"identifier": "StormMetadataService", "parameters": "(Client httpClient, String tplgySumUrl, String mainPageUrl,\n            SecurityContext securityContext, ServiceConfiguration stormEnvConfig, Subject subject,\n                                Component nimbus, Collection<ComponentProcess> nimbusProcesses,\n                                Component stormUi, Collection<ComponentProcess> stormUiProcesses)", "modifiers": "public", "return": "", "signature": " StormMetadataService(Client httpClient, String tplgySumUrl, String mainPageUrl,\n            SecurityContext securityContext, ServiceConfiguration stormEnvConfig, Subject subject,\n                                Component nimbus, Collection<ComponentProcess> nimbusProcesses,\n                                Component stormUi, Collection<ComponentProcess> stormUiProcesses)", "full_signature": "public  StormMetadataService(Client httpClient, String tplgySumUrl, String mainPageUrl,\n            SecurityContext securityContext, ServiceConfiguration stormEnvConfig, Subject subject,\n                                Component nimbus, Collection<ComponentProcess> nimbusProcesses,\n                                Component stormUi, Collection<ComponentProcess> stormUiProcesses)", "class_method_signature": "StormMetadataService.StormMetadataService(Client httpClient, String tplgySumUrl, String mainPageUrl,\n            SecurityContext securityContext, ServiceConfiguration stormEnvConfig, Subject subject,\n                                Component nimbus, Collection<ComponentProcess> nimbusProcesses,\n                                Component stormUi, Collection<ComponentProcess> stormUiProcesses)", "testcase": false, "constructor": true}, {"identifier": "getTopologies", "parameters": "()", "modifiers": "public", "return": "StormTopologies", "signature": "StormTopologies getTopologies()", "full_signature": "public StormTopologies getTopologies()", "class_method_signature": "StormMetadataService.getTopologies()", "testcase": false, "constructor": false}, {"identifier": "executeSecure", "parameters": "(SupplierException<T, E> action)", "modifiers": "private", "return": "T", "signature": "T executeSecure(SupplierException<T, E> action)", "full_signature": "private T executeSecure(SupplierException<T, E> action)", "class_method_signature": "StormMetadataService.executeSecure(SupplierException<T, E> action)", "testcase": false, "constructor": false}, {"identifier": "getMainPageUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMainPageUrl()", "full_signature": "public String getMainPageUrl()", "class_method_signature": "StormMetadataService.getMainPageUrl()", "testcase": false, "constructor": false}, {"identifier": "getTopologySummaryUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTopologySummaryUrl()", "full_signature": "public String getTopologySummaryUrl()", "class_method_signature": "StormMetadataService.getTopologySummaryUrl()", "testcase": false, "constructor": false}, {"identifier": "getKeytabs", "parameters": "()", "modifiers": "public", "return": "Keytabs", "signature": "Keytabs getKeytabs()", "full_signature": "public Keytabs getKeytabs()", "class_method_signature": "StormMetadataService.getKeytabs()", "testcase": false, "constructor": false}, {"identifier": "getPrincipals", "parameters": "()", "modifiers": "public", "return": "Principals", "signature": "Principals getPrincipals()", "full_signature": "public Principals getPrincipals()", "class_method_signature": "StormMetadataService.getPrincipals()", "testcase": false, "constructor": false}, {"identifier": "getServiceToComponent", "parameters": "()", "modifiers": "private", "return": "Map<String, Pair<Component, Collection<ComponentProcess>>>", "signature": "Map<String, Pair<Component, Collection<ComponentProcess>>> getServiceToComponent()", "full_signature": "private Map<String, Pair<Component, Collection<ComponentProcess>>> getServiceToComponent()", "class_method_signature": "StormMetadataService.getServiceToComponent()", "testcase": false, "constructor": false}, {"identifier": "newSupervisorComponent", "parameters": "()", "modifiers": "private", "return": "Component", "signature": "Component newSupervisorComponent()", "full_signature": "private Component newSupervisorComponent()", "class_method_signature": "StormMetadataService.newSupervisorComponent()", "testcase": false, "constructor": false}, {"identifier": "getSecurity", "parameters": "()", "modifiers": "public", "return": "Security", "signature": "Security getSecurity()", "full_signature": "public Security getSecurity()", "class_method_signature": "StormMetadataService.getSecurity()", "testcase": false, "constructor": false}], "file": "streams/cluster/src/main/java/com/hortonworks/streamline/streams/cluster/service/metadata/StormMetadataService.java"}, "focal_method": {"identifier": "getTopologies", "parameters": "()", "modifiers": "public", "return": "StormTopologies", "body": "public StormTopologies getTopologies() throws IOException, PrivilegedActionException {\n        return executeSecure(() -> {\n                    final Map<String, ?> jsonAsMap = JsonClientUtil.getEntity(httpClient.target(tplgySumUrl), Map.class);\n                    List<String> topologies = Collections.emptyList();\n                    if (jsonAsMap != null) {\n                        final List<Map<String, String>> topologiesSummary = \n                                (List<Map<String, String>>) jsonAsMap.get(STORM_REST_API_TOPOLOGIES_KEY);\n                        if (topologiesSummary != null) {\n                            topologies = new ArrayList<>(topologiesSummary.size());\n                            for (Map<String, String> tpSum : topologiesSummary) {\n                                topologies.add(tpSum.get(STORM_REST_API_TOPOLOGY_ID_KEY));\n                            }\n                        }\n                    }\n                    return new StormTopologies(topologies, getSecurity());\n                }\n        );\n    }", "signature": "StormTopologies getTopologies()", "full_signature": "public StormTopologies getTopologies()", "class_method_signature": "StormMetadataService.getTopologies()", "testcase": false, "constructor": false, "invocations": ["executeSecure", "getEntity", "target", "emptyList", "get", "size", "add", "get", "getSecurity"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}