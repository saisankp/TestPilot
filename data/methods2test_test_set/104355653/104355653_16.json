{"test_class": {"identifier": "WaterControllerTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "service/settlement-service/src/test/java/com/meiduimall/service/settlement/api/WaterControllerTest.java"}, "test_case": {"identifier": "testQueryWater", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testQueryWater() throws UnsupportedEncodingException, Exception {\n\t\t\n\t\tResultActions results = mockMvc.perform(\n\t\t\t\tMockMvcRequestBuilders.post(\"/settlementservice/revenueservice/v1/querywater\"))\n\t\t\t\t.andExpect(status().isOk());\n\t\t\n\t\tresults.andDo(new ResultHandler() {\n\t\t\t@Override\n\t\t\tpublic void handle(MvcResult result) throws Exception {\n\t\t\t\tSystem.out.println(\"*********\"+result.getResponse().getContentAsString());\n\t\t\t}\n\t\t});\n\t}", "signature": "void testQueryWater()", "full_signature": "@Test public void testQueryWater()", "class_method_signature": "WaterControllerTest.testQueryWater()", "testcase": true, "constructor": false, "invocations": ["andExpect", "perform", "post", "isOk", "status", "andDo", "println", "getContentAsString", "getResponse"]}, "focal_class": {"identifier": "WaterController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(WaterController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(WaterController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate AgentService agentService;", "modifier": "@Autowired\n\tprivate", "type": "AgentService", "declarator": "agentService", "var_name": "agentService"}, {"original_string": "@Autowired\n\tprivate WaterService waterService;", "modifier": "@Autowired\n\tprivate", "type": "WaterService", "declarator": "waterService", "var_name": "waterService"}, {"original_string": "@Autowired\n\tprivate OrderService orderService;", "modifier": "@Autowired\n\tprivate", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}], "methods": [{"identifier": "queryWater", "parameters": "(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "modifiers": "@PostMapping(\"/querywater\") public", "return": "ResBodyData", "signature": "ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "full_signature": "@PostMapping(\"/querywater\") public ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "class_method_signature": "WaterController.queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "testcase": false, "constructor": false}, {"identifier": "queryWaterById", "parameters": "(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "modifiers": "@PostMapping(\"/querywaterbyid\") public", "return": "ResBodyData", "signature": "ResBodyData queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "full_signature": "@PostMapping(\"/querywaterbyid\") public ResBodyData queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "class_method_signature": "WaterController.queryWaterById(String waterId, String waterType, Integer loginType, String code,\n\t\t\tInteger pageNumber, Integer pageSize)", "testcase": false, "constructor": false}, {"identifier": "getRecMoney", "parameters": "(@RequestParam Map<String, Object> params)", "modifiers": "@PostMapping(\"/getrecmoney\") public", "return": "ResBodyData", "signature": "ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "full_signature": "@PostMapping(\"/getrecmoney\") public ResBodyData getRecMoney(@RequestParam Map<String, Object> params)", "class_method_signature": "WaterController.getRecMoney(@RequestParam Map<String, Object> params)", "testcase": false, "constructor": false}], "file": "service/settlement-service/src/main/java/com/meiduimall/service/settlement/api/WaterController.java"}, "focal_method": {"identifier": "queryWater", "parameters": "(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "modifiers": "@PostMapping(\"/querywater\") public", "return": "ResBodyData", "body": "@PostMapping(\"/querywater\")\n\tpublic ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType) {\n\t\t\n\t\tif (\"list\".equals(type)) {\n\t\t\tPageHelper.startPage(pageNumber, pageSize);\n\t\t}\n\n\t\tif (!Strings.isNullOrEmpty(waterType)) {// \u6d41\u6c34\u7c7b\u578b\u53ef\u4f20\u591a\u4e2a\u53c2\u6570\uff0c\u7528\u9017\u53f7\u9694\u5f00\n\t\t\tList<String> waterTypeList = Arrays.asList(waterType.split(\",\"));\n\t\t\tparams.put(\"waterType\", waterTypeList);\n\t\t}\n\n\t\tList<EcmMzfWater> waterList = agentService.getWaterList(params);\n\t\tint total = agentService.getWaterCount(params);\n\n\t\tMap<String, Object> map = Maps.newHashMap();\n\t\tmap.put(\"waterList\", waterList);\n\t\tmap.put(\"total\", total);\n\n\t\treturn SettlementUtil.success(map);\n\n\t}", "signature": "ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "full_signature": "@PostMapping(\"/querywater\") public ResBodyData queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "class_method_signature": "WaterController.queryWater(@RequestParam(value = \"pageNumber\", defaultValue = \"1\") int pageNumber,\n\t\t\t@RequestParam(value = \"pageSize\", defaultValue = \"20\") int pageSize,\n\t\t\t@RequestParam(value = \"type\", defaultValue = \"list\") String type,\n\t\t\t@RequestParam Map<String, Object> params, String waterType)", "testcase": false, "constructor": false, "invocations": ["equals", "startPage", "isNullOrEmpty", "asList", "split", "put", "getWaterList", "getWaterCount", "newHashMap", "put", "put", "success"]}, "repository": {"repo_id": 104355653, "url": "https://github.com/chenjy16/mall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 403, "license": "licensed"}}