{"test_class": {"identifier": "SimpleTextWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "File tmpDir;", "modifier": "", "type": "File", "declarator": "tmpDir", "var_name": "tmpDir"}, {"original_string": "File tmpFile;", "modifier": "", "type": "File", "declarator": "tmpFile", "var_name": "tmpFile"}], "file": "jhelper/src/test/java/com/hwangjr/jhelper/SimpleTextWriterTest.java"}, "test_case": {"identifier": "WriteMultiLineStringTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void WriteMultiLineStringTest() throws IOException {\n        List<String> strs = new ArrayList<String>(Arrays.asList(\"Merhaba\", \"Dunya\", \"\"));\n        new SimpleTextWriter(tmpFile).writeLines(strs);\n        List<String> read = new SimpleTextReader(tmpFile).asStringList();\n        for (int i = 0; i < read.size(); i++) {\n            Assert.assertEquals(read.get(i), strs.get(i));\n        }\n    }", "signature": "void WriteMultiLineStringTest()", "full_signature": "@Test public void WriteMultiLineStringTest()", "class_method_signature": "SimpleTextWriterTest.WriteMultiLineStringTest()", "testcase": true, "constructor": false, "invocations": ["asList", "writeLines", "asStringList", "size", "assertEquals", "get", "get"]}, "focal_class": {"identifier": "SimpleTextWriter", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private final String encoding;", "modifier": "private final", "type": "String", "declarator": "encoding", "var_name": "encoding"}, {"original_string": "private final boolean keepOpen;", "modifier": "private final", "type": "boolean", "declarator": "keepOpen", "var_name": "keepOpen"}, {"original_string": "private final BufferedWriter writer;", "modifier": "private final", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private final OutputStream os;", "modifier": "private final", "type": "OutputStream", "declarator": "os", "var_name": "os"}], "methods": [{"identifier": "oneShotUTF8Writer", "parameters": "(File file)", "modifiers": "public static", "return": "SimpleTextWriter", "signature": "SimpleTextWriter oneShotUTF8Writer(File file)", "full_signature": "public static SimpleTextWriter oneShotUTF8Writer(File file)", "class_method_signature": "SimpleTextWriter.oneShotUTF8Writer(File file)", "testcase": false, "constructor": false}, {"identifier": "keepOpenUTF8Writer", "parameters": "(File file)", "modifiers": "public static", "return": "SimpleTextWriter", "signature": "SimpleTextWriter keepOpenUTF8Writer(File file)", "full_signature": "public static SimpleTextWriter keepOpenUTF8Writer(File file)", "class_method_signature": "SimpleTextWriter.keepOpenUTF8Writer(File file)", "testcase": false, "constructor": false}, {"identifier": "keepOpenWriter", "parameters": "(OutputStream os, String encoding)", "modifiers": "public static", "return": "SimpleTextWriter", "signature": "SimpleTextWriter keepOpenWriter(OutputStream os, String encoding)", "full_signature": "public static SimpleTextWriter keepOpenWriter(OutputStream os, String encoding)", "class_method_signature": "SimpleTextWriter.keepOpenWriter(OutputStream os, String encoding)", "testcase": false, "constructor": false}, {"identifier": "oneShotWriter", "parameters": "(OutputStream os, String encoding)", "modifiers": "public static", "return": "SimpleTextWriter", "signature": "SimpleTextWriter oneShotWriter(OutputStream os, String encoding)", "full_signature": "public static SimpleTextWriter oneShotWriter(OutputStream os, String encoding)", "class_method_signature": "SimpleTextWriter.oneShotWriter(OutputStream os, String encoding)", "testcase": false, "constructor": false}, {"identifier": "SimpleTextWriter", "parameters": "(\n            BufferedWriter writer,\n            OutputStream os,\n            String encoding,\n            boolean keepOpen)", "modifiers": "private", "return": "", "signature": " SimpleTextWriter(\n            BufferedWriter writer,\n            OutputStream os,\n            String encoding,\n            boolean keepOpen)", "full_signature": "private  SimpleTextWriter(\n            BufferedWriter writer,\n            OutputStream os,\n            String encoding,\n            boolean keepOpen)", "class_method_signature": "SimpleTextWriter.SimpleTextWriter(\n            BufferedWriter writer,\n            OutputStream os,\n            String encoding,\n            boolean keepOpen)", "testcase": false, "constructor": true}, {"identifier": "keepOpenWriter", "parameters": "(OutputStream os)", "modifiers": "public static", "return": "SimpleTextWriter", "signature": "SimpleTextWriter keepOpenWriter(OutputStream os)", "full_signature": "public static SimpleTextWriter keepOpenWriter(OutputStream os)", "class_method_signature": "SimpleTextWriter.keepOpenWriter(OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "SimpleTextWriter", "parameters": "(String fileName)", "modifiers": "public", "return": "", "signature": " SimpleTextWriter(String fileName)", "full_signature": "public  SimpleTextWriter(String fileName)", "class_method_signature": "SimpleTextWriter.SimpleTextWriter(String fileName)", "testcase": false, "constructor": true}, {"identifier": "SimpleTextWriter", "parameters": "(String fileName, String encoding)", "modifiers": "public", "return": "", "signature": " SimpleTextWriter(String fileName, String encoding)", "full_signature": "public  SimpleTextWriter(String fileName, String encoding)", "class_method_signature": "SimpleTextWriter.SimpleTextWriter(String fileName, String encoding)", "testcase": false, "constructor": true}, {"identifier": "SimpleTextWriter", "parameters": "(File file, String encoding)", "modifiers": "public", "return": "", "signature": " SimpleTextWriter(File file, String encoding)", "full_signature": "public  SimpleTextWriter(File file, String encoding)", "class_method_signature": "SimpleTextWriter.SimpleTextWriter(File file, String encoding)", "testcase": false, "constructor": true}, {"identifier": "SimpleTextWriter", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " SimpleTextWriter(File file)", "full_signature": "public  SimpleTextWriter(File file)", "class_method_signature": "SimpleTextWriter.SimpleTextWriter(File file)", "testcase": false, "constructor": true}, {"identifier": "getEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEncoding()", "full_signature": "public String getEncoding()", "class_method_signature": "SimpleTextWriter.getEncoding()", "testcase": false, "constructor": false}, {"identifier": "isKeepOpen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isKeepOpen()", "full_signature": "public boolean isKeepOpen()", "class_method_signature": "SimpleTextWriter.isKeepOpen()", "testcase": false, "constructor": false}, {"identifier": "writeLines", "parameters": "(Collection<String> lines)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeLines(Collection<String> lines)", "full_signature": "public SimpleTextWriter writeLines(Collection<String> lines)", "class_method_signature": "SimpleTextWriter.writeLines(Collection<String> lines)", "testcase": false, "constructor": false}, {"identifier": "writeLines", "parameters": "(String... lines)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeLines(String... lines)", "full_signature": "public SimpleTextWriter writeLines(String... lines)", "class_method_signature": "SimpleTextWriter.writeLines(String... lines)", "testcase": false, "constructor": false}, {"identifier": "writeToStringLines", "parameters": "(Collection<?> objects)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeToStringLines(Collection<?> objects)", "full_signature": "public SimpleTextWriter writeToStringLines(Collection<?> objects)", "class_method_signature": "SimpleTextWriter.writeToStringLines(Collection<?> objects)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String s)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter write(String s)", "full_signature": "public SimpleTextWriter write(String s)", "class_method_signature": "SimpleTextWriter.write(String s)", "testcase": false, "constructor": false}, {"identifier": "writeLine", "parameters": "(String s)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeLine(String s)", "full_signature": "public SimpleTextWriter writeLine(String s)", "class_method_signature": "SimpleTextWriter.writeLine(String s)", "testcase": false, "constructor": false}, {"identifier": "writeLine", "parameters": "()", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeLine()", "full_signature": "public SimpleTextWriter writeLine()", "class_method_signature": "SimpleTextWriter.writeLine()", "testcase": false, "constructor": false}, {"identifier": "writeLine", "parameters": "(Object obj)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter writeLine(Object obj)", "full_signature": "public SimpleTextWriter writeLine(Object obj)", "class_method_signature": "SimpleTextWriter.writeLine(Object obj)", "testcase": false, "constructor": false}, {"identifier": "copyFromStream", "parameters": "(InputStream is)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter copyFromStream(InputStream is)", "full_signature": "public SimpleTextWriter copyFromStream(InputStream is)", "class_method_signature": "SimpleTextWriter.copyFromStream(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "copyFromURL", "parameters": "(String urlStr)", "modifiers": "public", "return": "SimpleTextWriter", "signature": "SimpleTextWriter copyFromURL(String urlStr)", "full_signature": "public SimpleTextWriter copyFromURL(String urlStr)", "class_method_signature": "SimpleTextWriter.copyFromURL(String urlStr)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "SimpleTextWriter.close()", "testcase": false, "constructor": false}], "file": "jhelper/src/main/java/com/hwangjr/jhelper/SimpleTextWriter.java"}, "focal_method": {"identifier": "writeLines", "parameters": "(Collection<String> lines)", "modifiers": "public", "return": "SimpleTextWriter", "body": "public SimpleTextWriter writeLines(Collection<String> lines) throws IOException {\n        try {\n            IOs.writeLines(lines, writer);\n            return this;\n        } finally {\n            if (!keepOpen)\n                close();\n        }\n    }", "signature": "SimpleTextWriter writeLines(Collection<String> lines)", "full_signature": "public SimpleTextWriter writeLines(Collection<String> lines)", "class_method_signature": "SimpleTextWriter.writeLines(Collection<String> lines)", "testcase": false, "constructor": false, "invocations": ["writeLines", "close"]}, "repository": {"repo_id": 49483698, "url": "https://github.com/AndroidKnife/RecordHelper", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 10, "size": 185, "license": "licensed"}}