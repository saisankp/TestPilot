{"test_class": {"identifier": "DownloaderControllerTest", "superclass": "extends AbstractDownloaderTest", "interfaces": "", "fields": [], "file": "herd-code/herd-tools/herd-downloader/src/test/java/org/finra/herd/tools/downloader/DownloaderControllerTest.java"}, "test_case": {"identifier": "testCreateDownloaderOutputManifestDtoAssertOutputFilesEmptyWhenStorageFilesNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateDownloaderOutputManifestDtoAssertOutputFilesEmptyWhenStorageFilesNull()\n    {\n        BusinessObjectData businessObjectData = new BusinessObjectData();\n        StorageUnit storageUnit = new StorageUnit(new Storage(\"storageName\", null, null), null, null, StorageUnitStatusEntity.ENABLED, null, null, null);\n        String s3KeyPrefix = \"s3KeyPrefix\";\n        DownloaderOutputManifestDto actual = downloaderController.createDownloaderOutputManifestDto(businessObjectData, storageUnit, s3KeyPrefix);\n        assertEquals(0, actual.getManifestFiles().size());\n    }", "signature": "void testCreateDownloaderOutputManifestDtoAssertOutputFilesEmptyWhenStorageFilesNull()", "full_signature": "@Test public void testCreateDownloaderOutputManifestDtoAssertOutputFilesEmptyWhenStorageFilesNull()", "class_method_signature": "DownloaderControllerTest.testCreateDownloaderOutputManifestDtoAssertOutputFilesEmptyWhenStorageFilesNull()", "testcase": true, "constructor": false, "invocations": ["createDownloaderOutputManifestDto", "assertEquals", "size", "getManifestFiles"]}, "focal_class": {"identifier": "DownloaderController", "superclass": "extends DataBridgeController", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DownloaderController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DownloaderController.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private DownloaderManifestReader manifestReader;", "modifier": "@Autowired\n    private", "type": "DownloaderManifestReader", "declarator": "manifestReader", "var_name": "manifestReader"}, {"original_string": "@Autowired\n    private DownloaderManifestWriter manifestWriter;", "modifier": "@Autowired\n    private", "type": "DownloaderManifestWriter", "declarator": "manifestWriter", "var_name": "manifestWriter"}, {"original_string": "@Autowired\n    private DownloaderWebClient downloaderWebClient;", "modifier": "@Autowired\n    private", "type": "DownloaderWebClient", "declarator": "downloaderWebClient", "var_name": "downloaderWebClient"}, {"original_string": "@Autowired\n    private StorageFileHelper storageFileHelper;", "modifier": "@Autowired\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@Autowired\n    private StorageHelper storageHelper;", "modifier": "@Autowired\n    private", "type": "StorageHelper", "declarator": "storageHelper", "var_name": "storageHelper"}, {"original_string": "private static final String OUTPUT_MANIFEST_FILE_NAME = \"manifest.json\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_MANIFEST_FILE_NAME = \"manifest.json\"", "var_name": "OUTPUT_MANIFEST_FILE_NAME"}], "methods": [{"identifier": "performDownload", "parameters": "(RegServerAccessParamsDto regServerAccessParamsDto, File manifestPath,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto)", "modifiers": "@SuppressFBWarnings(value = {\"BC_UNCONFIRMED_CAST_OF_RETURN_VALUE\", \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\"}, justification = \"manifestReader.readJsonManifest will always return an DownloaderInputManifestDto object. targetLocalDirectory.list().length will not\" + \" return a NullPointerException.\") public", "return": "void", "signature": "void performDownload(RegServerAccessParamsDto regServerAccessParamsDto, File manifestPath,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto)", "full_signature": "@SuppressFBWarnings(value = {\"BC_UNCONFIRMED_CAST_OF_RETURN_VALUE\", \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\"}, justification = \"manifestReader.readJsonManifest will always return an DownloaderInputManifestDto object. targetLocalDirectory.list().length will not\" + \" return a NullPointerException.\") public void performDownload(RegServerAccessParamsDto regServerAccessParamsDto, File manifestPath,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto)", "class_method_signature": "DownloaderController.performDownload(RegServerAccessParamsDto regServerAccessParamsDto, File manifestPath,\n        S3FileTransferRequestParamsDto s3FileTransferRequestParamsDto)", "testcase": false, "constructor": false}, {"identifier": "logLocalDirectoryContents", "parameters": "(File directory)", "modifiers": "private", "return": "void", "signature": "void logLocalDirectoryContents(File directory)", "full_signature": "private void logLocalDirectoryContents(File directory)", "class_method_signature": "DownloaderController.logLocalDirectoryContents(File directory)", "testcase": false, "constructor": false}, {"identifier": "createDownloaderOutputManifestDto", "parameters": "(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "modifiers": "protected", "return": "DownloaderOutputManifestDto", "signature": "DownloaderOutputManifestDto createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "full_signature": "protected DownloaderOutputManifestDto createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "class_method_signature": "DownloaderController.createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-downloader/src/main/java/org/finra/herd/tools/downloader/DownloaderController.java"}, "focal_method": {"identifier": "createDownloaderOutputManifestDto", "parameters": "(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "modifiers": "protected", "return": "DownloaderOutputManifestDto", "body": "protected DownloaderOutputManifestDto createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)\n    {\n        DownloaderOutputManifestDto downloaderOutputManifestDto = new DownloaderOutputManifestDto();\n\n        // Populate basic fields.\n        downloaderOutputManifestDto.setNamespace(businessObjectData.getNamespace());\n        downloaderOutputManifestDto.setBusinessObjectDefinitionName(businessObjectData.getBusinessObjectDefinitionName());\n        downloaderOutputManifestDto.setBusinessObjectFormatUsage(businessObjectData.getBusinessObjectFormatUsage());\n        downloaderOutputManifestDto.setBusinessObjectFormatFileType(businessObjectData.getBusinessObjectFormatFileType());\n        downloaderOutputManifestDto.setBusinessObjectFormatVersion(String.valueOf(businessObjectData.getBusinessObjectFormatVersion()));\n        downloaderOutputManifestDto.setPartitionKey(businessObjectData.getPartitionKey());\n        downloaderOutputManifestDto.setPartitionValue(businessObjectData.getPartitionValue());\n        downloaderOutputManifestDto.setSubPartitionValues(businessObjectData.getSubPartitionValues());\n        downloaderOutputManifestDto.setBusinessObjectDataVersion(String.valueOf(businessObjectData.getVersion()));\n        downloaderOutputManifestDto.setStorageName(storageUnit.getStorage().getName());\n\n        // Build a list of manifest files with paths relative to the S3 key prefix.\n        List<ManifestFile> manifestFiles = new ArrayList<>();\n        downloaderOutputManifestDto.setManifestFiles(manifestFiles);\n        if (!CollectionUtils.isEmpty(storageUnit.getStorageFiles()))\n        {\n            for (StorageFile storageFile : storageUnit.getStorageFiles())\n            {\n                ManifestFile manifestFile = new ManifestFile();\n                manifestFiles.add(manifestFile);\n                manifestFile.setFileName(storageFile.getFilePath().replace(s3KeyPrefix, \"\"));\n                manifestFile.setFileSizeBytes(storageFile.getFileSizeBytes());\n                manifestFile.setRowCount(storageFile.getRowCount());\n            }\n        }\n\n        // Populate the attributes.\n        HashMap<String, String> attributes = new HashMap<>();\n        if (!CollectionUtils.isEmpty(businessObjectData.getAttributes()))\n        {\n            for (Attribute attribute : businessObjectData.getAttributes())\n            {\n                attributes.put(attribute.getName(), attribute.getValue());\n            }\n        }\n        downloaderOutputManifestDto.setAttributes(attributes);\n\n        // Populate the business object data parents and children.\n        downloaderOutputManifestDto.setBusinessObjectDataParents(businessObjectData.getBusinessObjectDataParents());\n        downloaderOutputManifestDto.setBusinessObjectDataChildren(businessObjectData.getBusinessObjectDataChildren());\n\n        return downloaderOutputManifestDto;\n    }", "signature": "DownloaderOutputManifestDto createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "full_signature": "protected DownloaderOutputManifestDto createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "class_method_signature": "DownloaderController.createDownloaderOutputManifestDto(BusinessObjectData businessObjectData, StorageUnit storageUnit, String s3KeyPrefix)", "testcase": false, "constructor": false, "invocations": ["setNamespace", "getNamespace", "setBusinessObjectDefinitionName", "getBusinessObjectDefinitionName", "setBusinessObjectFormatUsage", "getBusinessObjectFormatUsage", "setBusinessObjectFormatFileType", "getBusinessObjectFormatFileType", "setBusinessObjectFormatVersion", "valueOf", "getBusinessObjectFormatVersion", "setPartitionKey", "getPartitionKey", "setPartitionValue", "getPartitionValue", "setSubPartitionValues", "getSubPartitionValues", "setBusinessObjectDataVersion", "valueOf", "getVersion", "setStorageName", "getName", "getStorage", "setManifestFiles", "isEmpty", "getStorageFiles", "getStorageFiles", "add", "setFileName", "replace", "getFilePath", "setFileSizeBytes", "getFileSizeBytes", "setRowCount", "getRowCount", "isEmpty", "getAttributes", "getAttributes", "put", "getName", "getValue", "setAttributes", "setBusinessObjectDataParents", "getBusinessObjectDataParents", "setBusinessObjectDataChildren", "getBusinessObjectDataChildren"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}