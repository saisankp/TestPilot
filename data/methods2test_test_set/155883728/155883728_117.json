{"test_class": {"identifier": "WebsterPrivilegesTargetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final File testOutDir = new File(\"target/test-out/WebsterPrivilegesTargetTest\");", "modifier": "final", "type": "File", "declarator": "testOutDir = new File(\"target/test-out/WebsterPrivilegesTargetTest\")", "var_name": "testOutDir"}], "file": "webster/src/test/java/net/adamcin/oakpal/webster/targets/WebsterPrivilegesTargetTest.java"}, "test_case": {"identifier": "testConstruct", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstruct() throws Exception {\n        final File targetFile = new File(testOutDir, \"testConstruct.xml\");\n        final File writeBack = new File(testOutDir, \"testConstruct_writeback\");\n        if (targetFile.exists()) {\n            targetFile.delete();\n        }\n        if (writeBack.exists()) {\n            FileUtils.deleteDirectory(writeBack);\n        }\n        OakMachine.Builder builder = TestUtil.fromPlan(obj().get());\n        WebsterPrivilegesTarget target = new WebsterPrivilegesTarget(targetFile);\n        target.setArchive(new FileArchive(new File(\"src/test/resources/filevault/onePrivRef\")), writeBack);\n        builder.build().initAndInspect(target::perform);\n\n        assertFileContains(targetFile, \"<privileges/>\");\n    }", "signature": "void testConstruct()", "full_signature": "@Test public void testConstruct()", "class_method_signature": "WebsterPrivilegesTargetTest.testConstruct()", "testcase": true, "constructor": false, "invocations": ["exists", "delete", "exists", "deleteDirectory", "fromPlan", "get", "obj", "setArchive", "initAndInspect", "build", "assertFileContains"]}, "focal_class": {"identifier": "WebsterPrivilegesTarget", "superclass": "", "interfaces": "implements WebsterTarget, ArchiveAware", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(WebsterPrivilegesTarget.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(WebsterPrivilegesTarget.class)", "var_name": "LOGGER"}, {"original_string": "private File targetFile;", "modifier": "private", "type": "File", "declarator": "targetFile", "var_name": "targetFile"}, {"original_string": "private Archive archive;", "modifier": "private", "type": "Archive", "declarator": "archive", "var_name": "archive"}, {"original_string": "private File writeBackDir;", "modifier": "private", "type": "File", "declarator": "writeBackDir", "var_name": "writeBackDir"}], "methods": [{"identifier": "WebsterPrivilegesTarget", "parameters": "(final File targetFile)", "modifiers": "", "return": "", "signature": " WebsterPrivilegesTarget(final File targetFile)", "full_signature": "  WebsterPrivilegesTarget(final File targetFile)", "class_method_signature": "WebsterPrivilegesTarget.WebsterPrivilegesTarget(final File targetFile)", "testcase": false, "constructor": true}, {"identifier": "setArchive", "parameters": "(final Archive archive, final File writeBackDir)", "modifiers": "@Override public", "return": "void", "signature": "void setArchive(final Archive archive, final File writeBackDir)", "full_signature": "@Override public void setArchive(final Archive archive, final File writeBackDir)", "class_method_signature": "WebsterPrivilegesTarget.setArchive(final Archive archive, final File writeBackDir)", "testcase": false, "constructor": false}, {"identifier": "perform", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void perform(final Session session)", "full_signature": "@Override public void perform(final Session session)", "class_method_signature": "WebsterPrivilegesTarget.perform(final Session session)", "testcase": false, "constructor": false}], "file": "webster/src/main/java/net/adamcin/oakpal/webster/targets/WebsterPrivilegesTarget.java"}, "focal_method": {"identifier": "setArchive", "parameters": "(final Archive archive, final File writeBackDir)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setArchive(final Archive archive, final File writeBackDir) {\n        this.archive = archive;\n        this.writeBackDir = writeBackDir;\n    }", "signature": "void setArchive(final Archive archive, final File writeBackDir)", "full_signature": "@Override public void setArchive(final Archive archive, final File writeBackDir)", "class_method_signature": "WebsterPrivilegesTarget.setArchive(final Archive archive, final File writeBackDir)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}