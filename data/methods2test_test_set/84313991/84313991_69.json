{"test_class": {"identifier": "StandardPseudoIdentifierFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "css-frontend/src/test/java/org/sonar/css/model/pseudo/pseudoidentifier/StandardPseudoIdentifierFactoryTest.java"}, "test_case": {"identifier": "should_return_a_valid_first_line_pseudo_identifier_object_mix_uppercase_lowercase_test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void should_return_a_valid_first_line_pseudo_identifier_object_mix_uppercase_lowercase_test() {\n    StandardPseudoIdentifier identifier = StandardPseudoIdentifierFactory.getByName(\"FIRSt-LINE\");\n    assertEquals(FirstLine.class, identifier.getClass());\n    assertEquals(identifier.getName(), \"first-line\");\n    assertEquals(identifier.getLinks().size(), 1);\n    assertEquals(identifier.getLinks().get(0), \"https://drafts.csswg.org/css-pseudo-4/#first-line-pseudo\");\n    assertEquals(identifier.isExperimental(), false);\n    assertEquals(identifier.isObsolete(), false);\n  }", "signature": "void should_return_a_valid_first_line_pseudo_identifier_object_mix_uppercase_lowercase_test()", "full_signature": "@Test public void should_return_a_valid_first_line_pseudo_identifier_object_mix_uppercase_lowercase_test()", "class_method_signature": "StandardPseudoIdentifierFactoryTest.should_return_a_valid_first_line_pseudo_identifier_object_mix_uppercase_lowercase_test()", "testcase": true, "constructor": false, "invocations": ["getByName", "assertEquals", "getClass", "assertEquals", "getName", "assertEquals", "size", "getLinks", "assertEquals", "get", "getLinks", "assertEquals", "isExperimental", "assertEquals", "isObsolete"]}, "focal_class": {"identifier": "StandardPseudoIdentifierFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<Class> ALL_PSEUDO_IDENTIFIER_CLASSES = ImmutableSet.of(\n    Active.class,\n    After.class,\n    AnyLink.class,\n    Backdrop.class,\n    Before.class,\n    Blank.class,\n    Checked.class,\n    Current.class,\n    Default.class,\n    Disabled.class,\n    Drop.class,\n    Empty.class,\n    Enabled.class,\n    First.class,\n    FirstChild.class,\n    FirstLetter.class,\n    FirstLine.class,\n    FirstOfType.class,\n    Focus.class,\n    FocusWithin.class,\n    Fullscreen.class,\n    Future.class,\n    GrammarError.class,\n    Hover.class,\n    InactiveSelection.class,\n    Indeterminate.class,\n    InRange.class,\n    Invalid.class,\n    LastChild.class,\n    LastOfType.class,\n    Left.class,\n    Link.class,\n    Marker.class,\n    OnlyChild.class,\n    OnlyOfType.class,\n    Optional.class,\n    OutOfRange.class,\n    Past.class,\n    Paused.class,\n    Placeholder.class,\n    PlaceholderShown.class,\n    Playing.class,\n    ReadOnly.class,\n    ReadWrite.class,\n    Required.class,\n    Right.class,\n    Root.class,\n    Scope.class,\n    Selection.class,\n    SpellingError.class,\n    Target.class,\n    UserInvalid.class,\n    Valid.class,\n    Visited.class);", "modifier": "private static final", "type": "Set<Class>", "declarator": "ALL_PSEUDO_IDENTIFIER_CLASSES = ImmutableSet.of(\n    Active.class,\n    After.class,\n    AnyLink.class,\n    Backdrop.class,\n    Before.class,\n    Blank.class,\n    Checked.class,\n    Current.class,\n    Default.class,\n    Disabled.class,\n    Drop.class,\n    Empty.class,\n    Enabled.class,\n    First.class,\n    FirstChild.class,\n    FirstLetter.class,\n    FirstLine.class,\n    FirstOfType.class,\n    Focus.class,\n    FocusWithin.class,\n    Fullscreen.class,\n    Future.class,\n    GrammarError.class,\n    Hover.class,\n    InactiveSelection.class,\n    Indeterminate.class,\n    InRange.class,\n    Invalid.class,\n    LastChild.class,\n    LastOfType.class,\n    Left.class,\n    Link.class,\n    Marker.class,\n    OnlyChild.class,\n    OnlyOfType.class,\n    Optional.class,\n    OutOfRange.class,\n    Past.class,\n    Paused.class,\n    Placeholder.class,\n    PlaceholderShown.class,\n    Playing.class,\n    ReadOnly.class,\n    ReadWrite.class,\n    Required.class,\n    Right.class,\n    Root.class,\n    Scope.class,\n    Selection.class,\n    SpellingError.class,\n    Target.class,\n    UserInvalid.class,\n    Valid.class,\n    Visited.class)", "var_name": "ALL_PSEUDO_IDENTIFIER_CLASSES"}, {"original_string": "private static final Map<String, StandardPseudoIdentifier> ALL = new HashMap<>();", "modifier": "private static final", "type": "Map<String, StandardPseudoIdentifier>", "declarator": "ALL = new HashMap<>()", "var_name": "ALL"}], "methods": [{"identifier": "StandardPseudoIdentifierFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " StandardPseudoIdentifierFactory()", "full_signature": "private  StandardPseudoIdentifierFactory()", "class_method_signature": "StandardPseudoIdentifierFactory.StandardPseudoIdentifierFactory()", "testcase": false, "constructor": true}, {"identifier": "getByName", "parameters": "(String identifier)", "modifiers": "public static", "return": "StandardPseudoIdentifier", "signature": "StandardPseudoIdentifier getByName(String identifier)", "full_signature": "public static StandardPseudoIdentifier getByName(String identifier)", "class_method_signature": "StandardPseudoIdentifierFactory.getByName(String identifier)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public static", "return": "List<StandardPseudoIdentifier>", "signature": "List<StandardPseudoIdentifier> getAll()", "full_signature": "public static List<StandardPseudoIdentifier> getAll()", "class_method_signature": "StandardPseudoIdentifierFactory.getAll()", "testcase": false, "constructor": false}], "file": "css-frontend/src/main/java/org/sonar/css/model/pseudo/pseudoidentifier/StandardPseudoIdentifierFactory.java"}, "focal_method": {"identifier": "getByName", "parameters": "(String identifier)", "modifiers": "public static", "return": "StandardPseudoIdentifier", "body": "public static StandardPseudoIdentifier getByName(String identifier) {\n    StandardPseudoIdentifier standardPseudoIdentifier = ALL.get(identifier.toLowerCase(Locale.ENGLISH));\n    return standardPseudoIdentifier != null ? standardPseudoIdentifier : new UnknownPseudoIdentifier(identifier);\n  }", "signature": "StandardPseudoIdentifier getByName(String identifier)", "full_signature": "public static StandardPseudoIdentifier getByName(String identifier)", "class_method_signature": "StandardPseudoIdentifierFactory.getByName(String identifier)", "testcase": false, "constructor": false, "invocations": ["get", "toLowerCase"]}, "repository": {"repo_id": 84313991, "url": "https://github.com/kalidasya/sonar-css-plugin", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 5062, "license": "licensed"}}