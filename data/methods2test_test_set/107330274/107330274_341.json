{"test_class": {"identifier": "AgentContainerLimitSystemConstraintTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SchedulerConfiguration schedulerConfiguration = mock(SchedulerConfiguration.class);", "modifier": "private final", "type": "SchedulerConfiguration", "declarator": "schedulerConfiguration = mock(SchedulerConfiguration.class)", "var_name": "schedulerConfiguration"}, {"original_string": "private final AgentContainerLimitSystemConstraint constraint = new AgentContainerLimitSystemConstraint(schedulerConfiguration);", "modifier": "private final", "type": "AgentContainerLimitSystemConstraint", "declarator": "constraint = new AgentContainerLimitSystemConstraint(schedulerConfiguration)", "var_name": "constraint"}, {"original_string": "private final TaskTrackerState taskTrackerState = mock(TaskTrackerState.class);", "modifier": "private final", "type": "TaskTrackerState", "declarator": "taskTrackerState = mock(TaskTrackerState.class)", "var_name": "taskTrackerState"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/scheduler/constraint/AgentContainerLimitSystemConstraintTest.java"}, "test_case": {"identifier": "testAtLeastOneContainerCanBeScheduled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAtLeastOneContainerCanBeScheduled() {\n        when(schedulerConfiguration.getMaxLaunchingTasksPerMachine()).thenReturn(0);\n        ConstraintEvaluator.Result result = constraint.evaluate(\n                createTaskRequest(TASK_ID),\n                createVirtualMachineCurrentStateMock(INSTANCE_ID, Collections.emptyList(), Collections.emptyList()),\n                taskTrackerState);\n        assertThat(result.isSuccessful()).isTrue();\n    }", "signature": "void testAtLeastOneContainerCanBeScheduled()", "full_signature": "@Test public void testAtLeastOneContainerCanBeScheduled()", "class_method_signature": "AgentContainerLimitSystemConstraintTest.testAtLeastOneContainerCanBeScheduled()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getMaxLaunchingTasksPerMachine", "evaluate", "createTaskRequest", "createVirtualMachineCurrentStateMock", "emptyList", "emptyList", "isTrue", "assertThat", "isSuccessful"]}, "focal_class": {"identifier": "AgentContainerLimitSystemConstraint", "superclass": "", "interfaces": "implements SystemConstraint", "fields": [{"original_string": "public static final String NAME = AgentContainerLimitSystemConstraint.class.getSimpleName();", "modifier": "public static final", "type": "String", "declarator": "NAME = AgentContainerLimitSystemConstraint.class.getSimpleName()", "var_name": "NAME"}, {"original_string": "private static final Result VALID = new Result(true, \"\");", "modifier": "private static final", "type": "Result", "declarator": "VALID = new Result(true, \"\")", "var_name": "VALID"}, {"original_string": "private static final Result TOO_MANY_CONTAINERS = new Result(false, \"Too many containers on the agent node\");", "modifier": "private static final", "type": "Result", "declarator": "TOO_MANY_CONTAINERS = new Result(false, \"Too many containers on the agent node\")", "var_name": "TOO_MANY_CONTAINERS"}, {"original_string": "private final SchedulerConfiguration configuration;", "modifier": "private final", "type": "SchedulerConfiguration", "declarator": "configuration", "var_name": "configuration"}], "methods": [{"identifier": "AgentContainerLimitSystemConstraint", "parameters": "(SchedulerConfiguration configuration)", "modifiers": "@Inject public", "return": "", "signature": " AgentContainerLimitSystemConstraint(SchedulerConfiguration configuration)", "full_signature": "@Inject public  AgentContainerLimitSystemConstraint(SchedulerConfiguration configuration)", "class_method_signature": "AgentContainerLimitSystemConstraint.AgentContainerLimitSystemConstraint(SchedulerConfiguration configuration)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "AgentContainerLimitSystemConstraint.getName()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "modifiers": "@Override public", "return": "Result", "signature": "Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "full_signature": "@Override public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "class_method_signature": "AgentContainerLimitSystemConstraint.evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "testcase": false, "constructor": false}, {"identifier": "isAgentContainerLimitSystemConstraint", "parameters": "(String reason)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAgentContainerLimitSystemConstraint(String reason)", "full_signature": "public static boolean isAgentContainerLimitSystemConstraint(String reason)", "class_method_signature": "AgentContainerLimitSystemConstraint.isAgentContainerLimitSystemConstraint(String reason)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/constraint/AgentContainerLimitSystemConstraint.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "modifiers": "@Override public", "return": "Result", "body": "@Override\n    public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState) {\n        int total = targetVM.getRunningTasks().size() + targetVM.getTasksCurrentlyAssigned().size();\n        int max = Math.max(1, configuration.getMaxTasksPerMachine());\n        return total < max ? VALID : TOO_MANY_CONTAINERS;\n    }", "signature": "Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "full_signature": "@Override public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "class_method_signature": "AgentContainerLimitSystemConstraint.evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState)", "testcase": false, "constructor": false, "invocations": ["size", "getRunningTasks", "size", "getTasksCurrentlyAssigned", "max", "getMaxTasksPerMachine"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}