{"test_class": {"identifier": "LocationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int TEST_VALUE = 10;", "modifier": "private static final", "type": "int", "declarator": "TEST_VALUE = 10", "var_name": "TEST_VALUE"}, {"original_string": "private static final double EPSILON = 0.0001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0001", "var_name": "EPSILON"}], "file": "worldedit-core/src/test/java/com/sk89q/worldedit/util/LocationTest.java"}, "test_case": {"identifier": "testGetWorld", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetWorld() throws Exception {\n        World world = mock(World.class);\n        Location location = new Location(world);\n        assertEquals(world, location.getExtent());\n    }", "signature": "void testGetWorld()", "full_signature": "@Test public void testGetWorld()", "class_method_signature": "LocationTest.testGetWorld()", "testcase": true, "constructor": false, "invocations": ["mock", "assertEquals", "getExtent"]}, "focal_class": {"identifier": "Location", "superclass": "extends Vector3Impl", "interfaces": "", "fields": [{"original_string": "private final Extent extent;", "modifier": "private final", "type": "Extent", "declarator": "extent", "var_name": "extent"}, {"original_string": "private final float pitch;", "modifier": "private final", "type": "float", "declarator": "pitch", "var_name": "pitch"}, {"original_string": "private final float yaw;", "modifier": "private final", "type": "float", "declarator": "yaw", "var_name": "yaw"}], "methods": [{"identifier": "Location", "parameters": "(Extent extent)", "modifiers": "public", "return": "", "signature": " Location(Extent extent)", "full_signature": "public  Location(Extent extent)", "class_method_signature": "Location.Location(Extent extent)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, double x, double y, double z)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, double x, double y, double z)", "full_signature": "public  Location(Extent extent, double x, double y, double z)", "class_method_signature": "Location.Location(Extent extent, double x, double y, double z)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, Vector3 position)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, Vector3 position)", "full_signature": "public  Location(Extent extent, Vector3 position)", "class_method_signature": "Location.Location(Extent extent, Vector3 position)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, double x, double y, double z, Vector3 direction)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, double x, double y, double z, Vector3 direction)", "full_signature": "public  Location(Extent extent, double x, double y, double z, Vector3 direction)", "class_method_signature": "Location.Location(Extent extent, double x, double y, double z, Vector3 direction)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, double x, double y, double z, float yaw, float pitch)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, double x, double y, double z, float yaw, float pitch)", "full_signature": "public  Location(Extent extent, double x, double y, double z, float yaw, float pitch)", "class_method_signature": "Location.Location(Extent extent, double x, double y, double z, float yaw, float pitch)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, Vector3 position, Vector3 direction)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, Vector3 position, Vector3 direction)", "full_signature": "public  Location(Extent extent, Vector3 position, Vector3 direction)", "class_method_signature": "Location.Location(Extent extent, Vector3 position, Vector3 direction)", "testcase": false, "constructor": true}, {"identifier": "Location", "parameters": "(Extent extent, Vector3 position, float yaw, float pitch)", "modifiers": "public", "return": "", "signature": " Location(Extent extent, Vector3 position, float yaw, float pitch)", "full_signature": "public  Location(Extent extent, Vector3 position, float yaw, float pitch)", "class_method_signature": "Location.Location(Extent extent, Vector3 position, float yaw, float pitch)", "testcase": false, "constructor": true}, {"identifier": "getExtent", "parameters": "()", "modifiers": "public", "return": "Extent", "signature": "Extent getExtent()", "full_signature": "public Extent getExtent()", "class_method_signature": "Location.getExtent()", "testcase": false, "constructor": false}, {"identifier": "setExtent", "parameters": "(Extent extent)", "modifiers": "public", "return": "Location", "signature": "Location setExtent(Extent extent)", "full_signature": "public Location setExtent(Extent extent)", "class_method_signature": "Location.setExtent(Extent extent)", "testcase": false, "constructor": false}, {"identifier": "getYaw", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getYaw()", "full_signature": "public float getYaw()", "class_method_signature": "Location.getYaw()", "testcase": false, "constructor": false}, {"identifier": "setYaw", "parameters": "(float yaw)", "modifiers": "public", "return": "Location", "signature": "Location setYaw(float yaw)", "full_signature": "public Location setYaw(float yaw)", "class_method_signature": "Location.setYaw(float yaw)", "testcase": false, "constructor": false}, {"identifier": "getPitch", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getPitch()", "full_signature": "public float getPitch()", "class_method_signature": "Location.getPitch()", "testcase": false, "constructor": false}, {"identifier": "setPitch", "parameters": "(float pitch)", "modifiers": "public", "return": "Location", "signature": "Location setPitch(float pitch)", "full_signature": "public Location setPitch(float pitch)", "class_method_signature": "Location.setPitch(float pitch)", "testcase": false, "constructor": false}, {"identifier": "setDirection", "parameters": "(float yaw, float pitch)", "modifiers": "public", "return": "Location", "signature": "Location setDirection(float yaw, float pitch)", "full_signature": "public Location setDirection(float yaw, float pitch)", "class_method_signature": "Location.setDirection(float yaw, float pitch)", "testcase": false, "constructor": false}, {"identifier": "getDirection", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 getDirection()", "full_signature": "public Vector3 getDirection()", "class_method_signature": "Location.getDirection()", "testcase": false, "constructor": false}, {"identifier": "getDirectionEnum", "parameters": "()", "modifiers": "public", "return": "Direction", "signature": "Direction getDirectionEnum()", "full_signature": "public Direction getDirectionEnum()", "class_method_signature": "Location.getDirectionEnum()", "testcase": false, "constructor": false}, {"identifier": "setDirection", "parameters": "(Vector3 direction)", "modifiers": "public", "return": "Location", "signature": "Location setDirection(Vector3 direction)", "full_signature": "public Location setDirection(Vector3 direction)", "class_method_signature": "Location.setDirection(Vector3 direction)", "testcase": false, "constructor": false}, {"identifier": "toVector", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 toVector()", "full_signature": "public Vector3 toVector()", "class_method_signature": "Location.toVector()", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(double x)", "modifiers": "public", "return": "Location", "signature": "Location setX(double x)", "full_signature": "public Location setX(double x)", "class_method_signature": "Location.setX(double x)", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(double y)", "modifiers": "public", "return": "Location", "signature": "Location setY(double y)", "full_signature": "public Location setY(double y)", "class_method_signature": "Location.setY(double y)", "testcase": false, "constructor": false}, {"identifier": "setZ", "parameters": "(double z)", "modifiers": "public", "return": "Location", "signature": "Location setZ(double z)", "full_signature": "public Location setZ(double z)", "class_method_signature": "Location.setZ(double z)", "testcase": false, "constructor": false}, {"identifier": "setPosition", "parameters": "(Vector3 position)", "modifiers": "public", "return": "Location", "signature": "Location setPosition(Vector3 position)", "full_signature": "public Location setPosition(Vector3 position)", "class_method_signature": "Location.setPosition(Vector3 position)", "testcase": false, "constructor": false}, {"identifier": "clampY", "parameters": "(int min, int max)", "modifiers": "@Override public", "return": "Location", "signature": "Location clampY(int min, int max)", "full_signature": "@Override public Location clampY(int min, int max)", "class_method_signature": "Location.clampY(int min, int max)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Location.equals(Object o)", "testcase": false, "constructor": false}], "file": "worldedit-core/src/main/java/com/sk89q/worldedit/util/Location.java"}, "focal_method": {"identifier": "getExtent", "parameters": "()", "modifiers": "public", "return": "Extent", "body": "public Extent getExtent() {\n        return extent;\n    }", "signature": "Extent getExtent()", "full_signature": "public Extent getExtent()", "class_method_signature": "Location.getExtent()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 162610309, "url": "https://github.com/IntellectualSites/FastAsyncWorldEdit-1.13", "stars": 52, "created": "12/20/2018 5:22:31 PM +00:00", "updates": "2020-01-26T18:10:28+00:00", "fork": "False", "license": "licensed"}}