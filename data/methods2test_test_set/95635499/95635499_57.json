{"test_class": {"identifier": "HOMERLeafTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int LABEL_INDEX = 1;", "modifier": "private static final", "type": "int", "declarator": "LABEL_INDEX = 1", "var_name": "LABEL_INDEX"}, {"original_string": "private static HOMERLeaf leaf;", "modifier": "private static", "type": "HOMERLeaf", "declarator": "leaf", "var_name": "leaf"}], "file": "JAICore/jaicore-ml-meka/src/test/java/ai/libs/jaicore/ml/classification/multilabel/learner/homer/HOMERLeafTest.java"}, "test_case": {"identifier": "testGetLabels", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetLabels() {\n\t\tCollection<Integer> col = leaf.getLabels();\n\t\tassertEquals(\"Size must be 1\", 1, col.size());\n\t\tassertTrue(\"Must contain the label index itself\", col.contains(LABEL_INDEX));\n\t}", "signature": "void testGetLabels()", "full_signature": "@Test public void testGetLabels()", "class_method_signature": "HOMERLeafTest.testGetLabels()", "testcase": true, "constructor": false, "invocations": ["getLabels", "assertEquals", "size", "assertTrue", "contains"]}, "focal_class": {"identifier": "HOMERLeaf", "superclass": "extends HOMERNode", "interfaces": "", "fields": [{"original_string": "private Integer label;", "modifier": "private", "type": "Integer", "declarator": "label", "var_name": "label"}], "methods": [{"identifier": "HOMERLeaf", "parameters": "(final Integer label)", "modifiers": "public", "return": "", "signature": " HOMERLeaf(final Integer label)", "full_signature": "public  HOMERLeaf(final Integer label)", "class_method_signature": "HOMERLeaf.HOMERLeaf(final Integer label)", "testcase": false, "constructor": true}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<HOMERNode>", "signature": "List<HOMERNode> getChildren()", "full_signature": "@Override public List<HOMERNode> getChildren()", "class_method_signature": "HOMERLeaf.getChildren()", "testcase": false, "constructor": false}, {"identifier": "isLeaf", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLeaf()", "full_signature": "@Override public boolean isLeaf()", "class_method_signature": "HOMERLeaf.isLeaf()", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Integer>", "signature": "Collection<Integer> getLabels()", "full_signature": "@Override public Collection<Integer> getLabels()", "class_method_signature": "HOMERLeaf.getLabels()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HOMERLeaf.toString()", "testcase": false, "constructor": false}], "file": "JAICore/jaicore-ml-meka/src/main/java/ai/libs/jaicore/ml/classification/multilabel/learner/homer/HOMERLeaf.java"}, "focal_method": {"identifier": "getLabels", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Integer>", "body": "@Override\n\tpublic Collection<Integer> getLabels() {\n\t\treturn Arrays.asList(this.label);\n\t}", "signature": "Collection<Integer> getLabels()", "full_signature": "@Override public Collection<Integer> getLabels()", "class_method_signature": "HOMERLeaf.getLabels()", "testcase": false, "constructor": false, "invocations": ["asList"]}, "repository": {"repo_id": 95635499, "url": "https://github.com/fmohr/AILibs", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 25, "size": 155873, "license": "licensed"}}