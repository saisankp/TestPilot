{"test_class": {"identifier": "TimestampFinderTest", "superclass": "", "interfaces": "", "fields": [], "file": "tycho-packaging-plugin/src/test/java/org/eclipse/tycho/buildversion/TimestampFinderTest.java"}, "test_case": {"identifier": "testFindInString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindInString() throws Exception {\n        TimestampFinder finder = new TimestampFinder();\n\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"N201205062200\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"I201205062200\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"R201205062200\"));\n\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"N20120506-2200\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"I20120506-2200\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"R20120506-2200\"));\n\n        assertEquals(utcTimestamp(2012, 05, 06, 00, 00), finder.findInString(\"N20120506\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 00, 00), finder.findInString(\"I20120506\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 00, 00), finder.findInString(\"R20120506\"));\n\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"v201205062200\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"v20120506-2200\"));\n\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"20120506220000\"));\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00), finder.findInString(\"20120506-220000\"));\n\n        assertEquals(utcTimestamp(2012, 05, 06, 22, 00),\n                finder.findInString(\"scdasdcasdc.sd0320-sdva-201205062200-dscsadvj0239inacslj\"));\n    }", "signature": "void testFindInString()", "full_signature": "@Test public void testFindInString()", "class_method_signature": "TimestampFinderTest.testFindInString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString", "assertEquals", "utcTimestamp", "findInString"]}, "focal_class": {"identifier": "TimestampFinder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<SimpleDateFormat, Pattern> datePatternsByRegularExpressions;", "modifier": "private final", "type": "Map<SimpleDateFormat, Pattern>", "declarator": "datePatternsByRegularExpressions", "var_name": "datePatternsByRegularExpressions"}], "methods": [{"identifier": "defaultPatterns", "parameters": "()", "modifiers": "private static", "return": "Map<SimpleDateFormat, Pattern>", "signature": "Map<SimpleDateFormat, Pattern> defaultPatterns()", "full_signature": "private static Map<SimpleDateFormat, Pattern> defaultPatterns()", "class_method_signature": "TimestampFinder.defaultPatterns()", "testcase": false, "constructor": false}, {"identifier": "utcFormat", "parameters": "(String pattern)", "modifiers": "private static", "return": "SimpleDateFormat", "signature": "SimpleDateFormat utcFormat(String pattern)", "full_signature": "private static SimpleDateFormat utcFormat(String pattern)", "class_method_signature": "TimestampFinder.utcFormat(String pattern)", "testcase": false, "constructor": false}, {"identifier": "TimestampFinder", "parameters": "()", "modifiers": "public", "return": "", "signature": " TimestampFinder()", "full_signature": "public  TimestampFinder()", "class_method_signature": "TimestampFinder.TimestampFinder()", "testcase": false, "constructor": true}, {"identifier": "findInString", "parameters": "(String string)", "modifiers": "public", "return": "Date", "signature": "Date findInString(String string)", "full_signature": "public Date findInString(String string)", "class_method_signature": "TimestampFinder.findInString(String string)", "testcase": false, "constructor": false}, {"identifier": "parseTimestamp", "parameters": "(String timestampString, SimpleDateFormat format)", "modifiers": "private", "return": "Date", "signature": "Date parseTimestamp(String timestampString, SimpleDateFormat format)", "full_signature": "private Date parseTimestamp(String timestampString, SimpleDateFormat format)", "class_method_signature": "TimestampFinder.parseTimestamp(String timestampString, SimpleDateFormat format)", "testcase": false, "constructor": false}], "file": "tycho-packaging-plugin/src/main/java/org/eclipse/tycho/buildversion/TimestampFinder.java"}, "focal_method": {"identifier": "findInString", "parameters": "(String string)", "modifiers": "public", "return": "Date", "body": "public Date findInString(String string) {\n        for (Entry<SimpleDateFormat, Pattern> e : datePatternsByRegularExpressions.entrySet()) {\n            Matcher matcher = e.getValue().matcher(string);\n            if (matcher.find()) {\n                String group = matcher.group();\n                Date timestamp = parseTimestamp(group, e.getKey());\n                if (timestamp != null)\n                    return timestamp;\n            }\n        }\n        return null;\n    }", "signature": "Date findInString(String string)", "full_signature": "public Date findInString(String string)", "class_method_signature": "TimestampFinder.findInString(String string)", "testcase": false, "constructor": false, "invocations": ["entrySet", "matcher", "getValue", "find", "group", "parseTimestamp", "getKey"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}