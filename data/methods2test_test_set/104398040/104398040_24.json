{"test_class": {"identifier": "TransformationUtilityTest", "superclass": "extends TestHelper", "interfaces": "", "fields": [], "file": "butterfly-extensions-api/src/test/java/com/paypal/butterfly/extensions/api/TransformationUtilityTest.java"}, "test_case": {"identifier": "getSimpleClassName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSimpleClassName() {\n        TransformationUtility transformationUtility = new SampleTransformationUtility();\n        assertEquals(transformationUtility.getSimpleClassName(), \"SampleTransformationUtility\");\n    }", "signature": "void getSimpleClassName()", "full_signature": "@Test public void getSimpleClassName()", "class_method_signature": "TransformationUtilityTest.getSimpleClassName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSimpleClassName"]}, "focal_class": {"identifier": "TransformationUtility", "superclass": "", "interfaces": "implements Cloneable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TransformationUtility.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TransformationUtility.class)", "var_name": "logger"}, {"original_string": "protected static final String UTILITY_NAME_SYNTAX = \"%s-%d-%s\";", "modifier": "protected static final", "type": "String", "declarator": "UTILITY_NAME_SYNTAX = \"%s-%d-%s\"", "var_name": "UTILITY_NAME_SYNTAX"}, {"original_string": "private int order = -1;", "modifier": "private", "type": "int", "declarator": "order = -1", "var_name": "order"}, {"original_string": "private TransformationUtilityParent parent;", "modifier": "private", "type": "TransformationUtilityParent", "declarator": "parent", "var_name": "parent"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String relativePath = \"\";", "modifier": "private", "type": "String", "declarator": "relativePath = \"\"", "var_name": "relativePath"}, {"original_string": "private File absoluteFile = null;", "modifier": "private", "type": "File", "declarator": "absoluteFile = null", "var_name": "absoluteFile"}, {"original_string": "private String absoluteFileFromContextAttribute = null;", "modifier": "private", "type": "String", "declarator": "absoluteFileFromContextAttribute = null", "var_name": "absoluteFileFromContextAttribute"}, {"original_string": "private String additionalRelativePath = null;", "modifier": "private", "type": "String", "declarator": "additionalRelativePath = null", "var_name": "additionalRelativePath"}, {"original_string": "private String contextAttributeName = null;", "modifier": "private", "type": "String", "declarator": "contextAttributeName = null", "var_name": "contextAttributeName"}, {"original_string": "private Map<String, String> latePropertiesAttributes = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "latePropertiesAttributes = new HashMap<>()", "var_name": "latePropertiesAttributes"}, {"original_string": "private Map<String, Method> latePropertiesSetters = new HashMap<>();", "modifier": "private", "type": "Map<String, Method>", "declarator": "latePropertiesSetters = new HashMap<>()", "var_name": "latePropertiesSetters"}, {"original_string": "private boolean abortOnFailure = false;", "modifier": "private", "type": "boolean", "declarator": "abortOnFailure = false", "var_name": "abortOnFailure"}, {"original_string": "private String abortionMessage;", "modifier": "private", "type": "String", "declarator": "abortionMessage", "var_name": "abortionMessage"}, {"original_string": "private boolean saveResult = true;", "modifier": "private", "type": "boolean", "declarator": "saveResult = true", "var_name": "saveResult"}, {"original_string": "private String[] dependencies = null;", "modifier": "private", "type": "String[]", "declarator": "dependencies = null", "var_name": "dependencies"}, {"original_string": "private String ifConditionAttributeName = null;", "modifier": "private", "type": "String", "declarator": "ifConditionAttributeName = null", "var_name": "ifConditionAttributeName"}, {"original_string": "private String unlessConditionAttributeName = null;", "modifier": "private", "type": "String", "declarator": "unlessConditionAttributeName = null", "var_name": "unlessConditionAttributeName"}, {"original_string": "private UtilityCondition utilityCondition = null;", "modifier": "private", "type": "UtilityCondition", "declarator": "utilityCondition = null", "var_name": "utilityCondition"}, {"original_string": "private AtomicBoolean hasBeenPerformed = new AtomicBoolean(false);", "modifier": "private", "type": "AtomicBoolean", "declarator": "hasBeenPerformed = new AtomicBoolean(false)", "var_name": "hasBeenPerformed"}], "methods": [{"identifier": "TransformationUtility", "parameters": "()", "modifiers": "@SuppressWarnings(\"PMD.UnnecessaryConstructor\") public", "return": "", "signature": " TransformationUtility()", "full_signature": "@SuppressWarnings(\"PMD.UnnecessaryConstructor\") public  TransformationUtility()", "class_method_signature": "TransformationUtility.TransformationUtility()", "testcase": false, "constructor": true}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "protected", "return": "T", "signature": "T setName(String name)", "full_signature": "protected T setName(String name)", "class_method_signature": "TransformationUtility.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getName()", "full_signature": "public final String getName()", "class_method_signature": "TransformationUtility.getName()", "testcase": false, "constructor": false}, {"identifier": "setContextAttributeName", "parameters": "(String contextAttributeName)", "modifiers": "public", "return": "T", "signature": "T setContextAttributeName(String contextAttributeName)", "full_signature": "public T setContextAttributeName(String contextAttributeName)", "class_method_signature": "TransformationUtility.setContextAttributeName(String contextAttributeName)", "testcase": false, "constructor": false}, {"identifier": "getContextAttributeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContextAttributeName()", "full_signature": "public String getContextAttributeName()", "class_method_signature": "TransformationUtility.getContextAttributeName()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(TransformationUtilityParent parent, int order)", "modifiers": "public final", "return": "T", "signature": "T setParent(TransformationUtilityParent parent, int order)", "full_signature": "public final T setParent(TransformationUtilityParent parent, int order)", "class_method_signature": "TransformationUtility.setParent(TransformationUtilityParent parent, int order)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "TransformationUtilityParent", "signature": "TransformationUtilityParent getParent()", "full_signature": "public TransformationUtilityParent getParent()", "class_method_signature": "TransformationUtility.getParent()", "testcase": false, "constructor": false}, {"identifier": "getTransformationTemplate", "parameters": "()", "modifiers": "public", "return": "TransformationTemplate", "signature": "TransformationTemplate getTransformationTemplate()", "full_signature": "public TransformationTemplate getTransformationTemplate()", "class_method_signature": "TransformationUtility.getTransformationTemplate()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getDescription()", "full_signature": "public abstract String getDescription()", "class_method_signature": "TransformationUtility.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOrder()", "full_signature": "public int getOrder()", "class_method_signature": "TransformationUtility.getOrder()", "testcase": false, "constructor": false}, {"identifier": "relative", "parameters": "(String relativePath)", "modifiers": "public final", "return": "T", "signature": "T relative(String relativePath)", "full_signature": "public final T relative(String relativePath)", "class_method_signature": "TransformationUtility.relative(String relativePath)", "testcase": false, "constructor": false}, {"identifier": "normalizeRelativePathSeparator", "parameters": "(String relativePath)", "modifiers": "protected static", "return": "String", "signature": "String normalizeRelativePathSeparator(String relativePath)", "full_signature": "protected static String normalizeRelativePathSeparator(String relativePath)", "class_method_signature": "TransformationUtility.normalizeRelativePathSeparator(String relativePath)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "()", "modifiers": "protected final", "return": "String", "signature": "String getRelativePath()", "full_signature": "protected final String getRelativePath()", "class_method_signature": "TransformationUtility.getRelativePath()", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteFile", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "protected final", "return": "File", "signature": "File getAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "protected final File getAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.getAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "setAbsoluteFile", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "private", "return": "void", "signature": "void setAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "private void setAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.setAbsoluteFile(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "setRelativePath", "parameters": "(File transformedAppFolder, File absoluteFile)", "modifiers": "private", "return": "void", "signature": "void setRelativePath(File transformedAppFolder, File absoluteFile)", "full_signature": "private void setRelativePath(File transformedAppFolder, File absoluteFile)", "class_method_signature": "TransformationUtility.setRelativePath(File transformedAppFolder, File absoluteFile)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "(File baselineFile, File targetFile)", "modifiers": "protected static", "return": "String", "signature": "String getRelativePath(File baselineFile, File targetFile)", "full_signature": "protected static String getRelativePath(File baselineFile, File targetFile)", "class_method_signature": "TransformationUtility.getRelativePath(File baselineFile, File targetFile)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String propertyName, String contextAttributeName)", "modifiers": "public final", "return": "T", "signature": "T set(String propertyName, String contextAttributeName)", "full_signature": "public final T set(String propertyName, String contextAttributeName)", "class_method_signature": "TransformationUtility.set(String propertyName, String contextAttributeName)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "(String propertyName)", "modifiers": "private", "return": "Method", "signature": "Method getMethod(String propertyName)", "full_signature": "private Method getMethod(String propertyName)", "class_method_signature": "TransformationUtility.getMethod(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "applyPropertiesFromContext", "parameters": "(TransformationContext transformationContext)", "modifiers": "protected final", "return": "void", "signature": "void applyPropertiesFromContext(TransformationContext transformationContext)", "full_signature": "protected final void applyPropertiesFromContext(TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.applyPropertiesFromContext(TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "getMethodName", "parameters": "(String propertyName)", "modifiers": "private", "return": "String", "signature": "String getMethodName(String propertyName)", "full_signature": "private String getMethodName(String propertyName)", "class_method_signature": "TransformationUtility.getMethodName(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(File file)", "modifiers": "", "return": "T", "signature": "T absolute(File file)", "full_signature": " T absolute(File file)", "class_method_signature": "TransformationUtility.absolute(File file)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(String contextAttributeName)", "modifiers": "public", "return": "T", "signature": "T absolute(String contextAttributeName)", "full_signature": "public T absolute(String contextAttributeName)", "class_method_signature": "TransformationUtility.absolute(String contextAttributeName)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(String contextAttributeName, String additionalRelativePath)", "modifiers": "public", "return": "T", "signature": "T absolute(String contextAttributeName, String additionalRelativePath)", "full_signature": "public T absolute(String contextAttributeName, String additionalRelativePath)", "class_method_signature": "TransformationUtility.absolute(String contextAttributeName, String additionalRelativePath)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteFileFromContextAttribute", "parameters": "()", "modifiers": "private final", "return": "String", "signature": "String getAbsoluteFileFromContextAttribute()", "full_signature": "private final String getAbsoluteFileFromContextAttribute()", "class_method_signature": "TransformationUtility.getAbsoluteFileFromContextAttribute()", "testcase": false, "constructor": false}, {"identifier": "perform", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@SuppressFBWarnings(\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\") public", "return": "PerformResult", "signature": "PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@SuppressFBWarnings(\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\") public PerformResult perform(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.perform(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "abortOnFailure", "parameters": "(boolean abort)", "modifiers": "public final", "return": "T", "signature": "T abortOnFailure(boolean abort)", "full_signature": "public final T abortOnFailure(boolean abort)", "class_method_signature": "TransformationUtility.abortOnFailure(boolean abort)", "testcase": false, "constructor": false}, {"identifier": "abortOnFailure", "parameters": "(String abortionMessage)", "modifiers": "public final", "return": "T", "signature": "T abortOnFailure(String abortionMessage)", "full_signature": "public final T abortOnFailure(String abortionMessage)", "class_method_signature": "TransformationUtility.abortOnFailure(String abortionMessage)", "testcase": false, "constructor": false}, {"identifier": "getAbortionMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAbortionMessage()", "full_signature": "public String getAbortionMessage()", "class_method_signature": "TransformationUtility.getAbortionMessage()", "testcase": false, "constructor": false}, {"identifier": "isAbortOnFailure", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isAbortOnFailure()", "full_signature": "public final boolean isAbortOnFailure()", "class_method_signature": "TransformationUtility.isAbortOnFailure()", "testcase": false, "constructor": false}, {"identifier": "isSaveResult", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSaveResult()", "full_signature": "public boolean isSaveResult()", "class_method_signature": "TransformationUtility.isSaveResult()", "testcase": false, "constructor": false}, {"identifier": "setSaveResult", "parameters": "(boolean saveResult)", "modifiers": "protected", "return": "T", "signature": "T setSaveResult(boolean saveResult)", "full_signature": "protected T setSaveResult(boolean saveResult)", "class_method_signature": "TransformationUtility.setSaveResult(boolean saveResult)", "testcase": false, "constructor": false}, {"identifier": "hasBeenPerformed", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean hasBeenPerformed()", "full_signature": "public final boolean hasBeenPerformed()", "class_method_signature": "TransformationUtility.hasBeenPerformed()", "testcase": false, "constructor": false}, {"identifier": "dependsOn", "parameters": "(String... dependencies)", "modifiers": "public final", "return": "T", "signature": "T dependsOn(String... dependencies)", "full_signature": "public final T dependsOn(String... dependencies)", "class_method_signature": "TransformationUtility.dependsOn(String... dependencies)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "protected final", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "protected final List<String> getDependencies()", "class_method_signature": "TransformationUtility.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "checkDependencies", "parameters": "(TransformationContext transformationContext)", "modifiers": "protected", "return": "Result", "signature": "Result checkDependencies(TransformationContext transformationContext)", "full_signature": "protected Result checkDependencies(TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.checkDependencies(TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "executeIf", "parameters": "(String conditionAttributeName)", "modifiers": "public final", "return": "T", "signature": "T executeIf(String conditionAttributeName)", "full_signature": "public final T executeIf(String conditionAttributeName)", "class_method_signature": "TransformationUtility.executeIf(String conditionAttributeName)", "testcase": false, "constructor": false}, {"identifier": "executeIf", "parameters": "(UtilityCondition utilityCondition)", "modifiers": "public final", "return": "T", "signature": "T executeIf(UtilityCondition utilityCondition)", "full_signature": "public final T executeIf(UtilityCondition utilityCondition)", "class_method_signature": "TransformationUtility.executeIf(UtilityCondition utilityCondition)", "testcase": false, "constructor": false}, {"identifier": "executeUnless", "parameters": "(String conditionAttributeName)", "modifiers": "public final", "return": "T", "signature": "T executeUnless(String conditionAttributeName)", "full_signature": "public final T executeUnless(String conditionAttributeName)", "class_method_signature": "TransformationUtility.executeUnless(String conditionAttributeName)", "testcase": false, "constructor": false}, {"identifier": "getIfConditionAttributeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfConditionAttributeName()", "full_signature": "public String getIfConditionAttributeName()", "class_method_signature": "TransformationUtility.getIfConditionAttributeName()", "testcase": false, "constructor": false}, {"identifier": "getUnlessConditionAttributeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUnlessConditionAttributeName()", "full_signature": "public String getUnlessConditionAttributeName()", "class_method_signature": "TransformationUtility.getUnlessConditionAttributeName()", "testcase": false, "constructor": false}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "protected abstract", "return": "ExecutionResult", "signature": "ExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "protected abstract ExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "TransformationUtility.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}, {"identifier": "isFileSet", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isFileSet()", "full_signature": "public final boolean isFileSet()", "class_method_signature": "TransformationUtility.isFileSet()", "testcase": false, "constructor": false}, {"identifier": "wasFileExplicitlySet", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean wasFileExplicitlySet()", "full_signature": "public final boolean wasFileExplicitlySet()", "class_method_signature": "TransformationUtility.wasFileExplicitlySet()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TransformationUtility.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T clone()", "full_signature": "@Override public T clone()", "class_method_signature": "TransformationUtility.clone()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T copy()", "full_signature": "public T copy()", "class_method_signature": "TransformationUtility.copy()", "testcase": false, "constructor": false}, {"identifier": "checkForBlankString", "parameters": "(String name, String value)", "modifiers": "protected static", "return": "void", "signature": "void checkForBlankString(String name, String value)", "full_signature": "protected static void checkForBlankString(String name, String value)", "class_method_signature": "TransformationUtility.checkForBlankString(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "checkForEmptyString", "parameters": "(String name, String value)", "modifiers": "protected static", "return": "void", "signature": "void checkForEmptyString(String name, String value)", "full_signature": "protected static void checkForEmptyString(String name, String value)", "class_method_signature": "TransformationUtility.checkForEmptyString(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "checkForNull", "parameters": "(String name, Object value)", "modifiers": "protected static", "return": "void", "signature": "void checkForNull(String name, Object value)", "full_signature": "protected static void checkForNull(String name, Object value)", "class_method_signature": "TransformationUtility.checkForNull(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override @SuppressWarnings(\"PMD.SimplifyBooleanReturns\") public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override @SuppressWarnings(\"PMD.SimplifyBooleanReturns\") public boolean equals(Object obj)", "class_method_signature": "TransformationUtility.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TransformationUtility.hashCode()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(int superHashCode, Object... elements)", "modifiers": "protected final", "return": "int", "signature": "int hashCode(int superHashCode, Object... elements)", "full_signature": "protected final int hashCode(int superHashCode, Object... elements)", "class_method_signature": "TransformationUtility.hashCode(int superHashCode, Object... elements)", "testcase": false, "constructor": false}, {"identifier": "getSimpleClassName", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSimpleClassName()", "full_signature": "protected String getSimpleClassName()", "class_method_signature": "TransformationUtility.getSimpleClassName()", "testcase": false, "constructor": false}], "file": "butterfly-extensions-api/src/main/java/com/paypal/butterfly/extensions/api/TransformationUtility.java"}, "focal_method": {"identifier": "getSimpleClassName", "parameters": "()", "modifiers": "protected", "return": "String", "body": "protected String getSimpleClassName() {\n        if (getClass().isAnonymousClass()) {\n            return \"AnonymousTransformationUtility\";\n        } else {\n            return getClass().getSimpleName();\n        }\n    }", "signature": "String getSimpleClassName()", "full_signature": "protected String getSimpleClassName()", "class_method_signature": "TransformationUtility.getSimpleClassName()", "testcase": false, "constructor": false, "invocations": ["isAnonymousClass", "getClass", "getSimpleName", "getClass"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}